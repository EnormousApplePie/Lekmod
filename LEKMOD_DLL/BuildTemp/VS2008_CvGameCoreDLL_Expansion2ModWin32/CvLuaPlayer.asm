; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	c:\Users\EnormousApplePie\Documents\GitHub\Lekmod\LEKMOD_DLL\CvGameCoreDLL_Expansion2\Lua\CvLuaPlayer.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?NO_QUEST_DATA@CvMinorCivQuest@@2HB		; CvMinorCivQuest::NO_QUEST_DATA
PUBLIC	?NO_TURN@CvMinorCivQuest@@2HB			; CvMinorCivQuest::NO_TURN
CONST	SEGMENT
$SG226963 DB	'InitCity', 00H
$SG230154 DB	00H
$SG230171 DB	00H
$SG230181 DB	00H
$SG226964 DB	'AcquireCity', 00H
$SG226965 DB	'KillCities', 00H
$SG230211 DB	00H
$SG226966 DB	'GetNewCityName', 00H
$SG230245 DB	00H
$SG226967 DB	'InitUnit', 00H
$SG230246 DB	00H
$SG230251 DB	00H
$SG230256 DB	00H
$SG226968 DB	'InitUnitWithNameOffset', 00H
$SG230261 DB	00H
$SG226969 DB	'DisbandUnit', 00H
$SG226970 DB	'AddFreeUnit', 00H
$SG226971 DB	'ChooseTech', 00H
$SG230262 DB	00H
$SG226972 DB	'KillUnits', 00H
$SG230267 DB	00H
$SG230272 DB	00H
$SG226973 DB	'IsHuman', 00H
$SG226974 DB	'IsBarbarian', 00H
$SG226975 DB	'GetName', 00H
$SG226976 DB	'GetNameKey', 00H
$SG230282 DB	00H
$SG226977 DB	'GetNickName', 00H
$SG226978 DB	'GetCivilizationDescription', 00H
$SG230306 DB	00H
$SG226979 DB	'GetCivilizationDescriptionKey', 00H
$SG230308 DB	00H
$SG230318 DB	00H
$SG226980 DB	'GetCivilizationShortDescription', 00H
$SG226981 DB	'GetCivilizationShortDescriptionKey', 00H
$SG230336 DB	00H
$SG226982 DB	'GetCivilizationAdjective', 00H
$SG230338 DB	00H
$SG230348 DB	00H
$SG230374 DB	00H
$SG226983 DB	'GetCivilizationAdjectiveKey', 00H
$SG226984 DB	'IsWhiteFlag', 00H
$SG226985 DB	'GetStateReligionName', 00H
$SG230375 DB	00H
$SG230380 DB	00H
$SG230385 DB	00H
$SG226986 DB	'GetStateReligionKey', 00H
$SG226987 DB	'GetWorstEnemyName', 00H
$SG230395 DB	00H
$SG230398 DB	00H
$SG226988 DB	'GetArtStyleType', 00H
$SG226989 DB	'CountCityFeatures', 00H
$SG230400 DB	00H
$SG236197 DB	00H
$SG226990 DB	'CountNumBuildings', 00H
	ORG $+2
$SG226991 DB	'GetNumWorldWonders', 00H
	ORG $+1
$SG226992 DB	'ChangeNumWorldWonders', 00H
	ORG $+2
$SG226993 DB	'GetNumWondersBeatenTo', 00H
	ORG $+2
$SG226994 DB	'SetNumWondersBeatenTo', 00H
	ORG $+2
$SG226995 DB	'IsCapitalConnectedToCity', 00H
	ORG $+3
$SG226996 DB	'IsTurnActive', 00H
	ORG $+3
$SG226997 DB	'IsSimultaneousTurns', 00H
$SG226998 DB	'FindNewCapital', 00H
	ORG $+1
$SG226999 DB	'CanRaze', 00H
$SG227000 DB	'Raze', 00H
	ORG $+3
$SG227001 DB	'Disband', 00H
$SG227002 DB	'CanReceiveGoody', 00H
$SG227003 DB	'ReceiveGoody', 00H
	ORG $+3
$SG227004 DB	'DoGoody', 00H
$SG227005 DB	'CanGetGoody', 00H
$SG227006 DB	'CanFound', 00H
	ORG $+3
$SG227007 DB	'Found', 00H
	ORG $+2
$SG227008 DB	'CanTrain', 00H
	ORG $+3
$SG227009 DB	'CanConstruct', 00H
	ORG $+3
$SG227010 DB	'CanCreate', 00H
	ORG $+2
$SG227011 DB	'CanPrepare', 00H
	ORG $+1
$SG227012 DB	'CanMaintain', 00H
$SG227013 DB	'IsCanPurchaseAnyCity', 00H
	ORG $+3
$SG227014 DB	'GetFaithPurchaseType', 00H
	ORG $+3
$SG227015 DB	'SetFaithPurchaseType', 00H
	ORG $+3
$SG227016 DB	'GetFaithPurchaseIndex', 00H
	ORG $+2
$SG227017 DB	'SetFaithPurchaseIndex', 00H
	ORG $+2
$SG227018 DB	'IsProductionMaxedUnitClass', 00H
	ORG $+1
$SG227019 DB	'IsProductionMaxedBuildingClass', 00H
	ORG $+1
$SG227020 DB	'IsProductionMaxedProject', 00H
	ORG $+3
$SG227021 DB	'GetUnitProductionNeeded', 00H
$SG227022 DB	'GetBuildingProductionNeeded', 00H
$SG227023 DB	'GetProjectProductionNeeded', 00H
	ORG $+1
$SG227024 DB	'HasReadyUnit', 00H
	ORG $+3
$SG227025 DB	'GetFirstReadyUnit', 00H
	ORG $+2
$SG227026 DB	'GetFirstReadyUnitPlot', 00H
	ORG $+2
$SG227027 DB	'HasBusyUnit', 00H
$SG227028 DB	'HasBusyMovingUnit', 00H
	ORG $+2
$SG227029 DB	'GetBuildingClassPrereqBuilding', 00H
	ORG $+1
$SG227030 DB	'RemoveBuildingClass', 00H
$SG227031 DB	'CanBuild', 00H
	ORG $+3
$SG227032 DB	'IsBuildBlockedByFeature', 00H
$SG227033 DB	'GetBestRoute', 00H
	ORG $+3
$SG227034 DB	'GetImprovementUpgradeRate', 00H
	ORG $+2
$SG227035 DB	'CalculateTotalYield', 00H
$SG227036 DB	'CalculateUnitCost', 00H
	ORG $+2
$SG227037 DB	'CalculateUnitSupply', 00H
$SG227038 DB	'GetNumMaintenanceFreeUnits', 00H
	ORG $+1
$SG227039 DB	'GetBuildingGoldMaintenance', 00H
	ORG $+1
$SG227040 DB	'SetBaseBuildingGoldMaintenance', 00H
	ORG $+1
$SG227041 DB	'ChangeBaseBuildingGoldMaintenance', 00H
	ORG $+2
$SG227042 DB	'GetImprovementGoldMaintenance', 00H
	ORG $+2
$SG227043 DB	'CalculateGoldRate', 00H
	ORG $+2
$SG227044 DB	'CalculateGoldRateTimes100', 00H
	ORG $+2
$SG227045 DB	'CalculateGrossGoldTimes100', 00H
	ORG $+1
$SG227046 DB	'CalculateInflatedCosts', 00H
	ORG $+1
$SG227047 DB	'CalculateResearchModifier', 00H
	ORG $+2
$SG227048 DB	'IsResearch', 00H
	ORG $+1
$SG227049 DB	'CanEverResearch', 00H
$SG227050 DB	'CanResearch', 00H
$SG227051 DB	'CanResearchForFree', 00H
	ORG $+1
$SG227052 DB	'GetCurrentResearch', 00H
	ORG $+1
$SG227053 DB	'IsCurrentResearchRepeat', 00H
$SG227054 DB	'IsNoResearchAvailable', 00H
	ORG $+2
$SG227055 DB	'GetResearchTurnsLeft', 00H
	ORG $+3
$SG227056 DB	'GetResearchCost', 00H
$SG227057 DB	'GetResearchProgress', 00H
$SG227058 DB	'UnitsRequiredForGoldenAge', 00H
	ORG $+2
$SG227059 DB	'UnitsGoldenAgeCapable', 00H
	ORG $+2
$SG227060 DB	'UnitsGoldenAgeReady', 00H
$SG227061 DB	'GreatGeneralThreshold', 00H
	ORG $+2
$SG227062 DB	'GreatAdmiralThreshold', 00H
	ORG $+2
$SG227063 DB	'SpecialistYield', 00H
$SG227064 DB	'SetGreatGeneralCombatBonus', 00H
	ORG $+1
$SG227065 DB	'GetGreatGeneralCombatBonus', 00H
	ORG $+1
$SG227066 DB	'GetStartingPlot', 00H
$SG227067 DB	'SetStartingPlot', 00H
$SG227068 DB	'GetTotalPopulation', 00H
	ORG $+1
$SG227069 DB	'GetAveragePopulation', 00H
	ORG $+3
$SG227070 DB	'GetRealPopulation', 00H
	ORG $+2
$SG227071 DB	'GetNewCityExtraPopulation', 00H
	ORG $+2
$SG227072 DB	'ChangeNewCityExtraPopulation', 00H
	ORG $+3
$SG227073 DB	'GetTotalLand', 00H
	ORG $+3
$SG227074 DB	'GetTotalLandScored', 00H
	ORG $+1
$SG227075 DB	'GetGold', 00H
$SG227076 DB	'SetGold', 00H
$SG227077 DB	'ChangeGold', 00H
	ORG $+1
$SG227078 DB	'CalculateGrossGold', 00H
	ORG $+1
$SG227079 DB	'GetLifetimeGrossGold', 00H
	ORG $+3
$SG227080 DB	'GetGoldFromCitiesTimes100', 00H
	ORG $+2
$SG227081 DB	'GetGoldFromCitiesMinusTradeRoutesTimes100', 00H
	ORG $+2
$SG227082 DB	'GetGoldPerTurnFromDiplomacy', 00H
$SG227083 DB	'GetCityConnectionRouteGoldTimes100', 00H
	ORG $+1
$SG227084 DB	'GetCityConnectionGold', 00H
	ORG $+2
$SG227085 DB	'GetCityConnectionGoldTimes100', 00H
	ORG $+2
$SG227086 DB	'GetGoldPerTurnFromReligion', 00H
	ORG $+1
$SG227087 DB	'GetGoldPerTurnFromTradeRoutes', 00H
	ORG $+2
$SG227088 DB	'GetGoldPerTurnFromTradeRoutesTimes100', 00H
	ORG $+2
$SG227089 DB	'GetGoldPerTurnFromTraits', 00H
	ORG $+3
$SG227090 DB	'GetTotalJONSCulturePerTurnTimes100', 00H
	ORG $+1
$SG227091 DB	'GetJONSCulturePerTurnFromCitiesTimes100', 00H
$SG227092 DB	'GetJONSCulturePerTurnFromExcessHappinessTimes100', 00H
	ORG $+3
$SG227093 DB	'GetCulturePerTurnFromReligionTimes100', 00H
	ORG $+2
$SG227094 DB	'GetCulturePerTurnFromBonusTurnsTimes100', 00H
$SG227095 DB	'GetJONSCultureTimes100', 00H
	ORG $+1
$SG227096 DB	'SetJONSCultureTimes100', 00H
	ORG $+1
$SG227097 DB	'ChangeJONSCultureTimes100', 00H
	ORG $+2
$SG227098 DB	'GetJONSCultureEverGeneratedTimes100', 00H
$SG227099 DB	'GetTotalJONSCulturePerTurn', 00H
	ORG $+1
$SG227100 DB	'GetJONSCulturePerTurnFromCities', 00H
$SG227101 DB	'GetJONSCulturePerTurnFromExcessHappiness', 00H
	ORG $+3
$SG227102 DB	'GetJONSCulturePerTurnFromTraits', 00H
$SG227103 DB	'GetCultureWonderMultiplier', 00H
	ORG $+1
$SG227104 DB	'GetJONSCulturePerTurnForFree', 00H
	ORG $+3
$SG227105 DB	'ChangeJONSCulturePerTurnForFree', 00H
$SG227106 DB	'GetJONSCulturePerTurnFromMinorCivs', 00H
	ORG $+1
$SG227107 DB	'ChangeJONSCulturePerTurnFromMinorCivs', 00H
	ORG $+2
$SG227108 DB	'GetCulturePerTurnFromMinorCivs', 00H
	ORG $+1
$SG227109 DB	'GetCulturePerTurnFromMinor', 00H
	ORG $+1
$SG227110 DB	'GetCulturePerTurnFromReligion', 00H
	ORG $+2
$SG227111 DB	'GetCulturePerTurnFromBonusTurns', 00H
$SG227112 DB	'GetCultureCityModifier', 00H
	ORG $+1
$SG227113 DB	'GetJONSCulture', 00H
	ORG $+1
$SG227114 DB	'SetJONSCulture', 00H
	ORG $+1
$SG227115 DB	'ChangeJONSCulture', 00H
	ORG $+2
$SG227116 DB	'GetJONSCultureEverGenerated', 00H
$SG227117 DB	'GetLastTurnLifetimeCulture', 00H
	ORG $+1
$SG227118 DB	'GetInfluenceOn', 00H
	ORG $+1
$SG227119 DB	'GetLastTurnInfluenceOn', 00H
	ORG $+1
$SG227120 DB	'GetInfluencePerTurn', 00H
$SG227121 DB	'GetInfluenceLevel', 00H
	ORG $+2
$SG227122 DB	'GetInfluenceTrend', 00H
	ORG $+2
$SG227123 DB	'GetTurnsToInfluential', 00H
	ORG $+2
$SG227124 DB	'GetNumCivsInfluentialOn', 00H
$SG227125 DB	'GetNumCivsToBeInfluentialOn', 00H
$SG227126 DB	'GetInfluenceTradeRouteScienceBonus', 00H
	ORG $+1
$SG227127 DB	'GetInfluenceCityStateSpyRankBonus', 00H
	ORG $+2
$SG227128 DB	'GetInfluenceMajorCivSpyRankBonus', 00H
	ORG $+3
$SG227129 DB	'GetInfluenceSpyRankTooltip', 00H
	ORG $+1
$SG227130 DB	'GetTourism', 00H
	ORG $+1
$SG227131 DB	'GetTourismModifierWith', 00H
	ORG $+1
$SG227132 DB	'GetTourismModifierWithTooltip', 00H
	ORG $+2
$SG227133 DB	'GetPublicOpinionType', 00H
	ORG $+3
$SG227134 DB	'GetPublicOpinionPreferredIdeology', 00H
	ORG $+2
$SG227135 DB	'GetPublicOpinionTooltip', 00H
$SG227136 DB	'GetPublicOpinionUnhappiness', 00H
$SG227137 DB	'GetPublicOpinionUnhappinessTooltip', 00H
	ORG $+1
$SG227138 DB	'HasAvailableGreatWorkSlot', 00H
	ORG $+2
$SG227139 DB	'GetCityOfClosestGreatWorkSlot', 00H
	ORG $+2
$SG227140 DB	'GetBuildingOfClosestGreatWorkSlot', 00H
	ORG $+2
$SG227141 DB	'GetNextDigCompletePlot', 00H
	ORG $+1
$SG227142 DB	'GetWrittenArtifactCulture', 00H
	ORG $+2
$SG227143 DB	'GetNumGreatWorks', 00H
	ORG $+3
$SG227144 DB	'GetNumGreatWorkSlots', 00H
	ORG $+3
$SG227145 DB	'GetFaith', 00H
	ORG $+3
$SG227146 DB	'SetFaith', 00H
	ORG $+3
$SG227147 DB	'ChangeFaith', 00H
$SG227148 DB	'GetTotalFaithPerTurn', 00H
	ORG $+3
$SG227149 DB	'GetFaithPerTurnFromCities', 00H
	ORG $+2
$SG227150 DB	'GetFaithPerTurnFromMinorCivs', 00H
	ORG $+3
$SG227151 DB	'GetFaithPerTurnFromReligion', 00H
$SG227152 DB	'CanFaithGiftMinors', 00H
	ORG $+1
$SG227153 DB	'HasCreatedPantheon', 00H
	ORG $+1
$SG227154 DB	'GetBeliefInPantheon', 00H
$SG227155 DB	'HasCreatedReligion', 00H
	ORG $+1
$SG227156 DB	'CanCreatePantheon', 00H
	ORG $+2
$SG227157 DB	'GetReligionCreatedByPlayer', 00H
	ORG $+1
$SG227158 DB	'GetFoundedReligionEnemyCityCombatMod', 00H
	ORG $+3
$SG227159 DB	'GetFoundedReligionFriendlyCityCombatMod', 00H
$SG227160 DB	'GetMinimumFaithNextGreatProphet', 00H
$SG227161 DB	'HasReligionInMostCities', 00H
$SG227162 DB	'DoesUnitPassFaithPurchaseCheck', 00H
	ORG $+1
$SG227163 DB	'GetHappiness', 00H
	ORG $+3
$SG227164 DB	'SetHappiness', 00H
	ORG $+3
$SG227165 DB	'GetExcessHappiness', 00H
	ORG $+1
$SG227166 DB	'IsEmpireUnhappy', 00H
$SG227167 DB	'IsEmpireVeryUnhappy', 00H
$SG227168 DB	'IsEmpireSuperUnhappy', 00H
	ORG $+3
$SG227169 DB	'GetHappinessFromPolicies', 00H
	ORG $+3
$SG227170 DB	'GetHappinessFromCities', 00H
	ORG $+1
$SG227171 DB	'GetHappinessFromBuildings', 00H
	ORG $+2
$SG227172 DB	'GetExtraHappinessPerCity', 00H
	ORG $+3
$SG227173 DB	'ChangeExtraHappinessPerCity', 00H
$SG227174 DB	'GetHappinessFromResources', 00H
	ORG $+2
$SG227175 DB	'GetHappinessFromResourceVariety', 00H
$SG227176 DB	'GetExtraHappinessPerLuxury', 00H
	ORG $+1
$SG227177 DB	'GetHappinessFromReligion', 00H
	ORG $+3
$SG227178 DB	'GetHappinessFromNaturalWonders', 00H
	ORG $+1
$SG227179 DB	'GetHappinessFromLeagues', 00H
$SG227180 DB	'GetUnhappiness', 00H
	ORG $+1
$SG227181 DB	'GetUnhappinessForecast', 00H
	ORG $+1
$SG227182 DB	'GetUnhappinessFromCityForUI', 00H
$SG227183 DB	'GetUnhappinessFromCityCount', 00H
$SG227184 DB	'GetUnhappinessFromCapturedCityCount', 00H
$SG227185 DB	'GetUnhappinessFromCityPopulation', 00H
	ORG $+3
$SG227186 DB	'GetUnhappinessFromCitySpecialists', 00H
	ORG $+2
$SG227187 DB	'GetUnhappinessFromOccupiedCities', 00H
	ORG $+3
$SG227188 DB	'GetUnhappinessFromPuppetCityPopulation', 00H
	ORG $+1
$SG227189 DB	'GetUnhappinessFromPublicOpinion', 00H
$SG227190 DB	'GetUnhappinessFromUnits', 00H
$SG227191 DB	'ChangeUnhappinessFromUnits', 00H
	ORG $+1
$SG227192 DB	'GetUnhappinessMod', 00H
	ORG $+2
$SG227193 DB	'GetCityCountUnhappinessMod', 00H
	ORG $+1
$SG227194 DB	'GetOccupiedPopulationUnhappinessMod', 00H
$SG227195 DB	'GetCapitalUnhappinessMod', 00H
	ORG $+3
$SG227196 DB	'GetTraitCityUnhappinessMod', 00H
	ORG $+1
$SG227197 DB	'GetTraitPopUnhappinessMod', 00H
	ORG $+2
$SG227198 DB	'IsHalfSpecialistUnhappiness', 00H
$SG227199 DB	'GetHappinessPerGarrisonedUnit', 00H
	ORG $+2
$SG227200 DB	'SetHappinessPerGarrisonedUnit', 00H
	ORG $+2
$SG227201 DB	'ChangeHappinessPerGarrisonedUnit', 00H
	ORG $+3
$SG227202 DB	'GetHappinessFromTradeRoutes', 00H
$SG227203 DB	'GetHappinessPerTradeRoute', 00H
	ORG $+2
$SG227204 DB	'SetHappinessPerTradeRoute', 00H
	ORG $+2
$SG227205 DB	'ChangeHappinessPerTradeRoute', 00H
	ORG $+3
$SG227206 DB	'GetCityConnectionTradeRouteGoldModifier', 00H
$SG227207 DB	'GetHappinessFromMinorCivs', 00H
	ORG $+2
$SG227208 DB	'GetHappinessFromMinor', 00H
	ORG $+2
$SG227209 DB	'GetBarbarianCombatBonus', 00H
$SG227210 DB	'SetBarbarianCombatBonus', 00H
$SG227211 DB	'ChangeBarbarianCombatBonus', 00H
	ORG $+1
$SG227212 DB	'GetCombatBonusVsHigherTech', 00H
	ORG $+1
$SG227213 DB	'GetCombatBonusVsLargerCiv', 00H
	ORG $+2
$SG227214 DB	'GetCombatBonusVsSmallerCiv', 00H
	ORG $+1
$SG227215 DB	'GetGarrisonedCityRangeStrikeModifier', 00H
	ORG $+3
$SG227216 DB	'ChangeGarrisonedCityRangeStrikeModifier', 00H
$SG227217 DB	'IsAlwaysSeeBarbCamps', 00H
	ORG $+3
$SG227218 DB	'SetAlwaysSeeBarbCampsCount', 00H
	ORG $+1
$SG227219 DB	'ChangeAlwaysSeeBarbCampsCount', 00H
	ORG $+2
$SG227220 DB	'IsPolicyBlocked', 00H
$SG227221 DB	'IsPolicyBranchBlocked', 00H
	ORG $+2
$SG227222 DB	'IsPolicyBranchUnlocked', 00H
	ORG $+1
$SG227223 DB	'SetPolicyBranchUnlocked', 00H
$SG227224 DB	'GetNumPolicyBranchesUnlocked', 00H
	ORG $+3
$SG227225 DB	'GetPolicyBranchChosen', 00H
	ORG $+2
$SG227226 DB	'GetNumPolicyBranchesAllowed', 00H
$SG227227 DB	'GetNumPolicies', 00H
	ORG $+1
$SG227228 DB	'GetNumPoliciesInBranch', 00H
	ORG $+1
$SG227229 DB	'HasPolicy', 00H
	ORG $+2
$SG227230 DB	'SetHasPolicy', 00H
	ORG $+3
$SG227231 DB	'GetNextPolicyCost', 00H
	ORG $+2
$SG227232 DB	'CanAdoptPolicy', 00H
	ORG $+1
$SG227233 DB	'DoAdoptPolicy', 00H
	ORG $+2
$SG227234 DB	'CanUnlockPolicyBranch', 00H
	ORG $+2
$SG227235 DB	'GetDominantPolicyBranchForTitle', 00H
$SG227236 DB	'GetLateGamePolicyTree', 00H
	ORG $+2
$SG227237 DB	'GetBranchPicked1', 00H
	ORG $+3
$SG227238 DB	'GetBranchPicked2', 00H
	ORG $+3
$SG227239 DB	'GetBranchPicked3', 00H
	ORG $+3
$SG227240 DB	'GetPolicyCatchSpiesModifier', 00H
$SG227241 DB	'GetNumPolicyBranchesFinished', 00H
	ORG $+3
$SG227242 DB	'IsPolicyBranchFinished', 00H
	ORG $+1
$SG227243 DB	'GetAvailableTenets', 00H
	ORG $+1
$SG227244 DB	'GetTenet', 00H
	ORG $+3
$SG227245 DB	'IsAnarchy', 00H
	ORG $+2
$SG227246 DB	'GetAnarchyNumTurns', 00H
	ORG $+1
$SG227247 DB	'SetAnarchyNumTurns', 00H
	ORG $+1
$SG227248 DB	'ChangeAnarchyNumTurns', 00H
	ORG $+2
$SG227249 DB	'GetAdvancedStartPoints', 00H
	ORG $+1
$SG227250 DB	'SetAdvancedStartPoints', 00H
	ORG $+1
$SG227251 DB	'ChangeAdvancedStartPoints', 00H
	ORG $+2
$SG227252 DB	'GetAdvancedStartUnitCost', 00H
	ORG $+3
$SG227253 DB	'GetAdvancedStartCityCost', 00H
	ORG $+3
$SG227254 DB	'GetAdvancedStartPopCost', 00H
$SG227255 DB	'GetAdvancedStartBuildingCost', 00H
	ORG $+3
$SG227256 DB	'GetAdvancedStartImprovementCost', 00H
$SG227257 DB	'GetAdvancedStartRouteCost', 00H
	ORG $+2
$SG227258 DB	'GetAdvancedStartTechCost', 00H
	ORG $+3
$SG227259 DB	'GetAdvancedStartVisibilityCost', 00H
	ORG $+1
$SG227260 DB	'GetAttackBonusTurns', 00H
$SG227261 DB	'GetCultureBonusTurns', 00H
	ORG $+3
$SG227262 DB	'GetTourismBonusTurns', 00H
	ORG $+3
$SG227263 DB	'GetGoldenAgeProgressThreshold', 00H
	ORG $+2
$SG227264 DB	'GetGoldenAgeProgressMeter', 00H
	ORG $+2
$SG227265 DB	'SetGoldenAgeProgressMeter', 00H
	ORG $+2
$SG227266 DB	'ChangeGoldenAgeProgressMeter', 00H
	ORG $+3
$SG227267 DB	'GetNumGoldenAges', 00H
	ORG $+3
$SG227268 DB	'SetNumGoldenAges', 00H
	ORG $+3
$SG227269 DB	'ChangeNumGoldenAges', 00H
$SG227270 DB	'GetGoldenAgeTurns', 00H
	ORG $+2
$SG227271 DB	'GetGoldenAgeLength', 00H
	ORG $+1
$SG227272 DB	'IsGoldenAge', 00H
$SG227273 DB	'ChangeGoldenAgeTurns', 00H
	ORG $+3
$SG227274 DB	'GetNumUnitGoldenAges', 00H
	ORG $+3
$SG227275 DB	'ChangeNumUnitGoldenAges', 00H
$SG227276 DB	'GetStrikeTurns', 00H
	ORG $+1
$SG227277 DB	'GetGoldenAgeModifier', 00H
	ORG $+3
$SG227278 DB	'GetGoldenAgeTourismModifier', 00H
$SG227279 DB	'GetGoldenAgeGreatWriterRateModifier', 00H
$SG227280 DB	'GetGoldenAgeGreatArtistRateModifier', 00H
$SG227281 DB	'GetGoldenAgeGreatMusicianRateModifier', 00H
	ORG $+2
$SG227282 DB	'GetHurryModifier', 00H
	ORG $+3
$SG227283 DB	'CreateGreatGeneral', 00H
	ORG $+1
$SG227284 DB	'GetGreatPeopleCreated', 00H
	ORG $+2
$SG227285 DB	'GetGreatGeneralsCreated', 00H
$SG227286 DB	'GetGreatPeopleThresholdModifier', 00H
$SG227287 DB	'GetGreatGeneralsThresholdModifier', 00H
	ORG $+2
$SG227288 DB	'GetGreatAdmiralsThresholdModifier', 00H
	ORG $+2
$SG227289 DB	'GetGreatPeopleRateModifier', 00H
	ORG $+1
$SG227290 DB	'GetGreatGeneralRateModifier', 00H
$SG227291 DB	'GetDomesticGreatGeneralRateModifier', 00H
$SG227292 DB	'GetGreatWriterRateModifier', 00H
	ORG $+1
$SG227293 DB	'GetGreatArtistRateModifier', 00H
	ORG $+1
$SG227294 DB	'GetGreatMusicianRateModifier', 00H
	ORG $+3
$SG227295 DB	'GetGreatScientistRateModifier', 00H
	ORG $+2
$SG227296 DB	'GetGreatMerchantRateModifier', 00H
	ORG $+3
$SG227297 DB	'GetGreatEngineerRateModifier', 00H
	ORG $+3
$SG227298 DB	'GetPolicyGreatPeopleRateModifier', 00H
	ORG $+3
$SG227299 DB	'GetPolicyGreatWriterRateModifier', 00H
	ORG $+3
$SG227300 DB	'GetPolicyGreatArtistRateModifier', 00H
	ORG $+3
$SG227301 DB	'GetPolicyGreatMusicianRateModifier', 00H
	ORG $+1
$SG227302 DB	'GetPolicyGreatScientistRateModifier', 00H
$SG227303 DB	'GetPolicyGreatMerchantRateModifier', 00H
	ORG $+1
$SG227304 DB	'GetPolicyGreatEngineerRateModifier', 00H
	ORG $+1
$SG227305 DB	'GetProductionModifier', 00H
	ORG $+2
$SG227306 DB	'GetUnitProductionModifier', 00H
	ORG $+2
$SG227307 DB	'GetBuildingProductionModifier', 00H
	ORG $+2
$SG227308 DB	'GetProjectProductionModifier', 00H
	ORG $+3
$SG227309 DB	'GetSpecialistProductionModifier', 00H
$SG227310 DB	'GetMaxGlobalBuildingProductionModifier', 00H
	ORG $+1
$SG227311 DB	'GetMaxTeamBuildingProductionModifier', 00H
	ORG $+3
$SG227312 DB	'GetMaxPlayerBuildingProductionModifier', 00H
	ORG $+1
$SG227313 DB	'GetFreeExperience', 00H
	ORG $+2
$SG227314 DB	'GetFeatureProductionModifier', 00H
	ORG $+3
$SG227315 DB	'GetWorkerSpeedModifier', 00H
	ORG $+1
$SG227316 DB	'GetImprovementUpgradeRateModifier', 00H
	ORG $+2
$SG227317 DB	'GetMilitaryProductionModifier', 00H
	ORG $+2
$SG227318 DB	'GetSpaceProductionModifier', 00H
	ORG $+1
$SG227319 DB	'GetSettlerProductionModifier', 00H
	ORG $+3
$SG227320 DB	'GetCapitalSettlerProductionModifier', 00H
$SG227321 DB	'GetWonderProductionModifier', 00H
$SG227322 DB	'GetUnitProductionMaintenanceMod', 00H
$SG227323 DB	'GetNumUnitsSupplied', 00H
$SG227324 DB	'GetNumUnitsSuppliedByHandicap', 00H
	ORG $+2
$SG227325 DB	'GetNumUnitsSuppliedByCities', 00H
$SG227326 DB	'GetNumUnitsSuppliedByPopulation', 00H
$SG227327 DB	'GetNumUnitsOutOfSupply', 00H
	ORG $+1
$SG227328 DB	'GetCityDefenseModifier', 00H
	ORG $+1
$SG227329 DB	'GetNumNukeUnits', 00H
$SG227330 DB	'GetNumOutsideUnits', 00H
	ORG $+1
$SG227331 DB	'GetGoldPerUnit', 00H
	ORG $+1
$SG227332 DB	'ChangeGoldPerUnitTimes100', 00H
	ORG $+2
$SG227333 DB	'GetGoldPerMilitaryUnit', 00H
	ORG $+1
$SG227334 DB	'GetExtraUnitCost', 00H
	ORG $+3
$SG227335 DB	'GetNumMilitaryUnits', 00H
$SG227336 DB	'GetHappyPerMilitaryUnit', 00H
$SG227337 DB	'IsMilitaryFoodProduction', 00H
	ORG $+3
$SG227338 DB	'GetHighestUnitLevel', 00H
$SG227339 DB	'GetConscriptCount', 00H
	ORG $+2
$SG227340 DB	'SetConscriptCount', 00H
	ORG $+2
$SG227341 DB	'ChangeConscriptCount', 00H
	ORG $+3
$SG227342 DB	'GetMaxConscript', 00H
$SG227343 DB	'GetOverflowResearch', 00H
$SG227344 DB	'GetExpInBorderModifier', 00H
	ORG $+1
$SG227345 DB	'GetLevelExperienceModifier', 00H
	ORG $+1
$SG227346 DB	'GetCultureBombTimer', 00H
$SG227347 DB	'GetConversionTimer', 00H
	ORG $+1
$SG227348 DB	'GetCapitalCity', 00H
	ORG $+1
$SG227349 DB	'IsHasLostCapital', 00H
	ORG $+3
$SG227350 DB	'GetCitiesLost', 00H
	ORG $+2
$SG227351 DB	'GetPower', 00H
	ORG $+3
$SG227352 DB	'GetMilitaryMight', 00H
	ORG $+3
$SG227353 DB	'GetTotalTimePlayed', 00H
	ORG $+1
$SG227354 DB	'GetScore', 00H
	ORG $+3
$SG227355 DB	'GetScoreFromCities', 00H
	ORG $+1
$SG227356 DB	'GetScoreFromPopulation', 00H
	ORG $+1
$SG227357 DB	'GetScoreFromLand', 00H
	ORG $+3
$SG227358 DB	'GetScoreFromWonders', 00H
$SG227359 DB	'GetScoreFromTechs', 00H
	ORG $+2
$SG227360 DB	'GetScoreFromFutureTech', 00H
	ORG $+1
$SG227361 DB	'ChangeScoreFromFutureTech', 00H
	ORG $+2
$SG227362 DB	'GetScoreFromPolicies', 00H
	ORG $+3
$SG227363 DB	'GetScoreFromGreatWorks', 00H
	ORG $+1
$SG227364 DB	'GetScoreFromReligion', 00H
	ORG $+3
$SG227365 DB	'GetScoreFromScenario1', 00H
	ORG $+2
$SG227366 DB	'ChangeScoreFromScenario1', 00H
	ORG $+3
$SG227367 DB	'GetScoreFromScenario2', 00H
	ORG $+2
$SG227368 DB	'ChangeScoreFromScenario2', 00H
	ORG $+3
$SG227369 DB	'GetScoreFromScenario3', 00H
	ORG $+2
$SG227370 DB	'ChangeScoreFromScenario3', 00H
	ORG $+3
$SG227371 DB	'GetScoreFromScenario4', 00H
	ORG $+2
$SG227372 DB	'ChangeScoreFromScenario4', 00H
	ORG $+3
$SG227373 DB	'IsGoldenAgeCultureBonusDisabled', 00H
$SG227374 DB	'IsMinorCiv', 00H
	ORG $+1
$SG227375 DB	'GetMinorCivType', 00H
$SG227376 DB	'GetMinorCivTrait', 00H
	ORG $+3
$SG227377 DB	'GetPersonality', 00H
	ORG $+1
$SG227378 DB	'IsMinorCivHasUniqueUnit', 00H
$SG227379 DB	'GetMinorCivUniqueUnit', 00H
	ORG $+2
$SG227380 DB	'SetMinorCivUniqueUnit', 00H
	ORG $+2
$SG227381 DB	'GetAlly', 00H
$SG227382 DB	'GetAlliedTurns', 00H
	ORG $+1
$SG227383 DB	'IsFriends', 00H
	ORG $+2
$SG227384 DB	'IsAllies', 00H
	ORG $+3
$SG227385 DB	'IsPlayerHasOpenBorders', 00H
	ORG $+1
$SG227386 DB	'IsPlayerHasOpenBordersAutomatically', 00H
$SG227387 DB	'GetFriendshipChangePerTurnTimes100', 00H
	ORG $+1
$SG227388 DB	'GetMinorCivFriendshipWithMajor', 00H
	ORG $+1
$SG227389 DB	'GetMinorCivBaseFriendshipWithMajor', 00H
	ORG $+1
$SG227390 DB	'ChangeMinorCivFriendshipWithMajor', 00H
	ORG $+2
$SG227391 DB	'GetMinorCivFriendshipAnchorWithMajor', 00H
	ORG $+3
$SG227392 DB	'GetMinorCivFriendshipLevelWithMajor', 00H
$SG227393 DB	'GetActiveQuestForPlayer', 00H
$SG227394 DB	'IsMinorCivActiveQuestForPlayer', 00H
	ORG $+1
$SG227395 DB	'GetMinorCivNumActiveQuestsForPlayer', 00H
$SG227396 DB	'IsMinorCivDisplayedQuestForPlayer', 00H
	ORG $+2
$SG227397 DB	'GetMinorCivNumDisplayedQuestsForPlayer', 00H
	ORG $+1
$SG227398 DB	'GetQuestData1', 00H
	ORG $+2
$SG227399 DB	'GetQuestData2', 00H
	ORG $+2
$SG227400 DB	'GetQuestTurnsRemaining', 00H
	ORG $+1
$SG227401 DB	'IsMinorCivContestLeader', 00H
$SG227402 DB	'GetMinorCivContestValueForLeader', 00H
	ORG $+3
$SG227403 DB	'GetMinorCivContestValueForPlayer', 00H
	ORG $+3
$SG227404 DB	'IsMinorCivUnitSpawningDisabled', 00H
	ORG $+1
$SG227405 DB	'IsMinorCivRouteEstablishedWithMajor', 00H
$SG227406 DB	'IsMinorWarQuestWithMajorActive', 00H
	ORG $+1
$SG227407 DB	'GetMinorWarQuestWithMajorRemainingCount', 00H
$SG227408 DB	'IsProxyWarActiveForMajor', 00H
	ORG $+3
$SG227409 DB	'IsThreateningBarbariansEventActiveForPlayer', 00H
$SG227410 DB	'GetTurnsSinceThreatenedByBarbarians', 00H
$SG227411 DB	'GetTurnsSinceThreatenedAnnouncement', 00H
$SG227412 DB	'GetFriendshipFromGoldGift', 00H
	ORG $+2
$SG227413 DB	'GetFriendshipFromFaithGift', 00H
	ORG $+1
$SG227414 DB	'IsSameReligionAsMajor', 00H
	ORG $+2
$SG227415 DB	'GetFriendshipNeededForNextLevel', 00H
$SG227416 DB	'GetMinorCivFavoriteMajor', 00H
	ORG $+3
$SG227417 DB	'GetMinorCivScienceFriendshipBonus', 00H
	ORG $+2
$SG227418 DB	'GetMinorCivCultureFriendshipBonus', 00H
	ORG $+2
$SG227419 DB	'GetMinorCivCurrentCultureFlatBonus', 00H
	ORG $+1
$SG227420 DB	'GetMinorCivCurrentCulturePerBuildingBonus', 00H
	ORG $+2
$SG227421 DB	'GetCurrentCultureBonus', 00H
	ORG $+1
$SG227422 DB	'GetMinorCivCurrentCultureBonus', 00H
	ORG $+1
$SG227423 DB	'GetMinorCivHappinessFriendshipBonus', 00H
$SG227424 DB	'GetMinorCivCurrentHappinessFlatBonus', 00H
	ORG $+3
$SG227425 DB	'GetMinorCivCurrentHappinessPerLuxuryBonus', 00H
	ORG $+2
$SG227426 DB	'GetMinorCivCurrentHappinessBonus', 00H
	ORG $+3
$SG227427 DB	'GetMinorCivCurrentFaithBonus', 00H
	ORG $+3
$SG227428 DB	'GetCurrentCapitalFoodBonus', 00H
	ORG $+1
$SG227429 DB	'GetCurrentOtherCityFoodBonus', 00H
	ORG $+3
$SG227430 DB	'GetCurrentSpawnEstimate', 00H
$SG227431 DB	'GetCurrentScienceFriendshipBonusTimes100', 00H
	ORG $+3
$SG227432 DB	'IsPeaceBlocked', 00H
	ORG $+1
$SG227433 DB	'IsInfluenceTooLowForPeace', 00H
	ORG $+2
$SG227434 DB	'IsMinorPermanentWar', 00H
$SG227435 DB	'GetNumMinorCivsMet', 00H
	ORG $+1
$SG227436 DB	'DoMinorLiberationByMajor', 00H
	ORG $+3
$SG227437 DB	'IsProtectedByMajor', 00H
	ORG $+1
$SG227438 DB	'CanMajorProtect', 00H
$SG227439 DB	'CanMajorStartProtection', 00H
$SG227440 DB	'CanMajorWithdrawProtection', 00H
	ORG $+1
$SG227441 DB	'GetTurnLastPledgedProtectionByMajor', 00H
$SG227442 DB	'GetTurnLastPledgeBrokenByMajor', 00H
	ORG $+1
$SG227443 DB	'GetMinorCivBullyGoldAmount', 00H
	ORG $+1
$SG227444 DB	'CanMajorBullyGold', 00H
	ORG $+2
$SG227445 DB	'GetMajorBullyGoldDetails', 00H
	ORG $+3
$SG227446 DB	'CanMajorBullyUnit', 00H
	ORG $+2
$SG227447 DB	'GetMajorBullyUnitDetails', 00H
	ORG $+3
$SG227448 DB	'CanMajorBuyout', 00H
	ORG $+1
$SG227449 DB	'GetBuyoutCost', 00H
	ORG $+2
$SG227450 DB	'CanMajorGiftTileImprovement', 00H
$SG227451 DB	'CanMajorGiftTileImprovementAtPlot', 00H
	ORG $+2
$SG227452 DB	'GetGiftTileImprovementCost', 00H
	ORG $+1
$SG227453 DB	'AddMinorCivQuestIfAble', 00H
	ORG $+1
$SG227454 DB	'GetFriendshipFromUnitGift', 00H
	ORG $+2
$SG227455 DB	'IsAlive', 00H
$SG227456 DB	'IsEverAlive', 00H
$SG227457 DB	'IsExtendedGame', 00H
	ORG $+1
$SG227458 DB	'IsFoundedFirstCity', 00H
	ORG $+1
$SG227459 DB	'GetEndTurnBlockingType', 00H
	ORG $+1
$SG227460 DB	'GetEndTurnBlockingNotificationIndex', 00H
$SG227461 DB	'HasReceivedNetTurnComplete', 00H
	ORG $+1
$SG227462 DB	'IsStrike', 00H
	ORG $+3
$SG227463 DB	'GetID', 00H
	ORG $+2
$SG227464 DB	'GetHandicapType', 00H
$SG227465 DB	'GetCivilizationType', 00H
$SG227466 DB	'GetLeaderType', 00H
	ORG $+2
$SG227467 DB	'GetPersonalityType', 00H
	ORG $+1
$SG227468 DB	'SetPersonalityType', 00H
	ORG $+1
$SG227469 DB	'GetCurrentEra', 00H
	ORG $+2
$SG227470 DB	'GetTeam', 00H
$SG227471 DB	'GetPlayerColor', 00H
	ORG $+1
$SG227472 DB	'GetPlayerColors', 00H
$SG227473 DB	'GetSeaPlotYield', 00H
$SG227474 DB	'GetYieldRateModifier', 00H
	ORG $+3
$SG227475 DB	'GetCapitalYieldRateModifier', 00H
$SG227476 DB	'GetExtraYieldThreshold', 00H
	ORG $+1
$SG227477 DB	'GetScience', 00H
	ORG $+1
$SG227478 DB	'GetScienceTimes100', 00H
	ORG $+1
$SG227479 DB	'GetScienceFromCitiesTimes100', 00H
	ORG $+3
$SG227480 DB	'GetScienceFromOtherPlayersTimes100', 00H
	ORG $+1
$SG227481 DB	'GetScienceFromHappinessTimes100', 00H
$SG227482 DB	'GetScienceFromGoldTimes100', 00H
	ORG $+1
$SG227483 DB	'GetMinorFriendshipGainBullyGoldSuccess', 00H
	ORG $+1
$SG227484 DB	'GetScienceFromResearchAgreementsTimes100', 00H
	ORG $+3
$SG227485 DB	'GetScienceFromBudgetDeficitTimes100', 00H
$SG227486 DB	'GetProximityToPlayer', 00H
	ORG $+3
$SG227487 DB	'DoUpdateProximityToPlayer', 00H
	ORG $+2
$SG227488 DB	'GetIncomingUnitType', 00H
$SG227489 DB	'GetIncomingUnitCountdown', 00H
	ORG $+3
$SG227490 DB	'IsOption', 00H
	ORG $+3
$SG227491 DB	'SetOption', 00H
	ORG $+2
$SG227492 DB	'IsPlayable', 00H
	ORG $+1
$SG227493 DB	'SetPlayable', 00H
$SG227494 DB	'GetNumResourceUsed', 00H
	ORG $+1
$SG227495 DB	'GetNumResourceTotal', 00H
$SG227496 DB	'ChangeNumResourceTotal', 00H
	ORG $+1
$SG227497 DB	'GetNumResourceAvailable', 00H
$SG227498 DB	'GetResourceExport', 00H
	ORG $+2
$SG227499 DB	'GetResourceImport', 00H
	ORG $+2
$SG227500 DB	'GetResourceFromMinors', 00H
	ORG $+2
$SG227501 DB	'GetImprovementCount', 00H
$SG227502 DB	'IsBuildingFree', 00H
	ORG $+1
$SG227503 DB	'GetUnitClassCount', 00H
	ORG $+2
$SG227504 DB	'IsUnitClassMaxedOut', 00H
$SG227505 DB	'GetUnitClassMaking', 00H
	ORG $+1
$SG227506 DB	'GetUnitClassCountPlusMaking', 00H
$SG227507 DB	'GetBuildingClassCount', 00H
	ORG $+2
$SG227508 DB	'IsBuildingClassMaxedOut', 00H
$SG227509 DB	'GetBuildingClassMaking', 00H
	ORG $+1
$SG227510 DB	'GetBuildingClassCountPlusMaking', 00H
$SG227511 DB	'GetHurryCount', 00H
	ORG $+2
$SG227512 DB	'IsHasAccessToHurry', 00H
	ORG $+1
$SG227513 DB	'IsCanHurry', 00H
	ORG $+1
$SG227514 DB	'GetHurryGoldCost', 00H
	ORG $+3
$SG227515 DB	'IsResearchingTech', 00H
	ORG $+2
$SG227516 DB	'SetResearchingTech', 00H
	ORG $+1
$SG227517 DB	'GetCombatExperience', 00H
$SG227518 DB	'ChangeCombatExperience', 00H
	ORG $+1
$SG227519 DB	'SetCombatExperience', 00H
$SG227520 DB	'GetLifetimeCombatExperience', 00H
$SG227521 DB	'GetNavalCombatExperience', 00H
	ORG $+3
$SG227522 DB	'ChangeNavalCombatExperience', 00H
$SG227523 DB	'SetNavalCombatExperience', 00H
	ORG $+3
$SG227524 DB	'GetSpecialistExtraYield', 00H
$SG227525 DB	'FindPathLength', 00H
	ORG $+1
$SG227526 DB	'GetQueuePosition', 00H
	ORG $+3
$SG227527 DB	'ClearResearchQueue', 00H
	ORG $+1
$SG227528 DB	'PushResearch', 00H
	ORG $+3
$SG227529 DB	'PopResearch', 00H
$SG227530 DB	'GetLengthResearchQueue', 00H
	ORG $+1
$SG227531 DB	'AddCityName', 00H
$SG227532 DB	'GetNumCityNames', 00H
$SG227533 DB	'GetCityName', 00H
$SG227534 DB	'Cities', 00H
	ORG $+1
$SG227535 DB	'GetNumCities', 00H
	ORG $+3
$SG227536 DB	'GetCityByID', 00H
$SG227537 DB	'Units', 00H
	ORG $+2
$SG227538 DB	'GetNumUnits', 00H
$SG227539 DB	'GetUnitByID', 00H
$SG227540 DB	'AI_updateFoundValues', 00H
	ORG $+3
$SG227541 DB	'AI_foundValue', 00H
	ORG $+2
$SG227542 DB	'GetScoreHistory', 00H
$SG227543 DB	'GetEconomyHistory', 00H
	ORG $+2
$SG227544 DB	'GetIndustryHistory', 00H
	ORG $+1
$SG227545 DB	'GetAgricultureHistory', 00H
	ORG $+2
$SG227546 DB	'GetPowerHistory', 00H
$SG227547 DB	'GetReplayData', 00H
	ORG $+2
$SG227548 DB	'SetReplayDataValue', 00H
	ORG $+1
$SG227549 DB	'GetScriptData', 00H
	ORG $+2
$SG227550 DB	'SetScriptData', 00H
	ORG $+2
$SG227551 DB	'GetNumPlots', 00H
$SG227552 DB	'GetNumPlotsBought', 00H
	ORG $+2
$SG227553 DB	'SetNumPlotsBought', 00H
	ORG $+2
$SG227554 DB	'ChangeNumPlotsBought', 00H
	ORG $+3
$SG227555 DB	'GetBuyPlotCost', 00H
	ORG $+1
$SG227556 DB	'GetPlotDanger', 00H
	ORG $+2
$SG227557 DB	'DoBeginDiploWithHuman', 00H
	ORG $+2
$SG227558 DB	'DoTradeScreenOpened', 00H
$SG227559 DB	'DoTradeScreenClosed', 00H
$SG227560 DB	'GetMajorCivApproach', 00H
$SG227561 DB	'GetApproachTowardsUsGuess', 00H
	ORG $+2
$SG227562 DB	'IsWillAcceptPeaceWithPlayer', 00H
$SG227563 DB	'IsProtectingMinor', 00H
	ORG $+2
$SG227564 DB	'IsDontSettleMessageTooSoon', 00H
	ORG $+1
$SG227565 DB	'IsStopSpyingMessageTooSoon', 00H
	ORG $+1
$SG227566 DB	'IsAskedToStopConverting', 00H
$SG227567 DB	'IsAskedToStopDigging', 00H
	ORG $+3
$SG227568 DB	'IsDoFMessageTooSoon', 00H
$SG227569 DB	'IsDoF', 00H
	ORG $+2
$SG227570 DB	'GetDoFCounter', 00H
	ORG $+2
$SG227571 DB	'IsPlayerDoFwithAnyFriend', 00H
	ORG $+3
$SG227572 DB	'IsPlayerDoFwithAnyEnemy', 00H
$SG227573 DB	'IsPlayerDenouncedFriend', 00H
$SG227574 DB	'IsPlayerDenouncedEnemy', 00H
	ORG $+1
$SG227575 DB	'IsUntrustworthyFriend', 00H
	ORG $+2
$SG227576 DB	'GetNumFriendsDenouncedBy', 00H
	ORG $+3
$SG227577 DB	'IsFriendDenouncedUs', 00H
$SG227578 DB	'GetWeDenouncedFriendCount', 00H
	ORG $+2
$SG227579 DB	'IsFriendDeclaredWarOnUs', 00H
$SG227580 DB	'GetWeDeclaredWarOnFriendCount', 00H
	ORG $+2
$SG227581 DB	'GetCoopWarAcceptedState', 00H
$SG227582 DB	'GetNumWarsFought', 00H
	ORG $+3
$SG227583 DB	'GetLandDisputeLevel', 00H
$SG227584 DB	'GetVictoryDisputeLevel', 00H
	ORG $+1
$SG227585 DB	'GetWonderDisputeLevel', 00H
	ORG $+2
$SG227586 DB	'GetMinorCivDisputeLevel', 00H
$SG227587 DB	'GetWarmongerThreat', 00H
	ORG $+1
$SG227588 DB	'IsPlayerNoSettleRequestEverAsked', 00H
	ORG $+3
$SG227589 DB	'IsPlayerStopSpyingRequestEverAsked', 00H
	ORG $+1
$SG227590 DB	'IsDemandEverMade', 00H
	ORG $+3
$SG227591 DB	'GetNumCiviliansReturnedToMe', 00H
$SG227592 DB	'GetNumLandmarksBuiltForMe', 00H
	ORG $+2
$SG227593 DB	'GetNumTimesCultureBombed', 00H
	ORG $+3
$SG227594 DB	'GetNegativeReligiousConversionPoints', 00H
	ORG $+3
$SG227595 DB	'GetNegativeArchaeologyPoints', 00H
	ORG $+3
$SG227596 DB	'HasOthersReligionInMostCities', 00H
	ORG $+2
$SG227597 DB	'IsPlayerBrokenMilitaryPromise', 00H
	ORG $+2
$SG227598 DB	'IsPlayerIgnoredMilitaryPromise', 00H
	ORG $+1
$SG227599 DB	'IsPlayerBrokenExpansionPromise', 00H
	ORG $+1
$SG227600 DB	'IsPlayerIgnoredExpansionPromise', 00H
$SG227601 DB	'IsPlayerBrokenBorderPromise', 00H
$SG227602 DB	'IsPlayerIgnoredBorderPromise', 00H
	ORG $+3
$SG227603 DB	'IsPlayerBrokenAttackCityStatePromise', 00H
	ORG $+3
$SG227604 DB	'IsPlayerIgnoredAttackCityStatePromise', 00H
	ORG $+2
$SG227605 DB	'IsPlayerBrokenBullyCityStatePromise', 00H
$SG227606 DB	'IsPlayerIgnoredBullyCityStatePromise', 00H
	ORG $+3
$SG227607 DB	'IsPlayerBrokenSpyPromise', 00H
	ORG $+3
$SG227608 DB	'IsPlayerIgnoredSpyPromise', 00H
	ORG $+2
$SG227609 DB	'IsPlayerForgivenForSpying', 00H
	ORG $+2
$SG227610 DB	'IsPlayerBrokenNoConvertPromise', 00H
	ORG $+1
$SG227611 DB	'IsPlayerIgnoredNoConvertPromise', 00H
$SG227612 DB	'IsPlayerBrokenNoDiggingPromise', 00H
	ORG $+1
$SG227613 DB	'IsPlayerIgnoredNoDiggingPromise', 00H
$SG227614 DB	'IsPlayerBrokenCoopWarPromise', 00H
	ORG $+3
$SG227615 DB	'GetOtherPlayerNumProtectedMinorsKilled', 00H
	ORG $+1
$SG227616 DB	'GetOtherPlayerNumProtectedMinorsAttacked', 00H
	ORG $+3
$SG227617 DB	'GetTurnsSincePlayerBulliedProtectedMinor', 00H
	ORG $+3
$SG227618 DB	'IsHasPlayerBulliedProtectedMinor', 00H
	ORG $+3
$SG227619 DB	'IsDenouncedPlayer', 00H
	ORG $+2
$SG227620 DB	'GetDenouncedPlayerCounter', 00H
	ORG $+2
$SG227621 DB	'IsDenouncingPlayer', 00H
	ORG $+1
$SG227622 DB	'IsPlayerRecklessExpander', 00H
	ORG $+3
$SG227623 DB	'GetRecentTradeValue', 00H
$SG227624 DB	'GetCommonFoeValue', 00H
	ORG $+2
$SG227625 DB	'GetRecentAssistValue', 00H
	ORG $+3
$SG227626 DB	'IsGaveAssistanceTo', 00H
	ORG $+1
$SG227627 DB	'IsHasPaidTributeTo', 00H
	ORG $+1
$SG227628 DB	'IsNukedBy', 00H
	ORG $+2
$SG227629 DB	'IsCapitalCapturedBy', 00H
$SG227630 DB	'IsAngryAboutProtectedMinorKilled', 00H
	ORG $+3
$SG227631 DB	'IsAngryAboutProtectedMinorAttacked', 00H
	ORG $+1
$SG227632 DB	'IsAngryAboutProtectedMinorBullied', 00H
	ORG $+2
$SG227633 DB	'IsAngryAboutSidedWithTheirProtectedMinor', 00H
	ORG $+3
$SG227634 DB	'GetNumTimesRobbedBy', 00H
$SG227635 DB	'GetNumTimesIntrigueSharedBy', 00H
$SG227636 DB	'DoForceDoF', 00H
	ORG $+1
$SG227637 DB	'DoForceDenounce', 00H
$SG227638 DB	'GetNumNotifications', 00H
$SG227639 DB	'GetNotificationStr', 00H
	ORG $+1
$SG227640 DB	'GetNotificationSummaryStr', 00H
	ORG $+2
$SG227641 DB	'GetNotificationIndex', 00H
	ORG $+3
$SG227642 DB	'GetNotificationTurn', 00H
$SG227643 DB	'GetNotificationDismissed', 00H
	ORG $+3
$SG227644 DB	'AddNotification', 00H
$SG227645 DB	'GetRecommendedWorkerPlots', 00H
	ORG $+2
$SG227646 DB	'GetRecommendedFoundCityPlots', 00H
	ORG $+3
$SG227647 DB	'GetUnimprovedAvailableLuxuryResource', 00H
	ORG $+3
$SG227648 DB	'IsAnyPlotImproved', 00H
	ORG $+2
$SG227649 DB	'GetPlayerVisiblePlot', 00H
	ORG $+3
$SG227650 DB	'GetEverPoppedGoody', 00H
	ORG $+1
$SG227651 DB	'GetClosestGoodyPlot', 00H
$SG227652 DB	'IsAnyGoodyPlotAccessible', 00H
	ORG $+3
$SG227653 DB	'GetPlotHasOrder', 00H
$SG227654 DB	'GetAnyUnitHasOrderToGoody', 00H
	ORG $+2
$SG227655 DB	'GetEverTrainedBuilder', 00H
	ORG $+2
$SG227656 DB	'GetNumFreeTechs', 00H
$SG227657 DB	'SetNumFreeTechs', 00H
$SG227658 DB	'GetNumFreePolicies', 00H
	ORG $+1
$SG227659 DB	'SetNumFreePolicies', 00H
	ORG $+1
$SG227660 DB	'ChangeNumFreePolicies', 00H
	ORG $+2
$SG227661 DB	'GetNumFreeTenets', 00H
	ORG $+3
$SG227662 DB	'SetNumFreeTenets', 00H
	ORG $+3
$SG227663 DB	'ChangeNumFreeTenets', 00H
$SG227664 DB	'GetNumFreeGreatPeople', 00H
	ORG $+2
$SG227665 DB	'SetNumFreeGreatPeople', 00H
	ORG $+2
$SG227666 DB	'ChangeNumFreeGreatPeople', 00H
	ORG $+3
$SG227667 DB	'GetNumMayaBoosts', 00H
	ORG $+3
$SG227668 DB	'SetNumMayaBoosts', 00H
	ORG $+3
$SG227669 DB	'ChangeNumMayaBoosts', 00H
$SG227670 DB	'GetNumFaithGreatPeople', 00H
	ORG $+1
$SG227671 DB	'SetNumFaithGreatPeople', 00H
	ORG $+1
$SG227672 DB	'ChangeNumFaithGreatPeople', 00H
	ORG $+2
$SG227673 DB	'GetUnitBaktun', 00H
	ORG $+2
$SG227674 DB	'IsFreeMayaGreatPersonChoice', 00H
$SG227675 DB	'GetTraitGoldenAgeCombatModifier', 00H
$SG227676 DB	'GetTraitCityStateCombatModifier', 00H
$SG227677 DB	'GetTraitGreatGeneralExtraBonus', 00H
	ORG $+1
$SG227678 DB	'GetTraitGreatScientistRateModifier', 00H
	ORG $+1
$SG227679 DB	'IsTraitBonusReligiousBelief', 00H
$SG227680 DB	'GetHappinessFromLuxury', 00H
	ORG $+1
$SG227681 DB	'IsAbleToAnnexCityStates', 00H
$SG227682 DB	'GetNumTurnsBeforeMinorAlliesRefuseBribes', 00H
	ORG $+3
$SG227683 DB	'IsUsingMayaCalendar', 00H
$SG227684 DB	'GetMayaCalendarString', 00H
	ORG $+2
$SG227685 DB	'GetMayaCalendarLongString', 00H
	ORG $+2
$SG227686 DB	'GetExtraBuildingHappinessFromPolicies', 00H
	ORG $+2
$SG227687 DB	'GetNextCity', 00H
$SG227688 DB	'GetPrevCity', 00H
$SG227689 DB	'GetFreePromotionCount', 00H
	ORG $+2
$SG227690 DB	'IsFreePromotion', 00H
$SG227691 DB	'ChangeFreePromotionCount', 00H
	ORG $+3
$SG227692 DB	'GetEmbarkedGraphicOverride', 00H
	ORG $+1
$SG227693 DB	'SetEmbarkedGraphicOverride', 00H
	ORG $+1
$SG227694 DB	'AddTemporaryDominanceZone', 00H
	ORG $+2
$SG227695 DB	'GetNaturalWonderYieldModifier', 00H
	ORG $+2
$SG227696 DB	'GetPolicyBuildingClassYieldModifier', 00H
$SG227697 DB	'GetPolicyBuildingClassYieldChange', 00H
	ORG $+2
$SG227698 DB	'GetPolicyEspionageModifier', 00H
	ORG $+1
$SG227699 DB	'GetPolicyEspionageCatchSpiesModifier', 00H
	ORG $+3
$SG227700 DB	'GetPlayerBuildingClassYieldChange', 00H
	ORG $+2
$SG227701 DB	'GetPlayerBuildingClassHappiness', 00H
$SG227702 DB	'WasResurrectedBy', 00H
	ORG $+3
$SG227703 DB	'WasResurrectedThisTurnBy', 00H
	ORG $+3
$SG227704 DB	'GetOpinionTable', 00H
$SG227705 DB	'GetDealValue', 00H
	ORG $+3
$SG227706 DB	'GetDealMyValue', 00H
	ORG $+1
$SG227707 DB	'GetDealTheyreValue', 00H
	ORG $+1
$SG227708 DB	'MayNotAnnex', 00H
$SG227709 DB	'IsAllowPuppetPurchasing', 00H
$SG227710 DB	'GetEspionageCityStatus', 00H
	ORG $+1
$SG227711 DB	'GetNumSpies', 00H
$SG227712 DB	'GetNumUnassignedSpies', 00H
	ORG $+2
$SG227713 DB	'GetEspionageSpies', 00H
	ORG $+2
$SG227714 DB	'HasSpyEstablishedSurveillance', 00H
	ORG $+2
$SG227715 DB	'IsSpyDiplomat', 00H
	ORG $+2
$SG227716 DB	'IsSpySchmoozing', 00H
$SG227717 DB	'CanSpyStageCoup', 00H
$SG227718 DB	'GetAvailableSpyRelocationCities', 00H
$SG227719 DB	'GetNumTechsToSteal', 00H
	ORG $+1
$SG227720 DB	'GetIntrigueMessages', 00H
$SG227721 DB	'HasRecentIntrigueAbout', 00H
	ORG $+1
$SG227722 DB	'GetRecentIntrigueInfo', 00H
	ORG $+2
$SG227723 DB	'GetCoupChanceOfSuccess', 00H
	ORG $+1
$SG227724 DB	'IsMyDiplomatVisitingThem', 00H
	ORG $+3
$SG227725 DB	'IsOtherDiplomatVisitingMe', 00H
	ORG $+2
$SG227726 DB	'GetTradeRouteRange', 00H
	ORG $+1
$SG227727 DB	'GetInternationalTradeRoutePlotToolTip', 00H
	ORG $+2
$SG227728 DB	'GetInternationalTradeRoutePlotMouseoverToolTip', 00H
	ORG $+1
$SG227729 DB	'GetNumInternationalTradeRoutesUsed', 00H
	ORG $+1
$SG227730 DB	'GetNumInternationalTradeRoutesAvailable', 00H
$SG227731 DB	'GetPotentialInternationalTradeRouteDestinations', 00H
$SG227732 DB	'GetInternationalTradeRouteBaseBonus', 00H
$SG227733 DB	'GetInternationalTradeRouteGPTBonus', 00H
	ORG $+1
$SG227734 DB	'GetInternationalTradeRouteResourceBonus', 00H
$SG227735 DB	'GetInternationalTradeRouteResourceTraitModifier', 00H
$SG227736 DB	'GetInternationalTradeRouteExclusiveBonus', 00H
	ORG $+3
$SG227737 DB	'GetInternationalTradeRouteYourBuildingBonus', 00H
$SG227738 DB	'GetInternationalTradeRouteTheirBuildingBonus', 00H
	ORG $+3
$SG227739 DB	'GetInternationalTradeRoutePolicyBonus', 00H
	ORG $+2
$SG227740 DB	'GetInternationalTradeRouteOtherTraitBonus', 00H
	ORG $+2
$SG227741 DB	'GetInternationalTradeRouteRiverModifier', 00H
$SG227742 DB	'GetInternationalTradeRouteDomainModifier', 00H
	ORG $+3
$SG227743 DB	'GetInternationalTradeRouteTotal', 00H
$SG227744 DB	'GetInternationalTradeRouteScience', 00H
	ORG $+2
$SG227745 DB	'GetPotentialTradeUnitNewHomeCity', 00H
	ORG $+3
$SG227746 DB	'GetPotentialAdmiralNewPort', 00H
	ORG $+1
$SG227747 DB	'GetNumAvailableTradeUnits', 00H
	ORG $+2
$SG227748 DB	'GetTradeUnitType', 00H
	ORG $+3
$SG227749 DB	'GetTradeYourRoutesTTString', 00H
	ORG $+1
$SG227750 DB	'GetTradeToYouRoutesTTString', 00H
$SG227751 DB	'GetTradeRoutes', 00H
	ORG $+1
$SG227752 DB	'GetTradeRoutesAvailable', 00H
$SG227753 DB	'GetTradeRoutesToYou', 00H
$SG227754 DB	'GetNumTechDifference', 00H
	ORG $+3
$SG227755 DB	'GetGreatWorks', 00H
	ORG $+2
$SG227756 DB	'GetSwappableGreatWriting', 00H
	ORG $+3
$SG227757 DB	'GetSwappableGreatArt', 00H
	ORG $+3
$SG227758 DB	'GetSwappableGreatArtifact', 00H
	ORG $+2
$SG227759 DB	'GetSwappableGreatMusic', 00H
	ORG $+1
$SG227760 DB	'GetOthersGreatWorks', 00H
$SG227761 DB	'CanCommitVote', 00H
	ORG $+2
$SG227762 DB	'GetCommitVoteDetails', 00H
	ORG $+3
$SG227763 DB	'IsConnected', 00H
$SG227764 DB	'IsObserver', 00H
	ORG $+1
$SG227765 DB	'HasTurnTimerExpired', 00H
$SG227766 DB	'HasUnitOfClassType', 00H
	ORG $+1
$SG227767 DB	'GetWarmongerPreviewString', 00H
	ORG $+2
$SG227768 DB	'GetLiberationPreviewString', 00H
	ORG $+1
$SG227774 DB	'Player', 00H
	ORG $+1
$SG227778 DB	'Players', 00H
$SG227780 DB	'Players', 00H
$SG229845 DB	'String', 00H
	ORG $+1
$SG229864 DB	'String', 00H
	ORG $+1
$SG229913 DB	'X', 00H
	ORG $+2
$SG229914 DB	'Y', 00H
	ORG $+2
$SG229915 DB	'TradeConnectionType', 00H
$SG229922 DB	'ToReligion', 00H
	ORG $+1
$SG229923 DB	'ToPressureAmount', 00H
	ORG $+3
$SG229924 DB	'FromReligion', 00H
	ORG $+3
$SG229925 DB	'FromPressureAmount', 00H
	ORG $+1
$SG229926 DB	'OldTradeRoute', 00H
	ORG $+2
$SG229934 DB	'Mine', 00H
	ORG $+3
$SG229936 DB	'Theirs', 00H
	ORG $+1
$SG229937 DB	'Yields', 00H
	ORG $+1
$SG230105 DB	'X', 00H
	ORG $+2
$SG230106 DB	'Y', 00H
	ORG $+2
$SG230125 DB	'X', 00H
	ORG $+2
$SG230126 DB	'Y', 00H
	ORG $+2
$SG230182 DB	', ', 00H
	ORG $+1
$SG230194 DB	'TXT_KEY_TOP_PANEL_ITR_FOOD_YIELD_TT', 00H
$SG230197 DB	'TXT_KEY_TOP_PANEL_ITR_PRODUCTION_YIELD_TT', 00H
	ORG $+2
$SG230200 DB	'TXT_KEY_TOP_PANEL_ITR_GOLD_YIELD_TT', 00H
$SG230203 DB	'TXT_KEY_TOP_PANEL_ITR_SCIENCE_YIELD_TT', 00H
	ORG $+1
$SG230206 DB	'TXT_KEY_TOP_PANEL_ITR_CULTURE_YIELD_TT', 00H
	ORG $+1
$SG230209 DB	'TXT_KEY_TOP_PANEL_ITR_FAITH_YIELD_TT', 00H
	ORG $+3
$SG230226 DB	'TXT_KEY_TOP_PANEL_ITR_FOOD_YIELD_TT', 00H
$SG230229 DB	'TXT_KEY_TOP_PANEL_ITR_PRODUCTION_YIELD_TT', 00H
	ORG $+2
$SG230232 DB	'TXT_KEY_TOP_PANEL_ITR_GOLD_YIELD_TT', 00H
$SG230235 DB	'TXT_KEY_TOP_PANEL_ITR_SCIENCE_YIELD_TT', 00H
	ORG $+1
$SG230238 DB	'TXT_KEY_TOP_PANEL_ITR_CULTURE_YIELD_TT', 00H
	ORG $+1
$SG230241 DB	'TXT_KEY_TOP_PANEL_ITR_FAITH_YIELD_TT', 00H
	ORG $+3
$SG230248 DB	'TXT_KEY_TOP_PANEL_ITR_YOUR_ROUTE_BOTH_TT', 00H
	ORG $+3
$SG230253 DB	'TXT_KEY_TOP_PANEL_ITR_YOUR_ROUTE_ONLY_ORIGIN_TT', 00H
$SG230258 DB	'TXT_KEY_TOP_PANEL_ITR_YOUR_ROUTE_ONLY_DEST_TT', 00H
	ORG $+2
$SG230264 DB	'TXT_KEY_TOP_PANEL_ITR_INTERNAL_YOUR_ROUTE_BOTH_TT', 00H
	ORG $+2
$SG230269 DB	'TXT_KEY_TOP_PANEL_ITR_INTERNAL_YOUR_ROUTE_ONLY_ORIGIN_TT'
	DB	00H
	ORG $+3
$SG230274 DB	'TXT_KEY_TOP_PANEL_ITR_INTERNAL_YOUR_ROUTE_ONLY_DEST_TT', 00H
	ORG $+1
$SG230301 DB	'TXT_KEY_TOP_PANEL_ITR_CITY_STATE_TT', 00H
$SG230309 DB	'[NEWLINE]', 00H
	ORG $+2
$SG230349 DB	', ', 00H
	ORG $+1
$SG230356 DB	'TXT_KEY_TOP_PANEL_ITR_FOOD_YIELD_TT', 00H
$SG230359 DB	'TXT_KEY_TOP_PANEL_ITR_PRODUCTION_YIELD_TT', 00H
	ORG $+2
$SG230362 DB	'TXT_KEY_TOP_PANEL_ITR_GOLD_YIELD_TT', 00H
$SG230365 DB	'TXT_KEY_TOP_PANEL_ITR_SCIENCE_YIELD_TT', 00H
	ORG $+1
$SG230368 DB	'TXT_KEY_TOP_PANEL_ITR_CULTURE_YIELD_TT', 00H
	ORG $+1
$SG230371 DB	'TXT_KEY_TOP_PANEL_ITR_FAITH_YIELD_TT', 00H
	ORG $+3
$SG230377 DB	'TXT_KEY_TOP_PANEL_ITR_TO_YOU_ROUTE_BOTH_TT', 00H
	ORG $+1
$SG230382 DB	'TXT_KEY_TOP_PANEL_ITR_TO_YOU_ROUTE_ONLY_ORIGIN_TT', 00H
	ORG $+2
$SG230387 DB	'TXT_KEY_TOP_PANEL_ITR_TO_YOU_ROUTE_ONLY_DEST_TT', 00H
$SG230390 DB	'TXT_KEY_TOP_PANEL_ITR_CITY_STATE_TT', 00H
$SG230401 DB	'[NEWLINE]', 00H
	ORG $+2
$SG230420 DB	'Domain', 00H
	ORG $+1
$SG230421 DB	'FromCivilizationType', 00H
	ORG $+3
$SG230422 DB	'FromID', 00H
	ORG $+1
$SG230424 DB	'FromCityName', 00H
	ORG $+3
$SG230425 DB	'FromCity', 00H
	ORG $+3
$SG230426 DB	'ToCivilizationType', 00H
	ORG $+1
$SG230427 DB	'ToID', 00H
	ORG $+3
$SG230429 DB	'ToCityName', 00H
	ORG $+1
$SG230430 DB	'ToCity', 00H
	ORG $+1
$SG230431 DB	'FromGPT', 00H
$SG230432 DB	'ToGPT', 00H
	ORG $+2
$SG230433 DB	'ToFood', 00H
	ORG $+1
$SG230434 DB	'ToProduction', 00H
	ORG $+3
$SG230435 DB	'FromScience', 00H
$SG230436 DB	'ToScience', 00H
	ORG $+2
$SG230441 DB	'ToReligion', 00H
	ORG $+1
$SG230442 DB	'ToPressure', 00H
	ORG $+1
$SG230443 DB	'FromReligion', 00H
	ORG $+3
$SG230444 DB	'FromPressure', 00H
	ORG $+3
$SG230447 DB	'FromTourism', 00H
$SG230448 DB	'ToTourism', 00H
	ORG $+2
$SG230449 DB	'TurnsLeft', 00H
	ORG $+2
$SG230496 DB	'Domain', 00H
	ORG $+1
$SG230497 DB	'FromCivilizationType', 00H
	ORG $+3
$SG230498 DB	'FromID', 00H
	ORG $+1
$SG230500 DB	'FromCityName', 00H
	ORG $+3
$SG230501 DB	'FromCity', 00H
	ORG $+3
$SG230502 DB	'ToCivilizationType', 00H
	ORG $+1
$SG230503 DB	'ToID', 00H
	ORG $+3
$SG230505 DB	'ToCityName', 00H
	ORG $+1
$SG230506 DB	'ToCity', 00H
	ORG $+1
$SG230507 DB	'FromGPT', 00H
$SG230508 DB	'ToGPT', 00H
	ORG $+2
$SG230509 DB	'ToFood', 00H
	ORG $+1
$SG230510 DB	'ToProduction', 00H
	ORG $+3
$SG230511 DB	'FromScience', 00H
$SG230512 DB	'ToScience', 00H
	ORG $+2
$SG230520 DB	'ToReligion', 00H
	ORG $+1
$SG230521 DB	'ToPressure', 00H
	ORG $+1
$SG230522 DB	'FromReligion', 00H
	ORG $+3
$SG230523 DB	'FromPressure', 00H
	ORG $+3
$SG230526 DB	'FromTourism', 00H
$SG230527 DB	'ToTourism', 00H
	ORG $+2
$SG230528 DB	'TurnsLeft', 00H
	ORG $+2
$SG230548 DB	'Domain', 00H
	ORG $+1
$SG230549 DB	'FromCivilizationType', 00H
	ORG $+3
$SG230550 DB	'FromID', 00H
	ORG $+1
$SG230552 DB	'FromCityName', 00H
	ORG $+3
$SG230553 DB	'FromCity', 00H
	ORG $+3
$SG230554 DB	'ToCivilizationType', 00H
	ORG $+1
$SG230555 DB	'ToID', 00H
	ORG $+3
$SG230557 DB	'ToCityName', 00H
	ORG $+1
$SG230558 DB	'ToCity', 00H
	ORG $+1
$SG230559 DB	'FromGPT', 00H
$SG230560 DB	'ToGPT', 00H
	ORG $+2
$SG230561 DB	'ToFood', 00H
	ORG $+1
$SG230562 DB	'ToProduction', 00H
	ORG $+3
$SG230563 DB	'FromScience', 00H
$SG230564 DB	'ToScience', 00H
	ORG $+2
$SG230569 DB	'ToReligion', 00H
	ORG $+1
$SG230570 DB	'ToPressure', 00H
	ORG $+1
$SG230571 DB	'FromReligion', 00H
	ORG $+3
$SG230572 DB	'FromPressure', 00H
	ORG $+3
$SG230575 DB	'FromTourism', 00H
$SG230576 DB	'ToTourism', 00H
	ORG $+2
$SG230577 DB	'TurnsLeft', 00H
	ORG $+2
$SG230618 DB	'Index', 00H
	ORG $+2
$SG230619 DB	'Creator', 00H
$SG230621 DB	'Era', 00H
$SG230638 DB	'iPlayer', 00H
$SG230642 DB	'WritingIndex', 00H
	ORG $+3
$SG230644 DB	'WritingCreator', 00H
	ORG $+1
$SG230645 DB	'WritingEra', 00H
	ORG $+1
$SG230649 DB	'ArtIndex', 00H
	ORG $+3
$SG230651 DB	'ArtCreator', 00H
	ORG $+1
$SG230652 DB	'ArtEra', 00H
	ORG $+1
$SG230656 DB	'ArtifactIndex', 00H
	ORG $+2
$SG230658 DB	'ArtifactCreator', 00H
$SG230659 DB	'ArtifactEra', 00H
$SG230663 DB	'MusicIndex', 00H
	ORG $+1
$SG230665 DB	'MusicCreator', 00H
	ORG $+3
$SG230666 DB	'MusicEra', 00H
	ORG $+3
$SG232862 DB	'Could not find player color at row %d', 00H
	ORG $+2
$SG232869 DB	'Could not find primary color at row %d', 00H
	ORG $+1
$SG232873 DB	'Could not find secondary color at row %d', 00H
	ORG $+3
$SG232875 DB	'x', 00H
	ORG $+2
$SG232876 DB	'y', 00H
	ORG $+2
$SG232877 DB	'z', 00H
	ORG $+2
$SG232878 DB	'w', 00H
	ORG $+2
$SG232879 DB	'x', 00H
	ORG $+2
$SG232880 DB	'y', 00H
	ORG $+2
$SG232881 DB	'z', 00H
	ORG $+2
$SG232882 DB	'w', 00H
	ORG $+2
$SG233693 DB	'REPLAYDATASET_SCORE', 00H
$SG233702 DB	'REPLAYDATASET_ECONOMY', 00H
	ORG $+2
$SG233711 DB	'REPLAYDATASET_AGRICULTURE', 00H
	ORG $+2
$SG233720 DB	'REPLAYDATASET_AGRICULTURE', 00H
	ORG $+2
$SG234606 DB	'plot', 00H
	ORG $+3
$SG234607 DB	'buildType', 00H
	ORG $+2
$SG235691 DB	'TXT_KEY_DIPLO_AT_WAR', 00H
	ORG $+3
$SG235698 DB	'TXT_KEY_DIPLO_PAST_WAR_NEUTRAL', 00H
	ORG $+1
$SG235702 DB	'TXT_KEY_DIPLO_PAST_WAR_BAD', 00H
	ORG $+1
$SG235707 DB	'TXT_KEY_DIPLO_NO_LAND_DISPUTE', 00H
	ORG $+2
$SG235712 DB	'TXT_KEY_DIPLO_LAND_DISPUTE', 00H
	ORG $+1
$SG235716 DB	'TXT_KEY_DIPLO_WONDER_DISPUTE', 00H
	ORG $+3
$SG235720 DB	'TXT_KEY_DIPLO_MINOR_CIV_DISPUTE', 00H
$SG235726 DB	'TXT_KEY_DIPLO_WARMONGER_THREAT_CRITICAL', 00H
$SG235730 DB	'TXT_KEY_DIPLO_WARMONGER_THREAT_SEVERE', 00H
	ORG $+2
$SG235734 DB	'TXT_KEY_DIPLO_WARMONGER_THREAT_MAJOR', 00H
	ORG $+3
$SG235737 DB	'TXT_KEY_DIPLO_WARMONGER_THREAT_MINOR', 00H
	ORG $+3
$SG235739 DB	' ', 00H
	ORG $+2
$SG235741 DB	'TXT_KEY_WARMONGER_HATE_HIGH', 00H
$SG235744 DB	' ', 00H
	ORG $+2
$SG235746 DB	'TXT_KEY_WARMONGER_HATE_MID', 00H
	ORG $+1
$SG235748 DB	' ', 00H
	ORG $+2
$SG235750 DB	'TXT_KEY_WARMONGER_HATE_LOW', 00H
	ORG $+1
$SG235754 DB	'TXT_KEY_DIPLO_AFRAID', 00H
	ORG $+3
$SG235758 DB	'TXT_KEY_DIPLO_CIVILIANS_RETURNED', 00H
	ORG $+3
$SG235762 DB	'TXT_KEY_DIPLO_LANDMARKS_BUILT', 00H
	ORG $+2
$SG235766 DB	'TXT_KEY_DIPLO_RESURRECTED', 00H
	ORG $+2
$SG235770 DB	'TXT_KEY_DIPLO_CITIES_LIBERATED', 00H
	ORG $+1
$SG235774 DB	'TXT_KEY_DIPLO_HAS_EMBASSY', 00H
	ORG $+2
$SG235778 DB	'TXT_KEY_DIPLO_FORGAVE_FOR_SPYING', 00H
	ORG $+3
$SG235782 DB	'TXT_KEY_DIPLO_NO_SETTLE_ASKED', 00H
	ORG $+2
$SG235786 DB	'TXT_KEY_DIPLO_STOP_SPYING_ASKED', 00H
$SG235790 DB	'TXT_KEY_DIPLO_TRADE_DEMAND', 00H
	ORG $+1
$SG235794 DB	'TXT_KEY_DIPLO_CULTURE_BOMB', 00H
	ORG $+1
$SG235798 DB	'TXT_KEY_DIPLO_RELIGIOUS_CONVERSIONS', 00H
$SG235802 DB	'TXT_KEY_DIPLO_ADOPTING_MY_RELIGION', 00H
	ORG $+1
$SG235806 DB	'TXT_KEY_DIPLO_ADOPTING_HIS_RELIGION', 00H
$SG235810 DB	'TXT_KEY_DIPLO_SAME_LATE_POLICY_TREES', 00H
	ORG $+3
$SG235816 DB	'TXT_KEY_DIPLO_DIFFERENT_LATE_POLICY_TREES', 00H
	ORG $+2
$SG235824 DB	'TXT_KEY_DIPLO_CAUGHT_STEALING', 00H
	ORG $+2
$SG235828 DB	'TXT_KEY_DIPLO_SHARED_INTRIGUE', 00H
	ORG $+2
$SG235832 DB	'TXT_KEY_DIPLO_MILITARY_PROMISE', 00H
	ORG $+1
$SG235836 DB	'TXT_KEY_DIPLO_MILITARY_PROMISE_BROKEN_WITH_OTHERS', 00H
	ORG $+2
$SG235840 DB	'TXT_KEY_DIPLO_MILITARY_PROMISE_IGNORED', 00H
	ORG $+1
$SG235844 DB	'TXT_KEY_DIPLO_EXPANSION_PROMISE', 00H
$SG235848 DB	'TXT_KEY_DIPLO_EXPANSION_PROMISE_IGNORED', 00H
$SG235852 DB	'TXT_KEY_DIPLO_BORDER_PROMISE', 00H
	ORG $+3
$SG235856 DB	'TXT_KEY_DIPLO_BORDER_PROMISE_IGNORED', 00H
	ORG $+3
$SG235860 DB	'TXT_KEY_DIPLO_CITY_STATE_PROMISE', 00H
	ORG $+3
$SG235864 DB	'TXT_KEY_DIPLO_CITY_STATE_PROMISE_BROKEN_WITH_OTHERS', 00H
$SG235868 DB	'TXT_KEY_DIPLO_CITY_STATE_PROMISE_IGNORED', 00H
	ORG $+3
$SG235872 DB	'TXT_KEY_DIPLO_BULLY_CITY_STATE_PROMISE_BROKEN', 00H
	ORG $+2
$SG235876 DB	'TXT_KEY_DIPLO_BULLY_CITY_STATE_PROMISE_IGNORED', 00H
	ORG $+1
$SG235880 DB	'TXT_KEY_DIPLO_NO_CONVERT_PROMISE_BROKEN', 00H
$SG235884 DB	'TXT_KEY_DIPLO_NO_CONVERT_PROMISE_IGNORED', 00H
	ORG $+3
$SG235888 DB	'TXT_KEY_DIPLO_NO_DIG_PROMISE_BROKEN', 00H
$SG235892 DB	'TXT_KEY_DIPLO_NO_DIG_PROMISE_IGNORED', 00H
	ORG $+3
$SG235896 DB	'TXT_KEY_DIPLO_SPY_PROMISE_BROKEN', 00H
	ORG $+3
$SG235900 DB	'TXT_KEY_DIPLO_SPY_PROMISE_IGNORED', 00H
	ORG $+2
$SG235904 DB	'TXT_KEY_DIPLO_COOP_WAR_PROMISE', 00H
	ORG $+1
$SG235908 DB	'TXT_KEY_DIPLO_PROTECTED_MINORS_KILLED', 00H
	ORG $+2
$SG235912 DB	'TXT_KEY_DIPLO_PROTECTED_MINORS_ATTACKED', 00H
$SG235916 DB	'TXT_KEY_DIPLO_PROTECTED_MINORS_BULLIED', 00H
	ORG $+1
$SG235920 DB	'TXT_KEY_DIPLO_SIDED_WITH_MINOR', 00H
	ORG $+1
$SG235924 DB	'TXT_KEY_DIPLO_DOF', 00H
	ORG $+2
$SG235928 DB	'TXT_KEY_DIPLO_MUTUAL_DOF', 00H
	ORG $+3
$SG235932 DB	'TXT_KEY_DIPLO_HUMAN_DOF_WITH_ENEMY', 00H
	ORG $+1
$SG235937 DB	'TXT_KEY_DIPLO_DENOUNCED_BY_PEOPLE_WE_TRUST_MORE', 00H
$SG235940 DB	'TXT_KEY_DIPLO_HUMAN_DENOUNCED_FRIENDS', 00H
	ORG $+2
$SG235943 DB	'TXT_KEY_DIPLO_HUMAN_FRIEND_DENOUNCED', 00H
	ORG $+3
$SG235946 DB	'TXT_KEY_DIPLO_HUMAN_DECLARED_WAR_ON_FRIENDS', 00H
$SG235949 DB	'TXT_KEY_DIPLO_HUMAN_FRIEND_DECLARED_WAR', 00H
$SG235955 DB	'TXT_KEY_DIPLO_DENOUNCED_BY_US', 00H
	ORG $+2
$SG235959 DB	'TXT_KEY_DIPLO_DENOUNCED_BY_THEM', 00H
$SG235963 DB	'TXT_KEY_DIPLO_HUMAN_DENOUNCED_FRIEND', 00H
	ORG $+3
$SG235967 DB	'TXT_KEY_DIPLO_MUTUAL_ENEMY', 00H
	ORG $+1
$SG235971 DB	'TXT_KEY_DIPLO_RECKLESS_EXPANDER', 00H
$SG235975 DB	'TXT_KEY_DIPLO_TRADE_PARTNER', 00H
$SG235979 DB	'TXT_KEY_DIPLO_COMMON_FOE', 00H
	ORG $+3
$SG235984 DB	'TXT_KEY_DIPLO_REFUSED_REQUESTS', 00H
	ORG $+1
$SG235988 DB	'TXT_KEY_DIPLO_ASSISTANCE_TO_THEM', 00H
	ORG $+3
$SG235992 DB	'TXT_KEY_DIPLO_NUKED', 00H
$SG235996 DB	'TXT_KEY_DIPLO_CAPTURED_CAPITAL', 00H
	ORG $+1
$SG236000 DB	'TXT_KEY_DIPLO_ASSISTANCE_FROM_THEM', 00H
	ORG $+1
$SG236004 DB	'TXT_KEY_DIPLO_PAID_TRIBUTE', 00H
	ORG $+1
$SG236008 DB	'TXT_KEY_DIPLO_LIKED_OUR_PROPOSAL', 00H
	ORG $+3
$SG236012 DB	'TXT_KEY_DIPLO_DISLIKED_OUR_PROPOSAL', 00H
$SG236016 DB	'TXT_KEY_DIPLO_SUPPORTED_THEIR_PROPOSAL', 00H
	ORG $+1
$SG236020 DB	'TXT_KEY_DIPLO_FOILED_THEIR_PROPOSAL', 00H
$SG236024 DB	'TXT_KEY_DIPLO_SUPPORTED_THEIR_HOSTING', 00H
	ORG $+2
$SG236028 DB	'TXT_KEY_SPECIFIC_DIPLO_STRING_1', 00H
$SG236032 DB	'TXT_KEY_SPECIFIC_DIPLO_STRING_2', 00H
$SG236036 DB	'TXT_KEY_SPECIFIC_DIPLO_STRING_3', 00H
$SG236199 DB	'[ENDCOLOR]', 00H
	ORG $+1
$SG236202 DB	'[COLOR_', 00H
$SG236205 DB	']', 00H
	ORG $+2
$SG236208 DB	'[COLOR_POSITIVE_TEXT]', 00H
	ORG $+2
$SG236210 DB	'[COLOR_FADING_POSITIVE_TEXT]', 00H
	ORG $+3
$SG236212 DB	'[COLOR_GREY]', 00H
	ORG $+3
$SG236214 DB	'[COLOR_FADING_NEGATIVE_TEXT]', 00H
	ORG $+3
$SG236216 DB	'[COLOR_NEGATIVE_TEXT]', 00H
	ORG $+2
$SG236311 DB	'PlayerID', 00H
	ORG $+3
$SG236312 DB	'CityID', 00H
	ORG $+1
$SG236313 DB	'CityX', 00H
	ORG $+2
$SG236314 DB	'CityY', 00H
	ORG $+2
$SG236315 DB	'CivilizationType', 00H
	ORG $+3
$SG236316 DB	'Team', 00H
	ORG $+3
$SG236318 DB	'Name', 00H
	ORG $+3
$SG236319 DB	'Population', 00H
	ORG $+1
$SG236323 DB	'Potential', 00H
	ORG $+2
$SG236326 DB	'BasePotential', 00H
	ORG $+2
$SG236327 DB	'LargestBasePotential', 00H
	ORG $+3
$SG236352 DB	'AgentID', 00H
$SG236353 DB	'CityX', 00H
	ORG $+2
$SG236354 DB	'CityY', 00H
	ORG $+2
$SG236356 DB	'Name', 00H
	ORG $+3
$SG236362 DB	'TXT_KEY_SPY_RANK_0', 00H
	ORG $+1
$SG236364 DB	'TXT_KEY_SPY_RANK_1', 00H
	ORG $+1
$SG236366 DB	'TXT_KEY_SPY_RANK_2', 00H
	ORG $+1
$SG236368 DB	'Rank', 00H
	ORG $+3
$SG236374 DB	'TXT_KEY_SPY_STATE_UNASSIGNED', 00H
	ORG $+3
$SG236376 DB	'TXT_KEY_SPY_STATE_TRAVELLING', 00H
	ORG $+3
$SG236378 DB	'TXT_KEY_SPY_STATE_SURVEILLANCE', 00H
	ORG $+1
$SG236380 DB	'TXT_KEY_SPY_STATE_GATHERING_INTEL', 00H
	ORG $+2
$SG236382 DB	'TXT_KEY_SPY_STATE_RIGGING_ELECTION', 00H
	ORG $+1
$SG236384 DB	'TXT_KEY_SPY_STATE_COUNTER_INTEL', 00H
$SG236386 DB	'TXT_KEY_SPY_STATE_DEAD', 00H
	ORG $+1
$SG236388 DB	'TXT_KEY_SPY_STATE_MAKING_INTRODUCTIONS', 00H
	ORG $+1
$SG236390 DB	'TXT_KEY_SPY_STATE_SCHMOOZING', 00H
	ORG $+3
$SG236392 DB	'State', 00H
	ORG $+2
$SG236393 DB	'TurnsLeft', 00H
	ORG $+2
$SG236394 DB	'PercentComplete', 00H
$SG236395 DB	'EstablishedSurveillance', 00H
$SG236396 DB	'IsDiplomat', 00H
	ORG $+1
$SG236443 DB	'PlayerID', 00H
	ORG $+3
$SG236444 DB	'CityID', 00H
	ORG $+1
$SG236445 DB	'CivilizationType', 00H
	ORG $+3
$SG236446 DB	'Team', 00H
	ORG $+3
$SG236449 DB	'Name', 00H
	ORG $+3
$SG236450 DB	'Population', 00H
	ORG $+1
$SG236451 DB	'Potential', 00H
	ORG $+2
$SG236474 DB	'String', 00H
	ORG $+1
$SG236475 DB	'Turn', 00H
	ORG $+3
$SG236476 DB	'DiscoveringPlayer', 00H
	ORG $+2
$SG236478 DB	'SpyName', 00H
$SG237656 DB	'__instances', 00H
$SG237657 DB	'__mode', 00H
	ORG $+1
$SG237658 DB	'v', 00H
	ORG $+2
$SG237660 DB	'__instances', 00H
$SG237663 DB	'__instance', 00H
	ORG $+1
$SG237664 DB	'__index', 00H
$SG237679 DB	'__instance', 00H
	ORG $+5
$SG237685 DB	'Not a valid instance.  Either the instance is NULL or yo'
	DB	'u used ''.'' instead of '':''.', 00H
	ORG $+1
$SG237705 DB	'__instances', 00H
$SG237706 DB	'__mode', 00H
	ORG $+1
$SG237707 DB	'v', 00H
	ORG $+2
$SG237709 DB	'__instances', 00H
$SG237712 DB	'__instance', 00H
	ORG $+1
$SG237713 DB	'__index', 00H
$SG237728 DB	'__instance', 00H
	ORG $+1
$SG237734 DB	'Not a valid instance.  Either the instance is NULL or yo'
	DB	'u used ''.'' instead of '':''.', 00H
	ORG $+1
$SG237742 DB	'Instance does not exist.', 00H
	ORG $+3
$SG237753 DB	'__instances', 00H
$SG237754 DB	'__mode', 00H
	ORG $+1
$SG237755 DB	'v', 00H
	ORG $+2
$SG237757 DB	'__instances', 00H
$SG237760 DB	'__instance', 00H
	ORG $+1
$SG237761 DB	'__index', 00H
$SG237776 DB	'__instance', 00H
	ORG $+5
$SG237782 DB	'Not a valid instance.  Either the instance is NULL or yo'
	DB	'u used ''.'' instead of '':''.', 00H
	ORG $+1
$SG237793 DB	'__instances', 00H
$SG237794 DB	'__mode', 00H
	ORG $+1
$SG237795 DB	'v', 00H
	ORG $+2
$SG237797 DB	'__instances', 00H
$SG237800 DB	'__instance', 00H
	ORG $+1
$SG237801 DB	'__index', 00H
$SG237816 DB	'__instance', 00H
	ORG $+1
$SG237822 DB	'Not a valid instance.  Either the instance is NULL or yo'
	DB	'u used ''.'' instead of '':''.', 00H
	ORG $+1
$SG237845 DB	'__instance', 00H
	ORG $+1
$SG237851 DB	'Not a valid instance.  Either the instance is NULL or yo'
	DB	'u used ''.'' instead of '':''.', 00H
	ORG $+1
_guidICvUnit1 DD 09f157e04H
	DW	04b2dH
	DW	04797H
	DB	09aH
	DB	0a5H
	DB	013H
	DB	025H
	DB	0deH
	DB	022H
	DB	016H
	DB	07H
CONST	ENDS
;	COMDAT ?NO_TURN@CvMinorCivQuest@@2HB
CONST	SEGMENT
?NO_TURN@CvMinorCivQuest@@2HB DD 0ffffffffH		; CvMinorCivQuest::NO_TURN
CONST	ENDS
;	COMDAT ?NO_QUEST_DATA@CvMinorCivQuest@@2HB
CONST	SEGMENT
?NO_QUEST_DATA@CvMinorCivQuest@@2HB DD 0ffffffffH	; CvMinorCivQuest::NO_QUEST_DATA
CONST	ENDS
EXTRN	_lua_tointeger:PROC
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvluaargtemplates.h
;	COMDAT ??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z PROC	; CvLuaArgs::toValue<int>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 19   : 		return lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 20   : 	}

	ret	0
??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ENDP	; CvLuaArgs::toValue<int>
_TEXT	ENDS
EXTRN	_lua_toboolean:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z PROC	; CvLuaArgs::toValue<bool>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 24   : 		return lua_toboolean(L, idx) != 0;

	push	eax
	push	ecx
	call	_lua_toboolean
	add	esp, 8
	neg	eax
	sbb	eax, eax
	neg	eax

; 25   : 	}

	ret	0
??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ENDP	; CvLuaArgs::toValue<bool>
_TEXT	ENDS
EXTRN	_lua_pushinteger:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z
_TEXT	SEGMENT
??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z PROC	; CvLuaArgs::pushValue<int>, COMDAT
; _L$ = ecx
; _t$ = eax

; 39   : 		lua_pushinteger(L, t);

	push	eax
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 40   : 	}

	ret	0
??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ENDP	; CvLuaArgs::pushValue<int>
_TEXT	ENDS
EXTRN	_lua_pushboolean:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z
_TEXT	SEGMENT
??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z PROC	; CvLuaArgs::pushValue<bool>, COMDAT
; _L$ = ecx
; _t$ = eax

; 45   : 		lua_pushboolean(L, t);

	movzx	eax, al
	push	eax
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 46   : 	}

	ret	0
??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ENDP	; CvLuaArgs::pushValue<bool>
_TEXT	ENDS
PUBLIC	?wrapCoordDifference@@YAHHI_N@Z			; wrapCoordDifference
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvgamecoreutils.h
;	COMDAT ?wrapCoordDifference@@YAHHI_N@Z
_TEXT	SEGMENT
_iDiff$ = 8						; size = 4
_uiRange$ = 12						; size = 4
_bWrap$ = 16						; size = 1
?wrapCoordDifference@@YAHHI_N@Z PROC			; wrapCoordDifference, COMDAT

; 57   : 	if(bWrap)

	cmp	BYTE PTR _bWrap$[esp-4], 0
	mov	eax, DWORD PTR _iDiff$[esp-4]
	je	SHORT $LN5@wrapCoordD

; 58   : 	{
; 59   : 		if(iDiff > (int)(uiRange >> 1))		// Using an unsigned int so we can safely assume that value >> 1 == value / 2

	mov	edx, DWORD PTR _uiRange$[esp-4]
	mov	ecx, edx
	shr	ecx, 1
	cmp	eax, ecx
	jle	SHORT $LN3@wrapCoordD

; 60   : 		{
; 61   : 			return (iDiff - (int)uiRange);

	sub	eax, edx

; 66   : 		}
; 67   : 	}
; 68   : 
; 69   : 	return iDiff;
; 70   : }

	ret	0
$LN3@wrapCoordD:

; 62   : 		}
; 63   : 		else if(iDiff < -(int)(uiRange >> 1))

	neg	ecx
	cmp	eax, ecx
	jge	SHORT $LN5@wrapCoordD

; 64   : 		{
; 65   : 			return (iDiff + (int)uiRange);

	add	eax, edx
$LN5@wrapCoordD:

; 66   : 		}
; 67   : 	}
; 68   : 
; 69   : 	return iDiff;
; 70   : }

	ret	0
?wrapCoordDifference@@YAHHI_N@Z ENDP			; wrapCoordDifference
_TEXT	ENDS
PUBLIC	?xToHexspaceX@@YAHHH@Z				; xToHexspaceX
; Function compile flags: /Ogtpy
;	COMDAT ?xToHexspaceX@@YAHHH@Z
_TEXT	SEGMENT
_iX$ = 8						; size = 4
_iY$ = 12						; size = 4
?xToHexspaceX@@YAHHH@Z PROC				; xToHexspaceX, COMDAT

; 86   : 	return iX - ((iY >= 0) ? (iY>>1) : ((iY - 1)/2));

	mov	ecx, DWORD PTR _iY$[esp-4]
	test	ecx, ecx
	jge	SHORT $LN5@xToHexspac
	lea	eax, DWORD PTR [ecx-1]
	cdq
	sub	eax, edx
	mov	ecx, eax
$LN5@xToHexspac:
	mov	eax, DWORD PTR _iX$[esp-4]
	sar	ecx, 1
	sub	eax, ecx

; 87   : }

	ret	0
?xToHexspaceX@@YAHHH@Z ENDP				; xToHexspaceX
_TEXT	ENDS
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R2exception@std@@8
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx

; 371  : 		{	// construct from message string

	push	esi
	lea	eax, DWORD PTR __Message$[esp]
	push	eax
	mov	esi, ecx
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	mov	DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@

; 372  : 		}

	mov	eax, esi
	pop	esi
	ret	4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
EXTRN	__imp_??1exception@std@@UAE@XZ:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx

; 380  : 		{	// destroy the object

	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@

; 381  : 		}

	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogtpy
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN6@scalar
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@scalar:
	mov	eax, esi
	pop	esi
	ret	4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 59   : 	return (_Where);

	mov	eax, DWORD PTR __Where$[esp-4]

; 60   : 	}

	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
; Function compile flags: /Ogtpy
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 64   : 	}

	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??_7logic_error@std@@6B@			; std::logic_error::`vftable'
PUBLIC	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
PUBLIC	??_R4logic_error@std@@6B@			; std::logic_error::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	??_R3logic_error@std@@8				; std::logic_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2logic_error@std@@8				; std::logic_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@logic_error@std@@8		; std::logic_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?what@logic_error@std@@UBEPBDXZ			; std::logic_error::what
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z:PROC
EXTRN	__imp_??0exception@std@@QAE@XZ:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_Elogic_error@std@@UAEPAXI@Z:PROC		; std::logic_error::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@logic_error@std@@8
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
rdata$r	SEGMENT
??_R1A@?0A@EA@logic_error@std@@8 DD FLAT:??_R0?AVlogic_error@std@@@8 ; std::logic_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2logic_error@std@@8
rdata$r	SEGMENT
??_R2logic_error@std@@8 DD FLAT:??_R1A@?0A@EA@logic_error@std@@8 ; std::logic_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3logic_error@std@@8
rdata$r	SEGMENT
??_R3logic_error@std@@8 DD 00H				; std::logic_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4logic_error@std@@6B@
rdata$r	SEGMENT
??_R4logic_error@std@@6B@ DD 00H			; std::logic_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	FLAT:??_R3logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT
??_7logic_error@std@@6B@ DD FLAT:??_R4logic_error@std@@6B@ ; std::logic_error::`vftable'
	DD	FLAT:??_Elogic_error@std@@UAEPAXI@Z
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0
__ehfuncinfo$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Message$ = 8						; size = 4
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::logic_error::logic_error, COMDAT
; _this$ = ecx

; 26   : 		{	// construct from message string

	push	-1
	push	__ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR _this$[esp+20], esi
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	mov	eax, DWORD PTR __Message$[esp+16]
	push	eax
	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR __$EHRec$[esp+32], 0
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z

; 27   : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	mov	eax, esi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:
	mov	eax, OFFSET __ehfuncinfo$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::logic_error::logic_error
PUBLIC	??1logic_error@std@@UAE@XZ			; std::logic_error::~logic_error
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT
??1logic_error@std@@UAE@XZ PROC				; std::logic_error::~logic_error, COMDAT
; _this$ = ecx

; 30   : 		{	// destroy the object

	push	esi
	mov	esi, ecx

; 31   : 		}

	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, esi
	pop	esi
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
??1logic_error@std@@UAE@XZ ENDP				; std::logic_error::~logic_error
_TEXT	ENDS
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@logic_error@std@@UBEPBDXZ PROC			; std::logic_error::what, COMDAT
; _this$ = ecx

; 35   : 		return (_Str.c_str());

	add	ecx, 12					; 0000000cH
	jmp	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
?what@logic_error@std@@UBEPBDXZ ENDP			; std::logic_error::what
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Glogic_error@std@@UAEPAXI@Z PROC			; std::logic_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, esi
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN6@scalar@2
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@scalar@2:
	mov	eax, esi
	pop	esi
	ret	4
??_Glogic_error@std@@UAEPAXI@Z ENDP			; std::logic_error::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_7length_error@std@@6B@			; std::length_error::`vftable'
PUBLIC	??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::length_error::length_error
PUBLIC	??_R4length_error@std@@6B@			; std::length_error::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVlength_error@std@@@8			; std::length_error `RTTI Type Descriptor'
PUBLIC	??_R3length_error@std@@8			; std::length_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2length_error@std@@8			; std::length_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@length_error@std@@8		; std::length_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_Elength_error@std@@UAEPAXI@Z:PROC		; std::length_error::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@length_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@length_error@std@@8 DD FLAT:??_R0?AVlength_error@std@@@8 ; std::length_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3length_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2length_error@std@@8
rdata$r	SEGMENT
??_R2length_error@std@@8 DD FLAT:??_R1A@?0A@EA@length_error@std@@8 ; std::length_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@logic_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3length_error@std@@8
rdata$r	SEGMENT
??_R3length_error@std@@8 DD 00H				; std::length_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2length_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT
??_R0?AVlength_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::length_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlength_error@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4length_error@std@@6B@
rdata$r	SEGMENT
??_R4length_error@std@@6B@ DD 00H			; std::length_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVlength_error@std@@@8
	DD	FLAT:??_R3length_error@std@@8
rdata$r	ENDS
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT
??_7length_error@std@@6B@ DD FLAT:??_R4length_error@std@@6B@ ; std::length_error::`vftable'
	DD	FLAT:??_Elength_error@std@@UAEPAXI@Z
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::length_error::length_error, COMDAT
; _this$ = ecx

; 105  : 		{	// construct from message string

	mov	eax, DWORD PTR __Message$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
	mov	DWORD PTR [esi], OFFSET ??_7length_error@std@@6B@

; 106  : 		}

	mov	eax, esi
	pop	esi
	ret	4
??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::length_error::length_error
_TEXT	ENDS
PUBLIC	??1length_error@std@@UAE@XZ			; std::length_error::~length_error
; Function compile flags: /Ogtpy
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT
??1length_error@std@@UAE@XZ PROC			; std::length_error::~length_error, COMDAT
; _this$ = ecx

; 109  : 		{	// destroy the object

	push	esi
	mov	esi, ecx

; 110  : 		}

	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, esi
	pop	esi
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
??1length_error@std@@UAE@XZ ENDP			; std::length_error::~length_error
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Glength_error@std@@UAEPAXI@Z PROC			; std::length_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, esi
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN8@scalar@3
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN8@scalar@3:
	mov	eax, esi
	pop	esi
	ret	4
??_Glength_error@std@@UAEPAXI@Z ENDP			; std::length_error::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_7out_of_range@std@@6B@			; std::out_of_range::`vftable'
PUBLIC	??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::out_of_range::out_of_range
PUBLIC	??_R4out_of_range@std@@6B@			; std::out_of_range::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVout_of_range@std@@@8			; std::out_of_range `RTTI Type Descriptor'
PUBLIC	??_R3out_of_range@std@@8			; std::out_of_range::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2out_of_range@std@@8			; std::out_of_range::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@out_of_range@std@@8		; std::out_of_range::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_Eout_of_range@std@@UAEPAXI@Z:PROC		; std::out_of_range::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@out_of_range@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@out_of_range@std@@8 DD FLAT:??_R0?AVout_of_range@std@@@8 ; std::out_of_range::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3out_of_range@std@@8
rdata$r	ENDS
;	COMDAT ??_R2out_of_range@std@@8
rdata$r	SEGMENT
??_R2out_of_range@std@@8 DD FLAT:??_R1A@?0A@EA@out_of_range@std@@8 ; std::out_of_range::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@logic_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3out_of_range@std@@8
rdata$r	SEGMENT
??_R3out_of_range@std@@8 DD 00H				; std::out_of_range::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2out_of_range@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT
??_R0?AVout_of_range@std@@@8 DD FLAT:??_7type_info@@6B@	; std::out_of_range `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVout_of_range@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4out_of_range@std@@6B@
rdata$r	SEGMENT
??_R4out_of_range@std@@6B@ DD 00H			; std::out_of_range::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVout_of_range@std@@@8
	DD	FLAT:??_R3out_of_range@std@@8
rdata$r	ENDS
;	COMDAT ??_7out_of_range@std@@6B@
CONST	SEGMENT
??_7out_of_range@std@@6B@ DD FLAT:??_R4out_of_range@std@@6B@ ; std::out_of_range::`vftable'
	DD	FLAT:??_Eout_of_range@std@@UAEPAXI@Z
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx

; 129  : 		{	// construct from message string

	mov	eax, DWORD PTR __Message$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
	mov	DWORD PTR [esi], OFFSET ??_7out_of_range@std@@6B@

; 130  : 		}

	mov	eax, esi
	pop	esi
	ret	4
??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::out_of_range::out_of_range
_TEXT	ENDS
PUBLIC	??1out_of_range@std@@UAE@XZ			; std::out_of_range::~out_of_range
; Function compile flags: /Ogtpy
;	COMDAT ??1out_of_range@std@@UAE@XZ
_TEXT	SEGMENT
??1out_of_range@std@@UAE@XZ PROC			; std::out_of_range::~out_of_range, COMDAT
; _this$ = ecx

; 133  : 		{	// destroy the object

	push	esi
	mov	esi, ecx

; 134  : 		}

	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, esi
	pop	esi
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
??1out_of_range@std@@UAE@XZ ENDP			; std::out_of_range::~out_of_range
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_Gout_of_range@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gout_of_range@std@@UAEPAXI@Z PROC			; std::out_of_range::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, esi
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN8@scalar@4
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN8@scalar@4:
	mov	eax, esi
	pop	esi
	ret	4
??_Gout_of_range@std@@UAEPAXI@Z ENDP			; std::out_of_range::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?GetTypeName@CvLuaPlayer@@SAPBDXZ		; CvLuaPlayer::GetTypeName
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
;	COMDAT ?GetTypeName@CvLuaPlayer@@SAPBDXZ
_TEXT	SEGMENT
?GetTypeName@CvLuaPlayer@@SAPBDXZ PROC			; CvLuaPlayer::GetTypeName, COMDAT

; 1040 : 	return "Player";

	mov	eax, OFFSET $SG227774

; 1041 : }

	ret	0
?GetTypeName@CvLuaPlayer@@SAPBDXZ ENDP			; CvLuaPlayer::GetTypeName
_TEXT	ENDS
PUBLIC	?lHasBusyMovingUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasBusyMovingUnit
; Function compile flags: /Ogtpy
;	COMDAT ?lHasBusyMovingUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lHasBusyMovingUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lHasBusyMovingUnit, COMDAT

; 1701 : #ifdef AUI_WARNING_FIXES
; 1702 : 	lua_pushboolean(L, 0);	// Obsolete function.  Units are never busy moving, movement is always instant in the game core.
; 1703 : #else
; 1704 : 	lua_pushboolean(L, false);	// Obsolete function.  Units are never busy moving, movement is always instant in the game core.

	mov	eax, DWORD PTR _L$[esp-4]
	push	0
	push	eax
	call	_lua_pushboolean
	add	esp, 8

; 1705 : #endif
; 1706 : 	return 1;

	mov	eax, 1

; 1707 : }

	ret	0
?lHasBusyMovingUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lHasBusyMovingUnit
_TEXT	ENDS
PUBLIC	??0CvString@@QAE@XZ				; CvString::CvString
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
;	COMDAT ??0CvString@@QAE@XZ
_TEXT	SEGMENT
??0CvString@@QAE@XZ PROC				; CvString::CvString, COMDAT
; _this$ = ecx

; 23   : 	CvString() {}

	push	esi
	mov	esi, ecx
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, esi
	pop	esi
	ret	0
??0CvString@@QAE@XZ ENDP				; CvString::CvString
_TEXT	ENDS
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??0CvString@@QAE@PBD@Z				; CvString::CvString
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:PROC
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??0CvString@@QAE@PBD@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
??0CvString@@QAE@PBD@Z PROC				; CvString::CvString, COMDAT
; _this$ = ecx

; 25   : 	CvString(const char* s) : std::string(s ? s : "") {CvAssertMsg(s != NULL, "Passing NULL to std::string; possible heap corruption!");}

	mov	eax, DWORD PTR _s$[esp-4]
	push	esi
	mov	esi, ecx
	test	eax, eax
	jne	SHORT $LN4@CvString
	mov	eax, OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN4@CvString:
	push	eax
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	eax, esi
	pop	esi
	ret	4
??0CvString@@QAE@PBD@Z ENDP				; CvString::CvString
_TEXT	ENDS
PUBLIC	??1CvString@@QAE@XZ				; CvString::~CvString
; Function compile flags: /Ogtpy
;	COMDAT ??1CvString@@QAE@XZ
_TEXT	SEGMENT
??1CvString@@QAE@XZ PROC				; CvString::~CvString, COMDAT
; _this$ = ecx

; 28   : 	~CvString() {}

	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
??1CvString@@QAE@XZ ENDP				; CvString::~CvString
_TEXT	ENDS
PUBLIC	??BCvString@@QBEPBDXZ				; CvString::operator char const *
; Function compile flags: /Ogtpy
;	COMDAT ??BCvString@@QBEPBDXZ
_TEXT	SEGMENT
??BCvString@@QBEPBDXZ PROC				; CvString::operator char const *, COMDAT
; _this$ = ecx

; 31   : 	operator const char*() const 	{ return c_str(); }												

	jmp	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
??BCvString@@QBEPBDXZ ENDP				; CvString::operator char const *
_TEXT	ENDS
PUBLIC	??4CvString@@QAEAAV0@PBD@Z			; CvString::operator=
EXTRN	__imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ:PROC
EXTRN	__imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??4CvString@@QAEAAV0@PBD@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
??4CvString@@QAEAAV0@PBD@Z PROC				; CvString::operator=, COMDAT
; _this$ = ecx

; 37   : 	CvString& operator=( const char* s) { if (s) assign(s); else clear();	return *this; }	

	mov	eax, DWORD PTR _s$[esp-4]
	push	esi
	mov	esi, ecx
	test	eax, eax
	je	SHORT $LN2@operator
	push	eax
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	mov	eax, esi
	pop	esi
	ret	4
$LN2@operator:
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	mov	eax, esi
	pop	esi
	ret	4
??4CvString@@QAEAAV0@PBD@Z ENDP				; CvString::operator=
_TEXT	ENDS
PUBLIC	?lIsMinorWarQuestWithMajorActive@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsMinorWarQuestWithMajorActive
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
;	COMDAT ?lIsMinorWarQuestWithMajorActive@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsMinorWarQuestWithMajorActive@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsMinorWarQuestWithMajorActive, COMDAT

; 6423 : 	const bool bResult = false;
; 6424 : 	lua_pushboolean(L, bResult);

	mov	eax, DWORD PTR _L$[esp-4]
	push	0
	push	eax
	call	_lua_pushboolean
	add	esp, 8

; 6425 : 	return 1;

	mov	eax, 1

; 6426 : }

	ret	0
?lIsMinorWarQuestWithMajorActive@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsMinorWarQuestWithMajorActive
_TEXT	ENDS
PUBLIC	?lGetMinorWarQuestWithMajorRemainingCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorWarQuestWithMajorRemainingCount
; Function compile flags: /Ogtpy
;	COMDAT ?lGetMinorWarQuestWithMajorRemainingCount@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMinorWarQuestWithMajorRemainingCount@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorWarQuestWithMajorRemainingCount, COMDAT

; 6430 : 	const int iResult = 0;
; 6431 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR _L$[esp-4]
	push	0
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 6432 : 	return 1;

	mov	eax, 1

; 6433 : }

	ret	0
?lGetMinorWarQuestWithMajorRemainingCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorWarQuestWithMajorRemainingCount
_TEXT	ENDS
PUBLIC	??3ICvUnknown@@SGXPAX@Z				; ICvUnknown::operator delete
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvdllinterfaces.h
;	COMDAT ??3ICvUnknown@@SGXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
??3ICvUnknown@@SGXPAX@Z PROC				; ICvUnknown::operator delete, COMDAT

; 310  : 		if (p)

	mov	eax, DWORD PTR _p$[esp-4]
	test	eax, eax
	je	SHORT $LN1@operator@2

; 311  : 		{
; 312  : 			ICvUnknown* inst = (ICvUnknown*)(p);
; 313  : 			inst->Destroy();

	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _p$[esp-4], eax
	jmp	edx
$LN1@operator@2:

; 314  : 		}
; 315  : 	}

	ret	4
??3ICvUnknown@@SGXPAX@Z ENDP				; ICvUnknown::operator delete
_TEXT	ENDS
PUBLIC	?GetInterfaceId@ICvUnit1@@SG?AU_GUID@@XZ	; ICvUnit1::GetInterfaceId
; Function compile flags: /Ogtpy
;	COMDAT ?GetInterfaceId@ICvUnit1@@SG?AU_GUID@@XZ
_TEXT	SEGMENT
$T242860 = 8						; size = 4
?GetInterfaceId@ICvUnit1@@SG?AU_GUID@@XZ PROC		; ICvUnit1::GetInterfaceId, COMDAT

; 1711 : 	static GUID DLLCALL GetInterfaceId() { return guidICvUnit1; }

	mov	eax, DWORD PTR $T242860[esp-4]
	mov	ecx, DWORD PTR _guidICvUnit1
	mov	edx, DWORD PTR _guidICvUnit1+4
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR _guidICvUnit1+8
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR _guidICvUnit1+12
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	ret	4
?GetInterfaceId@ICvUnit1@@SG?AU_GUID@@XZ ENDP		; ICvUnit1::GetInterfaceId
_TEXT	ENDS
PUBLIC	?lGetPowerHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPowerHistory
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
;	COMDAT ?lGetPowerHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?lGetPowerHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetPowerHistory, COMDAT

; 7589 : 	return 0;

	xor	eax, eax

; 7590 : }

	ret	0
?lGetPowerHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetPowerHistory
_TEXT	ENDS
PUBLIC	?GetDescription@CvBaseInfo@@QBEPBDXZ		; CvBaseInfo::GetDescription
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvinfos.h
;	COMDAT ?GetDescription@CvBaseInfo@@QBEPBDXZ
_TEXT	SEGMENT
?GetDescription@CvBaseInfo@@QBEPBDXZ PROC		; CvBaseInfo::GetDescription, COMDAT
; _this$ = ecx

; 64   : 		return m_strDescription.c_str();

	add	ecx, 36					; 00000024H
	jmp	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
?GetDescription@CvBaseInfo@@QBEPBDXZ ENDP		; CvBaseInfo::GetDescription
_TEXT	ENDS
PUBLIC	?getMap@CvGlobals@@QAEAAVCvMap@@XZ		; CvGlobals::getMap
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
;	COMDAT ?getMap@CvGlobals@@QAEAAVCvMap@@XZ
_TEXT	SEGMENT
?getMap@CvGlobals@@QAEAAVCvMap@@XZ PROC			; CvGlobals::getMap, COMDAT
; _this$ = ecx

; 175  : 		return *m_map;    // inlined for perf reasons, do not use outside of dll

	mov	eax, DWORD PTR [ecx+52]

; 176  : 	}

	ret	0
?getMap@CvGlobals@@QAEAAVCvMap@@XZ ENDP			; CvGlobals::getMap
_TEXT	ENDS
PUBLIC	?getGame@CvGlobals@@QAEAAVCvGame@@XZ		; CvGlobals::getGame
; Function compile flags: /Ogtpy
;	COMDAT ?getGame@CvGlobals@@QAEAAVCvGame@@XZ
_TEXT	SEGMENT
?getGame@CvGlobals@@QAEAAVCvGame@@XZ PROC		; CvGlobals::getGame, COMDAT
; _this$ = ecx

; 183  : 		return *m_game;    // inlined for perf reasons, do not use outside of dll

	mov	eax, DWORD PTR [ecx+48]

; 184  : 	}

	ret	0
?getGame@CvGlobals@@QAEAAVCvGame@@XZ ENDP		; CvGlobals::getGame
_TEXT	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Ogtpy
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
	push	edi
	mov	edi, DWORD PTR ___n$[esp]
	sub	edi, 1
	js	SHORT $LN1@vector
	push	ebx
	mov	ebx, DWORD PTR ___f$[esp+4]
	push	ebp
	mov	ebp, DWORD PTR ___s$[esp+8]
	push	esi
	mov	esi, DWORD PTR ___t$[esp+12]
	npad	7
$LL2@vector:
	mov	ecx, esi
	call	ebx
	add	esi, ebp
	sub	edi, 1
	jns	SHORT $LL2@vector
	pop	esi
	pop	ebp
	pop	ebx
$LN1@vector:
	pop	edi
	ret	16					; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	?getAI_TACTICAL_MAP_TEMP_ZONE_TURNS@CvGlobals@@QAEHXZ ; CvGlobals::getAI_TACTICAL_MAP_TEMP_ZONE_TURNS
; Function compile flags: /Ogtpy
;	COMDAT ?getAI_TACTICAL_MAP_TEMP_ZONE_TURNS@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getAI_TACTICAL_MAP_TEMP_ZONE_TURNS@CvGlobals@@QAEHXZ PROC ; CvGlobals::getAI_TACTICAL_MAP_TEMP_ZONE_TURNS, COMDAT
; _this$ = ecx

; 1517 : 		return m_iAI_TACTICAL_MAP_TEMP_ZONE_TURNS;

	mov	eax, DWORD PTR [ecx+2452]

; 1518 : 	}

	ret	0
?getAI_TACTICAL_MAP_TEMP_ZONE_TURNS@CvGlobals@@QAEHXZ ENDP ; CvGlobals::getAI_TACTICAL_MAP_TEMP_ZONE_TURNS
_TEXT	ENDS
PUBLIC	?lGetPolicyEspionageModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyEspionageModifier
EXTRN	?GetStealTechSlowerModifier@CvPolicyEntry@@QBEHXZ:PROC ; CvPolicyEntry::GetStealTechSlowerModifier
EXTRN	?getPolicyInfo@CvGlobals@@QAEPAVCvPolicyEntry@@W4PolicyTypes@@@Z:PROC ; CvGlobals::getPolicyInfo
EXTRN	?gGlobals@@3VCvGlobals@@A:BYTE			; gGlobals
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
;	COMDAT ?lGetPolicyEspionageModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetPolicyEspionageModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPolicyEspionageModifier, COMDAT

; 9729 : {

	push	esi

; 9730 : 	const PolicyTypes iIndex = (PolicyTypes)lua_tointeger(L, 2);

	mov	esi, DWORD PTR _L$[esp]
	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 9731 : 	CvPolicyEntry* pkPolicyInfo = GC.getPolicyInfo(iIndex);

	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getPolicyInfo@CvGlobals@@QAEPAVCvPolicyEntry@@W4PolicyTypes@@@Z ; CvGlobals::getPolicyInfo

; 9732 : 	CvAssertMsg(pkPolicyInfo, "pkPolicyInfo is null!");
; 9733 : 	if (!pkPolicyInfo)

	test	eax, eax
	jne	SHORT $LN1@lGetPolicy
	pop	esi

; 9740 : }

	ret	0
$LN1@lGetPolicy:

; 9734 : 	{
; 9735 : 		return 0;
; 9736 : 	}
; 9737 : 
; 9738 : 	lua_pushinteger(L, pkPolicyInfo->GetStealTechSlowerModifier());

	mov	ecx, eax
	call	?GetStealTechSlowerModifier@CvPolicyEntry@@QBEHXZ ; CvPolicyEntry::GetStealTechSlowerModifier
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8

; 9739 : 	return 1;

	mov	eax, 1
	pop	esi

; 9740 : }

	ret	0
?lGetPolicyEspionageModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPolicyEspionageModifier
_TEXT	ENDS
PUBLIC	?lGetPolicyEspionageCatchSpiesModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyEspionageCatchSpiesModifier
EXTRN	?GetCatchSpiesModifier@CvPolicyEntry@@QBEHXZ:PROC ; CvPolicyEntry::GetCatchSpiesModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetPolicyEspionageCatchSpiesModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetPolicyEspionageCatchSpiesModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPolicyEspionageCatchSpiesModifier, COMDAT

; 9744 : {

	push	esi

; 9745 : 	const PolicyTypes iIndex = (PolicyTypes)lua_tointeger(L, 2);

	mov	esi, DWORD PTR _L$[esp]
	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 9746 : 	CvPolicyEntry* pkPolicyInfo = GC.getPolicyInfo(iIndex);

	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getPolicyInfo@CvGlobals@@QAEPAVCvPolicyEntry@@W4PolicyTypes@@@Z ; CvGlobals::getPolicyInfo

; 9747 : 	CvAssertMsg(pkPolicyInfo, "pkPolicyInfo is null!");
; 9748 : 	if (!pkPolicyInfo)

	test	eax, eax
	jne	SHORT $LN1@lGetPolicy@2
	pop	esi

; 9755 : }

	ret	0
$LN1@lGetPolicy@2:

; 9749 : 	{
; 9750 : 		return 0;
; 9751 : 	}
; 9752 : 
; 9753 : 	lua_pushinteger(L, pkPolicyInfo->GetCatchSpiesModifier());

	mov	ecx, eax
	call	?GetCatchSpiesModifier@CvPolicyEntry@@QBEHXZ ; CvPolicyEntry::GetCatchSpiesModifier
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8

; 9754 : 	return 1;

	mov	eax, 1
	pop	esi

; 9755 : }

	ret	0
?lGetPolicyEspionageCatchSpiesModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPolicyEspionageCatchSpiesModifier
_TEXT	ENDS
PUBLIC	??ROpinionEval@@QBE_NABUOpinion@@0@Z		; OpinionEval::operator()
; Function compile flags: /Ogtpy
;	COMDAT ??ROpinionEval@@QBE_NABUOpinion@@0@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
??ROpinionEval@@QBE_NABUOpinion@@0@Z PROC		; OpinionEval::operator(), COMDAT
; _this$ = ecx

; 9854 : 		return a.m_iValue < b.m_iValue;

	mov	eax, DWORD PTR _a$[esp-4]
	mov	ecx, DWORD PTR [eax+80]
	mov	edx, DWORD PTR _b$[esp-4]
	xor	eax, eax
	cmp	ecx, DWORD PTR [edx+80]
	setl	al

; 9855 : 	}

	ret	8
??ROpinionEval@@QBE_NABUOpinion@@0@Z ENDP		; OpinionEval::operator()
_TEXT	ENDS
PUBLIC	??0Opinion@@QAE@XZ				; Opinion::Opinion
EXTRN	__imp_??0String@Localization@@QAE@XZ:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??0Opinion@@QAE@XZ
_TEXT	SEGMENT
??0Opinion@@QAE@XZ PROC					; Opinion::Opinion, COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	eax, esi
	pop	esi
	ret	0
??0Opinion@@QAE@XZ ENDP					; Opinion::Opinion
_TEXT	ENDS
PUBLIC	??1Opinion@@QAE@XZ				; Opinion::~Opinion
EXTRN	__imp_??1String@Localization@@UAE@XZ:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??1Opinion@@QAE@XZ
_TEXT	SEGMENT
??1Opinion@@QAE@XZ PROC					; Opinion::~Opinion, COMDAT
; _this$ = ecx
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
??1Opinion@@QAE@XZ ENDP					; Opinion::~Opinion
_TEXT	ENDS
PUBLIC	?lGetWarmongerPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetWarmongerPreviewString
EXTRN	_lua_pushstring:PROC
EXTRN	?GetWarmongerPreviewString@CvDiplomacyAIHelpers@@YA?AVCvString@@W4PlayerTypes@@@Z:PROC ; CvDiplomacyAIHelpers::GetWarmongerPreviewString
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetWarmongerPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetWarmongerPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetWarmongerPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetWarmongerPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetWarmongerPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T242902 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetWarmongerPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetWarmongerPreviewString, COMDAT

; 11289: {

	push	-1
	push	__ehhandler$?lGetWarmongerPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 28					; 0000001cH
	push	esi

; 11290: 	const PlayerTypes eOwner = (PlayerTypes) lua_tointeger(L, 2);

	mov	esi, DWORD PTR _L$[esp+40]
	push	2
	push	esi
	call	_lua_tointeger

; 11291: 	lua_pushstring(L, CvDiplomacyAIHelpers::GetWarmongerPreviewString(eOwner));

	push	eax
	lea	eax, DWORD PTR $T242902[esp+56]
	push	eax
	call	?GetWarmongerPreviewString@CvDiplomacyAIHelpers@@YA?AVCvString@@W4PlayerTypes@@@Z ; CvDiplomacyAIHelpers::GetWarmongerPreviewString
	add	esp, 16					; 00000010H
	mov	ecx, eax
	mov	DWORD PTR __$EHRec$[esp+52], 0
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8
	lea	ecx, DWORD PTR $T242902[esp+44]
	mov	DWORD PTR __$EHRec$[esp+52], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 11292: 	return 1;
; 11293: }

	mov	ecx, DWORD PTR __$EHRec$[esp+44]
	mov	eax, 1
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetWarmongerPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR $T242902[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetWarmongerPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetWarmongerPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetWarmongerPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetWarmongerPreviewString
PUBLIC	?lGetLiberationPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetLiberationPreviewString
EXTRN	?GetLiberationPreviewString@CvDiplomacyAIHelpers@@YA?AVCvString@@W4PlayerTypes@@@Z:PROC ; CvDiplomacyAIHelpers::GetLiberationPreviewString
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetLiberationPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetLiberationPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetLiberationPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetLiberationPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetLiberationPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T242921 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetLiberationPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetLiberationPreviewString, COMDAT

; 11296: {

	push	-1
	push	__ehhandler$?lGetLiberationPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 28					; 0000001cH
	push	esi

; 11297: 	const PlayerTypes eOriginalOwner = (PlayerTypes) lua_tointeger(L, 2);

	mov	esi, DWORD PTR _L$[esp+40]
	push	2
	push	esi
	call	_lua_tointeger

; 11298: 	lua_pushstring(L, CvDiplomacyAIHelpers::GetLiberationPreviewString(eOriginalOwner));

	push	eax
	lea	eax, DWORD PTR $T242921[esp+56]
	push	eax
	call	?GetLiberationPreviewString@CvDiplomacyAIHelpers@@YA?AVCvString@@W4PlayerTypes@@@Z ; CvDiplomacyAIHelpers::GetLiberationPreviewString
	add	esp, 16					; 00000010H
	mov	ecx, eax
	mov	DWORD PTR __$EHRec$[esp+52], 0
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8
	lea	ecx, DWORD PTR $T242921[esp+44]
	mov	DWORD PTR __$EHRec$[esp+52], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 11299: 	return 1;
; 11300: }

	mov	ecx, DWORD PTR __$EHRec$[esp+44]
	mov	eax, 1
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetLiberationPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR $T242921[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetLiberationPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetLiberationPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetLiberationPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetLiberationPreviewString
PUBLIC	??1?$auto_ptr@VICvEnumerator@@@std@@QAE@XZ	; std::auto_ptr<ICvEnumerator>::~auto_ptr<ICvEnumerator>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??1?$auto_ptr@VICvEnumerator@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$auto_ptr@VICvEnumerator@@@std@@QAE@XZ PROC		; std::auto_ptr<ICvEnumerator>::~auto_ptr<ICvEnumerator>, COMDAT
; _this$ = ecx

; 721  : 		delete _Myptr;

	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	je	SHORT $LN3@auto_ptr
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	push	eax
	call	edx
$LN3@auto_ptr:

; 722  : 		}

	ret	0
??1?$auto_ptr@VICvEnumerator@@@std@@QAE@XZ ENDP		; std::auto_ptr<ICvEnumerator>::~auto_ptr<ICvEnumerator>
_TEXT	ENDS
PUBLIC	??A?$BaseVector@H$00@@QBEABHI@Z			; BaseVector<int,1>::operator[]
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ??A?$BaseVector@H$00@@QBEABHI@Z
_TEXT	SEGMENT
_ui$ = 8						; size = 4
??A?$BaseVector@H$00@@QBEABHI@Z PROC			; BaseVector<int,1>::operator[], COMDAT
; _this$ = ecx

; 135  : 		FAssert(ui < m_uiCurrSize);
; 136  : 		return m_pData[ui];

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ui$[esp-4]
	lea	eax, DWORD PTR [eax+ecx*4]

; 137  : 	};

	ret	4
??A?$BaseVector@H$00@@QBEABHI@Z ENDP			; BaseVector<int,1>::operator[]
_TEXT	ENDS
PUBLIC	?size@?$BaseVector@H$00@@QBEIXZ			; BaseVector<int,1>::size
; Function compile flags: /Ogtpy
;	COMDAT ?size@?$BaseVector@H$00@@QBEIXZ
_TEXT	SEGMENT
?size@?$BaseVector@H$00@@QBEIXZ PROC			; BaseVector<int,1>::size, COMDAT
; _this$ = ecx

; 169  : 		return m_uiCurrSize;

	mov	eax, DWORD PTR [ecx+4]

; 170  : 	};

	ret	0
?size@?$BaseVector@H$00@@QBEIXZ ENDP			; BaseVector<int,1>::size
_TEXT	ENDS
PUBLIC	?size@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QBEIXZ ; std::vector<CvString,std::allocator<CvString> >::size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?size@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QBEIXZ PROC ; std::vector<CvString,std::allocator<CvString> >::size, COMDAT
; _this$ = ecx

; 725  : 		{	// return length of sequence

	push	esi

; 726  : 		return (_Mylast - _Myfirst);

	mov	esi, DWORD PTR [ecx+8]
	sub	esi, DWORD PTR [ecx+4]
	mov	eax, -1840700269			; 92492493H
	imul	esi
	add	edx, esi
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	pop	esi

; 727  : 		}

	ret	0
?size@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QBEIXZ ENDP ; std::vector<CvString,std::allocator<CvString> >::size
_TEXT	ENDS
PUBLIC	??A?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAEAAVCvString@@I@Z ; std::vector<CvString,std::allocator<CvString> >::operator[]
; Function compile flags: /Ogtpy
;	COMDAT ??A?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAEAAVCvString@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAEAAVCvString@@I@Z PROC ; std::vector<CvString,std::allocator<CvString> >::operator[], COMDAT
; _this$ = ecx

; 775  : 
; 776  :  #if _HAS_ITERATOR_DEBUGGING
; 777  : 		if (size() <= _Pos)
; 778  : 			{
; 779  : 			_DEBUG_ERROR("vector subscript out of range");
; 780  : 			_SCL_SECURE_OUT_OF_RANGE;
; 781  : 			}
; 782  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 783  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 784  : 
; 785  : 		return (*(_Myfirst + _Pos));

	mov	eax, DWORD PTR __Pos$[esp-4]
	lea	edx, DWORD PTR [eax*8]
	sub	edx, eax
	mov	eax, DWORD PTR [ecx+4]
	lea	eax, DWORD PTR [eax+edx*4]

; 786  : 		}

	ret	4
??A?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAEAAVCvString@@I@Z ENDP ; std::vector<CvString,std::allocator<CvString> >::operator[]
_TEXT	ENDS
PUBLIC	??0?$FObjectHandle@VCvUnit@@@@QAE@XZ		; FObjectHandle<CvUnit>::FObjectHandle<CvUnit>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
;	COMDAT ??0?$FObjectHandle@VCvUnit@@@@QAE@XZ
_TEXT	SEGMENT
??0?$FObjectHandle@VCvUnit@@@@QAE@XZ PROC		; FObjectHandle<CvUnit>::FObjectHandle<CvUnit>, COMDAT
; _this$ = ecx

; 215  : 	{

	mov	eax, ecx
	mov	DWORD PTR [eax], 0
	mov	BYTE PTR [eax+4], 0

; 216  : 		OBJECT_HANDLE_STACK;
; 217  : 	}

	ret	0
??0?$FObjectHandle@VCvUnit@@@@QAE@XZ ENDP		; FObjectHandle<CvUnit>::FObjectHandle<CvUnit>
_TEXT	ENDS
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::size, COMDAT
; _this$ = ecx

; 601  : 		return (_Mysize);

	mov	eax, DWORD PTR [ecx+8]

; 602  : 		}

	ret	0
?size@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::size
_TEXT	ENDS
PUBLIC	??A?$BaseVector@VCvEspionageSpy@@$0A@@@QAEAAVCvEspionageSpy@@I@Z ; BaseVector<CvEspionageSpy,0>::operator[]
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ??A?$BaseVector@VCvEspionageSpy@@$0A@@@QAEAAVCvEspionageSpy@@I@Z
_TEXT	SEGMENT
_ui$ = 8						; size = 4
??A?$BaseVector@VCvEspionageSpy@@$0A@@@QAEAAVCvEspionageSpy@@I@Z PROC ; BaseVector<CvEspionageSpy,0>::operator[], COMDAT
; _this$ = ecx

; 129  : 		FAssert(ui < m_uiCurrSize);
; 130  : 		return m_pData[ui];

	mov	eax, DWORD PTR _ui$[esp-4]
	lea	edx, DWORD PTR [eax*8]
	sub	edx, eax
	mov	eax, DWORD PTR [ecx]
	lea	eax, DWORD PTR [eax+edx*4]

; 131  : 	};

	ret	4
??A?$BaseVector@VCvEspionageSpy@@$0A@@@QAEAAVCvEspionageSpy@@I@Z ENDP ; BaseVector<CvEspionageSpy,0>::operator[]
_TEXT	ENDS
PUBLIC	?size@?$BaseVector@VCvEspionageSpy@@$0A@@@QBEIXZ ; BaseVector<CvEspionageSpy,0>::size
; Function compile flags: /Ogtpy
;	COMDAT ?size@?$BaseVector@VCvEspionageSpy@@$0A@@@QBEIXZ
_TEXT	SEGMENT
?size@?$BaseVector@VCvEspionageSpy@@$0A@@@QBEIXZ PROC	; BaseVector<CvEspionageSpy,0>::size, COMDAT
; _this$ = ecx

; 169  : 		return m_uiCurrSize;

	mov	eax, DWORD PTR [ecx+4]

; 170  : 	};

	ret	0
?size@?$BaseVector@VCvEspionageSpy@@$0A@@@QBEIXZ ENDP	; BaseVector<CvEspionageSpy,0>::size
_TEXT	ENDS
PUBLIC	??A?$Array@H$0BG@@Firaxis@@QAEAAHI@Z		; Firaxis::Array<int,22>::operator[]
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\farray.h
;	COMDAT ??A?$Array@H$0BG@@Firaxis@@QAEAAHI@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$Array@H$0BG@@Firaxis@@QAEAAHI@Z PROC		; Firaxis::Array<int,22>::operator[], COMDAT
; _this$ = ecx

; 157  : #		ifdef _MSC_VER
; 158  : #			pragma warning ( push )
; 159  : #			pragma warning ( disable : 6385 ) //  Invalid data: accessing 'm_akItems' the readable size is X but X+N bytes might be read
; 160  : 			// sad day. 
; 161  : #		endif//_MSC_VER
; 162  : 		    assert( i < ARRAY_SIZE );
; 163  : 		    return ( m_akItems[ i ] );

	mov	eax, DWORD PTR _i$[esp-4]
	lea	eax, DWORD PTR [ecx+eax*4]

; 164  : #		ifdef _MSC_VER
; 165  : #		pragma warning ( pop )
; 166  : #		endif//_MSC_VER
; 167  : 		}

	ret	4
??A?$Array@H$0BG@@Firaxis@@QAEAAHI@Z ENDP		; Firaxis::Array<int,22>::operator[]
_TEXT	ENDS
PUBLIC	?size@?$vector@UIntrigueNotificationMessage@@V?$allocator@UIntrigueNotificationMessage@@@std@@@std@@QBEIXZ ; std::vector<IntrigueNotificationMessage,std::allocator<IntrigueNotificationMessage> >::size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?size@?$vector@UIntrigueNotificationMessage@@V?$allocator@UIntrigueNotificationMessage@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@UIntrigueNotificationMessage@@V?$allocator@UIntrigueNotificationMessage@@@std@@@std@@QBEIXZ PROC ; std::vector<IntrigueNotificationMessage,std::allocator<IntrigueNotificationMessage> >::size, COMDAT
; _this$ = ecx

; 726  : 		return (_Mylast - _Myfirst);

	mov	edx, DWORD PTR [ecx+8]
	sub	edx, DWORD PTR [ecx+4]
	mov	eax, 2021161081				; 78787879H
	imul	edx
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx

; 727  : 		}

	ret	0
?size@?$vector@UIntrigueNotificationMessage@@V?$allocator@UIntrigueNotificationMessage@@@std@@@std@@QBEIXZ ENDP ; std::vector<IntrigueNotificationMessage,std::allocator<IntrigueNotificationMessage> >::size
_TEXT	ENDS
PUBLIC	??A?$vector@UIntrigueNotificationMessage@@V?$allocator@UIntrigueNotificationMessage@@@std@@@std@@QAEAAUIntrigueNotificationMessage@@I@Z ; std::vector<IntrigueNotificationMessage,std::allocator<IntrigueNotificationMessage> >::operator[]
; Function compile flags: /Ogtpy
;	COMDAT ??A?$vector@UIntrigueNotificationMessage@@V?$allocator@UIntrigueNotificationMessage@@@std@@@std@@QAEAAUIntrigueNotificationMessage@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@UIntrigueNotificationMessage@@V?$allocator@UIntrigueNotificationMessage@@@std@@@std@@QAEAAUIntrigueNotificationMessage@@I@Z PROC ; std::vector<IntrigueNotificationMessage,std::allocator<IntrigueNotificationMessage> >::operator[], COMDAT
; _this$ = ecx

; 775  : 
; 776  :  #if _HAS_ITERATOR_DEBUGGING
; 777  : 		if (size() <= _Pos)
; 778  : 			{
; 779  : 			_DEBUG_ERROR("vector subscript out of range");
; 780  : 			_SCL_SECURE_OUT_OF_RANGE;
; 781  : 			}
; 782  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 783  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 784  : 
; 785  : 		return (*(_Myfirst + _Pos));

	mov	eax, DWORD PTR __Pos$[esp-4]
	mov	edx, eax
	shl	edx, 4
	add	edx, eax
	mov	eax, DWORD PTR [ecx+4]
	lea	eax, DWORD PTR [eax+edx*4]

; 786  : 		}

	ret	4
??A?$vector@UIntrigueNotificationMessage@@V?$allocator@UIntrigueNotificationMessage@@@std@@@std@@QAEAAUIntrigueNotificationMessage@@I@Z ENDP ; std::vector<IntrigueNotificationMessage,std::allocator<IntrigueNotificationMessage> >::operator[]
_TEXT	ENDS
PUBLIC	??A?$BaseVector@UTradeConnection@@$0A@@@QAEAAUTradeConnection@@I@Z ; BaseVector<TradeConnection,0>::operator[]
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ??A?$BaseVector@UTradeConnection@@$0A@@@QAEAAUTradeConnection@@I@Z
_TEXT	SEGMENT
_ui$ = 8						; size = 4
??A?$BaseVector@UTradeConnection@@$0A@@@QAEAAUTradeConnection@@I@Z PROC ; BaseVector<TradeConnection,0>::operator[], COMDAT
; _this$ = ecx

; 129  : 		FAssert(ui < m_uiCurrSize);
; 130  : 		return m_pData[ui];

	mov	eax, DWORD PTR _ui$[esp-4]
	imul	eax, 444				; 000001bcH
	add	eax, DWORD PTR [ecx]

; 131  : 	};

	ret	4
??A?$BaseVector@UTradeConnection@@$0A@@@QAEAAUTradeConnection@@I@Z ENDP ; BaseVector<TradeConnection,0>::operator[]
_TEXT	ENDS
PUBLIC	?size@?$BaseVector@UTradeConnection@@$0A@@@QBEIXZ ; BaseVector<TradeConnection,0>::size
; Function compile flags: /Ogtpy
;	COMDAT ?size@?$BaseVector@UTradeConnection@@$0A@@@QBEIXZ
_TEXT	SEGMENT
?size@?$BaseVector@UTradeConnection@@$0A@@@QBEIXZ PROC	; BaseVector<TradeConnection,0>::size, COMDAT
; _this$ = ecx

; 169  : 		return m_uiCurrSize;

	mov	eax, DWORD PTR [ecx+4]

; 170  : 	};

	ret	0
?size@?$BaseVector@UTradeConnection@@$0A@@@QBEIXZ ENDP	; BaseVector<TradeConnection,0>::size
_TEXT	ENDS
PUBLIC	??A?$BaseVector@VCvGreatWork@@$0A@@@QAEAAVCvGreatWork@@I@Z ; BaseVector<CvGreatWork,0>::operator[]
; Function compile flags: /Ogtpy
;	COMDAT ??A?$BaseVector@VCvGreatWork@@$0A@@@QAEAAVCvGreatWork@@I@Z
_TEXT	SEGMENT
_ui$ = 8						; size = 4
??A?$BaseVector@VCvGreatWork@@$0A@@@QAEAAVCvGreatWork@@I@Z PROC ; BaseVector<CvGreatWork,0>::operator[], COMDAT
; _this$ = ecx

; 129  : 		FAssert(ui < m_uiCurrSize);
; 130  : 		return m_pData[ui];

	mov	eax, DWORD PTR _ui$[esp-4]
	lea	eax, DWORD PTR [eax+eax*2]
	shl	eax, 4
	add	eax, DWORD PTR [ecx]

; 131  : 	};

	ret	4
??A?$BaseVector@VCvGreatWork@@$0A@@@QAEAAVCvGreatWork@@I@Z ENDP ; BaseVector<CvGreatWork,0>::operator[]
_TEXT	ENDS
PUBLIC	??0?$auto_ptr@VICvUnit1@@@std@@QAE@PAVICvUnit1@@@Z ; std::auto_ptr<ICvUnit1>::auto_ptr<ICvUnit1>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??0?$auto_ptr@VICvUnit1@@@std@@QAE@PAVICvUnit1@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$auto_ptr@VICvUnit1@@@std@@QAE@PAVICvUnit1@@@Z PROC	; std::auto_ptr<ICvUnit1>::auto_ptr<ICvUnit1>, COMDAT
; _this$ = ecx

; 661  : 		{	// construct from object pointer

	mov	eax, ecx
	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 662  : 		}

	ret	4
??0?$auto_ptr@VICvUnit1@@@std@@QAE@PAVICvUnit1@@@Z ENDP	; std::auto_ptr<ICvUnit1>::auto_ptr<ICvUnit1>
_TEXT	ENDS
PUBLIC	??1?$auto_ptr@VICvUnit1@@@std@@QAE@XZ		; std::auto_ptr<ICvUnit1>::~auto_ptr<ICvUnit1>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$auto_ptr@VICvUnit1@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$auto_ptr@VICvUnit1@@@std@@QAE@XZ PROC		; std::auto_ptr<ICvUnit1>::~auto_ptr<ICvUnit1>, COMDAT
; _this$ = ecx

; 721  : 		delete _Myptr;

	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	je	SHORT $LN3@auto_ptr@2
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	push	eax
	call	edx
$LN3@auto_ptr@2:

; 722  : 		}

	ret	0
??1?$auto_ptr@VICvUnit1@@@std@@QAE@XZ ENDP		; std::auto_ptr<ICvUnit1>::~auto_ptr<ICvUnit1>
_TEXT	ENDS
PUBLIC	?get@?$auto_ptr@VICvUnit1@@@std@@QBEPAVICvUnit1@@XZ ; std::auto_ptr<ICvUnit1>::get
; Function compile flags: /Ogtpy
;	COMDAT ?get@?$auto_ptr@VICvUnit1@@@std@@QBEPAVICvUnit1@@XZ
_TEXT	SEGMENT
?get@?$auto_ptr@VICvUnit1@@@std@@QBEPAVICvUnit1@@XZ PROC ; std::auto_ptr<ICvUnit1>::get, COMDAT
; _this$ = ecx

; 750  : 		return (_Myptr);

	mov	eax, DWORD PTR [ecx]

; 751  : 		}

	ret	0
?get@?$auto_ptr@VICvUnit1@@@std@@QBEPAVICvUnit1@@XZ ENDP ; std::auto_ptr<ICvUnit1>::get
_TEXT	ENDS
PUBLIC	?size@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QBEIXZ ; std::vector<Opinion,std::allocator<Opinion> >::size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?size@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QBEIXZ PROC ; std::vector<Opinion,std::allocator<Opinion> >::size, COMDAT
; _this$ = ecx

; 726  : 		return (_Mylast - _Myfirst);

	mov	edx, DWORD PTR [ecx+8]
	sub	edx, DWORD PTR [ecx+4]
	mov	eax, 818089009				; 30c30c31H
	imul	edx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx

; 727  : 		}

	ret	0
?size@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QBEIXZ ENDP ; std::vector<Opinion,std::allocator<Opinion> >::size
_TEXT	ENDS
PUBLIC	??A?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEAAUOpinion@@I@Z ; std::vector<Opinion,std::allocator<Opinion> >::operator[]
; Function compile flags: /Ogtpy
;	COMDAT ??A?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEAAUOpinion@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEAAUOpinion@@I@Z PROC ; std::vector<Opinion,std::allocator<Opinion> >::operator[], COMDAT
; _this$ = ecx

; 775  : 
; 776  :  #if _HAS_ITERATOR_DEBUGGING
; 777  : 		if (size() <= _Pos)
; 778  : 			{
; 779  : 			_DEBUG_ERROR("vector subscript out of range");
; 780  : 			_SCL_SECURE_OUT_OF_RANGE;
; 781  : 			}
; 782  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 783  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 784  : 
; 785  : 		return (*(_Myfirst + _Pos));

	mov	eax, DWORD PTR __Pos$[esp-4]
	imul	eax, 84					; 00000054H
	add	eax, DWORD PTR [ecx+4]

; 786  : 		}

	ret	4
??A?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEAAUOpinion@@I@Z ENDP ; std::vector<Opinion,std::allocator<Opinion> >::operator[]
_TEXT	ENDS
PUBLIC	??0?$auto_ptr@VICvEnumerator@@@std@@QAE@PAVICvEnumerator@@@Z ; std::auto_ptr<ICvEnumerator>::auto_ptr<ICvEnumerator>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??0?$auto_ptr@VICvEnumerator@@@std@@QAE@PAVICvEnumerator@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$auto_ptr@VICvEnumerator@@@std@@QAE@PAVICvEnumerator@@@Z PROC ; std::auto_ptr<ICvEnumerator>::auto_ptr<ICvEnumerator>, COMDAT
; _this$ = ecx

; 661  : 		{	// construct from object pointer

	mov	eax, ecx
	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 662  : 		}

	ret	4
??0?$auto_ptr@VICvEnumerator@@@std@@QAE@PAVICvEnumerator@@@Z ENDP ; std::auto_ptr<ICvEnumerator>::auto_ptr<ICvEnumerator>
_TEXT	ENDS
PUBLIC	?get@?$auto_ptr@VICvEnumerator@@@std@@QBEPAVICvEnumerator@@XZ ; std::auto_ptr<ICvEnumerator>::get
; Function compile flags: /Ogtpy
;	COMDAT ?get@?$auto_ptr@VICvEnumerator@@@std@@QBEPAVICvEnumerator@@XZ
_TEXT	SEGMENT
?get@?$auto_ptr@VICvEnumerator@@@std@@QBEPAVICvEnumerator@@XZ PROC ; std::auto_ptr<ICvEnumerator>::get, COMDAT
; _this$ = ecx

; 750  : 		return (_Myptr);

	mov	eax, DWORD PTR [ecx]

; 751  : 		}

	ret	0
?get@?$auto_ptr@VICvEnumerator@@@std@@QBEPAVICvEnumerator@@XZ ENDP ; std::auto_ptr<ICvEnumerator>::get
_TEXT	ENDS
PUBLIC	?capacity@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QBEIXZ ; std::vector<CvString,std::allocator<CvString> >::capacity
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?capacity@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QBEIXZ PROC ; std::vector<CvString,std::allocator<CvString> >::capacity, COMDAT
; _this$ = ecx

; 635  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

	mov	eax, DWORD PTR [ecx+4]
	test	eax, eax
	jne	SHORT $LN3@capacity

; 636  : 		}

	ret	0
$LN3@capacity:

; 635  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

	mov	ecx, DWORD PTR [ecx+12]
	sub	ecx, eax
	mov	eax, -1840700269			; 92492493H
	imul	ecx
	add	edx, ecx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx

; 636  : 		}

	ret	0
?capacity@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QBEIXZ ENDP ; std::vector<CvString,std::allocator<CvString> >::capacity
_TEXT	ENDS
PUBLIC	??1?$_Container_base_aux_alloc_empty@V?$allocator@VCvString@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_empty<std::allocator<CvString> >::~_Container_base_aux_alloc_empty<std::allocator<CvString> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??1?$_Container_base_aux_alloc_empty@V?$allocator@VCvString@@@std@@@std@@IAE@XZ
_TEXT	SEGMENT
??1?$_Container_base_aux_alloc_empty@V?$allocator@VCvString@@@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_empty<std::allocator<CvString> >::~_Container_base_aux_alloc_empty<std::allocator<CvString> >, COMDAT
; _this$ = ecx

; 627  : 	~_Container_base_aux_alloc_empty() { }

	ret	0
??1?$_Container_base_aux_alloc_empty@V?$allocator@VCvString@@@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<CvString> >::~_Container_base_aux_alloc_empty<std::allocator<CvString> >
_TEXT	ENDS
PUBLIC	??0?$allocator@VCvString@@@std@@QAE@XZ		; std::allocator<CvString>::allocator<CvString>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??0?$allocator@VCvString@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@VCvString@@@std@@QAE@XZ PROC		; std::allocator<CvString>::allocator<CvString>, COMDAT
; _this$ = ecx

; 119  : 	allocator() _THROW0()

	mov	eax, ecx

; 120  : 		{	// construct default allocator (do nothing)
; 121  : 		}

	ret	0
??0?$allocator@VCvString@@@std@@QAE@XZ ENDP		; std::allocator<CvString>::allocator<CvString>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@VCvString@@@std@@QAEXPAVCvString@@I@Z ; std::allocator<CvString>::deallocate
; Function compile flags: /Ogtpy
;	COMDAT ?deallocate@?$allocator@VCvString@@@std@@QAEXPAVCvString@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@VCvString@@@std@@QAEXPAVCvString@@I@Z PROC ; std::allocator<CvString>::deallocate, COMDAT
; _this$ = ecx

; 140  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 141  : 		}

	ret	8
?deallocate@?$allocator@VCvString@@@std@@QAEXPAVCvString@@I@Z ENDP ; std::allocator<CvString>::deallocate
_TEXT	ENDS
PUBLIC	?addTarget@?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@QAEXABV?$FObjectHandle@VCvUnit@@@@@Z ; DestructionNotification<FObjectHandle<CvUnit> >::addTarget
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
;	COMDAT ?addTarget@?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@QAEXABV?$FObjectHandle@VCvUnit@@@@@Z
_TEXT	SEGMENT
_target$ = 8						; size = 4
?addTarget@?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@QAEXABV?$FObjectHandle@VCvUnit@@@@@Z PROC ; DestructionNotification<FObjectHandle<CvUnit> >::addTarget, COMDAT
; _this$ = ecx

; 52   : #ifdef TRACK_DESTRUCTION_NOTIFICATION
; 53   : 		m_targets.insert(&target);
; 54   : #endif
; 55   : 	}

	ret	4
?addTarget@?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@QAEXABV?$FObjectHandle@VCvUnit@@@@@Z ENDP ; DestructionNotification<FObjectHandle<CvUnit> >::addTarget
_TEXT	ENDS
PUBLIC	?removeTarget@?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@QAEXABV?$FObjectHandle@VCvUnit@@@@@Z ; DestructionNotification<FObjectHandle<CvUnit> >::removeTarget
; Function compile flags: /Ogtpy
;	COMDAT ?removeTarget@?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@QAEXABV?$FObjectHandle@VCvUnit@@@@@Z
_TEXT	SEGMENT
_target$ = 8						; size = 4
?removeTarget@?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@QAEXABV?$FObjectHandle@VCvUnit@@@@@Z PROC ; DestructionNotification<FObjectHandle<CvUnit> >::removeTarget, COMDAT
; _this$ = ecx

; 63   : #ifdef TRACK_DESTRUCTION_NOTIFICATION
; 64   : 		m_targets.erase(&target);
; 65   : #endif
; 66   : 	}

	ret	4
?removeTarget@?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@QAEXABV?$FObjectHandle@VCvUnit@@@@@Z ENDP ; DestructionNotification<FObjectHandle<CvUnit> >::removeTarget
_TEXT	ENDS
PUBLIC	?pointer@?$FObjectHandle@VCvUnit@@@@QAEPAVCvUnit@@XZ ; FObjectHandle<CvUnit>::pointer
; Function compile flags: /Ogtpy
;	COMDAT ?pointer@?$FObjectHandle@VCvUnit@@@@QAEPAVCvUnit@@XZ
_TEXT	SEGMENT
?pointer@?$FObjectHandle@VCvUnit@@@@QAEPAVCvUnit@@XZ PROC ; FObjectHandle<CvUnit>::pointer, COMDAT
; _this$ = ecx

; 78   : 		return m_target;

	mov	eax, DWORD PTR [ecx]

; 79   : 	}

	ret	0
?pointer@?$FObjectHandle@VCvUnit@@@@QAEPAVCvUnit@@XZ ENDP ; FObjectHandle<CvUnit>::pointer
_TEXT	ENDS
PUBLIC	??1?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@$$CBIH@std@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_empty<std::allocator<std::pair<unsigned int const ,int> > >::~_Container_base_aux_alloc_empty<std::allocator<std::pair<unsigned int const ,int> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??1?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@$$CBIH@std@@@std@@@std@@IAE@XZ
_TEXT	SEGMENT
??1?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@$$CBIH@std@@@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_empty<std::allocator<std::pair<unsigned int const ,int> > >::~_Container_base_aux_alloc_empty<std::allocator<std::pair<unsigned int const ,int> > >, COMDAT
; _this$ = ecx

; 627  : 	~_Container_base_aux_alloc_empty() { }

	ret	0
??1?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@$$CBIH@std@@@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<std::pair<unsigned int const ,int> > >::~_Container_base_aux_alloc_empty<std::allocator<std::pair<unsigned int const ,int> > >
_TEXT	ENDS
PUBLIC	??_C@_0GH@ECFAPJEJ@c?3?2users?2enormousapplepie?2docume@ ; `string'
PUBLIC	?Alloc@?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@IAEPAUTradeConnectionPlot@@I@Z ; FStaticVector<TradeConnectionPlot,40,0,297,0>::Alloc
EXTRN	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z:PROC ; FireMallocAlignedNoTracking
;	COMDAT ??_C@_0GH@ECFAPJEJ@c?3?2users?2enormousapplepie?2docume@
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
CONST	SEGMENT
??_C@_0GH@ECFAPJEJ@c?3?2users?2enormousapplepie?2docume@ DB 'c:\users\eno'
	DB	'rmousapplepie\documents\github\lekmod\lekmod_dll\fireplace\in'
	DB	'clude\fireworks\FFastVector.h', 00H		; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ?Alloc@?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@IAEPAUTradeConnectionPlot@@I@Z
_TEXT	SEGMENT
_uiSize$ = 8						; size = 4
?Alloc@?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@IAEPAUTradeConnectionPlot@@I@Z PROC ; FStaticVector<TradeConnectionPlot,40,0,297,0>::Alloc, COMDAT
; _this$ = ecx

; 795  : 	T* Alloc(unsigned int uiSize){

	push	esi
	push	edi

; 796  : 		T* pRet;
; 797  : 		if( uiSize > L ){

	mov	edi, DWORD PTR _uiSize$[esp+4]
	mov	esi, ecx
	cmp	edi, 40					; 00000028H
	jbe	SHORT $LN2@Alloc

; 798  : 			pRet = (T*)FMALLOCALIGNED( uiSize*sizeof(T), __alignof(T), AllocPool, nSubID );

	push	798					; 0000031eH
	push	OFFSET ??_C@_0GH@ECFAPJEJ@c?3?2users?2enormousapplepie?2docume@
	lea	eax, DWORD PTR [edi*8]
	push	4
	push	eax
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H

; 799  : 			m_uiCurrMaxSize = uiSize;

	mov	DWORD PTR [esi+8], edi
	pop	edi
	pop	esi

; 803  : 		}
; 804  : 		return pRet;
; 805  : 	};

	ret	4
$LN2@Alloc:
	pop	edi

; 800  : 		}else{
; 801  : 			pRet = (T*)m_aData;

	lea	eax, DWORD PTR [esi+12]

; 802  : 			m_uiCurrMaxSize = L;

	mov	DWORD PTR [esi+8], 40			; 00000028H
	pop	esi

; 803  : 		}
; 804  : 		return pRet;
; 805  : 	};

	ret	4
?Alloc@?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@IAEPAUTradeConnectionPlot@@I@Z ENDP ; FStaticVector<TradeConnectionPlot,40,0,297,0>::Alloc
_TEXT	ENDS
PUBLIC	??1?$BaseVector@UTradeConnectionPlot@@$0A@@@QAE@XZ ; BaseVector<TradeConnectionPlot,0>::~BaseVector<TradeConnectionPlot,0>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$BaseVector@UTradeConnectionPlot@@$0A@@@QAE@XZ
_TEXT	SEGMENT
??1?$BaseVector@UTradeConnectionPlot@@$0A@@@QAE@XZ PROC	; BaseVector<TradeConnectionPlot,0>::~BaseVector<TradeConnectionPlot,0>, COMDAT
; _this$ = ecx

; 111  : 	~BaseVector(){};

	ret	0
??1?$BaseVector@UTradeConnectionPlot@@$0A@@@QAE@XZ ENDP	; BaseVector<TradeConnectionPlot,0>::~BaseVector<TradeConnectionPlot,0>
_TEXT	ENDS
PUBLIC	??0?$BaseVector@UTradeConnectionPlot@@$0A@@@IAE@XZ ; BaseVector<TradeConnectionPlot,0>::BaseVector<TradeConnectionPlot,0>
; Function compile flags: /Ogtpy
;	COMDAT ??0?$BaseVector@UTradeConnectionPlot@@$0A@@@IAE@XZ
_TEXT	SEGMENT
??0?$BaseVector@UTradeConnectionPlot@@$0A@@@IAE@XZ PROC	; BaseVector<TradeConnectionPlot,0>::BaseVector<TradeConnectionPlot,0>, COMDAT
; _this$ = ecx

; 216  : 	BaseVector() : m_uiCurrSize(0), m_uiCurrMaxSize(0), m_pData(NULL) {};

	mov	eax, ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	ret	0
??0?$BaseVector@UTradeConnectionPlot@@$0A@@@IAE@XZ ENDP	; BaseVector<TradeConnectionPlot,0>::BaseVector<TradeConnectionPlot,0>
_TEXT	ENDS
PUBLIC	??1?$_Container_base_aux_alloc_empty@V?$allocator@W4PolicyTypes@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_empty<std::allocator<enum PolicyTypes> >::~_Container_base_aux_alloc_empty<std::allocator<enum PolicyTypes> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??1?$_Container_base_aux_alloc_empty@V?$allocator@W4PolicyTypes@@@std@@@std@@IAE@XZ
_TEXT	SEGMENT
??1?$_Container_base_aux_alloc_empty@V?$allocator@W4PolicyTypes@@@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_empty<std::allocator<enum PolicyTypes> >::~_Container_base_aux_alloc_empty<std::allocator<enum PolicyTypes> >, COMDAT
; _this$ = ecx

; 627  : 	~_Container_base_aux_alloc_empty() { }

	ret	0
??1?$_Container_base_aux_alloc_empty@V?$allocator@W4PolicyTypes@@@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<enum PolicyTypes> >::~_Container_base_aux_alloc_empty<std::allocator<enum PolicyTypes> >
_TEXT	ENDS
PUBLIC	??D?$_Vector_const_iterator@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QBEABW4PolicyTypes@@XZ ; std::_Vector_const_iterator<enum PolicyTypes,std::allocator<enum PolicyTypes> >::operator*
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??D?$_Vector_const_iterator@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QBEABW4PolicyTypes@@XZ
_TEXT	SEGMENT
??D?$_Vector_const_iterator@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QBEABW4PolicyTypes@@XZ PROC ; std::_Vector_const_iterator<enum PolicyTypes,std::allocator<enum PolicyTypes> >::operator*, COMDAT
; _this$ = ecx

; 92   : 
; 93   :  #if _HAS_ITERATOR_DEBUGGING
; 94   : 		if (this->_Mycont == 0
; 95   : 			|| _Myptr < ((_Myvec *)this->_Mycont)->_Myfirst
; 96   : 			|| ((_Myvec *)this->_Mycont)->_Mylast <= _Myptr)
; 97   : 			{
; 98   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 99   : 			_SCL_SECURE_OUT_OF_RANGE;
; 100  : 			}
; 101  :  #else
; 102  :  		_SCL_SECURE_VALIDATE(this->_Has_container());
; 103  : 		_SCL_SECURE_VALIDATE_RANGE(_Myptr < ((_Myvec *)(this->_Getmycont()))->_Mylast);
; 104  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 105  : 
; 106  : 		return (*_Myptr);

	mov	eax, DWORD PTR [ecx]

; 107  : 		}

	ret	0
??D?$_Vector_const_iterator@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QBEABW4PolicyTypes@@XZ ENDP ; std::_Vector_const_iterator<enum PolicyTypes,std::allocator<enum PolicyTypes> >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_const_iterator@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<enum PolicyTypes,std::allocator<enum PolicyTypes> >::operator++
; Function compile flags: /Ogtpy
;	COMDAT ??E?$_Vector_const_iterator@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_const_iterator@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<enum PolicyTypes,std::allocator<enum PolicyTypes> >::operator++, COMDAT
; _this$ = ecx

; 115  : 		{	// preincrement

	mov	eax, ecx

; 116  : 		_SCL_SECURE_VALIDATE(this->_Has_container());
; 117  : 		_SCL_SECURE_VALIDATE_RANGE(_Myptr < ((_Myvec *)(this->_Getmycont()))->_Mylast);
; 118  : 
; 119  :  #if _HAS_ITERATOR_DEBUGGING
; 120  : 		if (this->_Mycont == 0
; 121  : 			|| ((_Myvec *)this->_Mycont)->_Mylast <= _Myptr)
; 122  : 			_DEBUG_ERROR("vector iterator not incrementable");
; 123  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 124  : 
; 125  : 		++_Myptr;

	add	DWORD PTR [eax], 4

; 126  : 		return (*this);
; 127  : 		}

	ret	0
??E?$_Vector_const_iterator@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<enum PolicyTypes,std::allocator<enum PolicyTypes> >::operator++
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<enum PolicyTypes,std::allocator<enum PolicyTypes> >::operator==
; Function compile flags: /Ogtpy
;	COMDAT ??8?$_Vector_const_iterator@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<enum PolicyTypes,std::allocator<enum PolicyTypes> >::operator==, COMDAT
; _this$ = ecx

; 204  : 
; 205  :  #if _HAS_ITERATOR_DEBUGGING
; 206  : 		_Compat(_Right);
; 207  :  #else
; 208  : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));
; 209  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 210  : 
; 211  : 		return (_Myptr == _Right._Myptr);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	cl
	mov	al, cl

; 212  : 		}

	ret	4
??8?$_Vector_const_iterator@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<enum PolicyTypes,std::allocator<enum PolicyTypes> >::operator==
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::operator==
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 300  : 
; 301  :  #if _HAS_ITERATOR_DEBUGGING
; 302  : 			if (this->_Mycont == 0 || this->_Mycont != _Right._Mycont)
; 303  : 				{
; 304  : 				_DEBUG_ERROR("map/set iterators incompatible");
; 305  : 				_SCL_SECURE_INVALID_ARGUMENT;
; 306  : 				}
; 307  :  #else
; 308  : 			_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));
; 309  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 310  : 
; 311  : 			return (_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	cl
	mov	al, cl

; 312  : 			}

	ret	4
??8const_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??A?$BaseVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$00@@QBEABUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@I@Z ; BaseVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,1>::operator[]
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ??A?$BaseVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$00@@QBEABUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@I@Z
_TEXT	SEGMENT
_ui$ = 8						; size = 4
??A?$BaseVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$00@@QBEABUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@I@Z PROC ; BaseVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,1>::operator[], COMDAT
; _this$ = ecx

; 135  : 		FAssert(ui < m_uiCurrSize);
; 136  : 		return m_pData[ui];

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ui$[esp-4]
	lea	eax, DWORD PTR [eax+ecx*8]

; 137  : 	};

	ret	4
??A?$BaseVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$00@@QBEABUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@I@Z ENDP ; BaseVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,1>::operator[]
_TEXT	ENDS
PUBLIC	?size@?$BaseVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$00@@QBEIXZ ; BaseVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,1>::size
; Function compile flags: /Ogtpy
;	COMDAT ?size@?$BaseVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$00@@QBEIXZ
_TEXT	SEGMENT
?size@?$BaseVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$00@@QBEIXZ PROC ; BaseVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,1>::size, COMDAT
; _this$ = ecx

; 169  : 		return m_uiCurrSize;

	mov	eax, DWORD PTR [ecx+4]

; 170  : 	};

	ret	0
?size@?$BaseVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$00@@QBEIXZ ENDP ; BaseVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,1>::size
_TEXT	ENDS
PUBLIC	?begin@?$BaseVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$00@@QAEPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@XZ ; BaseVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,1>::begin
; Function compile flags: /Ogtpy
;	COMDAT ?begin@?$BaseVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$00@@QAEPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@XZ
_TEXT	SEGMENT
?begin@?$BaseVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$00@@QAEPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@XZ PROC ; BaseVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,1>::begin, COMDAT
; _this$ = ecx

; 194  :         return m_pData; 

	mov	eax, DWORD PTR [ecx]

; 195  :     };

	ret	0
?begin@?$BaseVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$00@@QAEPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@XZ ENDP ; BaseVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,1>::begin
_TEXT	ENDS
PUBLIC	?end@?$BaseVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$00@@QAEPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@XZ ; BaseVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,1>::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$BaseVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$00@@QAEPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@XZ
_TEXT	SEGMENT
?end@?$BaseVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$00@@QAEPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@XZ PROC ; BaseVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,1>::end, COMDAT
; _this$ = ecx

; 197  :         return m_pData+m_uiCurrSize; 

	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [ecx]
	lea	eax, DWORD PTR [ecx+eax*8]

; 198  :     };

	ret	0
?end@?$BaseVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$00@@QAEPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@XZ ENDP ; BaseVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,1>::end
_TEXT	ENDS
PUBLIC	??0WeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QAE@XZ ; CvWeightedVector<CvPlot *,800,1>::WeightedElement::WeightedElement
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvweightedvector.h
;	COMDAT ??0WeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QAE@XZ
_TEXT	SEGMENT
??0WeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QAE@XZ PROC ; CvWeightedVector<CvPlot *,800,1>::WeightedElement::WeightedElement, COMDAT
; _this$ = ecx

; 31   : 		{

	mov	eax, ecx
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0

; 32   : 		}

	ret	0
??0WeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QAE@XZ ENDP ; CvWeightedVector<CvPlot *,800,1>::WeightedElement::WeightedElement
_TEXT	ENDS
PUBLIC	?capacity@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QBEIXZ ; std::vector<Opinion,std::allocator<Opinion> >::capacity
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?capacity@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QBEIXZ PROC ; std::vector<Opinion,std::allocator<Opinion> >::capacity, COMDAT
; _this$ = ecx

; 635  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

	mov	eax, DWORD PTR [ecx+4]
	test	eax, eax
	jne	SHORT $LN3@capacity@2

; 636  : 		}

	ret	0
$LN3@capacity@2:

; 635  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

	mov	ecx, DWORD PTR [ecx+12]
	sub	ecx, eax
	mov	eax, 818089009				; 30c30c31H
	imul	ecx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx

; 636  : 		}

	ret	0
?capacity@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QBEIXZ ENDP ; std::vector<Opinion,std::allocator<Opinion> >::capacity
_TEXT	ENDS
PUBLIC	??1?$_Container_base_aux_alloc_empty@V?$allocator@UOpinion@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_empty<std::allocator<Opinion> >::~_Container_base_aux_alloc_empty<std::allocator<Opinion> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??1?$_Container_base_aux_alloc_empty@V?$allocator@UOpinion@@@std@@@std@@IAE@XZ
_TEXT	SEGMENT
??1?$_Container_base_aux_alloc_empty@V?$allocator@UOpinion@@@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_empty<std::allocator<Opinion> >::~_Container_base_aux_alloc_empty<std::allocator<Opinion> >, COMDAT
; _this$ = ecx

; 627  : 	~_Container_base_aux_alloc_empty() { }

	ret	0
??1?$_Container_base_aux_alloc_empty@V?$allocator@UOpinion@@@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<Opinion> >::~_Container_base_aux_alloc_empty<std::allocator<Opinion> >
_TEXT	ENDS
PUBLIC	??0?$allocator@UOpinion@@@std@@QAE@XZ		; std::allocator<Opinion>::allocator<Opinion>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??0?$allocator@UOpinion@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@UOpinion@@@std@@QAE@XZ PROC		; std::allocator<Opinion>::allocator<Opinion>, COMDAT
; _this$ = ecx

; 119  : 	allocator() _THROW0()

	mov	eax, ecx

; 120  : 		{	// construct default allocator (do nothing)
; 121  : 		}

	ret	0
??0?$allocator@UOpinion@@@std@@QAE@XZ ENDP		; std::allocator<Opinion>::allocator<Opinion>
_TEXT	ENDS
PUBLIC	??0?$auto_ptr@VICvUnknown@@@std@@QAE@PAVICvUnknown@@@Z ; std::auto_ptr<ICvUnknown>::auto_ptr<ICvUnknown>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??0?$auto_ptr@VICvUnknown@@@std@@QAE@PAVICvUnknown@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$auto_ptr@VICvUnknown@@@std@@QAE@PAVICvUnknown@@@Z PROC ; std::auto_ptr<ICvUnknown>::auto_ptr<ICvUnknown>, COMDAT
; _this$ = ecx

; 661  : 		{	// construct from object pointer

	mov	eax, ecx
	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 662  : 		}

	ret	4
??0?$auto_ptr@VICvUnknown@@@std@@QAE@PAVICvUnknown@@@Z ENDP ; std::auto_ptr<ICvUnknown>::auto_ptr<ICvUnknown>
_TEXT	ENDS
PUBLIC	??1?$auto_ptr@VICvUnknown@@@std@@QAE@XZ		; std::auto_ptr<ICvUnknown>::~auto_ptr<ICvUnknown>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$auto_ptr@VICvUnknown@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$auto_ptr@VICvUnknown@@@std@@QAE@XZ PROC		; std::auto_ptr<ICvUnknown>::~auto_ptr<ICvUnknown>, COMDAT
; _this$ = ecx

; 721  : 		delete _Myptr;

	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	je	SHORT $LN3@auto_ptr@3
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	push	eax
	call	edx
$LN3@auto_ptr@3:

; 722  : 		}

	ret	0
??1?$auto_ptr@VICvUnknown@@@std@@QAE@XZ ENDP		; std::auto_ptr<ICvUnknown>::~auto_ptr<ICvUnknown>
_TEXT	ENDS
PUBLIC	?get@?$auto_ptr@VICvUnknown@@@std@@QBEPAVICvUnknown@@XZ ; std::auto_ptr<ICvUnknown>::get
; Function compile flags: /Ogtpy
;	COMDAT ?get@?$auto_ptr@VICvUnknown@@@std@@QBEPAVICvUnknown@@XZ
_TEXT	SEGMENT
?get@?$auto_ptr@VICvUnknown@@@std@@QBEPAVICvUnknown@@XZ PROC ; std::auto_ptr<ICvUnknown>::get, COMDAT
; _this$ = ecx

; 750  : 		return (_Myptr);

	mov	eax, DWORD PTR [ecx]

; 751  : 		}

	ret	0
?get@?$auto_ptr@VICvUnknown@@@std@@QBEPAVICvUnknown@@XZ ENDP ; std::auto_ptr<ICvUnknown>::get
_TEXT	ENDS
PUBLIC	__TI3?AVlength_error@std@@
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Xlen@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@KAXXZ ; std::vector<CvString,std::allocator<CvString> >::_Xlen
PUBLIC	__CTA3?AVlength_error@std@@
PUBLIC	__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
PUBLIC	??0length_error@std@@QAE@ABV01@@Z		; std::length_error::length_error
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
PUBLIC	??0logic_error@std@@QAE@ABV01@@Z		; std::logic_error::logic_error
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
EXTRN	__CxxThrowException@8:PROC
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlength_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0length_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT
__CTA3?AVlength_error@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT
__TI3?AVlength_error@std@@ DD 00H
	DD	FLAT:??1length_error@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVlength_error@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Xlen@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@KAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@KAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@KAXXZ$2
__ehfuncinfo$?_Xlen@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@KAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Xlen@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@KAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@KAXXZ
_TEXT	SEGMENT
$T243110 = -80						; size = 28
$T243109 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@KAXXZ PROC ; std::vector<CvString,std::allocator<CvString> >::_Xlen, COMDAT

; 1259 : 		{	// report a length_error

	push	-1
	push	__ehhandler$?_Xlen@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@KAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 68					; 00000044H

; 1260 : 		_THROW(length_error, "vector<T> too long");

	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T243110[esp+84]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T243109[esp+80]
	mov	DWORD PTR __$EHRec$[esp+88], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	lea	eax, DWORD PTR $T243110[esp+80]
	push	eax
	lea	ecx, DWORD PTR $T243109[esp+96]
	mov	BYTE PTR __$EHRec$[esp+92], 1
	mov	DWORD PTR $T243109[esp+84], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T243109[esp+84]
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+96], 0
	mov	DWORD PTR $T243109[esp+88], OFFSET ??_7length_error@std@@6B@
	call	__CxxThrowException@8
$LN13@Xlen:
$LN12@Xlen:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Xlen@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@KAXXZ$0:
	lea	ecx, DWORD PTR $T243110[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?_Xlen@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@KAXXZ$2:
	lea	ecx, DWORD PTR $T243109[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$?_Xlen@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@KAXXZ:
	mov	eax, OFFSET __ehfuncinfo$?_Xlen@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@KAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Xlen@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@KAXXZ ENDP ; std::vector<CvString,std::allocator<CvString> >::_Xlen
EXTRN	__imp_??0exception@std@@QAE@ABV01@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0logic_error@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0logic_error@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0logic_error@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0logic_error@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0logic_error@std@@QAE@ABV01@@Z PROC			; std::logic_error::logic_error, COMDAT
; _this$ = ecx
	push	-1
	push	__ehhandler$??0logic_error@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi
	push	edi
	mov	edi, DWORD PTR ___that$[esp+20]
	mov	esi, ecx
	push	edi
	mov	DWORD PTR _this$[esp+28], esi
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	add	edi, 12					; 0000000cH
	push	edi
	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR __$EHRec$[esp+36], 0
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	pop	edi
	mov	eax, esi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0logic_error@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??0logic_error@std@@QAE@ABV01@@Z:
	mov	eax, OFFSET __ehfuncinfo$??0logic_error@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0logic_error@std@@QAE@ABV01@@Z ENDP			; std::logic_error::logic_error
PUBLIC	??0?$_Container_base_aux_alloc_empty@V?$allocator@VCvString@@@std@@@std@@IAE@V?$allocator@VCvString@@@1@@Z ; std::_Container_base_aux_alloc_empty<std::allocator<CvString> >::_Container_base_aux_alloc_empty<std::allocator<CvString> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??0?$_Container_base_aux_alloc_empty@V?$allocator@VCvString@@@std@@@std@@IAE@V?$allocator@VCvString@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??0?$_Container_base_aux_alloc_empty@V?$allocator@VCvString@@@std@@@std@@IAE@V?$allocator@VCvString@@@1@@Z PROC ; std::_Container_base_aux_alloc_empty<std::allocator<CvString> >::_Container_base_aux_alloc_empty<std::allocator<CvString> >, COMDAT
; _this$ = ecx

; 618  : 	explicit _Container_base_aux_alloc_empty(_Alloc) { }

	mov	eax, ecx
	ret	4
??0?$_Container_base_aux_alloc_empty@V?$allocator@VCvString@@@std@@@std@@IAE@V?$allocator@VCvString@@@1@@Z ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<CvString> >::_Container_base_aux_alloc_empty<std::allocator<CvString> >
_TEXT	ENDS
PUBLIC	??0?$allocator@VCvString@@@std@@QAE@ABV01@@Z	; std::allocator<CvString>::allocator<CvString>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??0?$allocator@VCvString@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@VCvString@@@std@@QAE@ABV01@@Z PROC	; std::allocator<CvString>::allocator<CvString>, COMDAT
; _this$ = ecx

; 123  : 	allocator(const allocator<_Ty>&) _THROW0()

	mov	eax, ecx

; 124  : 		{	// construct by copying (do nothing)
; 125  : 		}

	ret	4
??0?$allocator@VCvString@@@std@@QAE@ABV01@@Z ENDP	; std::allocator<CvString>::allocator<CvString>
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Left
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Left, COMDAT

; 167  : 		return ((_Nodepref)(*_Pnode)._Left);

	mov	eax, DWORD PTR __Pnode$[esp-4]

; 168  : 		}

	ret	0
?_Left@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Parent
; Function compile flags: /Ogtpy
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Parent, COMDAT

; 172  : 		return ((_Nodepref)(*_Pnode)._Parent);

	mov	eax, DWORD PTR __Pnode$[esp-4]
	add	eax, 4

; 173  : 		}

	ret	0
?_Parent@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Right
; Function compile flags: /Ogtpy
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Right, COMDAT

; 177  : 		return ((_Nodepref)(*_Pnode)._Right);

	mov	eax, DWORD PTR __Pnode$[esp-4]
	add	eax, 8

; 178  : 		}

	ret	0
?_Right@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBIH@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Myval
; Function compile flags: /Ogtpy
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBIH@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBIH@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Myval, COMDAT

; 182  : 		return ((_Vref)(*_Pnode)._Myval);

	mov	eax, DWORD PTR __Pnode$[esp-4]
	add	eax, 12					; 0000000cH

; 183  : 		}

	ret	0
?_Myval@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBIH@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Node>::deallocate
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 140  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 141  : 		}

	ret	8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	?Destroy@?$BaseVector@UTradeConnectionPlot@@$0A@@@IAEXPAUTradeConnectionPlot@@I@Z ; BaseVector<TradeConnectionPlot,0>::Destroy
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ?Destroy@?$BaseVector@UTradeConnectionPlot@@$0A@@@IAEXPAUTradeConnectionPlot@@I@Z
_TEXT	SEGMENT
_pVal$ = 8						; size = 4
_uiNumElements$ = 12					; size = 4
?Destroy@?$BaseVector@UTradeConnectionPlot@@$0A@@@IAEXPAUTradeConnectionPlot@@I@Z PROC ; BaseVector<TradeConnectionPlot,0>::Destroy, COMDAT
; _this$ = ecx

; 221  : 		if( !bPODType){
; 222  : 			for(unsigned int i = 0; i < uiNumElements; ++i){
; 223  : 				pVal[i].~T();
; 224  : 			}
; 225  : 		}
; 226  : 	};

	ret	8
?Destroy@?$BaseVector@UTradeConnectionPlot@@$0A@@@IAEXPAUTradeConnectionPlot@@I@Z ENDP ; BaseVector<TradeConnectionPlot,0>::Destroy
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@W4PolicyTypes@@@std@@QAEXPAW4PolicyTypes@@I@Z ; std::allocator<enum PolicyTypes>::deallocate
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?deallocate@?$allocator@W4PolicyTypes@@@std@@QAEXPAW4PolicyTypes@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@W4PolicyTypes@@@std@@QAEXPAW4PolicyTypes@@I@Z PROC ; std::allocator<enum PolicyTypes>::deallocate, COMDAT
; _this$ = ecx

; 140  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 141  : 		}

	ret	8
?deallocate@?$allocator@W4PolicyTypes@@@std@@QAEXPAW4PolicyTypes@@I@Z ENDP ; std::allocator<enum PolicyTypes>::deallocate
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QAE@PAW4PolicyTypes@@@Z ; std::_Vector_const_iterator<enum PolicyTypes,std::allocator<enum PolicyTypes> >::_Vector_const_iterator<enum PolicyTypes,std::allocator<enum PolicyTypes> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QAE@PAW4PolicyTypes@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_const_iterator@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QAE@PAW4PolicyTypes@@@Z PROC ; std::_Vector_const_iterator<enum PolicyTypes,std::allocator<enum PolicyTypes> >::_Vector_const_iterator<enum PolicyTypes,std::allocator<enum PolicyTypes> >, COMDAT
; _this$ = ecx

; 84   : 	explicit _Vector_const_iterator(_Tptr _Ptr)

	mov	eax, ecx

; 85   : 		{	// construct with pointer _Ptr
; 86   : 		_Myptr = _Ptr;

	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 87   : 		}

	ret	4
??0?$_Vector_const_iterator@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QAE@PAW4PolicyTypes@@@Z ENDP ; std::_Vector_const_iterator<enum PolicyTypes,std::allocator<enum PolicyTypes> >::_Vector_const_iterator<enum PolicyTypes,std::allocator<enum PolicyTypes> >
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 244  : 			{	// construct with node pointer _Pnode

	mov	eax, ecx
	mov	ecx, DWORD PTR __Pnode$[esp-4]
	mov	DWORD PTR [eax], ecx

; 245  : 			}

	ret	4
??0const_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?Alloc@?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@IAEPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@I@Z ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::Alloc
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ?Alloc@?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@IAEPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@I@Z
_TEXT	SEGMENT
_uiSize$ = 8						; size = 4
?Alloc@?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@IAEPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@I@Z PROC ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::Alloc, COMDAT
; _this$ = ecx

; 795  : 	T* Alloc(unsigned int uiSize){

	push	esi
	push	edi

; 796  : 		T* pRet;
; 797  : 		if( uiSize > L ){

	mov	edi, DWORD PTR _uiSize$[esp+4]
	mov	esi, ecx
	cmp	edi, 800				; 00000320H
	jbe	SHORT $LN2@Alloc@2

; 798  : 			pRet = (T*)FMALLOCALIGNED( uiSize*sizeof(T), __alignof(T), AllocPool, nSubID );

	push	798					; 0000031eH
	push	OFFSET ??_C@_0GH@ECFAPJEJ@c?3?2users?2enormousapplepie?2docume@
	lea	eax, DWORD PTR [edi*8]
	push	4
	push	eax
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H

; 799  : 			m_uiCurrMaxSize = uiSize;

	mov	DWORD PTR [esi+8], edi
	pop	edi
	pop	esi

; 803  : 		}
; 804  : 		return pRet;
; 805  : 	};

	ret	4
$LN2@Alloc@2:
	pop	edi

; 800  : 		}else{
; 801  : 			pRet = (T*)m_aData;

	lea	eax, DWORD PTR [esi+12]

; 802  : 			m_uiCurrMaxSize = L;

	mov	DWORD PTR [esi+8], 800			; 00000320H
	pop	esi

; 803  : 		}
; 804  : 		return pRet;
; 805  : 	};

	ret	4
?Alloc@?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@IAEPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@I@Z ENDP ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::Alloc
_TEXT	ENDS
PUBLIC	??1?$BaseVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$00@@QAE@XZ ; BaseVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,1>::~BaseVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,1>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$BaseVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$00@@QAE@XZ
_TEXT	SEGMENT
??1?$BaseVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$00@@QAE@XZ PROC ; BaseVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,1>::~BaseVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,1>, COMDAT
; _this$ = ecx

; 111  : 	~BaseVector(){};

	ret	0
??1?$BaseVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$00@@QAE@XZ ENDP ; BaseVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,1>::~BaseVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,1>
_TEXT	ENDS
PUBLIC	??0?$BaseVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$00@@IAE@XZ ; BaseVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,1>::BaseVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,1>
; Function compile flags: /Ogtpy
;	COMDAT ??0?$BaseVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$00@@IAE@XZ
_TEXT	SEGMENT
??0?$BaseVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$00@@IAE@XZ PROC ; BaseVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,1>::BaseVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,1>, COMDAT
; _this$ = ecx

; 216  : 	BaseVector() : m_uiCurrSize(0), m_uiCurrMaxSize(0), m_pData(NULL) {};

	mov	eax, ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	ret	0
??0?$BaseVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$00@@IAE@XZ ENDP ; BaseVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,1>::BaseVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,1>
_TEXT	ENDS
PUBLIC	??0WeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QAE@ABU01@@Z ; CvWeightedVector<CvPlot *,800,1>::WeightedElement::WeightedElement
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvweightedvector.h
;	COMDAT ??0WeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QAE@ABU01@@Z
_TEXT	SEGMENT
_source$ = 8						; size = 4
??0WeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QAE@ABU01@@Z PROC ; CvWeightedVector<CvPlot *,800,1>::WeightedElement::WeightedElement, COMDAT
; _this$ = ecx

; 37   : 		{

	mov	eax, ecx
	mov	ecx, DWORD PTR _source$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx

; 38   : 		}

	ret	4
??0WeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QAE@ABU01@@Z ENDP ; CvWeightedVector<CvPlot *,800,1>::WeightedElement::WeightedElement
_TEXT	ENDS
PUBLIC	?_Xlen@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@KAXXZ ; std::vector<Opinion,std::allocator<Opinion> >::_Xlen
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
xdata$x	SEGMENT
__unwindtable$?_Xlen@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@KAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@KAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@KAXXZ$2
__ehfuncinfo$?_Xlen@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@KAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Xlen@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@KAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@KAXXZ
_TEXT	SEGMENT
$T243194 = -80						; size = 28
$T243193 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@KAXXZ PROC ; std::vector<Opinion,std::allocator<Opinion> >::_Xlen, COMDAT

; 1259 : 		{	// report a length_error

	push	-1
	push	__ehhandler$?_Xlen@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@KAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 68					; 00000044H

; 1260 : 		_THROW(length_error, "vector<T> too long");

	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T243194[esp+84]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T243193[esp+80]
	mov	DWORD PTR __$EHRec$[esp+88], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	lea	eax, DWORD PTR $T243194[esp+80]
	push	eax
	lea	ecx, DWORD PTR $T243193[esp+96]
	mov	BYTE PTR __$EHRec$[esp+92], 1
	mov	DWORD PTR $T243193[esp+84], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T243193[esp+84]
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+96], 0
	mov	DWORD PTR $T243193[esp+88], OFFSET ??_7length_error@std@@6B@
	call	__CxxThrowException@8
$LN13@Xlen@2:
$LN12@Xlen@2:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Xlen@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@KAXXZ$0:
	lea	ecx, DWORD PTR $T243194[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?_Xlen@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@KAXXZ$2:
	lea	ecx, DWORD PTR $T243193[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$?_Xlen@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@KAXXZ:
	mov	eax, OFFSET __ehfuncinfo$?_Xlen@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@KAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Xlen@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@KAXXZ ENDP ; std::vector<Opinion,std::allocator<Opinion> >::_Xlen
PUBLIC	??0?$_Container_base_aux_alloc_empty@V?$allocator@UOpinion@@@std@@@std@@IAE@V?$allocator@UOpinion@@@1@@Z ; std::_Container_base_aux_alloc_empty<std::allocator<Opinion> >::_Container_base_aux_alloc_empty<std::allocator<Opinion> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??0?$_Container_base_aux_alloc_empty@V?$allocator@UOpinion@@@std@@@std@@IAE@V?$allocator@UOpinion@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??0?$_Container_base_aux_alloc_empty@V?$allocator@UOpinion@@@std@@@std@@IAE@V?$allocator@UOpinion@@@1@@Z PROC ; std::_Container_base_aux_alloc_empty<std::allocator<Opinion> >::_Container_base_aux_alloc_empty<std::allocator<Opinion> >, COMDAT
; _this$ = ecx

; 618  : 	explicit _Container_base_aux_alloc_empty(_Alloc) { }

	mov	eax, ecx
	ret	4
??0?$_Container_base_aux_alloc_empty@V?$allocator@UOpinion@@@std@@@std@@IAE@V?$allocator@UOpinion@@@1@@Z ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<Opinion> >::_Container_base_aux_alloc_empty<std::allocator<Opinion> >
_TEXT	ENDS
PUBLIC	??0?$allocator@UOpinion@@@std@@QAE@ABV01@@Z	; std::allocator<Opinion>::allocator<Opinion>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??0?$allocator@UOpinion@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@UOpinion@@@std@@QAE@ABV01@@Z PROC	; std::allocator<Opinion>::allocator<Opinion>, COMDAT
; _this$ = ecx

; 123  : 	allocator(const allocator<_Ty>&) _THROW0()

	mov	eax, ecx

; 124  : 		{	// construct by copying (do nothing)
; 125  : 		}

	ret	4
??0?$allocator@UOpinion@@@std@@QAE@ABV01@@Z ENDP	; std::allocator<Opinion>::allocator<Opinion>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@UOpinion@@@std@@QAEXPAUOpinion@@I@Z ; std::allocator<Opinion>::deallocate
; Function compile flags: /Ogtpy
;	COMDAT ?deallocate@?$allocator@UOpinion@@@std@@QAEXPAUOpinion@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@UOpinion@@@std@@QAEXPAUOpinion@@I@Z PROC ; std::allocator<Opinion>::deallocate, COMDAT
; _this$ = ecx

; 140  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 141  : 		}

	ret	8
?deallocate@?$allocator@UOpinion@@@std@@QAEXPAUOpinion@@I@Z ENDP ; std::allocator<Opinion>::deallocate
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@PAUOpinion@@@Z ; std::_Vector_const_iterator<Opinion,std::allocator<Opinion> >::_Vector_const_iterator<Opinion,std::allocator<Opinion> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@PAUOpinion@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@PAUOpinion@@@Z PROC ; std::_Vector_const_iterator<Opinion,std::allocator<Opinion> >::_Vector_const_iterator<Opinion,std::allocator<Opinion> >, COMDAT
; _this$ = ecx

; 84   : 	explicit _Vector_const_iterator(_Tptr _Ptr)

	mov	eax, ecx

; 85   : 		{	// construct with pointer _Ptr
; 86   : 		_Myptr = _Ptr;

	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 87   : 		}

	ret	4
??0?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@PAUOpinion@@@Z ENDP ; std::_Vector_const_iterator<Opinion,std::allocator<Opinion> >::_Vector_const_iterator<Opinion,std::allocator<Opinion> >
_TEXT	ENDS
PUBLIC	??G?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QBEHABV01@@Z ; std::_Vector_const_iterator<Opinion,std::allocator<Opinion> >::operator-
; Function compile flags: /Ogtpy
;	COMDAT ??G?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QBEHABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??G?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QBEHABV01@@Z PROC ; std::_Vector_const_iterator<Opinion,std::allocator<Opinion> >::operator-, COMDAT
; _this$ = ecx

; 187  : 
; 188  :  #if _HAS_ITERATOR_DEBUGGING
; 189  : 		_Compat(_Right);
; 190  :  #else
; 191  : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));
; 192  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 193  : 
; 194  : 		return (_Myptr - _Right._Myptr);

	mov	eax, DWORD PTR __Right$[esp-4]
	mov	ecx, DWORD PTR [ecx]
	sub	ecx, DWORD PTR [eax]
	mov	eax, 818089009				; 30c30c31H
	imul	ecx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx

; 195  : 		}

	ret	4
??G?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QBEHABV01@@Z ENDP ; std::_Vector_const_iterator<Opinion,std::allocator<Opinion> >::operator-
_TEXT	ENDS
PUBLIC	??0Opinion@@QAE@ABU0@@Z				; Opinion::Opinion
EXTRN	__imp_??0String@Localization@@QAE@ABV01@@Z:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??0Opinion@@QAE@ABU0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0Opinion@@QAE@ABU0@@Z PROC				; Opinion::Opinion, COMDAT
; _this$ = ecx
	push	esi
	push	edi
	mov	edi, DWORD PTR ___that$[esp+4]
	push	edi
	mov	esi, ecx
	call	DWORD PTR __imp_??0String@Localization@@QAE@ABV01@@Z
	mov	eax, DWORD PTR [edi+80]
	mov	DWORD PTR [esi+80], eax
	pop	edi
	mov	eax, esi
	pop	esi
	ret	4
??0Opinion@@QAE@ABU0@@Z ENDP				; Opinion::Opinion
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@VCvString@@@std@@QBEIXZ	; std::allocator<CvString>::max_size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?max_size@?$allocator@VCvString@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@VCvString@@@std@@QBEIXZ PROC	; std::allocator<CvString>::max_size, COMDAT
; _this$ = ecx

; 165  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 166  : 		return (0 < _Count ? _Count : 1);

	mov	eax, 153391689				; 09249249H

; 167  : 		}

	ret	0
?max_size@?$allocator@VCvString@@@std@@QBEIXZ ENDP	; std::allocator<CvString>::max_size
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Isnil
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Isnil, COMDAT

; 157  : 		return ((_Charref)(*_Pnode)._Isnil);

	mov	eax, DWORD PTR __Pnode$[esp-4]
	add	eax, 21					; 00000015H

; 158  : 		}

	ret	0
?_Isnil@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Min
; Function compile flags: /Ogtpy
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Min, COMDAT

; 1313 : 		while (!_Isnil(_Left(_Pnode)))

	mov	eax, DWORD PTR __Pnode$[esp-4]
	mov	ecx, DWORD PTR [eax]
	cmp	BYTE PTR [ecx+21], 0
	jne	SHORT $LN1@Min
	npad	4
$LL2@Min:

; 1314 : 			_Pnode = _Left(_Pnode);

	mov	eax, ecx
	mov	ecx, DWORD PTR [eax]
	cmp	BYTE PTR [ecx+21], 0
	je	SHORT $LL2@Min
$LN1@Min:

; 1315 : 		return (_Pnode);
; 1316 : 		}

	ret	0
?_Min@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?Destroy@?$BaseVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$00@@IAEXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@I@Z ; BaseVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,1>::Destroy
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ?Destroy@?$BaseVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$00@@IAEXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@I@Z
_TEXT	SEGMENT
_pVal$ = 8						; size = 4
_uiNumElements$ = 12					; size = 4
?Destroy@?$BaseVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$00@@IAEXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@I@Z PROC ; BaseVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,1>::Destroy, COMDAT
; _this$ = ecx

; 221  : 		if( !bPODType){
; 222  : 			for(unsigned int i = 0; i < uiNumElements; ++i){
; 223  : 				pVal[i].~T();
; 224  : 			}
; 225  : 		}
; 226  : 	};

	ret	8
?Destroy@?$BaseVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$00@@IAEXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@I@Z ENDP ; BaseVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,1>::Destroy
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@UOpinion@@@std@@QBEIXZ	; std::allocator<Opinion>::max_size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?max_size@?$allocator@UOpinion@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@UOpinion@@@std@@QBEIXZ PROC	; std::allocator<Opinion>::max_size, COMDAT
; _this$ = ecx

; 165  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 166  : 		return (0 < _Count ? _Count : 1);

	mov	eax, 51130563				; 030c30c3H

; 167  : 		}

	ret	0
?max_size@?$allocator@UOpinion@@@std@@QBEIXZ ENDP	; std::allocator<Opinion>::max_size
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Color
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Color, COMDAT

; 152  : 		return ((_Charref)(*_Pnode)._Color);

	mov	eax, DWORD PTR __Pnode$[esp-4]
	add	eax, 20					; 00000014H

; 153  : 		}

	ret	0
?_Color@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Max
; Function compile flags: /Ogtpy
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Max, COMDAT

; 1306 : 		while (!_Isnil(_Right(_Pnode)))

	mov	eax, DWORD PTR __Pnode$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	cmp	BYTE PTR [ecx+21], 0
	jne	SHORT $LN1@Max
	npad	3
$LL2@Max:

; 1307 : 			_Pnode = _Right(_Pnode);

	mov	eax, ecx
	mov	ecx, DWORD PTR [eax+8]
	cmp	BYTE PTR [ecx+21], 0
	je	SHORT $LL2@Max
$LN1@Max:

; 1308 : 		return (_Pnode);
; 1309 : 		}

	ret	0
?_Max@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Max
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Rmost
; Function compile flags: /Ogtpy
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1320 : 		return (_Right(_Myhead));

	mov	eax, DWORD PTR [ecx+4]
	add	eax, 8

; 1321 : 		}

	ret	0
?_Rmost@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Root
; Function compile flags: /Ogtpy
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1325 : 		return (_Parent(_Myhead));

	mov	eax, DWORD PTR [ecx+4]
	add	eax, 4

; 1326 : 		}

	ret	0
?_Root@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Rrotate
; Function compile flags: /Ogtpy
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1330 : 		_Nodeptr _Pnode = _Left(_Wherenode);

	mov	edx, DWORD PTR __Wherenode$[esp-4]
	mov	eax, DWORD PTR [edx]
	push	esi

; 1331 : 		_Left(_Wherenode) = _Right(_Pnode);

	mov	esi, DWORD PTR [eax+8]
	mov	DWORD PTR [edx], esi

; 1332 : 
; 1333 : 		if (!_Isnil(_Right(_Pnode)))

	mov	esi, DWORD PTR [eax+8]
	cmp	BYTE PTR [esi+21], 0
	jne	SHORT $LN5@Rrotate

; 1334 : 			_Parent(_Right(_Pnode)) = _Wherenode;

	mov	DWORD PTR [esi+4], edx
$LN5@Rrotate:

; 1335 : 		_Parent(_Pnode) = _Parent(_Wherenode);

	mov	esi, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], esi

; 1336 : 
; 1337 : 		if (_Wherenode == _Root())

	mov	ecx, DWORD PTR [ecx+4]
	pop	esi
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN4@Rrotate

; 1338 : 			_Root() = _Pnode;

	mov	DWORD PTR [ecx+4], eax

; 1343 : 
; 1344 : 		_Right(_Pnode) = _Wherenode;

	mov	DWORD PTR [eax+8], edx

; 1345 : 		_Parent(_Wherenode) = _Pnode;

	mov	DWORD PTR [edx+4], eax

; 1346 : 		}

	ret	4
$LN4@Rrotate:

; 1339 : 		else if (_Wherenode == _Right(_Parent(_Wherenode)))

	mov	ecx, DWORD PTR [edx+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN2@Rrotate

; 1340 : 			_Right(_Parent(_Wherenode)) = _Pnode;

	mov	DWORD PTR [ecx+8], eax

; 1343 : 
; 1344 : 		_Right(_Pnode) = _Wherenode;

	mov	DWORD PTR [eax+8], edx

; 1345 : 		_Parent(_Wherenode) = _Pnode;

	mov	DWORD PTR [edx+4], eax

; 1346 : 		}

	ret	4
$LN2@Rrotate:

; 1341 : 		else
; 1342 : 			_Left(_Parent(_Wherenode)) = _Pnode;

	mov	DWORD PTR [ecx], eax

; 1343 : 
; 1344 : 		_Right(_Pnode) = _Wherenode;

	mov	DWORD PTR [eax+8], edx

; 1345 : 		_Parent(_Wherenode) = _Pnode;

	mov	DWORD PTR [edx+4], eax

; 1346 : 		}

	ret	4
?_Rrotate@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::_Mynode
; Function compile flags: /Ogtpy
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@3@XZ
_TEXT	SEGMENT
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@3@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx

; 410  : 			return (_Ptr);

	mov	eax, DWORD PTR [ecx]

; 411  : 			}

	ret	0
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@3@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	??Y?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<Opinion,std::allocator<Opinion> >::operator+=
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??Y?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_const_iterator<Opinion,std::allocator<Opinion> >::operator+=, COMDAT
; _this$ = ecx

; 159  : 		{	// increment by integer

	mov	eax, ecx

; 160  : 		_SCL_SECURE_VALIDATE(this->_Has_container());
; 161  : 		_SCL_SECURE_VALIDATE_RANGE(
; 162  : 			_Myptr + _Off <= ((_Myvec *)(this->_Getmycont()))->_Mylast &&
; 163  : 			_Myptr + _Off >= ((_Myvec *)(this->_Getmycont()))->_Myfirst);
; 164  : 		_Myptr += _Off;

	mov	ecx, DWORD PTR __Off$[esp-4]
	imul	ecx, 84					; 00000054H
	add	DWORD PTR [eax], ecx

; 165  : 		return (*this);
; 166  : 		}

	ret	4
??Y?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_const_iterator<Opinion,std::allocator<Opinion> >::operator+=
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@PAVCvString@@@Z ; std::_Vector_const_iterator<CvString,std::allocator<CvString> >::_Vector_const_iterator<CvString,std::allocator<CvString> >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@PAVCvString@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@PAVCvString@@@Z PROC ; std::_Vector_const_iterator<CvString,std::allocator<CvString> >::_Vector_const_iterator<CvString,std::allocator<CvString> >, COMDAT
; _this$ = ecx

; 84   : 	explicit _Vector_const_iterator(_Tptr _Ptr)

	mov	eax, ecx

; 85   : 		{	// construct with pointer _Ptr
; 86   : 		_Myptr = _Ptr;

	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 87   : 		}

	ret	4
??0?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@PAVCvString@@@Z ENDP ; std::_Vector_const_iterator<CvString,std::allocator<CvString> >::_Vector_const_iterator<CvString,std::allocator<CvString> >
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<CvString,std::allocator<CvString> >::operator==
; Function compile flags: /Ogtpy
;	COMDAT ??8?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<CvString,std::allocator<CvString> >::operator==, COMDAT
; _this$ = ecx

; 204  : 
; 205  :  #if _HAS_ITERATOR_DEBUGGING
; 206  : 		_Compat(_Right);
; 207  :  #else
; 208  : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));
; 209  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 210  : 
; 211  : 		return (_Myptr == _Right._Myptr);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	cl
	mov	al, cl

; 212  : 		}

	ret	4
??8?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<CvString,std::allocator<CvString> >::operator==
_TEXT	ENDS
PUBLIC	?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push
EXTRN	_lua_pushnil:PROC
EXTRN	_lua_remove:PROC
EXTRN	_lua_pushlightuserdata:PROC
EXTRN	_lua_rawget:PROC
EXTRN	?PushMethods@CvLuaCity@@SAXPAUlua_State@@H@Z:PROC ; CvLuaCity::PushMethods
EXTRN	_lua_gettop:PROC
EXTRN	_lua_setfield:PROC
EXTRN	_lua_pushvalue:PROC
EXTRN	_lua_setmetatable:PROC
EXTRN	_lua_rawset:PROC
EXTRN	_lua_createtable:PROC
EXTRN	_lua_settop:PROC
EXTRN	_lua_type:PROC
EXTRN	_lua_getfield:PROC
EXTRN	?GetTypeName@CvLuaCity@@SAPBDXZ:PROC		; CvLuaCity::GetTypeName
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluascopedinstance.h
;	COMDAT ?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_pkType$ = 12						; size = 4
?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z PROC ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push, COMDAT

; 39   : {

	push	edi

; 40   : 	//Pushing an instance involves more than just actually pushing a pointer into the
; 41   : 	//Lua stack.  There are some caching optimizations that are done as well as some
; 42   : 	//checks.
; 43   : 	//The first step is to load or create a global table <Typename> to store all member
; 44   : 	//methods and all pushed instances.  This conserves memory and offers faster pushing
; 45   : 	//speed.
; 46   : 	//If <Typename>.__instances[pkType] is not nil, return that value.
; 47   : 	//otherwise push a new instance and assign it to __instances.
; 48   : 
; 49   : 	//NOTE: Raw gets and sets are used as an optimization over using lua_[get,set]field
; 50   : 	if(pkType)

	mov	edi, DWORD PTR _pkType$[esp]
	test	edi, edi
	je	$LN4@Push
	push	ebx
	push	ebp
	push	esi

; 51   : 	{
; 52   : 		//const int t = lua_gettop(L);
; 53   : 
; 54   : 		lua_getglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaCity@@SAPBDXZ		; CvLuaCity::GetTypeName
	mov	esi, DWORD PTR _L$[esp+12]
	push	eax
	push	-10002					; ffffd8eeH
	push	esi
	call	_lua_getfield

; 55   : 		if(lua_isnil(L, -1))

	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	$LN7@Push

; 56   : 		{
; 57   : 			//Typename wasn't found, time to build it.
; 58   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	push	esi
	call	_lua_settop

; 59   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 60   : 
; 61   : 			//Create weak __instances table.
; 62   : 			lua_pushstring(L, "__instances");

	push	OFFSET $SG237656
	push	esi
	call	_lua_pushstring

; 63   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 64   : 
; 65   : 			//Create __instances.mt
; 66   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 67   : 			lua_pushstring(L, "__mode");

	push	OFFSET $SG237657
	push	esi
	call	_lua_pushstring

; 68   : 			lua_pushstring(L, "v");

	push	OFFSET $SG237658
	push	esi
	call	_lua_pushstring
	add	esp, 68					; 00000044H

; 69   : 			lua_rawset(L, -3);				// mt.__mode = "v";

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 70   : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_setmetatable

; 71   : 
; 72   : 			lua_rawset(L, -3);				//type.__instances = t;

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 73   : 
; 74   : 
; 75   : 			lua_pushvalue(L, -1);

	push	-1
	push	esi
	call	_lua_pushvalue

; 76   : 			lua_setglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaCity@@SAPBDXZ		; CvLuaCity::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	push	esi
	call	_lua_setfield

; 77   : 
; 78   : 			Derived::PushMethods(L, lua_gettop(L));

	push	esi
	call	_lua_gettop
	push	eax
	push	esi
	call	?PushMethods@CvLuaCity@@SAXPAUlua_State@@H@Z ; CvLuaCity::PushMethods
	add	esp, 56					; 00000038H
$LN7@Push:

; 79   : 		}
; 80   : 		const int type_index = lua_gettop(L);

	push	esi
	call	_lua_gettop

; 81   : 
; 82   : 		lua_pushstring(L, "__instances");

	push	OFFSET $SG237660
	push	esi
	mov	ebx, eax
	call	_lua_pushstring

; 83   : 		lua_rawget(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_rawget

; 84   : 
; 85   : 		const int instances_index = lua_gettop(L);

	push	esi
	call	_lua_gettop

; 86   : 
; 87   : 		lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	mov	ebp, eax
	call	_lua_pushlightuserdata

; 88   : 
; 89   : 		lua_rawget(L, -2);					//retrieve type.__instances[pkType]

	push	-2					; fffffffeH
	push	esi
	call	_lua_rawget

; 90   : 
; 91   : 		if(lua_isnil(L, -1))

	push	-1
	push	esi
	call	_lua_type
	add	esp, 48					; 00000030H
	test	eax, eax
	jne	SHORT $LN2@Push

; 92   : 		{
; 93   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	push	esi
	call	_lua_settop

; 94   : 
; 95   : 			//Push new instance
; 96   : 			lua_createtable(L, 0, 1);

	push	1
	push	0
	push	esi
	call	_lua_createtable

; 97   : 			lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	call	_lua_pushlightuserdata

; 98   : 			lua_setfield(L, -2, "__instance");

	push	OFFSET $SG237663
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 99   : 
; 100  : 			lua_createtable(L, 0, 1);			// create mt

	push	1
	push	0
	push	esi
	call	_lua_createtable

; 101  : 			lua_pushstring(L, "__index");

	push	OFFSET $SG237664
	push	esi
	call	_lua_pushstring

; 102  : 			lua_pushvalue(L, type_index);

	push	ebx
	push	esi
	call	_lua_pushvalue
	add	esp, 68					; 00000044H

; 103  : 			lua_rawset(L, -3);					// mt.__index = Type

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 104  : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_setmetatable

; 105  : 
; 106  : 			//Assign it in instances
; 107  : 			lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	call	_lua_pushlightuserdata

; 108  : 			lua_pushvalue(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_pushvalue

; 109  : 			lua_rawset(L, instances_index);				//__instances[pkType] = t;

	push	ebp
	push	esi
	call	_lua_rawset
	add	esp, 40					; 00000028H
$LN2@Push:

; 110  : 		}
; 111  : 
; 112  : 		//VERIFY(instances_index > type_index);
; 113  : 		lua_remove(L, instances_index);

	push	ebp
	push	esi
	call	_lua_remove

; 114  : 		lua_remove(L, type_index);

	push	ebx
	push	esi
	call	_lua_remove
	add	esp, 16					; 00000010H
	pop	esi
	pop	ebp
	pop	ebx
	pop	edi

; 122  : 	}
; 123  : }

	ret	0
$LN4@Push:

; 115  : 
; 116  : 		//const int dt = lua_gettop(L);
; 117  : 		//VERIFY(dt == t + 1)
; 118  : 	}
; 119  : 	else
; 120  : 	{
; 121  : 		lua_pushnil(L);

	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushnil
	add	esp, 4
	pop	edi

; 122  : 	}
; 123  : }

	ret	0
?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z ENDP ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push
_TEXT	ENDS
PUBLIC	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
EXTRN	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z:PROC ; CvLuaCity::HandleMissingInstance
EXTRN	_luaL_error:PROC
EXTRN	_lua_touserdata:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_bErrorOnFail$ = 16					; size = 1
?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z PROC ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance, COMDAT

; 127  : {

	push	ebx
	push	ebp
	push	esi

; 128  : 	const int stack_size = lua_gettop(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	mov	ebp, eax

; 129  : 	bool bFail = true;
; 130  : 
; 131  : 	InstanceType* pkInstance = NULL;
; 132  : 	if(lua_type(L, idx) == LUA_TTABLE)

	mov	eax, DWORD PTR _idx$[esp+16]
	push	eax
	push	esi
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN3@GetInstanc

; 133  : 	{
; 134  : 		lua_getfield(L, idx, "__instance");

	mov	ecx, DWORD PTR _idx$[esp+12]
	push	OFFSET $SG237679
	push	ecx
	push	esi
	call	_lua_getfield

; 135  : 		if(lua_type(L, -1) == LUA_TLIGHTUSERDATA)

	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN3@GetInstanc

; 136  : 		{
; 137  : 			pkInstance = static_cast<InstanceType*>(lua_touserdata(L, -1));

	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8

; 138  : 			if(pkInstance)

	test	edi, edi
	je	SHORT $LN3@GetInstanc

; 139  : 			{
; 140  : 				bFail = false;

	xor	bl, bl
$LN3@GetInstanc:

; 141  : 			}
; 142  : 		}
; 143  : 	}
; 144  : 
; 145  : 	lua_settop(L, stack_size);

	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8

; 146  : 
; 147  : 	if(bFail && bErrorOnFail)

	test	bl, bl
	je	SHORT $LN9@GetInstanc
	cmp	BYTE PTR _bErrorOnFail$[esp+12], 0
	je	SHORT $LN9@GetInstanc

; 148  : 	{
; 149  : 		if(idx == 1)

	cmp	DWORD PTR _idx$[esp+12], 1
	jne	SHORT $LN1@GetInstanc

; 150  : 			luaL_error(L, "Not a valid instance.  Either the instance is NULL or you used '.' instead of ':'.");

	push	OFFSET $SG237685
	push	esi
	call	_luaL_error
	add	esp, 8
$LN1@GetInstanc:

; 151  : 		Derived::HandleMissingInstance(L);

	push	esi
	call	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
	add	esp, 4
$LN9@GetInstanc:

; 152  : 	}
; 153  : 	return pkInstance;

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 154  : }

	ret	0
?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ENDP ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
_TEXT	ENDS
PUBLIC	?DefaultHandleMissingInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@KAXPAUlua_State@@@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::DefaultHandleMissingInstance
; Function compile flags: /Ogtpy
;	COMDAT ?DefaultHandleMissingInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@KAXPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?DefaultHandleMissingInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@KAXPAUlua_State@@@Z PROC ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::DefaultHandleMissingInstance, COMDAT

; 165  : 	luaL_error(L, "Instance does not exist.");

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET $SG237742
	push	eax
	call	_luaL_error
	add	esp, 8

; 166  : }

	ret	0
?DefaultHandleMissingInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@KAXPAUlua_State@@@Z ENDP ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::DefaultHandleMissingInstance
_TEXT	ENDS
PUBLIC	?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
EXTRN	?PushMethods@CvLuaPlot@@SAXPAUlua_State@@H@Z:PROC ; CvLuaPlot::PushMethods
EXTRN	?GetTypeName@CvLuaPlot@@SAPBDXZ:PROC		; CvLuaPlot::GetTypeName
; Function compile flags: /Ogtpy
;	COMDAT ?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_pkType$ = 12						; size = 4
?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z PROC ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push, COMDAT

; 39   : {

	push	edi

; 40   : 	//Pushing an instance involves more than just actually pushing a pointer into the
; 41   : 	//Lua stack.  There are some caching optimizations that are done as well as some
; 42   : 	//checks.
; 43   : 	//The first step is to load or create a global table <Typename> to store all member
; 44   : 	//methods and all pushed instances.  This conserves memory and offers faster pushing
; 45   : 	//speed.
; 46   : 	//If <Typename>.__instances[pkType] is not nil, return that value.
; 47   : 	//otherwise push a new instance and assign it to __instances.
; 48   : 
; 49   : 	//NOTE: Raw gets and sets are used as an optimization over using lua_[get,set]field
; 50   : 	if(pkType)

	mov	edi, DWORD PTR _pkType$[esp]
	test	edi, edi
	je	$LN4@Push@2
	push	ebx
	push	ebp
	push	esi

; 51   : 	{
; 52   : 		//const int t = lua_gettop(L);
; 53   : 
; 54   : 		lua_getglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaPlot@@SAPBDXZ		; CvLuaPlot::GetTypeName
	mov	esi, DWORD PTR _L$[esp+12]
	push	eax
	push	-10002					; ffffd8eeH
	push	esi
	call	_lua_getfield

; 55   : 		if(lua_isnil(L, -1))

	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	$LN7@Push@2

; 56   : 		{
; 57   : 			//Typename wasn't found, time to build it.
; 58   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	push	esi
	call	_lua_settop

; 59   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 60   : 
; 61   : 			//Create weak __instances table.
; 62   : 			lua_pushstring(L, "__instances");

	push	OFFSET $SG237753
	push	esi
	call	_lua_pushstring

; 63   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 64   : 
; 65   : 			//Create __instances.mt
; 66   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 67   : 			lua_pushstring(L, "__mode");

	push	OFFSET $SG237754
	push	esi
	call	_lua_pushstring

; 68   : 			lua_pushstring(L, "v");

	push	OFFSET $SG237755
	push	esi
	call	_lua_pushstring
	add	esp, 68					; 00000044H

; 69   : 			lua_rawset(L, -3);				// mt.__mode = "v";

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 70   : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_setmetatable

; 71   : 
; 72   : 			lua_rawset(L, -3);				//type.__instances = t;

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 73   : 
; 74   : 
; 75   : 			lua_pushvalue(L, -1);

	push	-1
	push	esi
	call	_lua_pushvalue

; 76   : 			lua_setglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaPlot@@SAPBDXZ		; CvLuaPlot::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	push	esi
	call	_lua_setfield

; 77   : 
; 78   : 			Derived::PushMethods(L, lua_gettop(L));

	push	esi
	call	_lua_gettop
	push	eax
	push	esi
	call	?PushMethods@CvLuaPlot@@SAXPAUlua_State@@H@Z ; CvLuaPlot::PushMethods
	add	esp, 56					; 00000038H
$LN7@Push@2:

; 79   : 		}
; 80   : 		const int type_index = lua_gettop(L);

	push	esi
	call	_lua_gettop

; 81   : 
; 82   : 		lua_pushstring(L, "__instances");

	push	OFFSET $SG237757
	push	esi
	mov	ebx, eax
	call	_lua_pushstring

; 83   : 		lua_rawget(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_rawget

; 84   : 
; 85   : 		const int instances_index = lua_gettop(L);

	push	esi
	call	_lua_gettop

; 86   : 
; 87   : 		lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	mov	ebp, eax
	call	_lua_pushlightuserdata

; 88   : 
; 89   : 		lua_rawget(L, -2);					//retrieve type.__instances[pkType]

	push	-2					; fffffffeH
	push	esi
	call	_lua_rawget

; 90   : 
; 91   : 		if(lua_isnil(L, -1))

	push	-1
	push	esi
	call	_lua_type
	add	esp, 48					; 00000030H
	test	eax, eax
	jne	SHORT $LN2@Push@2

; 92   : 		{
; 93   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	push	esi
	call	_lua_settop

; 94   : 
; 95   : 			//Push new instance
; 96   : 			lua_createtable(L, 0, 1);

	push	1
	push	0
	push	esi
	call	_lua_createtable

; 97   : 			lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	call	_lua_pushlightuserdata

; 98   : 			lua_setfield(L, -2, "__instance");

	push	OFFSET $SG237760
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 99   : 
; 100  : 			lua_createtable(L, 0, 1);			// create mt

	push	1
	push	0
	push	esi
	call	_lua_createtable

; 101  : 			lua_pushstring(L, "__index");

	push	OFFSET $SG237761
	push	esi
	call	_lua_pushstring

; 102  : 			lua_pushvalue(L, type_index);

	push	ebx
	push	esi
	call	_lua_pushvalue
	add	esp, 68					; 00000044H

; 103  : 			lua_rawset(L, -3);					// mt.__index = Type

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 104  : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_setmetatable

; 105  : 
; 106  : 			//Assign it in instances
; 107  : 			lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	call	_lua_pushlightuserdata

; 108  : 			lua_pushvalue(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_pushvalue

; 109  : 			lua_rawset(L, instances_index);				//__instances[pkType] = t;

	push	ebp
	push	esi
	call	_lua_rawset
	add	esp, 40					; 00000028H
$LN2@Push@2:

; 110  : 		}
; 111  : 
; 112  : 		//VERIFY(instances_index > type_index);
; 113  : 		lua_remove(L, instances_index);

	push	ebp
	push	esi
	call	_lua_remove

; 114  : 		lua_remove(L, type_index);

	push	ebx
	push	esi
	call	_lua_remove
	add	esp, 16					; 00000010H
	pop	esi
	pop	ebp
	pop	ebx
	pop	edi

; 122  : 	}
; 123  : }

	ret	0
$LN4@Push@2:

; 115  : 
; 116  : 		//const int dt = lua_gettop(L);
; 117  : 		//VERIFY(dt == t + 1)
; 118  : 	}
; 119  : 	else
; 120  : 	{
; 121  : 		lua_pushnil(L);

	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushnil
	add	esp, 4
	pop	edi

; 122  : 	}
; 123  : }

	ret	0
?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ENDP ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
_TEXT	ENDS
PUBLIC	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance
EXTRN	?HandleMissingInstance@CvLuaPlot@@SAXPAUlua_State@@@Z:PROC ; CvLuaPlot::HandleMissingInstance
; Function compile flags: /Ogtpy
;	COMDAT ?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_bErrorOnFail$ = 16					; size = 1
?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z PROC ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance, COMDAT

; 127  : {

	push	ebx
	push	ebp
	push	esi

; 128  : 	const int stack_size = lua_gettop(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	mov	ebp, eax

; 129  : 	bool bFail = true;
; 130  : 
; 131  : 	InstanceType* pkInstance = NULL;
; 132  : 	if(lua_type(L, idx) == LUA_TTABLE)

	mov	eax, DWORD PTR _idx$[esp+16]
	push	eax
	push	esi
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN3@GetInstanc@2

; 133  : 	{
; 134  : 		lua_getfield(L, idx, "__instance");

	mov	ecx, DWORD PTR _idx$[esp+12]
	push	OFFSET $SG237776
	push	ecx
	push	esi
	call	_lua_getfield

; 135  : 		if(lua_type(L, -1) == LUA_TLIGHTUSERDATA)

	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN3@GetInstanc@2

; 136  : 		{
; 137  : 			pkInstance = static_cast<InstanceType*>(lua_touserdata(L, -1));

	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8

; 138  : 			if(pkInstance)

	test	edi, edi
	je	SHORT $LN3@GetInstanc@2

; 139  : 			{
; 140  : 				bFail = false;

	xor	bl, bl
$LN3@GetInstanc@2:

; 141  : 			}
; 142  : 		}
; 143  : 	}
; 144  : 
; 145  : 	lua_settop(L, stack_size);

	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8

; 146  : 
; 147  : 	if(bFail && bErrorOnFail)

	test	bl, bl
	je	SHORT $LN9@GetInstanc@2
	cmp	BYTE PTR _bErrorOnFail$[esp+12], 0
	je	SHORT $LN9@GetInstanc@2

; 148  : 	{
; 149  : 		if(idx == 1)

	cmp	DWORD PTR _idx$[esp+12], 1
	jne	SHORT $LN1@GetInstanc@2

; 150  : 			luaL_error(L, "Not a valid instance.  Either the instance is NULL or you used '.' instead of ':'.");

	push	OFFSET $SG237782
	push	esi
	call	_luaL_error
	add	esp, 8
$LN1@GetInstanc@2:

; 151  : 		Derived::HandleMissingInstance(L);

	push	esi
	call	?HandleMissingInstance@CvLuaPlot@@SAXPAUlua_State@@@Z ; CvLuaPlot::HandleMissingInstance
	add	esp, 4
$LN9@GetInstanc@2:

; 152  : 	}
; 153  : 	return pkInstance;

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 154  : }

	ret	0
?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z ENDP ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance
_TEXT	ENDS
PUBLIC	?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@PAVCvUnit@@@Z ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::Push
EXTRN	?PushMethods@CvLuaUnit@@SAXPAUlua_State@@H@Z:PROC ; CvLuaUnit::PushMethods
EXTRN	?GetTypeName@CvLuaUnit@@SAPBDXZ:PROC		; CvLuaUnit::GetTypeName
; Function compile flags: /Ogtpy
;	COMDAT ?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@PAVCvUnit@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_pkType$ = 12						; size = 4
?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@PAVCvUnit@@@Z PROC ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::Push, COMDAT

; 39   : {

	push	edi

; 40   : 	//Pushing an instance involves more than just actually pushing a pointer into the
; 41   : 	//Lua stack.  There are some caching optimizations that are done as well as some
; 42   : 	//checks.
; 43   : 	//The first step is to load or create a global table <Typename> to store all member
; 44   : 	//methods and all pushed instances.  This conserves memory and offers faster pushing
; 45   : 	//speed.
; 46   : 	//If <Typename>.__instances[pkType] is not nil, return that value.
; 47   : 	//otherwise push a new instance and assign it to __instances.
; 48   : 
; 49   : 	//NOTE: Raw gets and sets are used as an optimization over using lua_[get,set]field
; 50   : 	if(pkType)

	mov	edi, DWORD PTR _pkType$[esp]
	test	edi, edi
	je	$LN4@Push@3
	push	ebx
	push	ebp
	push	esi

; 51   : 	{
; 52   : 		//const int t = lua_gettop(L);
; 53   : 
; 54   : 		lua_getglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaUnit@@SAPBDXZ		; CvLuaUnit::GetTypeName
	mov	esi, DWORD PTR _L$[esp+12]
	push	eax
	push	-10002					; ffffd8eeH
	push	esi
	call	_lua_getfield

; 55   : 		if(lua_isnil(L, -1))

	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	$LN7@Push@3

; 56   : 		{
; 57   : 			//Typename wasn't found, time to build it.
; 58   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	push	esi
	call	_lua_settop

; 59   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 60   : 
; 61   : 			//Create weak __instances table.
; 62   : 			lua_pushstring(L, "__instances");

	push	OFFSET $SG237793
	push	esi
	call	_lua_pushstring

; 63   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 64   : 
; 65   : 			//Create __instances.mt
; 66   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 67   : 			lua_pushstring(L, "__mode");

	push	OFFSET $SG237794
	push	esi
	call	_lua_pushstring

; 68   : 			lua_pushstring(L, "v");

	push	OFFSET $SG237795
	push	esi
	call	_lua_pushstring
	add	esp, 68					; 00000044H

; 69   : 			lua_rawset(L, -3);				// mt.__mode = "v";

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 70   : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_setmetatable

; 71   : 
; 72   : 			lua_rawset(L, -3);				//type.__instances = t;

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 73   : 
; 74   : 
; 75   : 			lua_pushvalue(L, -1);

	push	-1
	push	esi
	call	_lua_pushvalue

; 76   : 			lua_setglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaUnit@@SAPBDXZ		; CvLuaUnit::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	push	esi
	call	_lua_setfield

; 77   : 
; 78   : 			Derived::PushMethods(L, lua_gettop(L));

	push	esi
	call	_lua_gettop
	push	eax
	push	esi
	call	?PushMethods@CvLuaUnit@@SAXPAUlua_State@@H@Z ; CvLuaUnit::PushMethods
	add	esp, 56					; 00000038H
$LN7@Push@3:

; 79   : 		}
; 80   : 		const int type_index = lua_gettop(L);

	push	esi
	call	_lua_gettop

; 81   : 
; 82   : 		lua_pushstring(L, "__instances");

	push	OFFSET $SG237797
	push	esi
	mov	ebx, eax
	call	_lua_pushstring

; 83   : 		lua_rawget(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_rawget

; 84   : 
; 85   : 		const int instances_index = lua_gettop(L);

	push	esi
	call	_lua_gettop

; 86   : 
; 87   : 		lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	mov	ebp, eax
	call	_lua_pushlightuserdata

; 88   : 
; 89   : 		lua_rawget(L, -2);					//retrieve type.__instances[pkType]

	push	-2					; fffffffeH
	push	esi
	call	_lua_rawget

; 90   : 
; 91   : 		if(lua_isnil(L, -1))

	push	-1
	push	esi
	call	_lua_type
	add	esp, 48					; 00000030H
	test	eax, eax
	jne	SHORT $LN2@Push@3

; 92   : 		{
; 93   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	push	esi
	call	_lua_settop

; 94   : 
; 95   : 			//Push new instance
; 96   : 			lua_createtable(L, 0, 1);

	push	1
	push	0
	push	esi
	call	_lua_createtable

; 97   : 			lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	call	_lua_pushlightuserdata

; 98   : 			lua_setfield(L, -2, "__instance");

	push	OFFSET $SG237800
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 99   : 
; 100  : 			lua_createtable(L, 0, 1);			// create mt

	push	1
	push	0
	push	esi
	call	_lua_createtable

; 101  : 			lua_pushstring(L, "__index");

	push	OFFSET $SG237801
	push	esi
	call	_lua_pushstring

; 102  : 			lua_pushvalue(L, type_index);

	push	ebx
	push	esi
	call	_lua_pushvalue
	add	esp, 68					; 00000044H

; 103  : 			lua_rawset(L, -3);					// mt.__index = Type

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 104  : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_setmetatable

; 105  : 
; 106  : 			//Assign it in instances
; 107  : 			lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	call	_lua_pushlightuserdata

; 108  : 			lua_pushvalue(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_pushvalue

; 109  : 			lua_rawset(L, instances_index);				//__instances[pkType] = t;

	push	ebp
	push	esi
	call	_lua_rawset
	add	esp, 40					; 00000028H
$LN2@Push@3:

; 110  : 		}
; 111  : 
; 112  : 		//VERIFY(instances_index > type_index);
; 113  : 		lua_remove(L, instances_index);

	push	ebp
	push	esi
	call	_lua_remove

; 114  : 		lua_remove(L, type_index);

	push	ebx
	push	esi
	call	_lua_remove
	add	esp, 16					; 00000010H
	pop	esi
	pop	ebp
	pop	ebx
	pop	edi

; 122  : 	}
; 123  : }

	ret	0
$LN4@Push@3:

; 115  : 
; 116  : 		//const int dt = lua_gettop(L);
; 117  : 		//VERIFY(dt == t + 1)
; 118  : 	}
; 119  : 	else
; 120  : 	{
; 121  : 		lua_pushnil(L);

	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushnil
	add	esp, 4
	pop	edi

; 122  : 	}
; 123  : }

	ret	0
?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@PAVCvUnit@@@Z ENDP ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::Push
_TEXT	ENDS
PUBLIC	?GetInstance@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAPAVCvUnit@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::GetInstance
EXTRN	?HandleMissingInstance@CvLuaUnit@@SAXPAUlua_State@@@Z:PROC ; CvLuaUnit::HandleMissingInstance
; Function compile flags: /Ogtpy
;	COMDAT ?GetInstance@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAPAVCvUnit@@PAUlua_State@@H_N@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_bErrorOnFail$ = 16					; size = 1
?GetInstance@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAPAVCvUnit@@PAUlua_State@@H_N@Z PROC ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::GetInstance, COMDAT

; 127  : {

	push	ebx
	push	ebp
	push	esi

; 128  : 	const int stack_size = lua_gettop(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	mov	ebp, eax

; 129  : 	bool bFail = true;
; 130  : 
; 131  : 	InstanceType* pkInstance = NULL;
; 132  : 	if(lua_type(L, idx) == LUA_TTABLE)

	mov	eax, DWORD PTR _idx$[esp+16]
	push	eax
	push	esi
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN3@GetInstanc@3

; 133  : 	{
; 134  : 		lua_getfield(L, idx, "__instance");

	mov	ecx, DWORD PTR _idx$[esp+12]
	push	OFFSET $SG237816
	push	ecx
	push	esi
	call	_lua_getfield

; 135  : 		if(lua_type(L, -1) == LUA_TLIGHTUSERDATA)

	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN3@GetInstanc@3

; 136  : 		{
; 137  : 			pkInstance = static_cast<InstanceType*>(lua_touserdata(L, -1));

	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8

; 138  : 			if(pkInstance)

	test	edi, edi
	je	SHORT $LN3@GetInstanc@3

; 139  : 			{
; 140  : 				bFail = false;

	xor	bl, bl
$LN3@GetInstanc@3:

; 141  : 			}
; 142  : 		}
; 143  : 	}
; 144  : 
; 145  : 	lua_settop(L, stack_size);

	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8

; 146  : 
; 147  : 	if(bFail && bErrorOnFail)

	test	bl, bl
	je	SHORT $LN9@GetInstanc@3
	cmp	BYTE PTR _bErrorOnFail$[esp+12], 0
	je	SHORT $LN9@GetInstanc@3

; 148  : 	{
; 149  : 		if(idx == 1)

	cmp	DWORD PTR _idx$[esp+12], 1
	jne	SHORT $LN1@GetInstanc@3

; 150  : 			luaL_error(L, "Not a valid instance.  Either the instance is NULL or you used '.' instead of ':'.");

	push	OFFSET $SG237822
	push	esi
	call	_luaL_error
	add	esp, 8
$LN1@GetInstanc@3:

; 151  : 		Derived::HandleMissingInstance(L);

	push	esi
	call	?HandleMissingInstance@CvLuaUnit@@SAXPAUlua_State@@@Z ; CvLuaUnit::HandleMissingInstance
	add	esp, 4
$LN9@GetInstanc@3:

; 152  : 	}
; 153  : 	return pkInstance;

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 154  : }

	ret	0
?GetInstance@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAPAVCvUnit@@PAUlua_State@@H_N@Z ENDP ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::GetInstance
_TEXT	ENDS
PUBLIC	?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetInstance
EXTRN	?HandleMissingInstance@CvLuaDeal@@SAXPAUlua_State@@@Z:PROC ; CvLuaDeal::HandleMissingInstance
; Function compile flags: /Ogtpy
;	COMDAT ?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_bErrorOnFail$ = 16					; size = 1
?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z PROC ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetInstance, COMDAT

; 127  : {

	push	ebx
	push	ebp
	push	esi

; 128  : 	const int stack_size = lua_gettop(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	mov	ebp, eax

; 129  : 	bool bFail = true;
; 130  : 
; 131  : 	InstanceType* pkInstance = NULL;
; 132  : 	if(lua_type(L, idx) == LUA_TTABLE)

	mov	eax, DWORD PTR _idx$[esp+16]
	push	eax
	push	esi
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN3@GetInstanc@4

; 133  : 	{
; 134  : 		lua_getfield(L, idx, "__instance");

	mov	ecx, DWORD PTR _idx$[esp+12]
	push	OFFSET $SG237845
	push	ecx
	push	esi
	call	_lua_getfield

; 135  : 		if(lua_type(L, -1) == LUA_TLIGHTUSERDATA)

	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN3@GetInstanc@4

; 136  : 		{
; 137  : 			pkInstance = static_cast<InstanceType*>(lua_touserdata(L, -1));

	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8

; 138  : 			if(pkInstance)

	test	edi, edi
	je	SHORT $LN3@GetInstanc@4

; 139  : 			{
; 140  : 				bFail = false;

	xor	bl, bl
$LN3@GetInstanc@4:

; 141  : 			}
; 142  : 		}
; 143  : 	}
; 144  : 
; 145  : 	lua_settop(L, stack_size);

	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8

; 146  : 
; 147  : 	if(bFail && bErrorOnFail)

	test	bl, bl
	je	SHORT $LN9@GetInstanc@4
	cmp	BYTE PTR _bErrorOnFail$[esp+12], 0
	je	SHORT $LN9@GetInstanc@4

; 148  : 	{
; 149  : 		if(idx == 1)

	cmp	DWORD PTR _idx$[esp+12], 1
	jne	SHORT $LN1@GetInstanc@4

; 150  : 			luaL_error(L, "Not a valid instance.  Either the instance is NULL or you used '.' instead of ':'.");

	push	OFFSET $SG237851
	push	esi
	call	_luaL_error
	add	esp, 8
$LN1@GetInstanc@4:

; 151  : 		Derived::HandleMissingInstance(L);

	push	esi
	call	?HandleMissingInstance@CvLuaDeal@@SAXPAUlua_State@@@Z ; CvLuaDeal::HandleMissingInstance
	add	esp, 4
$LN9@GetInstanc@4:

; 152  : 	}
; 153  : 	return pkInstance;

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 154  : }

	ret	0
?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z ENDP ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetInstance
_TEXT	ENDS
PUBLIC	??$max@H@std@@YAABHABH0@Z			; std::max<int>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$max@H@std@@YAABHABH0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@H@std@@YAABHABH0@Z PROC				; std::max<int>, COMDAT

; 3384 : 	return (_DEBUG_LT(_Left, _Right) ? _Right : _Left);

	mov	eax, DWORD PTR __Left$[esp-4]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR __Right$[esp-4]
	cmp	edx, DWORD PTR [ecx]
	jge	SHORT $LN4@max
	mov	eax, ecx
$LN4@max:

; 3385 : 	}

	ret	0
??$max@H@std@@YAABHABH0@Z ENDP				; std::max<int>
_TEXT	ENDS
PUBLIC	?getSETTLER_EVALUATION_DISTANCE@CvGlobals@@QAEHXZ ; CvGlobals::getSETTLER_EVALUATION_DISTANCE
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
;	COMDAT ?getSETTLER_EVALUATION_DISTANCE@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getSETTLER_EVALUATION_DISTANCE@CvGlobals@@QAEHXZ PROC	; CvGlobals::getSETTLER_EVALUATION_DISTANCE, COMDAT
; _this$ = ecx

; 6381 : 		return m_iSETTLER_EVALUATION_DISTANCE;

	mov	eax, DWORD PTR [ecx+7252]

; 6382 : 	}

	ret	0
?getSETTLER_EVALUATION_DISTANCE@CvGlobals@@QAEHXZ ENDP	; CvGlobals::getSETTLER_EVALUATION_DISTANCE
_TEXT	ENDS
PUBLIC	?getSETTLER_DISTANCE_DROPOFF_MODIFIER@CvGlobals@@QAEHXZ ; CvGlobals::getSETTLER_DISTANCE_DROPOFF_MODIFIER
; Function compile flags: /Ogtpy
;	COMDAT ?getSETTLER_DISTANCE_DROPOFF_MODIFIER@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getSETTLER_DISTANCE_DROPOFF_MODIFIER@CvGlobals@@QAEHXZ PROC ; CvGlobals::getSETTLER_DISTANCE_DROPOFF_MODIFIER, COMDAT
; _this$ = ecx

; 6385 : 		return m_iSETTLER_DISTANCE_DROPOFF_MODIFIER;

	mov	eax, DWORD PTR [ecx+7256]

; 6386 : 	}

	ret	0
?getSETTLER_DISTANCE_DROPOFF_MODIFIER@CvGlobals@@QAEHXZ ENDP ; CvGlobals::getSETTLER_DISTANCE_DROPOFF_MODIFIER
_TEXT	ENDS
PUBLIC	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
EXTRN	__imp_?PushArgument@String@Localization@@QAE_NPBD@Z:PROC
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvlocalization\include\cvlocalization.h
;	COMDAT ??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_val$ = 12						; size = 4
??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z PROC	; operator<<<char const *>, COMDAT

; 491  : 	s.PushArgument(val);

	mov	eax, DWORD PTR _val$[esp-4]
	mov	ecx, DWORD PTR [eax]
	push	esi
	mov	esi, DWORD PTR _s$[esp]
	push	ecx
	mov	ecx, esi
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NPBD@Z

; 492  : 	return s;

	mov	eax, esi
	pop	esi

; 493  : }

	ret	0
??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ENDP	; operator<<<char const *>
_TEXT	ENDS
PUBLIC	??$?6VCvString@@@@YAAAVString@Localization@@AAV01@ABVCvString@@@Z ; operator<<<CvString>
; Function compile flags: /Ogtpy
;	COMDAT ??$?6VCvString@@@@YAAAVString@Localization@@AAV01@ABVCvString@@@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_val$ = 12						; size = 4
??$?6VCvString@@@@YAAAVString@Localization@@AAV01@ABVCvString@@@Z PROC ; operator<<<CvString>, COMDAT

; 491  : 	s.PushArgument(val);

	mov	ecx, DWORD PTR _val$[esp-4]
	push	esi
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	esi, DWORD PTR _s$[esp]
	push	eax
	mov	ecx, esi
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NPBD@Z

; 492  : 	return s;

	mov	eax, esi
	pop	esi

; 493  : }

	ret	0
??$?6VCvString@@@@YAAAVString@Localization@@AAV01@ABVCvString@@@Z ENDP ; operator<<<CvString>
_TEXT	ENDS
PUBLIC	??$?6$0CE@@@YAAAVString@Localization@@AAV01@AAY0CE@$$CBD@Z ; operator<<<36>
EXTRN	__imp_?PushArgument@String@Localization@@QAE_NPBDI@Z:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??$?6$0CE@@@YAAAVString@Localization@@AAV01@AAY0CE@$$CBD@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_val$ = 12						; size = 4
??$?6$0CE@@@YAAAVString@Localization@@AAV01@AAY0CE@$$CBD@Z PROC ; operator<<<36>, COMDAT

; 498  : 	s.PushArgument(val, N - 1);

	mov	eax, DWORD PTR _val$[esp-4]
	push	esi
	mov	esi, DWORD PTR _s$[esp]
	push	35					; 00000023H
	push	eax
	mov	ecx, esi
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NPBDI@Z

; 499  : 	return s;

	mov	eax, esi
	pop	esi

; 500  : }

	ret	0
??$?6$0CE@@@YAAAVString@Localization@@AAV01@AAY0CE@$$CBD@Z ENDP ; operator<<<36>
_TEXT	ENDS
PUBLIC	??$QueryInterface@VICvUnit1@@@ICvUnknown@@QAGPAVICvUnit1@@XZ ; ICvUnknown::QueryInterface<ICvUnit1>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvdllinterfaces.h
;	COMDAT ??$QueryInterface@VICvUnit1@@@ICvUnknown@@QAGPAVICvUnit1@@XZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
??$QueryInterface@VICvUnit1@@@ICvUnknown@@QAGPAVICvUnit1@@XZ PROC ; ICvUnknown::QueryInterface<ICvUnit1>, COMDAT

; 322  :  		return static_cast<T*>(QueryInterface(T::GetInterfaceId()));

	mov	ecx, DWORD PTR _this$[esp-4]
	mov	edx, DWORD PTR [ecx]
	push	esi
	mov	esi, DWORD PTR _guidICvUnit1
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR _guidICvUnit1+4
	mov	DWORD PTR [eax+4], esi
	mov	esi, DWORD PTR _guidICvUnit1+8
	mov	DWORD PTR [eax+8], esi
	mov	esi, DWORD PTR _guidICvUnit1+12
	mov	DWORD PTR [eax+12], esi
	mov	eax, DWORD PTR [edx]
	push	ecx
	call	eax

; 323  :  	}

	pop	esi
	ret	4
??$QueryInterface@VICvUnit1@@@ICvUnknown@@QAGPAVICvUnit1@@XZ ENDP ; ICvUnknown::QueryInterface<ICvUnit1>
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??$_Allocate@VCvString@@@std@@YAPAVCvString@@IPAV1@@Z ; std::_Allocate<CvString>
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
EXTRN	??2@YAPAXI@Z:PROC				; operator new
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Allocate@VCvString@@@std@@YAPAVCvString@@IPAV1@@Z
_TEXT	SEGMENT
$T243450 = -12						; size = 12
$T243454 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@VCvString@@@std@@YAPAVCvString@@IPAV1@@Z PROC ; std::_Allocate<CvString>, COMDAT

; 37   : 	if (_Count <= 0)

	mov	ecx, DWORD PTR __Count$[esp-4]
	sub	esp, 12					; 0000000cH
	test	ecx, ecx
	ja	SHORT $LN3@Allocate

; 38   : 		_Count = 0;

	xor	ecx, ecx
$LN1@Allocate:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	lea	edx, DWORD PTR [ecx*8]
	sub	edx, ecx
	add	edx, edx
	add	edx, edx
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 44   : 	}

	add	esp, 12					; 0000000cH
	ret	0
$LN3@Allocate:

; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	ecx
	cmp	eax, 28					; 0000001cH
	jae	SHORT $LN1@Allocate

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	lea	eax, DWORD PTR $T243454[esp+8]
	push	eax
	lea	ecx, DWORD PTR $T243450[esp+16]
	mov	DWORD PTR $T243454[esp+12], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T243450[esp+16]
	push	ecx
	mov	DWORD PTR $T243450[esp+20], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN9@Allocate:
$LN8@Allocate:
	int	3
??$_Allocate@VCvString@@@std@@YAPAVCvString@@IPAV1@@Z ENDP ; std::_Allocate<CvString>
_TEXT	ENDS
PUBLIC	??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Node *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@0@@Z PROC ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Node *>, COMDAT

; 59   : 	_DESTRUCTOR(_Ty, _Ptr);
; 60   : 	}

	ret	0
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$_Allocate@UOpinion@@@std@@YAPAUOpinion@@IPAU1@@Z ; std::_Allocate<Opinion>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Allocate@UOpinion@@@std@@YAPAUOpinion@@IPAU1@@Z
_TEXT	SEGMENT
$T243463 = -12						; size = 12
$T243467 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@UOpinion@@@std@@YAPAUOpinion@@IPAU1@@Z PROC ; std::_Allocate<Opinion>, COMDAT

; 37   : 	if (_Count <= 0)

	mov	ecx, DWORD PTR __Count$[esp-4]
	sub	esp, 12					; 0000000cH
	test	ecx, ecx
	ja	SHORT $LN3@Allocate@2

; 38   : 		_Count = 0;

	xor	ecx, ecx
$LN1@Allocate@2:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	imul	ecx, 84					; 00000054H
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 44   : 	}

	add	esp, 12					; 0000000cH
	ret	0
$LN3@Allocate@2:

; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	ecx
	cmp	eax, 84					; 00000054H
	jae	SHORT $LN1@Allocate@2

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	lea	eax, DWORD PTR $T243467[esp+8]
	push	eax
	lea	ecx, DWORD PTR $T243463[esp+16]
	mov	DWORD PTR $T243467[esp+12], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T243463[esp+16]
	push	ecx
	mov	DWORD PTR $T243463[esp+20], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN9@Allocate@2:
$LN8@Allocate@2:
	int	3
??$_Allocate@UOpinion@@@std@@YAPAUOpinion@@IPAU1@@Z ENDP ; std::_Allocate<Opinion>
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Node>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@0@@Z PROC ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Node>, COMDAT

; 59   : 	_DESTRUCTOR(_Ty, _Ptr);
; 60   : 	}

	ret	0
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<Opinion,std::allocator<Opinion> >::operator==
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??8?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<Opinion,std::allocator<Opinion> >::operator==, COMDAT
; _this$ = ecx

; 204  : 
; 205  :  #if _HAS_ITERATOR_DEBUGGING
; 206  : 		_Compat(_Right);
; 207  :  #else
; 208  : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));
; 209  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 210  : 
; 211  : 		return (_Myptr == _Right._Myptr);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	cl
	mov	al, cl

; 212  : 		}

	ret	4
??8?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<Opinion,std::allocator<Opinion> >::operator==
_TEXT	ENDS
PUBLIC	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluascopedinstance.h
;	COMDAT ?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ
_TEXT	SEGMENT
?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ PROC ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex, COMDAT

; 159  : 	return 2;

	mov	eax, 2

; 160  : }

	ret	0
?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SA?BHXZ ENDP ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetStartingArgIndex
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvluaargtemplates.h
_TEXT	ENDS
;	COMDAT ??$pushValue@I@CvLuaArgs@@YAXPAUlua_State@@I@Z
_TEXT	SEGMENT
??$pushValue@I@CvLuaArgs@@YAXPAUlua_State@@I@Z PROC	; CvLuaArgs::pushValue<unsigned int>, COMDAT
; _L$ = ecx
; _t$ = eax

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	push	eax
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	ret	0
??$pushValue@I@CvLuaArgs@@YAXPAUlua_State@@I@Z ENDP	; CvLuaArgs::pushValue<unsigned int>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum PlayerTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum PlayerTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$pushValue@W4PlayerTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
??$pushValue@W4PlayerTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4PlayerTypes@@@Z PROC ; CvLuaArgs::pushValue<enum PlayerTypes>, COMDAT
; _L$ = ecx
; _t$ = eax

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	push	eax
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	ret	0
??$pushValue@W4PlayerTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4PlayerTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum PlayerTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4ResourceTypes@@@CvLuaArgs@@YA?AW4ResourceTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4ResourceTypes@@@CvLuaArgs@@YA?AW4ResourceTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum ResourceTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4ResourceTypes@@@CvLuaArgs@@YA?AW4ResourceTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum ResourceTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$pushValue@W4ArtStyleTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4ArtStyleTypes@@@Z
_TEXT	SEGMENT
??$pushValue@W4ArtStyleTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4ArtStyleTypes@@@Z PROC ; CvLuaArgs::pushValue<enum ArtStyleTypes>, COMDAT
; _L$ = ecx
; _t$ = eax

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	push	eax
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	ret	0
??$pushValue@W4ArtStyleTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4ArtStyleTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum ArtStyleTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4FeatureTypes@@@CvLuaArgs@@YA?AW4FeatureTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4FeatureTypes@@@CvLuaArgs@@YA?AW4FeatureTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum FeatureTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4FeatureTypes@@@CvLuaArgs@@YA?AW4FeatureTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum FeatureTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum BuildingTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum BuildingTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@PAVCvPlot@@@CvLuaArgs@@YAPAVCvPlot@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@PAVCvPlot@@@CvLuaArgs@@YAPAVCvPlot@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<CvPlot *>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@PAVCvPlot@@@CvLuaArgs@@YAPAVCvPlot@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<CvPlot *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4GoodyTypes@@@CvLuaArgs@@YA?AW4GoodyTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4GoodyTypes@@@CvLuaArgs@@YA?AW4GoodyTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum GoodyTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4GoodyTypes@@@CvLuaArgs@@YA?AW4GoodyTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum GoodyTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@PAVCvUnit@@@CvLuaArgs@@YAPAVCvUnit@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@PAVCvUnit@@@CvLuaArgs@@YAPAVCvUnit@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<CvUnit *>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@PAVCvUnit@@@CvLuaArgs@@YAPAVCvUnit@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<CvUnit *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4ProjectTypes@@@CvLuaArgs@@YA?AW4ProjectTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4ProjectTypes@@@CvLuaArgs@@YA?AW4ProjectTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum ProjectTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4ProjectTypes@@@CvLuaArgs@@YA?AW4ProjectTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum ProjectTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4SpecialistTypes@@@CvLuaArgs@@YA?AW4SpecialistTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4SpecialistTypes@@@CvLuaArgs@@YA?AW4SpecialistTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum SpecialistTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4SpecialistTypes@@@CvLuaArgs@@YA?AW4SpecialistTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum SpecialistTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4ProcessTypes@@@CvLuaArgs@@YA?AW4ProcessTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4ProcessTypes@@@CvLuaArgs@@YA?AW4ProcessTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum ProcessTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4ProcessTypes@@@CvLuaArgs@@YA?AW4ProcessTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum ProcessTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$pushValue@W4FaithPurchaseTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4FaithPurchaseTypes@@@Z
_TEXT	SEGMENT
??$pushValue@W4FaithPurchaseTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4FaithPurchaseTypes@@@Z PROC ; CvLuaArgs::pushValue<enum FaithPurchaseTypes>, COMDAT
; _L$ = ecx
; _t$ = eax

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	push	eax
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	ret	0
??$pushValue@W4FaithPurchaseTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4FaithPurchaseTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum FaithPurchaseTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4FaithPurchaseTypes@@@CvLuaArgs@@YA?AW4FaithPurchaseTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4FaithPurchaseTypes@@@CvLuaArgs@@YA?AW4FaithPurchaseTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum FaithPurchaseTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4FaithPurchaseTypes@@@CvLuaArgs@@YA?AW4FaithPurchaseTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum FaithPurchaseTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4UnitClassTypes@@@CvLuaArgs@@YA?AW4UnitClassTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4UnitClassTypes@@@CvLuaArgs@@YA?AW4UnitClassTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum UnitClassTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4UnitClassTypes@@@CvLuaArgs@@YA?AW4UnitClassTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum UnitClassTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4BuildingClassTypes@@@CvLuaArgs@@YA?AW4BuildingClassTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4BuildingClassTypes@@@CvLuaArgs@@YA?AW4BuildingClassTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum BuildingClassTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4BuildingClassTypes@@@CvLuaArgs@@YA?AW4BuildingClassTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum BuildingClassTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4YieldTypes@@@CvLuaArgs@@YA?AW4YieldTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4YieldTypes@@@CvLuaArgs@@YA?AW4YieldTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum YieldTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4YieldTypes@@@CvLuaArgs@@YA?AW4YieldTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum YieldTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4DomainTypes@@@CvLuaArgs@@YA?AW4DomainTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4DomainTypes@@@CvLuaArgs@@YA?AW4DomainTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum DomainTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4DomainTypes@@@CvLuaArgs@@YA?AW4DomainTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum DomainTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4TechTypes@@@CvLuaArgs@@YA?AW4TechTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4TechTypes@@@CvLuaArgs@@YA?AW4TechTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum TechTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4TechTypes@@@CvLuaArgs@@YA?AW4TechTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum TechTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$pushValue@J@CvLuaArgs@@YAXPAUlua_State@@J@Z
_TEXT	SEGMENT
??$pushValue@J@CvLuaArgs@@YAXPAUlua_State@@J@Z PROC	; CvLuaArgs::pushValue<long>, COMDAT
; _L$ = ecx
; _t$ = eax

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	push	eax
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	ret	0
??$pushValue@J@CvLuaArgs@@YAXPAUlua_State@@J@Z ENDP	; CvLuaArgs::pushValue<long>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@PAVCvCity@@@CvLuaArgs@@YAPAVCvCity@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@PAVCvCity@@@CvLuaArgs@@YAPAVCvCity@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<CvCity *>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@PAVCvCity@@@CvLuaArgs@@YAPAVCvCity@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<CvCity *>
_TEXT	ENDS
PUBLIC	??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z	; operator<<<int>
EXTRN	__imp_?PushArgument@String@Localization@@QAE_NH@Z:PROC
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvlocalization\include\cvlocalization.h
;	COMDAT ??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_val$ = 12						; size = 4
??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z PROC	; operator<<<int>, COMDAT

; 491  : 	s.PushArgument(val);

	mov	eax, DWORD PTR _val$[esp-4]
	mov	ecx, DWORD PTR [eax]
	push	esi
	mov	esi, DWORD PTR _s$[esp]
	push	ecx
	mov	ecx, esi
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NH@Z

; 492  : 	return s;

	mov	eax, esi
	pop	esi

; 493  : }

	ret	0
??$?6H@@YAAAVString@Localization@@AAV01@ABH@Z ENDP	; operator<<<int>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvluaargtemplates.h
_TEXT	ENDS
;	COMDAT ??$toValue@W4PolicyTypes@@@CvLuaArgs@@YA?AW4PolicyTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4PolicyTypes@@@CvLuaArgs@@YA?AW4PolicyTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum PolicyTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4PolicyTypes@@@CvLuaArgs@@YA?AW4PolicyTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum PolicyTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4UnitTypes@@@CvLuaArgs@@YA?AW4UnitTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4UnitTypes@@@CvLuaArgs@@YA?AW4UnitTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum UnitTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4UnitTypes@@@CvLuaArgs@@YA?AW4UnitTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum UnitTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4ImprovementTypes@@@CvLuaArgs@@YA?AW4ImprovementTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4ImprovementTypes@@@CvLuaArgs@@YA?AW4ImprovementTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum ImprovementTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4ImprovementTypes@@@CvLuaArgs@@YA?AW4ImprovementTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum ImprovementTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4RouteTypes@@@CvLuaArgs@@YA?AW4RouteTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4RouteTypes@@@CvLuaArgs@@YA?AW4RouteTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum RouteTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4RouteTypes@@@CvLuaArgs@@YA?AW4RouteTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum RouteTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4HurryTypes@@@CvLuaArgs@@YA?AW4HurryTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4HurryTypes@@@CvLuaArgs@@YA?AW4HurryTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum HurryTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4HurryTypes@@@CvLuaArgs@@YA?AW4HurryTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum HurryTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$pushValue@W4EndTurnBlockingTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4EndTurnBlockingTypes@@@Z
_TEXT	SEGMENT
??$pushValue@W4EndTurnBlockingTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4EndTurnBlockingTypes@@@Z PROC ; CvLuaArgs::pushValue<enum EndTurnBlockingTypes>, COMDAT
; _L$ = ecx
; _t$ = eax

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	push	eax
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	ret	0
??$pushValue@W4EndTurnBlockingTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4EndTurnBlockingTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum EndTurnBlockingTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$pushValue@W4HandicapTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4HandicapTypes@@@Z
_TEXT	SEGMENT
??$pushValue@W4HandicapTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4HandicapTypes@@@Z PROC ; CvLuaArgs::pushValue<enum HandicapTypes>, COMDAT
; _L$ = ecx
; _t$ = eax

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	push	eax
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	ret	0
??$pushValue@W4HandicapTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4HandicapTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum HandicapTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$pushValue@W4CivilizationTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4CivilizationTypes@@@Z
_TEXT	SEGMENT
??$pushValue@W4CivilizationTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4CivilizationTypes@@@Z PROC ; CvLuaArgs::pushValue<enum CivilizationTypes>, COMDAT
; _L$ = ecx
; _t$ = eax

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	push	eax
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	ret	0
??$pushValue@W4CivilizationTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4CivilizationTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum CivilizationTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$pushValue@W4LeaderHeadTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4LeaderHeadTypes@@@Z
_TEXT	SEGMENT
??$pushValue@W4LeaderHeadTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4LeaderHeadTypes@@@Z PROC ; CvLuaArgs::pushValue<enum LeaderHeadTypes>, COMDAT
; _L$ = ecx
; _t$ = eax

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	push	eax
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	ret	0
??$pushValue@W4LeaderHeadTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4LeaderHeadTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum LeaderHeadTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4LeaderHeadTypes@@@CvLuaArgs@@YA?AW4LeaderHeadTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4LeaderHeadTypes@@@CvLuaArgs@@YA?AW4LeaderHeadTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum LeaderHeadTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4LeaderHeadTypes@@@CvLuaArgs@@YA?AW4LeaderHeadTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum LeaderHeadTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$pushValue@W4EraTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4EraTypes@@@Z
_TEXT	SEGMENT
??$pushValue@W4EraTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4EraTypes@@@Z PROC ; CvLuaArgs::pushValue<enum EraTypes>, COMDAT
; _L$ = ecx
; _t$ = eax

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	push	eax
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	ret	0
??$pushValue@W4EraTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4EraTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum EraTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$pushValue@W4TeamTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4TeamTypes@@@Z
_TEXT	SEGMENT
??$pushValue@W4TeamTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4TeamTypes@@@Z PROC ; CvLuaArgs::pushValue<enum TeamTypes>, COMDAT
; _L$ = ecx
; _t$ = eax

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	push	eax
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	ret	0
??$pushValue@W4TeamTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4TeamTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum TeamTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$pushValue@W4PlayerProximityTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4PlayerProximityTypes@@@Z
_TEXT	SEGMENT
??$pushValue@W4PlayerProximityTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4PlayerProximityTypes@@@Z PROC ; CvLuaArgs::pushValue<enum PlayerProximityTypes>, COMDAT
; _L$ = ecx
; _t$ = eax

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	push	eax
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	ret	0
??$pushValue@W4PlayerProximityTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4PlayerProximityTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum PlayerProximityTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$pushValue@W4UnitTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4UnitTypes@@@Z
_TEXT	SEGMENT
??$pushValue@W4UnitTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4UnitTypes@@@Z PROC ; CvLuaArgs::pushValue<enum UnitTypes>, COMDAT
; _L$ = ecx
; _t$ = eax

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	push	eax
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	ret	0
??$pushValue@W4UnitTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4UnitTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum UnitTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4PlayerOptionTypes@@@CvLuaArgs@@YA?AW4PlayerOptionTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4PlayerOptionTypes@@@CvLuaArgs@@YA?AW4PlayerOptionTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum PlayerOptionTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4PlayerOptionTypes@@@CvLuaArgs@@YA?AW4PlayerOptionTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum PlayerOptionTypes>
_TEXT	ENDS
PUBLIC	??$_Dist_type@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@@std@@YAPAHV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@@Z ; std::_Dist_type<std::_Vector_iterator<Opinion,std::allocator<Opinion> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Dist_type@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@@std@@YAPAHV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Dist_type@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@@std@@YAPAHV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@@Z PROC ; std::_Dist_type<std::_Vector_iterator<Opinion,std::allocator<Opinion> > >, COMDAT

; 1831 : 	return (0);

	xor	eax, eax

; 1832 : 	}

	ret	0
??$_Dist_type@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@@std@@YAPAHV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@@Z ENDP ; std::_Dist_type<std::_Vector_iterator<Opinion,std::allocator<Opinion> > >
_TEXT	ENDS
PUBLIC	??$_Val_type@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@@std@@YAPAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@@Z ; std::_Val_type<std::_Vector_iterator<Opinion,std::allocator<Opinion> > >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Val_type@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@@std@@YAPAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@@std@@YAPAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@@Z PROC ; std::_Val_type<std::_Vector_iterator<Opinion,std::allocator<Opinion> > >, COMDAT

; 1766 : 	return (0);

	xor	eax, eax

; 1767 : 	}

	ret	0
??$_Val_type@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@@std@@YAPAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@@Z ENDP ; std::_Val_type<std::_Vector_iterator<Opinion,std::allocator<Opinion> > >
_TEXT	ENDS
PUBLIC	??$_Iter_random@PAVCvString@@PAV1@@std@@YA?AUrandom_access_iterator_tag@0@ABQAVCvString@@0@Z ; std::_Iter_random<CvString *,CvString *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Iter_random@PAVCvString@@PAV1@@std@@YA?AUrandom_access_iterator_tag@0@ABQAVCvString@@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Iter_random@PAVCvString@@PAV1@@std@@YA?AUrandom_access_iterator_tag@0@ABQAVCvString@@0@Z PROC ; std::_Iter_random<CvString *,CvString *>, COMDAT

; 994  : 	typename _Iter_random_helper<
; 995  : 		iterator_traits<_Iter1>::iterator_category, 
; 996  : 		iterator_traits<_Iter2>::iterator_category>::_Iter_random_cat _Cat;
; 997  : 	return (_Cat);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 998  : 	}

	ret	0
??$_Iter_random@PAVCvString@@PAV1@@std@@YA?AUrandom_access_iterator_tag@0@ABQAVCvString@@0@Z ENDP ; std::_Iter_random<CvString *,CvString *>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAVCvString@@PAV1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAVCvString@@0@Z ; std::_Ptr_cat<CvString *,CvString *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Ptr_cat@PAVCvString@@PAV1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAVCvString@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAVCvString@@PAV1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAVCvString@@0@Z PROC ; std::_Ptr_cat<CvString *,CvString *>, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@PAVCvString@@PAV1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAVCvString@@0@Z ENDP ; std::_Ptr_cat<CvString *,CvString *>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAUOpinion@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUOpinion@@0@Z ; std::_Ptr_cat<Opinion *,Opinion *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Ptr_cat@PAUOpinion@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUOpinion@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAUOpinion@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUOpinion@@0@Z PROC ; std::_Ptr_cat<Opinion *,Opinion *>, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@PAUOpinion@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUOpinion@@0@Z ENDP ; std::_Ptr_cat<Opinion *,Opinion *>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAW4PolicyTypes@@PAW41@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAW4PolicyTypes@@0@Z ; std::_Ptr_cat<enum PolicyTypes *,enum PolicyTypes *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Ptr_cat@PAW4PolicyTypes@@PAW41@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAW4PolicyTypes@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAW4PolicyTypes@@PAW41@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAW4PolicyTypes@@0@Z PROC ; std::_Ptr_cat<enum PolicyTypes *,enum PolicyTypes *>, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@PAW4PolicyTypes@@PAW41@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAW4PolicyTypes@@0@Z ENDP ; std::_Ptr_cat<enum PolicyTypes *,enum PolicyTypes *>
_TEXT	ENDS
PUBLIC	??$_Iter_random@PAUOpinion@@PAU1@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUOpinion@@0@Z ; std::_Iter_random<Opinion *,Opinion *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Iter_random@PAUOpinion@@PAU1@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUOpinion@@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Iter_random@PAUOpinion@@PAU1@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUOpinion@@0@Z PROC ; std::_Iter_random<Opinion *,Opinion *>, COMDAT

; 994  : 	typename _Iter_random_helper<
; 995  : 		iterator_traits<_Iter1>::iterator_category, 
; 996  : 		iterator_traits<_Iter2>::iterator_category>::_Iter_random_cat _Cat;
; 997  : 	return (_Cat);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 998  : 	}

	ret	0
??$_Iter_random@PAUOpinion@@PAU1@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUOpinion@@0@Z ENDP ; std::_Iter_random<Opinion *,Opinion *>
_TEXT	ENDS
PUBLIC	??$_Move_cat@PAUOpinion@@@std@@YA?AU_Undefined_move_tag@0@ABQAUOpinion@@@Z ; std::_Move_cat<Opinion *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Move_cat@PAUOpinion@@@std@@YA?AU_Undefined_move_tag@0@ABQAUOpinion@@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
??$_Move_cat@PAUOpinion@@@std@@YA?AU_Undefined_move_tag@0@ABQAUOpinion@@@Z PROC ; std::_Move_cat<Opinion *>, COMDAT

; 1200 : 	{

	push	ecx

; 1201 : 		typename _Move_operation_category<typename iterator_traits<_Iter>::value_type>::_Move_cat _Cat;
; 1202 : 		return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1203 : 	}

	pop	ecx
	ret	0
??$_Move_cat@PAUOpinion@@@std@@YA?AU_Undefined_move_tag@0@ABQAUOpinion@@@Z ENDP ; std::_Move_cat<Opinion *>
_TEXT	ENDS
PUBLIC	??4Opinion@@QAEAAU0@ABU0@@Z			; Opinion::operator=
EXTRN	__imp_??4String@Localization@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??4Opinion@@QAEAAU0@ABU0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4Opinion@@QAEAAU0@ABU0@@Z PROC			; Opinion::operator=, COMDAT
; _this$ = ecx
	push	esi
	push	edi
	mov	edi, DWORD PTR ___that$[esp+4]
	push	edi
	mov	esi, ecx
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR [edi+80]
	mov	DWORD PTR [esi+80], eax
	pop	edi
	mov	eax, esi
	pop	esi
	ret	4
??4Opinion@@QAEAAU0@ABU0@@Z ENDP			; Opinion::operator=
_TEXT	ENDS
PUBLIC	?getRELIGION_MISSIONARY_PRESSURE_MULTIPLIER@CvGlobals@@QAEHXZ ; CvGlobals::getRELIGION_MISSIONARY_PRESSURE_MULTIPLIER
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
;	COMDAT ?getRELIGION_MISSIONARY_PRESSURE_MULTIPLIER@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getRELIGION_MISSIONARY_PRESSURE_MULTIPLIER@CvGlobals@@QAEHXZ PROC ; CvGlobals::getRELIGION_MISSIONARY_PRESSURE_MULTIPLIER, COMDAT
; _this$ = ecx

; 7399 : 		return m_iRELIGION_MISSIONARY_PRESSURE_MULTIPLIER;

	mov	eax, DWORD PTR [ecx+7900]

; 7400 : 	}

	ret	0
?getRELIGION_MISSIONARY_PRESSURE_MULTIPLIER@CvGlobals@@QAEHXZ ENDP ; CvGlobals::getRELIGION_MISSIONARY_PRESSURE_MULTIPLIER
_TEXT	ENDS
PUBLIC	??0?$_Temp_iterator@UOpinion@@@std@@QAE@H@Z	; std::_Temp_iterator<Opinion>::_Temp_iterator<Opinion>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??0?$_Temp_iterator@UOpinion@@@std@@QAE@H@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
??0?$_Temp_iterator@UOpinion@@@std@@QAE@H@Z PROC	; std::_Temp_iterator<Opinion>::_Temp_iterator<Opinion>, COMDAT
; _this$ = ecx

; 526  : 	_Temp_iterator(_PDFT _Count = 0)

	mov	eax, ecx

; 527  : 		{	// construct from desired temporary buffer size
; 528  : 		_Buf._Begin = 0;

	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx

; 529  : 		_Buf._Current = 0;

	mov	DWORD PTR [eax+4], ecx

; 530  : 		_Buf._Hiwater = 0;

	mov	DWORD PTR [eax+8], ecx

; 531  : 		_Buf._Size = _Count;	// memorize size for lazy allocation

	mov	ecx, DWORD PTR __Count$[esp-4]
	mov	DWORD PTR [eax+12], ecx

; 532  : 		_Pbuf = &_Buf;

	mov	DWORD PTR [eax+16], eax

; 533  : 		}

	ret	4
??0?$_Temp_iterator@UOpinion@@@std@@QAE@H@Z ENDP	; std::_Temp_iterator<Opinion>::_Temp_iterator<Opinion>
_TEXT	ENDS
PUBLIC	??$_Copy_backward_opt@PAUOpinion@@PAU1@Urandom_access_iterator_tag@std@@@std@@YAPAUOpinion@@PAU1@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<Opinion *,Opinion *,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Copy_backward_opt@PAUOpinion@@PAU1@Urandom_access_iterator_tag@std@@@std@@YAPAUOpinion@@PAU1@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Copy_backward_opt@PAUOpinion@@PAU1@Urandom_access_iterator_tag@std@@@std@@YAPAUOpinion@@PAU1@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_backward_opt<Opinion *,Opinion *,std::random_access_iterator_tag>, COMDAT

; 2673 : 	{	// copy [_First, _Last) backwards to [..., _Dest), arbitrary iterators

	push	ebx

; 2674 : 	_DEBUG_RANGE(_First, _Last);
; 2675 : 	while (_First != _Last)

	mov	ebx, DWORD PTR __First$[esp]
	push	esi
	mov	esi, DWORD PTR __Last$[esp+4]
	cmp	ebx, esi
	je	SHORT $LN9@Copy_backw
	push	ebp
	mov	ebp, DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	push	edi
	mov	edi, DWORD PTR __Dest$[esp+12]
	npad	6
$LL2@Copy_backw:

; 2676 : 		*--_Dest = *--_Last;

	sub	esi, 84					; 00000054H
	sub	edi, 84					; 00000054H
	push	esi
	mov	ecx, edi
	call	ebp
	mov	eax, DWORD PTR [esi+80]
	mov	DWORD PTR [edi+80], eax
	cmp	esi, ebx
	jne	SHORT $LL2@Copy_backw

; 2677 : 	return (_Dest);

	mov	eax, edi
	pop	edi
	pop	ebp
	pop	esi
	pop	ebx

; 2678 : 	}

	ret	0
$LN9@Copy_backw:

; 2677 : 	return (_Dest);

	mov	eax, DWORD PTR __Dest$[esp+4]
	pop	esi
	pop	ebx

; 2678 : 	}

	ret	0
??$_Copy_backward_opt@PAUOpinion@@PAU1@Urandom_access_iterator_tag@std@@@std@@YAPAUOpinion@@PAU1@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_backward_opt<Opinion *,Opinion *,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	??$_Destroy@W4PolicyTypes@@@std@@YAXPAW4PolicyTypes@@@Z ; std::_Destroy<enum PolicyTypes>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Destroy@W4PolicyTypes@@@std@@YAXPAW4PolicyTypes@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@W4PolicyTypes@@@std@@YAXPAW4PolicyTypes@@@Z PROC ; std::_Destroy<enum PolicyTypes>, COMDAT

; 59   : 	_DESTRUCTOR(_Ty, _Ptr);
; 60   : 	}

	ret	0
??$_Destroy@W4PolicyTypes@@@std@@YAXPAW4PolicyTypes@@@Z ENDP ; std::_Destroy<enum PolicyTypes>
_TEXT	ENDS
PUBLIC	??$_Construct@UOpinion@@U1@@std@@YAXPAUOpinion@@ABU1@@Z ; std::_Construct<Opinion,Opinion>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$??$_Construct@UOpinion@@U1@@std@@YAXPAUOpinion@@ABU1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Construct@UOpinion@@U1@@std@@YAXPAUOpinion@@ABU1@@Z$0
__ehfuncinfo$??$_Construct@UOpinion@@U1@@std@@YAXPAUOpinion@@ABU1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Construct@UOpinion@@U1@@std@@YAXPAUOpinion@@ABU1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Construct@UOpinion@@U1@@std@@YAXPAUOpinion@@ABU1@@Z
_TEXT	SEGMENT
$T243642 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Vptr$ = 8						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@UOpinion@@U1@@std@@YAXPAUOpinion@@ABU1@@Z PROC ; std::_Construct<Opinion,Opinion>, COMDAT

; 50   : 	{	// construct object at _Ptr with value _Val

	push	-1
	push	__ehhandler$??$_Construct@UOpinion@@U1@@std@@YAXPAUOpinion@@ABU1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi

; 51   : 	void _FARQ *_Vptr = _Ptr;

	mov	esi, DWORD PTR __Ptr$[esp+16]
	mov	DWORD PTR __Vptr$[esp+16], esi

; 52   : 	::new (_Vptr) _T1(_Val);

	mov	DWORD PTR $T243642[esp+20], esi
	mov	DWORD PTR __$EHRec$[esp+28], 0
	test	esi, esi
	je	SHORT $LN3@Construct
	push	edi
	mov	edi, DWORD PTR __Val$[esp+20]
	push	edi
	mov	ecx, esi
	call	DWORD PTR __imp_??0String@Localization@@QAE@ABV01@@Z
	mov	eax, DWORD PTR [edi+80]
	mov	DWORD PTR [esi+80], eax
	pop	edi
$LN3@Construct:

; 53   : 	}

	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Construct@UOpinion@@U1@@std@@YAXPAUOpinion@@ABU1@@Z$0:
	mov	eax, DWORD PTR __Vptr$[ebp-4]
	push	eax
	mov	ecx, DWORD PTR $T243642[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Construct@UOpinion@@U1@@std@@YAXPAUOpinion@@ABU1@@Z:
	mov	eax, OFFSET __ehfuncinfo$??$_Construct@UOpinion@@U1@@std@@YAXPAUOpinion@@ABU1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Construct@UOpinion@@U1@@std@@YAXPAUOpinion@@ABU1@@Z ENDP ; std::_Construct<Opinion,Opinion>
PUBLIC	??$return_temporary_buffer@UOpinion@@@std@@YAXPAUOpinion@@@Z ; std::return_temporary_buffer<Opinion>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$return_temporary_buffer@UOpinion@@@std@@YAXPAUOpinion@@@Z
_TEXT	SEGMENT
__Pbuf$ = 8						; size = 4
??$return_temporary_buffer@UOpinion@@@std@@YAXPAUOpinion@@@Z PROC ; std::return_temporary_buffer<Opinion>, COMDAT

; 39   : 	operator delete(_Pbuf);

	jmp	??3@YAXPAX@Z				; operator delete
??$return_temporary_buffer@UOpinion@@@std@@YAXPAUOpinion@@@Z ENDP ; std::return_temporary_buffer<Opinion>
_TEXT	ENDS
PUBLIC	??_GCvString@@QAEPAXI@Z				; CvString::`scalar deleting destructor'
; Function compile flags: /Ogtpy
;	COMDAT ??_GCvString@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCvString@@QAEPAXI@Z PROC				; CvString::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN7@scalar@5
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN7@scalar@5:
	mov	eax, esi
	pop	esi
	ret	4
??_GCvString@@QAEPAXI@Z ENDP				; CvString::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_GOpinion@@QAEPAXI@Z				; Opinion::`scalar deleting destructor'
; Function compile flags: /Ogtpy
;	COMDAT ??_GOpinion@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GOpinion@@QAEPAXI@Z PROC				; Opinion::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN7@scalar@6
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN7@scalar@6:
	mov	eax, esi
	pop	esi
	ret	4
??_GOpinion@@QAEPAXI@Z ENDP				; Opinion::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??MWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QBE_NABU01@@Z ; CvWeightedVector<CvPlot *,800,1>::WeightedElement::operator<
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvweightedvector.h
;	COMDAT ??MWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QBE_NABU01@@Z
_TEXT	SEGMENT
_b2$ = 8						; size = 4
??MWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QBE_NABU01@@Z PROC ; CvWeightedVector<CvPlot *,800,1>::WeightedElement::operator<, COMDAT
; _this$ = ecx

; 45   : 			// Reverse of the normal direction because we want highest weight first in our list
; 46   : 			return m_iWeight > b2.m_iWeight;

	mov	eax, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _b2$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx+4]
	setg	cl
	mov	al, cl

; 47   : 		};

	ret	4
??MWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QBE_NABU01@@Z ENDP ; CvWeightedVector<CvPlot *,800,1>::WeightedElement::operator<
_TEXT	ENDS
PUBLIC	??0?$pair@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@PAU12@@std@@QAE@ABQAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z ; std::pair<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,CvWeightedVector<CvPlot *,800,1>::WeightedElement *>::pair<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\utility
;	COMDAT ??0?$pair@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@PAU12@@std@@QAE@ABQAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@PAU12@@std@@QAE@ABQAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z PROC ; std::pair<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,CvWeightedVector<CvPlot *,800,1>::WeightedElement *>::pair<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,CvWeightedVector<CvPlot *,800,1>::WeightedElement *>, COMDAT
; _this$ = ecx

; 50   : 		{	// construct from specified values

	mov	eax, ecx
	mov	ecx, DWORD PTR __Val1$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Val2$[esp-4]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx

; 51   : 		}

	ret	8
??0?$pair@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@PAU12@@std@@QAE@ABQAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z ENDP ; std::pair<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,CvWeightedVector<CvPlot *,800,1>::WeightedElement *>::pair<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
_TEXT	ENDS
PUBLIC	??$_Iter_cat@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@@Z ; std::_Iter_cat<std::_Vector_iterator<Opinion,std::allocator<Opinion> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Iter_cat@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@@Z PROC ; std::_Iter_cat<std::_Vector_iterator<Opinion,std::allocator<Opinion> > >, COMDAT

; 953  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 954  : 	return (_Cat);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 955  : 	}

	ret	0
??$_Iter_cat@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@@Z ENDP ; std::_Iter_cat<std::_Vector_iterator<Opinion,std::allocator<Opinion> > >
_TEXT	ENDS
PUBLIC	?getDLLIFace@CvGlobals@@QAEPAVICvEngineUtility4@@XZ ; CvGlobals::getDLLIFace
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
;	COMDAT ?getDLLIFace@CvGlobals@@QAEPAVICvEngineUtility4@@XZ
_TEXT	SEGMENT
?getDLLIFace@CvGlobals@@QAEPAVICvEngineUtility4@@XZ PROC ; CvGlobals::getDLLIFace, COMDAT
; _this$ = ecx

; 7703 : 		return m_pDLL;

	mov	eax, DWORD PTR [ecx+8564]

; 7704 : 	}

	ret	0
?getDLLIFace@CvGlobals@@QAEPAVICvEngineUtility4@@XZ ENDP ; CvGlobals::getDLLIFace
_TEXT	ENDS
PUBLIC	?GetEngineUserInterface@CvGlobals@@QAEPAVICvUserInterface2@@XZ ; CvGlobals::GetEngineUserInterface
; Function compile flags: /Ogtpy
;	COMDAT ?GetEngineUserInterface@CvGlobals@@QAEPAVICvUserInterface2@@XZ
_TEXT	SEGMENT
?GetEngineUserInterface@CvGlobals@@QAEPAVICvUserInterface2@@XZ PROC ; CvGlobals::GetEngineUserInterface, COMDAT
; _this$ = ecx

; 7713 : 		return m_pEngineUI;

	mov	eax, DWORD PTR [ecx+8568]

; 7714 : 	}

	ret	0
?GetEngineUserInterface@CvGlobals@@QAEPAVICvUserInterface2@@XZ ENDP ; CvGlobals::GetEngineUserInterface
_TEXT	ENDS
PUBLIC	??$_Dist_type@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAPAHPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@Z ; std::_Dist_type<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Dist_type@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAPAHPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Dist_type@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAPAHPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@Z PROC ; std::_Dist_type<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>, COMDAT

; 1831 : 	return (0);

	xor	eax, eax

; 1832 : 	}

	ret	0
??$_Dist_type@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAPAHPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@Z ENDP ; std::_Dist_type<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
_TEXT	ENDS
PUBLIC	??$_Val_type@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@PAU12@@Z ; std::_Val_type<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Val_type@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@PAU12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@PAU12@@Z PROC ; std::_Val_type<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>, COMDAT

; 1766 : 	return (0);

	xor	eax, eax

; 1767 : 	}

	ret	0
??$_Val_type@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@PAU12@@Z ENDP ; std::_Val_type<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
_TEXT	ENDS
PUBLIC	??G?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QBEHABV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@1@@Z ; std::_Vector_iterator<Opinion,std::allocator<Opinion> >::operator-
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??G?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QBEHABV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@1@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??G?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QBEHABV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@1@@Z PROC ; std::_Vector_iterator<Opinion,std::allocator<Opinion> >::operator-, COMDAT
; _this$ = ecx

; 398  : 		return (*(_Mybase *)this - _Right);

	mov	eax, DWORD PTR __Right$[esp-4]
	mov	ecx, DWORD PTR [ecx]
	sub	ecx, DWORD PTR [eax]
	mov	eax, 818089009				; 30c30c31H
	imul	ecx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx

; 399  : 		}

	ret	4
??G?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QBEHABV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@1@@Z ENDP ; std::_Vector_iterator<Opinion,std::allocator<Opinion> >::operator-
_TEXT	ENDS
PUBLIC	?_Init@?$_Temp_iterator@UOpinion@@@std@@QAEAAV12@XZ ; std::_Temp_iterator<Opinion>::_Init
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ?_Init@?$_Temp_iterator@UOpinion@@@std@@QAEAAV12@XZ
_TEXT	SEGMENT
?_Init@?$_Temp_iterator@UOpinion@@@std@@QAEAAV12@XZ PROC ; std::_Temp_iterator<Opinion>::_Init, COMDAT
; _this$ = ecx

; 591  : 		{	// set pointer at beginning of buffer

	mov	eax, ecx

; 592  : 		_Pbuf->_Current = _Pbuf->_Begin;

	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [ecx+4], edx

; 593  : 		return (*this);
; 594  : 		}

	ret	0
?_Init@?$_Temp_iterator@UOpinion@@@std@@QAEAAV12@XZ ENDP ; std::_Temp_iterator<Opinion>::_Init
_TEXT	ENDS
PUBLIC	?_First@?$_Temp_iterator@UOpinion@@@std@@QBEPAUOpinion@@XZ ; std::_Temp_iterator<Opinion>::_First
; Function compile flags: /Ogtpy
;	COMDAT ?_First@?$_Temp_iterator@UOpinion@@@std@@QBEPAUOpinion@@XZ
_TEXT	SEGMENT
?_First@?$_Temp_iterator@UOpinion@@@std@@QBEPAUOpinion@@XZ PROC ; std::_Temp_iterator<Opinion>::_First, COMDAT
; _this$ = ecx

; 598  : 		return (_Pbuf->_Begin);

	mov	eax, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR [eax]

; 599  : 		}

	ret	0
?_First@?$_Temp_iterator@UOpinion@@@std@@QBEPAUOpinion@@XZ ENDP ; std::_Temp_iterator<Opinion>::_First
_TEXT	ENDS
PUBLIC	?_Last@?$_Temp_iterator@UOpinion@@@std@@QBEPAUOpinion@@XZ ; std::_Temp_iterator<Opinion>::_Last
; Function compile flags: /Ogtpy
;	COMDAT ?_Last@?$_Temp_iterator@UOpinion@@@std@@QBEPAUOpinion@@XZ
_TEXT	SEGMENT
?_Last@?$_Temp_iterator@UOpinion@@@std@@QBEPAUOpinion@@XZ PROC ; std::_Temp_iterator<Opinion>::_Last, COMDAT
; _this$ = ecx

; 603  : 		return (_Pbuf->_Current);

	mov	eax, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR [eax+4]

; 604  : 		}

	ret	0
?_Last@?$_Temp_iterator@UOpinion@@@std@@QBEPAUOpinion@@XZ ENDP ; std::_Temp_iterator<Opinion>::_Last
_TEXT	ENDS
PUBLIC	??0?$pair@PAUOpinion@@H@std@@QAE@ABQAUOpinion@@ABH@Z ; std::pair<Opinion *,int>::pair<Opinion *,int>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\utility
;	COMDAT ??0?$pair@PAUOpinion@@H@std@@QAE@ABQAUOpinion@@ABH@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@PAUOpinion@@H@std@@QAE@ABQAUOpinion@@ABH@Z PROC ; std::pair<Opinion *,int>::pair<Opinion *,int>, COMDAT
; _this$ = ecx

; 50   : 		{	// construct from specified values

	mov	eax, ecx
	mov	ecx, DWORD PTR __Val1$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Val2$[esp-4]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx

; 51   : 		}

	ret	8
??0?$pair@PAUOpinion@@H@std@@QAE@ABQAUOpinion@@ABH@Z ENDP ; std::pair<Opinion *,int>::pair<Opinion *,int>
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ ; std::_Vector_const_iterator<Opinion,std::allocator<Opinion> >::_Vector_const_iterator<Opinion,std::allocator<Opinion> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ PROC ; std::_Vector_const_iterator<Opinion,std::allocator<Opinion> >::_Vector_const_iterator<Opinion,std::allocator<Opinion> >, COMDAT
; _this$ = ecx

; 62   : 	_Vector_const_iterator()

	mov	eax, ecx

; 63   : 		{	// construct with null pointer
; 64   : 		_Myptr = 0;

	mov	DWORD PTR [eax], 0

; 65   : 		}

	ret	0
??0?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_const_iterator<Opinion,std::allocator<Opinion> >::_Vector_const_iterator<Opinion,std::allocator<Opinion> >
_TEXT	ENDS
PUBLIC	??D?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QBEABUOpinion@@XZ ; std::_Vector_const_iterator<Opinion,std::allocator<Opinion> >::operator*
; Function compile flags: /Ogtpy
;	COMDAT ??D?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QBEABUOpinion@@XZ
_TEXT	SEGMENT
??D?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QBEABUOpinion@@XZ PROC ; std::_Vector_const_iterator<Opinion,std::allocator<Opinion> >::operator*, COMDAT
; _this$ = ecx

; 92   : 
; 93   :  #if _HAS_ITERATOR_DEBUGGING
; 94   : 		if (this->_Mycont == 0
; 95   : 			|| _Myptr < ((_Myvec *)this->_Mycont)->_Myfirst
; 96   : 			|| ((_Myvec *)this->_Mycont)->_Mylast <= _Myptr)
; 97   : 			{
; 98   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 99   : 			_SCL_SECURE_OUT_OF_RANGE;
; 100  : 			}
; 101  :  #else
; 102  :  		_SCL_SECURE_VALIDATE(this->_Has_container());
; 103  : 		_SCL_SECURE_VALIDATE_RANGE(_Myptr < ((_Myvec *)(this->_Getmycont()))->_Mylast);
; 104  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 105  : 
; 106  : 		return (*_Myptr);

	mov	eax, DWORD PTR [ecx]

; 107  : 		}

	ret	0
??D?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QBEABUOpinion@@XZ ENDP ; std::_Vector_const_iterator<Opinion,std::allocator<Opinion> >::operator*
_TEXT	ENDS
PUBLIC	??4?$_Temp_iterator@UOpinion@@@std@@QAEAAV01@ABV01@@Z ; std::_Temp_iterator<Opinion>::operator=
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??4?$_Temp_iterator@UOpinion@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??4?$_Temp_iterator@UOpinion@@@std@@QAEAAV01@ABV01@@Z PROC ; std::_Temp_iterator<Opinion>::operator=, COMDAT
; _this$ = ecx

; 556  : 		{	// assign _Right (share active buffer)

	mov	eax, ecx

; 557  : 		_Pbuf = _Right._Pbuf;

	mov	ecx, DWORD PTR __Right$[esp-4]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+16], edx

; 558  : 		return (*this);
; 559  : 		}

	ret	4
??4?$_Temp_iterator@UOpinion@@@std@@QAEAAV01@ABV01@@Z ENDP ; std::_Temp_iterator<Opinion>::operator=
_TEXT	ENDS
PUBLIC	??$swap@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXAAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z ; std::swap<CvWeightedVector<CvPlot *,800,1>::WeightedElement>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\utility
;	COMDAT ??$swap@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXAAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXAAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z PROC ; std::swap<CvWeightedVector<CvPlot *,800,1>::WeightedElement>, COMDAT

; 18   : 	if (&_Left != &_Right)

	mov	eax, DWORD PTR __Left$[esp-4]
	mov	ecx, DWORD PTR __Right$[esp-4]
	cmp	eax, ecx
	je	SHORT $LN1@swap

; 19   : 		{	// different, worth swapping
; 20   : 		_Ty _Tmp = _Left;

	mov	edx, DWORD PTR [eax]
	push	esi
	mov	esi, DWORD PTR [eax+4]
	push	edi

; 21   : 
; 22   : 		_Left = _Right;

	mov	edi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edi
	mov	edi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edi
	pop	edi

; 23   : 		_Right = _Tmp;

	mov	DWORD PTR [ecx+4], esi
	mov	DWORD PTR [ecx], edx
	pop	esi
$LN1@swap:

; 24   : 		}
; 25   : 	}

	ret	0
??$swap@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXAAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z ENDP ; std::swap<CvWeightedVector<CvPlot *,800,1>::WeightedElement>
_TEXT	ENDS
PUBLIC	??E?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<Opinion,std::allocator<Opinion> >::operator++
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??E?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<Opinion,std::allocator<Opinion> >::operator++, COMDAT
; _this$ = ecx

; 115  : 		{	// preincrement

	mov	eax, ecx

; 116  : 		_SCL_SECURE_VALIDATE(this->_Has_container());
; 117  : 		_SCL_SECURE_VALIDATE_RANGE(_Myptr < ((_Myvec *)(this->_Getmycont()))->_Mylast);
; 118  : 
; 119  :  #if _HAS_ITERATOR_DEBUGGING
; 120  : 		if (this->_Mycont == 0
; 121  : 			|| ((_Myvec *)this->_Mycont)->_Mylast <= _Myptr)
; 122  : 			_DEBUG_ERROR("vector iterator not incrementable");
; 123  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 124  : 
; 125  : 		++_Myptr;

	add	DWORD PTR [eax], 84			; 00000054H

; 126  : 		return (*this);
; 127  : 		}

	ret	0
??E?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<Opinion,std::allocator<Opinion> >::operator++
_TEXT	ENDS
PUBLIC	??F?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<Opinion,std::allocator<Opinion> >::operator--
; Function compile flags: /Ogtpy
;	COMDAT ??F?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<Opinion,std::allocator<Opinion> >::operator--, COMDAT
; _this$ = ecx

; 137  : 		{	// predecrement

	mov	eax, ecx

; 138  : 		_SCL_SECURE_VALIDATE(this->_Has_container());
; 139  : 		_SCL_SECURE_VALIDATE_RANGE(_Myptr > ((_Myvec *)(this->_Getmycont()))->_Myfirst);
; 140  : 
; 141  :  #if _HAS_ITERATOR_DEBUGGING
; 142  : 		if (this->_Mycont == 0
; 143  : 			|| _Myptr == ((_Myvec *)this->_Mycont)->_Myfirst)
; 144  : 			_DEBUG_ERROR("vector iterator not decrementable");
; 145  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 146  : 
; 147  : 		--_Myptr;

	add	DWORD PTR [eax], -84			; ffffffacH

; 148  : 		return (*this);
; 149  : 		}

	ret	0
??F?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<Opinion,std::allocator<Opinion> >::operator--
_TEXT	ENDS
PUBLIC	??$swap@UOpinion@@@std@@YAXAAUOpinion@@0@Z	; std::swap<Opinion>
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	SEGMENT
__unwindtable$??$swap@UOpinion@@@std@@YAXAAUOpinion@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$swap@UOpinion@@@std@@YAXAAUOpinion@@0@Z$0
__ehfuncinfo$??$swap@UOpinion@@@std@@YAXAAUOpinion@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$swap@UOpinion@@@std@@YAXAAUOpinion@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\utility
xdata$x	ENDS
;	COMDAT ??$swap@UOpinion@@@std@@YAXAAUOpinion@@0@Z
_TEXT	SEGMENT
__Tmp$240573 = -96					; size = 84
__$EHRec$ = -12						; size = 12
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@UOpinion@@@std@@YAXAAUOpinion@@0@Z PROC		; std::swap<Opinion>, COMDAT

; 17   : 	{	// exchange values stored at _Left and _Right

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$??$swap@UOpinion@@@std@@YAXAAUOpinion@@0@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 84					; 00000054H
	push	esi

; 18   : 	if (&_Left != &_Right)

	mov	esi, DWORD PTR __Left$[esp+96]
	push	edi
	mov	edi, DWORD PTR __Right$[esp+100]
	cmp	esi, edi
	je	SHORT $LN1@swap@2
	push	ebx

; 19   : 		{	// different, worth swapping
; 20   : 		_Ty _Tmp = _Left;

	push	esi
	lea	ecx, DWORD PTR __Tmp$240573[esp+112]
	call	DWORD PTR __imp_??0String@Localization@@QAE@ABV01@@Z
	mov	eax, DWORD PTR [esi+80]
	mov	DWORD PTR __Tmp$240573[esp+188], eax

; 21   : 
; 22   : 		_Left = _Right;

	mov	ebx, DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	push	edi
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[esp+120], 0
	call	ebx
	mov	ecx, DWORD PTR [edi+80]

; 23   : 		_Right = _Tmp;

	lea	edx, DWORD PTR __Tmp$240573[esp+108]
	mov	DWORD PTR [esi+80], ecx
	push	edx
	mov	ecx, edi
	call	ebx
	mov	eax, DWORD PTR __Tmp$240573[esp+188]

; 24   : 		}

	lea	ecx, DWORD PTR __Tmp$240573[esp+108]
	mov	DWORD PTR [edi+80], eax
	mov	DWORD PTR __$EHRec$[esp+116], -1
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	pop	ebx
$LN1@swap@2:

; 25   : 	}

	mov	ecx, DWORD PTR __$EHRec$[esp+104]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 96					; 00000060H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$swap@UOpinion@@@std@@YAXAAUOpinion@@0@Z$0:
	lea	ecx, DWORD PTR __Tmp$240573[ebp]
	jmp	??1Opinion@@QAE@XZ
__ehhandler$??$swap@UOpinion@@@std@@YAXAAUOpinion@@0@Z:
	mov	eax, OFFSET __ehfuncinfo$??$swap@UOpinion@@@std@@YAXAAUOpinion@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$swap@UOpinion@@@std@@YAXAAUOpinion@@0@Z ENDP		; std::swap<Opinion>
PUBLIC	??$_Iter_random@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@std@@YA?AUforward_iterator_tag@0@ABV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@ABV?$_Temp_iterator@UOpinion@@@0@@Z ; std::_Iter_random<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Iter_random@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@std@@YA?AUforward_iterator_tag@0@ABV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@ABV?$_Temp_iterator@UOpinion@@@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Iter_random@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@std@@YA?AUforward_iterator_tag@0@ABV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@ABV?$_Temp_iterator@UOpinion@@@0@@Z PROC ; std::_Iter_random<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion> >, COMDAT

; 994  : 	typename _Iter_random_helper<
; 995  : 		iterator_traits<_Iter1>::iterator_category, 
; 996  : 		iterator_traits<_Iter2>::iterator_category>::_Iter_random_cat _Cat;
; 997  : 	return (_Cat);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 998  : 	}

	ret	0
??$_Iter_random@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@std@@YA?AUforward_iterator_tag@0@ABV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@ABV?$_Temp_iterator@UOpinion@@@0@@Z ENDP ; std::_Iter_random<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion> >
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@AAV?$_Temp_iterator@UOpinion@@@0@@Z ; std::_Ptr_cat<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Ptr_cat@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@AAV?$_Temp_iterator@UOpinion@@@0@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@AAV?$_Temp_iterator@UOpinion@@@0@@Z PROC ; std::_Ptr_cat<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion> >, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@AAV?$_Temp_iterator@UOpinion@@@0@@Z ENDP ; std::_Ptr_cat<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion> >
_TEXT	ENDS
PUBLIC	??$_Iter_random@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V23@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUOpinion@@ABV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@1@Z ; std::_Iter_random<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> > >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Iter_random@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V23@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUOpinion@@ABV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@1@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
??$_Iter_random@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V23@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUOpinion@@ABV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@1@Z PROC ; std::_Iter_random<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> > >, COMDAT

; 1007 : 	typename _Iter_random_helper3<
; 1008 : 		iterator_traits<_Iter1>::iterator_category, 
; 1009 : 		iterator_traits<_Iter2>::iterator_category,
; 1010 : 		iterator_traits<_Iter3>::iterator_category>::_Iter_random_cat _Cat;
; 1011 : 	return (_Cat);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 1012 : 	}

	ret	0
??$_Iter_random@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V23@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUOpinion@@ABV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@1@Z ENDP ; std::_Iter_random<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> > >
_TEXT	ENDS
PUBLIC	?GetEmbarkedGraphicOverride@CvPlayer@@QBEABVCvString@@XZ ; CvPlayer::GetEmbarkedGraphicOverride
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvplayer.h
;	COMDAT ?GetEmbarkedGraphicOverride@CvPlayer@@QBEABVCvString@@XZ
_TEXT	SEGMENT
?GetEmbarkedGraphicOverride@CvPlayer@@QBEABVCvString@@XZ PROC ; CvPlayer::GetEmbarkedGraphicOverride, COMDAT
; _this$ = ecx

; 1669 : 		return m_strEmbarkedGraphicOverride;

	lea	eax, DWORD PTR [ecx+3132]

; 1670 : 	};

	ret	0
?GetEmbarkedGraphicOverride@CvPlayer@@QBEABVCvString@@XZ ENDP ; CvPlayer::GetEmbarkedGraphicOverride
_TEXT	ENDS
PUBLIC	??4CvString@@QAEAAV0@ABV0@@Z			; CvString::operator=
EXTRN	__imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??4CvString@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4CvString@@QAEAAV0@ABV0@@Z PROC			; CvString::operator=, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR ___that$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	eax, esi
	pop	esi
	ret	4
??4CvString@@QAEAAV0@ABV0@@Z ENDP			; CvString::operator=
_TEXT	ENDS
PUBLIC	?getPlayer@CvPlayerAI@@SAAAV1@W4PlayerTypes@@@Z	; CvPlayerAI::getPlayer
EXTRN	?m_aPlayers@CvPlayerAI@@1PAV1@A:DWORD		; CvPlayerAI::m_aPlayers
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvplayerai.h
;	COMDAT ?getPlayer@CvPlayerAI@@SAAAV1@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_ePlayer$ = 8						; size = 4
?getPlayer@CvPlayerAI@@SAAAV1@W4PlayerTypes@@@Z PROC	; CvPlayerAI::getPlayer, COMDAT

; 28   : 		CvAssertMsg(ePlayer != NO_PLAYER, "Player is not assigned a valid value");
; 29   : 		CvAssertMsg(ePlayer < MAX_PLAYERS, "Player is not assigned a valid value");
; 30   : 		return m_aPlayers[ePlayer];

	mov	eax, DWORD PTR _ePlayer$[esp-4]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers

; 31   : 	}

	ret	0
?getPlayer@CvPlayerAI@@SAAAV1@W4PlayerTypes@@@Z ENDP	; CvPlayerAI::getPlayer
_TEXT	ENDS
PUBLIC	??$_Push_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HHU12@@Z ; std::_Push_heap<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,int,CvWeightedVector<CvPlot *,800,1>::WeightedElement>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$_Push_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HHU12@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Hole$ = 12						; size = 4
__Top$ = 16						; size = 4
__Val$ = 20						; size = 8
??$_Push_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HHU12@@Z PROC ; std::_Push_heap<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,int,CvWeightedVector<CvPlot *,800,1>::WeightedElement>, COMDAT

; 1973 : 	for (_Diff _Idx = (_Hole - 1) / 2;

	mov	ecx, DWORD PTR __Hole$[esp-4]
	push	ebx

; 1974 : 		_Top < _Hole && _DEBUG_LT(*(_First + _Idx), _Val);
; 1975 : 		_Idx = (_Hole - 1) / 2)

	mov	ebx, DWORD PTR __Val$[esp+4]
	lea	eax, DWORD PTR [ecx-1]
	cdq
	push	esi
	mov	esi, DWORD PTR __First$[esp+4]
	sub	eax, edx
	push	edi
	mov	edi, DWORD PTR __Top$[esp+8]
	sar	eax, 1
	cmp	edi, ecx
	jge	SHORT $LN1@Push_heap
	npad	1
$LL3@Push_heap:
	cmp	DWORD PTR [esi+eax*8+4], ebx
	jle	SHORT $LN1@Push_heap

; 1976 : 		{	// move _Hole up to parent
; 1977 : 		*(_First + _Hole) = *(_First + _Idx);

	mov	edx, DWORD PTR [esi+eax*8]
	mov	DWORD PTR [esi+ecx*8], edx
	mov	edx, DWORD PTR [esi+eax*8+4]
	mov	DWORD PTR [esi+ecx*8+4], edx

; 1978 : 		_Hole = _Idx;

	mov	ecx, eax
	dec	eax
	cdq
	sub	eax, edx
	sar	eax, 1
	cmp	edi, ecx
	jl	SHORT $LL3@Push_heap
$LN1@Push_heap:

; 1979 : 		}
; 1980 : 
; 1981 : 	*(_First + _Hole) = _Val;	// drop _Val into final hole

	mov	eax, DWORD PTR __Val$[esp+8]
	pop	edi
	mov	DWORD PTR [esi+ecx*8+4], ebx
	mov	DWORD PTR [esi+ecx*8], eax
	pop	esi
	pop	ebx

; 1982 : 	}

	ret	0
??$_Push_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HHU12@@Z ENDP ; std::_Push_heap<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,int,CvWeightedVector<CvPlot *,800,1>::WeightedElement>
_TEXT	ENDS
PUBLIC	??$_Iter_random@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@PAU12@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z ; std::_Iter_random<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Iter_random@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@PAU12@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Iter_random@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@PAU12@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z PROC ; std::_Iter_random<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,CvWeightedVector<CvPlot *,800,1>::WeightedElement *>, COMDAT

; 994  : 	typename _Iter_random_helper<
; 995  : 		iterator_traits<_Iter1>::iterator_category, 
; 996  : 		iterator_traits<_Iter2>::iterator_category>::_Iter_random_cat _Cat;
; 997  : 	return (_Cat);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 998  : 	}

	ret	0
??$_Iter_random@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@PAU12@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z ENDP ; std::_Iter_random<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@PAU12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z ; std::_Ptr_cat<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Ptr_cat@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@PAU12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@PAU12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z PROC ; std::_Ptr_cat<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,CvWeightedVector<CvPlot *,800,1>::WeightedElement *>, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@PAU12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z ENDP ; std::_Ptr_cat<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
_TEXT	ENDS
PUBLIC	?getX@CvPlot@@QBEHXZ				; CvPlot::getX
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvplot.h
;	COMDAT ?getX@CvPlot@@QBEHXZ
_TEXT	SEGMENT
?getX@CvPlot@@QBEHXZ PROC				; CvPlot::getX, COMDAT
; _this$ = ecx

; 307  : 		return m_iX;

	movsx	eax, WORD PTR [ecx]

; 308  : 	}

	ret	0
?getX@CvPlot@@QBEHXZ ENDP				; CvPlot::getX
_TEXT	ENDS
PUBLIC	??$_Copy_backward_opt@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@PAU12@Urandom_access_iterator_tag@std@@@std@@YAPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@PAU12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,CvWeightedVector<CvPlot *,800,1>::WeightedElement *,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Copy_backward_opt@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@PAU12@Urandom_access_iterator_tag@std@@@std@@YAPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@PAU12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Copy_backward_opt@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@PAU12@Urandom_access_iterator_tag@std@@@std@@YAPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@PAU12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_backward_opt<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,CvWeightedVector<CvPlot *,800,1>::WeightedElement *,std::random_access_iterator_tag>, COMDAT

; 2674 : 	_DEBUG_RANGE(_First, _Last);
; 2675 : 	while (_First != _Last)

	mov	edx, DWORD PTR __First$[esp-4]
	mov	ecx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	edx, ecx
	je	SHORT $LN1@Copy_backw@2
	push	esi
$LL2@Copy_backw@2:

; 2676 : 		*--_Dest = *--_Last;

	mov	esi, DWORD PTR [ecx-8]
	sub	ecx, 8
	sub	eax, 8
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	cmp	ecx, edx
	jne	SHORT $LL2@Copy_backw@2
	pop	esi
$LN1@Copy_backw@2:

; 2677 : 	return (_Dest);
; 2678 : 	}

	ret	0
??$_Copy_backward_opt@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@PAU12@Urandom_access_iterator_tag@std@@@std@@YAPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@PAU12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_backward_opt<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,CvWeightedVector<CvPlot *,800,1>::WeightedElement *,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	?getY@CvPlot@@QBEHXZ				; CvPlot::getY
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvplot.h
;	COMDAT ?getY@CvPlot@@QBEHXZ
_TEXT	SEGMENT
?getY@CvPlot@@QBEHXZ PROC				; CvPlot::getY, COMDAT
; _this$ = ecx

; 312  : 		return m_iY;

	movsx	eax, WORD PTR [ecx+2]

; 313  : 	}

	ret	0
?getY@CvPlot@@QBEHXZ ENDP				; CvPlot::getY
_TEXT	ENDS
PUBLIC	??4?$_Temp_iterator@UOpinion@@@std@@QAEAAV01@ABUOpinion@@@Z ; std::_Temp_iterator<Opinion>::operator=
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??4?$_Temp_iterator@UOpinion@@@std@@QAEAAV01@ABUOpinion@@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??4?$_Temp_iterator@UOpinion@@@std@@QAEAAV01@ABUOpinion@@@Z PROC ; std::_Temp_iterator<Opinion>::operator=, COMDAT
; _this$ = ecx

; 562  : 		{	// assign or construct value into active buffer, and increment

	push	esi
	mov	esi, ecx

; 563  : 		if (_Pbuf->_Current < _Pbuf->_Hiwater)

	mov	eax, DWORD PTR [esi+16]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN2@operator@3
	push	ebx

; 564  : 			*_Pbuf->_Current++ = _Val;	// below high water mark, assign

	mov	ebx, DWORD PTR __Val$[esp+4]
	push	edi
	mov	edi, DWORD PTR [eax+4]
	lea	edx, DWORD PTR [edi+84]
	push	ebx
	mov	ecx, edi
	mov	DWORD PTR [eax+4], edx
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR [ebx+80]
	mov	DWORD PTR [edi+80], eax
	pop	edi
	pop	ebx

; 571  : 			}
; 572  : 		return (*this);

	mov	eax, esi
	pop	esi

; 573  : 		}

	ret	4
$LN2@operator@3:

; 565  : 		else
; 566  : 			{	// above high water mark, construct
; 567  : 			_SCL_SECURE_VALIDATE((_Pbuf->_Current - _Pbuf->_Begin) < _Pbuf->_Size);
; 568  : 			_Pty _Ptr = &*_Pbuf->_Current;
; 569  : 			_Construct(_Ptr, _Val);

	mov	ecx, DWORD PTR __Val$[esp]
	mov	edx, eax
	mov	eax, DWORD PTR [edx+4]
	push	ecx
	push	eax
	call	??$_Construct@UOpinion@@U1@@std@@YAXPAUOpinion@@ABU1@@Z ; std::_Construct<Opinion,Opinion>

; 570  : 			_Pbuf->_Hiwater = ++_Pbuf->_Current;

	mov	eax, DWORD PTR [esi+16]
	add	DWORD PTR [eax+4], 84			; 00000054H
	mov	eax, DWORD PTR [esi+16]
	mov	ecx, DWORD PTR [eax+4]
	add	esp, 8
	mov	DWORD PTR [eax+8], ecx

; 571  : 			}
; 572  : 		return (*this);

	mov	eax, esi
	pop	esi

; 573  : 		}

	ret	4
??4?$_Temp_iterator@UOpinion@@@std@@QAEAAV01@ABUOpinion@@@Z ENDP ; std::_Temp_iterator<Opinion>::operator=
_TEXT	ENDS
PUBLIC	??D?$_Temp_iterator@UOpinion@@@std@@QAEAAV01@XZ	; std::_Temp_iterator<Opinion>::operator*
; Function compile flags: /Ogtpy
;	COMDAT ??D?$_Temp_iterator@UOpinion@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??D?$_Temp_iterator@UOpinion@@@std@@QAEAAV01@XZ PROC	; std::_Temp_iterator<Opinion>::operator*, COMDAT
; _this$ = ecx

; 576  : 		{	// pretend to return designated value

	mov	eax, ecx

; 577  : 		return (*this);
; 578  : 		}

	ret	0
??D?$_Temp_iterator@UOpinion@@@std@@QAEAAV01@XZ ENDP	; std::_Temp_iterator<Opinion>::operator*
_TEXT	ENDS
PUBLIC	??E?$_Temp_iterator@UOpinion@@@std@@QAEAAV01@XZ	; std::_Temp_iterator<Opinion>::operator++
; Function compile flags: /Ogtpy
;	COMDAT ??E?$_Temp_iterator@UOpinion@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Temp_iterator@UOpinion@@@std@@QAEAAV01@XZ PROC	; std::_Temp_iterator<Opinion>::operator++, COMDAT
; _this$ = ecx

; 581  : 		{	// pretend to preincrement

	mov	eax, ecx

; 582  : 		return (*this);
; 583  : 		}

	ret	0
??E?$_Temp_iterator@UOpinion@@@std@@QAEAAV01@XZ ENDP	; std::_Temp_iterator<Opinion>::operator++
_TEXT	ENDS
PUBLIC	??$_Iter_random@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0@Z ; std::_Iter_random<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Iter_random@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Iter_random@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0@Z PROC ; std::_Iter_random<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> > >, COMDAT

; 994  : 	typename _Iter_random_helper<
; 995  : 		iterator_traits<_Iter1>::iterator_category, 
; 996  : 		iterator_traits<_Iter2>::iterator_category>::_Iter_random_cat _Cat;
; 997  : 	return (_Cat);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 998  : 	}

	ret	0
??$_Iter_random@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0@Z ENDP ; std::_Iter_random<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> > >
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0@Z ; std::_Ptr_cat<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> > >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Ptr_cat@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0@Z PROC ; std::_Ptr_cat<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> > >, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0@Z ENDP ; std::_Ptr_cat<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> > >
_TEXT	ENDS
PUBLIC	?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ		; CvPlot::getPlotCity
EXTRN	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z:PROC	; CvPlayer::getCity
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvplot.h
;	COMDAT ?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ
_TEXT	SEGMENT
?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ PROC		; CvPlot::getPlotCity, COMDAT
; _this$ = ecx

; 533  : 		if((m_plotCity.eOwner >= 0) && m_plotCity.eOwner < MAX_PLAYERS)

	mov	eax, DWORD PTR [ecx+104]
	test	eax, eax
	jl	SHORT $LN1@getPlotCit
	cmp	eax, 64					; 00000040H
	jge	SHORT $LN1@getPlotCit

; 534  : 			return (GET_PLAYER((PlayerTypes)m_plotCity.eOwner).getCity(m_plotCity.iID));

	mov	ecx, DWORD PTR [ecx+108]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	ecx
	mov	ecx, eax
	call	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z	; CvPlayer::getCity

; 537  : 	}

	ret	0
$LN1@getPlotCit:

; 535  : 
; 536  : 		return NULL;

	xor	eax, eax

; 537  : 	}

	ret	0
?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ ENDP		; CvPlot::getPlotCity
_TEXT	ENDS
PUBLIC	??$_Iter_random@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUOpinion@@ABV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@@Z ; std::_Iter_random<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Iter_random@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUOpinion@@ABV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Iter_random@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUOpinion@@ABV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@@Z PROC ; std::_Iter_random<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> > >, COMDAT

; 994  : 	typename _Iter_random_helper<
; 995  : 		iterator_traits<_Iter1>::iterator_category, 
; 996  : 		iterator_traits<_Iter2>::iterator_category>::_Iter_random_cat _Cat;
; 997  : 	return (_Cat);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 998  : 	}

	ret	0
??$_Iter_random@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUOpinion@@ABV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@@Z ENDP ; std::_Iter_random<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> > >
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUOpinion@@AAV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@@Z ; std::_Ptr_cat<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> > >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Ptr_cat@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUOpinion@@AAV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUOpinion@@AAV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@@Z PROC ; std::_Ptr_cat<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> > >, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUOpinion@@AAV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@@Z ENDP ; std::_Ptr_cat<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> > >
_TEXT	ENDS
PUBLIC	?GetBit@PlotBoolField@CvPlot@@QBE_NI@Z		; CvPlot::PlotBoolField::GetBit
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvplot.h
;	COMDAT ?GetBit@PlotBoolField@CvPlot@@QBE_NI@Z
_TEXT	SEGMENT
_uiEntry$ = 8						; size = 4
?GetBit@PlotBoolField@CvPlot@@QBE_NI@Z PROC		; CvPlot::PlotBoolField::GetBit, COMDAT
; _this$ = ecx

; 767  : 		{

	mov	edx, ecx

; 768  : 			const uint uiOffset = uiEntry/eSize;

	mov	ecx, DWORD PTR _uiEntry$[esp-4]
	push	esi
	mov	eax, ecx
	shr	eax, 5

; 769  : 			return m_dwBits[uiOffset] & 1<<(uiEntry-(eSize*uiOffset));

	mov	esi, eax
	shl	esi, 5
	sub	ecx, esi
	mov	esi, 1
	shl	esi, cl
	test	esi, DWORD PTR [edx+eax*4]
	pop	esi
	setne	al

; 770  : 		}

	ret	4
?GetBit@PlotBoolField@CvPlot@@QBE_NI@Z ENDP		; CvPlot::PlotBoolField::GetBit
_TEXT	ENDS
PUBLIC	??$_Iter_random@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@@std@@YA?AUforward_iterator_tag@0@ABV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0ABV?$_Temp_iterator@UOpinion@@@0@@Z ; std::_Iter_random<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Iter_random@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@@std@@YA?AUforward_iterator_tag@0@ABV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0ABV?$_Temp_iterator@UOpinion@@@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
??$_Iter_random@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@@std@@YA?AUforward_iterator_tag@0@ABV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0ABV?$_Temp_iterator@UOpinion@@@0@@Z PROC ; std::_Iter_random<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion> >, COMDAT

; 1007 : 	typename _Iter_random_helper3<
; 1008 : 		iterator_traits<_Iter1>::iterator_category, 
; 1009 : 		iterator_traits<_Iter2>::iterator_category,
; 1010 : 		iterator_traits<_Iter3>::iterator_category>::_Iter_random_cat _Cat;
; 1011 : 	return (_Cat);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 1012 : 	}

	ret	0
??$_Iter_random@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@@std@@YA?AUforward_iterator_tag@0@ABV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0ABV?$_Temp_iterator@UOpinion@@@0@@Z ENDP ; std::_Iter_random<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion> >
_TEXT	ENDS
PUBLIC	??$_Iter_cat@PAUOpinion@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUOpinion@@@Z ; std::_Iter_cat<Opinion *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Iter_cat@PAUOpinion@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUOpinion@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAUOpinion@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUOpinion@@@Z PROC ; std::_Iter_cat<Opinion *>, COMDAT

; 953  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 954  : 	return (_Cat);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 955  : 	}

	ret	0
??$_Iter_cat@PAUOpinion@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUOpinion@@@Z ENDP ; std::_Iter_cat<Opinion *>
_TEXT	ENDS
PUBLIC	??$_Advance@PAUOpinion@@H@std@@YAXAAPAUOpinion@@HUrandom_access_iterator_tag@0@@Z ; std::_Advance<Opinion *,int>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Advance@PAUOpinion@@H@std@@YAXAAPAUOpinion@@HUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__Where$ = 8						; size = 4
__Off$ = 12						; size = 4
___formal$ = 16						; size = 1
??$_Advance@PAUOpinion@@H@std@@YAXAAPAUOpinion@@HUrandom_access_iterator_tag@0@@Z PROC ; std::_Advance<Opinion *,int>, COMDAT

; 1822 : 	_Where += _Off;

	mov	ecx, DWORD PTR __Off$[esp-4]
	mov	eax, DWORD PTR __Where$[esp-4]
	imul	ecx, 84					; 00000054H
	add	DWORD PTR [eax], ecx

; 1823 : 	}

	ret	0
??$_Advance@PAUOpinion@@H@std@@YAXAAPAUOpinion@@HUrandom_access_iterator_tag@0@@Z ENDP ; std::_Advance<Opinion *,int>
_TEXT	ENDS
PUBLIC	??$_Iter_random@PAUOpinion@@PAU1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUOpinion@@0ABV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@@Z ; std::_Iter_random<Opinion *,Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> > >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Iter_random@PAUOpinion@@PAU1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUOpinion@@0ABV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
??$_Iter_random@PAUOpinion@@PAU1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUOpinion@@0ABV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@@Z PROC ; std::_Iter_random<Opinion *,Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> > >, COMDAT

; 1007 : 	typename _Iter_random_helper3<
; 1008 : 		iterator_traits<_Iter1>::iterator_category, 
; 1009 : 		iterator_traits<_Iter2>::iterator_category,
; 1010 : 		iterator_traits<_Iter3>::iterator_category>::_Iter_random_cat _Cat;
; 1011 : 	return (_Cat);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 1012 : 	}

	ret	0
??$_Iter_random@PAUOpinion@@PAU1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUOpinion@@0ABV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@@Z ENDP ; std::_Iter_random<Opinion *,Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> > >
_TEXT	ENDS
PUBLIC	?coordRange@@YAHHH_N@Z				; coordRange
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvmap.h
;	COMDAT ?coordRange@@YAHHH_N@Z
_TEXT	SEGMENT
_iCoord$ = 8						; size = 4
_iRange$ = 12						; size = 4
_bWrap$ = 16						; size = 1
?coordRange@@YAHHH_N@Z PROC				; coordRange, COMDAT

; 88   : 	if(bWrap)

	cmp	BYTE PTR _bWrap$[esp-4], 0
	mov	eax, DWORD PTR _iCoord$[esp-4]
	je	SHORT $LN5@coordRange

; 89   : 	{
; 90   : 		if(iCoord < 0)
; 91   : 		{
; 92   : 			return (iRange + (iCoord % iRange));

	mov	ecx, DWORD PTR _iRange$[esp-4]
	test	eax, eax
	jge	SHORT $LN3@coordRange
	cdq
	idiv	ecx
	mov	eax, edx
	add	eax, ecx

; 97   : 		}
; 98   : 	}
; 99   : 
; 100  : 	return iCoord;
; 101  : }

	ret	0
$LN3@coordRange:

; 93   : 		}
; 94   : 		else if(iCoord >= iRange)

	cmp	eax, ecx
	jl	SHORT $LN5@coordRange

; 95   : 		{
; 96   : 			return (iCoord % iRange);

	cdq
	idiv	ecx
	mov	eax, edx
$LN5@coordRange:

; 97   : 		}
; 98   : 	}
; 99   : 
; 100  : 	return iCoord;
; 101  : }

	ret	0
?coordRange@@YAHHH_N@Z ENDP				; coordRange
_TEXT	ENDS
PUBLIC	?numPlots@CvMap@@QBEHXZ				; CvMap::numPlots
; Function compile flags: /Ogtpy
;	COMDAT ?numPlots@CvMap@@QBEHXZ
_TEXT	SEGMENT
?numPlots@CvMap@@QBEHXZ PROC				; CvMap::numPlots, COMDAT
; _this$ = ecx

; 170  : 		return m_iGridSize;

	mov	eax, DWORD PTR [ecx+4028]

; 171  : 	}

	ret	0
?numPlots@CvMap@@QBEHXZ ENDP				; CvMap::numPlots
_TEXT	ENDS
PUBLIC	?getGridWidth@CvMap@@QBEHXZ			; CvMap::getGridWidth
; Function compile flags: /Ogtpy
;	COMDAT ?getGridWidth@CvMap@@QBEHXZ
_TEXT	SEGMENT
?getGridWidth@CvMap@@QBEHXZ PROC			; CvMap::getGridWidth, COMDAT
; _this$ = ecx

; 198  : 		return m_iGridWidth;

	mov	eax, DWORD PTR [ecx+4020]

; 199  : 	}

	ret	0
?getGridWidth@CvMap@@QBEHXZ ENDP			; CvMap::getGridWidth
_TEXT	ENDS
PUBLIC	?getGridHeight@CvMap@@QBEHXZ			; CvMap::getGridHeight
; Function compile flags: /Ogtpy
;	COMDAT ?getGridHeight@CvMap@@QBEHXZ
_TEXT	SEGMENT
?getGridHeight@CvMap@@QBEHXZ PROC			; CvMap::getGridHeight, COMDAT
; _this$ = ecx

; 206  : 		return m_iGridHeight;

	mov	eax, DWORD PTR [ecx+4024]

; 207  : 	}

	ret	0
?getGridHeight@CvMap@@QBEHXZ ENDP			; CvMap::getGridHeight
_TEXT	ENDS
PUBLIC	?isWrapX@CvMap@@QBE_NXZ				; CvMap::isWrapX
; Function compile flags: /Ogtpy
;	COMDAT ?isWrapX@CvMap@@QBE_NXZ
_TEXT	SEGMENT
?isWrapX@CvMap@@QBE_NXZ PROC				; CvMap::isWrapX, COMDAT
; _this$ = ecx

; 228  : 		return m_bWrapX;

	mov	al, BYTE PTR [ecx+4056]

; 229  : 	}

	ret	0
?isWrapX@CvMap@@QBE_NXZ ENDP				; CvMap::isWrapX
_TEXT	ENDS
PUBLIC	?isWrapY@CvMap@@QBE_NXZ				; CvMap::isWrapY
; Function compile flags: /Ogtpy
;	COMDAT ?isWrapY@CvMap@@QBE_NXZ
_TEXT	SEGMENT
?isWrapY@CvMap@@QBE_NXZ PROC				; CvMap::isWrapY, COMDAT
; _this$ = ecx

; 233  : 		return m_bWrapY;

	mov	al, BYTE PTR [ecx+4057]

; 234  : 	}

	ret	0
?isWrapY@CvMap@@QBE_NXZ ENDP				; CvMap::isWrapY
_TEXT	ENDS
PUBLIC	?plotByIndex@CvMap@@QBEPAVCvPlot@@H@Z		; CvMap::plotByIndex
; Function compile flags: /Ogtpy
;	COMDAT ?plotByIndex@CvMap@@QBEPAVCvPlot@@H@Z
_TEXT	SEGMENT
_iIndex$ = 8						; size = 4
?plotByIndex@CvMap@@QBEPAVCvPlot@@H@Z PROC		; CvMap::plotByIndex, COMDAT
; _this$ = ecx

; 263  : 		return (((iIndex >= 0) && (iIndex < (numPlots()))) ? &(m_pMapPlots[iIndex]) : NULL);

	mov	eax, DWORD PTR _iIndex$[esp-4]
	test	eax, eax
	jl	SHORT $LN3@plotByInde
	cmp	eax, DWORD PTR [ecx+4028]
	jge	SHORT $LN3@plotByInde
	imul	eax, 484				; 000001e4H
	add	eax, DWORD PTR [ecx+4068]

; 264  : 	}

	ret	4
$LN3@plotByInde:

; 263  : 		return (((iIndex >= 0) && (iIndex < (numPlots()))) ? &(m_pMapPlots[iIndex]) : NULL);

	xor	eax, eax

; 264  : 	}

	ret	4
?plotByIndex@CvMap@@QBEPAVCvPlot@@H@Z ENDP		; CvMap::plotByIndex
_TEXT	ENDS
PUBLIC	??_9CvPlayerAI@@$BDA@AE				; CvPlayerAI::`vcall'{48}'
; Function compile flags: /Odtpy
;	COMDAT ??_9CvPlayerAI@@$BDA@AE
_TEXT	SEGMENT
??_9CvPlayerAI@@$BDA@AE PROC				; CvPlayerAI::`vcall'{48}', COMDAT
	mov	eax, DWORD PTR [ecx]
	jmp	DWORD PTR [eax+48]
??_9CvPlayerAI@@$BDA@AE ENDP				; CvPlayerAI::`vcall'{48}'
_TEXT	ENDS
PUBLIC	??_9CvPlayerAI@@$BCE@AE				; CvPlayerAI::`vcall'{36}'
; Function compile flags: /Odtpy
;	COMDAT ??_9CvPlayerAI@@$BCE@AE
_TEXT	SEGMENT
??_9CvPlayerAI@@$BCE@AE PROC				; CvPlayerAI::`vcall'{36}', COMDAT
	mov	eax, DWORD PTR [ecx]
	jmp	DWORD PTR [eax+36]
??_9CvPlayerAI@@$BCE@AE ENDP				; CvPlayerAI::`vcall'{36}'
_TEXT	ENDS
PUBLIC	?Clear@CvTemporaryZone@@QAEXXZ			; CvTemporaryZone::Clear
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvtacticalai.h
;	COMDAT ?Clear@CvTemporaryZone@@QAEXXZ
_TEXT	SEGMENT
?Clear@CvTemporaryZone@@QAEXXZ PROC			; CvTemporaryZone::Clear, COMDAT
; _this$ = ecx

; 566  : 		m_iX = 0;

	xor	eax, eax
	mov	DWORD PTR [ecx], eax

; 567  : 		m_iY = 0;

	mov	DWORD PTR [ecx+4], eax

; 568  : 		m_eTargetType = AI_TACTICAL_TARGET_NONE;

	mov	DWORD PTR [ecx+8], eax

; 569  : 		m_iLastTurn = 0;

	mov	DWORD PTR [ecx+12], eax

; 570  : #ifdef AUI_WARNING_FIXES
; 571  : 		m_bIsNavalInvasion = false;
; 572  : #endif
; 573  : 	};

	ret	0
?Clear@CvTemporaryZone@@QAEXXZ ENDP			; CvTemporaryZone::Clear
_TEXT	ENDS
PUBLIC	?SetX@CvTemporaryZone@@QAEXH@Z			; CvTemporaryZone::SetX
; Function compile flags: /Ogtpy
;	COMDAT ?SetX@CvTemporaryZone@@QAEXH@Z
_TEXT	SEGMENT
_iX$ = 8						; size = 4
?SetX@CvTemporaryZone@@QAEXH@Z PROC			; CvTemporaryZone::SetX, COMDAT
; _this$ = ecx

; 581  : 		m_iX = iX;

	mov	eax, DWORD PTR _iX$[esp-4]
	mov	DWORD PTR [ecx], eax

; 582  : 	};

	ret	4
?SetX@CvTemporaryZone@@QAEXH@Z ENDP			; CvTemporaryZone::SetX
_TEXT	ENDS
PUBLIC	?SetY@CvTemporaryZone@@QAEXH@Z			; CvTemporaryZone::SetY
; Function compile flags: /Ogtpy
;	COMDAT ?SetY@CvTemporaryZone@@QAEXH@Z
_TEXT	SEGMENT
_iY$ = 8						; size = 4
?SetY@CvTemporaryZone@@QAEXH@Z PROC			; CvTemporaryZone::SetY, COMDAT
; _this$ = ecx

; 589  : 		m_iY = iY;

	mov	eax, DWORD PTR _iY$[esp-4]
	mov	DWORD PTR [ecx+4], eax

; 590  : 	};

	ret	4
?SetY@CvTemporaryZone@@QAEXH@Z ENDP			; CvTemporaryZone::SetY
_TEXT	ENDS
PUBLIC	?SetTargetType@CvTemporaryZone@@QAEXW4AITacticalTargetType@@@Z ; CvTemporaryZone::SetTargetType
; Function compile flags: /Ogtpy
;	COMDAT ?SetTargetType@CvTemporaryZone@@QAEXW4AITacticalTargetType@@@Z
_TEXT	SEGMENT
_eType$ = 8						; size = 4
?SetTargetType@CvTemporaryZone@@QAEXW4AITacticalTargetType@@@Z PROC ; CvTemporaryZone::SetTargetType, COMDAT
; _this$ = ecx

; 597  : 		m_eTargetType = eType;

	mov	eax, DWORD PTR _eType$[esp-4]
	mov	DWORD PTR [ecx+8], eax

; 598  : 	};

	ret	4
?SetTargetType@CvTemporaryZone@@QAEXW4AITacticalTargetType@@@Z ENDP ; CvTemporaryZone::SetTargetType
_TEXT	ENDS
PUBLIC	?SetLastTurn@CvTemporaryZone@@QAEXH@Z		; CvTemporaryZone::SetLastTurn
; Function compile flags: /Ogtpy
;	COMDAT ?SetLastTurn@CvTemporaryZone@@QAEXH@Z
_TEXT	SEGMENT
_iTurn$ = 8						; size = 4
?SetLastTurn@CvTemporaryZone@@QAEXH@Z PROC		; CvTemporaryZone::SetLastTurn, COMDAT
; _this$ = ecx

; 605  : 		m_iLastTurn = iTurn;

	mov	eax, DWORD PTR _iTurn$[esp-4]
	mov	DWORD PTR [ecx+12], eax

; 606  : 	};

	ret	4
?SetLastTurn@CvTemporaryZone@@QAEXH@Z ENDP		; CvTemporaryZone::SetLastTurn
_TEXT	ENDS
PUBLIC	?getTeam@CvTeam@@SAAAV1@W4TeamTypes@@@Z		; CvTeam::getTeam
EXTRN	?m_aTeams@CvTeam@@1PAV1@A:DWORD			; CvTeam::m_aTeams
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvteam.h
;	COMDAT ?getTeam@CvTeam@@SAAAV1@W4TeamTypes@@@Z
_TEXT	SEGMENT
_eTeam$ = 8						; size = 4
?getTeam@CvTeam@@SAAAV1@W4TeamTypes@@@Z PROC		; CvTeam::getTeam, COMDAT

; 29   : 		CvAssertMsg(eTeam != NO_TEAM, "eTeam is not assigned a valid value");
; 30   : 		CvAssertMsg(eTeam < MAX_TEAMS, "eTeam is not assigned a valid value");
; 31   : 		return m_aTeams[eTeam];

	mov	eax, DWORD PTR _eTeam$[esp-4]
	imul	eax, 2984				; 00000ba8H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams

; 32   : 	}

	ret	0
?getTeam@CvTeam@@SAAAV1@W4TeamTypes@@@Z ENDP		; CvTeam::getTeam
_TEXT	ENDS
PUBLIC	??0CvString@@QAE@ABV0@@Z			; CvString::CvString
; Function compile flags: /Ogtpy
;	COMDAT ??0CvString@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0CvString@@QAE@ABV0@@Z PROC				; CvString::CvString, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR ___that$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, esi
	pop	esi
	ret	4
??0CvString@@QAE@ABV0@@Z ENDP				; CvString::CvString
_TEXT	ENDS
PUBLIC	?GetGreatScientistRateModifier@CvPlayerTraits@@QBEHXZ ; CvPlayerTraits::GetGreatScientistRateModifier
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvtraitclasses.h
;	COMDAT ?GetGreatScientistRateModifier@CvPlayerTraits@@QBEHXZ
_TEXT	SEGMENT
?GetGreatScientistRateModifier@CvPlayerTraits@@QBEHXZ PROC ; CvPlayerTraits::GetGreatScientistRateModifier, COMDAT
; _this$ = ecx

; 451  : 		return m_iGreatScientistRateModifier;

	mov	eax, DWORD PTR [ecx+48]

; 452  : 	};

	ret	0
?GetGreatScientistRateModifier@CvPlayerTraits@@QBEHXZ ENDP ; CvPlayerTraits::GetGreatScientistRateModifier
_TEXT	ENDS
PUBLIC	?GetGreatGeneralExtraBonus@CvPlayerTraits@@QBEHXZ ; CvPlayerTraits::GetGreatGeneralExtraBonus
; Function compile flags: /Ogtpy
;	COMDAT ?GetGreatGeneralExtraBonus@CvPlayerTraits@@QBEHXZ
_TEXT	SEGMENT
?GetGreatGeneralExtraBonus@CvPlayerTraits@@QBEHXZ PROC	; CvPlayerTraits::GetGreatGeneralExtraBonus, COMDAT
; _this$ = ecx

; 459  : 		return m_iGreatGeneralExtraBonus;

	mov	eax, DWORD PTR [ecx+56]

; 460  : 	};

	ret	0
?GetGreatGeneralExtraBonus@CvPlayerTraits@@QBEHXZ ENDP	; CvPlayerTraits::GetGreatGeneralExtraBonus
_TEXT	ENDS
PUBLIC	?GetCityUnhappinessModifier@CvPlayerTraits@@QBEHXZ ; CvPlayerTraits::GetCityUnhappinessModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetCityUnhappinessModifier@CvPlayerTraits@@QBEHXZ
_TEXT	SEGMENT
?GetCityUnhappinessModifier@CvPlayerTraits@@QBEHXZ PROC	; CvPlayerTraits::GetCityUnhappinessModifier, COMDAT
; _this$ = ecx

; 483  : 		return m_iCityUnhappinessModifier;

	mov	eax, DWORD PTR [ecx+80]

; 484  : 	};

	ret	0
?GetCityUnhappinessModifier@CvPlayerTraits@@QBEHXZ ENDP	; CvPlayerTraits::GetCityUnhappinessModifier
_TEXT	ENDS
PUBLIC	?GetPopulationUnhappinessModifier@CvPlayerTraits@@QBEHXZ ; CvPlayerTraits::GetPopulationUnhappinessModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetPopulationUnhappinessModifier@CvPlayerTraits@@QBEHXZ
_TEXT	SEGMENT
?GetPopulationUnhappinessModifier@CvPlayerTraits@@QBEHXZ PROC ; CvPlayerTraits::GetPopulationUnhappinessModifier, COMDAT
; _this$ = ecx

; 487  : 		return m_iPopulationUnhappinessModifier;

	mov	eax, DWORD PTR [ecx+84]

; 488  : 	};

	ret	0
?GetPopulationUnhappinessModifier@CvPlayerTraits@@QBEHXZ ENDP ; CvPlayerTraits::GetPopulationUnhappinessModifier
_TEXT	ENDS
PUBLIC	?GetCityStateCombatModifier@CvPlayerTraits@@QBEHXZ ; CvPlayerTraits::GetCityStateCombatModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetCityStateCombatModifier@CvPlayerTraits@@QBEHXZ
_TEXT	SEGMENT
?GetCityStateCombatModifier@CvPlayerTraits@@QBEHXZ PROC	; CvPlayerTraits::GetCityStateCombatModifier, COMDAT
; _this$ = ecx

; 499  : 		return m_iCityStateCombatModifier;

	mov	eax, DWORD PTR [ecx+96]

; 500  : 	};

	ret	0
?GetCityStateCombatModifier@CvPlayerTraits@@QBEHXZ ENDP	; CvPlayerTraits::GetCityStateCombatModifier
_TEXT	ENDS
PUBLIC	?GetGoldenAgeCombatModifier@CvPlayerTraits@@QBEHXZ ; CvPlayerTraits::GetGoldenAgeCombatModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetGoldenAgeCombatModifier@CvPlayerTraits@@QBEHXZ
_TEXT	SEGMENT
?GetGoldenAgeCombatModifier@CvPlayerTraits@@QBEHXZ PROC	; CvPlayerTraits::GetGoldenAgeCombatModifier, COMDAT
; _this$ = ecx

; 589  : 		return m_iGoldenAgeCombatModifier;

	mov	eax, DWORD PTR [ecx+180]

; 590  : 	};

	ret	0
?GetGoldenAgeCombatModifier@CvPlayerTraits@@QBEHXZ ENDP	; CvPlayerTraits::GetGoldenAgeCombatModifier
_TEXT	ENDS
PUBLIC	?GetGoldenAgeTourismModifier@CvPlayerTraits@@QBEHXZ ; CvPlayerTraits::GetGoldenAgeTourismModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetGoldenAgeTourismModifier@CvPlayerTraits@@QBEHXZ
_TEXT	SEGMENT
?GetGoldenAgeTourismModifier@CvPlayerTraits@@QBEHXZ PROC ; CvPlayerTraits::GetGoldenAgeTourismModifier, COMDAT
; _this$ = ecx

; 593  : 		return m_iGoldenAgeTourismModifier;

	mov	eax, DWORD PTR [ecx+184]

; 594  : 	};

	ret	0
?GetGoldenAgeTourismModifier@CvPlayerTraits@@QBEHXZ ENDP ; CvPlayerTraits::GetGoldenAgeTourismModifier
_TEXT	ENDS
PUBLIC	?GetGoldenAgeGreatArtistRateModifier@CvPlayerTraits@@QBEHXZ ; CvPlayerTraits::GetGoldenAgeGreatArtistRateModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetGoldenAgeGreatArtistRateModifier@CvPlayerTraits@@QBEHXZ
_TEXT	SEGMENT
?GetGoldenAgeGreatArtistRateModifier@CvPlayerTraits@@QBEHXZ PROC ; CvPlayerTraits::GetGoldenAgeGreatArtistRateModifier, COMDAT
; _this$ = ecx

; 597  : 		return m_iGoldenAgeGreatArtistRateModifier;

	mov	eax, DWORD PTR [ecx+188]

; 598  : 	};

	ret	0
?GetGoldenAgeGreatArtistRateModifier@CvPlayerTraits@@QBEHXZ ENDP ; CvPlayerTraits::GetGoldenAgeGreatArtistRateModifier
_TEXT	ENDS
PUBLIC	?GetGoldenAgeGreatMusicianRateModifier@CvPlayerTraits@@QBEHXZ ; CvPlayerTraits::GetGoldenAgeGreatMusicianRateModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetGoldenAgeGreatMusicianRateModifier@CvPlayerTraits@@QBEHXZ
_TEXT	SEGMENT
?GetGoldenAgeGreatMusicianRateModifier@CvPlayerTraits@@QBEHXZ PROC ; CvPlayerTraits::GetGoldenAgeGreatMusicianRateModifier, COMDAT
; _this$ = ecx

; 601  : 		return m_iGoldenAgeGreatMusicianRateModifier;

	mov	eax, DWORD PTR [ecx+192]

; 602  : 	};

	ret	0
?GetGoldenAgeGreatMusicianRateModifier@CvPlayerTraits@@QBEHXZ ENDP ; CvPlayerTraits::GetGoldenAgeGreatMusicianRateModifier
_TEXT	ENDS
PUBLIC	?GetGoldenAgeGreatWriterRateModifier@CvPlayerTraits@@QBEHXZ ; CvPlayerTraits::GetGoldenAgeGreatWriterRateModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetGoldenAgeGreatWriterRateModifier@CvPlayerTraits@@QBEHXZ
_TEXT	SEGMENT
?GetGoldenAgeGreatWriterRateModifier@CvPlayerTraits@@QBEHXZ PROC ; CvPlayerTraits::GetGoldenAgeGreatWriterRateModifier, COMDAT
; _this$ = ecx

; 605  : 		return m_iGoldenAgeGreatWriterRateModifier;

	mov	eax, DWORD PTR [ecx+196]

; 606  : 	};

	ret	0
?GetGoldenAgeGreatWriterRateModifier@CvPlayerTraits@@QBEHXZ ENDP ; CvPlayerTraits::GetGoldenAgeGreatWriterRateModifier
_TEXT	ENDS
PUBLIC	?GetNaturalWonderYieldModifier@CvPlayerTraits@@QBEHXZ ; CvPlayerTraits::GetNaturalWonderYieldModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetNaturalWonderYieldModifier@CvPlayerTraits@@QBEHXZ
_TEXT	SEGMENT
?GetNaturalWonderYieldModifier@CvPlayerTraits@@QBEHXZ PROC ; CvPlayerTraits::GetNaturalWonderYieldModifier, COMDAT
; _this$ = ecx

; 636  : 		return m_iNaturalWonderYieldModifier;

	mov	eax, DWORD PTR [ecx+212]

; 637  : 	};

	ret	0
?GetNaturalWonderYieldModifier@CvPlayerTraits@@QBEHXZ ENDP ; CvPlayerTraits::GetNaturalWonderYieldModifier
_TEXT	ENDS
PUBLIC	?GetCombatBonusVsHigherTech@CvPlayerTraits@@QBEHXZ ; CvPlayerTraits::GetCombatBonusVsHigherTech
; Function compile flags: /Ogtpy
;	COMDAT ?GetCombatBonusVsHigherTech@CvPlayerTraits@@QBEHXZ
_TEXT	SEGMENT
?GetCombatBonusVsHigherTech@CvPlayerTraits@@QBEHXZ PROC	; CvPlayerTraits::GetCombatBonusVsHigherTech, COMDAT
; _this$ = ecx

; 656  : 		return m_iCombatBonusVsHigherTech;

	mov	eax, DWORD PTR [ecx+240]

; 657  : 	};

	ret	0
?GetCombatBonusVsHigherTech@CvPlayerTraits@@QBEHXZ ENDP	; CvPlayerTraits::GetCombatBonusVsHigherTech
_TEXT	ENDS
PUBLIC	?GetCombatBonusVsLargerCiv@CvPlayerTraits@@QBEHXZ ; CvPlayerTraits::GetCombatBonusVsLargerCiv
; Function compile flags: /Ogtpy
;	COMDAT ?GetCombatBonusVsLargerCiv@CvPlayerTraits@@QBEHXZ
_TEXT	SEGMENT
?GetCombatBonusVsLargerCiv@CvPlayerTraits@@QBEHXZ PROC	; CvPlayerTraits::GetCombatBonusVsLargerCiv, COMDAT
; _this$ = ecx

; 660  : 		return m_iCombatBonusVsLargerCiv;

	mov	eax, DWORD PTR [ecx+244]

; 661  : 	};

	ret	0
?GetCombatBonusVsLargerCiv@CvPlayerTraits@@QBEHXZ ENDP	; CvPlayerTraits::GetCombatBonusVsLargerCiv
_TEXT	ENDS
PUBLIC	?GetTradeRouteResourceModifier@CvPlayerTraits@@QBEHXZ ; CvPlayerTraits::GetTradeRouteResourceModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetTradeRouteResourceModifier@CvPlayerTraits@@QBEHXZ
_TEXT	SEGMENT
?GetTradeRouteResourceModifier@CvPlayerTraits@@QBEHXZ PROC ; CvPlayerTraits::GetTradeRouteResourceModifier, COMDAT
; _this$ = ecx

; 716  : 		return m_iTradeRouteResourceModifier;

	mov	eax, DWORD PTR [ecx+296]

; 717  : 	}

	ret	0
?GetTradeRouteResourceModifier@CvPlayerTraits@@QBEHXZ ENDP ; CvPlayerTraits::GetTradeRouteResourceModifier
_TEXT	ENDS
PUBLIC	?GetTradeReligionModifier@CvPlayerTraits@@QBEHXZ ; CvPlayerTraits::GetTradeReligionModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetTradeReligionModifier@CvPlayerTraits@@QBEHXZ
_TEXT	SEGMENT
?GetTradeReligionModifier@CvPlayerTraits@@QBEHXZ PROC	; CvPlayerTraits::GetTradeReligionModifier, COMDAT
; _this$ = ecx

; 740  : 		return m_iTradeReligionModifier;

	mov	eax, DWORD PTR [ecx+324]

; 741  : 	}

	ret	0
?GetTradeReligionModifier@CvPlayerTraits@@QBEHXZ ENDP	; CvPlayerTraits::GetTradeReligionModifier
_TEXT	ENDS
PUBLIC	?IsBonusReligiousBelief@CvPlayerTraits@@QBE_NXZ	; CvPlayerTraits::IsBonusReligiousBelief
; Function compile flags: /Ogtpy
;	COMDAT ?IsBonusReligiousBelief@CvPlayerTraits@@QBE_NXZ
_TEXT	SEGMENT
?IsBonusReligiousBelief@CvPlayerTraits@@QBE_NXZ PROC	; CvPlayerTraits::IsBonusReligiousBelief, COMDAT
; _this$ = ecx

; 825  : 		return m_bBonusReligiousBelief;

	mov	al, BYTE PTR [ecx+347]

; 826  : 	};

	ret	0
?IsBonusReligiousBelief@CvPlayerTraits@@QBE_NXZ ENDP	; CvPlayerTraits::IsBonusReligiousBelief
_TEXT	ENDS
PUBLIC	?IsNoAnnexing@CvPlayerTraits@@QBE_NXZ		; CvPlayerTraits::IsNoAnnexing
; Function compile flags: /Ogtpy
;	COMDAT ?IsNoAnnexing@CvPlayerTraits@@QBE_NXZ
_TEXT	SEGMENT
?IsNoAnnexing@CvPlayerTraits@@QBE_NXZ PROC		; CvPlayerTraits::IsNoAnnexing, COMDAT
; _this$ = ecx

; 841  : 		return m_bNoAnnexing;

	mov	al, BYTE PTR [ecx+351]

; 842  : 	};

	ret	0
?IsNoAnnexing@CvPlayerTraits@@QBE_NXZ ENDP		; CvPlayerTraits::IsNoAnnexing
_TEXT	ENDS
PUBLIC	?GetCombatModifierEnemyCities@CvReligionBeliefs@@QBEHXZ ; CvReligionBeliefs::GetCombatModifierEnemyCities
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvbeliefclasses.h
;	COMDAT ?GetCombatModifierEnemyCities@CvReligionBeliefs@@QBEHXZ
_TEXT	SEGMENT
?GetCombatModifierEnemyCities@CvReligionBeliefs@@QBEHXZ PROC ; CvReligionBeliefs::GetCombatModifierEnemyCities, COMDAT
; _this$ = ecx

; 349  : 		return m_iCombatModifierEnemyCities;

	mov	eax, DWORD PTR [ecx+16]

; 350  : 	};

	ret	0
?GetCombatModifierEnemyCities@CvReligionBeliefs@@QBEHXZ ENDP ; CvReligionBeliefs::GetCombatModifierEnemyCities
_TEXT	ENDS
PUBLIC	?GetCombatModifierFriendlyCities@CvReligionBeliefs@@QBEHXZ ; CvReligionBeliefs::GetCombatModifierFriendlyCities
; Function compile flags: /Ogtpy
;	COMDAT ?GetCombatModifierFriendlyCities@CvReligionBeliefs@@QBEHXZ
_TEXT	SEGMENT
?GetCombatModifierFriendlyCities@CvReligionBeliefs@@QBEHXZ PROC ; CvReligionBeliefs::GetCombatModifierFriendlyCities, COMDAT
; _this$ = ecx

; 353  : 		return m_iCombatModifierFriendlyCities;

	mov	eax, DWORD PTR [ecx+20]

; 354  : 	};

	ret	0
?GetCombatModifierFriendlyCities@CvReligionBeliefs@@QBEHXZ ENDP ; CvReligionBeliefs::GetCombatModifierFriendlyCities
_TEXT	ENDS
PUBLIC	??0BuilderDirective@@QAE@XZ			; BuilderDirective::BuilderDirective
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvbuildertaskingai.h
;	COMDAT ??0BuilderDirective@@QAE@XZ
_TEXT	SEGMENT
??0BuilderDirective@@QAE@XZ PROC			; BuilderDirective::BuilderDirective, COMDAT
; _this$ = ecx

; 46   : 	{

	mov	eax, ecx
	or	ecx, -1
	mov	edx, ecx
	mov	DWORD PTR [eax], 6
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	WORD PTR [eax+12], dx
	mov	WORD PTR [eax+14], dx
	mov	WORD PTR [eax+16], cx

; 47   : 	}

	ret	0
??0BuilderDirective@@QAE@XZ ENDP			; BuilderDirective::BuilderDirective
_TEXT	ENDS
PUBLIC	??A?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@QBEABW4TeamTypes@@I@Z ; std::vector<enum TeamTypes,std::allocator<enum TeamTypes> >::operator[]
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??A?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@QBEABW4TeamTypes@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@QBEABW4TeamTypes@@I@Z PROC ; std::vector<enum TeamTypes,std::allocator<enum TeamTypes> >::operator[], COMDAT
; _this$ = ecx

; 760  : 
; 761  :  #if _HAS_ITERATOR_DEBUGGING
; 762  : 		if (size() <= _Pos)
; 763  : 			{
; 764  : 			_DEBUG_ERROR("vector subscript out of range");
; 765  : 			_SCL_SECURE_OUT_OF_RANGE;
; 766  : 			}
; 767  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 768  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 769  : 
; 770  : 		return (*(_Myfirst + _Pos));

	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR __Pos$[esp-4]
	lea	eax, DWORD PTR [eax+ecx*4]

; 771  : 		}

	ret	4
??A?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@QBEABW4TeamTypes@@I@Z ENDP ; std::vector<enum TeamTypes,std::allocator<enum TeamTypes> >::operator[]
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0length_error@std@@QAE@ABV01@@Z PROC			; std::length_error::length_error, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR ___that$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	??0logic_error@std@@QAE@ABV01@@Z
	mov	DWORD PTR [esi], OFFSET ??_7length_error@std@@6B@
	mov	eax, esi
	pop	esi
	ret	4
??0length_error@std@@QAE@ABV01@@Z ENDP			; std::length_error::length_error
_TEXT	ENDS
PUBLIC	??$swap@D@std@@YAXAAD0@Z			; std::swap<char>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\utility
;	COMDAT ??$swap@D@std@@YAXAAD0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@D@std@@YAXAAD0@Z PROC				; std::swap<char>, COMDAT

; 18   : 	if (&_Left != &_Right)

	mov	eax, DWORD PTR __Left$[esp-4]
	mov	ecx, DWORD PTR __Right$[esp-4]
	cmp	eax, ecx
	je	SHORT $LN1@swap@3

; 19   : 		{	// different, worth swapping
; 20   : 		_Ty _Tmp = _Left;

	mov	dl, BYTE PTR [eax]
	push	ebx

; 21   : 
; 22   : 		_Left = _Right;

	mov	bl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], bl

; 23   : 		_Right = _Tmp;

	mov	BYTE PTR [ecx], dl
	pop	ebx
$LN1@swap@3:

; 24   : 		}
; 25   : 	}

	ret	0
??$swap@D@std@@YAXAAD0@Z ENDP				; std::swap<char>
_TEXT	ENDS
PUBLIC	?get@?$FAutoVariable@HVCvUnit@@@@QBEABHXZ	; FAutoVariable<int,CvUnit>::get
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fautovariable.h
;	COMDAT ?get@?$FAutoVariable@HVCvUnit@@@@QBEABHXZ
_TEXT	SEGMENT
?get@?$FAutoVariable@HVCvUnit@@@@QBEABHXZ PROC		; FAutoVariable<int,CvUnit>::get, COMDAT
; _this$ = ecx

; 177  : 	return m_value;

	lea	eax, DWORD PTR [ecx+4]

; 178  : }

	ret	0
?get@?$FAutoVariable@HVCvUnit@@@@QBEABHXZ ENDP		; FAutoVariable<int,CvUnit>::get
_TEXT	ENDS
PUBLIC	??B?$FAutoVariable@HVCvUnit@@@@QBEABHXZ		; FAutoVariable<int,CvUnit>::operator int const &
; Function compile flags: /Ogtpy
;	COMDAT ??B?$FAutoVariable@HVCvUnit@@@@QBEABHXZ
_TEXT	SEGMENT
??B?$FAutoVariable@HVCvUnit@@@@QBEABHXZ PROC		; FAutoVariable<int,CvUnit>::operator int const &, COMDAT
; _this$ = ecx

; 194  : 	return m_value;

	lea	eax, DWORD PTR [ecx+4]

; 195  : }

	ret	0
??B?$FAutoVariable@HVCvUnit@@@@QBEABHXZ ENDP		; FAutoVariable<int,CvUnit>::operator int const &
_TEXT	ENDS
PUBLIC	??B?$FAutoVariable@W4PlayerTypes@@VCvCity@@@@QBEABW4PlayerTypes@@XZ ; FAutoVariable<enum PlayerTypes,CvCity>::operator enum PlayerTypes const &
; Function compile flags: /Ogtpy
;	COMDAT ??B?$FAutoVariable@W4PlayerTypes@@VCvCity@@@@QBEABW4PlayerTypes@@XZ
_TEXT	SEGMENT
??B?$FAutoVariable@W4PlayerTypes@@VCvCity@@@@QBEABW4PlayerTypes@@XZ PROC ; FAutoVariable<enum PlayerTypes,CvCity>::operator enum PlayerTypes const &, COMDAT
; _this$ = ecx

; 194  : 	return m_value;

	lea	eax, DWORD PTR [ecx+4]

; 195  : }

	ret	0
??B?$FAutoVariable@W4PlayerTypes@@VCvCity@@@@QBEABW4PlayerTypes@@XZ ENDP ; FAutoVariable<enum PlayerTypes,CvCity>::operator enum PlayerTypes const &
_TEXT	ENDS
PUBLIC	??B?$FAutoVariable@HVCvCity@@@@QBEABHXZ		; FAutoVariable<int,CvCity>::operator int const &
; Function compile flags: /Ogtpy
;	COMDAT ??B?$FAutoVariable@HVCvCity@@@@QBEABHXZ
_TEXT	SEGMENT
??B?$FAutoVariable@HVCvCity@@@@QBEABHXZ PROC		; FAutoVariable<int,CvCity>::operator int const &, COMDAT
; _this$ = ecx

; 194  : 	return m_value;

	lea	eax, DWORD PTR [ecx+4]

; 195  : }

	ret	0
??B?$FAutoVariable@HVCvCity@@@@QBEABHXZ ENDP		; FAutoVariable<int,CvCity>::operator int const &
_TEXT	ENDS
PUBLIC	??B?$FAutoVariable@W4PlayerTypes@@VCvPlayer@@@@QBEABW4PlayerTypes@@XZ ; FAutoVariable<enum PlayerTypes,CvPlayer>::operator enum PlayerTypes const &
; Function compile flags: /Ogtpy
;	COMDAT ??B?$FAutoVariable@W4PlayerTypes@@VCvPlayer@@@@QBEABW4PlayerTypes@@XZ
_TEXT	SEGMENT
??B?$FAutoVariable@W4PlayerTypes@@VCvPlayer@@@@QBEABW4PlayerTypes@@XZ PROC ; FAutoVariable<enum PlayerTypes,CvPlayer>::operator enum PlayerTypes const &, COMDAT
; _this$ = ecx

; 194  : 	return m_value;

	lea	eax, DWORD PTR [ecx+4]

; 195  : }

	ret	0
??B?$FAutoVariable@W4PlayerTypes@@VCvPlayer@@@@QBEABW4PlayerTypes@@XZ ENDP ; FAutoVariable<enum PlayerTypes,CvPlayer>::operator enum PlayerTypes const &
_TEXT	ENDS
PUBLIC	??B?$FAutoVariable@_NVCvPlayer@@@@QBEAB_NXZ	; FAutoVariable<bool,CvPlayer>::operator bool const &
; Function compile flags: /Ogtpy
;	COMDAT ??B?$FAutoVariable@_NVCvPlayer@@@@QBEAB_NXZ
_TEXT	SEGMENT
??B?$FAutoVariable@_NVCvPlayer@@@@QBEAB_NXZ PROC	; FAutoVariable<bool,CvPlayer>::operator bool const &, COMDAT
; _this$ = ecx

; 194  : 	return m_value;

	lea	eax, DWORD PTR [ecx+4]

; 195  : }

	ret	0
??B?$FAutoVariable@_NVCvPlayer@@@@QBEAB_NXZ ENDP	; FAutoVariable<bool,CvPlayer>::operator bool const &
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR ___that$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
	mov	eax, esi
	pop	esi
	ret	4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	?dxWrap@@YAHH@Z					; dxWrap
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvgamecoreutils.h
;	COMDAT ?dxWrap@@YAHH@Z
_TEXT	SEGMENT
_iDX$ = 8						; size = 4
?dxWrap@@YAHH@Z PROC					; dxWrap, COMDAT

; 74   : 	const CvMap& kMap = GC.getMap();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52

; 75   : 	return wrapCoordDifference(iDX, kMap.getGridWidth(), kMap.isWrapX());

	mov	edx, DWORD PTR [eax+4020]
	cmp	BYTE PTR [eax+4056], 0
	mov	eax, DWORD PTR _iDX$[esp-4]
	je	SHORT $LN13@dxWrap
	mov	ecx, edx
	shr	ecx, 1
	cmp	eax, ecx
	jle	SHORT $LN11@dxWrap
	sub	eax, edx

; 76   : }

	ret	0

; 75   : 	return wrapCoordDifference(iDX, kMap.getGridWidth(), kMap.isWrapX());

$LN11@dxWrap:
	neg	ecx
	cmp	eax, ecx
	jge	SHORT $LN13@dxWrap
	add	eax, edx
$LN13@dxWrap:

; 76   : }

	ret	0
?dxWrap@@YAHH@Z ENDP					; dxWrap
_TEXT	ENDS
PUBLIC	?dyWrap@@YAHH@Z					; dyWrap
; Function compile flags: /Ogtpy
;	COMDAT ?dyWrap@@YAHH@Z
_TEXT	SEGMENT
_iDY$ = 8						; size = 4
?dyWrap@@YAHH@Z PROC					; dyWrap, COMDAT

; 80   : 	const CvMap& kMap = GC.getMap();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52

; 81   : 	return wrapCoordDifference(iDY, kMap.getGridHeight(), kMap.isWrapY());

	mov	edx, DWORD PTR [eax+4024]
	cmp	BYTE PTR [eax+4057], 0
	mov	eax, DWORD PTR _iDY$[esp-4]
	je	SHORT $LN13@dyWrap
	mov	ecx, edx
	shr	ecx, 1
	cmp	eax, ecx
	jle	SHORT $LN11@dyWrap
	sub	eax, edx

; 82   : }

	ret	0

; 81   : 	return wrapCoordDifference(iDY, kMap.getGridHeight(), kMap.isWrapY());

$LN11@dyWrap:
	neg	ecx
	cmp	eax, ecx
	jge	SHORT $LN13@dyWrap
	add	eax, edx
$LN13@dyWrap:

; 82   : }

	ret	0
?dyWrap@@YAHH@Z ENDP					; dyWrap
_TEXT	ENDS
PUBLIC	?plotDistance@@YAHHHHH@Z			; plotDistance
; Function compile flags: /Ogtpy
;	COMDAT ?plotDistance@@YAHHHHH@Z
_TEXT	SEGMENT
_iDX$ = 8						; size = 4
_iX1$ = 8						; size = 4
_iY1$ = 12						; size = 4
_iDY$ = 16						; size = 4
_iX2$ = 16						; size = 4
_iY2$ = 20						; size = 4
?plotDistance@@YAHHHHH@Z PROC				; plotDistance, COMDAT

; 145  : 	int iDX;
; 146  : 	int iWrappedDX = dxWrap(iX2 - iX1);

	mov	eax, DWORD PTR _iX2$[esp-4]
	sub	eax, DWORD PTR _iX1$[esp-4]
	push	ebx
	mov	ebx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	cmp	BYTE PTR [ebx+4056], 0
	mov	edx, DWORD PTR [ebx+4020]
	push	ebp
	push	esi
	je	SHORT $LN13@plotDistan
	mov	ecx, edx
	shr	ecx, 1
	cmp	eax, ecx
	jle	SHORT $LN15@plotDistan
	sub	eax, edx
	jmp	SHORT $LN13@plotDistan
$LN15@plotDistan:
	neg	ecx
	cmp	eax, ecx
	lea	ecx, DWORD PTR [edx+eax]
	jl	SHORT $LN17@plotDistan
$LN13@plotDistan:
	mov	ecx, eax
$LN17@plotDistan:

; 147  : 	int iWrappedDY = dyWrap(iY2 - iY1);

	mov	eax, DWORD PTR _iY2$[esp+8]
	mov	esi, DWORD PTR [ebx+4024]
	push	edi
	mov	edi, DWORD PTR _iY1$[esp+12]
	sub	eax, edi
	cmp	BYTE PTR [ebx+4057], 0
	je	SHORT $LN27@plotDistan
	mov	edx, esi
	shr	edx, 1
	cmp	eax, edx
	jle	SHORT $LN29@plotDistan
	sub	eax, esi
	jmp	SHORT $LN27@plotDistan
$LN29@plotDistan:
	neg	edx
	cmp	eax, edx
	lea	ebp, DWORD PTR [esi+eax]
	jl	SHORT $LN31@plotDistan
$LN27@plotDistan:
	mov	ebp, eax
$LN31@plotDistan:

; 148  : 	int iDY = abs(iWrappedDY);

	mov	eax, ebp
	cdq
	xor	eax, edx
	sub	eax, edx
	mov	DWORD PTR _iDY$[esp+12], eax

; 149  : 
; 150  : 	// convert to hex-space coordinates - the coordinate system axes are E and NE (not orthogonal)
; 151  : 	int iHX1 = xToHexspaceX(iX1, iY1);

	test	edi, edi
	jl	SHORT $LN35@plotDistan
	mov	eax, edi
	jmp	SHORT $LN59@plotDistan
$LN35@plotDistan:
	lea	eax, DWORD PTR [edi-1]
	cdq
	sub	eax, edx
$LN59@plotDistan:
	mov	esi, DWORD PTR _iX1$[esp+12]
	sar	eax, 1
	sub	esi, eax

; 152  : 	int iHX2 = xToHexspaceX(iX1 + iWrappedDX, iY1 + iWrappedDY);

	lea	eax, DWORD PTR [edi+ebp]
	pop	edi
	test	eax, eax
	jge	SHORT $LN60@plotDistan
	dec	eax
	cdq
	sub	eax, edx
$LN60@plotDistan:

; 153  : 
; 154  : 	iDX = abs(dxWrap(iHX2 - iHX1));

	mov	edx, DWORD PTR [ebx+4020]
	sar	eax, 1
	sub	ecx, eax
	add	ecx, DWORD PTR _iX1$[esp+8]
	sub	ecx, esi
	cmp	BYTE PTR [ebx+4056], 0
	je	SHORT $LN49@plotDistan
	mov	eax, edx
	shr	eax, 1
	cmp	ecx, eax
	jle	SHORT $LN51@plotDistan
	mov	eax, ecx
	sub	eax, edx
	jmp	SHORT $LN53@plotDistan
$LN51@plotDistan:
	neg	eax
	cmp	ecx, eax
	lea	eax, DWORD PTR [edx+ecx]
	jl	SHORT $LN53@plotDistan
$LN49@plotDistan:
	mov	eax, ecx
$LN53@plotDistan:
	cdq
	xor	eax, edx
	sub	eax, edx

; 155  : 
; 156  : #ifdef NQM_GAME_CORE_UTILS_OPTIMIZATIONS
; 157  : 	if (((iHX2 - iHX1) ^ (iWrappedDY)) >= 0)  // the signs match
; 158  : #else
; 159  : 	if((iHX2 - iHX1 >= 0) == (iWrappedDY >= 0))  // the signs match

	xor	edx, edx
	test	ecx, ecx
	setge	dl
	xor	ecx, ecx
	test	ebp, ebp
	setge	cl
	pop	esi
	pop	ebp
	mov	DWORD PTR _iDX$[esp], eax
	pop	ebx
	cmp	edx, ecx
	jne	SHORT $LN2@plotDistan

; 160  : #endif
; 161  : 	{
; 162  : 		return iDX + iDY;

	mov	edx, DWORD PTR _iDY$[esp-4]
	add	eax, edx

; 170  : #endif
; 171  : 	}
; 172  : }

	ret	0
$LN2@plotDistan:

; 163  : 	}
; 164  : 	else
; 165  : 	{
; 166  : #ifdef NQM_FAST_COMP
; 167  : 		return (MAX(iDX, iDY));
; 168  : #else
; 169  : 		return (std::max(iDX, iDY));

	cmp	eax, DWORD PTR _iDY$[esp-4]
	lea	eax, DWORD PTR _iDY$[esp-4]
	jl	SHORT $LN58@plotDistan
	lea	eax, DWORD PTR _iDX$[esp-4]
$LN58@plotDistan:
	mov	eax, DWORD PTR [eax]

; 170  : #endif
; 171  : 	}
; 172  : }

	ret	0
?plotDistance@@YAHHHHH@Z ENDP				; plotDistance
_TEXT	ENDS
PUBLIC	?HandleMissingInstance@CvLuaPlayer@@SAXPAUlua_State@@@Z ; CvLuaPlayer::HandleMissingInstance
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
;	COMDAT ?HandleMissingInstance@CvLuaPlayer@@SAXPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?HandleMissingInstance@CvLuaPlayer@@SAXPAUlua_State@@@Z PROC ; CvLuaPlayer::HandleMissingInstance, COMDAT

; 1035 : 	DefaultHandleMissingInstance(L);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET $SG237742
	push	eax
	call	_luaL_error
	add	esp, 8

; 1036 : }

	ret	0
?HandleMissingInstance@CvLuaPlayer@@SAXPAUlua_State@@@Z ENDP ; CvLuaPlayer::HandleMissingInstance
_TEXT	ENDS
PUBLIC	?lGetInternationalTradeRouteDomainModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteDomainModifier
EXTRN	?GetDomainModifierTimes100@CvGameTrade@@QAEHW4DomainTypes@@@Z:PROC ; CvGameTrade::GetDomainModifierTimes100
EXTRN	?GetGameTrade@CvGame@@QAEPAVCvGameTrade@@XZ:PROC ; CvGame::GetGameTrade
; Function compile flags: /Ogtpy
;	COMDAT ?lGetInternationalTradeRouteDomainModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetInternationalTradeRouteDomainModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetInternationalTradeRouteDomainModifier, COMDAT

; 3621 : {

	push	esi

; 3622 : 	DomainTypes eDomain = (DomainTypes)lua_tointeger(L, 2);

	mov	esi, DWORD PTR _L$[esp]
	push	2
	push	esi
	call	_lua_tointeger

; 3623 : 	int iResult = GC.getGame().GetGameTrade()->GetDomainModifierTimes100(eDomain);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 8
	push	eax
	call	?GetGameTrade@CvGame@@QAEPAVCvGameTrade@@XZ ; CvGame::GetGameTrade
	mov	ecx, eax
	call	?GetDomainModifierTimes100@CvGameTrade@@QAEHW4DomainTypes@@@Z ; CvGameTrade::GetDomainModifierTimes100

; 3624 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8

; 3625 : 	return 1;

	mov	eax, 1
	pop	esi

; 3626 : }

	ret	0
?lGetInternationalTradeRouteDomainModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetInternationalTradeRouteDomainModifier
_TEXT	ENDS
PUBLIC	?GetID@CvUnit@@QBEHXZ				; CvUnit::GetID
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvunit.h
;	COMDAT ?GetID@CvUnit@@QBEHXZ
_TEXT	SEGMENT
?GetID@CvUnit@@QBEHXZ PROC				; CvUnit::GetID, COMDAT
; _this$ = ecx

; 662  : 		return m_iID;

	mov	eax, DWORD PTR [ecx+100]

; 663  : 	}

	ret	0
?GetID@CvUnit@@QBEHXZ ENDP				; CvUnit::GetID
_TEXT	ENDS
PUBLIC	?getX@CvUnit@@QBEHXZ				; CvUnit::getX
; Function compile flags: /Ogtpy
;	COMDAT ?getX@CvUnit@@QBEHXZ
_TEXT	SEGMENT
?getX@CvUnit@@QBEHXZ PROC				; CvUnit::getX, COMDAT
; _this$ = ecx

; 673  : 		return m_iX.get();

	mov	eax, DWORD PTR [ecx+76]

; 674  : 	}

	ret	0
?getX@CvUnit@@QBEHXZ ENDP				; CvUnit::getX
_TEXT	ENDS
PUBLIC	?getY@CvUnit@@QBEHXZ				; CvUnit::getY
; Function compile flags: /Ogtpy
;	COMDAT ?getY@CvUnit@@QBEHXZ
_TEXT	SEGMENT
?getY@CvUnit@@QBEHXZ PROC				; CvUnit::getY, COMDAT
; _this$ = ecx

; 678  : 		return m_iY.get();

	mov	eax, DWORD PTR [ecx+88]

; 679  : 	}

	ret	0
?getY@CvUnit@@QBEHXZ ENDP				; CvUnit::getY
_TEXT	ENDS
PUBLIC	??1?$CvEnumerator@VICvUnit1@@@@QAE@XZ		; CvEnumerator<ICvUnit1>::~CvEnumerator<ICvUnit1>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$CvEnumerator@VICvUnit1@@@@QAE@XZ
_TEXT	SEGMENT
??1?$CvEnumerator@VICvUnit1@@@@QAE@XZ PROC		; CvEnumerator<ICvUnit1>::~CvEnumerator<ICvUnit1>, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	je	SHORT $LN6@CvEnumerat
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	push	eax
	call	edx
$LN6@CvEnumerat:
	ret	0
??1?$CvEnumerator@VICvUnit1@@@@QAE@XZ ENDP		; CvEnumerator<ICvUnit1>::~CvEnumerator<ICvUnit1>
_TEXT	ENDS
PUBLIC	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ		; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
EXTRN	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ:PROC ; CvUnit::getDestructionNotification
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
;	COMDAT ??1?$FObjectHandle@VCvUnit@@@@QAE@XZ
_TEXT	SEGMENT
??1?$FObjectHandle@VCvUnit@@@@QAE@XZ PROC		; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>, COMDAT
; _this$ = ecx

; 147  : 		if(m_target) 

	mov	ecx, DWORD PTR [ecx]
	test	ecx, ecx
	je	SHORT $LN4@FObjectHan

; 148  : 		{
; 149  : 			m_target->getDestructionNotification().removeTarget(*this);

	jmp	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN4@FObjectHan:

; 150  : 		}
; 151  : 	}

	ret	0
??1?$FObjectHandle@VCvUnit@@@@QAE@XZ ENDP		; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
_TEXT	ENDS
PUBLIC	??4?$FObjectHandle@VCvUnit@@@@QBEABV0@PBVCvUnit@@@Z ; FObjectHandle<CvUnit>::operator=
; Function compile flags: /Ogtpy
;	COMDAT ??4?$FObjectHandle@VCvUnit@@@@QBEABV0@PBVCvUnit@@@Z
_TEXT	SEGMENT
_target$ = 8						; size = 4
??4?$FObjectHandle@VCvUnit@@@@QBEABV0@PBVCvUnit@@@Z PROC ; FObjectHandle<CvUnit>::operator=, COMDAT
; _this$ = ecx

; 180  : 	{

	push	esi
	mov	esi, ecx

; 181  : 		OBJECT_HANDLE_STACK;
; 182  : 		if(m_target)

	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	je	SHORT $LN5@operator@4

; 183  : 		{
; 184  : 			const_cast<PointingTo *>(m_target)->getDestructionNotification().removeTarget(*this);

	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN5@operator@4:

; 185  : 		}
; 186  : 		const_cast<FObjectHandle *>(this)->m_target = const_cast<PointingTo *>(target);

	mov	ecx, DWORD PTR _target$[esp]
	mov	DWORD PTR [esi], ecx

; 187  : 		if(m_target)

	test	ecx, ecx
	je	SHORT $LN9@operator@4

; 188  : 		{
; 189  : 			const_cast<PointingTo *>(m_target)->getDestructionNotification().addTarget(*this);

	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN9@operator@4:

; 190  : 		}
; 191  : 		return *this;

	mov	eax, esi
	pop	esi

; 192  : 	}

	ret	4
??4?$FObjectHandle@VCvUnit@@@@QBEABV0@PBVCvUnit@@@Z ENDP ; FObjectHandle<CvUnit>::operator=
_TEXT	ENDS
PUBLIC	??0?$FObjectHandle@VCvUnit@@@@QAE@ABV0@@Z	; FObjectHandle<CvUnit>::FObjectHandle<CvUnit>
; Function compile flags: /Ogtpy
;	COMDAT ??0?$FObjectHandle@VCvUnit@@@@QAE@ABV0@@Z
_TEXT	SEGMENT
_source$ = 8						; size = 4
??0?$FObjectHandle@VCvUnit@@@@QAE@ABV0@@Z PROC		; FObjectHandle<CvUnit>::FObjectHandle<CvUnit>, COMDAT
; _this$ = ecx

; 222  : 	{

	mov	eax, DWORD PTR _source$[esp-4]
	push	esi
	mov	esi, ecx
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [esi], ecx
	mov	dl, BYTE PTR [eax+4]
	mov	BYTE PTR [esi+4], dl

; 223  : 		OBJECT_HANDLE_STACK;
; 224  : 		if(m_target)

	test	ecx, ecx
	je	SHORT $LN6@FObjectHan@2

; 225  : 		{
; 226  : 			m_target->getDestructionNotification().addTarget(*this);

	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN6@FObjectHan@2:

; 227  : 		}
; 228  : 	}

	mov	eax, esi
	pop	esi
	ret	4
??0?$FObjectHandle@VCvUnit@@@@QAE@ABV0@@Z ENDP		; FObjectHandle<CvUnit>::FObjectHandle<CvUnit>
_TEXT	ENDS
PUBLIC	??0?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<TradeConnectionPlot,40,0,297,0>::FStaticVector<TradeConnectionPlot,40,0,297,0>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ??0?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ
_TEXT	SEGMENT
??0?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ PROC ; FStaticVector<TradeConnectionPlot,40,0,297,0>::FStaticVector<TradeConnectionPlot,40,0,297,0>, COMDAT
; _this$ = ecx

; 601  : 	FStaticVector()

	mov	eax, ecx

; 602  :     {
; 603  : 		m_uiCurrMaxSize = L;
; 604  : 		m_pData = Alloc(m_uiCurrMaxSize);

	lea	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [eax+4], 0
	mov	DWORD PTR [eax+8], 40			; 00000028H
	mov	DWORD PTR [eax], ecx

; 605  : #ifdef BREAK_ON_STATIC_RESIZE
; 606  : 		m_iNumResized = 0;
; 607  : #endif
; 608  :     };

	ret	0
??0?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ ENDP ; FStaticVector<TradeConnectionPlot,40,0,297,0>::FStaticVector<TradeConnectionPlot,40,0,297,0>
_TEXT	ENDS
PUBLIC	?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@V?$FObjectHandle@VCvUnit@@@@@Z ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::Push
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
xdata$x	SEGMENT
__unwindtable$?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@V?$FObjectHandle@VCvUnit@@@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@V?$FObjectHandle@VCvUnit@@@@@Z$0
__ehfuncinfo$?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@V?$FObjectHandle@VCvUnit@@@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@V?$FObjectHandle@VCvUnit@@@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluascopedinstance.h
xdata$x	ENDS
;	COMDAT ?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@V?$FObjectHandle@VCvUnit@@@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
_handle$ = 12						; size = 8
?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@V?$FObjectHandle@VCvUnit@@@@@Z PROC ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::Push, COMDAT

; 20   : 	{

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@V?$FObjectHandle@VCvUnit@@@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp

; 21   : 		Push(L, handle.pointer());

	mov	eax, DWORD PTR _handle$[esp+8]
	mov	ecx, DWORD PTR _L$[esp+8]
	push	eax
	push	ecx
	mov	DWORD PTR __$EHRec$[esp+28], 0
	call	?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@PAVCvUnit@@@Z ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::Push

; 22   : 	}

	mov	ecx, DWORD PTR _handle$[esp+16]
	add	esp, 8
	mov	DWORD PTR __$EHRec$[esp+20], -1
	test	ecx, ecx
	je	SHORT $LN9@Push@4
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN9@Push@4:
	mov	ecx, DWORD PTR __$EHRec$[esp+12]
	mov	DWORD PTR fs:0, ecx
	add	esp, 12					; 0000000cH
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@V?$FObjectHandle@VCvUnit@@@@@Z$0:
	lea	ecx, DWORD PTR _handle$[ebp-4]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__ehhandler$?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@V?$FObjectHandle@VCvUnit@@@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@V?$FObjectHandle@VCvUnit@@@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@V?$FObjectHandle@VCvUnit@@@@@Z ENDP ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::Push
PUBLIC	??D?$_Vector_iterator@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QBEAAW4PolicyTypes@@XZ ; std::_Vector_iterator<enum PolicyTypes,std::allocator<enum PolicyTypes> >::operator*
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??D?$_Vector_iterator@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QBEAAW4PolicyTypes@@XZ
_TEXT	SEGMENT
??D?$_Vector_iterator@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QBEAAW4PolicyTypes@@XZ PROC ; std::_Vector_iterator<enum PolicyTypes,std::allocator<enum PolicyTypes> >::operator*, COMDAT
; _this$ = ecx

; 339  : 		return ((reference)**(_Mybase *)this);

	mov	eax, DWORD PTR [ecx]

; 340  : 		}

	ret	0
??D?$_Vector_iterator@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QBEAAW4PolicyTypes@@XZ ENDP ; std::_Vector_iterator<enum PolicyTypes,std::allocator<enum PolicyTypes> >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_iterator@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<enum PolicyTypes,std::allocator<enum PolicyTypes> >::operator++
; Function compile flags: /Ogtpy
;	COMDAT ??E?$_Vector_iterator@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_iterator@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<enum PolicyTypes,std::allocator<enum PolicyTypes> >::operator++, COMDAT
; _this$ = ecx

; 348  : 		{	// preincrement

	mov	eax, ecx

; 349  : 		++(*(_Mybase *)this);

	add	DWORD PTR [eax], 4

; 350  : 		return (*this);
; 351  : 		}

	ret	0
??E?$_Vector_iterator@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<enum PolicyTypes,std::allocator<enum PolicyTypes> >::operator++
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<enum PolicyTypes,std::allocator<enum PolicyTypes> >::operator!=
; Function compile flags: /Ogtpy
;	COMDAT ??9?$_Vector_const_iterator@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<enum PolicyTypes,std::allocator<enum PolicyTypes> >::operator!=, COMDAT
; _this$ = ecx

; 216  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	setne	cl
	mov	al, cl

; 217  : 		}

	ret	4
??9?$_Vector_const_iterator@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<enum PolicyTypes,std::allocator<enum PolicyTypes> >::operator!=
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 316  : 			return (!(*this == _Right));

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	setne	cl
	mov	al, cl

; 317  : 			}

	ret	4
??9const_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0?$CvEnumerator@VICvUnit1@@@@QAE@PAVICvEnumerator@@@Z ; CvEnumerator<ICvUnit1>::CvEnumerator<ICvUnit1>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvdllinterfaces.h
;	COMDAT ??0?$CvEnumerator@VICvUnit1@@@@QAE@PAVICvEnumerator@@@Z
_TEXT	SEGMENT
_pEnumerator$ = 8					; size = 4
??0?$CvEnumerator@VICvUnit1@@@@QAE@PAVICvEnumerator@@@Z PROC ; CvEnumerator<ICvUnit1>::CvEnumerator<ICvUnit1>, COMDAT
; _this$ = ecx

; 1845 : 	{}

	mov	eax, ecx
	mov	ecx, DWORD PTR _pEnumerator$[esp-4]
	mov	DWORD PTR [eax], ecx
	ret	4
??0?$CvEnumerator@VICvUnit1@@@@QAE@PAVICvEnumerator@@@Z ENDP ; CvEnumerator<ICvUnit1>::CvEnumerator<ICvUnit1>
_TEXT	ENDS
PUBLIC	??C?$auto_ptr@VICvUnit1@@@std@@QBEPAVICvUnit1@@XZ ; std::auto_ptr<ICvUnit1>::operator->
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??C?$auto_ptr@VICvUnit1@@@std@@QBEPAVICvUnit1@@XZ
_TEXT	SEGMENT
??C?$auto_ptr@VICvUnit1@@@std@@QBEPAVICvUnit1@@XZ PROC	; std::auto_ptr<ICvUnit1>::operator->, COMDAT
; _this$ = ecx

; 739  : 
; 740  :  #if _HAS_ITERATOR_DEBUGGING
; 741  : 		if (_Myptr == 0)
; 742  : 			_DEBUG_ERROR("auto_ptr not dereferencable");
; 743  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 744  : 
; 745  : 		return (get());

	mov	eax, DWORD PTR [ecx]

; 746  : 		}

	ret	0
??C?$auto_ptr@VICvUnit1@@@std@@QBEPAVICvUnit1@@XZ ENDP	; std::auto_ptr<ICvUnit1>::operator->
_TEXT	ENDS
PUBLIC	?GetElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QBEABQAVCvPlot@@I@Z ; CvWeightedVector<CvPlot *,800,1>::GetElement
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvweightedvector.h
;	COMDAT ?GetElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QBEABQAVCvPlot@@I@Z
_TEXT	SEGMENT
_iIndex$ = 8						; size = 4
?GetElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QBEABQAVCvPlot@@I@Z PROC ; CvWeightedVector<CvPlot *,800,1>::GetElement, COMDAT
; _this$ = ecx

; 64   : 		assert(iIndex < m_pItems.size());
; 65   : 		return m_pItems[iIndex].m_Element;

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _iIndex$[esp-4]
	lea	eax, DWORD PTR [eax+ecx*8]

; 66   : 	};

	ret	4
?GetElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QBEABQAVCvPlot@@I@Z ENDP ; CvWeightedVector<CvPlot *,800,1>::GetElement
_TEXT	ENDS
PUBLIC	?size@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QAEHXZ ; CvWeightedVector<CvPlot *,800,1>::size
; Function compile flags: /Ogtpy
;	COMDAT ?size@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QAEHXZ
_TEXT	SEGMENT
?size@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QAEHXZ PROC ; CvWeightedVector<CvPlot *,800,1>::size, COMDAT
; _this$ = ecx

; 134  : 		return m_pItems.size();

	mov	eax, DWORD PTR [ecx+4]

; 135  : 	};

	ret	0
?size@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QAEHXZ ENDP ; CvWeightedVector<CvPlot *,800,1>::size
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ ; std::_Vector_val<CvString,std::allocator<CvString> >::~_Vector_val<CvString,std::allocator<CvString> >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Vector_val@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<CvString,std::allocator<CvString> >::~_Vector_val<CvString,std::allocator<CvString> >, COMDAT
; _this$ = ecx
	ret	0
??1?$_Vector_val@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<CvString,std::allocator<CvString> >::~_Vector_val<CvString,std::allocator<CvString> >
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QAE@XZ ; std::_Vector_val<enum PolicyTypes,std::allocator<enum PolicyTypes> >::~_Vector_val<enum PolicyTypes,std::allocator<enum PolicyTypes> >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Vector_val@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<enum PolicyTypes,std::allocator<enum PolicyTypes> >::~_Vector_val<enum PolicyTypes,std::allocator<enum PolicyTypes> >, COMDAT
; _this$ = ecx
	ret	0
??1?$_Vector_val@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<enum PolicyTypes,std::allocator<enum PolicyTypes> >::~_Vector_val<enum PolicyTypes,std::allocator<enum PolicyTypes> >
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ ; std::_Vector_val<Opinion,std::allocator<Opinion> >::~_Vector_val<Opinion,std::allocator<Opinion> >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Vector_val@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<Opinion,std::allocator<Opinion> >::~_Vector_val<Opinion,std::allocator<Opinion> >, COMDAT
; _this$ = ecx
	ret	0
??1?$_Vector_val@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<Opinion,std::allocator<Opinion> >::~_Vector_val<Opinion,std::allocator<Opinion> >
_TEXT	ENDS
PUBLIC	??1?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@QAE@XZ ; std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0>::~_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@QAE@XZ PROC ; std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0>::~_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0>, COMDAT
; _this$ = ecx
	ret	0
??1?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@QAE@XZ ENDP ; std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0>::~_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0>
_TEXT	ENDS
PUBLIC	??C?$auto_ptr@VICvEnumerator@@@std@@QBEPAVICvEnumerator@@XZ ; std::auto_ptr<ICvEnumerator>::operator->
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??C?$auto_ptr@VICvEnumerator@@@std@@QBEPAVICvEnumerator@@XZ
_TEXT	SEGMENT
??C?$auto_ptr@VICvEnumerator@@@std@@QBEPAVICvEnumerator@@XZ PROC ; std::auto_ptr<ICvEnumerator>::operator->, COMDAT
; _this$ = ecx

; 739  : 
; 740  :  #if _HAS_ITERATOR_DEBUGGING
; 741  : 		if (_Myptr == 0)
; 742  : 			_DEBUG_ERROR("auto_ptr not dereferencable");
; 743  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 744  : 
; 745  : 		return (get());

	mov	eax, DWORD PTR [ecx]

; 746  : 		}

	ret	0
??C?$auto_ptr@VICvEnumerator@@@std@@QBEPAVICvEnumerator@@XZ ENDP ; std::auto_ptr<ICvEnumerator>::operator->
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAE@V?$allocator@VCvString@@@1@@Z ; std::_Vector_val<CvString,std::allocator<CvString> >::_Vector_val<CvString,std::allocator<CvString> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??0?$_Vector_val@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAE@V?$allocator@VCvString@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAE@V?$allocator@VCvString@@@1@@Z PROC ; std::_Vector_val<CvString,std::allocator<CvString> >::_Vector_val<CvString,std::allocator<CvString> >, COMDAT
; _this$ = ecx

; 425  : 		{	// construct allocator from _Al

	mov	eax, ecx

; 426  : 		}

	ret	4
??0?$_Vector_val@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAE@V?$allocator@VCvString@@@1@@Z ENDP ; std::_Vector_val<CvString,std::allocator<CvString> >::_Vector_val<CvString,std::allocator<CvString> >
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Lmost
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1281 : 		return (_Left(_Myhead));

	mov	eax, DWORD PTR [ecx+4]

; 1282 : 		}

	ret	0
?_Lmost@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?Free@?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@IAEXPAUTradeConnectionPlot@@I@Z ; FStaticVector<TradeConnectionPlot,40,0,297,0>::Free
EXTRN	?FireFreeAlignedNoTracking@@YAXPAX@Z:PROC	; FireFreeAlignedNoTracking
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ?Free@?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@IAEXPAUTradeConnectionPlot@@I@Z
_TEXT	SEGMENT
_pVal$ = 8						; size = 4
_uiNumElements$ = 12					; size = 4
?Free@?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@IAEXPAUTradeConnectionPlot@@I@Z PROC ; FStaticVector<TradeConnectionPlot,40,0,297,0>::Free, COMDAT
; _this$ = ecx

; 810  : 		if( !bPODType) Destroy(pVal, uiNumElements);
; 811  : 		if( pVal != (T*)m_aData )

	mov	eax, DWORD PTR _pVal$[esp-4]
	add	ecx, 12					; 0000000cH
	cmp	eax, ecx
	je	SHORT $LN1@Free

; 812  : 			FFREEALIGNED( (unsigned char*)pVal );

	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	pop	ecx
$LN1@Free:

; 813  : 	};

	ret	8
?Free@?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@IAEXPAUTradeConnectionPlot@@I@Z ENDP ; FStaticVector<TradeConnectionPlot,40,0,297,0>::Free
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QAE@PAW4PolicyTypes@@@Z ; std::_Vector_iterator<enum PolicyTypes,std::allocator<enum PolicyTypes> >::_Vector_iterator<enum PolicyTypes,std::allocator<enum PolicyTypes> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??0?$_Vector_iterator@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QAE@PAW4PolicyTypes@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_iterator@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QAE@PAW4PolicyTypes@@@Z PROC ; std::_Vector_iterator<enum PolicyTypes,std::allocator<enum PolicyTypes> >::_Vector_iterator<enum PolicyTypes,std::allocator<enum PolicyTypes> >, COMDAT
; _this$ = ecx

; 333  : 		{	// construct with pointer _Ptr

	mov	eax, ecx
	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 334  : 		}

	ret	4
??0?$_Vector_iterator@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QAE@PAW4PolicyTypes@@@Z ENDP ; std::_Vector_iterator<enum PolicyTypes,std::allocator<enum PolicyTypes> >::_Vector_iterator<enum PolicyTypes,std::allocator<enum PolicyTypes> >
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator::iterator
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 459  : 			{	// construct with node pointer _Pnode

	mov	eax, ecx
	mov	ecx, DWORD PTR __Pnode$[esp-4]
	mov	DWORD PTR [eax], ecx

; 460  : 			}

	ret	4
??0iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBIH@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::operator*
; Function compile flags: /Ogtpy
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBIH@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBIH@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 250  : 
; 251  :  #if _HAS_ITERATOR_DEBUGGING
; 252  : 			if (this->_Mycont == 0
; 253  : 				|| _Ptr == 0
; 254  : 				|| _Ptr == ((_Myt *)this->_Mycont)->_Myhead)
; 255  : 				{
; 256  : 				_DEBUG_ERROR("map/set iterator not dereferencable");
; 257  : 				_SCL_SECURE_OUT_OF_RANGE;
; 258  : 				}
; 259  :  #else
; 260  : 			_SCL_SECURE_VALIDATE(this->_Has_container());
; 261  : 			_SCL_SECURE_VALIDATE_RANGE(_Ptr != ((_Myt *)(this->_Getmycont()))->_Myhead);
; 262  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 263  : 
; 264  : 			return (_Myval(_Ptr));

	mov	eax, DWORD PTR [ecx]
	add	eax, 12					; 0000000cH

; 265  : 			}

	ret	0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBIH@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAE@XZ
_TEXT	SEGMENT
??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAE@XZ PROC ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>, COMDAT
; _this$ = ecx

; 601  : 	FStaticVector()

	mov	eax, ecx

; 602  :     {
; 603  : 		m_uiCurrMaxSize = L;
; 604  : 		m_pData = Alloc(m_uiCurrMaxSize);

	lea	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [eax+4], 0
	mov	DWORD PTR [eax+8], 800			; 00000320H
	mov	DWORD PTR [eax], ecx

; 605  : #ifdef BREAK_ON_STATIC_RESIZE
; 606  : 		m_iNumResized = 0;
; 607  : #endif
; 608  :     };

	ret	0
??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAE@XZ ENDP ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAE@V?$allocator@UOpinion@@@1@@Z ; std::_Vector_val<Opinion,std::allocator<Opinion> >::_Vector_val<Opinion,std::allocator<Opinion> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??0?$_Vector_val@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAE@V?$allocator@UOpinion@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAE@V?$allocator@UOpinion@@@1@@Z PROC ; std::_Vector_val<Opinion,std::allocator<Opinion> >::_Vector_val<Opinion,std::allocator<Opinion> >, COMDAT
; _this$ = ecx

; 425  : 		{	// construct allocator from _Al

	mov	eax, ecx

; 426  : 		}

	ret	4
??0?$_Vector_val@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAE@V?$allocator@UOpinion@@@1@@Z ENDP ; std::_Vector_val<Opinion,std::allocator<Opinion> >::_Vector_val<Opinion,std::allocator<Opinion> >
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@PAUOpinion@@@Z ; std::_Vector_iterator<Opinion,std::allocator<Opinion> >::_Vector_iterator<Opinion,std::allocator<Opinion> >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@PAUOpinion@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@PAUOpinion@@@Z PROC ; std::_Vector_iterator<Opinion,std::allocator<Opinion> >::_Vector_iterator<Opinion,std::allocator<Opinion> >, COMDAT
; _this$ = ecx

; 333  : 		{	// construct with pointer _Ptr

	mov	eax, ecx
	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 334  : 		}

	ret	4
??0?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@PAUOpinion@@@Z ENDP ; std::_Vector_iterator<Opinion,std::allocator<Opinion> >::_Vector_iterator<Opinion,std::allocator<Opinion> >
_TEXT	ENDS
PUBLIC	??C?$auto_ptr@VICvUnknown@@@std@@QBEPAVICvUnknown@@XZ ; std::auto_ptr<ICvUnknown>::operator->
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??C?$auto_ptr@VICvUnknown@@@std@@QBEPAVICvUnknown@@XZ
_TEXT	SEGMENT
??C?$auto_ptr@VICvUnknown@@@std@@QBEPAVICvUnknown@@XZ PROC ; std::auto_ptr<ICvUnknown>::operator->, COMDAT
; _this$ = ecx

; 739  : 
; 740  :  #if _HAS_ITERATOR_DEBUGGING
; 741  : 		if (_Myptr == 0)
; 742  : 			_DEBUG_ERROR("auto_ptr not dereferencable");
; 743  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 744  : 
; 745  : 		return (get());

	mov	eax, DWORD PTR [ecx]

; 746  : 		}

	ret	0
??C?$auto_ptr@VICvUnknown@@@std@@QBEPAVICvUnknown@@XZ ENDP ; std::auto_ptr<ICvUnknown>::operator->
_TEXT	ENDS
PUBLIC	?max_size@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QBEIXZ ; std::vector<CvString,std::allocator<CvString> >::max_size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?max_size@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QBEIXZ PROC ; std::vector<CvString,std::allocator<CvString> >::max_size, COMDAT
; _this$ = ecx

; 731  : 		return (this->_Alval.max_size());

	mov	eax, 153391689				; 09249249H

; 732  : 		}

	ret	0
?max_size@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QBEIXZ ENDP ; std::vector<CvString,std::allocator<CvString> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@VCvString@@@std@@QAEPAVCvString@@I@Z ; std::allocator<CvString>::allocate
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@VCvString@@@std@@QAEPAVCvString@@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@VCvString@@@std@@QAEPAVCvString@@I@Z PROC ; std::allocator<CvString>::allocate, COMDAT
; _this$ = ecx

; 145  : 		return (_Allocate(_Count, (pointer)0));

	mov	eax, DWORD PTR __Count$[esp-4]
	push	0
	push	eax
	call	??$_Allocate@VCvString@@@std@@YAPAVCvString@@IPAV1@@Z ; std::_Allocate<CvString>
	add	esp, 8

; 146  : 		}

	ret	4
?allocate@?$allocator@VCvString@@@std@@QAEPAVCvString@@I@Z ENDP ; std::allocator<CvString>::allocate
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Node *>::destroy
; Function compile flags: /Ogtpy
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Node *>::destroy, COMDAT
; _this$ = ecx

; 160  : 		_Destroy(_Ptr);
; 161  : 		}

	ret	4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Node *>::destroy
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 378  : 
; 379  :  #if _HAS_ITERATOR_DEBUGGING
; 380  : 			if (this->_Mycont == 0
; 381  : 				|| _Ptr == 0
; 382  : 				|| _Isnil(_Ptr))
; 383  : 				{
; 384  : 				_DEBUG_ERROR("map/set iterator not incrementable");
; 385  : 				_SCL_SECURE_OUT_OF_RANGE;
; 386  : 				}
; 387  :  #else
; 388  : 			_SCL_SECURE_VALIDATE(this->_Has_container());
; 389  : 			if (_Isnil(_Ptr))

	mov	eax, DWORD PTR [ecx]
	cmp	BYTE PTR [eax+21], 0
	jne	SHORT $LN3@Inc

; 390  : 				{
; 391  : 				_SCL_SECURE_OUT_OF_RANGE;
; 392  : 				// end() shouldn't be incremented, don't move if _SCL_SECURE is not turned on
; 393  : 				}
; 394  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 395  : 
; 396  : 			else if (!_Isnil(_Right(_Ptr)))

	mov	edx, DWORD PTR [eax+8]
	cmp	BYTE PTR [edx+21], 0
	jne	SHORT $LN34@Inc

; 397  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

	mov	eax, DWORD PTR [edx]
	cmp	BYTE PTR [eax+21], 0
	jne	SHORT $LN17@Inc
	npad	7
$LL18@Inc:
	mov	edx, eax
	mov	eax, DWORD PTR [edx]
	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LL18@Inc
$LN17@Inc:
	mov	DWORD PTR [ecx], edx

; 405  : 				}
; 406  : 			}

	ret	0
$LN34@Inc:

; 398  : 			else
; 399  : 				{	// climb looking for right subtree
; 400  : 				_Nodeptr _Pnode;
; 401  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 402  : 					&& _Ptr == _Right(_Pnode))

	mov	eax, DWORD PTR [eax+4]
	cmp	BYTE PTR [eax+21], 0
	jne	SHORT $LN1@Inc
$LL2@Inc:
	mov	edx, DWORD PTR [ecx]
	cmp	edx, DWORD PTR [eax+8]
	jne	SHORT $LN1@Inc

; 403  : 					_Ptr = _Pnode;	// ==> parent while right subtree

	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [eax+4]
	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LL2@Inc
$LN1@Inc:

; 404  : 				_Ptr = _Pnode;	// ==> parent (head if end())

	mov	DWORD PTR [ecx], eax
$LN3@Inc:

; 405  : 				}
; 406  : 			}

	ret	0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?Free@?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@IAEXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@I@Z ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::Free
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ?Free@?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@IAEXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@I@Z
_TEXT	SEGMENT
_pVal$ = 8						; size = 4
_uiNumElements$ = 12					; size = 4
?Free@?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@IAEXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@I@Z PROC ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::Free, COMDAT
; _this$ = ecx

; 810  : 		if( !bPODType) Destroy(pVal, uiNumElements);
; 811  : 		if( pVal != (T*)m_aData )

	mov	eax, DWORD PTR _pVal$[esp-4]
	add	ecx, 12					; 0000000cH
	cmp	eax, ecx
	je	SHORT $LN1@Free@2

; 812  : 			FFREEALIGNED( (unsigned char*)pVal );

	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	pop	ecx
$LN1@Free@2:

; 813  : 	};

	ret	8
?Free@?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@IAEXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@I@Z ENDP ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::Free
_TEXT	ENDS
PUBLIC	?max_size@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QBEIXZ ; std::vector<Opinion,std::allocator<Opinion> >::max_size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?max_size@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QBEIXZ PROC ; std::vector<Opinion,std::allocator<Opinion> >::max_size, COMDAT
; _this$ = ecx

; 731  : 		return (this->_Alval.max_size());

	mov	eax, 51130563				; 030c30c3H

; 732  : 		}

	ret	0
?max_size@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QBEIXZ ENDP ; std::vector<Opinion,std::allocator<Opinion> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@UOpinion@@@std@@QAEPAUOpinion@@I@Z ; std::allocator<Opinion>::allocate
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@UOpinion@@@std@@QAEPAUOpinion@@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@UOpinion@@@std@@QAEPAUOpinion@@I@Z PROC ; std::allocator<Opinion>::allocate, COMDAT
; _this$ = ecx

; 145  : 		return (_Allocate(_Count, (pointer)0));

	mov	eax, DWORD PTR __Count$[esp-4]
	push	0
	push	eax
	call	??$_Allocate@UOpinion@@@std@@YAPAUOpinion@@IPAU1@@Z ; std::_Allocate<Opinion>
	add	esp, 8

; 146  : 		}

	ret	4
?allocate@?$allocator@UOpinion@@@std@@QAEPAUOpinion@@I@Z ENDP ; std::allocator<Opinion>::allocate
_TEXT	ENDS
PUBLIC	?_Make_iter@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QBE?AViterator@12@Vconst_iterator@12@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Make_iter
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ?_Make_iter@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QBE?AViterator@12@Vconst_iterator@12@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QBE?AViterator@12@Vconst_iterator@12@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Make_iter, COMDAT
; _this$ = ecx

; 576  : 		return (iterator(_TREE_ITERATOR(_Where._Ptr)));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	ecx, DWORD PTR __Where$[esp-4]
	mov	DWORD PTR [eax], ecx

; 577  : 		}

	ret	8
?_Make_iter@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QBE?AViterator@12@Vconst_iterator@12@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Make_iter
_TEXT	ENDS
PUBLIC	??Y?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<Opinion,std::allocator<Opinion> >::operator+=
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??Y?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_iterator<Opinion,std::allocator<Opinion> >::operator+=, COMDAT
; _this$ = ecx

; 374  : 		{	// increment by integer

	mov	eax, ecx

; 375  : 		(*(_Mybase *)this) += _Off;

	mov	ecx, DWORD PTR __Off$[esp-4]
	imul	ecx, 84					; 00000054H
	add	DWORD PTR [eax], ecx

; 376  : 		return (*this);
; 377  : 		}

	ret	4
??Y?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_iterator<Opinion,std::allocator<Opinion> >::operator+=
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@PAVCvString@@@Z ; std::_Vector_iterator<CvString,std::allocator<CvString> >::_Vector_iterator<CvString,std::allocator<CvString> >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Vector_iterator@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@PAVCvString@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_iterator@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@PAVCvString@@@Z PROC ; std::_Vector_iterator<CvString,std::allocator<CvString> >::_Vector_iterator<CvString,std::allocator<CvString> >, COMDAT
; _this$ = ecx

; 333  : 		{	// construct with pointer _Ptr

	mov	eax, ecx
	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 334  : 		}

	ret	4
??0?$_Vector_iterator@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@PAVCvString@@@Z ENDP ; std::_Vector_iterator<CvString,std::allocator<CvString> >::_Vector_iterator<CvString,std::allocator<CvString> >
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<CvString,std::allocator<CvString> >::operator!=
; Function compile flags: /Ogtpy
;	COMDAT ??9?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<CvString,std::allocator<CvString> >::operator!=, COMDAT
; _this$ = ecx

; 216  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	setne	cl
	mov	al, cl

; 217  : 		}

	ret	4
??9?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<CvString,std::allocator<CvString> >::operator!=
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Lrotate
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1286 : 		_Nodeptr _Pnode = _Right(_Wherenode);

	mov	edx, DWORD PTR __Wherenode$[esp-4]
	mov	eax, DWORD PTR [edx+8]
	push	esi

; 1287 : 		_Right(_Wherenode) = _Left(_Pnode);

	mov	esi, DWORD PTR [eax]
	mov	DWORD PTR [edx+8], esi

; 1288 : 
; 1289 : 		if (!_Isnil(_Left(_Pnode)))

	mov	esi, DWORD PTR [eax]
	cmp	BYTE PTR [esi+21], 0
	jne	SHORT $LN5@Lrotate

; 1290 : 			_Parent(_Left(_Pnode)) = _Wherenode;

	mov	DWORD PTR [esi+4], edx
$LN5@Lrotate:

; 1291 : 		_Parent(_Pnode) = _Parent(_Wherenode);

	mov	esi, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], esi

; 1292 : 
; 1293 : 		if (_Wherenode == _Root())

	mov	ecx, DWORD PTR [ecx+4]
	pop	esi
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN4@Lrotate

; 1294 : 			_Root() = _Pnode;

	mov	DWORD PTR [ecx+4], eax

; 1299 : 
; 1300 : 		_Left(_Pnode) = _Wherenode;

	mov	DWORD PTR [eax], edx

; 1301 : 		_Parent(_Wherenode) = _Pnode;

	mov	DWORD PTR [edx+4], eax

; 1302 : 		}

	ret	4
$LN4@Lrotate:

; 1295 : 		else if (_Wherenode == _Left(_Parent(_Wherenode)))

	mov	ecx, DWORD PTR [edx+4]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN2@Lrotate

; 1296 : 			_Left(_Parent(_Wherenode)) = _Pnode;

	mov	DWORD PTR [ecx], eax

; 1299 : 
; 1300 : 		_Left(_Pnode) = _Wherenode;

	mov	DWORD PTR [eax], edx

; 1301 : 		_Parent(_Wherenode) = _Pnode;

	mov	DWORD PTR [edx+4], eax

; 1302 : 		}

	ret	4
$LN2@Lrotate:

; 1297 : 		else
; 1298 : 			_Right(_Parent(_Wherenode)) = _Pnode;

	mov	DWORD PTR [ecx+8], eax

; 1299 : 
; 1300 : 		_Left(_Pnode) = _Wherenode;

	mov	DWORD PTR [eax], edx

; 1301 : 		_Parent(_Wherenode) = _Pnode;

	mov	DWORD PTR [edx+4], eax

; 1302 : 		}

	ret	4
?_Lrotate@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Node>::destroy
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Node>::destroy, COMDAT
; _this$ = ecx

; 160  : 		_Destroy(_Ptr);
; 161  : 		}

	ret	4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Node>::destroy
_TEXT	ENDS
PUBLIC	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluascopedinstance.h
;	COMDAT ?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_bErrorOnFail$ = 16					; size = 1
?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z PROC ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance, COMDAT

; 127  : {

	push	ebx
	push	ebp
	push	esi

; 128  : 	const int stack_size = lua_gettop(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	mov	ebp, eax

; 129  : 	bool bFail = true;
; 130  : 
; 131  : 	InstanceType* pkInstance = NULL;
; 132  : 	if(lua_type(L, idx) == LUA_TTABLE)

	mov	eax, DWORD PTR _idx$[esp+16]
	push	eax
	push	esi
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN3@GetInstanc@5

; 133  : 	{
; 134  : 		lua_getfield(L, idx, "__instance");

	mov	ecx, DWORD PTR _idx$[esp+12]
	push	OFFSET $SG237728
	push	ecx
	push	esi
	call	_lua_getfield

; 135  : 		if(lua_type(L, -1) == LUA_TLIGHTUSERDATA)

	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN3@GetInstanc@5

; 136  : 		{
; 137  : 			pkInstance = static_cast<InstanceType*>(lua_touserdata(L, -1));

	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8

; 138  : 			if(pkInstance)

	test	edi, edi
	je	SHORT $LN3@GetInstanc@5

; 139  : 			{
; 140  : 				bFail = false;

	xor	bl, bl
$LN3@GetInstanc@5:

; 141  : 			}
; 142  : 		}
; 143  : 	}
; 144  : 
; 145  : 	lua_settop(L, stack_size);

	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8

; 146  : 
; 147  : 	if(bFail && bErrorOnFail)

	test	bl, bl
	je	SHORT $LN13@GetInstanc@5
	cmp	BYTE PTR _bErrorOnFail$[esp+12], 0
	je	SHORT $LN13@GetInstanc@5

; 148  : 	{
; 149  : 		if(idx == 1)

	cmp	DWORD PTR _idx$[esp+12], 1
	jne	SHORT $LN1@GetInstanc@5

; 150  : 			luaL_error(L, "Not a valid instance.  Either the instance is NULL or you used '.' instead of ':'.");

	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	add	esp, 8
$LN1@GetInstanc@5:

; 151  : 		Derived::HandleMissingInstance(L);

	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 8
$LN13@GetInstanc@5:

; 152  : 	}
; 153  : 	return pkInstance;

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 154  : }

	ret	0
?GetInstance@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAPAVCvPlayerAI@@PAUlua_State@@H_N@Z ENDP ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::GetInstance
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEX_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvluamethodwrapper.h
;	COMDAT ??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEX_N@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEX_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>, COMDAT

; 230  : {

	push	ebx
	push	ebp
	push	esi

; 231  : 	const int idx = Derived::GetStartingArgIndex();
; 232  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe
	xor	bl, bl
$LN7@BasicLuaMe:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe:

; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	push	2
	push	esi
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	al
	movzx	ecx, al
	push	ecx
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	pop	edi
	pop	esi
	pop	ebp

; 234  : 	return 0;

	xor	eax, eax
	pop	ebx

; 235  : }

	ret	0
??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEX_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>, COMDAT

; 69   : {

	push	ebx
	push	ebp
	push	esi

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@BasicLuaMe@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@BasicLuaMe@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@BasicLuaMe@2
	xor	bl, bl
$LN5@BasicLuaMe@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@BasicLuaMe@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@BasicLuaMe@2:

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, edi
	call	DWORD PTR _func$[esp+12]
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 72   : 
; 73   : 	return 1;

	mov	eax, 1
	pop	ebx

; 74   : }

	ret	0
??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4ArtStyleTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4ArtStyleTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum ArtStyleTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4ArtStyleTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4ArtStyleTypes@@XZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4ArtStyleTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4ArtStyleTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum ArtStyleTypes>, COMDAT

; 69   : {

	push	ebx
	push	ebp
	push	esi

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@BasicLuaMe@3
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@BasicLuaMe@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@BasicLuaMe@3
	xor	bl, bl
$LN5@BasicLuaMe@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@BasicLuaMe@3
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@BasicLuaMe@3:

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, edi
	call	DWORD PTR _func$[esp+12]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 72   : 
; 73   : 	return 1;

	mov	eax, 1
	pop	ebx

; 74   : }

	ret	0
??$BasicLuaMethod@W4ArtStyleTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4ArtStyleTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum ArtStyleTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4FeatureTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4FeatureTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum FeatureTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4FeatureTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4FeatureTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4FeatureTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4FeatureTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum FeatureTypes>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@4
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@4
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@4
	xor	bl, bl
$LN7@BasicLuaMe@4:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@4
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@4:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@HW4FeatureTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4FeatureTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum FeatureTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4BuildingTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum BuildingTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4BuildingTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4BuildingTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum BuildingTypes>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@5
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@5
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@5
	xor	bl, bl
$LN7@BasicLuaMe@5:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@5
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@5:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@HW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4BuildingTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum BuildingTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@PAVCvPlot@@W4GoodyTypes@@PAVCvUnit@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXPAVCvPlot@@W4GoodyTypes@@PAVCvUnit@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<CvPlot *,enum GoodyTypes,CvUnit *>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@PAVCvPlot@@W4GoodyTypes@@PAVCvUnit@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXPAVCvPlot@@W4GoodyTypes@@PAVCvUnit@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@PAVCvPlot@@W4GoodyTypes@@PAVCvUnit@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXPAVCvPlot@@W4GoodyTypes@@PAVCvUnit@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<CvPlot *,enum GoodyTypes,CvUnit *>, COMDAT

; 249  : {

	push	ebx
	push	ebp
	push	esi

; 250  : 	const int idx = Derived::GetStartingArgIndex();
; 251  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@6
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@6
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@6
	xor	bl, bl
$LN7@BasicLuaMe@6:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@6
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@6:

; 252  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2));

	push	4
	push	esi
	call	_lua_tointeger
	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H
	push	ebx
	push	eax
	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+24]
	pop	edi
	pop	esi
	pop	ebp

; 253  : 	return 0;

	xor	eax, eax
	pop	ebx

; 254  : }

	ret	0
??$BasicLuaMethod@PAVCvPlot@@W4GoodyTypes@@PAVCvUnit@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXPAVCvPlot@@W4GoodyTypes@@PAVCvUnit@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<CvPlot *,enum GoodyTypes,CvUnit *>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@PAVCvPlot@@PAVCvUnit@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXPAVCvPlot@@PAVCvUnit@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<CvPlot *,CvUnit *>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@PAVCvPlot@@PAVCvUnit@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXPAVCvPlot@@PAVCvUnit@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@PAVCvPlot@@PAVCvUnit@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXPAVCvPlot@@PAVCvUnit@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<CvPlot *,CvUnit *>, COMDAT

; 239  : {

	push	ebx
	push	ebp
	push	esi

; 240  : 	const int idx = Derived::GetStartingArgIndex();
; 241  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@7
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@7
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@7
	xor	bl, bl
$LN7@BasicLuaMe@7:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@7
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@7:

; 242  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1));

	push	3
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+20]
	pop	edi
	pop	esi
	pop	ebp

; 243  : 	return 0;

	xor	eax, eax
	pop	ebx

; 244  : }

	ret	0
??$BasicLuaMethod@PAVCvPlot@@PAVCvUnit@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXPAVCvPlot@@PAVCvUnit@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<CvPlot *,CvUnit *>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NHH_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NHH_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,int,int,bool>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_NHH_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NHH_N@Z@Z
_TEXT	SEGMENT
$T244956 = -4						; size = 1
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NHH_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NHH_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,int,int,bool>, COMDAT

; 98   : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 99   : 	const int idx = Derived::GetStartingArgIndex();
; 100  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@8
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@8
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@8
	xor	bl, bl
$LN7@BasicLuaMe@8:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@8
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@8:

; 101  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2)));

	push	4
	push	esi
	call	_lua_toboolean
	test	eax, eax
	setne	al
	push	3
	push	esi
	mov	BYTE PTR $T244956[esp+36], al
	call	_lua_tointeger
	push	2
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	mov	ecx, DWORD PTR $T244956[esp+44]
	add	esp, 24					; 00000018H
	push	ecx
	push	ebx
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+28]
	movzx	edx, al
	push	edx
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 102  : 
; 103  : 	return 1;

	mov	eax, 1
	pop	ebx

; 104  : }

	pop	ecx
	ret	0
??$BasicLuaMethod@_NHH_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NHH_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,int,int,bool>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXHH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXHH@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXHH@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,int>, COMDAT

; 239  : {

	push	ebx
	push	ebp
	push	esi

; 240  : 	const int idx = Derived::GetStartingArgIndex();
; 241  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@9
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@9
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@9
	xor	bl, bl
$LN7@BasicLuaMe@9:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@9
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@9:

; 242  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1));

	push	3
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+20]
	pop	edi
	pop	esi
	pop	ebp

; 243  : 	return 0;

	xor	eax, eax
	pop	ebx

; 244  : }

	ret	0
??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXHH@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4ProjectTypes@@_N_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4ProjectTypes@@_N2@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum ProjectTypes,bool,bool>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_NW4ProjectTypes@@_N_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4ProjectTypes@@_N2@Z@Z
_TEXT	SEGMENT
$T245037 = -8						; size = 1
$T245041 = -4						; size = 1
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4ProjectTypes@@_N_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4ProjectTypes@@_N2@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum ProjectTypes,bool,bool>, COMDAT

; 98   : {

	sub	esp, 8
	push	ebx
	push	ebp
	push	esi

; 99   : 	const int idx = Derived::GetStartingArgIndex();
; 100  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+16]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@10
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@10
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@10
	xor	bl, bl
$LN7@BasicLuaMe@10:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@10
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@10:

; 101  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2)));

	push	4
	push	esi
	call	_lua_toboolean
	test	eax, eax
	setne	al
	push	3
	push	esi
	mov	BYTE PTR $T245037[esp+40], al
	call	_lua_toboolean
	test	eax, eax
	setne	cl
	push	2
	push	esi
	mov	BYTE PTR $T245041[esp+48], cl
	call	_lua_tointeger
	mov	edx, DWORD PTR $T245037[esp+48]
	mov	ecx, DWORD PTR $T245041[esp+48]
	add	esp, 24					; 00000018H
	push	edx
	push	ecx
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+32]
	movzx	edx, al
	push	edx
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 102  : 
; 103  : 	return 1;

	mov	eax, 1
	pop	ebx

; 104  : }

	add	esp, 8
	ret	0
??$BasicLuaMethod@_NW4ProjectTypes@@_N_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4ProjectTypes@@_N2@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum ProjectTypes,bool,bool>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4SpecialistTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4SpecialistTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum SpecialistTypes,bool>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_NW4SpecialistTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4SpecialistTypes@@_N@Z@Z
_TEXT	SEGMENT
$T245082 = -4						; size = 1
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4SpecialistTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4SpecialistTypes@@_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum SpecialistTypes,bool>, COMDAT

; 88   : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 89   : 	const int idx = Derived::GetStartingArgIndex();
; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@11
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@11
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@11
	xor	bl, bl
$LN7@BasicLuaMe@11:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@11
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@11:

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	push	3
	push	esi
	call	_lua_toboolean
	test	eax, eax
	setne	al
	push	2
	push	esi
	mov	BYTE PTR $T245082[esp+36], al
	call	_lua_tointeger
	mov	ecx, DWORD PTR $T245082[esp+36]
	add	esp, 16					; 00000010H
	push	ecx
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+24]
	movzx	edx, al
	push	edx
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 92   : 
; 93   : 	return 1;

	mov	eax, 1
	pop	ebx

; 94   : }

	pop	ecx
	ret	0
??$BasicLuaMethod@_NW4SpecialistTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4SpecialistTypes@@_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum SpecialistTypes,bool>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4ProcessTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4ProcessTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum ProcessTypes,bool>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_NW4ProcessTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4ProcessTypes@@_N@Z@Z
_TEXT	SEGMENT
$T245123 = -4						; size = 1
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4ProcessTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4ProcessTypes@@_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum ProcessTypes,bool>, COMDAT

; 88   : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 89   : 	const int idx = Derived::GetStartingArgIndex();
; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@12
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@12
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@12
	xor	bl, bl
$LN7@BasicLuaMe@12:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@12
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@12:

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	push	3
	push	esi
	call	_lua_toboolean
	test	eax, eax
	setne	al
	push	2
	push	esi
	mov	BYTE PTR $T245123[esp+36], al
	call	_lua_tointeger
	mov	ecx, DWORD PTR $T245123[esp+36]
	add	esp, 16					; 00000010H
	push	ecx
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+24]
	movzx	edx, al
	push	edx
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 92   : 
; 93   : 	return 1;

	mov	eax, 1
	pop	ebx

; 94   : }

	pop	ecx
	ret	0
??$BasicLuaMethod@_NW4ProcessTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4ProcessTypes@@_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum ProcessTypes,bool>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4FaithPurchaseTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4FaithPurchaseTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum FaithPurchaseTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4FaithPurchaseTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4FaithPurchaseTypes@@XZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4FaithPurchaseTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4FaithPurchaseTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum FaithPurchaseTypes>, COMDAT

; 69   : {

	push	ebx
	push	ebp
	push	esi

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@BasicLuaMe@13
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@BasicLuaMe@13
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@BasicLuaMe@13
	xor	bl, bl
$LN5@BasicLuaMe@13:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@BasicLuaMe@13
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@BasicLuaMe@13:

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, edi
	call	DWORD PTR _func$[esp+12]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 72   : 
; 73   : 	return 1;

	mov	eax, 1
	pop	ebx

; 74   : }

	ret	0
??$BasicLuaMethod@W4FaithPurchaseTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4FaithPurchaseTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum FaithPurchaseTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4FaithPurchaseTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4FaithPurchaseTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum FaithPurchaseTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4FaithPurchaseTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4FaithPurchaseTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4FaithPurchaseTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4FaithPurchaseTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum FaithPurchaseTypes>, COMDAT

; 230  : {

	push	ebx
	push	ebp
	push	esi

; 231  : 	const int idx = Derived::GetStartingArgIndex();
; 232  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@14
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@14
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@14
	xor	bl, bl
$LN7@BasicLuaMe@14:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@14
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@14:

; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	pop	edi
	pop	esi
	pop	ebp

; 234  : 	return 0;

	xor	eax, eax
	pop	ebx

; 235  : }

	ret	0
??$BasicLuaMethod@W4FaithPurchaseTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4FaithPurchaseTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum FaithPurchaseTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>, COMDAT

; 69   : {

	push	ebx
	push	ebp
	push	esi

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@BasicLuaMe@15
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@BasicLuaMe@15
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@BasicLuaMe@15
	xor	bl, bl
$LN5@BasicLuaMe@15:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@BasicLuaMe@15
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@BasicLuaMe@15:

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, edi
	call	DWORD PTR _func$[esp+12]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 72   : 
; 73   : 	return 1;

	mov	eax, 1
	pop	ebx

; 74   : }

	ret	0
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>, COMDAT

; 230  : {

	push	ebx
	push	ebp
	push	esi

; 231  : 	const int idx = Derived::GetStartingArgIndex();
; 232  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@16
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@16
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@16
	xor	bl, bl
$LN7@BasicLuaMe@16:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@16
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@16:

; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	pop	edi
	pop	esi
	pop	ebp

; 234  : 	return 0;

	xor	eax, eax
	pop	ebx

; 235  : }

	ret	0
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4UnitClassTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum UnitClassTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_NW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4UnitClassTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4UnitClassTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum UnitClassTypes>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@17
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@17
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@17
	xor	bl, bl
$LN7@BasicLuaMe@17:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@17
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@17:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@_NW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4UnitClassTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum UnitClassTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4BuildingClassTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4BuildingClassTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum BuildingClassTypes,bool>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_NW4BuildingClassTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4BuildingClassTypes@@_N@Z@Z
_TEXT	SEGMENT
$T245325 = -4						; size = 1
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4BuildingClassTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4BuildingClassTypes@@_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum BuildingClassTypes,bool>, COMDAT

; 88   : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 89   : 	const int idx = Derived::GetStartingArgIndex();
; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@18
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@18
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@18
	xor	bl, bl
$LN7@BasicLuaMe@18:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@18
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@18:

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	push	3
	push	esi
	call	_lua_toboolean
	test	eax, eax
	setne	al
	push	2
	push	esi
	mov	BYTE PTR $T245325[esp+36], al
	call	_lua_tointeger
	mov	ecx, DWORD PTR $T245325[esp+36]
	add	esp, 16					; 00000010H
	push	ecx
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+24]
	movzx	edx, al
	push	edx
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 92   : 
; 93   : 	return 1;

	mov	eax, 1
	pop	ebx

; 94   : }

	pop	ecx
	ret	0
??$BasicLuaMethod@_NW4BuildingClassTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4BuildingClassTypes@@_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum BuildingClassTypes,bool>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4ProjectTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum ProjectTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_NW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4ProjectTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4ProjectTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum ProjectTypes>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@19
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@19
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@19
	xor	bl, bl
$LN7@BasicLuaMe@19:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@19
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@19:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@_NW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4ProjectTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum ProjectTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4BuildingTypes@@W4BuildingClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4BuildingTypes@@W4BuildingClassTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum BuildingTypes,enum BuildingClassTypes,int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4BuildingTypes@@W4BuildingClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4BuildingTypes@@W4BuildingClassTypes@@H@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4BuildingTypes@@W4BuildingClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4BuildingTypes@@W4BuildingClassTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum BuildingTypes,enum BuildingClassTypes,int>, COMDAT

; 98   : {

	push	ebx
	push	ebp
	push	esi

; 99   : 	const int idx = Derived::GetStartingArgIndex();
; 100  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@20
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@20
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@20
	xor	bl, bl
$LN7@BasicLuaMe@20:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@20
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@20:

; 101  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2)));

	push	4
	push	esi
	call	_lua_tointeger
	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	push	2
	push	esi
	mov	ebp, eax
	call	_lua_tointeger
	add	esp, 24					; 00000018H
	push	ebx
	push	ebp
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+24]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 102  : 
; 103  : 	return 1;

	mov	eax, 1
	pop	ebx

; 104  : }

	ret	0
??$BasicLuaMethod@HW4BuildingTypes@@W4BuildingClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4BuildingTypes@@W4BuildingClassTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum BuildingTypes,enum BuildingClassTypes,int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4BuildingClassTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum BuildingClassTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4BuildingClassTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4BuildingClassTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum BuildingClassTypes>, COMDAT

; 230  : {

	push	ebx
	push	ebp
	push	esi

; 231  : 	const int idx = Derived::GetStartingArgIndex();
; 232  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@21
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@21
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@21
	xor	bl, bl
$LN7@BasicLuaMe@21:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@21
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@21:

; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	pop	edi
	pop	esi
	pop	ebp

; 234  : 	return 0;

	xor	eax, eax
	pop	ebx

; 235  : }

	ret	0
??$BasicLuaMethod@W4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4BuildingClassTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum BuildingClassTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4YieldTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum YieldTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4YieldTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4YieldTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum YieldTypes>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@22
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@22
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@22
	xor	bl, bl
$LN7@BasicLuaMe@22:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@22
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@22:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@HW4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4YieldTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum YieldTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4DomainTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4DomainTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum DomainTypes,bool>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4DomainTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4DomainTypes@@_N@Z@Z
_TEXT	SEGMENT
$T245517 = -4						; size = 1
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4DomainTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4DomainTypes@@_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum DomainTypes,bool>, COMDAT

; 88   : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 89   : 	const int idx = Derived::GetStartingArgIndex();
; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@23
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@23
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@23
	xor	bl, bl
$LN7@BasicLuaMe@23:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@23
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@23:

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	push	3
	push	esi
	call	_lua_toboolean
	test	eax, eax
	setne	al
	push	2
	push	esi
	mov	BYTE PTR $T245517[esp+36], al
	call	_lua_tointeger
	mov	ecx, DWORD PTR $T245517[esp+36]
	add	esp, 16					; 00000010H
	push	ecx
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+24]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 92   : 
; 93   : 	return 1;

	mov	eax, 1
	pop	ebx

; 94   : }

	pop	ecx
	ret	0
??$BasicLuaMethod@HW4DomainTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4DomainTypes@@_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum DomainTypes,bool>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4TechTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum TechTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4TechTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4TechTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum TechTypes>, COMDAT

; 130  : {

	push	ebx
	push	ebp
	push	esi

; 131  : 	const int idx = Derived::GetStartingArgIndex();
; 132  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@24
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@24
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@24
	xor	bl, bl
$LN7@BasicLuaMe@24:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@24
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@24:

; 133  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 134  : 
; 135  : 	return 1;

	mov	eax, 1
	pop	ebx

; 136  : }

	ret	0
??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4TechTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum TechTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4SpecialistTypes@@W4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4SpecialistTypes@@W4YieldTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum SpecialistTypes,enum YieldTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4SpecialistTypes@@W4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4SpecialistTypes@@W4YieldTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4SpecialistTypes@@W4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4SpecialistTypes@@W4YieldTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum SpecialistTypes,enum YieldTypes>, COMDAT

; 88   : {

	push	ebx
	push	ebp
	push	esi

; 89   : 	const int idx = Derived::GetStartingArgIndex();
; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@25
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@25
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@25
	xor	bl, bl
$LN7@BasicLuaMe@25:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@25
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@25:

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	push	3
	push	esi
	call	_lua_tointeger
	push	2
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H
	push	ebx
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+20]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 92   : 
; 93   : 	return 1;

	mov	eax, 1
	pop	ebx

; 94   : }

	ret	0
??$BasicLuaMethod@HW4SpecialistTypes@@W4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4SpecialistTypes@@W4YieldTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum SpecialistTypes,enum YieldTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@J@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEJXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<long>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@J@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEJXZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@J@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEJXZ@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<long>, COMDAT

; 69   : {

	push	ebx
	push	ebp
	push	esi

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@BasicLuaMe@26
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@BasicLuaMe@26
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@BasicLuaMe@26
	xor	bl, bl
$LN5@BasicLuaMe@26:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@BasicLuaMe@26
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@BasicLuaMe@26:

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, edi
	call	DWORD PTR _func$[esp+12]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 72   : 
; 73   : 	return 1;

	mov	eax, 1
	pop	ebx

; 74   : }

	ret	0
??$BasicLuaMethod@J@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEJXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<long>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum PlayerTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4PlayerTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4PlayerTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum PlayerTypes>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@27
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@27
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@27
	xor	bl, bl
$LN7@BasicLuaMe@27:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@27
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@27:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4PlayerTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum PlayerTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHXZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHXZ@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>, COMDAT

; 121  : {

	push	ebx
	push	ebp
	push	esi

; 122  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@BasicLuaMe@28
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@BasicLuaMe@28
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@BasicLuaMe@28
	xor	bl, bl
$LN5@BasicLuaMe@28:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@BasicLuaMe@28
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@BasicLuaMe@28:

; 123  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, edi
	call	DWORD PTR _func$[esp+12]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 124  : 
; 125  : 	return 1;

	mov	eax, 1
	pop	ebx

; 126  : }

	ret	0
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HPAVCvCity@@PAV1@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHPAVCvCity@@1@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,CvCity *,CvCity *>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HPAVCvCity@@PAV1@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHPAVCvCity@@1@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HPAVCvCity@@PAV1@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHPAVCvCity@@1@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,CvCity *,CvCity *>, COMDAT

; 88   : {

	push	ebx
	push	ebp
	push	esi

; 89   : 	const int idx = Derived::GetStartingArgIndex();
; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@29
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@29
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@29
	xor	bl, bl
$LN7@BasicLuaMe@29:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@29
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@29:

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	push	3
	push	esi
	call	_lua_tointeger
	push	2
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H
	push	ebx
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+20]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 92   : 
; 93   : 	return 1;

	mov	eax, 1
	pop	ebx

; 94   : }

	ret	0
??$BasicLuaMethod@HPAVCvCity@@PAV1@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHPAVCvCity@@1@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,CvCity *,CvCity *>
_TEXT	ENDS
PUBLIC	??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z	; GetLocalizedText<int>
EXTRN	__imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z:PROC
EXTRN	__imp_?toUTF8@String@Localization@@QAEPBDAAIH@Z:PROC
EXTRN	__imp_?Lookup@Localization@@YA?AVString@1@PBD@Z:PROC
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z$0
__ehfuncinfo$??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvgamecoreutils.h
xdata$x	ENDS
;	COMDAT ??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z
_TEXT	SEGMENT
_bytes$ = -100						; size = 4
$T245747 = -96						; size = 4
_text$ = -92						; size = 80
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_szString$ = 12						; size = 4
_arg1$ = 16						; size = 4
??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z PROC	; GetLocalizedText<int>, COMDAT

; 501  : {

	push	-1
	push	__ehhandler$??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 88					; 00000058H

; 502  : 	Localization::String text = Localization::Lookup(szString);

	mov	eax, DWORD PTR _szString$[esp+96]
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	ecx, DWORD PTR _text$[esp+116]
	xor	ebx, ebx
	push	ecx
	mov	DWORD PTR __$EHRec$[esp+128], ebx
	mov	DWORD PTR $T245747[esp+120], ebx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8

; 503  : 	text << arg1;

	mov	edx, DWORD PTR _arg1$[esp+108]
	push	edx
	lea	ecx, DWORD PTR _text$[esp+116]
	mov	DWORD PTR __$EHRec$[esp+124], 1
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NH@Z

; 504  : 
; 505  : 	size_t bytes = 0;
; 506  : 	const char* szComposedString = text.toUTF8(bytes);

	push	1
	lea	eax, DWORD PTR _bytes$[esp+116]
	push	eax
	lea	ecx, DWORD PTR _text$[esp+120]
	mov	DWORD PTR _bytes$[esp+120], ebx
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDAAIH@Z

; 507  : 	CvString str;

	mov	esi, DWORD PTR ___$ReturnUdt$[esp+108]
	mov	ecx, esi
	mov	edi, eax
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 508  : 	str.assign(szComposedString, bytes);
; 509  : 	return str;

	mov	ecx, DWORD PTR _bytes$[esp+112]
	push	ecx
	push	edi
	mov	ecx, esi
	mov	DWORD PTR $T245747[esp+120], 1
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
	lea	ecx, DWORD PTR _text$[esp+112]
	mov	BYTE PTR __$EHRec$[esp+120], bl
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 510  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+112]
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 100				; 00000064H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z$0:
	lea	ecx, DWORD PTR _text$[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z$1:
	mov	eax, DWORD PTR $T245747[ebp]
	and	eax, 1
	je	$LN5@GetLocaliz
	and	DWORD PTR $T245747[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp-4]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
$LN5@GetLocaliz:
	ret	0
__ehhandler$??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z:
	mov	eax, OFFSET __ehfuncinfo$??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z ENDP	; GetLocalizedText<int>
PUBLIC	??$BasicLuaMethod@W4PolicyTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4PolicyTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PolicyTypes,bool>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvluamethodwrapper.h
;	COMDAT ??$BasicLuaMethod@W4PolicyTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4PolicyTypes@@_N@Z@Z
_TEXT	SEGMENT
$T245794 = -4						; size = 1
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4PolicyTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4PolicyTypes@@_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PolicyTypes,bool>, COMDAT

; 239  : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 240  : 	const int idx = Derived::GetStartingArgIndex();
; 241  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@30
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@30
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@30
	xor	bl, bl
$LN7@BasicLuaMe@30:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@30
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@30:

; 242  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1));

	push	3
	push	esi
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	al
	mov	BYTE PTR $T245794[esp+20], al
	mov	ecx, DWORD PTR $T245794[esp+20]
	push	ecx
	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+24]
	pop	edi
	pop	esi
	pop	ebp

; 243  : 	return 0;

	xor	eax, eax
	pop	ebx

; 244  : }

	pop	ecx
	ret	0
??$BasicLuaMethod@W4PolicyTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4PolicyTypes@@_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PolicyTypes,bool>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4PolicyTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4PolicyTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PolicyTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4PolicyTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4PolicyTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4PolicyTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4PolicyTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PolicyTypes>, COMDAT

; 230  : {

	push	ebx
	push	ebp
	push	esi

; 231  : 	const int idx = Derived::GetStartingArgIndex();
; 232  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@31
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@31
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@31
	xor	bl, bl
$LN7@BasicLuaMe@31:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@31
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@31:

; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	pop	edi
	pop	esi
	pop	ebp

; 234  : 	return 0;

	xor	eax, eax
	pop	ebx

; 235  : }

	ret	0
??$BasicLuaMethod@W4PolicyTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4PolicyTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PolicyTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4UnitTypes@@_NPAVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4UnitTypes@@_NPAVCvPlot@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum UnitTypes,bool,CvPlot *>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4UnitTypes@@_NPAVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4UnitTypes@@_NPAVCvPlot@@@Z@Z
_TEXT	SEGMENT
$T245866 = -4						; size = 1
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4UnitTypes@@_NPAVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4UnitTypes@@_NPAVCvPlot@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum UnitTypes,bool,CvPlot *>, COMDAT

; 150  : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 151  : 	const int idx = Derived::GetStartingArgIndex();
; 152  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@32
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@32
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@32
	xor	bl, bl
$LN7@BasicLuaMe@32:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@32
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@32:

; 153  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2)));

	push	4
	push	esi
	call	_lua_tointeger
	push	3
	push	esi
	mov	ebx, eax
	call	_lua_toboolean
	test	eax, eax
	setne	al
	push	2
	push	esi
	mov	BYTE PTR $T245866[esp+44], al
	call	_lua_tointeger
	mov	ecx, DWORD PTR $T245866[esp+44]
	add	esp, 24					; 00000018H
	push	ebx
	push	ecx
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+28]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 154  : 
; 155  : 	return 1;

	mov	eax, 1
	pop	ebx

; 156  : }

	pop	ecx
	ret	0
??$BasicLuaMethod@HW4UnitTypes@@_NPAVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4UnitTypes@@_NPAVCvPlot@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum UnitTypes,bool,CvPlot *>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@H_NPAVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEH_NPAVCvPlot@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,bool,CvPlot *>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@H_NPAVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEH_NPAVCvPlot@@@Z@Z
_TEXT	SEGMENT
$T245911 = -4						; size = 1
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@H_NPAVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEH_NPAVCvPlot@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,bool,CvPlot *>, COMDAT

; 140  : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 141  : 	const int idx = Derived::GetStartingArgIndex();
; 142  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@33
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@33
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@33
	xor	bl, bl
$LN7@BasicLuaMe@33:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@33
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@33:

; 143  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	push	3
	push	esi
	call	_lua_tointeger
	push	2
	push	esi
	mov	ebx, eax
	call	_lua_toboolean
	add	esp, 16					; 00000010H
	test	eax, eax
	setne	al
	mov	BYTE PTR $T245911[esp+20], al
	mov	ecx, DWORD PTR $T245911[esp+20]
	push	ebx
	push	ecx
	mov	ecx, edi
	call	DWORD PTR _func$[esp+24]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 144  : 
; 145  : 	return 1;

	mov	eax, 1
	pop	ebx

; 146  : }

	pop	ecx
	ret	0
??$BasicLuaMethod@H_NPAVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEH_NPAVCvPlot@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,bool,CvPlot *>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@H_NPAVCvCity@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEH_NPAVCvCity@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,bool,CvCity *>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@H_NPAVCvCity@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEH_NPAVCvCity@@@Z@Z
_TEXT	SEGMENT
$T245952 = -4						; size = 1
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@H_NPAVCvCity@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEH_NPAVCvCity@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,bool,CvCity *>, COMDAT

; 140  : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 141  : 	const int idx = Derived::GetStartingArgIndex();
; 142  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@34
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@34
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@34
	xor	bl, bl
$LN7@BasicLuaMe@34:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@34
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@34:

; 143  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	push	3
	push	esi
	call	_lua_tointeger
	push	2
	push	esi
	mov	ebx, eax
	call	_lua_toboolean
	add	esp, 16					; 00000010H
	test	eax, eax
	setne	al
	mov	BYTE PTR $T245952[esp+20], al
	mov	ecx, DWORD PTR $T245952[esp+20]
	push	ebx
	push	ecx
	mov	ecx, edi
	call	DWORD PTR _func$[esp+24]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 144  : 
; 145  : 	return 1;

	mov	eax, 1
	pop	ebx

; 146  : }

	pop	ecx
	ret	0
??$BasicLuaMethod@H_NPAVCvCity@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEH_NPAVCvCity@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,bool,CvCity *>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4BuildingTypes@@_NPAVCvCity@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4BuildingTypes@@_NPAVCvCity@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum BuildingTypes,bool,CvCity *>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4BuildingTypes@@_NPAVCvCity@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4BuildingTypes@@_NPAVCvCity@@@Z@Z
_TEXT	SEGMENT
$T245993 = -4						; size = 1
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4BuildingTypes@@_NPAVCvCity@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4BuildingTypes@@_NPAVCvCity@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum BuildingTypes,bool,CvCity *>, COMDAT

; 150  : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 151  : 	const int idx = Derived::GetStartingArgIndex();
; 152  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@35
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@35
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@35
	xor	bl, bl
$LN7@BasicLuaMe@35:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@35
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@35:

; 153  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2)));

	push	4
	push	esi
	call	_lua_tointeger
	push	3
	push	esi
	mov	ebx, eax
	call	_lua_toboolean
	test	eax, eax
	setne	al
	push	2
	push	esi
	mov	BYTE PTR $T245993[esp+44], al
	call	_lua_tointeger
	mov	ecx, DWORD PTR $T245993[esp+44]
	add	esp, 24					; 00000018H
	push	ebx
	push	ecx
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+28]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 154  : 
; 155  : 	return 1;

	mov	eax, 1
	pop	ebx

; 156  : }

	pop	ecx
	ret	0
??$BasicLuaMethod@HW4BuildingTypes@@_NPAVCvCity@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4BuildingTypes@@_NPAVCvCity@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum BuildingTypes,bool,CvCity *>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4ImprovementTypes@@_NPAVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4ImprovementTypes@@_NPAVCvPlot@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum ImprovementTypes,bool,CvPlot *>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4ImprovementTypes@@_NPAVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4ImprovementTypes@@_NPAVCvPlot@@@Z@Z
_TEXT	SEGMENT
$T246038 = -4						; size = 1
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4ImprovementTypes@@_NPAVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4ImprovementTypes@@_NPAVCvPlot@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum ImprovementTypes,bool,CvPlot *>, COMDAT

; 150  : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 151  : 	const int idx = Derived::GetStartingArgIndex();
; 152  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@36
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@36
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@36
	xor	bl, bl
$LN7@BasicLuaMe@36:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@36
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@36:

; 153  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2)));

	push	4
	push	esi
	call	_lua_tointeger
	push	3
	push	esi
	mov	ebx, eax
	call	_lua_toboolean
	test	eax, eax
	setne	al
	push	2
	push	esi
	mov	BYTE PTR $T246038[esp+44], al
	call	_lua_tointeger
	mov	ecx, DWORD PTR $T246038[esp+44]
	add	esp, 24					; 00000018H
	push	ebx
	push	ecx
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+28]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 154  : 
; 155  : 	return 1;

	mov	eax, 1
	pop	ebx

; 156  : }

	pop	ecx
	ret	0
??$BasicLuaMethod@HW4ImprovementTypes@@_NPAVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4ImprovementTypes@@_NPAVCvPlot@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum ImprovementTypes,bool,CvPlot *>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4RouteTypes@@_NPAVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4RouteTypes@@_NPAVCvPlot@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum RouteTypes,bool,CvPlot *>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4RouteTypes@@_NPAVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4RouteTypes@@_NPAVCvPlot@@@Z@Z
_TEXT	SEGMENT
$T246083 = -4						; size = 1
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4RouteTypes@@_NPAVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4RouteTypes@@_NPAVCvPlot@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum RouteTypes,bool,CvPlot *>, COMDAT

; 150  : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 151  : 	const int idx = Derived::GetStartingArgIndex();
; 152  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@37
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@37
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@37
	xor	bl, bl
$LN7@BasicLuaMe@37:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@37
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@37:

; 153  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2)));

	push	4
	push	esi
	call	_lua_tointeger
	push	3
	push	esi
	mov	ebx, eax
	call	_lua_toboolean
	test	eax, eax
	setne	al
	push	2
	push	esi
	mov	BYTE PTR $T246083[esp+44], al
	call	_lua_tointeger
	mov	ecx, DWORD PTR $T246083[esp+44]
	add	esp, 24					; 00000018H
	push	ebx
	push	ecx
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+28]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 154  : 
; 155  : 	return 1;

	mov	eax, 1
	pop	ebx

; 156  : }

	pop	ecx
	ret	0
??$BasicLuaMethod@HW4RouteTypes@@_NPAVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4RouteTypes@@_NPAVCvPlot@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum RouteTypes,bool,CvPlot *>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4TechTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum TechTypes,bool>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4TechTypes@@_N@Z@Z
_TEXT	SEGMENT
$T246124 = -4						; size = 1
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4TechTypes@@_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum TechTypes,bool>, COMDAT

; 140  : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 141  : 	const int idx = Derived::GetStartingArgIndex();
; 142  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@38
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@38
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@38
	xor	bl, bl
$LN7@BasicLuaMe@38:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@38
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@38:

; 143  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	push	3
	push	esi
	call	_lua_toboolean
	test	eax, eax
	setne	al
	push	2
	push	esi
	mov	BYTE PTR $T246124[esp+36], al
	call	_lua_tointeger
	mov	ecx, DWORD PTR $T246124[esp+36]
	add	esp, 16					; 00000010H
	push	ecx
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+24]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 144  : 
; 145  : 	return 1;

	mov	eax, 1
	pop	ebx

; 146  : }

	pop	ecx
	ret	0
??$BasicLuaMethod@HW4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4TechTypes@@_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum TechTypes,bool>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4HurryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum HurryTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4HurryTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4HurryTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum HurryTypes>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@39
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@39
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@39
	xor	bl, bl
$LN7@BasicLuaMe@39:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@39
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@39:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@HW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4HurryTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum HurryTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@I@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEIXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<unsigned int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@I@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEIXZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@I@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEIXZ@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<unsigned int>, COMDAT

; 69   : {

	push	ebx
	push	ebp
	push	esi

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@BasicLuaMe@40
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@BasicLuaMe@40
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@BasicLuaMe@40
	xor	bl, bl
$LN5@BasicLuaMe@40:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@BasicLuaMe@40
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@BasicLuaMe@40:

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, edi
	call	DWORD PTR _func$[esp+12]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 72   : 
; 73   : 	return 1;

	mov	eax, 1
	pop	ebx

; 74   : }

	ret	0
??$BasicLuaMethod@I@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEIXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<unsigned int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@H_N_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEH_N1@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,bool,bool>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@H_N_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEH_N1@Z@Z
_TEXT	SEGMENT
$T246232 = -8						; size = 1
$T246236 = -4						; size = 1
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@H_N_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEH_N1@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,bool,bool>, COMDAT

; 88   : {

	sub	esp, 8
	push	ebx
	push	ebp
	push	esi

; 89   : 	const int idx = Derived::GetStartingArgIndex();
; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+16]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@41
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@41
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@41
	xor	bl, bl
$LN7@BasicLuaMe@41:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@41
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@41:

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	push	3
	push	esi
	call	_lua_toboolean
	test	eax, eax
	setne	al
	push	2
	push	esi
	mov	BYTE PTR $T246232[esp+40], al
	call	_lua_toboolean
	mov	edx, DWORD PTR $T246232[esp+40]
	add	esp, 16					; 00000010H
	test	eax, eax
	setne	cl
	mov	BYTE PTR $T246236[esp+24], cl
	mov	eax, DWORD PTR $T246236[esp+24]
	push	edx
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+28]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 92   : 
; 93   : 	return 1;

	mov	eax, 1
	pop	ebx

; 94   : }

	add	esp, 8
	ret	0
??$BasicLuaMethod@H_N_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEH_N1@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,bool,bool>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4EndTurnBlockingTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4EndTurnBlockingTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum EndTurnBlockingTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4EndTurnBlockingTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4EndTurnBlockingTypes@@XZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4EndTurnBlockingTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4EndTurnBlockingTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum EndTurnBlockingTypes>, COMDAT

; 69   : {

	push	ebx
	push	ebp
	push	esi

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@BasicLuaMe@42
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@BasicLuaMe@42
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@BasicLuaMe@42
	xor	bl, bl
$LN5@BasicLuaMe@42:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@BasicLuaMe@42
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@BasicLuaMe@42:

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, edi
	call	DWORD PTR _func$[esp+12]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 72   : 
; 73   : 	return 1;

	mov	eax, 1
	pop	ebx

; 74   : }

	ret	0
??$BasicLuaMethod@W4EndTurnBlockingTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4EndTurnBlockingTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum EndTurnBlockingTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4PlayerTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PlayerTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4PlayerTypes@@XZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4PlayerTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PlayerTypes>, COMDAT

; 69   : {

	push	ebx
	push	ebp
	push	esi

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@BasicLuaMe@43
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@BasicLuaMe@43
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@BasicLuaMe@43
	xor	bl, bl
$LN5@BasicLuaMe@43:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@BasicLuaMe@43
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@BasicLuaMe@43:

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, edi
	call	DWORD PTR _func$[esp+12]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 72   : 
; 73   : 	return 1;

	mov	eax, 1
	pop	ebx

; 74   : }

	ret	0
??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4PlayerTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PlayerTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4HandicapTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4HandicapTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum HandicapTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4HandicapTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4HandicapTypes@@XZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4HandicapTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4HandicapTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum HandicapTypes>, COMDAT

; 69   : {

	push	ebx
	push	ebp
	push	esi

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@BasicLuaMe@44
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@BasicLuaMe@44
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@BasicLuaMe@44
	xor	bl, bl
$LN5@BasicLuaMe@44:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@BasicLuaMe@44
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@BasicLuaMe@44:

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, edi
	call	DWORD PTR _func$[esp+12]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 72   : 
; 73   : 	return 1;

	mov	eax, 1
	pop	ebx

; 74   : }

	ret	0
??$BasicLuaMethod@W4HandicapTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4HandicapTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum HandicapTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4CivilizationTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum CivilizationTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4CivilizationTypes@@XZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4CivilizationTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum CivilizationTypes>, COMDAT

; 69   : {

	push	ebx
	push	ebp
	push	esi

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@BasicLuaMe@45
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@BasicLuaMe@45
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@BasicLuaMe@45
	xor	bl, bl
$LN5@BasicLuaMe@45:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@BasicLuaMe@45
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@BasicLuaMe@45:

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, edi
	call	DWORD PTR _func$[esp+12]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 72   : 
; 73   : 	return 1;

	mov	eax, 1
	pop	ebx

; 74   : }

	ret	0
??$BasicLuaMethod@W4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4CivilizationTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum CivilizationTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4LeaderHeadTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4LeaderHeadTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum LeaderHeadTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4LeaderHeadTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4LeaderHeadTypes@@XZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4LeaderHeadTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4LeaderHeadTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum LeaderHeadTypes>, COMDAT

; 69   : {

	push	ebx
	push	ebp
	push	esi

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@BasicLuaMe@46
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@BasicLuaMe@46
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@BasicLuaMe@46
	xor	bl, bl
$LN5@BasicLuaMe@46:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@BasicLuaMe@46
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@BasicLuaMe@46:

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, edi
	call	DWORD PTR _func$[esp+12]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 72   : 
; 73   : 	return 1;

	mov	eax, 1
	pop	ebx

; 74   : }

	ret	0
??$BasicLuaMethod@W4LeaderHeadTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4LeaderHeadTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum LeaderHeadTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4LeaderHeadTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4LeaderHeadTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum LeaderHeadTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4LeaderHeadTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4LeaderHeadTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4LeaderHeadTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4LeaderHeadTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum LeaderHeadTypes>, COMDAT

; 230  : {

	push	ebx
	push	ebp
	push	esi

; 231  : 	const int idx = Derived::GetStartingArgIndex();
; 232  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@47
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@47
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@47
	xor	bl, bl
$LN7@BasicLuaMe@47:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@47
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@47:

; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	pop	edi
	pop	esi
	pop	ebp

; 234  : 	return 0;

	xor	eax, eax
	pop	ebx

; 235  : }

	ret	0
??$BasicLuaMethod@W4LeaderHeadTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4LeaderHeadTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum LeaderHeadTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4EraTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4EraTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum EraTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4EraTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4EraTypes@@XZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4EraTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4EraTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum EraTypes>, COMDAT

; 69   : {

	push	ebx
	push	ebp
	push	esi

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@BasicLuaMe@48
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@BasicLuaMe@48
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@BasicLuaMe@48
	xor	bl, bl
$LN5@BasicLuaMe@48:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@BasicLuaMe@48
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@BasicLuaMe@48:

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, edi
	call	DWORD PTR _func$[esp+12]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 72   : 
; 73   : 	return 1;

	mov	eax, 1
	pop	ebx

; 74   : }

	ret	0
??$BasicLuaMethod@W4EraTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4EraTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum EraTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4TeamTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum TeamTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4TeamTypes@@XZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4TeamTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum TeamTypes>, COMDAT

; 69   : {

	push	ebx
	push	ebp
	push	esi

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@BasicLuaMe@49
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@BasicLuaMe@49
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@BasicLuaMe@49
	xor	bl, bl
$LN5@BasicLuaMe@49:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@BasicLuaMe@49
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@BasicLuaMe@49:

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, edi
	call	DWORD PTR _func$[esp+12]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 72   : 
; 73   : 	return 1;

	mov	eax, 1
	pop	ebx

; 74   : }

	ret	0
??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4TeamTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum TeamTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@H_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEH_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,bool>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@H_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEH_N@Z@Z
_TEXT	SEGMENT
$T246515 = -4						; size = 1
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@H_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEH_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,bool>, COMDAT

; 78   : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@50
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@50
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@50
	xor	bl, bl
$LN7@BasicLuaMe@50:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@50
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@50:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	al
	mov	BYTE PTR $T246515[esp+20], al
	mov	ecx, DWORD PTR $T246515[esp+20]
	push	ecx
	mov	ecx, edi
	call	DWORD PTR _func$[esp+20]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	pop	ecx
	ret	0
??$BasicLuaMethod@H_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEH_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,bool>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4PlayerProximityTypes@@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4PlayerProximityTypes@@W4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PlayerProximityTypes,enum PlayerTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4PlayerProximityTypes@@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4PlayerProximityTypes@@W4PlayerTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4PlayerProximityTypes@@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4PlayerProximityTypes@@W4PlayerTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PlayerProximityTypes,enum PlayerTypes>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@51
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@51
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@51
	xor	bl, bl
$LN7@BasicLuaMe@51:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@51
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@51:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@W4PlayerProximityTypes@@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4PlayerProximityTypes@@W4PlayerTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PlayerProximityTypes,enum PlayerTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PlayerTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4PlayerTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4PlayerTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PlayerTypes>, COMDAT

; 230  : {

	push	ebx
	push	ebp
	push	esi

; 231  : 	const int idx = Derived::GetStartingArgIndex();
; 232  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@52
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@52
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@52
	xor	bl, bl
$LN7@BasicLuaMe@52:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@52
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@52:

; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	pop	edi
	pop	esi
	pop	ebp

; 234  : 	return 0;

	xor	eax, eax
	pop	ebx

; 235  : }

	ret	0
??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4PlayerTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PlayerTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4UnitTypes@@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4UnitTypes@@W4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum UnitTypes,enum PlayerTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4UnitTypes@@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4UnitTypes@@W4PlayerTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4UnitTypes@@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4UnitTypes@@W4PlayerTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum UnitTypes,enum PlayerTypes>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@53
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@53
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@53
	xor	bl, bl
$LN7@BasicLuaMe@53:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@53
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@53:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@W4UnitTypes@@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4UnitTypes@@W4PlayerTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum UnitTypes,enum PlayerTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4PlayerOptionTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4PlayerOptionTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum PlayerOptionTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_NW4PlayerOptionTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4PlayerOptionTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4PlayerOptionTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4PlayerOptionTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum PlayerOptionTypes>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@54
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@54
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@54
	xor	bl, bl
$LN7@BasicLuaMe@54:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@54
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@54:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@_NW4PlayerOptionTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4PlayerOptionTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum PlayerOptionTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4PlayerOptionTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4PlayerOptionTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PlayerOptionTypes,bool>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4PlayerOptionTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4PlayerOptionTypes@@_N@Z@Z
_TEXT	SEGMENT
$T246695 = -4						; size = 1
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4PlayerOptionTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4PlayerOptionTypes@@_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PlayerOptionTypes,bool>, COMDAT

; 239  : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 240  : 	const int idx = Derived::GetStartingArgIndex();
; 241  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@55
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@55
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@55
	xor	bl, bl
$LN7@BasicLuaMe@55:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@55
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@55:

; 242  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1));

	push	3
	push	esi
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	al
	mov	BYTE PTR $T246695[esp+20], al
	mov	ecx, DWORD PTR $T246695[esp+20]
	push	ecx
	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+24]
	pop	edi
	pop	esi
	pop	ebp

; 243  : 	return 0;

	xor	eax, eax
	pop	ebx

; 244  : }

	pop	ecx
	ret	0
??$BasicLuaMethod@W4PlayerOptionTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4PlayerOptionTypes@@_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PlayerOptionTypes,bool>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4ResourceTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4ResourceTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum ResourceTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4ResourceTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4ResourceTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4ResourceTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4ResourceTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum ResourceTypes>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@56
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@56
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@56
	xor	bl, bl
$LN7@BasicLuaMe@56:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@56
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@56:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@HW4ResourceTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4ResourceTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum ResourceTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4ResourceTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4ResourceTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum ResourceTypes,bool>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4ResourceTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4ResourceTypes@@_N@Z@Z
_TEXT	SEGMENT
$T246768 = -4						; size = 1
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4ResourceTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4ResourceTypes@@_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum ResourceTypes,bool>, COMDAT

; 88   : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 89   : 	const int idx = Derived::GetStartingArgIndex();
; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@57
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@57
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@57
	xor	bl, bl
$LN7@BasicLuaMe@57:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@57
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@57:

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	push	3
	push	esi
	call	_lua_toboolean
	test	eax, eax
	setne	al
	push	2
	push	esi
	mov	BYTE PTR $T246768[esp+36], al
	call	_lua_tointeger
	mov	ecx, DWORD PTR $T246768[esp+36]
	add	esp, 16					; 00000010H
	push	ecx
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+24]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 92   : 
; 93   : 	return 1;

	mov	eax, 1
	pop	ebx

; 94   : }

	pop	ecx
	ret	0
??$BasicLuaMethod@HW4ResourceTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4ResourceTypes@@_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum ResourceTypes,bool>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4ResourceTypes@@H_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4ResourceTypes@@H_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum ResourceTypes,int,bool>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4ResourceTypes@@H_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4ResourceTypes@@H_N@Z@Z
_TEXT	SEGMENT
$T246809 = -4						; size = 1
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4ResourceTypes@@H_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4ResourceTypes@@H_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum ResourceTypes,int,bool>, COMDAT

; 249  : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 250  : 	const int idx = Derived::GetStartingArgIndex();
; 251  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@58
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@58
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@58
	xor	bl, bl
$LN7@BasicLuaMe@58:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@58
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@58:

; 252  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2));

	push	4
	push	esi
	call	_lua_toboolean
	test	eax, eax
	setne	al
	push	3
	push	esi
	mov	BYTE PTR $T246809[esp+36], al
	call	_lua_tointeger
	mov	ecx, DWORD PTR $T246809[esp+36]
	add	esp, 16					; 00000010H
	push	ecx
	push	eax
	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+28]
	pop	edi
	pop	esi
	pop	ebp

; 253  : 	return 0;

	xor	eax, eax
	pop	ebx

; 254  : }

	pop	ecx
	ret	0
??$BasicLuaMethod@W4ResourceTypes@@H_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4ResourceTypes@@H_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum ResourceTypes,int,bool>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4ImprovementTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4ImprovementTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum ImprovementTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4ImprovementTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4ImprovementTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4ImprovementTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4ImprovementTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum ImprovementTypes>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@59
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@59
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@59
	xor	bl, bl
$LN7@BasicLuaMe@59:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@59
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@59:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@HW4ImprovementTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4ImprovementTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum ImprovementTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4BuildingTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum BuildingTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_NW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4BuildingTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4BuildingTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum BuildingTypes>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@60
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@60
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@60
	xor	bl, bl
$LN7@BasicLuaMe@60:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@60
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@60:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@_NW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4BuildingTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum BuildingTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4UnitClassTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum UnitClassTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4UnitClassTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4UnitClassTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum UnitClassTypes>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@61
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@61
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@61
	xor	bl, bl
$LN7@BasicLuaMe@61:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@61
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@61:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@HW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4UnitClassTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum UnitClassTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4UnitClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4UnitClassTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum UnitClassTypes,int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_NW4UnitClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4UnitClassTypes@@H@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4UnitClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4UnitClassTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum UnitClassTypes,int>, COMDAT

; 88   : {

	push	ebx
	push	ebp
	push	esi

; 89   : 	const int idx = Derived::GetStartingArgIndex();
; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@62
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@62
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@62
	xor	bl, bl
$LN7@BasicLuaMe@62:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@62
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@62:

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	push	3
	push	esi
	call	_lua_tointeger
	push	2
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H
	push	ebx
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+20]
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 92   : 
; 93   : 	return 1;

	mov	eax, 1
	pop	ebx

; 94   : }

	ret	0
??$BasicLuaMethod@_NW4UnitClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4UnitClassTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum UnitClassTypes,int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4BuildingClassTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum BuildingClassTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4BuildingClassTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4BuildingClassTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum BuildingClassTypes>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@63
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@63
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@63
	xor	bl, bl
$LN7@BasicLuaMe@63:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@63
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@63:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@HW4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4BuildingClassTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum BuildingClassTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4BuildingClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4BuildingClassTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum BuildingClassTypes,int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_NW4BuildingClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4BuildingClassTypes@@H@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4BuildingClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4BuildingClassTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum BuildingClassTypes,int>, COMDAT

; 88   : {

	push	ebx
	push	ebp
	push	esi

; 89   : 	const int idx = Derived::GetStartingArgIndex();
; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@64
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@64
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@64
	xor	bl, bl
$LN7@BasicLuaMe@64:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@64
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@64:

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	push	3
	push	esi
	call	_lua_tointeger
	push	2
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H
	push	ebx
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+20]
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 92   : 
; 93   : 	return 1;

	mov	eax, 1
	pop	ebx

; 94   : }

	ret	0
??$BasicLuaMethod@_NW4BuildingClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4BuildingClassTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum BuildingClassTypes,int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4HurryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum HurryTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_NW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4HurryTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4HurryTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum HurryTypes>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@65
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@65
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@65
	xor	bl, bl
$LN7@BasicLuaMe@65:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@65
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@65:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@_NW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4HurryTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum HurryTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4TechTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum TechTypes,bool>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4TechTypes@@_N@Z@Z
_TEXT	SEGMENT
$T247116 = -4						; size = 1
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4TechTypes@@_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum TechTypes,bool>, COMDAT

; 239  : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 240  : 	const int idx = Derived::GetStartingArgIndex();
; 241  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@66
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@66
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@66
	xor	bl, bl
$LN7@BasicLuaMe@66:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@66
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@66:

; 242  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1));

	push	3
	push	esi
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	al
	mov	BYTE PTR $T247116[esp+20], al
	mov	ecx, DWORD PTR $T247116[esp+20]
	push	ecx
	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+24]
	pop	edi
	pop	esi
	pop	ebp

; 243  : 	return 0;

	xor	eax, eax
	pop	ebx

; 244  : }

	pop	ecx
	ret	0
??$BasicLuaMethod@W4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4TechTypes@@_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum TechTypes,bool>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4TechTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum TechTypes,bool>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4TechTypes@@_N@Z@Z
_TEXT	SEGMENT
$T247152 = -4						; size = 1
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4TechTypes@@_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum TechTypes,bool>, COMDAT

; 88   : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 89   : 	const int idx = Derived::GetStartingArgIndex();
; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@67
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@67
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@67
	xor	bl, bl
$LN7@BasicLuaMe@67:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@67
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@67:

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	push	3
	push	esi
	call	_lua_toboolean
	test	eax, eax
	setne	al
	push	2
	push	esi
	mov	BYTE PTR $T247152[esp+36], al
	call	_lua_tointeger
	mov	ecx, DWORD PTR $T247152[esp+36]
	add	esp, 16					; 00000010H
	push	ecx
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+24]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 92   : 
; 93   : 	return 1;

	mov	eax, 1
	pop	ebx

; 94   : }

	pop	ecx
	ret	0
??$BasicLuaMethod@HW4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4TechTypes@@_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum TechTypes,bool>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4TechTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum TechTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4TechTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4TechTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum TechTypes>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@68
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@68
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@68
	xor	bl, bl
$LN7@BasicLuaMe@68:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@68
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@68:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4TechTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum TechTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AE_NW4TechTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum TechTypes,bool>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_NW4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AE_NW4TechTypes@@_N@Z@Z
_TEXT	SEGMENT
$T247230 = -4						; size = 1
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AE_NW4TechTypes@@_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum TechTypes,bool>, COMDAT

; 140  : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 141  : 	const int idx = Derived::GetStartingArgIndex();
; 142  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@69
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@69
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@69
	xor	bl, bl
$LN7@BasicLuaMe@69:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@69
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@69:

; 143  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	push	3
	push	esi
	call	_lua_toboolean
	test	eax, eax
	setne	al
	push	2
	push	esi
	mov	BYTE PTR $T247230[esp+36], al
	call	_lua_tointeger
	mov	ecx, DWORD PTR $T247230[esp+36]
	add	esp, 16					; 00000010H
	push	ecx
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+24]
	movzx	edx, al
	push	edx
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 144  : 
; 145  : 	return 1;

	mov	eax, 1
	pop	ebx

; 146  : }

	pop	ecx
	ret	0
??$BasicLuaMethod@_NW4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AE_NW4TechTypes@@_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum TechTypes,bool>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4TechTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum TechTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4TechTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4TechTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum TechTypes>, COMDAT

; 230  : {

	push	ebx
	push	ebp
	push	esi

; 231  : 	const int idx = Derived::GetStartingArgIndex();
; 232  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@70
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@70
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@70
	xor	bl, bl
$LN7@BasicLuaMe@70:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@70
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@70:

; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	pop	edi
	pop	esi
	pop	ebp

; 234  : 	return 0;

	xor	eax, eax
	pop	ebx

; 235  : }

	ret	0
??$BasicLuaMethod@W4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4TechTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum TechTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HHHH_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHHHH_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,int,int,int,bool>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HHHH_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHHHH_N@Z@Z
_TEXT	SEGMENT
$T247303 = -4						; size = 1
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HHHH_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHHHH_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,int,int,int,bool>, COMDAT

; 160  : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 161  : 	const int idx = Derived::GetStartingArgIndex();
; 162  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@71
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@71
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@71
	xor	bl, bl
$LN7@BasicLuaMe@71:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@71
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@71:

; 163  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2), CvLuaArgs::toValue<arg4>(L, idx + 3)));

	push	5
	push	esi
	call	_lua_toboolean
	test	eax, eax
	setne	al
	push	4
	push	esi
	mov	BYTE PTR $T247303[esp+36], al
	call	_lua_tointeger
	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	push	2
	push	esi
	mov	ebp, eax
	call	_lua_tointeger
	mov	ecx, DWORD PTR $T247303[esp+52]
	add	esp, 32					; 00000020H
	push	ecx
	push	ebx
	push	ebp
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+32]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 164  : 
; 165  : 	return 1;

	mov	eax, 1
	pop	ebx

; 166  : }

	pop	ecx
	ret	0
??$BasicLuaMethod@HHHH_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHHHH_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,int,int,int,bool>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AE_NXZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AE_NXZ@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>, COMDAT

; 121  : {

	push	ebx
	push	ebp
	push	esi

; 122  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@BasicLuaMe@72
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@BasicLuaMe@72
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@BasicLuaMe@72
	xor	bl, bl
$LN5@BasicLuaMe@72:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@BasicLuaMe@72
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@BasicLuaMe@72:

; 123  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, edi
	call	DWORD PTR _func$[esp+12]
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 124  : 
; 125  : 	return 1;

	mov	eax, 1
	pop	ebx

; 126  : }

	ret	0
??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AE_NXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<Opinion,std::allocator<Opinion> >::operator!=
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??9?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<Opinion,std::allocator<Opinion> >::operator!=, COMDAT
; _this$ = ecx

; 216  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	setne	cl
	mov	al, cl

; 217  : 		}

	ret	4
??9?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<Opinion,std::allocator<Opinion> >::operator!=
_TEXT	ENDS
PUBLIC	??$_Copy_opt@PAVCvString@@PAV1@Urandom_access_iterator_tag@std@@@std@@YAPAVCvString@@PAV1@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<CvString *,CvString *,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Copy_opt@PAVCvString@@PAV1@Urandom_access_iterator_tag@std@@@std@@YAPAVCvString@@PAV1@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Copy_opt@PAVCvString@@PAV1@Urandom_access_iterator_tag@std@@@std@@YAPAVCvString@@PAV1@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_opt<CvString *,CvString *,std::random_access_iterator_tag>, COMDAT

; 2469 : 	{	// copy [_First, _Last) to [_Dest, ...), arbitrary iterators

	push	ebx

; 2470 : 	_DEBUG_RANGE(_First, _Last);
; 2471 : 	for (; _First != _Last; ++_Dest, ++_First)

	mov	ebx, DWORD PTR __Last$[esp]
	push	esi
	mov	esi, DWORD PTR __First$[esp+4]
	cmp	esi, ebx
	je	SHORT $LN10@Copy_opt
	push	edi
	mov	edi, DWORD PTR __Dest$[esp+8]
$LL3@Copy_opt:

; 2472 : 		*_Dest = *_First;

	push	esi
	mov	ecx, edi
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	add	esi, 28					; 0000001cH
	add	edi, 28					; 0000001cH
	cmp	esi, ebx
	jne	SHORT $LL3@Copy_opt

; 2473 : 	return (_Dest);

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx

; 2474 : 	}

	ret	0
$LN10@Copy_opt:

; 2473 : 	return (_Dest);

	mov	eax, DWORD PTR __Dest$[esp+4]
	pop	esi
	pop	ebx

; 2474 : 	}

	ret	0
??$_Copy_opt@PAVCvString@@PAV1@Urandom_access_iterator_tag@std@@@std@@YAPAVCvString@@PAV1@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_opt<CvString *,CvString *,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	??$_Fill@PAUOpinion@@U1@@std@@YAXPAUOpinion@@0ABU1@@Z ; std::_Fill<Opinion *,Opinion>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Fill@PAUOpinion@@U1@@std@@YAXPAUOpinion@@0ABU1@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$_Fill@PAUOpinion@@U1@@std@@YAXPAUOpinion@@0ABU1@@Z PROC ; std::_Fill<Opinion *,Opinion>, COMDAT

; 3156 : 	{	// copy _Val through [_First, _Last)

	push	ebx

; 3157 : 	_DEBUG_RANGE(_First, _Last);
; 3158 : 	for (; _First != _Last; ++_First)

	mov	ebx, DWORD PTR __Last$[esp]
	push	esi
	mov	esi, DWORD PTR __First$[esp+4]
	cmp	esi, ebx
	je	SHORT $LN1@Fill
	push	ebp
	mov	ebp, DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	push	edi
	mov	edi, DWORD PTR __Val$[esp+12]
	npad	6
$LL3@Fill:

; 3159 : 		*_First = _Val;

	push	edi
	mov	ecx, esi
	call	ebp
	mov	eax, DWORD PTR [edi+80]
	mov	DWORD PTR [esi+80], eax
	add	esi, 84					; 00000054H
	cmp	esi, ebx
	jne	SHORT $LL3@Fill
	pop	edi
	pop	ebp
$LN1@Fill:
	pop	esi
	pop	ebx

; 3160 : 	}

	ret	0
??$_Fill@PAUOpinion@@U1@@std@@YAXPAUOpinion@@0ABU1@@Z ENDP ; std::_Fill<Opinion *,Opinion>
_TEXT	ENDS
PUBLIC	??$_Move_backward_opt@PAUOpinion@@PAU1@Urandom_access_iterator_tag@std@@U_Undefined_move_tag@3@@std@@YAPAUOpinion@@PAU1@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Move_backward_opt<Opinion *,Opinion *,std::random_access_iterator_tag,std::_Undefined_move_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Move_backward_opt@PAUOpinion@@PAU1@Urandom_access_iterator_tag@std@@U_Undefined_move_tag@3@@std@@YAPAUOpinion@@PAU1@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T247376 = -4						; size = 1
__Cat$247381 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__First_dest_cat$ = 20					; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Move_backward_opt@PAUOpinion@@PAU1@Urandom_access_iterator_tag@std@@U_Undefined_move_tag@3@@std@@YAPAUOpinion@@PAU1@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Move_backward_opt<Opinion *,Opinion *,std::random_access_iterator_tag,std::_Undefined_move_tag>, COMDAT

; 2752 : 	{	// move defaults to copy if there is not a more effecient way

	push	ecx

; 2753 : 	return _Copy_backward_opt(_First, _Last, _Dest,
; 2754 : 		_First_dest_cat, _Ptr_cat(_First, _Dest), _Range_checked_iterator_tag());

	mov	edx, DWORD PTR __First_dest_cat$[esp]
	mov	BYTE PTR $T247376[esp+4], 0
	mov	eax, DWORD PTR $T247376[esp+4]
	mov	ecx, DWORD PTR __Cat$247381[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Copy_backward_opt@PAUOpinion@@PAU1@Urandom_access_iterator_tag@std@@@std@@YAPAUOpinion@@PAU1@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<Opinion *,Opinion *,std::random_access_iterator_tag>

; 2755 : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$_Move_backward_opt@PAUOpinion@@PAU1@Urandom_access_iterator_tag@std@@U_Undefined_move_tag@3@@std@@YAPAUOpinion@@PAU1@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Move_backward_opt<Opinion *,Opinion *,std::random_access_iterator_tag,std::_Undefined_move_tag>
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@W4PolicyTypes@@@std@@QAEXPAW4PolicyTypes@@@Z ; std::allocator<enum PolicyTypes>::destroy
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?destroy@?$allocator@W4PolicyTypes@@@std@@QAEXPAW4PolicyTypes@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@W4PolicyTypes@@@std@@QAEXPAW4PolicyTypes@@@Z PROC ; std::allocator<enum PolicyTypes>::destroy, COMDAT
; _this$ = ecx

; 160  : 		_Destroy(_Ptr);
; 161  : 		}

	ret	4
?destroy@?$allocator@W4PolicyTypes@@@std@@QAEXPAW4PolicyTypes@@@Z ENDP ; std::allocator<enum PolicyTypes>::destroy
_TEXT	ENDS
PUBLIC	?construct@?$allocator@UOpinion@@@std@@QAEXPAUOpinion@@ABU3@@Z ; std::allocator<Opinion>::construct
; Function compile flags: /Ogtpy
;	COMDAT ?construct@?$allocator@UOpinion@@@std@@QAEXPAUOpinion@@ABU3@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@UOpinion@@@std@@QAEXPAUOpinion@@ABU3@@Z PROC ; std::allocator<Opinion>::construct, COMDAT
; _this$ = ecx

; 155  : 		_Construct(_Ptr, _Val);

	mov	eax, DWORD PTR __Val$[esp-4]
	mov	ecx, DWORD PTR __Ptr$[esp-4]
	push	eax
	push	ecx
	call	??$_Construct@UOpinion@@U1@@std@@YAXPAUOpinion@@ABU1@@Z ; std::_Construct<Opinion,Opinion>
	add	esp, 8

; 156  : 		}

	ret	8
?construct@?$allocator@UOpinion@@@std@@QAEXPAUOpinion@@ABU3@@Z ENDP ; std::allocator<Opinion>::construct
_TEXT	ENDS
PUBLIC	??$_Destroy@VCvString@@@std@@YAXPAVCvString@@@Z	; std::_Destroy<CvString>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Destroy@VCvString@@@std@@YAXPAVCvString@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@VCvString@@@std@@YAXPAVCvString@@@Z PROC	; std::_Destroy<CvString>, COMDAT

; 59   : 	_DESTRUCTOR(_Ty, _Ptr);

	mov	ecx, DWORD PTR __Ptr$[esp-4]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
??$_Destroy@VCvString@@@std@@YAXPAVCvString@@@Z ENDP	; std::_Destroy<CvString>
_TEXT	ENDS
PUBLIC	??$_Destroy@UOpinion@@@std@@YAXPAUOpinion@@@Z	; std::_Destroy<Opinion>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Destroy@UOpinion@@@std@@YAXPAUOpinion@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@UOpinion@@@std@@YAXPAUOpinion@@@Z PROC	; std::_Destroy<Opinion>, COMDAT

; 59   : 	_DESTRUCTOR(_Ty, _Ptr);

	mov	ecx, DWORD PTR __Ptr$[esp-4]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
??$_Destroy@UOpinion@@@std@@YAXPAUOpinion@@@Z ENDP	; std::_Destroy<Opinion>
_TEXT	ENDS
PUBLIC	??$_Distance2@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0AAHUrandom_access_iterator_tag@0@@Z ; std::_Distance2<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Distance2@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0AAHUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Off$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Distance2@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0AAHUrandom_access_iterator_tag@0@@Z PROC ; std::_Distance2<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int>, COMDAT

; 1867 : 
; 1868 :  #if _HAS_ITERATOR_DEBUGGING
; 1869 : 	if (_First != _Last)
; 1870 : 		{	// check for null pointers
; 1871 : 		_DEBUG_POINTER(_First);
; 1872 : 		_DEBUG_POINTER(_Last);
; 1873 : 		}
; 1874 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1875 : 
; 1876 : 	_Off += _Last - _First;

	mov	ecx, DWORD PTR __Last$[esp-4]
	sub	ecx, DWORD PTR __First$[esp-4]
	mov	eax, 818089009				; 30c30c31H
	imul	ecx
	mov	eax, DWORD PTR __Off$[esp-4]
	sar	edx, 4
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	add	DWORD PTR [eax], ecx

; 1877 : 	}

	ret	0
??$_Distance2@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0AAHUrandom_access_iterator_tag@0@@Z ENDP ; std::_Distance2<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int>
_TEXT	ENDS
EXTRN	?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B:DWORD ; CvPreGame::sr_TeamTypes
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvpregame.h
;	COMDAT ?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z PROC ; CvPreGame::teamType, COMDAT
; _p$ = eax

; 299  : 	if(p >= 0 && p < MAX_PLAYERS)

	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN1@teamType

; 300  : 		return sr_TeamTypes[p];

	mov	ecx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax*4]

; 302  : }

	ret	0
$LN1@teamType:

; 301  : 	return NO_TEAM;

	or	eax, -1

; 302  : }

	ret	0
?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ENDP ; CvPreGame::teamType
_TEXT	ENDS
PUBLIC	??$iter_swap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@PAU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z ; std::iter_swap<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$iter_swap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@PAU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$iter_swap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@PAU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z PROC ; std::iter_swap<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,CvWeightedVector<CvPlot *,800,1>::WeightedElement *>, COMDAT

; 594  : 	swap(*_Left, *_Right);

	mov	eax, DWORD PTR __Left$[esp-4]
	mov	ecx, DWORD PTR __Right$[esp-4]
	cmp	eax, ecx
	je	SHORT $LN3@iter_swap
	mov	edx, DWORD PTR [eax]
	push	esi
	mov	esi, DWORD PTR [eax+4]
	push	edi
	mov	edi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edi
	mov	edi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edi
	pop	edi
	mov	DWORD PTR [ecx+4], esi
	mov	DWORD PTR [ecx], edx
	pop	esi
$LN3@iter_swap:

; 595  : 	}

	ret	0
??$iter_swap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@PAU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z ENDP ; std::iter_swap<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
_TEXT	ENDS
PUBLIC	??$_Construct@VCvString@@V1@@std@@YAXPAVCvString@@ABV1@@Z ; std::_Construct<CvString,CvString>
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvbuildingclasses.h
xdata$x	SEGMENT
__unwindtable$??$_Construct@VCvString@@V1@@std@@YAXPAVCvString@@ABV1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Construct@VCvString@@V1@@std@@YAXPAVCvString@@ABV1@@Z$0
__ehfuncinfo$??$_Construct@VCvString@@V1@@std@@YAXPAVCvString@@ABV1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Construct@VCvString@@V1@@std@@YAXPAVCvString@@ABV1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Construct@VCvString@@V1@@std@@YAXPAVCvString@@ABV1@@Z
_TEXT	SEGMENT
$T247451 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Vptr$ = 8						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@VCvString@@V1@@std@@YAXPAVCvString@@ABV1@@Z PROC ; std::_Construct<CvString,CvString>, COMDAT

; 50   : 	{	// construct object at _Ptr with value _Val

	push	-1
	push	__ehhandler$??$_Construct@VCvString@@V1@@std@@YAXPAVCvString@@ABV1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx

; 51   : 	void _FARQ *_Vptr = _Ptr;

	mov	ecx, DWORD PTR __Ptr$[esp+12]
	mov	DWORD PTR __Vptr$[esp+12], ecx

; 52   : 	::new (_Vptr) _T1(_Val);

	mov	DWORD PTR $T247451[esp+16], ecx
	mov	DWORD PTR __$EHRec$[esp+24], 0
	test	ecx, ecx
	je	SHORT $LN3@Construct@2
	mov	eax, DWORD PTR __Val$[esp+12]
	push	eax
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
$LN3@Construct@2:

; 53   : 	}

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Construct@VCvString@@V1@@std@@YAXPAVCvString@@ABV1@@Z$0:
	mov	eax, DWORD PTR __Vptr$[ebp-4]
	push	eax
	mov	ecx, DWORD PTR $T247451[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Construct@VCvString@@V1@@std@@YAXPAVCvString@@ABV1@@Z:
	mov	eax, OFFSET __ehfuncinfo$??$_Construct@VCvString@@V1@@std@@YAXPAVCvString@@ABV1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Construct@VCvString@@V1@@std@@YAXPAVCvString@@ABV1@@Z ENDP ; std::_Construct<CvString,CvString>
PUBLIC	??$get_temporary_buffer@UOpinion@@@std@@YA?AU?$pair@PAUOpinion@@H@0@H@Z ; std::get_temporary_buffer<Opinion>
EXTRN	??2@YAPAXIABUnothrow_t@std@@@Z:PROC		; operator new
EXTRN	?nothrow@std@@3Unothrow_t@1@B:BYTE		; std::nothrow
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$get_temporary_buffer@UOpinion@@@std@@YA?AU?$pair@PAUOpinion@@H@0@H@Z
_TEXT	SEGMENT
$T247471 = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
$T247475 = 12						; size = 4
__Count$ = 12						; size = 4
??$get_temporary_buffer@UOpinion@@@std@@YA?AU?$pair@PAUOpinion@@H@0@H@Z PROC ; std::get_temporary_buffer<Opinion>, COMDAT

; 19   : 	{	// get raw temporary buffer of up to _Count elements

	sub	esp, 12					; 0000000cH
	push	esi

; 20   : 	_Ty _FARQ *_Pbuf;
; 21   : 
; 22   : 	if (_Count <= 0)

	mov	esi, DWORD PTR __Count$[esp+12]
	test	esi, esi
	jg	SHORT $LN7@get_tempor

; 23   : 		_Count = 0;

	xor	esi, esi
$LN5@get_tempor:

; 26   : 
; 27   : 	for (_Pbuf = 0; 0 < _Count; _Count /= 2)

	xor	ecx, ecx
	test	esi, esi
	jle	SHORT $LN15@get_tempor
$LL4@get_tempor:

; 28   : 		if ((_Pbuf = (_Ty _FARQ *)operator new(
; 29   : 			(_SIZT)_Count * sizeof (_Ty), nothrow)) != 0)

	mov	edx, esi
	imul	edx, 84					; 00000054H
	push	OFFSET ?nothrow@std@@3Unothrow_t@1@B	; std::nothrow
	push	edx
	call	??2@YAPAXIABUnothrow_t@std@@@Z		; operator new
	mov	ecx, eax
	add	esp, 8
	test	ecx, ecx
	jne	SHORT $LN15@get_tempor
	mov	eax, esi
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	esi, eax
	test	esi, esi
	jg	SHORT $LL4@get_tempor
$LN15@get_tempor:

; 30   : 			break;
; 31   : 
; 32   : 	return (pair<_Ty _FARQ *, _PDFT>(_Pbuf, _Count));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp+12]
	mov	DWORD PTR [eax+4], esi
	mov	DWORD PTR [eax], ecx
	pop	esi

; 33   : 	}

	add	esp, 12					; 0000000cH
	ret	0
$LN7@get_tempor:

; 24   : 	else if (((size_t)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	esi
	cmp	eax, 84					; 00000054H
	jae	SHORT $LN5@get_tempor

; 25   : 		_THROW_NCEE(std::bad_alloc, NULL);

	lea	eax, DWORD PTR $T247475[esp+12]
	push	eax
	lea	ecx, DWORD PTR $T247471[esp+20]
	mov	DWORD PTR $T247475[esp+16], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T247471[esp+20]
	push	ecx
	mov	DWORD PTR $T247471[esp+24], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN18@get_tempor:
$LN17@get_tempor:
	int	3
??$get_temporary_buffer@UOpinion@@@std@@YA?AU?$pair@PAUOpinion@@H@0@H@Z ENDP ; std::get_temporary_buffer<Opinion>
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ ; std::_Vector_iterator<Opinion,std::allocator<Opinion> >::_Vector_iterator<Opinion,std::allocator<Opinion> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??0?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ PROC ; std::_Vector_iterator<Opinion,std::allocator<Opinion> >::_Vector_iterator<Opinion,std::allocator<Opinion> >, COMDAT
; _this$ = ecx

; 314  : 	_Vector_iterator()

	mov	eax, ecx
	mov	DWORD PTR [eax], 0

; 315  : 		{	// construct with null vector pointer
; 316  : 		}

	ret	0
??0?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_iterator<Opinion,std::allocator<Opinion> >::_Vector_iterator<Opinion,std::allocator<Opinion> >
_TEXT	ENDS
PUBLIC	??D?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QBEAAUOpinion@@XZ ; std::_Vector_iterator<Opinion,std::allocator<Opinion> >::operator*
; Function compile flags: /Ogtpy
;	COMDAT ??D?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QBEAAUOpinion@@XZ
_TEXT	SEGMENT
??D?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QBEAAUOpinion@@XZ PROC ; std::_Vector_iterator<Opinion,std::allocator<Opinion> >::operator*, COMDAT
; _this$ = ecx

; 339  : 		return ((reference)**(_Mybase *)this);

	mov	eax, DWORD PTR [ecx]

; 340  : 		}

	ret	0
??D?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QBEAAUOpinion@@XZ ENDP ; std::_Vector_iterator<Opinion,std::allocator<Opinion> >::operator*
_TEXT	ENDS
PUBLIC	??0?$_Temp_iterator@UOpinion@@@std@@QAE@ABV01@@Z ; std::_Temp_iterator<Opinion>::_Temp_iterator<Opinion>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??0?$_Temp_iterator@UOpinion@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??0?$_Temp_iterator@UOpinion@@@std@@QAE@ABV01@@Z PROC	; std::_Temp_iterator<Opinion>::_Temp_iterator<Opinion>, COMDAT
; _this$ = ecx

; 535  : 	_Temp_iterator(const _Temp_iterator<_Ty>& _Right)

	mov	eax, ecx

; 536  : 		{	// construct from _Right (share active buffer)
; 537  : 		_Buf._Begin = 0;	// clear stored buffer, for safe destruction

	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx

; 538  : 		_Buf._Current = 0;

	mov	DWORD PTR [eax+4], ecx

; 539  : 		_Buf._Hiwater = 0;

	mov	DWORD PTR [eax+8], ecx

; 540  : 		_Buf._Size = 0;

	mov	DWORD PTR [eax+12], ecx

; 541  : 		*this = _Right;

	mov	ecx, DWORD PTR __Right$[esp-4]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+16], edx

; 542  : 		}

	ret	4
??0?$_Temp_iterator@UOpinion@@@std@@QAE@ABV01@@Z ENDP	; std::_Temp_iterator<Opinion>::_Temp_iterator<Opinion>
_TEXT	ENDS
PUBLIC	??$_Advance@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@H@std@@YAXAAV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@HUrandom_access_iterator_tag@0@@Z ; std::_Advance<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Advance@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@H@std@@YAXAAV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@HUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__Where$ = 8						; size = 4
__Off$ = 12						; size = 4
___formal$ = 16						; size = 1
??$_Advance@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@H@std@@YAXAAV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@HUrandom_access_iterator_tag@0@@Z PROC ; std::_Advance<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int>, COMDAT

; 1822 : 	_Where += _Off;

	mov	ecx, DWORD PTR __Off$[esp-4]
	mov	eax, DWORD PTR __Where$[esp-4]
	imul	ecx, 84					; 00000054H
	add	DWORD PTR [eax], ecx

; 1823 : 	}

	ret	0
??$_Advance@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@H@std@@YAXAAV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@HUrandom_access_iterator_tag@0@@Z ENDP ; std::_Advance<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int>
_TEXT	ENDS
PUBLIC	??$iter_swap@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0@Z ; std::iter_swap<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$iter_swap@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$iter_swap@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0@Z PROC ; std::iter_swap<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> > >, COMDAT

; 594  : 	swap(*_Left, *_Right);

	mov	eax, DWORD PTR __Right$[esp-4]
	mov	ecx, DWORD PTR __Left$[esp-4]
	push	eax
	push	ecx
	call	??$swap@UOpinion@@@std@@YAXAAUOpinion@@0@Z ; std::swap<Opinion>
	add	esp, 8

; 595  : 	}

	ret	0
??$iter_swap@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0@Z ENDP ; std::iter_swap<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> > >
_TEXT	ENDS
PUBLIC	??$_Med3@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z ; std::_Med3<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Med3@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
??$_Med3@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z PROC ; std::_Med3<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>, COMDAT

; 2999 : 	if (_DEBUG_LT(*_Mid, *_First))

	mov	eax, DWORD PTR __Mid$[esp-4]
	mov	ecx, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+4]
	push	esi
	push	edi
	jle	SHORT $LN10@Med3

; 3000 : 		std::iter_swap(_Mid, _First);

	cmp	eax, ecx
	je	SHORT $LN10@Med3
	mov	edi, DWORD PTR [ecx]
	mov	esi, DWORD PTR [eax]
	mov	DWORD PTR [eax], edi
	mov	edi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edi
	mov	DWORD PTR [ecx], esi
	mov	DWORD PTR [ecx+4], edx
$LN10@Med3:

; 3001 : 	if (_DEBUG_LT(*_Last, *_Mid))

	mov	edx, DWORD PTR __Last$[esp+4]
	mov	esi, DWORD PTR [edx+4]
	cmp	esi, DWORD PTR [eax+4]
	jle	SHORT $LN19@Med3

; 3002 : 		std::iter_swap(_Last, _Mid);

	cmp	edx, eax
	je	SHORT $LN19@Med3
	mov	edi, DWORD PTR [edx]
	push	ebx
	mov	ebx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ebx
	mov	ebx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ebx
	mov	DWORD PTR [eax], edi
	mov	DWORD PTR [eax+4], esi
	pop	ebx
$LN19@Med3:

; 3003 : 	if (_DEBUG_LT(*_Mid, *_First))

	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+4]
	jle	SHORT $LN28@Med3

; 3004 : 		std::iter_swap(_Mid, _First);

	cmp	eax, ecx
	je	SHORT $LN28@Med3
	mov	edi, DWORD PTR [ecx]
	mov	esi, DWORD PTR [eax]
	mov	DWORD PTR [eax], edi
	mov	edi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edi
	mov	DWORD PTR [ecx], esi
	mov	DWORD PTR [ecx+4], edx
$LN28@Med3:
	pop	edi
	pop	esi

; 3005 : 	}

	ret	0
??$_Med3@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z ENDP ; std::_Med3<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
_TEXT	ENDS
PUBLIC	??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HHU12@@Z ; std::_Adjust_heap<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,int,CvWeightedVector<CvPlot *,800,1>::WeightedElement>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HHU12@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Hole$ = 12						; size = 4
__Bottom$ = 16						; size = 4
__Val$ = 20						; size = 8
??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HHU12@@Z PROC ; std::_Adjust_heap<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,int,CvWeightedVector<CvPlot *,800,1>::WeightedElement>, COMDAT

; 2056 : 	_Diff _Top = _Hole;

	mov	edx, DWORD PTR __Hole$[esp-4]

; 2057 : 	_Diff _Idx = 2 * _Hole + 2;
; 2058 : 
; 2059 : 	for (; _Idx < _Bottom; _Idx = 2 * _Idx + 2)

	mov	ecx, DWORD PTR __First$[esp-4]
	push	ebx
	push	esi
	mov	esi, DWORD PTR __Bottom$[esp+4]
	lea	eax, DWORD PTR [edx+edx+2]
	cmp	eax, esi
	push	edi
	mov	edi, edx
	jge	SHORT $LN14@Adjust_hea
	npad	7
$LL5@Adjust_hea:

; 2060 : 		{	// move _Hole down to larger child
; 2061 : 		if (_DEBUG_LT(*(_First + _Idx), *(_First + (_Idx - 1))))

	mov	ebx, DWORD PTR [ecx+eax*8+4]
	cmp	ebx, DWORD PTR [ecx+eax*8-4]
	jle	SHORT $LN2@Adjust_hea

; 2062 : 			--_Idx;

	dec	eax
$LN2@Adjust_hea:

; 2063 : 		*(_First + _Hole) = *(_First + _Idx), _Hole = _Idx;

	mov	ebx, DWORD PTR [ecx+eax*8]
	mov	DWORD PTR [ecx+edx*8], ebx
	mov	ebx, DWORD PTR [ecx+eax*8+4]
	mov	DWORD PTR [ecx+edx*8+4], ebx
	mov	edx, eax
	lea	eax, DWORD PTR [eax+eax+2]
	cmp	eax, esi
	jl	SHORT $LL5@Adjust_hea
$LN14@Adjust_hea:

; 2064 : 		}
; 2065 : 
; 2066 : 	if (_Idx == _Bottom)

	jne	SHORT $LN1@Adjust_hea

; 2067 : 		{	// only child at bottom, move _Hole down to it
; 2068 : 		*(_First + _Hole) = *(_First + (_Bottom - 1));

	mov	eax, DWORD PTR [ecx+esi*8-8]
	mov	DWORD PTR [ecx+edx*8], eax
	mov	eax, DWORD PTR [ecx+esi*8-4]
	mov	DWORD PTR [ecx+edx*8+4], eax

; 2069 : 		_Hole = _Bottom - 1;

	lea	edx, DWORD PTR [esi-1]
$LN1@Adjust_hea:

; 2070 : 		}
; 2071 : 	std::_Push_heap(_First, _Hole, _Top, _Val);

	mov	esi, DWORD PTR __Val$[esp+8]
	sub	esp, 8
	mov	eax, esp
	push	edi
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR __Val$[esp+24]
	push	edx
	push	ecx
	mov	DWORD PTR [eax+4], esi
	call	??$_Push_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HHU12@@Z ; std::_Push_heap<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,int,CvWeightedVector<CvPlot *,800,1>::WeightedElement>
	add	esp, 20					; 00000014H

; 2072 : 	}

	pop	edi
	pop	esi
	pop	ebx
	ret	0
??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HHU12@@Z ENDP ; std::_Adjust_heap<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,int,CvWeightedVector<CvPlot *,800,1>::WeightedElement>
_TEXT	ENDS
PUBLIC	??$unchecked_copy_backward@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@PAU12@@stdext@@YAPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@PAU12@00@Z ; stdext::unchecked_copy_backward<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$unchecked_copy_backward@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@PAU12@@stdext@@YAPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@PAU12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$unchecked_copy_backward@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@PAU12@@stdext@@YAPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@PAU12@00@Z PROC ; stdext::unchecked_copy_backward<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,CvWeightedVector<CvPlot *,800,1>::WeightedElement *>, COMDAT

; 3637 : 		return (_STD _Copy_backward_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3638 : 			_STD _Iter_random(_First, _Dest), _STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	edx, ecx
	je	SHORT $LN7@unchecked_
	push	esi
$LL8@unchecked_:
	mov	esi, DWORD PTR [ecx-8]
	sub	ecx, 8
	sub	eax, 8
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	cmp	ecx, edx
	jne	SHORT $LL8@unchecked_
	pop	esi
$LN7@unchecked_:

; 3639 : 	}

	ret	0
??$unchecked_copy_backward@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@PAU12@@stdext@@YAPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@PAU12@00@Z ENDP ; stdext::unchecked_copy_backward<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
_TEXT	ENDS
PUBLIC	??E?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<Opinion,std::allocator<Opinion> >::operator++
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??E?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<Opinion,std::allocator<Opinion> >::operator++, COMDAT
; _this$ = ecx

; 348  : 		{	// preincrement

	mov	eax, ecx

; 349  : 		++(*(_Mybase *)this);

	add	DWORD PTR [eax], 84			; 00000054H

; 350  : 		return (*this);
; 351  : 		}

	ret	0
??E?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<Opinion,std::allocator<Opinion> >::operator++
_TEXT	ENDS
PUBLIC	??F?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<Opinion,std::allocator<Opinion> >::operator--
; Function compile flags: /Ogtpy
;	COMDAT ??F?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<Opinion,std::allocator<Opinion> >::operator--, COMDAT
; _this$ = ecx

; 361  : 		{	// predecrement

	mov	eax, ecx

; 362  : 		--(*(_Mybase *)this);

	add	DWORD PTR [eax], -84			; ffffffacH

; 363  : 		return (*this);
; 364  : 		}

	ret	0
??F?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<Opinion,std::allocator<Opinion> >::operator--
_TEXT	ENDS
PUBLIC	?GetID@CvCity@@QBEHXZ				; CvCity::GetID
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvcity.h
;	COMDAT ?GetID@CvCity@@QBEHXZ
_TEXT	SEGMENT
?GetID@CvCity@@QBEHXZ PROC				; CvCity::GetID, COMDAT
; _this$ = ecx

; 331  : 		return m_iID;

	mov	eax, DWORD PTR [ecx+120]

; 332  : 	}

	ret	0
?GetID@CvCity@@QBEHXZ ENDP				; CvCity::GetID
_TEXT	ENDS
PUBLIC	?getX@CvCity@@QBEHXZ				; CvCity::getX
; Function compile flags: /Ogtpy
;	COMDAT ?getX@CvCity@@QBEHXZ
_TEXT	SEGMENT
?getX@CvCity@@QBEHXZ PROC				; CvCity::getX, COMDAT
; _this$ = ecx

; 340  : 		return m_iX;

	mov	eax, DWORD PTR [ecx+96]

; 341  : 	}

	ret	0
?getX@CvCity@@QBEHXZ ENDP				; CvCity::getX
_TEXT	ENDS
PUBLIC	?getY@CvCity@@QBEHXZ				; CvCity::getY
; Function compile flags: /Ogtpy
;	COMDAT ?getY@CvCity@@QBEHXZ
_TEXT	SEGMENT
?getY@CvCity@@QBEHXZ PROC				; CvCity::getY, COMDAT
; _this$ = ecx

; 345  : 		return m_iY;

	mov	eax, DWORD PTR [ecx+108]

; 346  : 	}

	ret	0
?getY@CvCity@@QBEHXZ ENDP				; CvCity::getY
_TEXT	ENDS
PUBLIC	?getOwner@CvCity@@QBE?AW4PlayerTypes@@XZ	; CvCity::getOwner
; Function compile flags: /Ogtpy
;	COMDAT ?getOwner@CvCity@@QBE?AW4PlayerTypes@@XZ
_TEXT	SEGMENT
?getOwner@CvCity@@QBE?AW4PlayerTypes@@XZ PROC		; CvCity::getOwner, COMDAT
; _this$ = ecx

; 604  : 		return m_eOwner;

	mov	eax, DWORD PTR [ecx+84]

; 605  : 	}

	ret	0
?getOwner@CvCity@@QBE?AW4PlayerTypes@@XZ ENDP		; CvCity::getOwner
_TEXT	ENDS
PUBLIC	?isAlive@CvPlayer@@QBE_NXZ			; CvPlayer::isAlive
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvplayer.h
;	COMDAT ?isAlive@CvPlayer@@QBE_NXZ
_TEXT	SEGMENT
?isAlive@CvPlayer@@QBE_NXZ PROC				; CvPlayer::isAlive, COMDAT
; _this$ = ecx

; 1092 : 		return m_bAlive;

	mov	al, BYTE PTR [ecx+2256]

; 1093 : 	}

	ret	0
?isAlive@CvPlayer@@QBE_NXZ ENDP				; CvPlayer::isAlive
_TEXT	ENDS
PUBLIC	?isEverAlive@CvPlayer@@QBE_NXZ			; CvPlayer::isEverAlive
; Function compile flags: /Ogtpy
;	COMDAT ?isEverAlive@CvPlayer@@QBE_NXZ
_TEXT	SEGMENT
?isEverAlive@CvPlayer@@QBE_NXZ PROC			; CvPlayer::isEverAlive, COMDAT
; _this$ = ecx

; 1097 : 		return m_bEverAlive;

	mov	al, BYTE PTR [ecx+2268]

; 1098 : 	}

	ret	0
?isEverAlive@CvPlayer@@QBE_NXZ ENDP			; CvPlayer::isEverAlive
_TEXT	ENDS
PUBLIC	?GetID@CvPlayer@@QBE?AW4PlayerTypes@@XZ		; CvPlayer::GetID
; Function compile flags: /Ogtpy
;	COMDAT ?GetID@CvPlayer@@QBE?AW4PlayerTypes@@XZ
_TEXT	SEGMENT
?GetID@CvPlayer@@QBE?AW4PlayerTypes@@XZ PROC		; CvPlayer::GetID, COMDAT
; _this$ = ecx

; 1168 : 		return m_eID;

	mov	eax, DWORD PTR [ecx+44]

; 1169 : 	}

	ret	0
?GetID@CvPlayer@@QBE?AW4PlayerTypes@@XZ ENDP		; CvPlayer::GetID
_TEXT	ENDS
PUBLIC	?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ		; CvPlayer::getTeam
; Function compile flags: /Ogtpy
;	COMDAT ?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ
_TEXT	SEGMENT
?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ PROC		; CvPlayer::getTeam, COMDAT
; _this$ = ecx

; 1178 : 		return CvPreGame::teamType(m_eID);

	mov	eax, DWORD PTR [ecx+44]
	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN5@getTeam
	mov	ecx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax*4]

; 1179 : 	}

	ret	0

; 1178 : 		return CvPreGame::teamType(m_eID);

$LN5@getTeam:
	or	eax, -1

; 1179 : 	}

	ret	0
?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ ENDP		; CvPlayer::getTeam
_TEXT	ENDS
PUBLIC	?SetEmbarkedGraphicOverride@CvPlayer@@QAEXVCvString@@@Z ; CvPlayer::SetEmbarkedGraphicOverride
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?SetEmbarkedGraphicOverride@CvPlayer@@QAEXVCvString@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetEmbarkedGraphicOverride@CvPlayer@@QAEXVCvString@@@Z$0
__ehfuncinfo$?SetEmbarkedGraphicOverride@CvPlayer@@QAEXVCvString@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetEmbarkedGraphicOverride@CvPlayer@@QAEXVCvString@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvplayer.h
xdata$x	ENDS
;	COMDAT ?SetEmbarkedGraphicOverride@CvPlayer@@QAEXVCvString@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_szGraphicName$ = 8					; size = 28
?SetEmbarkedGraphicOverride@CvPlayer@@QAEXVCvString@@@Z PROC ; CvPlayer::SetEmbarkedGraphicOverride, COMDAT
; _this$ = ecx

; 1664 : 	{

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?SetEmbarkedGraphicOverride@CvPlayer@@QAEXVCvString@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp

; 1665 : 		m_strEmbarkedGraphicOverride = szGraphicName;

	lea	eax, DWORD PTR _szGraphicName$[esp+8]
	add	ecx, 3132				; 00000c3cH
	push	eax
	mov	DWORD PTR __$EHRec$[esp+24], 0
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z

; 1666 : 	};

	lea	ecx, DWORD PTR _szGraphicName$[esp+8]
	mov	DWORD PTR __$EHRec$[esp+20], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[esp+12]
	mov	DWORD PTR fs:0, ecx
	add	esp, 12					; 0000000cH
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetEmbarkedGraphicOverride@CvPlayer@@QAEXVCvString@@@Z$0:
	lea	ecx, DWORD PTR _szGraphicName$[ebp-4]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?SetEmbarkedGraphicOverride@CvPlayer@@QAEXVCvString@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?SetEmbarkedGraphicOverride@CvPlayer@@QAEXVCvString@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetEmbarkedGraphicOverride@CvPlayer@@QAEXVCvString@@@Z ENDP ; CvPlayer::SetEmbarkedGraphicOverride
PUBLIC	??$_Copy_backward_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@Urandom_access_iterator_tag@2@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Copy_backward_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@Urandom_access_iterator_tag@2@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Dest$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
___formal$ = 32						; size = 1
??$_Copy_backward_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@Urandom_access_iterator_tag@2@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_backward_opt<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::random_access_iterator_tag>, COMDAT

; 2674 : 	_DEBUG_RANGE(_First, _Last);
; 2675 : 	while (_First != _Last)

	mov	eax, DWORD PTR __Last$[esp-4]
	cmp	DWORD PTR __First$[esp-4], eax
	je	SHORT $LN29@Copy_backw@3
	push	ebx
	mov	ebx, DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	push	esi
	push	edi
$LL2@Copy_backw@3:

; 2676 : 		*--_Dest = *--_Last;

	mov	ecx, DWORD PTR __Dest$[esp+8]
	sub	eax, 84					; 00000054H
	sub	ecx, 84					; 00000054H
	push	eax
	mov	DWORD PTR __Last$[esp+12], eax
	mov	esi, eax
	mov	DWORD PTR __Dest$[esp+12], ecx
	mov	edi, ecx
	call	ebx
	mov	eax, DWORD PTR [esi+80]
	mov	DWORD PTR [edi+80], eax
	mov	eax, DWORD PTR __Last$[esp+8]
	cmp	DWORD PTR __First$[esp+8], eax
	jne	SHORT $LL2@Copy_backw@3

; 2677 : 	return (_Dest);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp+8]
	mov	ecx, DWORD PTR __Dest$[esp+8]
	pop	edi
	pop	esi
	mov	DWORD PTR [eax], ecx
	pop	ebx

; 2678 : 	}

	ret	0
$LN29@Copy_backw@3:

; 2677 : 	return (_Dest);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	edx, DWORD PTR __Dest$[esp-4]
	mov	DWORD PTR [eax], edx

; 2678 : 	}

	ret	0
??$_Copy_backward_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@Urandom_access_iterator_tag@2@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_backward_opt<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	??$advance@PAUOpinion@@H@std@@YAXAAPAUOpinion@@H@Z ; std::advance<Opinion *,int>
; Function compile flags: /Ogtpy
;	COMDAT ??$advance@PAUOpinion@@H@std@@YAXAAPAUOpinion@@H@Z
_TEXT	SEGMENT
__Where$ = 8						; size = 4
__Off$ = 12						; size = 4
??$advance@PAUOpinion@@H@std@@YAXAAPAUOpinion@@H@Z PROC	; std::advance<Opinion *,int>, COMDAT

; 1774 : 	_Advance(_Where, _Off, _Iter_cat(_Where));

	mov	ecx, DWORD PTR __Off$[esp-4]
	mov	eax, DWORD PTR __Where$[esp-4]
	imul	ecx, 84					; 00000054H
	add	DWORD PTR [eax], ecx

; 1775 : 	}

	ret	0
??$advance@PAUOpinion@@H@std@@YAXAAPAUOpinion@@H@Z ENDP	; std::advance<Opinion *,int>
_TEXT	ENDS
PUBLIC	??$_Copy_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@Urandom_access_iterator_tag@2@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Copy_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@Urandom_access_iterator_tag@2@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Dest$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
___formal$ = 32						; size = 1
??$_Copy_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@Urandom_access_iterator_tag@2@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_opt<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::random_access_iterator_tag>, COMDAT

; 2470 : 	_DEBUG_RANGE(_First, _Last);
; 2471 : 	for (; _First != _Last; ++_Dest, ++_First)

	mov	eax, DWORD PTR __First$[esp-4]
	mov	ecx, DWORD PTR __Dest$[esp-4]
	cmp	eax, DWORD PTR __Last$[esp-4]
	je	SHORT $LN30@Copy_opt@2
	push	ebx
	mov	ebx, DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	push	esi
	push	edi
$LL12@Copy_opt@2:

; 2472 : 		*_Dest = *_First;

	push	eax
	mov	esi, eax
	mov	edi, ecx
	call	ebx
	mov	eax, DWORD PTR [esi+80]
	mov	DWORD PTR [edi+80], eax
	mov	eax, DWORD PTR __First$[esp+8]
	mov	ecx, DWORD PTR __Dest$[esp+8]
	add	eax, 84					; 00000054H
	add	ecx, 84					; 00000054H
	mov	DWORD PTR __Dest$[esp+8], ecx
	mov	DWORD PTR __First$[esp+8], eax
	cmp	eax, DWORD PTR __Last$[esp+8]
	jne	SHORT $LL12@Copy_opt@2
	pop	edi
	pop	esi
	pop	ebx
$LN30@Copy_opt@2:

; 2473 : 	return (_Dest);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 2474 : 	}

	ret	0
??$_Copy_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@Urandom_access_iterator_tag@2@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_opt<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	?isRevealed@CvPlot@@QBE_NW4TeamTypes@@@Z	; CvPlot::isRevealed
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvplot.h
;	COMDAT ?isRevealed@CvPlot@@QBE_NW4TeamTypes@@@Z
_TEXT	SEGMENT
_eTeam$ = 8						; size = 4
?isRevealed@CvPlot@@QBE_NW4TeamTypes@@@Z PROC		; CvPlot::isRevealed, COMDAT
; _this$ = ecx

; 620  : 	{

	mov	edx, ecx

; 621  : 		CvAssertMsg(eTeam >= 0, "eTeam is expected to be non-negative (invalid Index)");
; 622  : 		CvAssertMsg(eTeam < MAX_TEAMS, "eTeam is expected to be within maximum bounds (invalid Index)");
; 623  : 		return m_bfRevealed.GetBit(eTeam);

	mov	ecx, DWORD PTR _eTeam$[esp-4]
	push	esi
	mov	eax, ecx
	shr	eax, 5
	mov	esi, eax
	shl	esi, 5
	sub	ecx, esi
	mov	esi, 1
	shl	esi, cl
	test	esi, DWORD PTR [edx+eax*4+8]
	pop	esi
	setne	al

; 624  : 	}

	ret	4
?isRevealed@CvPlot@@QBE_NW4TeamTypes@@@Z ENDP		; CvPlot::isRevealed
_TEXT	ENDS
PUBLIC	??$_Copy_backward_opt@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@Urandom_access_iterator_tag@3@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@PAUOpinion@@0V10@Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Copy_backward_opt@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@Urandom_access_iterator_tag@3@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@PAUOpinion@@0V10@Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Dest$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
___formal$ = 32						; size = 1
??$_Copy_backward_opt@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@Urandom_access_iterator_tag@3@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@PAUOpinion@@0V10@Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_backward_opt<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::random_access_iterator_tag>, COMDAT

; 2673 : 	{	// copy [_First, _Last) backwards to [..., _Dest), arbitrary iterators

	push	ebx

; 2674 : 	_DEBUG_RANGE(_First, _Last);
; 2675 : 	while (_First != _Last)

	mov	ebx, DWORD PTR __First$[esp]
	push	esi
	mov	esi, DWORD PTR __Last$[esp+4]
	cmp	ebx, esi
	je	SHORT $LN17@Copy_backw@4
	push	ebp
	mov	ebp, DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	push	edi
$LL2@Copy_backw@4:

; 2676 : 		*--_Dest = *--_Last;

	mov	ecx, DWORD PTR __Dest$[esp+12]
	sub	ecx, 84					; 00000054H
	sub	esi, 84					; 00000054H
	push	esi
	mov	DWORD PTR __Dest$[esp+16], ecx
	mov	edi, ecx
	call	ebp
	mov	eax, DWORD PTR [esi+80]
	mov	DWORD PTR [edi+80], eax
	cmp	esi, ebx
	jne	SHORT $LL2@Copy_backw@4

; 2677 : 	return (_Dest);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp+12]
	mov	ecx, DWORD PTR __Dest$[esp+12]
	pop	edi
	pop	ebp
	pop	esi
	mov	DWORD PTR [eax], ecx
	pop	ebx

; 2678 : 	}

	ret	0
$LN17@Copy_backw@4:

; 2677 : 	return (_Dest);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp+4]
	mov	edx, DWORD PTR __Dest$[esp+4]
	pop	esi
	mov	DWORD PTR [eax], edx
	pop	ebx

; 2678 : 	}

	ret	0
??$_Copy_backward_opt@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@Urandom_access_iterator_tag@3@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@PAUOpinion@@0V10@Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_backward_opt<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	??$_Copy_opt@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@Urandom_access_iterator_tag@3@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@PAUOpinion@@0V10@Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Copy_opt@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@Urandom_access_iterator_tag@3@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@PAUOpinion@@0V10@Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Dest$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
___formal$ = 32						; size = 1
??$_Copy_opt@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@Urandom_access_iterator_tag@3@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@PAUOpinion@@0V10@Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_opt<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::random_access_iterator_tag>, COMDAT

; 2470 : 	_DEBUG_RANGE(_First, _Last);
; 2471 : 	for (; _First != _Last; ++_Dest, ++_First)

	mov	ecx, DWORD PTR __Dest$[esp-4]
	push	ebx
	mov	ebx, DWORD PTR __Last$[esp]
	push	esi
	mov	esi, DWORD PTR __First$[esp+4]
	cmp	esi, ebx
	je	SHORT $LN18@Copy_opt@3
	push	ebp
	mov	ebp, DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	push	edi
	npad	6
$LL3@Copy_opt@3:

; 2472 : 		*_Dest = *_First;

	push	esi
	mov	edi, ecx
	call	ebp
	mov	eax, DWORD PTR [esi+80]
	mov	DWORD PTR [edi+80], eax
	mov	ecx, DWORD PTR __Dest$[esp+12]
	add	ecx, 84					; 00000054H
	add	esi, 84					; 00000054H
	mov	DWORD PTR __Dest$[esp+12], ecx
	cmp	esi, ebx
	jne	SHORT $LL3@Copy_opt@3
	pop	edi
	pop	ebp
$LN18@Copy_opt@3:

; 2473 : 	return (_Dest);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp+4]
	pop	esi
	mov	DWORD PTR [eax], ecx
	pop	ebx

; 2474 : 	}

	ret	0
??$_Copy_opt@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@Urandom_access_iterator_tag@3@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@PAUOpinion@@0V10@Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_opt<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	??$_Pop_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00U12@PAH@Z ; std::_Pop_heap<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,int,CvWeightedVector<CvPlot *,800,1>::WeightedElement>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$_Pop_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00U12@PAH@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Val$ = 20						; size = 8
___formal$ = 28						; size = 4
??$_Pop_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00U12@PAH@Z PROC ; std::_Pop_heap<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,int,CvWeightedVector<CvPlot *,800,1>::WeightedElement>, COMDAT

; 2080 : 	*_Dest = *_First;

	mov	eax, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR __Dest$[esp-4]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx

; 2081 : 	std::_Adjust_heap(_First, _Diff(0), _Diff(_Last - _First), _Val);

	mov	edx, DWORD PTR __Val$[esp-4]
	sub	esp, 8
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR __Val$[esp+8]
	mov	DWORD PTR [ecx+4], edx
	mov	ecx, DWORD PTR __Last$[esp+4]
	sub	ecx, eax
	sar	ecx, 3
	push	ecx
	push	0
	push	eax
	call	??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HHU12@@Z ; std::_Adjust_heap<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,int,CvWeightedVector<CvPlot *,800,1>::WeightedElement>
	add	esp, 20					; 00000014H

; 2082 : 	}

	ret	0
??$_Pop_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00U12@PAH@Z ENDP ; std::_Pop_heap<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,int,CvWeightedVector<CvPlot *,800,1>::WeightedElement>
_TEXT	ENDS
PUBLIC	?isPlot@CvMap@@QBEHHH@Z				; CvMap::isPlot
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvmap.h
;	COMDAT ?isPlot@CvMap@@QBEHHH@Z
_TEXT	SEGMENT
_iX$ = 8						; size = 4
_iY$ = 12						; size = 4
?isPlot@CvMap@@QBEHHH@Z PROC				; CvMap::isPlot, COMDAT
; _this$ = ecx

; 157  : #ifdef AUI_WARNING_FIXES
; 158  : 		return ((iX >= 0) && (uint(iX) < getGridWidth()) && (iY >= 0) && (uint(iY) < getGridHeight()));
; 159  : #else
; 160  : 		return ((iX >= 0) && (iX < getGridWidth()) && (iY >= 0) && (iY < getGridHeight()));

	mov	eax, DWORD PTR _iX$[esp-4]
	test	eax, eax
	jl	SHORT $LN3@isPlot
	cmp	eax, DWORD PTR [ecx+4020]
	jge	SHORT $LN3@isPlot
	mov	eax, DWORD PTR _iY$[esp-4]
	test	eax, eax
	jl	SHORT $LN3@isPlot
	cmp	eax, DWORD PTR [ecx+4024]
	jge	SHORT $LN3@isPlot
	mov	eax, 1

; 161  : #endif
; 162  : 	}

	ret	8
$LN3@isPlot:

; 157  : #ifdef AUI_WARNING_FIXES
; 158  : 		return ((iX >= 0) && (uint(iX) < getGridWidth()) && (iY >= 0) && (uint(iY) < getGridHeight()));
; 159  : #else
; 160  : 		return ((iX >= 0) && (iX < getGridWidth()) && (iY >= 0) && (iY < getGridHeight()));

	xor	eax, eax

; 161  : #endif
; 162  : 	}

	ret	8
?isPlot@CvMap@@QBEHHH@Z ENDP				; CvMap::isPlot
_TEXT	ENDS
PUBLIC	?plotNum@CvMap@@QBEHHH@Z			; CvMap::plotNum
; Function compile flags: /Ogtpy
;	COMDAT ?plotNum@CvMap@@QBEHHH@Z
_TEXT	SEGMENT
_iX$ = 8						; size = 4
_iY$ = 12						; size = 4
?plotNum@CvMap@@QBEHHH@Z PROC				; CvMap::plotNum, COMDAT
; _this$ = ecx

; 183  : 		return ((iY * getGridWidth()) + iX);

	mov	eax, DWORD PTR [ecx+4020]
	imul	eax, DWORD PTR _iY$[esp-4]
	add	eax, DWORD PTR _iX$[esp-4]

; 184  : #endif
; 185  : 	}

	ret	8
?plotNum@CvMap@@QBEHHH@Z ENDP				; CvMap::plotNum
_TEXT	ENDS
PUBLIC	?plot@CvMap@@QBEPAVCvPlot@@HH@Z			; CvMap::plot
; Function compile flags: /Ogtpy
;	COMDAT ?plot@CvMap@@QBEPAVCvPlot@@HH@Z
_TEXT	SEGMENT
_iX$ = 8						; size = 4
_iY$ = 12						; size = 4
?plot@CvMap@@QBEPAVCvPlot@@HH@Z PROC			; CvMap::plot, COMDAT
; _this$ = ecx

; 273  : 		if((iX == INVALID_PLOT_COORD) || (iY == INVALID_PLOT_COORD))

	mov	eax, DWORD PTR _iX$[esp-4]
	push	ebp
	cmp	eax, -2147483647			; 80000001H
	je	$LN1@plot
	mov	ebp, DWORD PTR _iY$[esp]
	cmp	ebp, -2147483647			; 80000001H
	je	$LN1@plot

; 276  : 		}
; 277  : 		int iMapX = coordRange(iX, getGridWidth(), isWrapX());

	cmp	BYTE PTR [ecx+4056], 0
	push	ebx
	push	esi
	mov	esi, DWORD PTR [ecx+4020]
	push	edi
	je	SHORT $LN11@plot
	test	eax, eax
	jge	SHORT $LN13@plot
	cdq
	idiv	esi
	mov	edi, edx
	add	edi, esi
	jmp	SHORT $LN15@plot
$LN13@plot:
	cmp	eax, esi
	jl	SHORT $LN11@plot
	cdq
	idiv	esi
	mov	edi, edx
	jmp	SHORT $LN15@plot
$LN11@plot:
	mov	edi, eax
$LN15@plot:

; 278  : 		int iMapY = coordRange(iY, getGridHeight(), isWrapY());

	cmp	BYTE PTR [ecx+4057], 0
	mov	ebx, DWORD PTR [ecx+4024]
	je	SHORT $LN40@plot
	test	ebp, ebp
	jge	SHORT $LN23@plot
	mov	eax, ebp
	cdq
	idiv	ebx
	add	edx, ebx
	jmp	SHORT $LN25@plot
$LN23@plot:
	cmp	ebp, ebx
	jl	SHORT $LN40@plot
	mov	eax, ebp
	cdq
	idiv	ebx
	jmp	SHORT $LN25@plot
$LN40@plot:
	mov	edx, ebp
$LN25@plot:

; 279  : 		return ((isPlot(iMapX, iMapY)) ? &(m_pMapPlots[plotNum(iMapX, iMapY)]) : NULL);

	test	edi, edi
	jl	SHORT $LN5@plot
	cmp	edi, esi
	jge	SHORT $LN5@plot
	test	edx, edx
	jl	SHORT $LN5@plot
	cmp	edx, ebx
	jge	SHORT $LN5@plot
	imul	esi, edx
	add	esi, edi
	imul	esi, 484				; 000001e4H
	add	esi, DWORD PTR [ecx+4068]
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx
	pop	ebp

; 280  : 	}

	ret	8
$LN5@plot:
	pop	edi
	pop	esi
	pop	ebx

; 279  : 		return ((isPlot(iMapX, iMapY)) ? &(m_pMapPlots[plotNum(iMapX, iMapY)]) : NULL);

	xor	eax, eax
	pop	ebp

; 280  : 	}

	ret	8
$LN1@plot:

; 274  : 		{
; 275  : 			return NULL;

	xor	eax, eax
	pop	ebp

; 280  : 	}

	ret	8
?plot@CvMap@@QBEPAVCvPlot@@HH@Z ENDP			; CvMap::plot
_TEXT	ENDS
PUBLIC	??0CvTemporaryZone@@QAE@XZ			; CvTemporaryZone::CvTemporaryZone
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvtacticalai.h
;	COMDAT ??0CvTemporaryZone@@QAE@XZ
_TEXT	SEGMENT
??0CvTemporaryZone@@QAE@XZ PROC				; CvTemporaryZone::CvTemporaryZone, COMDAT
; _this$ = ecx

; 560  : 	CvTemporaryZone()

	mov	eax, ecx

; 561  : 	{
; 562  : 		Clear();

	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx

; 563  : 	}

	ret	0
??0CvTemporaryZone@@QAE@XZ ENDP				; CvTemporaryZone::CvTemporaryZone
_TEXT	ENDS
PUBLIC	?lInitCity@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lInitCity
EXTRN	?DoUpdateNextPolicyCost@CvPlayer@@QAEXXZ:PROC	; CvPlayer::DoUpdateNextPolicyCost
EXTRN	?initCity@CvPlayer@@QAEPAVCvCity@@HH_N0@Z:PROC	; CvPlayer::initCity
EXTRN	_luaL_optinteger:PROC
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
;	COMDAT ?lInitCity@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bInitialFounding$ = -8					; size = 1
_bBumpUnits$ = -4					; size = 1
_L$ = 8							; size = 4
?lInitCity@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lInitCity, COMDAT

; 1071 : {

	sub	esp, 8
	push	ebx
	push	ebp
	push	esi

; 1072 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+16]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lInitCity
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lInitCity
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lInitCity
	xor	bl, bl
$LN5@lInitCity:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lInitCity
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lInitCity:

; 1073 : 	const int x = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 1074 : 	const int y = lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger

; 1075 : 	const bool bBumpUnits = luaL_optint(L, 4, 1);

	push	1
	push	4
	push	esi
	mov	ebp, eax
	call	_luaL_optinteger

; 1076 : 	const bool bInitialFounding = luaL_optint(L, 5, 1);

	push	1
	test	eax, eax
	setne	al
	push	5
	push	esi
	mov	BYTE PTR _bBumpUnits$[esp+64], al
	call	_luaL_optinteger
	add	esp, 40					; 00000028H
	test	eax, eax

; 1077 : 
; 1078 : 	CvCity* pkCity = pkPlayer->initCity(x, y, bBumpUnits, bInitialFounding);

	mov	eax, DWORD PTR _bBumpUnits$[esp+24]
	setne	cl
	mov	BYTE PTR _bInitialFounding$[esp+24], cl
	mov	edx, DWORD PTR _bInitialFounding$[esp+24]
	push	edx
	push	eax
	push	ebp
	push	ebx
	mov	ecx, edi
	call	?initCity@CvPlayer@@QAEPAVCvCity@@HH_N0@Z ; CvPlayer::initCity

; 1079 : 	pkPlayer->DoUpdateNextPolicyCost();

	mov	ecx, edi
	mov	ebx, eax
	call	?DoUpdateNextPolicyCost@CvPlayer@@QAEXXZ ; CvPlayer::DoUpdateNextPolicyCost

; 1080 : 	CvLuaCity::Push(L, pkCity);

	push	ebx
	push	esi
	call	?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1081 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1082 : }

	add	esp, 8
	ret	0
?lInitCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lInitCity
_TEXT	ENDS
PUBLIC	?lAcquireCity@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lAcquireCity
EXTRN	?acquireCity@CvPlayer@@QAEXPAVCvCity@@_N1@Z:PROC ; CvPlayer::acquireCity
; Function compile flags: /Ogtpy
;	COMDAT ?lAcquireCity@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkInstance$248045 = -12				; size = 4
_bTrade$ = -8						; size = 1
_bConquest$ = -4					; size = 1
_L$ = 8							; size = 4
?lAcquireCity@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lAcquireCity, COMDAT

; 1086 : {

	sub	esp, 12					; 0000000cH
	push	ebx
	push	ebp
	push	esi

; 1087 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+20]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$248045[esp+40], 0
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lAcquireCi
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lAcquireCi
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$248045[esp+28], eax
	test	eax, eax
	je	SHORT $LN5@lAcquireCi
	xor	bl, bl
$LN5@lAcquireCi:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lAcquireCi
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lAcquireCi:

; 1088 : 	CvCity* pkCity = CvLuaCity::GetInstance(L, 2);

	push	esi
	call	_lua_gettop
	push	2
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN16@lAcquireCi
	push	OFFSET $SG237679
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN16@lAcquireCi
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN16@lAcquireCi
	xor	bl, bl
$LN16@lAcquireCi:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN15@lAcquireCi
	push	esi
	call	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
	add	esp, 4
$LN15@lAcquireCi:

; 1089 : 	const bool bConquest = lua_toboolean(L, 3);

	push	3
	push	esi
	call	_lua_toboolean
	test	eax, eax
	setne	al

; 1090 : 	const bool bTrade = lua_toboolean(L, 4);

	push	4
	push	esi
	mov	BYTE PTR _bConquest$[esp+44], al
	call	_lua_toboolean
	add	esp, 16					; 00000010H
	test	eax, eax

; 1091 : 
; 1092 : 	pkPlayer->acquireCity(pkCity, bConquest, bTrade);

	mov	eax, DWORD PTR _bConquest$[esp+28]
	setne	cl
	mov	BYTE PTR _bTrade$[esp+28], cl
	mov	edx, DWORD PTR _bTrade$[esp+28]
	mov	ecx, DWORD PTR _pkInstance$248045[esp+28]
	push	edx
	push	eax
	push	edi
	call	?acquireCity@CvPlayer@@QAEXPAVCvCity@@_N1@Z ; CvPlayer::acquireCity
	pop	edi
	pop	esi
	pop	ebp

; 1093 : 	return 0;

	xor	eax, eax
	pop	ebx

; 1094 : }

	add	esp, 12					; 0000000cH
	ret	0
?lAcquireCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lAcquireCity
_TEXT	ENDS
PUBLIC	?lGetNewCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNewCityName
EXTRN	?getNewCityName@CvPlayer@@QBE?AVCvString@@XZ:PROC ; CvPlayer::getNewCityName
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetNewCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetNewCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetNewCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetNewCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetNewCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_cityName$227897 = -40					; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetNewCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetNewCityName, COMDAT

; 1105 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetNewCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 28					; 0000001cH
	push	ebx
	push	ebp
	push	esi

; 1106 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+48]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@lGetNewCit
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@lGetNewCit
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@lGetNewCit
	xor	bl, bl
$LN7@lGetNewCit:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@lGetNewCit
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@lGetNewCit:

; 1107 : 	if(pkPlayer)

	test	edi, edi
	je	SHORT $LN1@lGetNewCit

; 1108 : 	{
; 1109 : 		CvString cityName = pkPlayer->getNewCityName();

	lea	eax, DWORD PTR _cityName$227897[esp+56]
	push	eax
	mov	ecx, edi
	call	?getNewCityName@CvPlayer@@QBE?AVCvString@@XZ ; CvPlayer::getNewCityName

; 1110 : 		lua_pushstring(L, cityName.c_str());

	lea	ecx, DWORD PTR _cityName$227897[esp+56]
	mov	DWORD PTR __$EHRec$[esp+64], 0
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8

; 1111 : 		return 1;

	lea	ecx, DWORD PTR _cityName$227897[esp+56]
	mov	DWORD PTR __$EHRec$[esp+64], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx

; 1112 : 	}
; 1113 : 	return 0;
; 1114 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+40]
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
$LN1@lGetNewCit:
	mov	ecx, DWORD PTR __$EHRec$[esp+56]
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetNewCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _cityName$227897[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetNewCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetNewCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetNewCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetNewCityName
PUBLIC	?lInitUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lInitUnit
EXTRN	?initUnit@CvPlayer@@QAEPAVCvUnit@@W4UnitTypes@@HHW4UnitAITypes@@W4DirectionTypes@@_N3HH@Z:PROC ; CvPlayer::initUnit
; Function compile flags: /Ogtpy
;	COMDAT ?lInitUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkInstance$248120 = -8					; size = 4
_eUnitAI$ = -4						; size = 4
_L$ = 8							; size = 4
?lInitUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lInitUnit, COMDAT

; 1118 : {

	sub	esp, 8
	push	ebx
	push	ebp
	push	esi

; 1119 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+16]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$248120[esp+36], 0
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lInitUnit
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lInitUnit
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$248120[esp+24], eax
	test	eax, eax
	je	SHORT $LN5@lInitUnit
	xor	bl, bl
$LN5@lInitUnit:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lInitUnit
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lInitUnit:

; 1120 : 	const UnitTypes eUnit = (UnitTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 1121 : 	const int x = lua_tointeger(L, 3);

	push	3
	push	esi
	mov	edi, eax
	call	_lua_tointeger

; 1122 : 	const int y = lua_tointeger(L, 4);

	push	4
	push	esi
	mov	ebx, eax
	call	_lua_tointeger

; 1123 : 	const UnitAITypes eUnitAI = (UnitAITypes)luaL_optint(L, 5, NO_UNITAI);

	push	-1
	push	5
	push	esi
	mov	ebp, eax
	call	_luaL_optinteger

; 1124 : 	const DirectionTypes eFacingDirection = (DirectionTypes)luaL_optint(L, 6, NO_DIRECTION);

	push	-1
	push	6
	push	esi
	mov	DWORD PTR _eUnitAI$[esp+72], eax
	call	_luaL_optinteger

; 1125 : 
; 1126 : 	CvUnit* pkUnit = pkPlayer->initUnit(eUnit, x, y, eUnitAI, eFacingDirection);

	mov	ecx, DWORD PTR _pkInstance$248120[esp+72]
	add	esp, 48					; 00000030H
	push	0
	push	0
	push	1
	push	0
	push	eax
	mov	eax, DWORD PTR _eUnitAI$[esp+44]
	push	eax
	push	ebp
	push	ebx
	push	edi
	call	?initUnit@CvPlayer@@QAEPAVCvUnit@@W4UnitTypes@@HHW4UnitAITypes@@W4DirectionTypes@@_N3HH@Z ; CvPlayer::initUnit

; 1127 : 	CvLuaUnit::Push(L, pkUnit);

	push	eax
	push	esi
	call	?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@PAVCvUnit@@@Z ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::Push
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1128 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1129 : }

	add	esp, 8
	ret	0
?lInitUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lInitUnit
_TEXT	ENDS
PUBLIC	?lInitUnitWithNameOffset@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lInitUnitWithNameOffset
EXTRN	?initUnitWithNameOffset@CvPlayer@@QAEPAVCvUnit@@W4UnitTypes@@HHHW4UnitAITypes@@W4DirectionTypes@@_N3HH@Z:PROC ; CvPlayer::initUnitWithNameOffset
; Function compile flags: /Ogtpy
;	COMDAT ?lInitUnitWithNameOffset@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkInstance$248146 = -12				; size = 4
_eUnitAI$ = -8						; size = 4
_y$ = -4						; size = 4
_L$ = 8							; size = 4
?lInitUnitWithNameOffset@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lInitUnitWithNameOffset, COMDAT

; 1134 : {

	sub	esp, 12					; 0000000cH
	push	ebx
	push	ebp
	push	esi

; 1135 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+20]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$248146[esp+40], 0
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lInitUnitW
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lInitUnitW
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$248146[esp+28], eax
	test	eax, eax
	je	SHORT $LN5@lInitUnitW
	xor	bl, bl
$LN5@lInitUnitW:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lInitUnitW
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lInitUnitW:

; 1136 : 	const UnitTypes eUnit = (UnitTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 1137 : 	const int iNameOffset = lua_tointeger(L, 3);

	push	3
	push	esi
	mov	edi, eax
	call	_lua_tointeger

; 1138 : 	const int x = lua_tointeger(L, 4);

	push	4
	push	esi
	mov	ebx, eax
	call	_lua_tointeger

; 1139 : 	const int y = lua_tointeger(L, 5);

	push	5
	push	esi
	mov	ebp, eax
	call	_lua_tointeger

; 1140 : 	const UnitAITypes eUnitAI = (UnitAITypes)luaL_optint(L, 6, NO_UNITAI);

	push	-1
	push	6
	push	esi
	mov	DWORD PTR _y$[esp+72], eax
	call	_luaL_optinteger

; 1141 : 	const DirectionTypes eFacingDirection = (DirectionTypes)luaL_optint(L, 7, NO_DIRECTION);

	push	-1
	push	7
	push	esi
	mov	DWORD PTR _eUnitAI$[esp+84], eax
	call	_luaL_optinteger

; 1142 : 
; 1143 : 	CvUnit* pkUnit = pkPlayer->initUnitWithNameOffset(eUnit, iNameOffset, x, y, eUnitAI, eFacingDirection);

	mov	ecx, DWORD PTR _y$[esp+84]
	add	esp, 56					; 00000038H
	push	0
	push	0
	push	1
	push	0
	push	eax
	mov	eax, DWORD PTR _eUnitAI$[esp+48]
	push	eax
	push	ecx
	mov	ecx, DWORD PTR _pkInstance$248146[esp+56]
	push	ebp
	push	ebx
	push	edi
	call	?initUnitWithNameOffset@CvPlayer@@QAEPAVCvUnit@@W4UnitTypes@@HHHW4UnitAITypes@@W4DirectionTypes@@_N3HH@Z ; CvPlayer::initUnitWithNameOffset

; 1144 : 	CvLuaUnit::Push(L, pkUnit);

	push	eax
	push	esi
	call	?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@PAVCvUnit@@@Z ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::Push
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1145 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1146 : }

	add	esp, 12					; 0000000cH
	ret	0
?lInitUnitWithNameOffset@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lInitUnitWithNameOffset
_TEXT	ENDS
PUBLIC	?lDisbandUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lDisbandUnit
EXTRN	?disbandUnit@CvPlayer@@QAEX_N@Z:PROC		; CvPlayer::disbandUnit
; Function compile flags: /Ogtpy
;	COMDAT ?lDisbandUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lDisbandUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lDisbandUnit, COMDAT

; 1151 : 	return BasicLuaMethod(L, &CvPlayerAI::disbandUnit);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?disbandUnit@CvPlayer@@QAEX_N@Z	; CvPlayer::disbandUnit
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEX_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 1152 : }

	ret	0
?lDisbandUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lDisbandUnit
_TEXT	ENDS
PUBLIC	?lAddFreeUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lAddFreeUnit
EXTRN	?addFreeUnit@CvPlayer@@QAEPAVCvPlot@@W4UnitTypes@@W4UnitAITypes@@@Z:PROC ; CvPlayer::addFreeUnit
; Function compile flags: /Ogtpy
;	COMDAT ?lAddFreeUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lAddFreeUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lAddFreeUnit, COMDAT

; 1156 : {

	push	ebx
	push	ebp
	push	esi

; 1157 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lAddFreeUn
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lAddFreeUn
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lAddFreeUn
	xor	bl, bl
$LN5@lAddFreeUn:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lAddFreeUn
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lAddFreeUn:

; 1158 : 	const UnitTypes eUnit = (UnitTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 1159 : 	const UnitAITypes eUnitAI = (UnitAITypes)luaL_optint(L, 3, NO_UNITAI);

	push	-1
	push	3
	push	esi
	mov	ebx, eax
	call	_luaL_optinteger
	add	esp, 20					; 00000014H

; 1160 : 
; 1161 : 	CvPlot* pkPlot = pkPlayer->addFreeUnit(eUnit, eUnitAI);

	push	eax
	push	ebx
	mov	ecx, edi
	call	?addFreeUnit@CvPlayer@@QAEPAVCvPlot@@W4UnitTypes@@W4UnitAITypes@@@Z ; CvPlayer::addFreeUnit

; 1162 : 	CvLuaPlot::Push(L, pkPlot);

	push	eax
	push	esi
	call	?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1163 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1164 : }

	ret	0
?lAddFreeUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lAddFreeUnit
_TEXT	ENDS
PUBLIC	?lChooseTech@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lChooseTech
EXTRN	?chooseTech@CvPlayer@@QAEXHPBDW4TechTypes@@@Z:PROC ; CvPlayer::chooseTech
EXTRN	_lua_tolstring:PROC
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lChooseTech@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lChooseTech@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lChooseTech@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lChooseTech@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lChooseTech@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_strText$ = -40						; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lChooseTech@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lChooseTech, COMDAT

; 1174 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lChooseTech@CvLuaPlayer@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 28					; 0000001cH
	push	ebx
	push	ebp
	push	esi

; 1175 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+48]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lChooseTec
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lChooseTec
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lChooseTec
	xor	bl, bl
$LN6@lChooseTec:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lChooseTec
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lChooseTec:

; 1176 : 	int iDiscover = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 1177 : 	CvString strText = lua_tostring(L, 3);

	push	0
	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tolstring
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN18@lChooseTec
	mov	eax, OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN18@lChooseTec:
	push	eax
	lea	ecx, DWORD PTR _strText$[esp+60]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z

; 1178 : 	TechTypes iTechJustDiscovered = (TechTypes)lua_tointeger(L, 4);

	push	4
	push	esi
	mov	DWORD PTR __$EHRec$[esp+72], 0
	call	_lua_tointeger
	add	esp, 8

; 1179 : 
; 1180 : 	pkPlayer->chooseTech(iDiscover, strText, iTechJustDiscovered);

	push	eax
	lea	ecx, DWORD PTR _strText$[esp+60]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	ebx
	mov	ecx, edi
	call	?chooseTech@CvPlayer@@QAEXHPBDW4TechTypes@@@Z ; CvPlayer::chooseTech

; 1181 : 	return 1;

	lea	ecx, DWORD PTR _strText$[esp+56]
	mov	DWORD PTR __$EHRec$[esp+64], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 1182 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+56]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lChooseTech@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _strText$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lChooseTech@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lChooseTech@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lChooseTech@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lChooseTech
PUBLIC	?lIsHuman@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lIsHuman
EXTRN	?isHuman@CvPlayer@@QBE_NXZ:PROC			; CvPlayer::isHuman
; Function compile flags: /Ogtpy
;	COMDAT ?lIsHuman@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsHuman@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC		; CvLuaPlayer::lIsHuman, COMDAT

; 1187 : 	return BasicLuaMethod(L, &CvPlayerAI::isHuman);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isHuman@CvPlayer@@QBE_NXZ	; CvPlayer::isHuman
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 1188 : }

	ret	0
?lIsHuman@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP		; CvLuaPlayer::lIsHuman
_TEXT	ENDS
PUBLIC	?lIsBarbarian@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lIsBarbarian
EXTRN	?isBarbarian@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::isBarbarian
; Function compile flags: /Ogtpy
;	COMDAT ?lIsBarbarian@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsBarbarian@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsBarbarian, COMDAT

; 1193 : 	return BasicLuaMethod(L, &CvPlayerAI::isBarbarian);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isBarbarian@CvPlayer@@QBE_NXZ	; CvPlayer::isBarbarian
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 1194 : }

	ret	0
?lIsBarbarian@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsBarbarian
_TEXT	ENDS
PUBLIC	?lGetName@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetName
EXTRN	?getName@CvPlayer@@QBEPBDXZ:PROC		; CvPlayer::getName
; Function compile flags: /Ogtpy
;	COMDAT ?lGetName@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetName@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC		; CvLuaPlayer::lGetName, COMDAT

; 1198 : {

	push	ebx
	push	ebp
	push	esi

; 1199 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetName
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetName
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetName
	xor	bl, bl
$LN5@lGetName:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetName
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetName:

; 1200 : 	const char* szName = pkPlayer->getName();

	mov	ecx, edi
	call	?getName@CvPlayer@@QBEPBDXZ		; CvPlayer::getName

; 1201 : 
; 1202 : 	lua_pushstring(L, szName);

	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1203 : 
; 1204 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1205 : }

	ret	0
?lGetName@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP		; CvLuaPlayer::lGetName
_TEXT	ENDS
PUBLIC	?lGetNameKey@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetNameKey
EXTRN	?getNameKey@CvPlayer@@QBEPBDXZ:PROC		; CvPlayer::getNameKey
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNameKey@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNameKey@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetNameKey, COMDAT

; 1209 : {

	push	ebx
	push	ebp
	push	esi

; 1210 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNameKe
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNameKe
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNameKe
	xor	bl, bl
$LN5@lGetNameKe:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNameKe
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNameKe:

; 1211 : 	lua_pushstring(L, pkPlayer->getNameKey());

	mov	ecx, edi
	call	?getNameKey@CvPlayer@@QBEPBDXZ		; CvPlayer::getNameKey
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1212 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1213 : }

	ret	0
?lGetNameKey@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetNameKey
_TEXT	ENDS
PUBLIC	?lGetNickName@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetNickName
EXTRN	?getNickName@CvPlayer@@QBEQBDXZ:PROC		; CvPlayer::getNickName
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNickName@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNickName@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetNickName, COMDAT

; 1216 : {

	push	ebx
	push	ebp
	push	esi

; 1217 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNickNa
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNickNa
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNickNa
	xor	bl, bl
$LN5@lGetNickNa:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNickNa
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNickNa:

; 1218 : 	lua_pushstring(L, pkPlayer->getNickName());

	mov	ecx, edi
	call	?getNickName@CvPlayer@@QBEQBDXZ		; CvPlayer::getNickName
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1219 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1220 : }

	ret	0
?lGetNickName@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetNickName
_TEXT	ENDS
PUBLIC	?lGetCivilizationDescription@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCivilizationDescription
EXTRN	?getCivilizationDescription@CvPlayer@@QBEPBDXZ:PROC ; CvPlayer::getCivilizationDescription
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCivilizationDescription@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCivilizationDescription@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCivilizationDescription, COMDAT

; 1225 : {

	push	ebx
	push	ebp
	push	esi

; 1226 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetCivili
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetCivili
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetCivili
	xor	bl, bl
$LN5@lGetCivili:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetCivili
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetCivili:

; 1227 : 	lua_pushstring(L, pkPlayer->getCivilizationDescription());

	mov	ecx, edi
	call	?getCivilizationDescription@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationDescription
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1228 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1229 : }

	ret	0
?lGetCivilizationDescription@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCivilizationDescription
_TEXT	ENDS
PUBLIC	?lGetCivilizationDescriptionKey@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCivilizationDescriptionKey
EXTRN	?getCivilizationDescriptionKey@CvPlayer@@QBEPBDXZ:PROC ; CvPlayer::getCivilizationDescriptionKey
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCivilizationDescriptionKey@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCivilizationDescriptionKey@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCivilizationDescriptionKey, COMDAT

; 1233 : {

	push	ebx
	push	ebp
	push	esi

; 1234 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetCivili@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetCivili@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetCivili@2
	xor	bl, bl
$LN5@lGetCivili@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetCivili@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetCivili@2:

; 1235 : 	lua_pushstring(L, pkPlayer->getCivilizationDescriptionKey());

	mov	ecx, edi
	call	?getCivilizationDescriptionKey@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationDescriptionKey
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1236 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1237 : }

	ret	0
?lGetCivilizationDescriptionKey@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCivilizationDescriptionKey
_TEXT	ENDS
PUBLIC	?lGetCivilizationShortDescription@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCivilizationShortDescription
EXTRN	?getCivilizationShortDescription@CvPlayer@@QBEPBDXZ:PROC ; CvPlayer::getCivilizationShortDescription
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCivilizationShortDescription@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCivilizationShortDescription@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCivilizationShortDescription, COMDAT

; 1241 : {

	push	ebx
	push	ebp
	push	esi

; 1242 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetCivili@3
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetCivili@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetCivili@3
	xor	bl, bl
$LN5@lGetCivili@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetCivili@3
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetCivili@3:

; 1243 : 	lua_pushstring(L, pkPlayer->getCivilizationShortDescription());

	mov	ecx, edi
	call	?getCivilizationShortDescription@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescription
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1244 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1245 : }

	ret	0
?lGetCivilizationShortDescription@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCivilizationShortDescription
_TEXT	ENDS
PUBLIC	?lGetCivilizationShortDescriptionKey@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCivilizationShortDescriptionKey
EXTRN	?getCivilizationShortDescriptionKey@CvPlayer@@QBEPBDXZ:PROC ; CvPlayer::getCivilizationShortDescriptionKey
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCivilizationShortDescriptionKey@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCivilizationShortDescriptionKey@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCivilizationShortDescriptionKey, COMDAT

; 1249 : {

	push	ebx
	push	ebp
	push	esi

; 1250 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetCivili@4
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetCivili@4
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetCivili@4
	xor	bl, bl
$LN5@lGetCivili@4:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetCivili@4
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetCivili@4:

; 1251 : 	lua_pushstring(L, pkPlayer->getCivilizationShortDescriptionKey());

	mov	ecx, edi
	call	?getCivilizationShortDescriptionKey@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescriptionKey
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1252 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1253 : }

	ret	0
?lGetCivilizationShortDescriptionKey@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCivilizationShortDescriptionKey
_TEXT	ENDS
PUBLIC	?lGetCivilizationAdjective@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCivilizationAdjective
EXTRN	?getCivilizationAdjective@CvPlayer@@QBEPBDXZ:PROC ; CvPlayer::getCivilizationAdjective
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCivilizationAdjective@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCivilizationAdjective@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCivilizationAdjective, COMDAT

; 1257 : {

	push	ebx
	push	ebp
	push	esi

; 1258 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetCivili@5
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetCivili@5
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetCivili@5
	xor	bl, bl
$LN5@lGetCivili@5:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetCivili@5
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetCivili@5:

; 1259 : 	lua_pushstring(L, pkPlayer->getCivilizationAdjective());

	mov	ecx, edi
	call	?getCivilizationAdjective@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationAdjective
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1260 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1261 : }

	ret	0
?lGetCivilizationAdjective@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCivilizationAdjective
_TEXT	ENDS
PUBLIC	?lGetCivilizationAdjectiveKey@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCivilizationAdjectiveKey
EXTRN	?getCivilizationAdjectiveKey@CvPlayer@@QBEPBDXZ:PROC ; CvPlayer::getCivilizationAdjectiveKey
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCivilizationAdjectiveKey@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCivilizationAdjectiveKey@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCivilizationAdjectiveKey, COMDAT

; 1265 : {

	push	ebx
	push	ebp
	push	esi

; 1266 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetCivili@6
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetCivili@6
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetCivili@6
	xor	bl, bl
$LN5@lGetCivili@6:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetCivili@6
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetCivili@6:

; 1267 : 	lua_pushstring(L, pkPlayer->getCivilizationAdjectiveKey());

	mov	ecx, edi
	call	?getCivilizationAdjectiveKey@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationAdjectiveKey
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1268 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1269 : }

	ret	0
?lGetCivilizationAdjectiveKey@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCivilizationAdjectiveKey
_TEXT	ENDS
PUBLIC	?lIsWhiteFlag@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lIsWhiteFlag
EXTRN	?isWhiteFlag@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::isWhiteFlag
; Function compile flags: /Ogtpy
;	COMDAT ?lIsWhiteFlag@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsWhiteFlag@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsWhiteFlag, COMDAT

; 1274 : 	return BasicLuaMethod(L, &CvPlayerAI::isWhiteFlag);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isWhiteFlag@CvPlayer@@QBE_NXZ	; CvPlayer::isWhiteFlag
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 1275 : }

	ret	0
?lIsWhiteFlag@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsWhiteFlag
_TEXT	ENDS
PUBLIC	?lGetStateReligionName@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetStateReligionName
EXTRN	?GetStateReligionName@CvPlayer@@QBEPBDXZ:PROC	; CvPlayer::GetStateReligionName
; Function compile flags: /Ogtpy
;	COMDAT ?lGetStateReligionName@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetStateReligionName@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetStateReligionName, COMDAT

; 1279 : {

	push	ebx
	push	ebp
	push	esi

; 1280 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetStateR
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetStateR
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetStateR
	xor	bl, bl
$LN5@lGetStateR:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetStateR
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetStateR:

; 1281 : 	lua_pushstring(L, pkPlayer->GetStateReligionName());

	mov	ecx, edi
	call	?GetStateReligionName@CvPlayer@@QBEPBDXZ ; CvPlayer::GetStateReligionName
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1282 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1283 : }

	ret	0
?lGetStateReligionName@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetStateReligionName
_TEXT	ENDS
PUBLIC	?lGetStateReligionKey@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetStateReligionKey
EXTRN	?GetStateReligionKey@CvPlayer@@QBE?AVCvString@@XZ:PROC ; CvPlayer::GetStateReligionKey
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetStateReligionKey@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetStateReligionKey@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetStateReligionKey@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetStateReligionKey@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetStateReligionKey@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T248508 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetStateReligionKey@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetStateReligionKey, COMDAT

; 1287 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetStateReligionKey@CvLuaPlayer@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 28					; 0000001cH
	push	ebx
	push	ebp
	push	esi

; 1288 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+48]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetStateR@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetStateR@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetStateR@2
	xor	bl, bl
$LN6@lGetStateR@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lGetStateR@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lGetStateR@2:

; 1289 : 	lua_pushstring(L, pkPlayer->GetStateReligionKey());

	lea	eax, DWORD PTR $T248508[esp+56]
	push	eax
	mov	ecx, edi
	call	?GetStateReligionKey@CvPlayer@@QBE?AVCvString@@XZ ; CvPlayer::GetStateReligionKey
	mov	ecx, eax
	mov	DWORD PTR __$EHRec$[esp+64], 0
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8
	lea	ecx, DWORD PTR $T248508[esp+56]
	mov	DWORD PTR __$EHRec$[esp+64], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 1290 : 	return 1;
; 1291 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+56]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetStateReligionKey@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR $T248508[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetStateReligionKey@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetStateReligionKey@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetStateReligionKey@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetStateReligionKey
PUBLIC	?lGetWorstEnemyName@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetWorstEnemyName
EXTRN	?getWorstEnemyName@CvPlayer@@QBE?BVCvString@@XZ:PROC ; CvPlayer::getWorstEnemyName
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetWorstEnemyName@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetWorstEnemyName@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetWorstEnemyName@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetWorstEnemyName@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetWorstEnemyName@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T248550 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetWorstEnemyName@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetWorstEnemyName, COMDAT

; 1295 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetWorstEnemyName@CvLuaPlayer@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 28					; 0000001cH
	push	ebx
	push	ebp
	push	esi

; 1296 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+48]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetWorstE
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetWorstE
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetWorstE
	xor	bl, bl
$LN6@lGetWorstE:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lGetWorstE
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lGetWorstE:

; 1297 : 	lua_pushstring(L, pkPlayer->getWorstEnemyName());

	lea	eax, DWORD PTR $T248550[esp+56]
	push	eax
	mov	ecx, edi
	call	?getWorstEnemyName@CvPlayer@@QBE?BVCvString@@XZ ; CvPlayer::getWorstEnemyName
	mov	ecx, eax
	mov	DWORD PTR __$EHRec$[esp+64], 0
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8
	lea	ecx, DWORD PTR $T248550[esp+56]
	mov	DWORD PTR __$EHRec$[esp+64], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 1298 : 	return 1;
; 1299 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+56]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetWorstEnemyName@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR $T248550[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetWorstEnemyName@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetWorstEnemyName@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetWorstEnemyName@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetWorstEnemyName
PUBLIC	?lGetArtStyleType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetArtStyleType
EXTRN	?getArtStyleType@CvPlayer@@QBE?AW4ArtStyleTypes@@XZ:PROC ; CvPlayer::getArtStyleType
; Function compile flags: /Ogtpy
;	COMDAT ?lGetArtStyleType@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetArtStyleType@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetArtStyleType, COMDAT

; 1304 : 	return BasicLuaMethod(L, &CvPlayerAI::getArtStyleType);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getArtStyleType@CvPlayer@@QBE?AW4ArtStyleTypes@@XZ ; CvPlayer::getArtStyleType
	push	eax
	call	??$BasicLuaMethod@W4ArtStyleTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4ArtStyleTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum ArtStyleTypes>
	add	esp, 8

; 1305 : }

	ret	0
?lGetArtStyleType@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetArtStyleType
_TEXT	ENDS
PUBLIC	?lCountCityFeatures@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCountCityFeatures
EXTRN	?countCityFeatures@CvPlayer@@QBEHW4FeatureTypes@@@Z:PROC ; CvPlayer::countCityFeatures
; Function compile flags: /Ogtpy
;	COMDAT ?lCountCityFeatures@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCountCityFeatures@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lCountCityFeatures, COMDAT

; 1310 : 	return BasicLuaMethod(L, &CvPlayerAI::countCityFeatures);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?countCityFeatures@CvPlayer@@QBEHW4FeatureTypes@@@Z ; CvPlayer::countCityFeatures
	push	eax
	call	??$BasicLuaMethod@HW4FeatureTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4FeatureTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum FeatureTypes>
	add	esp, 8

; 1311 : }

	ret	0
?lCountCityFeatures@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lCountCityFeatures
_TEXT	ENDS
PUBLIC	?lCountNumBuildings@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCountNumBuildings
EXTRN	?countNumBuildings@CvPlayer@@QBEHW4BuildingTypes@@@Z:PROC ; CvPlayer::countNumBuildings
; Function compile flags: /Ogtpy
;	COMDAT ?lCountNumBuildings@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCountNumBuildings@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lCountNumBuildings, COMDAT

; 1316 : 	return BasicLuaMethod(L, &CvPlayerAI::countNumBuildings);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?countNumBuildings@CvPlayer@@QBEHW4BuildingTypes@@@Z ; CvPlayer::countNumBuildings
	push	eax
	call	??$BasicLuaMethod@HW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4BuildingTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum BuildingTypes>
	add	esp, 8

; 1317 : }

	ret	0
?lCountNumBuildings@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lCountNumBuildings
_TEXT	ENDS
PUBLIC	?lGetNumWorldWonders@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumWorldWonders
EXTRN	?isWorldWonderClass@@YA_NABVCvBuildingClassInfo@@@Z:PROC ; isWorldWonderClass
EXTRN	?GetBuildingClassInfo@CvBuildingEntry@@QBEABVCvBuildingClassInfo@@XZ:PROC ; CvBuildingEntry::GetBuildingClassInfo
EXTRN	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z:PROC ; CvGlobals::getBuildingInfo
EXTRN	?getNumBuildingInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumBuildingInfos
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumWorldWonders@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumWorldWonders@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumWorldWonders, COMDAT

; 1321 : {

	push	ebx
	push	ebp
	push	esi
	push	edi

; 1322 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	edi, DWORD PTR _L$[esp+12]
	push	edi
	call	_lua_gettop
	push	1
	push	edi
	mov	esi, eax
	mov	bl, 1
	xor	ebp, ebp
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN10@lGetNumWor
	push	OFFSET $SG237728
	push	1
	push	edi
	call	_lua_getfield
	push	-1
	push	edi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN10@lGetNumWor
	push	-1
	push	edi
	call	_lua_touserdata
	mov	ebp, eax
	add	esp, 8
	test	ebp, ebp
	je	SHORT $LN10@lGetNumWor
	xor	bl, bl
$LN10@lGetNumWor:
	push	esi
	push	edi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN17@lGetNumWor
	push	OFFSET $SG237734
	push	edi
	call	_luaL_error
	push	OFFSET $SG237742
	push	edi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN17@lGetNumWor:

; 1323 : 
; 1324 : 	int iWonderCount = 0;
; 1325 : 
; 1326 : #ifdef AUI_WARNING_FIXES
; 1327 : 	uint iBuildingLoop;
; 1328 : #else
; 1329 : 	int iBuildingLoop;
; 1330 : #endif
; 1331 : 	BuildingTypes eBuilding;
; 1332 : 
; 1333 : 	// Loop through all buildings, see if they're a world wonder
; 1334 : 	for(iBuildingLoop = 0; iBuildingLoop < GC.getNumBuildingInfos(); iBuildingLoop++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	xor	ebx, ebx
	xor	esi, esi
	call	?getNumBuildingInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumBuildingInfos
	test	eax, eax
	jle	SHORT $LN3@lGetNumWor
	npad	3
$LL5@lGetNumWor:

; 1335 : 	{
; 1336 : 		eBuilding = (BuildingTypes) iBuildingLoop;
; 1337 : 		CvBuildingEntry* pkBuildingEntry = GC.getBuildingInfo(eBuilding);

	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo

; 1338 : 		if(pkBuildingEntry)

	test	eax, eax
	je	SHORT $LN4@lGetNumWor

; 1339 : 		{
; 1340 : 			if(::isWorldWonderClass(pkBuildingEntry->GetBuildingClassInfo()))

	mov	ecx, eax
	call	?GetBuildingClassInfo@CvBuildingEntry@@QBEABVCvBuildingClassInfo@@XZ ; CvBuildingEntry::GetBuildingClassInfo
	push	eax
	call	?isWorldWonderClass@@YA_NABVCvBuildingClassInfo@@@Z ; isWorldWonderClass
	add	esp, 4
	test	al, al
	je	SHORT $LN4@lGetNumWor

; 1341 : 			{
; 1342 : 				iWonderCount += pkPlayer->countNumBuildings(eBuilding);

	push	esi
	mov	ecx, ebp
	call	?countNumBuildings@CvPlayer@@QBEHW4BuildingTypes@@@Z ; CvPlayer::countNumBuildings
	add	ebx, eax
$LN4@lGetNumWor:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	inc	esi
	call	?getNumBuildingInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumBuildingInfos
	cmp	esi, eax
	jl	SHORT $LL5@lGetNumWor
$LN3@lGetNumWor:

; 1343 : 			}
; 1344 : 		}
; 1345 : 	}
; 1346 : 
; 1347 : 	lua_pushinteger(L, iWonderCount);

	push	ebx
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1348 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1349 : }

	ret	0
?lGetNumWorldWonders@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumWorldWonders
_TEXT	ENDS
PUBLIC	?lChangeNumWorldWonders@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNumWorldWonders
EXTRN	?ChangeNumWonders@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::ChangeNumWonders
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeNumWorldWonders@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeNumWorldWonders@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeNumWorldWonders, COMDAT

; 1353 : {

	push	ebx
	push	ebp
	push	esi

; 1354 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lChangeNum
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lChangeNum
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lChangeNum
	xor	bl, bl
$LN5@lChangeNum:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lChangeNum
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lChangeNum:

; 1355 : 	int iChange = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 1356 : 
; 1357 : 	pkPlayer->ChangeNumWonders(iChange);

	push	eax
	mov	ecx, edi
	call	?ChangeNumWonders@CvPlayer@@QAEXH@Z	; CvPlayer::ChangeNumWonders
	pop	edi
	pop	esi
	pop	ebp

; 1358 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1359 : }

	ret	0
?lChangeNumWorldWonders@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeNumWorldWonders
_TEXT	ENDS
PUBLIC	?lGetNumWondersBeatenTo@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumWondersBeatenTo
EXTRN	?GetNumWondersBeatenTo@CvDiplomacyAI@@QBEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetNumWondersBeatenTo
EXTRN	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ:PROC ; CvPlayer::GetDiplomacyAI
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumWondersBeatenTo@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumWondersBeatenTo@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumWondersBeatenTo, COMDAT

; 1363 : {

	push	ebx
	push	ebp
	push	esi

; 1364 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumWon
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumWon
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumWon
	xor	bl, bl
$LN5@lGetNumWon:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumWon
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumWon:

; 1365 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 1366 : 	int iWondersBeatenTo = pkPlayer->GetDiplomacyAI()->GetNumWondersBeatenTo(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetNumWondersBeatenTo@CvDiplomacyAI@@QBEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetNumWondersBeatenTo

; 1367 : 
; 1368 : 	lua_pushinteger(L, iWondersBeatenTo);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1369 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1370 : }

	ret	0
?lGetNumWondersBeatenTo@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumWondersBeatenTo
_TEXT	ENDS
PUBLIC	?lSetNumWondersBeatenTo@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetNumWondersBeatenTo
EXTRN	?SetNumWondersBeatenTo@CvDiplomacyAI@@QAEXW4PlayerTypes@@H@Z:PROC ; CvDiplomacyAI::SetNumWondersBeatenTo
; Function compile flags: /Ogtpy
;	COMDAT ?lSetNumWondersBeatenTo@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetNumWondersBeatenTo@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetNumWondersBeatenTo, COMDAT

; 1374 : {

	push	ebx
	push	ebp
	push	esi

; 1375 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lSetNumWon
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lSetNumWon
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lSetNumWon
	xor	bl, bl
$LN6@lSetNumWon:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lSetNumWon
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lSetNumWon:

; 1376 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 1377 : 	const int iValue = lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H

; 1378 : 
; 1379 : 	if(iValue > 0)

	test	eax, eax
	jle	SHORT $LN15@lSetNumWon

; 1380 : 	{
; 1381 : 		pkPlayer->GetDiplomacyAI()->SetNumWondersBeatenTo(eOtherPlayer, iValue);

	push	eax
	push	ebx
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?SetNumWondersBeatenTo@CvDiplomacyAI@@QAEXW4PlayerTypes@@H@Z ; CvDiplomacyAI::SetNumWondersBeatenTo
$LN15@lSetNumWon:
	pop	edi
	pop	esi
	pop	ebp

; 1382 : 	}
; 1383 : 
; 1384 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1385 : }

	ret	0
?lSetNumWondersBeatenTo@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetNumWondersBeatenTo
_TEXT	ENDS
PUBLIC	?lIsCapitalConnectedToCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsCapitalConnectedToCity
EXTRN	?IsCapitalConnectedToCity@CvPlayer@@QAE_NPAVCvCity@@W4RouteTypes@@@Z:PROC ; CvPlayer::IsCapitalConnectedToCity
; Function compile flags: /Ogtpy
;	COMDAT ?lIsCapitalConnectedToCity@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkInstance$248720 = -4					; size = 4
_L$ = 8							; size = 4
?lIsCapitalConnectedToCity@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsCapitalConnectedToCity, COMDAT

; 1388 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 1389 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$248720[esp+32], 0
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsCapital
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsCapital
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$248720[esp+20], eax
	test	eax, eax
	je	SHORT $LN5@lIsCapital
	xor	bl, bl
$LN5@lIsCapital:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsCapital
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsCapital:

; 1390 : 	CvCity* pkCity = CvLuaCity::GetInstance(L, 2);

	push	esi
	call	_lua_gettop
	push	2
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN16@lIsCapital
	push	OFFSET $SG237679
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN16@lIsCapital
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN16@lIsCapital
	xor	bl, bl
$LN16@lIsCapital:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN15@lIsCapital
	push	esi
	call	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
	add	esp, 4
$LN15@lIsCapital:

; 1391 : 
; 1392 : 	const bool bResult = pkPlayer->IsCapitalConnectedToCity(pkCity);

	mov	ecx, DWORD PTR _pkInstance$248720[esp+20]
	push	-1
	push	edi
	call	?IsCapitalConnectedToCity@CvPlayer@@QAE_NPAVCvCity@@W4RouteTypes@@@Z ; CvPlayer::IsCapitalConnectedToCity

; 1393 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1394 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1395 : }

	pop	ecx
	ret	0
?lIsCapitalConnectedToCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsCapitalConnectedToCity
_TEXT	ENDS
PUBLIC	?lIsTurnActive@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lIsTurnActive
EXTRN	?isTurnActive@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::isTurnActive
; Function compile flags: /Ogtpy
;	COMDAT ?lIsTurnActive@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsTurnActive@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsTurnActive, COMDAT

; 1400 : 	return BasicLuaMethod(L, &CvPlayerAI::isTurnActive);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isTurnActive@CvPlayer@@QBE_NXZ	; CvPlayer::isTurnActive
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 1401 : }

	ret	0
?lIsTurnActive@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsTurnActive
_TEXT	ENDS
PUBLIC	?lIsSimultaneousTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsSimultaneousTurns
EXTRN	?isSimultaneousTurns@CvPlayer@@QBE_NXZ:PROC	; CvPlayer::isSimultaneousTurns
; Function compile flags: /Ogtpy
;	COMDAT ?lIsSimultaneousTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsSimultaneousTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsSimultaneousTurns, COMDAT

; 1407 : 	return BasicLuaMethod(L, &CvPlayerAI::isSimultaneousTurns);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isSimultaneousTurns@CvPlayer@@QBE_NXZ ; CvPlayer::isSimultaneousTurns
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 1408 : }

	ret	0
?lIsSimultaneousTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsSimultaneousTurns
_TEXT	ENDS
PUBLIC	?lCanRaze@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lCanRaze
EXTRN	?canRaze@CvPlayer@@QBE_NPAVCvCity@@_N@Z:PROC	; CvPlayer::canRaze
EXTRN	?luaL_optbool@@YA_NPAUlua_State@@H_N@Z:PROC	; luaL_optbool
; Function compile flags: /Ogtpy
;	COMDAT ?lCanRaze@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkInstance$248763 = -8					; size = 4
_bIgnoreCapitals$ = -4					; size = 1
_L$ = 8							; size = 4
?lCanRaze@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC		; CvLuaPlayer::lCanRaze, COMDAT

; 1419 : {

	sub	esp, 8
	push	ebx
	push	ebp
	push	esi

; 1420 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+16]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$248763[esp+36], 0
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCanRaze
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCanRaze
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$248763[esp+24], eax
	test	eax, eax
	je	SHORT $LN5@lCanRaze
	xor	bl, bl
$LN5@lCanRaze:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lCanRaze
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lCanRaze:

; 1421 : 	CvCity* pkCity = CvLuaCity::GetInstance(L, 2);

	push	esi
	call	_lua_gettop
	push	2
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN16@lCanRaze
	push	OFFSET $SG237679
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN16@lCanRaze
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN16@lCanRaze
	xor	bl, bl
$LN16@lCanRaze:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN15@lCanRaze
	push	esi
	call	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
	add	esp, 4
$LN15@lCanRaze:

; 1422 : 	bool bIgnoreCapitals = luaL_optbool(L, 3, false);

	push	0
	push	3
	push	esi
	call	?luaL_optbool@@YA_NPAUlua_State@@H_N@Z	; luaL_optbool

; 1423 : 
; 1424 : 	const bool bResult = pkPlayer->canRaze(pkCity, bIgnoreCapitals);

	mov	ecx, DWORD PTR _pkInstance$248763[esp+36]
	mov	BYTE PTR _bIgnoreCapitals$[esp+36], al
	mov	eax, DWORD PTR _bIgnoreCapitals$[esp+36]
	add	esp, 12					; 0000000cH
	push	eax
	push	edi
	call	?canRaze@CvPlayer@@QBE_NPAVCvCity@@_N@Z	; CvPlayer::canRaze

; 1425 : 	lua_pushboolean(L, bResult);

	movzx	ecx, al
	push	ecx
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1426 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1427 : }

	add	esp, 8
	ret	0
?lCanRaze@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP		; CvLuaPlayer::lCanRaze
_TEXT	ENDS
PUBLIC	?lRaze@CvLuaPlayer@@KAHPAUlua_State@@@Z		; CvLuaPlayer::lRaze
EXTRN	?raze@CvPlayer@@QAEXPAVCvCity@@@Z:PROC		; CvPlayer::raze
; Function compile flags: /Ogtpy
;	COMDAT ?lRaze@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkInstance$248800 = -4					; size = 4
_L$ = 8							; size = 4
?lRaze@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC		; CvLuaPlayer::lRaze, COMDAT

; 1431 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 1432 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$248800[esp+32], 0
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lRaze
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lRaze
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$248800[esp+20], eax
	test	eax, eax
	je	SHORT $LN5@lRaze
	xor	bl, bl
$LN5@lRaze:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lRaze
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lRaze:

; 1433 : 	CvCity* pkCity = CvLuaCity::GetInstance(L, 2);

	push	esi
	call	_lua_gettop
	push	2
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN16@lRaze
	push	OFFSET $SG237679
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN16@lRaze
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN16@lRaze
	xor	bl, bl
$LN16@lRaze:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN15@lRaze
	push	esi
	call	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
	add	esp, 4
$LN15@lRaze:

; 1434 : 
; 1435 : 	pkPlayer->raze(pkCity);

	mov	ecx, DWORD PTR _pkInstance$248800[esp+20]
	push	edi
	call	?raze@CvPlayer@@QAEXPAVCvCity@@@Z	; CvPlayer::raze
	pop	edi
	pop	esi
	pop	ebp

; 1436 : 	return 0;

	xor	eax, eax
	pop	ebx

; 1437 : }

	pop	ecx
	ret	0
?lRaze@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP		; CvLuaPlayer::lRaze
_TEXT	ENDS
PUBLIC	?lDisband@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lDisband
EXTRN	?disband@CvPlayer@@QAEXPAVCvCity@@@Z:PROC	; CvPlayer::disband
; Function compile flags: /Ogtpy
;	COMDAT ?lDisband@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkInstance$248839 = -4					; size = 4
_L$ = 8							; size = 4
?lDisband@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC		; CvLuaPlayer::lDisband, COMDAT

; 1441 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 1442 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$248839[esp+32], 0
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lDisband
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lDisband
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$248839[esp+20], eax
	test	eax, eax
	je	SHORT $LN5@lDisband
	xor	bl, bl
$LN5@lDisband:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lDisband
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lDisband:

; 1443 : 	CvCity* pkCity = CvLuaCity::GetInstance(L, 2);

	push	esi
	call	_lua_gettop
	push	2
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN16@lDisband
	push	OFFSET $SG237679
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN16@lDisband
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN16@lDisband
	xor	bl, bl
$LN16@lDisband:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN15@lDisband
	push	esi
	call	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
	add	esp, 4
$LN15@lDisband:

; 1444 : 
; 1445 : 	pkPlayer->disband(pkCity);

	mov	ecx, DWORD PTR _pkInstance$248839[esp+20]
	push	edi
	call	?disband@CvPlayer@@QAEXPAVCvCity@@@Z	; CvPlayer::disband
	pop	edi
	pop	esi
	pop	ebp

; 1446 : 	return 0;

	xor	eax, eax
	pop	ebx

; 1447 : }

	pop	ecx
	ret	0
?lDisband@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP		; CvLuaPlayer::lDisband
_TEXT	ENDS
PUBLIC	?lCanReceiveGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanReceiveGoody
EXTRN	?canReceiveGoody@CvPlayer@@QBE_NPAVCvPlot@@W4GoodyTypes@@PAVCvUnit@@@Z:PROC ; CvPlayer::canReceiveGoody
; Function compile flags: /Ogtpy
;	COMDAT ?lCanReceiveGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkInstance$248890 = -12				; size = 4
_pkInstance$248879 = -8					; size = 4
_stack_size$248899 = -4					; size = 4
_L$ = 8							; size = 4
?lCanReceiveGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lCanReceiveGoody, COMDAT

; 1451 : {

	sub	esp, 12					; 0000000cH
	push	ebx
	push	ebp
	push	esi

; 1452 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+20]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	xor	edi, edi
	push	esi
	mov	ebp, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$248879[esp+40], edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN28@lCanReceiv
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN28@lCanReceiv
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$248879[esp+28], eax
	cmp	eax, edi
	je	SHORT $LN28@lCanReceiv
	xor	bl, bl
$LN28@lCanReceiv:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lCanReceiv
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lCanReceiv:

; 1453 : 	CvPlot* pPlot = CvLuaPlot::GetInstance(L, 2);

	push	esi
	call	_lua_gettop
	push	2
	push	esi
	mov	ebp, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$248890[esp+40], edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN16@lCanReceiv
	push	OFFSET $SG237776
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN16@lCanReceiv
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$248890[esp+28], eax
	cmp	eax, edi
	je	SHORT $LN16@lCanReceiv
	xor	bl, bl
$LN16@lCanReceiv:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN15@lCanReceiv
	push	esi
	call	?HandleMissingInstance@CvLuaPlot@@SAXPAUlua_State@@@Z ; CvLuaPlot::HandleMissingInstance
	add	esp, 4
$LN15@lCanReceiv:

; 1454 : 	GoodyTypes eGoody = (GoodyTypes)lua_tointeger(L, 3);

	push	3
	push	esi
	call	_lua_tointeger

; 1455 : 	CvUnit* pUnit = CvLuaUnit::GetInstance(L, 4);

	push	esi
	mov	ebp, eax
	call	_lua_gettop
	push	4
	push	esi
	mov	DWORD PTR _stack_size$248899[esp+48], eax
	mov	bl, 1
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 5
	jne	SHORT $LN23@lCanReceiv
	push	OFFSET $SG237816
	push	4
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN23@lCanReceiv
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN23@lCanReceiv
	xor	bl, bl
$LN23@lCanReceiv:
	mov	eax, DWORD PTR _stack_size$248899[esp+28]
	push	eax
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN22@lCanReceiv
	push	esi
	call	?HandleMissingInstance@CvLuaUnit@@SAXPAUlua_State@@@Z ; CvLuaUnit::HandleMissingInstance
	add	esp, 4
$LN22@lCanReceiv:

; 1456 : 
; 1457 : 	bool bResult = pkPlayer->canReceiveGoody(pPlot, eGoody, pUnit);

	mov	ecx, DWORD PTR _pkInstance$248890[esp+28]
	push	edi
	push	ebp
	push	ecx
	mov	ecx, DWORD PTR _pkInstance$248879[esp+40]
	call	?canReceiveGoody@CvPlayer@@QBE_NPAVCvPlot@@W4GoodyTypes@@PAVCvUnit@@@Z ; CvPlayer::canReceiveGoody

; 1458 : 	lua_pushboolean(L, bResult);

	movzx	edx, al
	push	edx
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1459 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1460 : }

	add	esp, 12					; 0000000cH
	ret	0
?lCanReceiveGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lCanReceiveGoody
_TEXT	ENDS
PUBLIC	?lReceiveGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lReceiveGoody
EXTRN	?receiveGoody@CvPlayer@@QAEXPAVCvPlot@@W4GoodyTypes@@PAVCvUnit@@@Z:PROC ; CvPlayer::receiveGoody
; Function compile flags: /Ogtpy
;	COMDAT ?lReceiveGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lReceiveGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lReceiveGoody, COMDAT

; 1465 : 	return BasicLuaMethod(L, &CvPlayerAI::receiveGoody);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?receiveGoody@CvPlayer@@QAEXPAVCvPlot@@W4GoodyTypes@@PAVCvUnit@@@Z ; CvPlayer::receiveGoody
	push	eax
	call	??$BasicLuaMethod@PAVCvPlot@@W4GoodyTypes@@PAVCvUnit@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXPAVCvPlot@@W4GoodyTypes@@PAVCvUnit@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<CvPlot *,enum GoodyTypes,CvUnit *>
	add	esp, 8

; 1466 : }

	ret	0
?lReceiveGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lReceiveGoody
_TEXT	ENDS
PUBLIC	?lDoGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lDoGoody
EXTRN	?doGoody@CvPlayer@@QAEXPAVCvPlot@@PAVCvUnit@@@Z:PROC ; CvPlayer::doGoody
; Function compile flags: /Ogtpy
;	COMDAT ?lDoGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lDoGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC		; CvLuaPlayer::lDoGoody, COMDAT

; 1471 : 	return BasicLuaMethod(L, &CvPlayerAI::doGoody);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?doGoody@CvPlayer@@QAEXPAVCvPlot@@PAVCvUnit@@@Z ; CvPlayer::doGoody
	push	eax
	call	??$BasicLuaMethod@PAVCvPlot@@PAVCvUnit@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXPAVCvPlot@@PAVCvUnit@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<CvPlot *,CvUnit *>
	add	esp, 8

; 1472 : }

	ret	0
?lDoGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP		; CvLuaPlayer::lDoGoody
_TEXT	ENDS
PUBLIC	?lCanGetGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lCanGetGoody
EXTRN	?getGoodies@CvHandicapInfo@@QBEHH@Z:PROC	; CvHandicapInfo::getGoodies
EXTRN	?getNumGoodies@CvHandicapInfo@@QBEHXZ:PROC	; CvHandicapInfo::getNumGoodies
EXTRN	?getHandicapInfo@CvPlayer@@QBEAAVCvHandicapInfo@@XZ:PROC ; CvPlayer::getHandicapInfo
; Function compile flags: /Ogtpy
;	COMDAT ?lCanGetGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkInstance$248956 = -12				; size = 4
_pkInstance$248945 = -8					; size = 4
_eGoody$ = -4						; size = 4
_L$ = 8							; size = 4
?lCanGetGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lCanGetGoody, COMDAT

; 1476 : {

	sub	esp, 12					; 0000000cH
	push	ebx
	push	ebp
	push	esi

; 1477 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+20]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	xor	ebp, ebp
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN37@lCanGetGoo
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN37@lCanGetGoo
	push	-1
	push	esi
	call	_lua_touserdata
	mov	ebp, eax
	add	esp, 8
	test	ebp, ebp
	je	SHORT $LN37@lCanGetGoo
	xor	bl, bl
$LN37@lCanGetGoo:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN17@lCanGetGoo
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN17@lCanGetGoo:

; 1478 : 	CvPlot* pPlot = CvLuaPlot::GetInstance(L, 2);

	push	esi
	call	_lua_gettop
	push	2
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$248945[esp+40], 0
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN21@lCanGetGoo
	push	OFFSET $SG237776
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN21@lCanGetGoo
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$248945[esp+28], eax
	test	eax, eax
	je	SHORT $LN21@lCanGetGoo
	xor	bl, bl
$LN21@lCanGetGoo:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN20@lCanGetGoo
	push	esi
	call	?HandleMissingInstance@CvLuaPlot@@SAXPAUlua_State@@@Z ; CvLuaPlot::HandleMissingInstance
	add	esp, 4
$LN20@lCanGetGoo:

; 1479 : 	GoodyTypes eGoody = (GoodyTypes)lua_tointeger(L, 3);

	push	3
	push	esi
	call	_lua_tointeger

; 1480 : 	CvUnit* pUnit = CvLuaUnit::GetInstance(L, 4);

	push	esi
	mov	DWORD PTR _eGoody$[esp+40], eax
	call	_lua_gettop
	push	4
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$248956[esp+48], 0
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 5
	jne	SHORT $LN28@lCanGetGoo
	push	OFFSET $SG237816
	push	4
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN28@lCanGetGoo
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$248956[esp+28], eax
	test	eax, eax
	je	SHORT $LN28@lCanGetGoo
	xor	bl, bl
$LN28@lCanGetGoo:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN27@lCanGetGoo
	push	esi
	call	?HandleMissingInstance@CvLuaUnit@@SAXPAUlua_State@@@Z ; CvLuaUnit::HandleMissingInstance
	add	esp, 4
$LN27@lCanGetGoo:

; 1481 : 
; 1482 : 	bool bResult = false;
; 1483 : 	// Need to have Goodies in the Handicap file to pick from
; 1484 : 	if(pkPlayer->getHandicapInfo().getNumGoodies() > 0)

	mov	ecx, ebp
	xor	bl, bl
	call	?getHandicapInfo@CvPlayer@@QBEAAVCvHandicapInfo@@XZ ; CvPlayer::getHandicapInfo
	mov	ecx, eax
	call	?getNumGoodies@CvHandicapInfo@@QBEHXZ	; CvHandicapInfo::getNumGoodies
	test	eax, eax
	jle	SHORT $LN36@lCanGetGoo

; 1485 : 	{
; 1486 : 		for(int iGoodyLoop = 0; iGoodyLoop < pkPlayer->getHandicapInfo().getNumGoodies(); iGoodyLoop++)

	mov	ecx, ebp
	xor	edi, edi
	call	?getHandicapInfo@CvPlayer@@QBEAAVCvHandicapInfo@@XZ ; CvPlayer::getHandicapInfo
	mov	ecx, eax
	call	?getNumGoodies@CvHandicapInfo@@QBEHXZ	; CvHandicapInfo::getNumGoodies
	test	eax, eax
	jle	SHORT $LN36@lCanGetGoo
$LL4@lCanGetGoo:

; 1487 : 		{
; 1488 : 			GoodyTypes eThisGoody = (GoodyTypes) pkPlayer->getHandicapInfo().getGoodies(iGoodyLoop);

	push	edi
	mov	ecx, ebp
	call	?getHandicapInfo@CvPlayer@@QBEAAVCvHandicapInfo@@XZ ; CvPlayer::getHandicapInfo
	mov	ecx, eax
	call	?getGoodies@CvHandicapInfo@@QBEHH@Z	; CvHandicapInfo::getGoodies

; 1489 : 			if(eGoody == eThisGoody && pkPlayer->canReceiveGoody(pPlot, eThisGoody, pUnit))

	cmp	DWORD PTR _eGoody$[esp+28], eax
	jne	SHORT $LN3@lCanGetGoo
	mov	ecx, DWORD PTR _pkInstance$248956[esp+28]
	mov	edx, DWORD PTR _pkInstance$248945[esp+28]
	push	ecx
	push	eax
	push	edx
	mov	ecx, ebp
	call	?canReceiveGoody@CvPlayer@@QBE_NPAVCvPlot@@W4GoodyTypes@@PAVCvUnit@@@Z ; CvPlayer::canReceiveGoody
	test	al, al
	jne	SHORT $LN34@lCanGetGoo
$LN3@lCanGetGoo:

; 1485 : 	{
; 1486 : 		for(int iGoodyLoop = 0; iGoodyLoop < pkPlayer->getHandicapInfo().getNumGoodies(); iGoodyLoop++)

	mov	ecx, ebp
	inc	edi
	call	?getHandicapInfo@CvPlayer@@QBEAAVCvHandicapInfo@@XZ ; CvPlayer::getHandicapInfo
	mov	ecx, eax
	call	?getNumGoodies@CvHandicapInfo@@QBEHXZ	; CvHandicapInfo::getNumGoodies
	cmp	edi, eax
	jl	SHORT $LL4@lCanGetGoo

; 1489 : 			if(eGoody == eThisGoody && pkPlayer->canReceiveGoody(pPlot, eThisGoody, pUnit))

	jmp	SHORT $LN36@lCanGetGoo
$LN34@lCanGetGoo:

; 1490 : 			{
; 1491 : 				bResult = true;

	mov	bl, 1
$LN36@lCanGetGoo:

; 1492 : 				break;
; 1493 : 			}
; 1494 : 		}
; 1495 : 	}
; 1496 : 
; 1497 : 	lua_pushboolean(L, bResult);

	movzx	eax, bl
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1498 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1499 : }

	add	esp, 12					; 0000000cH
	ret	0
?lCanGetGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lCanGetGoody
_TEXT	ENDS
PUBLIC	?lCanFound@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lCanFound
EXTRN	?canFound@CvPlayer@@QBE_NHH_N@Z:PROC		; CvPlayer::canFound
; Function compile flags: /Ogtpy
;	COMDAT ?lCanFound@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanFound@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lCanFound, COMDAT

; 1505 : 	return BasicLuaMethod(L, &CvPlayerAI::canFound);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?canFound@CvPlayer@@QBE_NHH_N@Z	; CvPlayer::canFound
	push	eax
	call	??$BasicLuaMethod@_NHH_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NHH_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,int,int,bool>
	add	esp, 8

; 1506 : }

	ret	0
?lCanFound@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lCanFound
_TEXT	ENDS
PUBLIC	?lFound@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lFound
EXTRN	?found@CvPlayer@@QAEXHH@Z:PROC			; CvPlayer::found
; Function compile flags: /Ogtpy
;	COMDAT ?lFound@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lFound@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC		; CvLuaPlayer::lFound, COMDAT

; 1511 : 	return BasicLuaMethod(L, &CvPlayerAI::found);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?found@CvPlayer@@QAEXHH@Z	; CvPlayer::found
	push	eax
	call	??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXHH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,int>
	add	esp, 8

; 1512 : }

	ret	0
?lFound@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP		; CvLuaPlayer::lFound
_TEXT	ENDS
PUBLIC	?lCanTrain@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lCanTrain
EXTRN	?canTrain@CvPlayer@@QBE_NW4UnitTypes@@_N111PAVCvString@@@Z:PROC ; CvPlayer::canTrain
; Function compile flags: /Ogtpy
;	COMDAT ?lCanTrain@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bIgnoreUniqueUnitStatus$ = -16				; size = 1
_bIgnoreCost$ = -12					; size = 1
_bTestVisible$ = -8					; size = 1
_bContinue$ = -4					; size = 1
_L$ = 8							; size = 4
?lCanTrain@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lCanTrain, COMDAT

; 1517 : {

	sub	esp, 16					; 00000010H
	push	ebx
	push	ebp
	push	esi

; 1518 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+24]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCanTrain
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCanTrain
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCanTrain
	xor	bl, bl
$LN5@lCanTrain:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lCanTrain
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lCanTrain:

; 1519 : 	const UnitTypes eUnit = (UnitTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 1520 : 	const bool bContinue = lua_toboolean(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_toboolean
	test	eax, eax
	setne	al

; 1521 : 	const bool bTestVisible = lua_toboolean(L, 4);

	push	4
	push	esi
	mov	BYTE PTR _bContinue$[esp+56], al
	call	_lua_toboolean
	test	eax, eax
	setne	cl

; 1522 : 	const bool bIgnoreCost = lua_toboolean(L, 5);

	push	5
	push	esi
	mov	BYTE PTR _bTestVisible$[esp+64], cl
	call	_lua_toboolean
	test	eax, eax
	setne	dl

; 1523 : 	const bool bIgnoreUniqueUnitStatus = lua_toboolean(L, 6);

	push	6
	push	esi
	mov	BYTE PTR _bIgnoreCost$[esp+72], dl
	call	_lua_toboolean

; 1524 : 
; 1525 : 	const bool bResult = pkPlayer->canTrain(eUnit, bContinue, bTestVisible, bIgnoreCost, bIgnoreUniqueUnitStatus);

	mov	edx, DWORD PTR _bIgnoreCost$[esp+72]
	add	esp, 40					; 00000028H
	test	eax, eax
	setne	al
	push	0
	mov	BYTE PTR _bIgnoreUniqueUnitStatus$[esp+36], al
	mov	ecx, DWORD PTR _bIgnoreUniqueUnitStatus$[esp+36]
	mov	eax, DWORD PTR _bTestVisible$[esp+36]
	push	ecx
	mov	ecx, DWORD PTR _bContinue$[esp+40]
	push	edx
	push	eax
	push	ecx
	push	ebx
	mov	ecx, edi
	call	?canTrain@CvPlayer@@QBE_NW4UnitTypes@@_N111PAVCvString@@@Z ; CvPlayer::canTrain

; 1526 : 	lua_pushboolean(L, bResult);

	movzx	edx, al
	push	edx
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1527 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1528 : }

	add	esp, 16					; 00000010H
	ret	0
?lCanTrain@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lCanTrain
_TEXT	ENDS
PUBLIC	?lCanConstruct@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lCanConstruct
EXTRN	?canConstruct@CvPlayer@@QBE_NW4BuildingTypes@@_N11PAVCvString@@@Z:PROC ; CvPlayer::canConstruct
; Function compile flags: /Ogtpy
;	COMDAT ?lCanConstruct@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bIgnoreCost$ = -12					; size = 1
_bTestVisible$ = -8					; size = 1
_bContinue$ = -4					; size = 1
_L$ = 8							; size = 4
?lCanConstruct@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lCanConstruct, COMDAT

; 1532 : {

	sub	esp, 12					; 0000000cH
	push	ebx
	push	ebp
	push	esi

; 1533 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+20]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCanConstr
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCanConstr
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCanConstr
	xor	bl, bl
$LN5@lCanConstr:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lCanConstr
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lCanConstr:

; 1534 : 	const int iBuilding = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 1535 : 	const bool bContinue = luaL_optint(L, 3, 0);

	push	0
	push	3
	push	esi
	mov	ebx, eax
	call	_luaL_optinteger

; 1536 : 	const bool bTestVisible = luaL_optint(L, 4, 0);

	push	0
	test	eax, eax
	setne	al
	push	4
	push	esi
	mov	BYTE PTR _bContinue$[esp+60], al
	call	_luaL_optinteger

; 1537 : 	const bool bIgnoreCost = luaL_optint(L, 5, 0);

	push	0
	test	eax, eax
	setne	cl
	push	5
	push	esi
	mov	BYTE PTR _bTestVisible$[esp+72], cl
	call	_luaL_optinteger

; 1538 : 	const bool bResult = pkPlayer->canConstruct((BuildingTypes)iBuilding, bContinue, bTestVisible, bIgnoreCost);

	mov	ecx, DWORD PTR _bTestVisible$[esp+72]
	add	esp, 44					; 0000002cH
	test	eax, eax
	setne	dl
	mov	BYTE PTR _bIgnoreCost$[esp+28], dl
	mov	eax, DWORD PTR _bIgnoreCost$[esp+28]
	mov	edx, DWORD PTR _bContinue$[esp+28]
	push	0
	push	eax
	push	ecx
	push	edx
	push	ebx
	mov	ecx, edi
	call	?canConstruct@CvPlayer@@QBE_NW4BuildingTypes@@_N11PAVCvString@@@Z ; CvPlayer::canConstruct

; 1539 : 
; 1540 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1541 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1542 : }

	add	esp, 12					; 0000000cH
	ret	0
?lCanConstruct@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lCanConstruct
_TEXT	ENDS
PUBLIC	?lCanCreate@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lCanCreate
EXTRN	?canCreate@CvPlayer@@QBE_NW4ProjectTypes@@_N1@Z:PROC ; CvPlayer::canCreate
; Function compile flags: /Ogtpy
;	COMDAT ?lCanCreate@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanCreate@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lCanCreate, COMDAT

; 1547 : 	return BasicLuaMethod(L, &CvPlayerAI::canCreate);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?canCreate@CvPlayer@@QBE_NW4ProjectTypes@@_N1@Z ; CvPlayer::canCreate
	push	eax
	call	??$BasicLuaMethod@_NW4ProjectTypes@@_N_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4ProjectTypes@@_N2@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum ProjectTypes,bool,bool>
	add	esp, 8

; 1548 : }

	ret	0
?lCanCreate@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lCanCreate
_TEXT	ENDS
PUBLIC	?lCanPrepare@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lCanPrepare
EXTRN	?canPrepare@CvPlayer@@QBE_NW4SpecialistTypes@@_N@Z:PROC ; CvPlayer::canPrepare
; Function compile flags: /Ogtpy
;	COMDAT ?lCanPrepare@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanPrepare@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lCanPrepare, COMDAT

; 1553 : 	return BasicLuaMethod(L, &CvPlayerAI::canPrepare);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?canPrepare@CvPlayer@@QBE_NW4SpecialistTypes@@_N@Z ; CvPlayer::canPrepare
	push	eax
	call	??$BasicLuaMethod@_NW4SpecialistTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4SpecialistTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum SpecialistTypes,bool>
	add	esp, 8

; 1554 : }

	ret	0
?lCanPrepare@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lCanPrepare
_TEXT	ENDS
PUBLIC	?lCanMaintain@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lCanMaintain
EXTRN	?canMaintain@CvPlayer@@QBE_NW4ProcessTypes@@_N@Z:PROC ; CvPlayer::canMaintain
; Function compile flags: /Ogtpy
;	COMDAT ?lCanMaintain@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanMaintain@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lCanMaintain, COMDAT

; 1559 : 	return BasicLuaMethod(L, &CvPlayerAI::canMaintain);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?canMaintain@CvPlayer@@QBE_NW4ProcessTypes@@_N@Z ; CvPlayer::canMaintain
	push	eax
	call	??$BasicLuaMethod@_NW4ProcessTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4ProcessTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum ProcessTypes,bool>
	add	esp, 8

; 1560 : }

	ret	0
?lCanMaintain@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lCanMaintain
_TEXT	ENDS
PUBLIC	?lIsCanPurchaseAnyCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsCanPurchaseAnyCity
EXTRN	?IsCanPurchaseAnyCity@CvPlayer@@QAE_N_N0W4UnitTypes@@W4BuildingTypes@@W4YieldTypes@@@Z:PROC ; CvPlayer::IsCanPurchaseAnyCity
; Function compile flags: /Ogtpy
;	COMDAT ?lIsCanPurchaseAnyCity@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bTestTrainable$ = -8					; size = 1
_bTestPurchaseCost$ = -4				; size = 1
_L$ = 8							; size = 4
?lIsCanPurchaseAnyCity@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsCanPurchaseAnyCity, COMDAT

; 1564 : {

	sub	esp, 8
	push	ebx
	push	ebp
	push	esi

; 1565 : 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+16]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsCanPurc
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsCanPurc
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsCanPurc
	xor	bl, bl
$LN5@lIsCanPurc:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsCanPurc
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsCanPurc:

; 1566 : 	const bool bTestPurchaseCost = lua_toboolean(L, 2);

	push	2
	push	esi
	call	_lua_toboolean
	test	eax, eax
	setne	al

; 1567 : 	const bool bTestTrainable = lua_toboolean(L, 3);

	push	3
	push	esi
	mov	BYTE PTR _bTestPurchaseCost$[esp+40], al
	call	_lua_toboolean
	test	eax, eax
	setne	cl

; 1568 : 	const UnitTypes eUnitType = (UnitTypes) lua_tointeger(L, 4);

	push	4
	push	esi
	mov	BYTE PTR _bTestTrainable$[esp+48], cl
	call	_lua_tointeger

; 1569 : 	const BuildingTypes eBuildingType = (BuildingTypes) lua_tointeger(L, 5);

	push	5
	push	esi
	mov	ebx, eax
	call	_lua_tointeger

; 1570 : 	const YieldTypes ePurchaseYield = (YieldTypes) lua_tointeger(L, 6);

	push	6
	push	esi
	mov	ebp, eax
	call	_lua_tointeger

; 1571 : 
; 1572 : 	const bool bResult = pkPlayer->IsCanPurchaseAnyCity(bTestPurchaseCost, bTestTrainable, eUnitType, eBuildingType, ePurchaseYield);

	mov	edx, DWORD PTR _bTestTrainable$[esp+64]
	add	esp, 40					; 00000028H
	push	eax
	mov	eax, DWORD PTR _bTestPurchaseCost$[esp+28]
	push	ebp
	push	ebx
	push	edx
	push	eax
	mov	ecx, edi
	call	?IsCanPurchaseAnyCity@CvPlayer@@QAE_N_N0W4UnitTypes@@W4BuildingTypes@@W4YieldTypes@@@Z ; CvPlayer::IsCanPurchaseAnyCity

; 1573 : 
; 1574 : 	lua_pushboolean(L, bResult);

	movzx	ecx, al
	push	ecx
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1575 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1576 : }

	add	esp, 8
	ret	0
?lIsCanPurchaseAnyCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsCanPurchaseAnyCity
_TEXT	ENDS
PUBLIC	?lGetFaithPurchaseType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFaithPurchaseType
EXTRN	?GetFaithPurchaseType@CvPlayer@@QBE?AW4FaithPurchaseTypes@@XZ:PROC ; CvPlayer::GetFaithPurchaseType
; Function compile flags: /Ogtpy
;	COMDAT ?lGetFaithPurchaseType@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFaithPurchaseType@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetFaithPurchaseType, COMDAT

; 1581 : 	return BasicLuaMethod(L, &CvPlayerAI::GetFaithPurchaseType);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetFaithPurchaseType@CvPlayer@@QBE?AW4FaithPurchaseTypes@@XZ ; CvPlayer::GetFaithPurchaseType
	push	eax
	call	??$BasicLuaMethod@W4FaithPurchaseTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4FaithPurchaseTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum FaithPurchaseTypes>
	add	esp, 8

; 1582 : }

	ret	0
?lGetFaithPurchaseType@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetFaithPurchaseType
_TEXT	ENDS
PUBLIC	?lSetFaithPurchaseType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetFaithPurchaseType
EXTRN	?SetFaithPurchaseType@CvPlayer@@QAEXW4FaithPurchaseTypes@@@Z:PROC ; CvPlayer::SetFaithPurchaseType
; Function compile flags: /Ogtpy
;	COMDAT ?lSetFaithPurchaseType@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetFaithPurchaseType@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetFaithPurchaseType, COMDAT

; 1587 : 	return BasicLuaMethod(L, &CvPlayerAI::SetFaithPurchaseType);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?SetFaithPurchaseType@CvPlayer@@QAEXW4FaithPurchaseTypes@@@Z ; CvPlayer::SetFaithPurchaseType
	push	eax
	call	??$BasicLuaMethod@W4FaithPurchaseTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4FaithPurchaseTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum FaithPurchaseTypes>
	add	esp, 8

; 1588 : }

	ret	0
?lSetFaithPurchaseType@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetFaithPurchaseType
_TEXT	ENDS
PUBLIC	?lGetFaithPurchaseIndex@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFaithPurchaseIndex
EXTRN	?GetFaithPurchaseIndex@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetFaithPurchaseIndex
; Function compile flags: /Ogtpy
;	COMDAT ?lGetFaithPurchaseIndex@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFaithPurchaseIndex@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetFaithPurchaseIndex, COMDAT

; 1593 : 	return BasicLuaMethod(L, &CvPlayerAI::GetFaithPurchaseIndex);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetFaithPurchaseIndex@CvPlayer@@QBEHXZ ; CvPlayer::GetFaithPurchaseIndex
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 1594 : }

	ret	0
?lGetFaithPurchaseIndex@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetFaithPurchaseIndex
_TEXT	ENDS
PUBLIC	?lSetFaithPurchaseIndex@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetFaithPurchaseIndex
EXTRN	?SetFaithPurchaseIndex@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::SetFaithPurchaseIndex
; Function compile flags: /Ogtpy
;	COMDAT ?lSetFaithPurchaseIndex@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetFaithPurchaseIndex@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetFaithPurchaseIndex, COMDAT

; 1599 : 	return BasicLuaMethod(L, &CvPlayerAI::SetFaithPurchaseIndex);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?SetFaithPurchaseIndex@CvPlayer@@QAEXH@Z ; CvPlayer::SetFaithPurchaseIndex
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 1600 : }

	ret	0
?lSetFaithPurchaseIndex@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetFaithPurchaseIndex
_TEXT	ENDS
PUBLIC	?lIsProductionMaxedUnitClass@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsProductionMaxedUnitClass
EXTRN	?isProductionMaxedUnitClass@CvPlayer@@QBE_NW4UnitClassTypes@@@Z:PROC ; CvPlayer::isProductionMaxedUnitClass
; Function compile flags: /Ogtpy
;	COMDAT ?lIsProductionMaxedUnitClass@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsProductionMaxedUnitClass@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsProductionMaxedUnitClass, COMDAT

; 1605 : 	return BasicLuaMethod(L, &CvPlayerAI::isProductionMaxedUnitClass);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isProductionMaxedUnitClass@CvPlayer@@QBE_NW4UnitClassTypes@@@Z ; CvPlayer::isProductionMaxedUnitClass
	push	eax
	call	??$BasicLuaMethod@_NW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4UnitClassTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum UnitClassTypes>
	add	esp, 8

; 1606 : }

	ret	0
?lIsProductionMaxedUnitClass@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsProductionMaxedUnitClass
_TEXT	ENDS
PUBLIC	?lIsProductionMaxedBuildingClass@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsProductionMaxedBuildingClass
EXTRN	?isProductionMaxedBuildingClass@CvPlayer@@QBE_NW4BuildingClassTypes@@_N@Z:PROC ; CvPlayer::isProductionMaxedBuildingClass
; Function compile flags: /Ogtpy
;	COMDAT ?lIsProductionMaxedBuildingClass@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsProductionMaxedBuildingClass@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsProductionMaxedBuildingClass, COMDAT

; 1611 : 	return BasicLuaMethod(L, &CvPlayerAI::isProductionMaxedBuildingClass);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isProductionMaxedBuildingClass@CvPlayer@@QBE_NW4BuildingClassTypes@@_N@Z ; CvPlayer::isProductionMaxedBuildingClass
	push	eax
	call	??$BasicLuaMethod@_NW4BuildingClassTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4BuildingClassTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum BuildingClassTypes,bool>
	add	esp, 8

; 1612 : }

	ret	0
?lIsProductionMaxedBuildingClass@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsProductionMaxedBuildingClass
_TEXT	ENDS
PUBLIC	?lIsProductionMaxedProject@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsProductionMaxedProject
EXTRN	?isProductionMaxedProject@CvPlayer@@QBE_NW4ProjectTypes@@@Z:PROC ; CvPlayer::isProductionMaxedProject
; Function compile flags: /Ogtpy
;	COMDAT ?lIsProductionMaxedProject@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsProductionMaxedProject@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsProductionMaxedProject, COMDAT

; 1617 : 	return BasicLuaMethod(L, &CvPlayerAI::isProductionMaxedProject);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isProductionMaxedProject@CvPlayer@@QBE_NW4ProjectTypes@@@Z ; CvPlayer::isProductionMaxedProject
	push	eax
	call	??$BasicLuaMethod@_NW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4ProjectTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum ProjectTypes>
	add	esp, 8

; 1618 : }

	ret	0
?lIsProductionMaxedProject@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsProductionMaxedProject
_TEXT	ENDS
PUBLIC	?lGetUnitProductionNeeded@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnitProductionNeeded
EXTRN	?getProductionNeeded@CvPlayer@@QBEHW4UnitTypes@@@Z:PROC ; CvPlayer::getProductionNeeded
; Function compile flags: /Ogtpy
;	COMDAT ?lGetUnitProductionNeeded@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnitProductionNeeded@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetUnitProductionNeeded, COMDAT

; 1622 : {

	push	ebx
	push	ebp
	push	esi

; 1623 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetUnitPr
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetUnitPr
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetUnitPr
	xor	bl, bl
$LN5@lGetUnitPr:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetUnitPr
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetUnitPr:

; 1624 : 	const UnitTypes iIndex = (UnitTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 1625 : 
; 1626 : 	const int iResult = pkPlayer->getProductionNeeded(iIndex);

	push	eax
	mov	ecx, edi
	call	?getProductionNeeded@CvPlayer@@QBEHW4UnitTypes@@@Z ; CvPlayer::getProductionNeeded

; 1627 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1628 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1629 : }

	ret	0
?lGetUnitProductionNeeded@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetUnitProductionNeeded
_TEXT	ENDS
PUBLIC	?lGetBuildingProductionNeeded@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBuildingProductionNeeded
EXTRN	?getProductionNeeded@CvPlayer@@QBEHW4BuildingTypes@@@Z:PROC ; CvPlayer::getProductionNeeded
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBuildingProductionNeeded@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBuildingProductionNeeded@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetBuildingProductionNeeded, COMDAT

; 1633 : {

	push	ebx
	push	ebp
	push	esi

; 1634 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetBuildi
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetBuildi
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetBuildi
	xor	bl, bl
$LN5@lGetBuildi:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetBuildi
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetBuildi:

; 1635 : 	const BuildingTypes iIndex = (BuildingTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 1636 : 
; 1637 : 	const int iResult = pkPlayer->getProductionNeeded(iIndex);

	push	eax
	mov	ecx, edi
	call	?getProductionNeeded@CvPlayer@@QBEHW4BuildingTypes@@@Z ; CvPlayer::getProductionNeeded

; 1638 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1639 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1640 : }

	ret	0
?lGetBuildingProductionNeeded@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetBuildingProductionNeeded
_TEXT	ENDS
PUBLIC	?lGetProjectProductionNeeded@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetProjectProductionNeeded
EXTRN	?getProductionNeeded@CvPlayer@@QBEHW4ProjectTypes@@@Z:PROC ; CvPlayer::getProductionNeeded
; Function compile flags: /Ogtpy
;	COMDAT ?lGetProjectProductionNeeded@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProjectProductionNeeded@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetProjectProductionNeeded, COMDAT

; 1644 : {

	push	ebx
	push	ebp
	push	esi

; 1645 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetProjec
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetProjec
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetProjec
	xor	bl, bl
$LN5@lGetProjec:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetProjec
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetProjec:

; 1646 : 	const ProjectTypes iIndex = (ProjectTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 1647 : 
; 1648 : 	const int iResult = pkPlayer->getProductionNeeded(iIndex);

	push	eax
	mov	ecx, edi
	call	?getProductionNeeded@CvPlayer@@QBEHW4ProjectTypes@@@Z ; CvPlayer::getProductionNeeded

; 1649 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1650 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1651 : }

	ret	0
?lGetProjectProductionNeeded@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetProjectProductionNeeded
_TEXT	ENDS
PUBLIC	?lHasReadyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lHasReadyUnit
EXTRN	?hasReadyUnit@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::hasReadyUnit
; Function compile flags: /Ogtpy
;	COMDAT ?lHasReadyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lHasReadyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lHasReadyUnit, COMDAT

; 1655 : {

	push	ebx
	push	ebp
	push	esi

; 1656 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lHasReadyU
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lHasReadyU
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lHasReadyU
	xor	bl, bl
$LN5@lHasReadyU:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lHasReadyU
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lHasReadyU:

; 1657 : 	const bool bResult = pkPlayer->hasReadyUnit();

	mov	ecx, edi
	call	?hasReadyUnit@CvPlayer@@QBE_NXZ		; CvPlayer::hasReadyUnit

; 1658 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1659 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1660 : }

	ret	0
?lHasReadyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lHasReadyUnit
_TEXT	ENDS
PUBLIC	?lGetFirstReadyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFirstReadyUnit
EXTRN	?GetFirstReadyUnit@CvPlayer@@QBEPBVCvUnit@@XZ:PROC ; CvPlayer::GetFirstReadyUnit
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
xdata$x	SEGMENT
__unwindtable$?lGetFirstReadyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetFirstReadyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetFirstReadyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetFirstReadyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetFirstReadyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T249188 = -24						; size = 4
_MyUnitHandle$ = -20					; size = 8
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetFirstReadyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetFirstReadyUnit, COMDAT

; 1663 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetFirstReadyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 12					; 0000000cH
	push	ebx
	push	ebp
	push	esi

; 1664 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+32]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@lGetFirstR
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@lGetFirstR
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@lGetFirstR
	xor	bl, bl
$LN7@lGetFirstR:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@lGetFirstR
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@lGetFirstR:

; 1665 : 	const UnitHandle MyUnitHandle;

	xor	ebx, ebx
	mov	DWORD PTR _MyUnitHandle$[esp+40], ebx
	mov	BYTE PTR _MyUnitHandle$[esp+44], bl

; 1666 : 	MyUnitHandle = pkPlayer->GetFirstReadyUnit();

	mov	ecx, edi
	mov	DWORD PTR __$EHRec$[esp+48], ebx
	call	?GetFirstReadyUnit@CvPlayer@@QBEPBVCvUnit@@XZ ; CvPlayer::GetFirstReadyUnit
	mov	edi, eax
	mov	DWORD PTR _MyUnitHandle$[esp+40], edi
	cmp	edi, ebx
	je	SHORT $LN24@lGetFirstR
	mov	ecx, edi
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN24@lGetFirstR:

; 1667 : 
; 1668 : 	CvLuaUnit::Push(L, MyUnitHandle);

	sub	esp, 8
	mov	eax, esp
	mov	DWORD PTR $T249188[esp+48], esp
	mov	DWORD PTR [eax], edi
	mov	BYTE PTR [eax+4], 0
	cmp	edi, ebx
	je	SHORT $LN29@lGetFirstR
	mov	ecx, edi
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN29@lGetFirstR:
	push	esi
	call	?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@V?$FObjectHandle@VCvUnit@@@@@Z ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::Push
	add	esp, 12					; 0000000cH

; 1669 : 	return 1;

	mov	DWORD PTR __$EHRec$[esp+48], -1
	cmp	edi, ebx
	je	SHORT $LN36@lGetFirstR
	mov	ecx, edi
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN36@lGetFirstR:

; 1670 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+40]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	add	esp, 24					; 00000018H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetFirstReadyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _MyUnitHandle$[ebp]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__ehhandler$?lGetFirstReadyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetFirstReadyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetFirstReadyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetFirstReadyUnit
PUBLIC	?lGetFirstReadyUnitPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFirstReadyUnitPlot
EXTRN	?plot@CvUnit@@QBEPAVCvPlot@@XZ:PROC		; CvUnit::plot
; Function compile flags: /Ogtpy
;	COMDAT ?lGetFirstReadyUnitPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFirstReadyUnitPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetFirstReadyUnitPlot, COMDAT

; 1673 : {

	push	ebx
	push	ebp
	push	esi

; 1674 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetFirstR@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetFirstR@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetFirstR@2
	xor	bl, bl
$LN6@lGetFirstR@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lGetFirstR@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lGetFirstR@2:

; 1675 : 	CvPlot* pPlot = NULL;
; 1676 : 	const CvUnit* pUnit = pkPlayer->GetFirstReadyUnit();

	mov	ecx, edi
	xor	ebx, ebx
	call	?GetFirstReadyUnit@CvPlayer@@QBEPBVCvUnit@@XZ ; CvPlayer::GetFirstReadyUnit

; 1677 : 	if(pUnit)

	test	eax, eax
	je	SHORT $LN1@lGetFirstR@2

; 1678 : 	{
; 1679 : 		pPlot = pUnit->plot();

	mov	ecx, eax
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot
	mov	ebx, eax
$LN1@lGetFirstR@2:

; 1680 : 	}
; 1681 : 
; 1682 : 	CvLuaPlot::Push(L, pPlot);

	push	ebx
	push	esi
	call	?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1683 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1684 : }

	ret	0
?lGetFirstReadyUnitPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetFirstReadyUnitPlot
_TEXT	ENDS
PUBLIC	?lHasBusyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lHasBusyUnit
EXTRN	?hasBusyUnit@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::hasBusyUnit
; Function compile flags: /Ogtpy
;	COMDAT ?lHasBusyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lHasBusyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lHasBusyUnit, COMDAT

; 1688 : {

	push	ebx
	push	ebp
	push	esi

; 1689 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lHasBusyUn
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lHasBusyUn
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lHasBusyUn
	xor	bl, bl
$LN5@lHasBusyUn:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lHasBusyUn
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lHasBusyUn:

; 1690 : #ifdef AUI_WARNING_FIXES
; 1691 : 	lua_pushboolean(L, pkPlayer->hasBusyUnit() ? 1 : 0);
; 1692 : #else
; 1693 : 	lua_pushboolean(L, pkPlayer->hasBusyUnit());

	mov	ecx, edi
	call	?hasBusyUnit@CvPlayer@@QBE_NXZ		; CvPlayer::hasBusyUnit
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1694 : #endif
; 1695 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1696 : }

	ret	0
?lHasBusyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lHasBusyUnit
_TEXT	ENDS
PUBLIC	?lGetBuildingClassPrereqBuilding@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBuildingClassPrereqBuilding
EXTRN	?getBuildingClassPrereqBuilding@CvPlayer@@QBEHW4BuildingTypes@@W4BuildingClassTypes@@H@Z:PROC ; CvPlayer::getBuildingClassPrereqBuilding
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBuildingClassPrereqBuilding@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBuildingClassPrereqBuilding@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetBuildingClassPrereqBuilding, COMDAT

; 1713 : 	return BasicLuaMethod(L, &CvPlayerAI::getBuildingClassPrereqBuilding);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getBuildingClassPrereqBuilding@CvPlayer@@QBEHW4BuildingTypes@@W4BuildingClassTypes@@H@Z ; CvPlayer::getBuildingClassPrereqBuilding
	push	eax
	call	??$BasicLuaMethod@HW4BuildingTypes@@W4BuildingClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4BuildingTypes@@W4BuildingClassTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum BuildingTypes,enum BuildingClassTypes,int>
	add	esp, 8

; 1714 : }

	ret	0
?lGetBuildingClassPrereqBuilding@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetBuildingClassPrereqBuilding
_TEXT	ENDS
PUBLIC	?lRemoveBuildingClass@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lRemoveBuildingClass
EXTRN	?removeBuildingClass@CvPlayer@@QAEXW4BuildingClassTypes@@@Z:PROC ; CvPlayer::removeBuildingClass
; Function compile flags: /Ogtpy
;	COMDAT ?lRemoveBuildingClass@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lRemoveBuildingClass@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lRemoveBuildingClass, COMDAT

; 1720 : 	return BasicLuaMethod(L, &CvPlayerAI::removeBuildingClass);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?removeBuildingClass@CvPlayer@@QAEXW4BuildingClassTypes@@@Z ; CvPlayer::removeBuildingClass
	push	eax
	call	??$BasicLuaMethod@W4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4BuildingClassTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum BuildingClassTypes>
	add	esp, 8

; 1721 : }

	ret	0
?lRemoveBuildingClass@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lRemoveBuildingClass
_TEXT	ENDS
PUBLIC	?lCanBuild@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lCanBuild
EXTRN	?canBuild@CvPlayer@@QBE_NPBVCvPlot@@W4BuildTypes@@_N222@Z:PROC ; CvPlayer::canBuild
; Function compile flags: /Ogtpy
;	COMDAT ?lCanBuild@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_stack_size$249346 = -12				; size = 4
_bTestGold$ = -12					; size = 1
_bTestVisible$ = -8					; size = 1
_bTestEra$ = -4						; size = 1
_L$ = 8							; size = 4
?lCanBuild@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lCanBuild, COMDAT

; 1726 : {

	sub	esp, 12					; 0000000cH
	push	ebx
	push	ebp
	push	esi

; 1727 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+20]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	xor	ebp, ebp
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCanBuild
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCanBuild
	push	-1
	push	esi
	call	_lua_touserdata
	mov	ebp, eax
	add	esp, 8
	test	ebp, ebp
	je	SHORT $LN5@lCanBuild
	xor	bl, bl
$LN5@lCanBuild:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lCanBuild
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lCanBuild:

; 1728 : 	CvPlot* pkPlot = CvLuaPlot::GetInstance(L, 2);

	push	esi
	call	_lua_gettop
	push	2
	push	esi
	mov	DWORD PTR _stack_size$249346[esp+40], eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN16@lCanBuild
	push	OFFSET $SG237776
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN16@lCanBuild
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN16@lCanBuild
	xor	bl, bl
$LN16@lCanBuild:
	mov	eax, DWORD PTR _stack_size$249346[esp+28]
	push	eax
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN15@lCanBuild
	push	esi
	call	?HandleMissingInstance@CvLuaPlot@@SAXPAUlua_State@@@Z ; CvLuaPlot::HandleMissingInstance
	add	esp, 4
$LN15@lCanBuild:

; 1729 : 	const BuildTypes eBuild = (BuildTypes)lua_tointeger(L, 3);

	push	3
	push	esi
	call	_lua_tointeger

; 1730 : 	const bool bTestEra = luaL_optint(L, 4, 0);

	push	0
	push	4
	push	esi
	mov	ebx, eax
	call	_luaL_optinteger

; 1731 : 	const bool bTestVisible = luaL_optint(L, 5, 0);

	push	0
	test	eax, eax
	setne	cl
	push	5
	push	esi
	mov	BYTE PTR _bTestEra$[esp+60], cl
	call	_luaL_optinteger

; 1732 : 	const bool bTestGold = luaL_optint(L, 6, 0);

	push	0
	test	eax, eax
	setne	dl
	push	6
	push	esi
	mov	BYTE PTR _bTestVisible$[esp+72], dl
	call	_luaL_optinteger

; 1733 : 
; 1734 : 	const bool bResult = pkPlayer->canBuild(pkPlot, eBuild, bTestEra, bTestVisible, bTestGold);

	mov	edx, DWORD PTR _bTestVisible$[esp+72]
	add	esp, 44					; 0000002cH
	test	eax, eax
	setne	al
	push	1
	mov	BYTE PTR _bTestGold$[esp+32], al
	mov	ecx, DWORD PTR _bTestGold$[esp+32]
	mov	eax, DWORD PTR _bTestEra$[esp+32]
	push	ecx
	push	edx
	push	eax
	push	ebx
	push	edi
	mov	ecx, ebp
	call	?canBuild@CvPlayer@@QBE_NPBVCvPlot@@W4BuildTypes@@_N222@Z ; CvPlayer::canBuild

; 1735 : 	lua_pushboolean(L, bResult);

	movzx	ecx, al
	push	ecx
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1736 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1737 : }

	add	esp, 12					; 0000000cH
	ret	0
?lCanBuild@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lCanBuild
_TEXT	ENDS
PUBLIC	?lIsBuildBlockedByFeature@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsBuildBlockedByFeature
EXTRN	?IsBuildBlockedByFeature@CvPlayer@@QBE_NW4BuildTypes@@W4FeatureTypes@@@Z:PROC ; CvPlayer::IsBuildBlockedByFeature
; Function compile flags: /Ogtpy
;	COMDAT ?lIsBuildBlockedByFeature@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsBuildBlockedByFeature@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsBuildBlockedByFeature, COMDAT

; 1742 : {

	push	ebx
	push	ebp
	push	esi

; 1743 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsBuildBl
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsBuildBl
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsBuildBl
	xor	bl, bl
$LN5@lIsBuildBl:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsBuildBl
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsBuildBl:

; 1744 : 	const BuildTypes eBuild = (BuildTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 1745 : 	const FeatureTypes eFeature = (FeatureTypes)lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H

; 1746 : 
; 1747 : 	const bool bResult = pkPlayer->IsBuildBlockedByFeature(eBuild, eFeature);

	push	eax
	push	ebx
	mov	ecx, edi
	call	?IsBuildBlockedByFeature@CvPlayer@@QBE_NW4BuildTypes@@W4FeatureTypes@@@Z ; CvPlayer::IsBuildBlockedByFeature

; 1748 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1749 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1750 : }

	ret	0
?lIsBuildBlockedByFeature@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsBuildBlockedByFeature
_TEXT	ENDS
PUBLIC	?lGetBestRoute@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetBestRoute
EXTRN	?getBestRoute@CvPlayer@@QBE?AW4RouteTypes@@PAVCvPlot@@@Z:PROC ; CvPlayer::getBestRoute
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBestRoute@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkInstance$249396 = -4					; size = 4
_L$ = 8							; size = 4
?lGetBestRoute@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetBestRoute, COMDAT

; 1755 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 1756 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$249396[esp+32], 0
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetBestRo
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetBestRo
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$249396[esp+20], eax
	test	eax, eax
	je	SHORT $LN5@lGetBestRo
	xor	bl, bl
$LN5@lGetBestRo:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetBestRo
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetBestRo:

; 1757 : 	CvPlot* pkPlot = CvLuaPlot::GetInstance(L, 2);

	push	esi
	call	_lua_gettop
	push	2
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN16@lGetBestRo
	push	OFFSET $SG237776
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN16@lGetBestRo
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN16@lGetBestRo
	xor	bl, bl
$LN16@lGetBestRo:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN15@lGetBestRo
	push	esi
	call	?HandleMissingInstance@CvLuaPlot@@SAXPAUlua_State@@@Z ; CvLuaPlot::HandleMissingInstance
	add	esp, 4
$LN15@lGetBestRo:

; 1758 : 
; 1759 : 	const RouteTypes eBestRoute = pkPlayer->getBestRoute(pkPlot);

	mov	ecx, DWORD PTR _pkInstance$249396[esp+20]
	push	edi
	call	?getBestRoute@CvPlayer@@QBE?AW4RouteTypes@@PAVCvPlot@@@Z ; CvPlayer::getBestRoute

; 1760 : 	lua_pushinteger(L, eBestRoute);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1761 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1762 : }

	pop	ecx
	ret	0
?lGetBestRoute@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetBestRoute
_TEXT	ENDS
PUBLIC	?lGetImprovementUpgradeRate@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetImprovementUpgradeRate
EXTRN	?getImprovementUpgradeRate@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getImprovementUpgradeRate
; Function compile flags: /Ogtpy
;	COMDAT ?lGetImprovementUpgradeRate@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetImprovementUpgradeRate@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetImprovementUpgradeRate, COMDAT

; 1767 : 	return BasicLuaMethod(L, &CvPlayerAI::getImprovementUpgradeRate);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getImprovementUpgradeRate@CvPlayer@@QBEHXZ ; CvPlayer::getImprovementUpgradeRate
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 1768 : }

	ret	0
?lGetImprovementUpgradeRate@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetImprovementUpgradeRate
_TEXT	ENDS
PUBLIC	?lCalculateTotalYield@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCalculateTotalYield
EXTRN	?calculateTotalYield@CvPlayer@@QBEHW4YieldTypes@@@Z:PROC ; CvPlayer::calculateTotalYield
; Function compile flags: /Ogtpy
;	COMDAT ?lCalculateTotalYield@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCalculateTotalYield@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lCalculateTotalYield, COMDAT

; 1773 : 	return BasicLuaMethod(L, &CvPlayerAI::calculateTotalYield);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?calculateTotalYield@CvPlayer@@QBEHW4YieldTypes@@@Z ; CvPlayer::calculateTotalYield
	push	eax
	call	??$BasicLuaMethod@HW4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4YieldTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum YieldTypes>
	add	esp, 8

; 1774 : }

	ret	0
?lCalculateTotalYield@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lCalculateTotalYield
_TEXT	ENDS
PUBLIC	?lCalculateUnitCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCalculateUnitCost
EXTRN	?calculateUnitCost@CvPlayer@@QBEHXZ:PROC	; CvPlayer::calculateUnitCost
; Function compile flags: /Ogtpy
;	COMDAT ?lCalculateUnitCost@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCalculateUnitCost@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lCalculateUnitCost, COMDAT

; 1780 : 	return BasicLuaMethod(L, &CvPlayerAI::calculateUnitCost);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?calculateUnitCost@CvPlayer@@QBEHXZ ; CvPlayer::calculateUnitCost
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 1781 : }

	ret	0
?lCalculateUnitCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lCalculateUnitCost
_TEXT	ENDS
PUBLIC	?lCalculateUnitSupply@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCalculateUnitSupply
EXTRN	?calculateUnitSupply@CvPlayer@@QBEHXZ:PROC	; CvPlayer::calculateUnitSupply
; Function compile flags: /Ogtpy
;	COMDAT ?lCalculateUnitSupply@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCalculateUnitSupply@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lCalculateUnitSupply, COMDAT

; 1785 : {

	push	ebx
	push	ebp
	push	esi

; 1786 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCalculate
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCalculate
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCalculate
	xor	bl, bl
$LN5@lCalculate:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lCalculate
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lCalculate:

; 1787 : 
; 1788 : 	const int iResult = pkPlayer->calculateUnitSupply();

	mov	ecx, edi
	call	?calculateUnitSupply@CvPlayer@@QBEHXZ	; CvPlayer::calculateUnitSupply

; 1789 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1790 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1791 : }

	ret	0
?lCalculateUnitSupply@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lCalculateUnitSupply
_TEXT	ENDS
PUBLIC	?lGetNumMaintenanceFreeUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumMaintenanceFreeUnits
EXTRN	?GetNumMaintenanceFreeUnits@CvPlayer@@QBEHW4DomainTypes@@_N@Z:PROC ; CvPlayer::GetNumMaintenanceFreeUnits
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumMaintenanceFreeUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumMaintenanceFreeUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumMaintenanceFreeUnits, COMDAT

; 1797 : 	return BasicLuaMethod(L, &CvPlayerAI::GetNumMaintenanceFreeUnits);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetNumMaintenanceFreeUnits@CvPlayer@@QBEHW4DomainTypes@@_N@Z ; CvPlayer::GetNumMaintenanceFreeUnits
	push	eax
	call	??$BasicLuaMethod@HW4DomainTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4DomainTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum DomainTypes,bool>
	add	esp, 8

; 1798 : }

	ret	0
?lGetNumMaintenanceFreeUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumMaintenanceFreeUnits
_TEXT	ENDS
PUBLIC	?lGetBuildingGoldMaintenance@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBuildingGoldMaintenance
EXTRN	?GetBuildingGoldMaintenance@CvTreasury@@QBEHXZ:PROC ; CvTreasury::GetBuildingGoldMaintenance
EXTRN	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ:PROC ; CvPlayer::GetTreasury
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBuildingGoldMaintenance@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBuildingGoldMaintenance@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetBuildingGoldMaintenance, COMDAT

; 1803 : {

	push	ebx
	push	ebp
	push	esi

; 1804 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetBuildi@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetBuildi@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetBuildi@2
	xor	bl, bl
$LN5@lGetBuildi@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetBuildi@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetBuildi@2:

; 1805 : 
; 1806 : 	const int iResult = pkPlayer->GetTreasury()->GetBuildingGoldMaintenance();

	mov	ecx, edi
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?GetBuildingGoldMaintenance@CvTreasury@@QBEHXZ ; CvTreasury::GetBuildingGoldMaintenance

; 1807 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1808 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1809 : }

	ret	0
?lGetBuildingGoldMaintenance@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetBuildingGoldMaintenance
_TEXT	ENDS
PUBLIC	?lSetBaseBuildingGoldMaintenance@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetBaseBuildingGoldMaintenance
EXTRN	?SetBaseBuildingGoldMaintenance@CvTreasury@@QAEXH@Z:PROC ; CvTreasury::SetBaseBuildingGoldMaintenance
; Function compile flags: /Ogtpy
;	COMDAT ?lSetBaseBuildingGoldMaintenance@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetBaseBuildingGoldMaintenance@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetBaseBuildingGoldMaintenance, COMDAT

; 1813 : {

	push	ebx
	push	ebp
	push	esi

; 1814 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lSetBaseBu
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lSetBaseBu
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lSetBaseBu
	xor	bl, bl
$LN5@lSetBaseBu:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lSetBaseBu
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lSetBaseBu:

; 1815 : 	const int iValue = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 1816 : 
; 1817 : 	pkPlayer->GetTreasury()->SetBaseBuildingGoldMaintenance(iValue);

	push	eax
	mov	ecx, edi
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?SetBaseBuildingGoldMaintenance@CvTreasury@@QAEXH@Z ; CvTreasury::SetBaseBuildingGoldMaintenance
	pop	edi
	pop	esi
	pop	ebp

; 1818 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1819 : }

	ret	0
?lSetBaseBuildingGoldMaintenance@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetBaseBuildingGoldMaintenance
_TEXT	ENDS
PUBLIC	?lChangeBaseBuildingGoldMaintenance@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeBaseBuildingGoldMaintenance
EXTRN	?ChangeBaseBuildingGoldMaintenance@CvTreasury@@QAEXH@Z:PROC ; CvTreasury::ChangeBaseBuildingGoldMaintenance
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeBaseBuildingGoldMaintenance@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeBaseBuildingGoldMaintenance@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeBaseBuildingGoldMaintenance, COMDAT

; 1823 : {

	push	ebx
	push	ebp
	push	esi

; 1824 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lChangeBas
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lChangeBas
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lChangeBas
	xor	bl, bl
$LN5@lChangeBas:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lChangeBas
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lChangeBas:

; 1825 : 	const int iValue = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 1826 : 
; 1827 : 	pkPlayer->GetTreasury()->ChangeBaseBuildingGoldMaintenance(iValue);

	push	eax
	mov	ecx, edi
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?ChangeBaseBuildingGoldMaintenance@CvTreasury@@QAEXH@Z ; CvTreasury::ChangeBaseBuildingGoldMaintenance
	pop	edi
	pop	esi
	pop	ebp

; 1828 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1829 : }

	ret	0
?lChangeBaseBuildingGoldMaintenance@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeBaseBuildingGoldMaintenance
_TEXT	ENDS
PUBLIC	?lGetImprovementGoldMaintenance@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetImprovementGoldMaintenance
EXTRN	?GetImprovementGoldMaintenance@CvTreasury@@QBEHXZ:PROC ; CvTreasury::GetImprovementGoldMaintenance
; Function compile flags: /Ogtpy
;	COMDAT ?lGetImprovementGoldMaintenance@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetImprovementGoldMaintenance@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetImprovementGoldMaintenance, COMDAT

; 1833 : {

	push	ebx
	push	ebp
	push	esi

; 1834 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetImprov
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetImprov
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetImprov
	xor	bl, bl
$LN5@lGetImprov:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetImprov
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetImprov:

; 1835 : 
; 1836 : 	const int iResult = pkPlayer->GetTreasury()->GetImprovementGoldMaintenance();

	mov	ecx, edi
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?GetImprovementGoldMaintenance@CvTreasury@@QBEHXZ ; CvTreasury::GetImprovementGoldMaintenance

; 1837 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1838 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1839 : }

	ret	0
?lGetImprovementGoldMaintenance@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetImprovementGoldMaintenance
_TEXT	ENDS
PUBLIC	?lCalculateGoldRate@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCalculateGoldRate
EXTRN	?calculateGoldRate@CvPlayer@@QBEHXZ:PROC	; CvPlayer::calculateGoldRate
; Function compile flags: /Ogtpy
;	COMDAT ?lCalculateGoldRate@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCalculateGoldRate@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lCalculateGoldRate, COMDAT

; 1844 : 	return BasicLuaMethod(L, &CvPlayerAI::calculateGoldRate);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?calculateGoldRate@CvPlayer@@QBEHXZ ; CvPlayer::calculateGoldRate
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 1845 : }

	ret	0
?lCalculateGoldRate@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lCalculateGoldRate
_TEXT	ENDS
PUBLIC	?lCalculateGoldRateTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCalculateGoldRateTimes100
EXTRN	?calculateGoldRateTimes100@CvPlayer@@QBEHXZ:PROC ; CvPlayer::calculateGoldRateTimes100
; Function compile flags: /Ogtpy
;	COMDAT ?lCalculateGoldRateTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCalculateGoldRateTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lCalculateGoldRateTimes100, COMDAT

; 1850 : 	return BasicLuaMethod(L, &CvPlayerAI::calculateGoldRateTimes100);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?calculateGoldRateTimes100@CvPlayer@@QBEHXZ ; CvPlayer::calculateGoldRateTimes100
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 1851 : }

	ret	0
?lCalculateGoldRateTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lCalculateGoldRateTimes100
_TEXT	ENDS
PUBLIC	?lCalculateGrossGoldTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCalculateGrossGoldTimes100
EXTRN	?CalculateGrossGoldTimes100@CvTreasury@@QAEHXZ:PROC ; CvTreasury::CalculateGrossGoldTimes100
; Function compile flags: /Ogtpy
;	COMDAT ?lCalculateGrossGoldTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCalculateGrossGoldTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lCalculateGrossGoldTimes100, COMDAT

; 1855 : {

	push	ebx
	push	ebp
	push	esi

; 1856 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCalculate@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCalculate@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCalculate@2
	xor	bl, bl
$LN5@lCalculate@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lCalculate@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lCalculate@2:

; 1857 : 
; 1858 : 	const int iResult = pkPlayer->GetTreasury()->CalculateGrossGoldTimes100();

	mov	ecx, edi
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?CalculateGrossGoldTimes100@CvTreasury@@QAEHXZ ; CvTreasury::CalculateGrossGoldTimes100

; 1859 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1860 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1861 : }

	ret	0
?lCalculateGrossGoldTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lCalculateGrossGoldTimes100
_TEXT	ENDS
PUBLIC	?lCalculateInflatedCosts@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCalculateInflatedCosts
EXTRN	?CalculateInflatedCosts@CvTreasury@@QAEHXZ:PROC	; CvTreasury::CalculateInflatedCosts
; Function compile flags: /Ogtpy
;	COMDAT ?lCalculateInflatedCosts@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCalculateInflatedCosts@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lCalculateInflatedCosts, COMDAT

; 1865 : {

	push	ebx
	push	ebp
	push	esi

; 1866 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCalculate@3
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCalculate@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCalculate@3
	xor	bl, bl
$LN5@lCalculate@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lCalculate@3
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lCalculate@3:

; 1867 : 
; 1868 : 	const int iResult = pkPlayer->GetTreasury()->CalculateInflatedCosts();

	mov	ecx, edi
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?CalculateInflatedCosts@CvTreasury@@QAEHXZ ; CvTreasury::CalculateInflatedCosts

; 1869 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1870 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1871 : }

	ret	0
?lCalculateInflatedCosts@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lCalculateInflatedCosts
_TEXT	ENDS
PUBLIC	?lCalculateResearchModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCalculateResearchModifier
EXTRN	?calculateResearchModifier@CvPlayer@@QAEHW4TechTypes@@@Z:PROC ; CvPlayer::calculateResearchModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lCalculateResearchModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCalculateResearchModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lCalculateResearchModifier, COMDAT

; 1876 : 	return BasicLuaMethod(L, &CvPlayerAI::calculateResearchModifier);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?calculateResearchModifier@CvPlayer@@QAEHW4TechTypes@@@Z ; CvPlayer::calculateResearchModifier
	push	eax
	call	??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4TechTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum TechTypes>
	add	esp, 8

; 1877 : }

	ret	0
?lCalculateResearchModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lCalculateResearchModifier
_TEXT	ENDS
PUBLIC	?lIsResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lIsResearch
EXTRN	?IsResearch@CvPlayerTechs@@QBE_NXZ:PROC		; CvPlayerTechs::IsResearch
EXTRN	?GetPlayerTechs@CvPlayer@@QBEPAVCvPlayerTechs@@XZ:PROC ; CvPlayer::GetPlayerTechs
; Function compile flags: /Ogtpy
;	COMDAT ?lIsResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsResearch, COMDAT

; 1881 : {

	push	ebx
	push	ebp
	push	esi

; 1882 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsResearc
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsResearc
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsResearc
	xor	bl, bl
$LN5@lIsResearc:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsResearc
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsResearc:

; 1883 : 
; 1884 : 	const bool bResult = pkPlayer->GetPlayerTechs()->IsResearch();

	mov	ecx, edi
	call	?GetPlayerTechs@CvPlayer@@QBEPAVCvPlayerTechs@@XZ ; CvPlayer::GetPlayerTechs
	mov	ecx, eax
	call	?IsResearch@CvPlayerTechs@@QBE_NXZ	; CvPlayerTechs::IsResearch

; 1885 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1886 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1887 : }

	ret	0
?lIsResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsResearch
_TEXT	ENDS
PUBLIC	?lCanEverResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanEverResearch
EXTRN	?CanEverResearch@CvPlayerTechs@@QBE_NW4TechTypes@@@Z:PROC ; CvPlayerTechs::CanEverResearch
; Function compile flags: /Ogtpy
;	COMDAT ?lCanEverResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanEverResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lCanEverResearch, COMDAT

; 1891 : {

	push	ebx
	push	ebp
	push	esi

; 1892 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCanEverRe
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCanEverRe
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCanEverRe
	xor	bl, bl
$LN5@lCanEverRe:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lCanEverRe
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lCanEverRe:

; 1893 : 	const TechTypes eTech = (TechTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 1894 : 
; 1895 : 	const bool bResult
; 1896 : 	    = pkPlayer->GetPlayerTechs()->CanEverResearch(eTech);

	push	eax
	mov	ecx, edi
	call	?GetPlayerTechs@CvPlayer@@QBEPAVCvPlayerTechs@@XZ ; CvPlayer::GetPlayerTechs
	mov	ecx, eax
	call	?CanEverResearch@CvPlayerTechs@@QBE_NW4TechTypes@@@Z ; CvPlayerTechs::CanEverResearch

; 1897 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1898 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1899 : }

	ret	0
?lCanEverResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lCanEverResearch
_TEXT	ENDS
PUBLIC	?lCanResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lCanResearch
EXTRN	?CanResearch@CvPlayerTechs@@QBE_NW4TechTypes@@_N@Z:PROC ; CvPlayerTechs::CanResearch
EXTRN	_luaL_checkinteger:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?lCanResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bTrade$ = -4						; size = 1
_L$ = 8							; size = 4
?lCanResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lCanResearch, COMDAT

; 1903 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 1904 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCanResear
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCanResear
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCanResear
	xor	bl, bl
$LN5@lCanResear:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lCanResear
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lCanResear:

; 1905 : 	const TechTypes eTech = (TechTypes)luaL_checkinteger(L, 2);

	push	2
	push	esi
	call	_luaL_checkinteger

; 1906 : 	const bool bTrade = luaL_optint(L, 3, 0);

	push	0
	push	3
	push	esi
	mov	ebx, eax
	call	_luaL_optinteger
	add	esp, 20					; 00000014H
	test	eax, eax
	setne	al
	mov	BYTE PTR _bTrade$[esp+20], al

; 1907 : 
; 1908 : 	const bool bResult
; 1909 : 	    = pkPlayer->GetPlayerTechs()->CanResearch(eTech, bTrade);

	mov	ecx, DWORD PTR _bTrade$[esp+20]
	push	ecx
	push	ebx
	mov	ecx, edi
	call	?GetPlayerTechs@CvPlayer@@QBEPAVCvPlayerTechs@@XZ ; CvPlayer::GetPlayerTechs
	mov	ecx, eax
	call	?CanResearch@CvPlayerTechs@@QBE_NW4TechTypes@@_N@Z ; CvPlayerTechs::CanResearch

; 1910 : 	lua_pushboolean(L, bResult);

	movzx	edx, al
	push	edx
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1911 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1912 : }

	pop	ecx
	ret	0
?lCanResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lCanResearch
_TEXT	ENDS
PUBLIC	?lCanResearchForFree@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanResearchForFree
EXTRN	?CanResearchForFree@CvPlayerTechs@@QBE_NW4TechTypes@@@Z:PROC ; CvPlayerTechs::CanResearchForFree
; Function compile flags: /Ogtpy
;	COMDAT ?lCanResearchForFree@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanResearchForFree@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lCanResearchForFree, COMDAT

; 1916 : {

	push	ebx
	push	ebp
	push	esi

; 1917 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCanResear@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCanResear@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCanResear@2
	xor	bl, bl
$LN5@lCanResear@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lCanResear@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lCanResear@2:

; 1918 : 	const TechTypes eTech = (TechTypes)luaL_checkinteger(L, 2);

	push	2
	push	esi
	call	_luaL_checkinteger
	add	esp, 8

; 1919 : 
; 1920 : 	const bool bResult = pkPlayer->GetPlayerTechs()->CanResearchForFree(eTech);

	push	eax
	mov	ecx, edi
	call	?GetPlayerTechs@CvPlayer@@QBEPAVCvPlayerTechs@@XZ ; CvPlayer::GetPlayerTechs
	mov	ecx, eax
	call	?CanResearchForFree@CvPlayerTechs@@QBE_NW4TechTypes@@@Z ; CvPlayerTechs::CanResearchForFree

; 1921 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1922 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1923 : }

	ret	0
?lCanResearchForFree@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lCanResearchForFree
_TEXT	ENDS
PUBLIC	?lGetCurrentResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCurrentResearch
EXTRN	?GetCurrentResearch@CvPlayerTechs@@QBE?AW4TechTypes@@XZ:PROC ; CvPlayerTechs::GetCurrentResearch
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCurrentResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCurrentResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCurrentResearch, COMDAT

; 1927 : {

	push	ebx
	push	ebp
	push	esi

; 1928 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetCurren
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetCurren
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetCurren
	xor	bl, bl
$LN5@lGetCurren:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetCurren
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetCurren:

; 1929 : 	const TechTypes iResult = pkPlayer->GetPlayerTechs()->GetCurrentResearch();

	mov	ecx, edi
	call	?GetPlayerTechs@CvPlayer@@QBEPAVCvPlayerTechs@@XZ ; CvPlayer::GetPlayerTechs
	mov	ecx, eax
	call	?GetCurrentResearch@CvPlayerTechs@@QBE?AW4TechTypes@@XZ ; CvPlayerTechs::GetCurrentResearch

; 1930 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1931 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1932 : }

	ret	0
?lGetCurrentResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCurrentResearch
_TEXT	ENDS
PUBLIC	?lIsCurrentResearchRepeat@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsCurrentResearchRepeat
EXTRN	?IsCurrentResearchRepeat@CvPlayerTechs@@QBE_NXZ:PROC ; CvPlayerTechs::IsCurrentResearchRepeat
; Function compile flags: /Ogtpy
;	COMDAT ?lIsCurrentResearchRepeat@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsCurrentResearchRepeat@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsCurrentResearchRepeat, COMDAT

; 1936 : {

	push	ebx
	push	ebp
	push	esi

; 1937 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsCurrent
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsCurrent
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsCurrent
	xor	bl, bl
$LN5@lIsCurrent:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsCurrent
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsCurrent:

; 1938 : 
; 1939 : 	const bool bResult
; 1940 : 	    = pkPlayer->GetPlayerTechs()->IsCurrentResearchRepeat();

	mov	ecx, edi
	call	?GetPlayerTechs@CvPlayer@@QBEPAVCvPlayerTechs@@XZ ; CvPlayer::GetPlayerTechs
	mov	ecx, eax
	call	?IsCurrentResearchRepeat@CvPlayerTechs@@QBE_NXZ ; CvPlayerTechs::IsCurrentResearchRepeat

; 1941 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1942 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1943 : }

	ret	0
?lIsCurrentResearchRepeat@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsCurrentResearchRepeat
_TEXT	ENDS
PUBLIC	?lIsNoResearchAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsNoResearchAvailable
EXTRN	?IsNoResearchAvailable@CvPlayerTechs@@QBE_NXZ:PROC ; CvPlayerTechs::IsNoResearchAvailable
; Function compile flags: /Ogtpy
;	COMDAT ?lIsNoResearchAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsNoResearchAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsNoResearchAvailable, COMDAT

; 1947 : {

	push	ebx
	push	ebp
	push	esi

; 1948 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsNoResea
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsNoResea
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsNoResea
	xor	bl, bl
$LN5@lIsNoResea:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsNoResea
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsNoResea:

; 1949 : 
; 1950 : 	const bool bResult
; 1951 : 	    = pkPlayer->GetPlayerTechs()->IsNoResearchAvailable();

	mov	ecx, edi
	call	?GetPlayerTechs@CvPlayer@@QBEPAVCvPlayerTechs@@XZ ; CvPlayer::GetPlayerTechs
	mov	ecx, eax
	call	?IsNoResearchAvailable@CvPlayerTechs@@QBE_NXZ ; CvPlayerTechs::IsNoResearchAvailable

; 1952 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1953 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1954 : }

	ret	0
?lIsNoResearchAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsNoResearchAvailable
_TEXT	ENDS
PUBLIC	?lGetResearchTurnsLeft@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetResearchTurnsLeft
EXTRN	?GetResearchTurnsLeft@CvPlayerTechs@@QBEHW4TechTypes@@_N@Z:PROC ; CvPlayerTechs::GetResearchTurnsLeft
; Function compile flags: /Ogtpy
;	COMDAT ?lGetResearchTurnsLeft@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bOverflow$ = -4					; size = 1
_L$ = 8							; size = 4
?lGetResearchTurnsLeft@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetResearchTurnsLeft, COMDAT

; 1958 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 1959 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetResear
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetResear
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetResear
	xor	bl, bl
$LN5@lGetResear:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetResear
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetResear:

; 1960 : 	const TechTypes eTech	= (TechTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 1961 : 	const bool bOverflow	= lua_toboolean(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_toboolean
	add	esp, 16					; 00000010H
	test	eax, eax
	setne	al
	mov	BYTE PTR _bOverflow$[esp+20], al

; 1962 : 
; 1963 : 	const int iResult
; 1964 : 	    = pkPlayer->GetPlayerTechs()->GetResearchTurnsLeft(eTech, bOverflow);

	mov	ecx, DWORD PTR _bOverflow$[esp+20]
	push	ecx
	push	ebx
	mov	ecx, edi
	call	?GetPlayerTechs@CvPlayer@@QBEPAVCvPlayerTechs@@XZ ; CvPlayer::GetPlayerTechs
	mov	ecx, eax
	call	?GetResearchTurnsLeft@CvPlayerTechs@@QBEHW4TechTypes@@_N@Z ; CvPlayerTechs::GetResearchTurnsLeft

; 1965 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1966 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1967 : }

	pop	ecx
	ret	0
?lGetResearchTurnsLeft@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetResearchTurnsLeft
_TEXT	ENDS
PUBLIC	?lGetResearchCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetResearchCost
EXTRN	?GetResearchCost@CvPlayerTechs@@QBEHW4TechTypes@@@Z:PROC ; CvPlayerTechs::GetResearchCost
; Function compile flags: /Ogtpy
;	COMDAT ?lGetResearchCost@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetResearchCost@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetResearchCost, COMDAT

; 1972 : {

	push	ebx
	push	ebp
	push	esi

; 1973 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetResear@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetResear@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetResear@2
	xor	bl, bl
$LN5@lGetResear@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetResear@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetResear@2:

; 1974 : 	const TechTypes eTech	= (TechTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 1975 : 
; 1976 : 	const int iResult = pkPlayer->GetPlayerTechs()->GetResearchCost(eTech);

	push	eax
	mov	ecx, edi
	call	?GetPlayerTechs@CvPlayer@@QBEPAVCvPlayerTechs@@XZ ; CvPlayer::GetPlayerTechs
	mov	ecx, eax
	call	?GetResearchCost@CvPlayerTechs@@QBEHW4TechTypes@@@Z ; CvPlayerTechs::GetResearchCost

; 1977 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1978 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1979 : }

	ret	0
?lGetResearchCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetResearchCost
_TEXT	ENDS
PUBLIC	?lGetResearchProgress@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetResearchProgress
EXTRN	?GetResearchProgress@CvPlayerTechs@@QBEHW4TechTypes@@@Z:PROC ; CvPlayerTechs::GetResearchProgress
; Function compile flags: /Ogtpy
;	COMDAT ?lGetResearchProgress@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetResearchProgress@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetResearchProgress, COMDAT

; 1984 : {

	push	ebx
	push	ebp
	push	esi

; 1985 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetResear@3
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetResear@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetResear@3
	xor	bl, bl
$LN5@lGetResear@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetResear@3
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetResear@3:

; 1986 : 	const TechTypes eTech	= (TechTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 1987 : 
; 1988 : 	const int iResult = pkPlayer->GetPlayerTechs()->GetResearchProgress(eTech);

	push	eax
	mov	ecx, edi
	call	?GetPlayerTechs@CvPlayer@@QBEPAVCvPlayerTechs@@XZ ; CvPlayer::GetPlayerTechs
	mov	ecx, eax
	call	?GetResearchProgress@CvPlayerTechs@@QBEHW4TechTypes@@@Z ; CvPlayerTechs::GetResearchProgress

; 1989 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1990 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1991 : }

	ret	0
?lGetResearchProgress@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetResearchProgress
_TEXT	ENDS
PUBLIC	?lUnitsRequiredForGoldenAge@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lUnitsRequiredForGoldenAge
EXTRN	?unitsRequiredForGoldenAge@CvPlayer@@QBEHXZ:PROC ; CvPlayer::unitsRequiredForGoldenAge
; Function compile flags: /Ogtpy
;	COMDAT ?lUnitsRequiredForGoldenAge@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lUnitsRequiredForGoldenAge@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lUnitsRequiredForGoldenAge, COMDAT

; 1997 : 	return BasicLuaMethod(L, &CvPlayerAI::unitsRequiredForGoldenAge);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?unitsRequiredForGoldenAge@CvPlayer@@QBEHXZ ; CvPlayer::unitsRequiredForGoldenAge
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 1998 : }

	ret	0
?lUnitsRequiredForGoldenAge@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lUnitsRequiredForGoldenAge
_TEXT	ENDS
PUBLIC	?lUnitsGoldenAgeCapable@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lUnitsGoldenAgeCapable
EXTRN	?unitsGoldenAgeCapable@CvPlayer@@QBEHXZ:PROC	; CvPlayer::unitsGoldenAgeCapable
; Function compile flags: /Ogtpy
;	COMDAT ?lUnitsGoldenAgeCapable@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lUnitsGoldenAgeCapable@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lUnitsGoldenAgeCapable, COMDAT

; 2003 : 	return BasicLuaMethod(L, &CvPlayerAI::unitsGoldenAgeCapable);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?unitsGoldenAgeCapable@CvPlayer@@QBEHXZ ; CvPlayer::unitsGoldenAgeCapable
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2004 : }

	ret	0
?lUnitsGoldenAgeCapable@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lUnitsGoldenAgeCapable
_TEXT	ENDS
PUBLIC	?lUnitsGoldenAgeReady@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lUnitsGoldenAgeReady
EXTRN	?unitsGoldenAgeReady@CvPlayer@@QBEHXZ:PROC	; CvPlayer::unitsGoldenAgeReady
; Function compile flags: /Ogtpy
;	COMDAT ?lUnitsGoldenAgeReady@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lUnitsGoldenAgeReady@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lUnitsGoldenAgeReady, COMDAT

; 2009 : 	return BasicLuaMethod(L, &CvPlayerAI::unitsGoldenAgeReady);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?unitsGoldenAgeReady@CvPlayer@@QBEHXZ ; CvPlayer::unitsGoldenAgeReady
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2010 : }

	ret	0
?lUnitsGoldenAgeReady@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lUnitsGoldenAgeReady
_TEXT	ENDS
PUBLIC	?lGreatGeneralThreshold@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGreatGeneralThreshold
EXTRN	?greatGeneralThreshold@CvPlayer@@QBEHXZ:PROC	; CvPlayer::greatGeneralThreshold
; Function compile flags: /Ogtpy
;	COMDAT ?lGreatGeneralThreshold@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGreatGeneralThreshold@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGreatGeneralThreshold, COMDAT

; 2015 : 	return BasicLuaMethod(L, &CvPlayerAI::greatGeneralThreshold);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?greatGeneralThreshold@CvPlayer@@QBEHXZ ; CvPlayer::greatGeneralThreshold
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2016 : }

	ret	0
?lGreatGeneralThreshold@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGreatGeneralThreshold
_TEXT	ENDS
PUBLIC	?lGreatAdmiralThreshold@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGreatAdmiralThreshold
EXTRN	?greatAdmiralThreshold@CvPlayer@@QBEHXZ:PROC	; CvPlayer::greatAdmiralThreshold
; Function compile flags: /Ogtpy
;	COMDAT ?lGreatAdmiralThreshold@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGreatAdmiralThreshold@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGreatAdmiralThreshold, COMDAT

; 2021 : 	return BasicLuaMethod(L, &CvPlayerAI::greatAdmiralThreshold);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?greatAdmiralThreshold@CvPlayer@@QBEHXZ ; CvPlayer::greatAdmiralThreshold
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2022 : }

	ret	0
?lGreatAdmiralThreshold@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGreatAdmiralThreshold
_TEXT	ENDS
PUBLIC	?lSpecialistYield@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSpecialistYield
EXTRN	?specialistYield@CvPlayer@@QBEHW4SpecialistTypes@@W4YieldTypes@@@Z:PROC ; CvPlayer::specialistYield
; Function compile flags: /Ogtpy
;	COMDAT ?lSpecialistYield@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSpecialistYield@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lSpecialistYield, COMDAT

; 2027 : 	return BasicLuaMethod(L, &CvPlayerAI::specialistYield);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?specialistYield@CvPlayer@@QBEHW4SpecialistTypes@@W4YieldTypes@@@Z ; CvPlayer::specialistYield
	push	eax
	call	??$BasicLuaMethod@HW4SpecialistTypes@@W4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4SpecialistTypes@@W4YieldTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum SpecialistTypes,enum YieldTypes>
	add	esp, 8

; 2028 : }

	ret	0
?lSpecialistYield@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lSpecialistYield
_TEXT	ENDS
PUBLIC	?lSetGreatGeneralCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetGreatGeneralCombatBonus
EXTRN	?SetGreatGeneralCombatBonus@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::SetGreatGeneralCombatBonus
; Function compile flags: /Ogtpy
;	COMDAT ?lSetGreatGeneralCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetGreatGeneralCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetGreatGeneralCombatBonus, COMDAT

; 2032 : {

	push	ebx
	push	ebp
	push	esi

; 2033 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lSetGreatG
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lSetGreatG
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lSetGreatG
	xor	bl, bl
$LN5@lSetGreatG:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lSetGreatG
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lSetGreatG:

; 2034 : 	const int iValue = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 2035 : 
; 2036 : 	pkPlayer->SetGreatGeneralCombatBonus(iValue);

	push	eax
	mov	ecx, edi
	call	?SetGreatGeneralCombatBonus@CvPlayer@@QAEXH@Z ; CvPlayer::SetGreatGeneralCombatBonus
	pop	edi
	pop	esi
	pop	ebp

; 2037 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2038 : }

	ret	0
?lSetGreatGeneralCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetGreatGeneralCombatBonus
_TEXT	ENDS
PUBLIC	?lGetGreatGeneralCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatGeneralCombatBonus
EXTRN	?GetGreatGeneralCombatBonus@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetGreatGeneralCombatBonus
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGreatGeneralCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGreatGeneralCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGreatGeneralCombatBonus, COMDAT

; 2043 : 	return BasicLuaMethod(L, &CvPlayerAI::GetGreatGeneralCombatBonus);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetGreatGeneralCombatBonus@CvPlayer@@QBEHXZ ; CvPlayer::GetGreatGeneralCombatBonus
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2044 : }

	ret	0
?lGetGreatGeneralCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGreatGeneralCombatBonus
_TEXT	ENDS
PUBLIC	?lGetStartingPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetStartingPlot
EXTRN	?getStartingPlot@CvPlayer@@QBEPAVCvPlot@@XZ:PROC ; CvPlayer::getStartingPlot
; Function compile flags: /Ogtpy
;	COMDAT ?lGetStartingPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetStartingPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetStartingPlot, COMDAT

; 2049 : {

	push	ebx
	push	ebp
	push	esi

; 2050 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetStarti
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetStarti
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetStarti
	xor	bl, bl
$LN5@lGetStarti:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetStarti
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetStarti:

; 2051 : 
; 2052 : 	CvPlot* pkPlot = pkPlayer->getStartingPlot();

	mov	ecx, edi
	call	?getStartingPlot@CvPlayer@@QBEPAVCvPlot@@XZ ; CvPlayer::getStartingPlot

; 2053 : 	CvLuaPlot::Push(L, pkPlot);

	push	eax
	push	esi
	call	?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2054 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2055 : }

	ret	0
?lGetStartingPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetStartingPlot
_TEXT	ENDS
PUBLIC	?lSetStartingPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetStartingPlot
EXTRN	?setStartingPlot@CvPlayer@@QAEXPAVCvPlot@@@Z:PROC ; CvPlayer::setStartingPlot
; Function compile flags: /Ogtpy
;	COMDAT ?lSetStartingPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkInstance$249974 = -4					; size = 4
_L$ = 8							; size = 4
?lSetStartingPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lSetStartingPlot, COMDAT

; 2059 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 2060 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$249974[esp+32], 0
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lSetStarti
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lSetStarti
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$249974[esp+20], eax
	test	eax, eax
	je	SHORT $LN5@lSetStarti
	xor	bl, bl
$LN5@lSetStarti:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lSetStarti
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lSetStarti:

; 2061 : 	CvPlot* pkPlot = CvLuaPlot::GetInstance(L, 2);

	push	esi
	call	_lua_gettop
	push	2
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN16@lSetStarti
	push	OFFSET $SG237776
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN16@lSetStarti
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN16@lSetStarti
	xor	bl, bl
$LN16@lSetStarti:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN15@lSetStarti
	push	esi
	call	?HandleMissingInstance@CvLuaPlot@@SAXPAUlua_State@@@Z ; CvLuaPlot::HandleMissingInstance
	add	esp, 4
$LN15@lSetStarti:

; 2062 : 	pkPlayer->setStartingPlot(pkPlot);

	mov	ecx, DWORD PTR _pkInstance$249974[esp+20]
	push	edi
	call	?setStartingPlot@CvPlayer@@QAEXPAVCvPlot@@@Z ; CvPlayer::setStartingPlot
	pop	edi
	pop	esi
	pop	ebp

; 2063 : 	return 0;

	xor	eax, eax
	pop	ebx

; 2064 : }

	pop	ecx
	ret	0
?lSetStartingPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lSetStartingPlot
_TEXT	ENDS
PUBLIC	?lGetTotalPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTotalPopulation
EXTRN	?getTotalPopulation@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getTotalPopulation
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTotalPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTotalPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTotalPopulation, COMDAT

; 2069 : 	return BasicLuaMethod(L, &CvPlayerAI::getTotalPopulation);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getTotalPopulation@CvPlayer@@QBEHXZ ; CvPlayer::getTotalPopulation
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2070 : }

	ret	0
?lGetTotalPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTotalPopulation
_TEXT	ENDS
PUBLIC	?lGetAveragePopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAveragePopulation
EXTRN	?getAveragePopulation@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getAveragePopulation
; Function compile flags: /Ogtpy
;	COMDAT ?lGetAveragePopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetAveragePopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetAveragePopulation, COMDAT

; 2075 : 	return BasicLuaMethod(L, &CvPlayerAI::getAveragePopulation);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getAveragePopulation@CvPlayer@@QBEHXZ ; CvPlayer::getAveragePopulation
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2076 : }

	ret	0
?lGetAveragePopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetAveragePopulation
_TEXT	ENDS
PUBLIC	?lGetRealPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetRealPopulation
EXTRN	?getRealPopulation@CvPlayer@@QBEJXZ:PROC	; CvPlayer::getRealPopulation
; Function compile flags: /Ogtpy
;	COMDAT ?lGetRealPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetRealPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetRealPopulation, COMDAT

; 2081 : 	return BasicLuaMethod(L, &CvPlayerAI::getRealPopulation);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getRealPopulation@CvPlayer@@QBEJXZ ; CvPlayer::getRealPopulation
	push	eax
	call	??$BasicLuaMethod@J@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEJXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<long>
	add	esp, 8

; 2082 : }

	ret	0
?lGetRealPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetRealPopulation
_TEXT	ENDS
PUBLIC	?lGetNewCityExtraPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNewCityExtraPopulation
EXTRN	?GetNewCityExtraPopulation@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetNewCityExtraPopulation
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNewCityExtraPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNewCityExtraPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNewCityExtraPopulation, COMDAT

; 2087 : 	return BasicLuaMethod(L, &CvPlayerAI::GetNewCityExtraPopulation);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetNewCityExtraPopulation@CvPlayer@@QBEHXZ ; CvPlayer::GetNewCityExtraPopulation
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2088 : }

	ret	0
?lGetNewCityExtraPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNewCityExtraPopulation
_TEXT	ENDS
PUBLIC	?lChangeNewCityExtraPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNewCityExtraPopulation
EXTRN	?ChangeNewCityExtraPopulation@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::ChangeNewCityExtraPopulation
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeNewCityExtraPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeNewCityExtraPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeNewCityExtraPopulation, COMDAT

; 2092 : {

	push	ebx
	push	ebp
	push	esi

; 2093 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lChangeNew
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lChangeNew
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lChangeNew
	xor	bl, bl
$LN5@lChangeNew:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lChangeNew
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lChangeNew:

; 2094 : 	int iValue = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 2095 : 	pkPlayer->ChangeNewCityExtraPopulation(iValue);

	push	eax
	mov	ecx, edi
	call	?ChangeNewCityExtraPopulation@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeNewCityExtraPopulation
	pop	edi
	pop	esi
	pop	ebp

; 2096 : 
; 2097 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2098 : }

	ret	0
?lChangeNewCityExtraPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeNewCityExtraPopulation
_TEXT	ENDS
PUBLIC	?lGetTotalLand@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetTotalLand
EXTRN	?getTotalLand@CvPlayer@@QBEHXZ:PROC		; CvPlayer::getTotalLand
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTotalLand@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTotalLand@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetTotalLand, COMDAT

; 2103 : 	return BasicLuaMethod(L, &CvPlayerAI::getTotalLand);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getTotalLand@CvPlayer@@QBEHXZ	; CvPlayer::getTotalLand
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2104 : }

	ret	0
?lGetTotalLand@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetTotalLand
_TEXT	ENDS
PUBLIC	?lGetTotalLandScored@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTotalLandScored
EXTRN	?getTotalLandScored@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getTotalLandScored
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTotalLandScored@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTotalLandScored@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTotalLandScored, COMDAT

; 2109 : 	return BasicLuaMethod(L, &CvPlayerAI::getTotalLandScored);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getTotalLandScored@CvPlayer@@QBEHXZ ; CvPlayer::getTotalLandScored
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2110 : }

	ret	0
?lGetTotalLandScored@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTotalLandScored
_TEXT	ENDS
PUBLIC	?lGetGold@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetGold
EXTRN	?GetGold@CvTreasury@@QBEHXZ:PROC		; CvTreasury::GetGold
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGold@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGold@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC		; CvLuaPlayer::lGetGold, COMDAT

; 2114 : {

	push	ebx
	push	ebp
	push	esi

; 2115 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetGold
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetGold
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetGold
	xor	bl, bl
$LN5@lGetGold:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetGold
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetGold:

; 2116 : 	lua_pushinteger(L, pkPlayer->GetTreasury()->GetGold());

	mov	ecx, edi
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?GetGold@CvTreasury@@QBEHXZ		; CvTreasury::GetGold
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2117 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2118 : }

	ret	0
?lGetGold@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP		; CvLuaPlayer::lGetGold
_TEXT	ENDS
PUBLIC	?lSetGold@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lSetGold
EXTRN	?SetGold@CvTreasury@@QAEXH@Z:PROC		; CvTreasury::SetGold
; Function compile flags: /Ogtpy
;	COMDAT ?lSetGold@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetGold@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC		; CvLuaPlayer::lSetGold, COMDAT

; 2122 : {

	push	ebx
	push	ebp
	push	esi

; 2123 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lSetGold
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lSetGold
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lSetGold
	xor	bl, bl
$LN5@lSetGold:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lSetGold
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lSetGold:

; 2124 : 	int iValue = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 2125 : 	pkPlayer->GetTreasury()->SetGold(iValue);

	push	eax
	mov	ecx, edi
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?SetGold@CvTreasury@@QAEXH@Z		; CvTreasury::SetGold
	pop	edi
	pop	esi
	pop	ebp

; 2126 : 
; 2127 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2128 : }

	ret	0
?lSetGold@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP		; CvLuaPlayer::lSetGold
_TEXT	ENDS
PUBLIC	?lChangeGold@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lChangeGold
EXTRN	?ChangeGold@CvTreasury@@QAEXH@Z:PROC		; CvTreasury::ChangeGold
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeGold@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeGold@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lChangeGold, COMDAT

; 2132 : {

	push	ebx
	push	ebp
	push	esi

; 2133 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lChangeGol
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lChangeGol
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lChangeGol
	xor	bl, bl
$LN5@lChangeGol:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lChangeGol
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lChangeGol:

; 2134 : 	int iValue = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 2135 : 	pkPlayer->GetTreasury()->ChangeGold(iValue);

	push	eax
	mov	ecx, edi
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?ChangeGold@CvTreasury@@QAEXH@Z		; CvTreasury::ChangeGold
	pop	edi
	pop	esi
	pop	ebp

; 2136 : 
; 2137 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2138 : }

	ret	0
?lChangeGold@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lChangeGold
_TEXT	ENDS
PUBLIC	?lCalculateGrossGold@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCalculateGrossGold
EXTRN	?CalculateGrossGold@CvTreasury@@QAEHXZ:PROC	; CvTreasury::CalculateGrossGold
; Function compile flags: /Ogtpy
;	COMDAT ?lCalculateGrossGold@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCalculateGrossGold@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lCalculateGrossGold, COMDAT

; 2142 : {

	push	ebx
	push	ebp
	push	esi

; 2143 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCalculate@4
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCalculate@4
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCalculate@4
	xor	bl, bl
$LN5@lCalculate@4:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lCalculate@4
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lCalculate@4:

; 2144 : 	lua_pushinteger(L, pkPlayer->GetTreasury()->CalculateGrossGold());

	mov	ecx, edi
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?CalculateGrossGold@CvTreasury@@QAEHXZ	; CvTreasury::CalculateGrossGold
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2145 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2146 : }

	ret	0
?lCalculateGrossGold@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lCalculateGrossGold
_TEXT	ENDS
PUBLIC	?lGetLifetimeGrossGold@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetLifetimeGrossGold
EXTRN	?GetLifetimeGrossGold@CvTreasury@@QAEHXZ:PROC	; CvTreasury::GetLifetimeGrossGold
; Function compile flags: /Ogtpy
;	COMDAT ?lGetLifetimeGrossGold@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetLifetimeGrossGold@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetLifetimeGrossGold, COMDAT

; 2150 : {

	push	ebx
	push	ebp
	push	esi

; 2151 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetLifeti
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetLifeti
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetLifeti
	xor	bl, bl
$LN5@lGetLifeti:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetLifeti
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetLifeti:

; 2152 : 	lua_pushinteger(L, pkPlayer->GetTreasury()->GetLifetimeGrossGold());

	mov	ecx, edi
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?GetLifetimeGrossGold@CvTreasury@@QAEHXZ ; CvTreasury::GetLifetimeGrossGold
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2153 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2154 : }

	ret	0
?lGetLifetimeGrossGold@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetLifetimeGrossGold
_TEXT	ENDS
PUBLIC	?lGetGoldFromCitiesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldFromCitiesTimes100
EXTRN	?GetGoldFromCitiesTimes100@CvTreasury@@QBEH_N@Z:PROC ; CvTreasury::GetGoldFromCitiesTimes100
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGoldFromCitiesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGoldFromCitiesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGoldFromCitiesTimes100, COMDAT

; 2158 : {

	push	ebx
	push	ebp
	push	esi

; 2159 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetGoldFr
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetGoldFr
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetGoldFr
	xor	bl, bl
$LN5@lGetGoldFr:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetGoldFr
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetGoldFr:

; 2160 : 	lua_pushinteger(L, pkPlayer->GetTreasury()->GetGoldFromCitiesTimes100());

	push	0
	mov	ecx, edi
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?GetGoldFromCitiesTimes100@CvTreasury@@QBEH_N@Z ; CvTreasury::GetGoldFromCitiesTimes100
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2161 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2162 : }

	ret	0
?lGetGoldFromCitiesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGoldFromCitiesTimes100
_TEXT	ENDS
PUBLIC	?lGetGoldFromCitiesMinusTradeRoutesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldFromCitiesMinusTradeRoutesTimes100
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGoldFromCitiesMinusTradeRoutesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGoldFromCitiesMinusTradeRoutesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGoldFromCitiesMinusTradeRoutesTimes100, COMDAT

; 2165 : {

	push	ebx
	push	ebp
	push	esi

; 2166 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetGoldFr@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetGoldFr@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetGoldFr@2
	xor	bl, bl
$LN5@lGetGoldFr@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetGoldFr@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetGoldFr@2:

; 2167 : 	int iResult = pkPlayer->GetTreasury()->GetGoldFromCitiesTimes100(true);

	push	1
	mov	ecx, edi
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?GetGoldFromCitiesTimes100@CvTreasury@@QBEH_N@Z ; CvTreasury::GetGoldFromCitiesTimes100

; 2168 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2169 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2170 : }

	ret	0
?lGetGoldFromCitiesMinusTradeRoutesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGoldFromCitiesMinusTradeRoutesTimes100
_TEXT	ENDS
PUBLIC	?lGetGoldPerTurnFromDiplomacy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldPerTurnFromDiplomacy
EXTRN	?GetGoldPerTurnFromDiplomacy@CvTreasury@@QBEHXZ:PROC ; CvTreasury::GetGoldPerTurnFromDiplomacy
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGoldPerTurnFromDiplomacy@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGoldPerTurnFromDiplomacy@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGoldPerTurnFromDiplomacy, COMDAT

; 2175 : {

	push	ebx
	push	ebp
	push	esi

; 2176 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetGoldPe
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetGoldPe
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetGoldPe
	xor	bl, bl
$LN5@lGetGoldPe:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetGoldPe
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetGoldPe:

; 2177 : 	lua_pushinteger(L, pkPlayer->GetTreasury()->GetGoldPerTurnFromDiplomacy());

	mov	ecx, edi
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?GetGoldPerTurnFromDiplomacy@CvTreasury@@QBEHXZ ; CvTreasury::GetGoldPerTurnFromDiplomacy
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2178 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2179 : }

	ret	0
?lGetGoldPerTurnFromDiplomacy@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGoldPerTurnFromDiplomacy
_TEXT	ENDS
PUBLIC	?lGetCityConnectionRouteGoldTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCityConnectionRouteGoldTimes100
EXTRN	?GetCityConnectionRouteGoldTimes100@CvTreasury@@QBEHPAVCvCity@@@Z:PROC ; CvTreasury::GetCityConnectionRouteGoldTimes100
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCityConnectionRouteGoldTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkInstance$250258 = -4					; size = 4
_L$ = 8							; size = 4
?lGetCityConnectionRouteGoldTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCityConnectionRouteGoldTimes100, COMDAT

; 2183 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 2184 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$250258[esp+32], 0
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetCityCo
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetCityCo
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$250258[esp+20], eax
	test	eax, eax
	je	SHORT $LN5@lGetCityCo
	xor	bl, bl
$LN5@lGetCityCo:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetCityCo
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetCityCo:

; 2185 : 	CvCity* pkCity = CvLuaCity::GetInstance(L, 2);

	push	esi
	call	_lua_gettop
	push	2
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN16@lGetCityCo
	push	OFFSET $SG237679
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN16@lGetCityCo
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN16@lGetCityCo
	xor	bl, bl
$LN16@lGetCityCo:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN15@lGetCityCo
	push	esi
	call	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
	add	esp, 4
$LN15@lGetCityCo:

; 2186 : 	lua_pushinteger(L, pkPlayer->GetTreasury()->GetCityConnectionRouteGoldTimes100(pkCity));

	mov	ecx, DWORD PTR _pkInstance$250258[esp+20]
	push	edi
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?GetCityConnectionRouteGoldTimes100@CvTreasury@@QBEHPAVCvCity@@@Z ; CvTreasury::GetCityConnectionRouteGoldTimes100
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2187 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2188 : }

	pop	ecx
	ret	0
?lGetCityConnectionRouteGoldTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCityConnectionRouteGoldTimes100
_TEXT	ENDS
PUBLIC	?lGetCityConnectionGold@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCityConnectionGold
EXTRN	?GetCityConnectionGold@CvTreasury@@QBEHXZ:PROC	; CvTreasury::GetCityConnectionGold
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCityConnectionGold@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCityConnectionGold@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCityConnectionGold, COMDAT

; 2192 : {

	push	ebx
	push	ebp
	push	esi

; 2193 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetCityCo@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetCityCo@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetCityCo@2
	xor	bl, bl
$LN5@lGetCityCo@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetCityCo@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetCityCo@2:

; 2194 : 	lua_pushinteger(L, pkPlayer->GetTreasury()->GetCityConnectionGold());

	mov	ecx, edi
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?GetCityConnectionGold@CvTreasury@@QBEHXZ ; CvTreasury::GetCityConnectionGold
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2195 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2196 : }

	ret	0
?lGetCityConnectionGold@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCityConnectionGold
_TEXT	ENDS
PUBLIC	?lGetCityConnectionGoldTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCityConnectionGoldTimes100
EXTRN	?GetCityConnectionGoldTimes100@CvTreasury@@QBEHXZ:PROC ; CvTreasury::GetCityConnectionGoldTimes100
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCityConnectionGoldTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCityConnectionGoldTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCityConnectionGoldTimes100, COMDAT

; 2200 : {

	push	ebx
	push	ebp
	push	esi

; 2201 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetCityCo@3
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetCityCo@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetCityCo@3
	xor	bl, bl
$LN5@lGetCityCo@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetCityCo@3
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetCityCo@3:

; 2202 : 	lua_pushinteger(L, pkPlayer->GetTreasury()->GetCityConnectionGoldTimes100());

	mov	ecx, edi
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?GetCityConnectionGoldTimes100@CvTreasury@@QBEHXZ ; CvTreasury::GetCityConnectionGoldTimes100
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2203 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2204 : }

	ret	0
?lGetCityConnectionGoldTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCityConnectionGoldTimes100
_TEXT	ENDS
PUBLIC	?lGetGoldPerTurnFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldPerTurnFromReligion
EXTRN	?GetGoldPerTurnFromReligion@CvTreasury@@QBEHXZ:PROC ; CvTreasury::GetGoldPerTurnFromReligion
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGoldPerTurnFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGoldPerTurnFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGoldPerTurnFromReligion, COMDAT

; 2208 : {

	push	ebx
	push	ebp
	push	esi

; 2209 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetGoldPe@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetGoldPe@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetGoldPe@2
	xor	bl, bl
$LN5@lGetGoldPe@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetGoldPe@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetGoldPe@2:

; 2210 : 	lua_pushinteger(L, pkPlayer->GetTreasury()->GetGoldPerTurnFromReligion());

	mov	ecx, edi
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?GetGoldPerTurnFromReligion@CvTreasury@@QBEHXZ ; CvTreasury::GetGoldPerTurnFromReligion
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2211 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2212 : }

	ret	0
?lGetGoldPerTurnFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGoldPerTurnFromReligion
_TEXT	ENDS
PUBLIC	?lGetGoldPerTurnFromTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldPerTurnFromTradeRoutes
EXTRN	?GetGoldPerTurnFromTradeRoutes@CvTreasury@@QBEHXZ:PROC ; CvTreasury::GetGoldPerTurnFromTradeRoutes
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGoldPerTurnFromTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGoldPerTurnFromTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGoldPerTurnFromTradeRoutes, COMDAT

; 2216 : {

	push	ebx
	push	ebp
	push	esi

; 2217 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetGoldPe@3
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetGoldPe@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetGoldPe@3
	xor	bl, bl
$LN5@lGetGoldPe@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetGoldPe@3
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetGoldPe@3:

; 2218 : 	lua_pushinteger(L, pkPlayer->GetTreasury()->GetGoldPerTurnFromTradeRoutes());

	mov	ecx, edi
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?GetGoldPerTurnFromTradeRoutes@CvTreasury@@QBEHXZ ; CvTreasury::GetGoldPerTurnFromTradeRoutes
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2219 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2220 : }

	ret	0
?lGetGoldPerTurnFromTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGoldPerTurnFromTradeRoutes
_TEXT	ENDS
PUBLIC	?lGetGoldPerTurnFromTradeRoutesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldPerTurnFromTradeRoutesTimes100
EXTRN	?GetGoldPerTurnFromTradeRoutesTimes100@CvTreasury@@QBEHXZ:PROC ; CvTreasury::GetGoldPerTurnFromTradeRoutesTimes100
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGoldPerTurnFromTradeRoutesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGoldPerTurnFromTradeRoutesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGoldPerTurnFromTradeRoutesTimes100, COMDAT

; 2224 : {

	push	ebx
	push	ebp
	push	esi

; 2225 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetGoldPe@4
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetGoldPe@4
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetGoldPe@4
	xor	bl, bl
$LN5@lGetGoldPe@4:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetGoldPe@4
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetGoldPe@4:

; 2226 : 	lua_pushinteger(L, pkPlayer->GetTreasury()->GetGoldPerTurnFromTradeRoutesTimes100());

	mov	ecx, edi
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?GetGoldPerTurnFromTradeRoutesTimes100@CvTreasury@@QBEHXZ ; CvTreasury::GetGoldPerTurnFromTradeRoutesTimes100
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2227 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2228 : }

	ret	0
?lGetGoldPerTurnFromTradeRoutesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGoldPerTurnFromTradeRoutesTimes100
_TEXT	ENDS
PUBLIC	?lGetGoldPerTurnFromTraits@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldPerTurnFromTraits
EXTRN	?GetGoldPerTurnFromTraits@CvTreasury@@QBEHXZ:PROC ; CvTreasury::GetGoldPerTurnFromTraits
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGoldPerTurnFromTraits@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGoldPerTurnFromTraits@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGoldPerTurnFromTraits, COMDAT

; 2232 : {

	push	ebx
	push	ebp
	push	esi

; 2233 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetGoldPe@5
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetGoldPe@5
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetGoldPe@5
	xor	bl, bl
$LN5@lGetGoldPe@5:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetGoldPe@5
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetGoldPe@5:

; 2234 : 	lua_pushinteger(L, pkPlayer->GetTreasury()->GetGoldPerTurnFromTraits());

	mov	ecx, edi
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?GetGoldPerTurnFromTraits@CvTreasury@@QBEHXZ ; CvTreasury::GetGoldPerTurnFromTraits
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2235 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2236 : }

	ret	0
?lGetGoldPerTurnFromTraits@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGoldPerTurnFromTraits
_TEXT	ENDS
PUBLIC	?lGetTotalJONSCulturePerTurnTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTotalJONSCulturePerTurnTimes100
EXTRN	?GetTotalJONSCulturePerTurnTimes100@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetTotalJONSCulturePerTurnTimes100
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTotalJONSCulturePerTurnTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTotalJONSCulturePerTurnTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTotalJONSCulturePerTurnTimes100, COMDAT

; 2240 : 	return BasicLuaMethod(L, &CvPlayerAI::GetTotalJONSCulturePerTurnTimes100);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetTotalJONSCulturePerTurnTimes100@CvPlayer@@QBEHXZ ; CvPlayer::GetTotalJONSCulturePerTurnTimes100
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2241 : }

	ret	0
?lGetTotalJONSCulturePerTurnTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTotalJONSCulturePerTurnTimes100
_TEXT	ENDS
PUBLIC	?lGetJONSCulturePerTurnFromCitiesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetJONSCulturePerTurnFromCitiesTimes100
EXTRN	?GetJONSCulturePerTurnFromCitiesTimes100@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetJONSCulturePerTurnFromCitiesTimes100
; Function compile flags: /Ogtpy
;	COMDAT ?lGetJONSCulturePerTurnFromCitiesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCulturePerTurnFromCitiesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetJONSCulturePerTurnFromCitiesTimes100, COMDAT

; 2244 : 	return BasicLuaMethod(L, &CvPlayerAI::GetJONSCulturePerTurnFromCitiesTimes100);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetJONSCulturePerTurnFromCitiesTimes100@CvPlayer@@QBEHXZ ; CvPlayer::GetJONSCulturePerTurnFromCitiesTimes100
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2245 : }

	ret	0
?lGetJONSCulturePerTurnFromCitiesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetJONSCulturePerTurnFromCitiesTimes100
_TEXT	ENDS
PUBLIC	?lGetJONSCulturePerTurnFromExcessHappinessTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetJONSCulturePerTurnFromExcessHappinessTimes100
EXTRN	?GetJONSCulturePerTurnFromExcessHappinessTimes100@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetJONSCulturePerTurnFromExcessHappinessTimes100
; Function compile flags: /Ogtpy
;	COMDAT ?lGetJONSCulturePerTurnFromExcessHappinessTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCulturePerTurnFromExcessHappinessTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetJONSCulturePerTurnFromExcessHappinessTimes100, COMDAT

; 2248 : 	return BasicLuaMethod(L, &CvPlayerAI::GetJONSCulturePerTurnFromExcessHappinessTimes100);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetJONSCulturePerTurnFromExcessHappinessTimes100@CvPlayer@@QBEHXZ ; CvPlayer::GetJONSCulturePerTurnFromExcessHappinessTimes100
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2249 : }

	ret	0
?lGetJONSCulturePerTurnFromExcessHappinessTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetJONSCulturePerTurnFromExcessHappinessTimes100
_TEXT	ENDS
PUBLIC	?lGetCulturePerTurnFromReligionTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCulturePerTurnFromReligionTimes100
EXTRN	?GetCulturePerTurnFromReligionTimes100@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetCulturePerTurnFromReligionTimes100
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCulturePerTurnFromReligionTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCulturePerTurnFromReligionTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCulturePerTurnFromReligionTimes100, COMDAT

; 2252 : 	return BasicLuaMethod(L, &CvPlayerAI::GetCulturePerTurnFromReligionTimes100);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetCulturePerTurnFromReligionTimes100@CvPlayer@@QBEHXZ ; CvPlayer::GetCulturePerTurnFromReligionTimes100
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2253 : }

	ret	0
?lGetCulturePerTurnFromReligionTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCulturePerTurnFromReligionTimes100
_TEXT	ENDS
PUBLIC	?lGetCulturePerTurnFromBonusTurnsTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCulturePerTurnFromBonusTurnsTimes100
EXTRN	?GetCulturePerTurnFromBonusTurnsTimes100@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetCulturePerTurnFromBonusTurnsTimes100
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCulturePerTurnFromBonusTurnsTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCulturePerTurnFromBonusTurnsTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCulturePerTurnFromBonusTurnsTimes100, COMDAT

; 2256 : 	return BasicLuaMethod(L, &CvPlayerAI::GetCulturePerTurnFromBonusTurnsTimes100);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetCulturePerTurnFromBonusTurnsTimes100@CvPlayer@@QBEHXZ ; CvPlayer::GetCulturePerTurnFromBonusTurnsTimes100
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2257 : }

	ret	0
?lGetCulturePerTurnFromBonusTurnsTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCulturePerTurnFromBonusTurnsTimes100
_TEXT	ENDS
PUBLIC	?lGetJONSCultureTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetJONSCultureTimes100
EXTRN	?getJONSCultureTimes100@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getJONSCultureTimes100
; Function compile flags: /Ogtpy
;	COMDAT ?lGetJONSCultureTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCultureTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetJONSCultureTimes100, COMDAT

; 2260 : 	return BasicLuaMethod(L, &CvPlayerAI::getJONSCultureTimes100);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getJONSCultureTimes100@CvPlayer@@QBEHXZ ; CvPlayer::getJONSCultureTimes100
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2261 : }

	ret	0
?lGetJONSCultureTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetJONSCultureTimes100
_TEXT	ENDS
PUBLIC	?lSetJONSCultureTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetJONSCultureTimes100
EXTRN	?setJONSCultureTimes100@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::setJONSCultureTimes100
; Function compile flags: /Ogtpy
;	COMDAT ?lSetJONSCultureTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetJONSCultureTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetJONSCultureTimes100, COMDAT

; 2264 : 	return BasicLuaMethod(L, &CvPlayerAI::setJONSCultureTimes100);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?setJONSCultureTimes100@CvPlayer@@QAEXH@Z ; CvPlayer::setJONSCultureTimes100
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2265 : }

	ret	0
?lSetJONSCultureTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetJONSCultureTimes100
_TEXT	ENDS
PUBLIC	?lChangeJONSCultureTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeJONSCultureTimes100
EXTRN	?changeJONSCultureTimes100@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::changeJONSCultureTimes100
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeJONSCultureTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeJONSCultureTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeJONSCultureTimes100, COMDAT

; 2268 : 	return BasicLuaMethod(L, &CvPlayerAI::changeJONSCultureTimes100);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?changeJONSCultureTimes100@CvPlayer@@QAEXH@Z ; CvPlayer::changeJONSCultureTimes100
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2269 : }

	ret	0
?lChangeJONSCultureTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeJONSCultureTimes100
_TEXT	ENDS
PUBLIC	?lGetJONSCultureEverGeneratedTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetJONSCultureEverGeneratedTimes100
EXTRN	?GetJONSCultureEverGeneratedTimes100@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetJONSCultureEverGeneratedTimes100
; Function compile flags: /Ogtpy
;	COMDAT ?lGetJONSCultureEverGeneratedTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCultureEverGeneratedTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetJONSCultureEverGeneratedTimes100, COMDAT

; 2272 : 	return BasicLuaMethod(L, &CvPlayerAI::GetJONSCultureEverGeneratedTimes100);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetJONSCultureEverGeneratedTimes100@CvPlayer@@QBEHXZ ; CvPlayer::GetJONSCultureEverGeneratedTimes100
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2273 : }

	ret	0
?lGetJONSCultureEverGeneratedTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetJONSCultureEverGeneratedTimes100
_TEXT	ENDS
PUBLIC	?lGetTotalJONSCulturePerTurn@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTotalJONSCulturePerTurn
EXTRN	?GetTotalJONSCulturePerTurn@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetTotalJONSCulturePerTurn
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTotalJONSCulturePerTurn@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTotalJONSCulturePerTurn@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTotalJONSCulturePerTurn, COMDAT

; 2279 : 	return BasicLuaMethod(L, &CvPlayerAI::GetTotalJONSCulturePerTurn);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetTotalJONSCulturePerTurn@CvPlayer@@QBEHXZ ; CvPlayer::GetTotalJONSCulturePerTurn
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2280 : }

	ret	0
?lGetTotalJONSCulturePerTurn@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTotalJONSCulturePerTurn
_TEXT	ENDS
PUBLIC	?lGetJONSCulturePerTurnFromCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetJONSCulturePerTurnFromCities
EXTRN	?GetJONSCulturePerTurnFromCities@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetJONSCulturePerTurnFromCities
; Function compile flags: /Ogtpy
;	COMDAT ?lGetJONSCulturePerTurnFromCities@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCulturePerTurnFromCities@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetJONSCulturePerTurnFromCities, COMDAT

; 2285 : 	return BasicLuaMethod(L, &CvPlayerAI::GetJONSCulturePerTurnFromCities);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetJONSCulturePerTurnFromCities@CvPlayer@@QBEHXZ ; CvPlayer::GetJONSCulturePerTurnFromCities
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2286 : }

	ret	0
?lGetJONSCulturePerTurnFromCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetJONSCulturePerTurnFromCities
_TEXT	ENDS
PUBLIC	?lGetJONSCulturePerTurnFromExcessHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetJONSCulturePerTurnFromExcessHappiness
EXTRN	?GetJONSCulturePerTurnFromExcessHappiness@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetJONSCulturePerTurnFromExcessHappiness
; Function compile flags: /Ogtpy
;	COMDAT ?lGetJONSCulturePerTurnFromExcessHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCulturePerTurnFromExcessHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetJONSCulturePerTurnFromExcessHappiness, COMDAT

; 2291 : 	return BasicLuaMethod(L, &CvPlayerAI::GetJONSCulturePerTurnFromExcessHappiness);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetJONSCulturePerTurnFromExcessHappiness@CvPlayer@@QBEHXZ ; CvPlayer::GetJONSCulturePerTurnFromExcessHappiness
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2292 : }

	ret	0
?lGetJONSCulturePerTurnFromExcessHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetJONSCulturePerTurnFromExcessHappiness
_TEXT	ENDS
PUBLIC	?lGetJONSCulturePerTurnFromTraits@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetJONSCulturePerTurnFromTraits
EXTRN	?GetJONSCulturePerTurnFromTraits@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetJONSCulturePerTurnFromTraits
; Function compile flags: /Ogtpy
;	COMDAT ?lGetJONSCulturePerTurnFromTraits@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCulturePerTurnFromTraits@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetJONSCulturePerTurnFromTraits, COMDAT

; 2297 : 	return BasicLuaMethod(L, &CvPlayerAI::GetJONSCulturePerTurnFromTraits);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetJONSCulturePerTurnFromTraits@CvPlayer@@QBEHXZ ; CvPlayer::GetJONSCulturePerTurnFromTraits
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2298 : }

	ret	0
?lGetJONSCulturePerTurnFromTraits@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetJONSCulturePerTurnFromTraits
_TEXT	ENDS
PUBLIC	?lGetCultureWonderMultiplier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCultureWonderMultiplier
EXTRN	?GetCultureWonderMultiplier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetCultureWonderMultiplier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCultureWonderMultiplier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCultureWonderMultiplier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCultureWonderMultiplier, COMDAT

; 2303 : 	return BasicLuaMethod(L, &CvPlayerAI::GetCultureWonderMultiplier);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetCultureWonderMultiplier@CvPlayer@@QBEHXZ ; CvPlayer::GetCultureWonderMultiplier
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2304 : }

	ret	0
?lGetCultureWonderMultiplier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCultureWonderMultiplier
_TEXT	ENDS
PUBLIC	?lGetJONSCulturePerTurnForFree@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetJONSCulturePerTurnForFree
EXTRN	?GetJONSCulturePerTurnForFree@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetJONSCulturePerTurnForFree
; Function compile flags: /Ogtpy
;	COMDAT ?lGetJONSCulturePerTurnForFree@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCulturePerTurnForFree@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetJONSCulturePerTurnForFree, COMDAT

; 2309 : 	return BasicLuaMethod(L, &CvPlayerAI::GetJONSCulturePerTurnForFree);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetJONSCulturePerTurnForFree@CvPlayer@@QBEHXZ ; CvPlayer::GetJONSCulturePerTurnForFree
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2310 : }

	ret	0
?lGetJONSCulturePerTurnForFree@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetJONSCulturePerTurnForFree
_TEXT	ENDS
PUBLIC	?lChangeJONSCulturePerTurnForFree@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeJONSCulturePerTurnForFree
EXTRN	?ChangeJONSCulturePerTurnForFree@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::ChangeJONSCulturePerTurnForFree
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeJONSCulturePerTurnForFree@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeJONSCulturePerTurnForFree@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeJONSCulturePerTurnForFree, COMDAT

; 2315 : 	return BasicLuaMethod(L, &CvPlayerAI::ChangeJONSCulturePerTurnForFree);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?ChangeJONSCulturePerTurnForFree@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeJONSCulturePerTurnForFree
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2316 : }

	ret	0
?lChangeJONSCulturePerTurnForFree@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeJONSCulturePerTurnForFree
_TEXT	ENDS
PUBLIC	?lGetJONSCulturePerTurnFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetJONSCulturePerTurnFromMinorCivs
EXTRN	?GetJONSCulturePerTurnFromMinorCivs@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetJONSCulturePerTurnFromMinorCivs
; Function compile flags: /Ogtpy
;	COMDAT ?lGetJONSCulturePerTurnFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCulturePerTurnFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetJONSCulturePerTurnFromMinorCivs, COMDAT

; 2322 : 	return BasicLuaMethod(L, &CvPlayerAI::GetJONSCulturePerTurnFromMinorCivs);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetJONSCulturePerTurnFromMinorCivs@CvPlayer@@QBEHXZ ; CvPlayer::GetJONSCulturePerTurnFromMinorCivs
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2323 : }

	ret	0
?lGetJONSCulturePerTurnFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetJONSCulturePerTurnFromMinorCivs
_TEXT	ENDS
PUBLIC	?lChangeJONSCulturePerTurnFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeJONSCulturePerTurnFromMinorCivs
EXTRN	?ChangeJONSCulturePerTurnFromMinorCivs@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::ChangeJONSCulturePerTurnFromMinorCivs
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeJONSCulturePerTurnFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeJONSCulturePerTurnFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeJONSCulturePerTurnFromMinorCivs, COMDAT

; 2329 : 	return BasicLuaMethod(L, &CvPlayerAI::ChangeJONSCulturePerTurnFromMinorCivs);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?ChangeJONSCulturePerTurnFromMinorCivs@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeJONSCulturePerTurnFromMinorCivs
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2330 : }

	ret	0
?lChangeJONSCulturePerTurnFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeJONSCulturePerTurnFromMinorCivs
_TEXT	ENDS
PUBLIC	?lGetCulturePerTurnFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCulturePerTurnFromMinorCivs
EXTRN	?GetCulturePerTurnFromMinorCivs@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetCulturePerTurnFromMinorCivs
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCulturePerTurnFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCulturePerTurnFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCulturePerTurnFromMinorCivs, COMDAT

; 2335 : 	return BasicLuaMethod(L, &CvPlayerAI::GetCulturePerTurnFromMinorCivs);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetCulturePerTurnFromMinorCivs@CvPlayer@@QBEHXZ ; CvPlayer::GetCulturePerTurnFromMinorCivs
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2336 : }

	ret	0
?lGetCulturePerTurnFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCulturePerTurnFromMinorCivs
_TEXT	ENDS
PUBLIC	?lGetCulturePerTurnFromMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCulturePerTurnFromMinor
EXTRN	?GetCulturePerTurnFromMinor@CvPlayer@@QBEHW4PlayerTypes@@@Z:PROC ; CvPlayer::GetCulturePerTurnFromMinor
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCulturePerTurnFromMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCulturePerTurnFromMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCulturePerTurnFromMinor, COMDAT

; 2341 : 	return BasicLuaMethod(L, &CvPlayerAI::GetCulturePerTurnFromMinor);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetCulturePerTurnFromMinor@CvPlayer@@QBEHW4PlayerTypes@@@Z ; CvPlayer::GetCulturePerTurnFromMinor
	push	eax
	call	??$BasicLuaMethod@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum PlayerTypes>
	add	esp, 8

; 2342 : }

	ret	0
?lGetCulturePerTurnFromMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCulturePerTurnFromMinor
_TEXT	ENDS
PUBLIC	?lGetCulturePerTurnFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCulturePerTurnFromReligion
EXTRN	?GetCulturePerTurnFromReligion@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetCulturePerTurnFromReligion
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCulturePerTurnFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCulturePerTurnFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCulturePerTurnFromReligion, COMDAT

; 2347 : 	return BasicLuaMethod(L, &CvPlayerAI::GetCulturePerTurnFromReligion);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetCulturePerTurnFromReligion@CvPlayer@@QBEHXZ ; CvPlayer::GetCulturePerTurnFromReligion
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2348 : }

	ret	0
?lGetCulturePerTurnFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCulturePerTurnFromReligion
_TEXT	ENDS
PUBLIC	?lGetCulturePerTurnFromBonusTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCulturePerTurnFromBonusTurns
EXTRN	?GetCulturePerTurnFromBonusTurns@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetCulturePerTurnFromBonusTurns
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCulturePerTurnFromBonusTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCulturePerTurnFromBonusTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCulturePerTurnFromBonusTurns, COMDAT

; 2353 : 	return BasicLuaMethod(L, &CvPlayerAI::GetCulturePerTurnFromBonusTurns);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetCulturePerTurnFromBonusTurns@CvPlayer@@QBEHXZ ; CvPlayer::GetCulturePerTurnFromBonusTurns
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2354 : }

	ret	0
?lGetCulturePerTurnFromBonusTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCulturePerTurnFromBonusTurns
_TEXT	ENDS
PUBLIC	?lGetCultureCityModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCultureCityModifier
EXTRN	?GetJONSCultureCityModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetJONSCultureCityModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCultureCityModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCultureCityModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCultureCityModifier, COMDAT

; 2359 : 	return BasicLuaMethod(L, &CvPlayerAI::GetJONSCultureCityModifier);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetJONSCultureCityModifier@CvPlayer@@QBEHXZ ; CvPlayer::GetJONSCultureCityModifier
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2360 : }

	ret	0
?lGetCultureCityModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCultureCityModifier
_TEXT	ENDS
PUBLIC	?lGetJONSCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetJONSCulture
EXTRN	?getJONSCulture@CvPlayer@@QBEHXZ:PROC		; CvPlayer::getJONSCulture
; Function compile flags: /Ogtpy
;	COMDAT ?lGetJONSCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetJONSCulture, COMDAT

; 2366 : 	return BasicLuaMethod(L, &CvPlayerAI::getJONSCulture);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getJONSCulture@CvPlayer@@QBEHXZ	; CvPlayer::getJONSCulture
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2367 : }

	ret	0
?lGetJONSCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetJONSCulture
_TEXT	ENDS
PUBLIC	?lSetJONSCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetJONSCulture
EXTRN	?setJONSCulture@CvPlayer@@QAEXH@Z:PROC		; CvPlayer::setJONSCulture
; Function compile flags: /Ogtpy
;	COMDAT ?lSetJONSCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetJONSCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lSetJONSCulture, COMDAT

; 2372 : 	return BasicLuaMethod(L, &CvPlayerAI::setJONSCulture);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?setJONSCulture@CvPlayer@@QAEXH@Z ; CvPlayer::setJONSCulture
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2373 : }

	ret	0
?lSetJONSCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lSetJONSCulture
_TEXT	ENDS
PUBLIC	?lChangeJONSCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeJONSCulture
EXTRN	?changeJONSCulture@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::changeJONSCulture
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeJONSCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeJONSCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeJONSCulture, COMDAT

; 2378 : 	return BasicLuaMethod(L, &CvPlayerAI::changeJONSCulture);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?changeJONSCulture@CvPlayer@@QAEXH@Z ; CvPlayer::changeJONSCulture
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2379 : }

	ret	0
?lChangeJONSCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeJONSCulture
_TEXT	ENDS
PUBLIC	?lGetJONSCultureEverGenerated@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetJONSCultureEverGenerated
EXTRN	?GetJONSCultureEverGenerated@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetJONSCultureEverGenerated
; Function compile flags: /Ogtpy
;	COMDAT ?lGetJONSCultureEverGenerated@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetJONSCultureEverGenerated@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetJONSCultureEverGenerated, COMDAT

; 2384 : 	return BasicLuaMethod(L, &CvPlayerAI::GetJONSCultureEverGenerated);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetJONSCultureEverGenerated@CvPlayer@@QBEHXZ ; CvPlayer::GetJONSCultureEverGenerated
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2385 : }

	ret	0
?lGetJONSCultureEverGenerated@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetJONSCultureEverGenerated
_TEXT	ENDS
PUBLIC	?lGetLastTurnLifetimeCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetLastTurnLifetimeCulture
EXTRN	?GetLastTurnLifetimeCulture@CvPlayerCulture@@QBEHXZ:PROC ; CvPlayerCulture::GetLastTurnLifetimeCulture
EXTRN	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ:PROC ; CvPlayer::GetCulture
; Function compile flags: /Ogtpy
;	COMDAT ?lGetLastTurnLifetimeCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetLastTurnLifetimeCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetLastTurnLifetimeCulture, COMDAT

; 2389 : {

	push	ebx
	push	ebp
	push	esi

; 2390 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetLastTu
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetLastTu
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetLastTu
	xor	bl, bl
$LN5@lGetLastTu:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetLastTu
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetLastTu:

; 2391 : 	const int iResult = pkPlayer->GetCulture()->GetLastTurnLifetimeCulture();

	mov	ecx, edi
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetLastTurnLifetimeCulture@CvPlayerCulture@@QBEHXZ ; CvPlayerCulture::GetLastTurnLifetimeCulture

; 2392 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2393 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2394 : }

	ret	0
?lGetLastTurnLifetimeCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetLastTurnLifetimeCulture
_TEXT	ENDS
PUBLIC	?lGetInfluenceOn@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInfluenceOn
EXTRN	?GetInfluenceOn@CvPlayerCulture@@QBEHW4PlayerTypes@@@Z:PROC ; CvPlayerCulture::GetInfluenceOn
; Function compile flags: /Ogtpy
;	COMDAT ?lGetInfluenceOn@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetInfluenceOn@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetInfluenceOn, COMDAT

; 2398 : {

	push	ebx
	push	ebp
	push	esi

; 2399 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetInflue
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetInflue
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetInflue
	xor	bl, bl
$LN5@lGetInflue:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetInflue
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetInflue:

; 2400 : 	PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 2401 : 	const int iResult = pkPlayer->GetCulture()->GetInfluenceOn(ePlayer);

	push	eax
	mov	ecx, edi
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetInfluenceOn@CvPlayerCulture@@QBEHW4PlayerTypes@@@Z ; CvPlayerCulture::GetInfluenceOn

; 2402 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2403 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2404 : }

	ret	0
?lGetInfluenceOn@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetInfluenceOn
_TEXT	ENDS
PUBLIC	?lGetLastTurnInfluenceOn@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetLastTurnInfluenceOn
EXTRN	?GetLastTurnInfluenceOn@CvPlayerCulture@@QBEHW4PlayerTypes@@@Z:PROC ; CvPlayerCulture::GetLastTurnInfluenceOn
; Function compile flags: /Ogtpy
;	COMDAT ?lGetLastTurnInfluenceOn@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetLastTurnInfluenceOn@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetLastTurnInfluenceOn, COMDAT

; 2408 : {

	push	ebx
	push	ebp
	push	esi

; 2409 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetLastTu@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetLastTu@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetLastTu@2
	xor	bl, bl
$LN5@lGetLastTu@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetLastTu@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetLastTu@2:

; 2410 : 	PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 2411 : 	const int iResult = pkPlayer->GetCulture()->GetLastTurnInfluenceOn(ePlayer);

	push	eax
	mov	ecx, edi
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetLastTurnInfluenceOn@CvPlayerCulture@@QBEHW4PlayerTypes@@@Z ; CvPlayerCulture::GetLastTurnInfluenceOn

; 2412 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2413 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2414 : }

	ret	0
?lGetLastTurnInfluenceOn@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetLastTurnInfluenceOn
_TEXT	ENDS
PUBLIC	?lGetInfluencePerTurn@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInfluencePerTurn
EXTRN	?GetInfluencePerTurn@CvPlayerCulture@@QBEHW4PlayerTypes@@@Z:PROC ; CvPlayerCulture::GetInfluencePerTurn
; Function compile flags: /Ogtpy
;	COMDAT ?lGetInfluencePerTurn@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetInfluencePerTurn@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetInfluencePerTurn, COMDAT

; 2418 : {

	push	ebx
	push	ebp
	push	esi

; 2419 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetInflue@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetInflue@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetInflue@2
	xor	bl, bl
$LN5@lGetInflue@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetInflue@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetInflue@2:

; 2420 : 	PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 2421 : 	const int iResult = pkPlayer->GetCulture()->GetInfluencePerTurn(ePlayer);

	push	eax
	mov	ecx, edi
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetInfluencePerTurn@CvPlayerCulture@@QBEHW4PlayerTypes@@@Z ; CvPlayerCulture::GetInfluencePerTurn

; 2422 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2423 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2424 : }

	ret	0
?lGetInfluencePerTurn@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetInfluencePerTurn
_TEXT	ENDS
PUBLIC	?lGetInfluenceLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInfluenceLevel
EXTRN	?GetInfluenceLevel@CvPlayerCulture@@QBE?AW4InfluenceLevelTypes@@W4PlayerTypes@@@Z:PROC ; CvPlayerCulture::GetInfluenceLevel
; Function compile flags: /Ogtpy
;	COMDAT ?lGetInfluenceLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetInfluenceLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetInfluenceLevel, COMDAT

; 2428 : {

	push	ebx
	push	ebp
	push	esi

; 2429 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetInflue@3
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetInflue@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetInflue@3
	xor	bl, bl
$LN5@lGetInflue@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetInflue@3
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetInflue@3:

; 2430 : 	PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 2431 : 	InfluenceLevelTypes eResult = pkPlayer->GetCulture()->GetInfluenceLevel(ePlayer);

	push	eax
	mov	ecx, edi
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetInfluenceLevel@CvPlayerCulture@@QBE?AW4InfluenceLevelTypes@@W4PlayerTypes@@@Z ; CvPlayerCulture::GetInfluenceLevel

; 2432 : 	lua_pushinteger(L, (int)eResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2433 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2434 : }

	ret	0
?lGetInfluenceLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetInfluenceLevel
_TEXT	ENDS
PUBLIC	?lGetInfluenceTrend@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInfluenceTrend
EXTRN	?GetInfluenceTrend@CvPlayerCulture@@QBE?AW4InfluenceLevelTrend@@W4PlayerTypes@@@Z:PROC ; CvPlayerCulture::GetInfluenceTrend
; Function compile flags: /Ogtpy
;	COMDAT ?lGetInfluenceTrend@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetInfluenceTrend@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetInfluenceTrend, COMDAT

; 2438 : {

	push	ebx
	push	ebp
	push	esi

; 2439 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetInflue@4
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetInflue@4
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetInflue@4
	xor	bl, bl
$LN5@lGetInflue@4:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetInflue@4
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetInflue@4:

; 2440 : 	PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 2441 : 	InfluenceLevelTrend eResult = pkPlayer->GetCulture()->GetInfluenceTrend(ePlayer);

	push	eax
	mov	ecx, edi
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetInfluenceTrend@CvPlayerCulture@@QBE?AW4InfluenceLevelTrend@@W4PlayerTypes@@@Z ; CvPlayerCulture::GetInfluenceTrend

; 2442 : 	lua_pushinteger(L, (int)eResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2443 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2444 : }

	ret	0
?lGetInfluenceTrend@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetInfluenceTrend
_TEXT	ENDS
PUBLIC	?lGetTurnsToInfluential@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTurnsToInfluential
EXTRN	?GetTurnsToInfluential@CvPlayerCulture@@QBEHW4PlayerTypes@@@Z:PROC ; CvPlayerCulture::GetTurnsToInfluential
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTurnsToInfluential@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTurnsToInfluential@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTurnsToInfluential, COMDAT

; 2448 : {

	push	ebx
	push	ebp
	push	esi

; 2449 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetTurnsT
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetTurnsT
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetTurnsT
	xor	bl, bl
$LN5@lGetTurnsT:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetTurnsT
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetTurnsT:

; 2450 : 	PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 2451 : 	const int iResult = pkPlayer->GetCulture()->GetTurnsToInfluential(ePlayer);

	push	eax
	mov	ecx, edi
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetTurnsToInfluential@CvPlayerCulture@@QBEHW4PlayerTypes@@@Z ; CvPlayerCulture::GetTurnsToInfluential

; 2452 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2453 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2454 : }

	ret	0
?lGetTurnsToInfluential@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTurnsToInfluential
_TEXT	ENDS
PUBLIC	?lGetNumCivsInfluentialOn@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumCivsInfluentialOn
EXTRN	?GetNumCivsInfluentialOn@CvPlayerCulture@@QBEHXZ:PROC ; CvPlayerCulture::GetNumCivsInfluentialOn
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumCivsInfluentialOn@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumCivsInfluentialOn@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumCivsInfluentialOn, COMDAT

; 2458 : {

	push	ebx
	push	ebp
	push	esi

; 2459 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumCiv
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumCiv
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumCiv
	xor	bl, bl
$LN5@lGetNumCiv:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumCiv
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumCiv:

; 2460 : 	const int iResult = pkPlayer->GetCulture()->GetNumCivsInfluentialOn();

	mov	ecx, edi
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetNumCivsInfluentialOn@CvPlayerCulture@@QBEHXZ ; CvPlayerCulture::GetNumCivsInfluentialOn

; 2461 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2462 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2463 : }

	ret	0
?lGetNumCivsInfluentialOn@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumCivsInfluentialOn
_TEXT	ENDS
PUBLIC	?lGetNumCivsToBeInfluentialOn@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumCivsToBeInfluentialOn
EXTRN	?GetNumCivsToBeInfluentialOn@CvPlayerCulture@@QBEHXZ:PROC ; CvPlayerCulture::GetNumCivsToBeInfluentialOn
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumCivsToBeInfluentialOn@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumCivsToBeInfluentialOn@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumCivsToBeInfluentialOn, COMDAT

; 2467 : {

	push	ebx
	push	ebp
	push	esi

; 2468 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumCiv@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumCiv@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumCiv@2
	xor	bl, bl
$LN5@lGetNumCiv@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumCiv@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumCiv@2:

; 2469 : 	const int iResult = pkPlayer->GetCulture()->GetNumCivsToBeInfluentialOn();

	mov	ecx, edi
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetNumCivsToBeInfluentialOn@CvPlayerCulture@@QBEHXZ ; CvPlayerCulture::GetNumCivsToBeInfluentialOn

; 2470 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2471 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2472 : }

	ret	0
?lGetNumCivsToBeInfluentialOn@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumCivsToBeInfluentialOn
_TEXT	ENDS
PUBLIC	?lGetInfluenceTradeRouteScienceBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInfluenceTradeRouteScienceBonus
EXTRN	?GetInfluenceTradeRouteScienceBonus@CvPlayerCulture@@QBEHW4PlayerTypes@@@Z:PROC ; CvPlayerCulture::GetInfluenceTradeRouteScienceBonus
; Function compile flags: /Ogtpy
;	COMDAT ?lGetInfluenceTradeRouteScienceBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetInfluenceTradeRouteScienceBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetInfluenceTradeRouteScienceBonus, COMDAT

; 2476 : {

	push	ebx
	push	ebp
	push	esi

; 2477 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetInflue@5
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetInflue@5
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetInflue@5
	xor	bl, bl
$LN5@lGetInflue@5:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetInflue@5
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetInflue@5:

; 2478 : 	PlayerTypes eOtherPlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 2479 : 	const int iResult = pkPlayer->GetCulture()->GetInfluenceTradeRouteScienceBonus(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetInfluenceTradeRouteScienceBonus@CvPlayerCulture@@QBEHW4PlayerTypes@@@Z ; CvPlayerCulture::GetInfluenceTradeRouteScienceBonus

; 2480 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2481 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2482 : }

	ret	0
?lGetInfluenceTradeRouteScienceBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetInfluenceTradeRouteScienceBonus
_TEXT	ENDS
PUBLIC	?lGetInfluenceCityStateSpyRankBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInfluenceCityStateSpyRankBonus
EXTRN	?GetInfluenceCityStateSpyRankBonus@CvPlayerCulture@@QBEHW4PlayerTypes@@@Z:PROC ; CvPlayerCulture::GetInfluenceCityStateSpyRankBonus
; Function compile flags: /Ogtpy
;	COMDAT ?lGetInfluenceCityStateSpyRankBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetInfluenceCityStateSpyRankBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetInfluenceCityStateSpyRankBonus, COMDAT

; 2486 : {

	push	ebx
	push	ebp
	push	esi

; 2487 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetInflue@6
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetInflue@6
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetInflue@6
	xor	bl, bl
$LN5@lGetInflue@6:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetInflue@6
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetInflue@6:

; 2488 : 	PlayerTypes eCityStatePlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 2489 : 	const int iResult = pkPlayer->GetCulture()->GetInfluenceCityStateSpyRankBonus(eCityStatePlayer);

	push	eax
	mov	ecx, edi
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetInfluenceCityStateSpyRankBonus@CvPlayerCulture@@QBEHW4PlayerTypes@@@Z ; CvPlayerCulture::GetInfluenceCityStateSpyRankBonus

; 2490 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2491 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2492 : }

	ret	0
?lGetInfluenceCityStateSpyRankBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetInfluenceCityStateSpyRankBonus
_TEXT	ENDS
PUBLIC	?lGetInfluenceMajorCivSpyRankBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInfluenceMajorCivSpyRankBonus
EXTRN	?GetInfluenceMajorCivSpyRankBonus@CvPlayerCulture@@QBEHW4PlayerTypes@@@Z:PROC ; CvPlayerCulture::GetInfluenceMajorCivSpyRankBonus
; Function compile flags: /Ogtpy
;	COMDAT ?lGetInfluenceMajorCivSpyRankBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetInfluenceMajorCivSpyRankBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetInfluenceMajorCivSpyRankBonus, COMDAT

; 2496 : {

	push	ebx
	push	ebp
	push	esi

; 2497 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetInflue@7
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetInflue@7
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetInflue@7
	xor	bl, bl
$LN5@lGetInflue@7:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetInflue@7
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetInflue@7:

; 2498 : 	PlayerTypes eOtherPlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 2499 : 	const int iResult = pkPlayer->GetCulture()->GetInfluenceMajorCivSpyRankBonus(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetInfluenceMajorCivSpyRankBonus@CvPlayerCulture@@QBEHW4PlayerTypes@@@Z ; CvPlayerCulture::GetInfluenceMajorCivSpyRankBonus

; 2500 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2501 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2502 : }

	ret	0
?lGetInfluenceMajorCivSpyRankBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetInfluenceMajorCivSpyRankBonus
_TEXT	ENDS
PUBLIC	?lGetInfluenceSpyRankTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInfluenceSpyRankTooltip
EXTRN	?GetInfluenceSpyRankTooltip@CvPlayerCulture@@QAE?AVCvString@@V2@0W4PlayerTypes@@@Z:PROC ; CvPlayerCulture::GetInfluenceSpyRankTooltip
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__ehfuncinfo$?lGetInfluenceSpyRankTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?lGetInfluenceSpyRankTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?lGetInfluenceSpyRankTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetInfluenceSpyRankTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetInfluenceSpyRankTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?lGetInfluenceSpyRankTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?lGetInfluenceSpyRankTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?lGetInfluenceSpyRankTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z$4
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetInfluenceSpyRankTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T250832 = -104						; size = 4
$T250833 = -100						; size = 4
_szResult$ = -96					; size = 28
_szRank$ = -68						; size = 28
_szSpyName$ = -40					; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetInfluenceSpyRankTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetInfluenceSpyRankTooltip, COMDAT

; 2506 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetInfluenceSpyRankTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 92					; 0000005cH
	push	ebx
	push	ebp
	push	esi

; 2507 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+112]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN10@lGetInflue@8
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN10@lGetInflue@8
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN10@lGetInflue@8
	xor	bl, bl
$LN10@lGetInflue@8:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN17@lGetInflue@8
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN17@lGetInflue@8:

; 2508 : 	CvString szSpyName = lua_tostring(L, 2);

	push	0
	push	2
	push	esi
	call	_lua_tolstring
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN22@lGetInflue@8
	mov	eax, OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN22@lGetInflue@8:
	push	eax
	lea	ecx, DWORD PTR _szSpyName$[esp+124]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z

; 2509 : 	CvString szRank = lua_tostring(L, 3);

	push	0
	push	3
	push	esi
	mov	DWORD PTR __$EHRec$[esp+140], 0
	call	_lua_tolstring
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN27@lGetInflue@8
	mov	eax, OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN27@lGetInflue@8:
	push	eax
	lea	ecx, DWORD PTR _szRank$[esp+124]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z

; 2510 : 	PlayerTypes eOtherPlayer = (PlayerTypes)lua_tointeger(L, 4);

	push	4
	push	esi
	mov	BYTE PTR __$EHRec$[esp+136], 1
	call	_lua_tointeger
	add	esp, 8

; 2511 : 	const CvString szResult = pkPlayer->GetCulture()->GetInfluenceSpyRankTooltip(szSpyName, szRank, eOtherPlayer);

	push	eax
	sub	esp, 28					; 0000001cH
	lea	eax, DWORD PTR _szRank$[esp+152]
	mov	DWORD PTR $T250832[esp+152], esp
	mov	ecx, esp
	push	eax
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	sub	esp, 28					; 0000001cH
	lea	edx, DWORD PTR _szSpyName$[esp+180]
	mov	DWORD PTR $T250833[esp+180], esp
	mov	ecx, esp
	push	edx
	mov	BYTE PTR __$EHRec$[esp+192], 2
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	lea	eax, DWORD PTR _szResult$[esp+180]
	push	eax
	mov	ecx, edi
	mov	BYTE PTR __$EHRec$[esp+192], 3
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	mov	BYTE PTR __$EHRec$[esp+192], 1
	call	?GetInfluenceSpyRankTooltip@CvPlayerCulture@@QAE?AVCvString@@V2@0W4PlayerTypes@@@Z ; CvPlayerCulture::GetInfluenceSpyRankTooltip

; 2512 : 	lua_pushstring(L, szResult);

	lea	ecx, DWORD PTR _szResult$[esp+120]
	mov	BYTE PTR __$EHRec$[esp+128], 4
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8

; 2513 : 	return 1;

	lea	ecx, DWORD PTR _szResult$[esp+120]
	mov	BYTE PTR __$EHRec$[esp+128], 1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR _szRank$[esp+120]
	mov	BYTE PTR __$EHRec$[esp+128], 0
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR _szSpyName$[esp+120]
	mov	DWORD PTR __$EHRec$[esp+128], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2514 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+120]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	add	esp, 104				; 00000068H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetInfluenceSpyRankTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _szSpyName$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetInfluenceSpyRankTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR _szRank$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetInfluenceSpyRankTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z$2:
	mov	ecx, DWORD PTR $T250832[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetInfluenceSpyRankTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z$3:
	mov	ecx, DWORD PTR $T250833[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetInfluenceSpyRankTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z$4:
	lea	ecx, DWORD PTR _szResult$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetInfluenceSpyRankTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetInfluenceSpyRankTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetInfluenceSpyRankTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetInfluenceSpyRankTooltip
PUBLIC	?lGetTourism@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetTourism
EXTRN	?GetTourism@CvPlayerCulture@@QAEHXZ:PROC	; CvPlayerCulture::GetTourism
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTourism@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTourism@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetTourism, COMDAT

; 2518 : {

	push	ebx
	push	ebp
	push	esi

; 2519 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetTouris
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetTouris
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetTouris
	xor	bl, bl
$LN5@lGetTouris:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetTouris
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetTouris:

; 2520 : 	const int iResult = pkPlayer->GetCulture()->GetTourism();

	mov	ecx, edi
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetTourism@CvPlayerCulture@@QAEHXZ	; CvPlayerCulture::GetTourism

; 2521 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2522 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2523 : }

	ret	0
?lGetTourism@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetTourism
_TEXT	ENDS
PUBLIC	?lGetTourismModifierWith@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTourismModifierWith
EXTRN	?GetTourismModifierWith@CvPlayerCulture@@QBEHW4PlayerTypes@@@Z:PROC ; CvPlayerCulture::GetTourismModifierWith
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTourismModifierWith@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTourismModifierWith@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTourismModifierWith, COMDAT

; 2527 : {

	push	ebx
	push	ebp
	push	esi

; 2528 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetTouris@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetTouris@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetTouris@2
	xor	bl, bl
$LN5@lGetTouris@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetTouris@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetTouris@2:

; 2529 : 	PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 2530 : 	const int iResult = pkPlayer->GetCulture()->GetTourismModifierWith(ePlayer);

	push	eax
	mov	ecx, edi
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetTourismModifierWith@CvPlayerCulture@@QBEHW4PlayerTypes@@@Z ; CvPlayerCulture::GetTourismModifierWith

; 2531 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2532 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2533 : }

	ret	0
?lGetTourismModifierWith@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTourismModifierWith
_TEXT	ENDS
PUBLIC	?lGetTourismModifierWithTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTourismModifierWithTooltip
EXTRN	?GetTourismModifierWithTooltip@CvPlayerCulture@@QBE?AVCvString@@W4PlayerTypes@@@Z:PROC ; CvPlayerCulture::GetTourismModifierWithTooltip
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetTourismModifierWithTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetTourismModifierWithTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetTourismModifierWithTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetTourismModifierWithTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetTourismModifierWithTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T250968 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetTourismModifierWithTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTourismModifierWithTooltip, COMDAT

; 2537 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetTourismModifierWithTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 28					; 0000001cH
	push	ebx
	push	ebp
	push	esi

; 2538 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+48]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetTouris@3
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetTouris@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetTouris@3
	xor	bl, bl
$LN6@lGetTouris@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lGetTouris@3
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lGetTouris@3:

; 2539 : 	PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 2540 : 	lua_pushstring(L, pkPlayer->GetCulture()->GetTourismModifierWithTooltip(ePlayer));

	push	eax
	lea	eax, DWORD PTR $T250968[esp+60]
	push	eax
	mov	ecx, edi
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetTourismModifierWithTooltip@CvPlayerCulture@@QBE?AVCvString@@W4PlayerTypes@@@Z ; CvPlayerCulture::GetTourismModifierWithTooltip
	mov	ecx, eax
	mov	DWORD PTR __$EHRec$[esp+64], 0
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8
	lea	ecx, DWORD PTR $T250968[esp+56]
	mov	DWORD PTR __$EHRec$[esp+64], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2541 : 	return 1;
; 2542 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+56]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetTourismModifierWithTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR $T250968[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetTourismModifierWithTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetTourismModifierWithTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetTourismModifierWithTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTourismModifierWithTooltip
PUBLIC	?lGetPublicOpinionType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPublicOpinionType
EXTRN	?GetPublicOpinionType@CvPlayerCulture@@QBE?AW4PublicOpinionTypes@@XZ:PROC ; CvPlayerCulture::GetPublicOpinionType
; Function compile flags: /Ogtpy
;	COMDAT ?lGetPublicOpinionType@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetPublicOpinionType@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPublicOpinionType, COMDAT

; 2546 : {

	push	ebx
	push	ebp
	push	esi

; 2547 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetPublic
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetPublic
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetPublic
	xor	bl, bl
$LN5@lGetPublic:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetPublic
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetPublic:

; 2548 : 	lua_pushinteger(L, pkPlayer->GetCulture()->GetPublicOpinionType());

	mov	ecx, edi
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetPublicOpinionType@CvPlayerCulture@@QBE?AW4PublicOpinionTypes@@XZ ; CvPlayerCulture::GetPublicOpinionType
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2549 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2550 : }

	ret	0
?lGetPublicOpinionType@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPublicOpinionType
_TEXT	ENDS
PUBLIC	?lGetPublicOpinionPreferredIdeology@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPublicOpinionPreferredIdeology
EXTRN	?GetPublicOpinionPreferredIdeology@CvPlayerCulture@@QBE?AW4PolicyBranchTypes@@XZ:PROC ; CvPlayerCulture::GetPublicOpinionPreferredIdeology
; Function compile flags: /Ogtpy
;	COMDAT ?lGetPublicOpinionPreferredIdeology@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetPublicOpinionPreferredIdeology@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPublicOpinionPreferredIdeology, COMDAT

; 2554 : {

	push	ebx
	push	ebp
	push	esi

; 2555 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetPublic@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetPublic@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetPublic@2
	xor	bl, bl
$LN5@lGetPublic@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetPublic@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetPublic@2:

; 2556 : 	lua_pushinteger(L, pkPlayer->GetCulture()->GetPublicOpinionPreferredIdeology());

	mov	ecx, edi
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetPublicOpinionPreferredIdeology@CvPlayerCulture@@QBE?AW4PolicyBranchTypes@@XZ ; CvPlayerCulture::GetPublicOpinionPreferredIdeology
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2557 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2558 : }

	ret	0
?lGetPublicOpinionPreferredIdeology@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPublicOpinionPreferredIdeology
_TEXT	ENDS
PUBLIC	?lGetPublicOpinionTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPublicOpinionTooltip
EXTRN	?GetPublicOpinionTooltip@CvPlayerCulture@@QBE?AVCvString@@XZ:PROC ; CvPlayerCulture::GetPublicOpinionTooltip
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetPublicOpinionTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetPublicOpinionTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetPublicOpinionTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetPublicOpinionTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetPublicOpinionTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T251062 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetPublicOpinionTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPublicOpinionTooltip, COMDAT

; 2562 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetPublicOpinionTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 28					; 0000001cH
	push	ebx
	push	ebp
	push	esi

; 2563 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+48]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetPublic@3
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetPublic@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetPublic@3
	xor	bl, bl
$LN6@lGetPublic@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lGetPublic@3
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lGetPublic@3:

; 2564 : 	lua_pushstring(L, pkPlayer->GetCulture()->GetPublicOpinionTooltip());

	lea	eax, DWORD PTR $T251062[esp+56]
	push	eax
	mov	ecx, edi
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetPublicOpinionTooltip@CvPlayerCulture@@QBE?AVCvString@@XZ ; CvPlayerCulture::GetPublicOpinionTooltip
	mov	ecx, eax
	mov	DWORD PTR __$EHRec$[esp+64], 0
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8
	lea	ecx, DWORD PTR $T251062[esp+56]
	mov	DWORD PTR __$EHRec$[esp+64], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2565 : 	return 1;
; 2566 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+56]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetPublicOpinionTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR $T251062[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetPublicOpinionTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetPublicOpinionTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetPublicOpinionTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPublicOpinionTooltip
PUBLIC	?lGetPublicOpinionUnhappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPublicOpinionUnhappiness
EXTRN	?GetPublicOpinionUnhappiness@CvPlayerCulture@@QBEHXZ:PROC ; CvPlayerCulture::GetPublicOpinionUnhappiness
; Function compile flags: /Ogtpy
;	COMDAT ?lGetPublicOpinionUnhappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetPublicOpinionUnhappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPublicOpinionUnhappiness, COMDAT

; 2570 : {

	push	ebx
	push	ebp
	push	esi

; 2571 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetPublic@4
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetPublic@4
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetPublic@4
	xor	bl, bl
$LN5@lGetPublic@4:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetPublic@4
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetPublic@4:

; 2572 : 	lua_pushinteger(L, pkPlayer->GetCulture()->GetPublicOpinionUnhappiness());

	mov	ecx, edi
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetPublicOpinionUnhappiness@CvPlayerCulture@@QBEHXZ ; CvPlayerCulture::GetPublicOpinionUnhappiness
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2573 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2574 : }

	ret	0
?lGetPublicOpinionUnhappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPublicOpinionUnhappiness
_TEXT	ENDS
PUBLIC	?lGetPublicOpinionUnhappinessTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPublicOpinionUnhappinessTooltip
EXTRN	?GetPublicOpinionUnhappinessTooltip@CvPlayerCulture@@QBE?AVCvString@@XZ:PROC ; CvPlayerCulture::GetPublicOpinionUnhappinessTooltip
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetPublicOpinionUnhappinessTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetPublicOpinionUnhappinessTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetPublicOpinionUnhappinessTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetPublicOpinionUnhappinessTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetPublicOpinionUnhappinessTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T251130 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetPublicOpinionUnhappinessTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPublicOpinionUnhappinessTooltip, COMDAT

; 2578 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetPublicOpinionUnhappinessTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 28					; 0000001cH
	push	ebx
	push	ebp
	push	esi

; 2579 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+48]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetPublic@5
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetPublic@5
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetPublic@5
	xor	bl, bl
$LN6@lGetPublic@5:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lGetPublic@5
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lGetPublic@5:

; 2580 : 	lua_pushstring(L, pkPlayer->GetCulture()->GetPublicOpinionUnhappinessTooltip());

	lea	eax, DWORD PTR $T251130[esp+56]
	push	eax
	mov	ecx, edi
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetPublicOpinionUnhappinessTooltip@CvPlayerCulture@@QBE?AVCvString@@XZ ; CvPlayerCulture::GetPublicOpinionUnhappinessTooltip
	mov	ecx, eax
	mov	DWORD PTR __$EHRec$[esp+64], 0
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8
	lea	ecx, DWORD PTR $T251130[esp+56]
	mov	DWORD PTR __$EHRec$[esp+64], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2581 : 	return 1;
; 2582 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+56]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetPublicOpinionUnhappinessTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR $T251130[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetPublicOpinionUnhappinessTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetPublicOpinionUnhappinessTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetPublicOpinionUnhappinessTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPublicOpinionUnhappinessTooltip
PUBLIC	?lHasAvailableGreatWorkSlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasAvailableGreatWorkSlot
EXTRN	?HasAvailableGreatWorkSlot@CvPlayerCulture@@QAE_NW4GreatWorkSlotType@@@Z:PROC ; CvPlayerCulture::HasAvailableGreatWorkSlot
; Function compile flags: /Ogtpy
;	COMDAT ?lHasAvailableGreatWorkSlot@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lHasAvailableGreatWorkSlot@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lHasAvailableGreatWorkSlot, COMDAT

; 2586 : {

	push	ebx
	push	ebp
	push	esi

; 2587 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lHasAvaila
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lHasAvaila
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lHasAvaila
	xor	bl, bl
$LN5@lHasAvaila:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lHasAvaila
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lHasAvaila:

; 2588 : 	GreatWorkSlotType eGreatWorkSlot = static_cast<GreatWorkSlotType>(lua_tointeger(L, 2));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 2589 : 	const bool bResult = pkPlayer->GetCulture()->HasAvailableGreatWorkSlot(eGreatWorkSlot);

	push	eax
	mov	ecx, edi
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?HasAvailableGreatWorkSlot@CvPlayerCulture@@QAE_NW4GreatWorkSlotType@@@Z ; CvPlayerCulture::HasAvailableGreatWorkSlot

; 2590 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2591 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2592 : }

	ret	0
?lHasAvailableGreatWorkSlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lHasAvailableGreatWorkSlot
_TEXT	ENDS
PUBLIC	?lGetCityOfClosestGreatWorkSlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCityOfClosestGreatWorkSlot
EXTRN	?GetClosestAvailableGreatWorkSlot@CvPlayerCulture@@QBEPAVCvCity@@HHW4GreatWorkSlotType@@PAW4BuildingClassTypes@@PAH@Z:PROC ; CvPlayerCulture::GetClosestAvailableGreatWorkSlot
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCityOfClosestGreatWorkSlot@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iSlot$ = -8						; size = 4
_eBuildingClass$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetCityOfClosestGreatWorkSlot@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCityOfClosestGreatWorkSlot, COMDAT

; 2596 : {

	sub	esp, 8
	push	ebx
	push	ebp
	push	esi

; 2597 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+16]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@lGetCityOf
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@lGetCityOf
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@lGetCityOf
	xor	bl, bl
$LN7@lGetCityOf:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@lGetCityOf
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@lGetCityOf:

; 2598 : 	int iX = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 2599 : 	int iY = lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger

; 2600 : 	GreatWorkSlotType eGreatWorkSlot = static_cast<GreatWorkSlotType>(lua_tointeger(L, 4));

	push	4
	push	esi
	mov	ebp, eax
	call	_lua_tointeger
	add	esp, 24					; 00000018H

; 2601 : 	BuildingClassTypes eBuildingClass;
; 2602 : #ifdef AUI_WARNING_FIXES
; 2603 : 	uint iSlot = MAX_UNSIGNED_INT; // Passed by reference below
; 2604 : #else
; 2605 : 	int iSlot;
; 2606 : #endif
; 2607 : 	CvCity* pkCity = pkPlayer->GetCulture()->GetClosestAvailableGreatWorkSlot(iX, iY, eGreatWorkSlot, &eBuildingClass, &iSlot);

	lea	ecx, DWORD PTR _iSlot$[esp+24]
	push	ecx
	lea	edx, DWORD PTR _eBuildingClass$[esp+28]
	push	edx
	push	eax
	push	ebp
	push	ebx
	mov	ecx, edi
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetClosestAvailableGreatWorkSlot@CvPlayerCulture@@QBEPAVCvCity@@HHW4GreatWorkSlotType@@PAW4BuildingClassTypes@@PAH@Z ; CvPlayerCulture::GetClosestAvailableGreatWorkSlot

; 2608 : 	if (pkCity)

	test	eax, eax
	je	SHORT $LN2@lGetCityOf

; 2609 : 	{
; 2610 : 		CvLuaCity::Push(L, pkCity);

	push	eax
	push	esi
	call	?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2611 : 		return 1;

	mov	eax, 1
	pop	ebx

; 2616 : 	}
; 2617 : }

	add	esp, 8
	ret	0
$LN2@lGetCityOf:
	pop	edi
	pop	esi
	pop	ebp

; 2612 : 	}
; 2613 : 	else
; 2614 : 	{
; 2615 : 		return 0;

	xor	eax, eax
	pop	ebx

; 2616 : 	}
; 2617 : }

	add	esp, 8
	ret	0
?lGetCityOfClosestGreatWorkSlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCityOfClosestGreatWorkSlot
_TEXT	ENDS
PUBLIC	?lGetBuildingOfClosestGreatWorkSlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBuildingOfClosestGreatWorkSlot
EXTRN	?getCivilizationBuildings@CvCivilizationInfo@@QBEHH@Z:PROC ; CvCivilizationInfo::getCivilizationBuildings
EXTRN	?getCivilizationInfo@CvGlobals@@QAEPAVCvCivilizationInfo@@W4CivilizationTypes@@@Z:PROC ; CvGlobals::getCivilizationInfo
EXTRN	?getCivilizationType@CvPlayer@@QBE?AW4CivilizationTypes@@XZ:PROC ; CvPlayer::getCivilizationType
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBuildingOfClosestGreatWorkSlot@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eBuildingClass$ = -8					; size = 4
_iSlot$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetBuildingOfClosestGreatWorkSlot@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetBuildingOfClosestGreatWorkSlot, COMDAT

; 2621 : {

	sub	esp, 8
	push	ebx
	push	ebp
	push	esi

; 2622 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+16]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@lGetBuildi@3
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@lGetBuildi@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@lGetBuildi@3
	xor	bl, bl
$LN7@lGetBuildi@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@lGetBuildi@3
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@lGetBuildi@3:

; 2623 : 	int iX = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 2624 : 	int iY = lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger

; 2625 : 	GreatWorkSlotType eGreatWorkSlot = static_cast<GreatWorkSlotType>(lua_tointeger(L, 4));

	push	4
	push	esi
	mov	ebp, eax
	call	_lua_tointeger
	add	esp, 24					; 00000018H

; 2626 : 	BuildingClassTypes eBuildingClass;
; 2627 : #ifdef AUI_WARNING_FIXES
; 2628 : 	uint iSlot = MAX_UNSIGNED_INT; // Passed by reference below
; 2629 : #else
; 2630 : 	int iSlot;
; 2631 : #endif
; 2632 : 	CvCity* pkCity = pkPlayer->GetCulture()->GetClosestAvailableGreatWorkSlot(iX, iY, eGreatWorkSlot, &eBuildingClass, &iSlot);

	lea	ecx, DWORD PTR _iSlot$[esp+24]
	push	ecx
	lea	edx, DWORD PTR _eBuildingClass$[esp+28]
	push	edx
	push	eax
	push	ebp
	push	ebx
	mov	ecx, edi
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetClosestAvailableGreatWorkSlot@CvPlayerCulture@@QBEPAVCvCity@@HHW4GreatWorkSlotType@@PAW4BuildingClassTypes@@PAH@Z ; CvPlayerCulture::GetClosestAvailableGreatWorkSlot

; 2633 : 	CvCivilizationInfo *pkCivInfo = GC.getCivilizationInfo(pkPlayer->getCivilizationType());

	mov	ecx, edi
	mov	ebx, eax
	call	?getCivilizationType@CvPlayer@@QBE?AW4CivilizationTypes@@XZ ; CvPlayer::getCivilizationType
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getCivilizationInfo@CvGlobals@@QAEPAVCvCivilizationInfo@@W4CivilizationTypes@@@Z ; CvGlobals::getCivilizationInfo

; 2634 : 	if (pkCity && pkCivInfo)

	test	ebx, ebx
	je	SHORT $LN2@lGetBuildi@3
	test	eax, eax
	je	SHORT $LN2@lGetBuildi@3

; 2635 : 	{
; 2636 : 		int iBuilding = pkCivInfo->getCivilizationBuildings(eBuildingClass);

	mov	ecx, DWORD PTR _eBuildingClass$[esp+24]
	push	ecx
	mov	ecx, eax
	call	?getCivilizationBuildings@CvCivilizationInfo@@QBEHH@Z ; CvCivilizationInfo::getCivilizationBuildings

; 2637 : 		lua_pushinteger(L, iBuilding);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2638 : 		return 1;

	mov	eax, 1
	pop	ebx

; 2643 : 	}
; 2644 : }

	add	esp, 8
	ret	0
$LN2@lGetBuildi@3:
	pop	edi
	pop	esi
	pop	ebp

; 2639 : 	}
; 2640 : 	else
; 2641 : 	{
; 2642 : 		return 0;

	xor	eax, eax
	pop	ebx

; 2643 : 	}
; 2644 : }

	add	esp, 8
	ret	0
?lGetBuildingOfClosestGreatWorkSlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetBuildingOfClosestGreatWorkSlot
_TEXT	ENDS
PUBLIC	?lGetNextDigCompletePlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNextDigCompletePlot
EXTRN	?GetNextDigCompletePlot@CvPlayerCulture@@QBEPAVCvPlot@@XZ:PROC ; CvPlayerCulture::GetNextDigCompletePlot
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNextDigCompletePlot@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNextDigCompletePlot@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNextDigCompletePlot, COMDAT

; 2648 : {

	push	ebx
	push	ebp
	push	esi

; 2649 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNextDi
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNextDi
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNextDi
	xor	bl, bl
$LN5@lGetNextDi:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNextDi
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNextDi:

; 2650 : 	CvPlot* pkPlot = pkPlayer->GetCulture()->GetNextDigCompletePlot();

	mov	ecx, edi
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetNextDigCompletePlot@CvPlayerCulture@@QBEPAVCvPlot@@XZ ; CvPlayerCulture::GetNextDigCompletePlot

; 2651 : 	CvLuaPlot::Push(L, pkPlot);

	push	eax
	push	esi
	call	?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2652 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2653 : }

	ret	0
?lGetNextDigCompletePlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNextDigCompletePlot
_TEXT	ENDS
PUBLIC	?lGetWrittenArtifactCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetWrittenArtifactCulture
EXTRN	?GetWrittenArtifactCulture@CvPlayerCulture@@QBEHXZ:PROC ; CvPlayerCulture::GetWrittenArtifactCulture
; Function compile flags: /Ogtpy
;	COMDAT ?lGetWrittenArtifactCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetWrittenArtifactCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetWrittenArtifactCulture, COMDAT

; 2656 : {

	push	ebx
	push	ebp
	push	esi

; 2657 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetWritte
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetWritte
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetWritte
	xor	bl, bl
$LN5@lGetWritte:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetWritte
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetWritte:

; 2658 : 	int iCulture = pkPlayer->GetCulture()->GetWrittenArtifactCulture();

	mov	ecx, edi
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetWrittenArtifactCulture@CvPlayerCulture@@QBEHXZ ; CvPlayerCulture::GetWrittenArtifactCulture

; 2659 : 	lua_pushinteger(L, iCulture);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2660 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2661 : }

	ret	0
?lGetWrittenArtifactCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetWrittenArtifactCulture
_TEXT	ENDS
PUBLIC	?lGetNumGreatWorks@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumGreatWorks
EXTRN	?GetNumGreatWorks@CvPlayerCulture@@QBEHXZ:PROC	; CvPlayerCulture::GetNumGreatWorks
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumGreatWorks@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumGreatWorks@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumGreatWorks, COMDAT

; 2664 : {

	push	ebx
	push	ebp
	push	esi

; 2665 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumGre
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumGre
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumGre
	xor	bl, bl
$LN5@lGetNumGre:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumGre
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumGre:

; 2666 : 	int iNumWorks = pkPlayer->GetCulture()->GetNumGreatWorks();

	mov	ecx, edi
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetNumGreatWorks@CvPlayerCulture@@QBEHXZ ; CvPlayerCulture::GetNumGreatWorks

; 2667 : 	lua_pushinteger(L, iNumWorks);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2668 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2669 : }

	ret	0
?lGetNumGreatWorks@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumGreatWorks
_TEXT	ENDS
PUBLIC	?lGetNumGreatWorkSlots@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumGreatWorkSlots
EXTRN	?GetNumGreatWorkSlots@CvPlayerCulture@@QBEHXZ:PROC ; CvPlayerCulture::GetNumGreatWorkSlots
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumGreatWorkSlots@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumGreatWorkSlots@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumGreatWorkSlots, COMDAT

; 2672 : {

	push	ebx
	push	ebp
	push	esi

; 2673 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumGre@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumGre@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumGre@2
	xor	bl, bl
$LN5@lGetNumGre@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumGre@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumGre@2:

; 2674 : 	int iNumWorks = pkPlayer->GetCulture()->GetNumGreatWorkSlots();

	mov	ecx, edi
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetNumGreatWorkSlots@CvPlayerCulture@@QBEHXZ ; CvPlayerCulture::GetNumGreatWorkSlots

; 2675 : 	lua_pushinteger(L, iNumWorks);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2676 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2677 : }

	ret	0
?lGetNumGreatWorkSlots@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumGreatWorkSlots
_TEXT	ENDS
PUBLIC	?lGetFaith@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetFaith
EXTRN	?GetFaith@CvPlayer@@QBEHXZ:PROC			; CvPlayer::GetFaith
; Function compile flags: /Ogtpy
;	COMDAT ?lGetFaith@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFaith@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetFaith, COMDAT

; 2682 : 	return BasicLuaMethod(L, &CvPlayerAI::GetFaith);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetFaith@CvPlayer@@QBEHXZ	; CvPlayer::GetFaith
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2683 : }

	ret	0
?lGetFaith@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetFaith
_TEXT	ENDS
PUBLIC	?lSetFaith@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lSetFaith
EXTRN	?SetFaith@CvPlayer@@QAEXH@Z:PROC		; CvPlayer::SetFaith
; Function compile flags: /Ogtpy
;	COMDAT ?lSetFaith@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetFaith@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lSetFaith, COMDAT

; 2688 : 	return BasicLuaMethod(L, &CvPlayerAI::SetFaith);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?SetFaith@CvPlayer@@QAEXH@Z	; CvPlayer::SetFaith
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2689 : }

	ret	0
?lSetFaith@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lSetFaith
_TEXT	ENDS
PUBLIC	?lChangeFaith@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lChangeFaith
EXTRN	?ChangeFaith@CvPlayer@@QAEXH@Z:PROC		; CvPlayer::ChangeFaith
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeFaith@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeFaith@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lChangeFaith, COMDAT

; 2694 : 	return BasicLuaMethod(L, &CvPlayerAI::ChangeFaith);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?ChangeFaith@CvPlayer@@QAEXH@Z	; CvPlayer::ChangeFaith
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2695 : }

	ret	0
?lChangeFaith@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lChangeFaith
_TEXT	ENDS
PUBLIC	?lGetTotalFaithPerTurn@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTotalFaithPerTurn
EXTRN	?GetTotalFaithPerTurn@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetTotalFaithPerTurn
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTotalFaithPerTurn@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTotalFaithPerTurn@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTotalFaithPerTurn, COMDAT

; 2700 : 	return BasicLuaMethod(L, &CvPlayerAI::GetTotalFaithPerTurn);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetTotalFaithPerTurn@CvPlayer@@QBEHXZ ; CvPlayer::GetTotalFaithPerTurn
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2701 : }

	ret	0
?lGetTotalFaithPerTurn@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTotalFaithPerTurn
_TEXT	ENDS
PUBLIC	?lGetFaithPerTurnFromCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFaithPerTurnFromCities
EXTRN	?GetFaithPerTurnFromCities@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetFaithPerTurnFromCities
; Function compile flags: /Ogtpy
;	COMDAT ?lGetFaithPerTurnFromCities@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFaithPerTurnFromCities@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetFaithPerTurnFromCities, COMDAT

; 2706 : 	return BasicLuaMethod(L, &CvPlayerAI::GetFaithPerTurnFromCities);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetFaithPerTurnFromCities@CvPlayer@@QBEHXZ ; CvPlayer::GetFaithPerTurnFromCities
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2707 : }

	ret	0
?lGetFaithPerTurnFromCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetFaithPerTurnFromCities
_TEXT	ENDS
PUBLIC	?lGetFaithPerTurnFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFaithPerTurnFromMinorCivs
EXTRN	?GetFaithPerTurnFromMinorCivs@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetFaithPerTurnFromMinorCivs
; Function compile flags: /Ogtpy
;	COMDAT ?lGetFaithPerTurnFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFaithPerTurnFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetFaithPerTurnFromMinorCivs, COMDAT

; 2712 : 	return BasicLuaMethod(L, &CvPlayerAI::GetFaithPerTurnFromMinorCivs);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetFaithPerTurnFromMinorCivs@CvPlayer@@QBEHXZ ; CvPlayer::GetFaithPerTurnFromMinorCivs
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2713 : }

	ret	0
?lGetFaithPerTurnFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetFaithPerTurnFromMinorCivs
_TEXT	ENDS
PUBLIC	?lGetFaithPerTurnFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFaithPerTurnFromReligion
EXTRN	?GetFaithPerTurnFromReligion@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetFaithPerTurnFromReligion
; Function compile flags: /Ogtpy
;	COMDAT ?lGetFaithPerTurnFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFaithPerTurnFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetFaithPerTurnFromReligion, COMDAT

; 2718 : 	return BasicLuaMethod(L, &CvPlayerAI::GetFaithPerTurnFromReligion);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetFaithPerTurnFromReligion@CvPlayer@@QBEHXZ ; CvPlayer::GetFaithPerTurnFromReligion
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2719 : }

	ret	0
?lGetFaithPerTurnFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetFaithPerTurnFromReligion
_TEXT	ENDS
PUBLIC	?lCanFaithGiftMinors@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanFaithGiftMinors
EXTRN	?CanFaithGiftMinors@CvPlayer@@QAE_NXZ:PROC	; CvPlayer::CanFaithGiftMinors
; Function compile flags: /Ogtpy
;	COMDAT ?lCanFaithGiftMinors@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanFaithGiftMinors@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lCanFaithGiftMinors, COMDAT

; 2724 : {

	push	ebx
	push	ebp
	push	esi

; 2725 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCanFaithG
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCanFaithG
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCanFaithG
	xor	bl, bl
$LN5@lCanFaithG:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lCanFaithG
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lCanFaithG:

; 2726 : 	const bool bResult = pkPlayer->CanFaithGiftMinors();

	mov	ecx, edi
	call	?CanFaithGiftMinors@CvPlayer@@QAE_NXZ	; CvPlayer::CanFaithGiftMinors

; 2727 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2728 : 
; 2729 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2730 : }

	ret	0
?lCanFaithGiftMinors@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lCanFaithGiftMinors
_TEXT	ENDS
PUBLIC	?lHasCreatedPantheon@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasCreatedPantheon
EXTRN	?HasCreatedPantheon@CvPlayerReligions@@QBE_NXZ:PROC ; CvPlayerReligions::HasCreatedPantheon
EXTRN	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ:PROC ; CvPlayer::GetReligions
; Function compile flags: /Ogtpy
;	COMDAT ?lHasCreatedPantheon@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lHasCreatedPantheon@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lHasCreatedPantheon, COMDAT

; 2735 : {

	push	ebx
	push	ebp
	push	esi

; 2736 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lHasCreate
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lHasCreate
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lHasCreate
	xor	bl, bl
$LN5@lHasCreate:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lHasCreate
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lHasCreate:

; 2737 : 
; 2738 : 	const bool bResult = pkPlayer->GetReligions()->HasCreatedPantheon();

	mov	ecx, edi
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	ecx, eax
	call	?HasCreatedPantheon@CvPlayerReligions@@QBE_NXZ ; CvPlayerReligions::HasCreatedPantheon

; 2739 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2740 : 
; 2741 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2742 : }

	ret	0
?lHasCreatedPantheon@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lHasCreatedPantheon
_TEXT	ENDS
PUBLIC	?lGetBeliefInPantheon@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBeliefInPantheon
EXTRN	?GetBeliefInPantheon@CvGameReligions@@QBE?AW4BeliefTypes@@W4PlayerTypes@@@Z:PROC ; CvGameReligions::GetBeliefInPantheon
EXTRN	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ:PROC ; CvGame::GetGameReligions
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBeliefInPantheon@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBeliefInPantheon@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetBeliefInPantheon, COMDAT

; 2746 : {

	push	ebx
	push	ebp
	push	esi

; 2747 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetBelief
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetBelief
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetBelief
	xor	bl, bl
$LN5@lGetBelief:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetBelief
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetBelief:

; 2748 : 
; 2749 : 	const BeliefTypes eBelief = GC.getGame().GetGameReligions()->GetBeliefInPantheon(pkPlayer->GetID());

	mov	edi, DWORD PTR [edi+44]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetBeliefInPantheon@CvGameReligions@@QBE?AW4BeliefTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetBeliefInPantheon

; 2750 : 	lua_pushinteger(L, eBelief);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2751 : 
; 2752 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2753 : }

	ret	0
?lGetBeliefInPantheon@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetBeliefInPantheon
_TEXT	ENDS
PUBLIC	?lCanCreatePantheon@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanCreatePantheon
EXTRN	?CanCreatePantheon@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@_N@Z:PROC ; CvGameReligions::CanCreatePantheon
; Function compile flags: /Ogtpy
;	COMDAT ?lCanCreatePantheon@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bCheckFaith$ = -4					; size = 1
_L$ = 8							; size = 4
?lCanCreatePantheon@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lCanCreatePantheon, COMDAT

; 2757 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 2758 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCanCreate
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCanCreate
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCanCreate
	xor	bl, bl
$LN5@lCanCreate:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lCanCreate
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lCanCreate:

; 2759 : 	bool bCheckFaith = lua_toboolean(L, 2);

	push	2
	push	esi
	call	_lua_toboolean

; 2760 : 
; 2761 : 	const bool bResult = GC.getGame().GetGameReligions()->CanCreatePantheon(pkPlayer->GetID(), bCheckFaith) == CvGameReligions::FOUNDING_OK;

	mov	edi, DWORD PTR [edi+44]
	add	esp, 8
	test	eax, eax
	setne	al
	mov	BYTE PTR _bCheckFaith$[esp+20], al
	mov	ecx, DWORD PTR _bCheckFaith$[esp+20]
	push	ecx
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?CanCreatePantheon@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@_N@Z ; CvGameReligions::CanCreatePantheon
	test	eax, eax
	sete	al

; 2762 : 	lua_pushboolean(L, bResult);

	movzx	edx, al
	push	edx
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2763 : 
; 2764 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2765 : }

	pop	ecx
	ret	0
?lCanCreatePantheon@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lCanCreatePantheon
_TEXT	ENDS
PUBLIC	?lHasCreatedReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasCreatedReligion
EXTRN	?HasCreatedReligion@CvPlayerReligions@@QBE_NXZ:PROC ; CvPlayerReligions::HasCreatedReligion
; Function compile flags: /Ogtpy
;	COMDAT ?lHasCreatedReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lHasCreatedReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lHasCreatedReligion, COMDAT

; 2769 : {

	push	ebx
	push	ebp
	push	esi

; 2770 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lHasCreate@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lHasCreate@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lHasCreate@2
	xor	bl, bl
$LN5@lHasCreate@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lHasCreate@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lHasCreate@2:

; 2771 : 
; 2772 : 	const bool bResult = pkPlayer->GetReligions()->HasCreatedReligion();

	mov	ecx, edi
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	ecx, eax
	call	?HasCreatedReligion@CvPlayerReligions@@QBE_NXZ ; CvPlayerReligions::HasCreatedReligion

; 2773 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2774 : 
; 2775 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2776 : }

	ret	0
?lHasCreatedReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lHasCreatedReligion
_TEXT	ENDS
PUBLIC	?lGetReligionCreatedByPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetReligionCreatedByPlayer
EXTRN	?GetReligionCreatedByPlayer@CvPlayerReligions@@QBE?AW4ReligionTypes@@XZ:PROC ; CvPlayerReligions::GetReligionCreatedByPlayer
; Function compile flags: /Ogtpy
;	COMDAT ?lGetReligionCreatedByPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetReligionCreatedByPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetReligionCreatedByPlayer, COMDAT

; 2780 : {

	push	ebx
	push	ebp
	push	esi

; 2781 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetReligi
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetReligi
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetReligi
	xor	bl, bl
$LN5@lGetReligi:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetReligi
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetReligi:

; 2782 : 
; 2783 : 	const ReligionTypes eReligion = pkPlayer->GetReligions()->GetReligionCreatedByPlayer();

	mov	ecx, edi
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	ecx, eax
	call	?GetReligionCreatedByPlayer@CvPlayerReligions@@QBE?AW4ReligionTypes@@XZ ; CvPlayerReligions::GetReligionCreatedByPlayer

; 2784 : 	lua_pushinteger(L, eReligion);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2785 : 
; 2786 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2787 : }

	ret	0
?lGetReligionCreatedByPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetReligionCreatedByPlayer
_TEXT	ENDS
PUBLIC	?lGetFoundedReligionEnemyCityCombatMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFoundedReligionEnemyCityCombatMod
EXTRN	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z:PROC ; CvGameReligions::GetReligion
EXTRN	?GetFounderBenefitsReligion@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z:PROC ; CvGameReligions::GetFounderBenefitsReligion
EXTRN	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ:PROC ; CvCityReligions::GetReligiousMajority
EXTRN	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ:PROC ; CvCity::GetCityReligions
EXTRN	?getWorkingCity@CvPlot@@QBEPAVCvCity@@XZ:PROC	; CvPlot::getWorkingCity
; Function compile flags: /Ogtpy
;	COMDAT ?lGetFoundedReligionEnemyCityCombatMod@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_stack_size$251582 = -8					; size = 4
_iRtnValue$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetFoundedReligionEnemyCityCombatMod@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetFoundedReligionEnemyCityCombatMod, COMDAT

; 2791 : {

	sub	esp, 8
	push	ebx
	push	ebp
	push	esi

; 2792 : 	int iRtnValue = 0;
; 2793 : 
; 2794 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+16]
	push	edi
	xor	ebp, ebp
	push	esi
	mov	DWORD PTR _iRtnValue$[esp+28], ebp
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN9@lGetFounde
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN9@lGetFounde
	push	-1
	push	esi
	call	_lua_touserdata
	mov	ebp, eax
	add	esp, 8
	test	ebp, ebp
	je	SHORT $LN9@lGetFounde
	xor	bl, bl
$LN9@lGetFounde:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN16@lGetFounde
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN16@lGetFounde:

; 2795 : 	CvPlot* pkPlot = CvLuaPlot::GetInstance(L, 2);

	push	esi
	call	_lua_gettop
	push	2
	push	esi
	mov	DWORD PTR _stack_size$251582[esp+36], eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN37@lGetFounde
	push	OFFSET $SG237776
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN37@lGetFounde
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN37@lGetFounde
	xor	bl, bl
$LN37@lGetFounde:
	mov	eax, DWORD PTR _stack_size$251582[esp+24]
	push	eax
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN19@lGetFounde
	push	esi
	call	?HandleMissingInstance@CvLuaPlot@@SAXPAUlua_State@@@Z ; CvLuaPlot::HandleMissingInstance
	add	esp, 4
$LN19@lGetFounde:

; 2796 : 	if(pkPlot)

	test	edi, edi
	je	SHORT $LN38@lGetFounde

; 2797 : 	{
; 2798 : 		CvCity* pPlotCity = pkPlot->getWorkingCity();

	mov	ecx, edi
	call	?getWorkingCity@CvPlot@@QBEPAVCvCity@@XZ ; CvPlot::getWorkingCity
	mov	ebx, eax

; 2799 : 		if(pPlotCity)

	test	ebx, ebx
	je	SHORT $LN38@lGetFounde

; 2800 : 		{
; 2801 : 			CvGameReligions* pReligions = GC.getGame().GetGameReligions();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions

; 2802 : 			ReligionTypes eReligion = pPlotCity->GetCityReligions()->GetReligiousMajority();

	mov	ecx, ebx
	mov	edi, eax
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	mov	ebx, eax

; 2803 : 			ReligionTypes eFoundedReligion = pReligions->GetFounderBenefitsReligion(pkPlayer->GetID());

	mov	eax, DWORD PTR [ebp+44]
	push	eax
	mov	ecx, edi
	call	?GetFounderBenefitsReligion@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetFounderBenefitsReligion

; 2804 : 			if(eFoundedReligion != NO_RELIGION && eReligion == eFoundedReligion)

	cmp	eax, -1
	je	SHORT $LN38@lGetFounde
	cmp	ebx, eax
	jne	SHORT $LN38@lGetFounde

; 2805 : 			{
; 2806 : 				const CvReligion* pReligion = pReligions->GetReligion(eFoundedReligion, pkPlayer->GetID());

	mov	ecx, DWORD PTR [ebp+44]
	push	ecx
	push	eax
	mov	ecx, edi
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion

; 2807 : 				if(pReligion)

	test	eax, eax
	je	SHORT $LN38@lGetFounde

; 2808 : 				{
; 2809 : 					iRtnValue = pReligion->m_Beliefs.GetCombatModifierEnemyCities();

	mov	eax, DWORD PTR [eax+168]
	jmp	SHORT $LN35@lGetFounde
$LN38@lGetFounde:
	mov	eax, DWORD PTR _iRtnValue$[esp+24]
$LN35@lGetFounde:

; 2810 : 				}
; 2811 : 			}
; 2812 : 		}
; 2813 : 
; 2814 : 	}
; 2815 : 	lua_pushinteger(L, iRtnValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2816 : 
; 2817 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2818 : }

	add	esp, 8
	ret	0
?lGetFoundedReligionEnemyCityCombatMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetFoundedReligionEnemyCityCombatMod
_TEXT	ENDS
PUBLIC	?lGetFoundedReligionFriendlyCityCombatMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFoundedReligionFriendlyCityCombatMod
; Function compile flags: /Ogtpy
;	COMDAT ?lGetFoundedReligionFriendlyCityCombatMod@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_stack_size$251646 = -8					; size = 4
_iRtnValue$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetFoundedReligionFriendlyCityCombatMod@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetFoundedReligionFriendlyCityCombatMod, COMDAT

; 2822 : {

	sub	esp, 8
	push	ebx
	push	ebp
	push	esi

; 2823 : 	int iRtnValue = 0;
; 2824 : 
; 2825 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+16]
	push	edi
	xor	ebp, ebp
	push	esi
	mov	DWORD PTR _iRtnValue$[esp+28], ebp
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN9@lGetFounde@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN9@lGetFounde@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	ebp, eax
	add	esp, 8
	test	ebp, ebp
	je	SHORT $LN9@lGetFounde@2
	xor	bl, bl
$LN9@lGetFounde@2:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN16@lGetFounde@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN16@lGetFounde@2:

; 2826 : 	CvPlot* pkPlot = CvLuaPlot::GetInstance(L, 2);

	push	esi
	call	_lua_gettop
	push	2
	push	esi
	mov	DWORD PTR _stack_size$251646[esp+36], eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN37@lGetFounde@2
	push	OFFSET $SG237776
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN37@lGetFounde@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN37@lGetFounde@2
	xor	bl, bl
$LN37@lGetFounde@2:
	mov	eax, DWORD PTR _stack_size$251646[esp+24]
	push	eax
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN19@lGetFounde@2
	push	esi
	call	?HandleMissingInstance@CvLuaPlot@@SAXPAUlua_State@@@Z ; CvLuaPlot::HandleMissingInstance
	add	esp, 4
$LN19@lGetFounde@2:

; 2827 : 	if(pkPlot)

	test	edi, edi
	je	SHORT $LN38@lGetFounde@2

; 2828 : 	{
; 2829 : 		CvCity* pPlotCity = pkPlot->getWorkingCity();

	mov	ecx, edi
	call	?getWorkingCity@CvPlot@@QBEPAVCvCity@@XZ ; CvPlot::getWorkingCity
	mov	ebx, eax

; 2830 : 		if(pPlotCity)

	test	ebx, ebx
	je	SHORT $LN38@lGetFounde@2

; 2831 : 		{
; 2832 : 			CvGameReligions* pReligions = GC.getGame().GetGameReligions();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions

; 2833 : 			ReligionTypes eReligion = pPlotCity->GetCityReligions()->GetReligiousMajority();

	mov	ecx, ebx
	mov	edi, eax
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	mov	ebx, eax

; 2834 : 			ReligionTypes eFoundedReligion = pReligions->GetFounderBenefitsReligion(pkPlayer->GetID());

	mov	eax, DWORD PTR [ebp+44]
	push	eax
	mov	ecx, edi
	call	?GetFounderBenefitsReligion@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetFounderBenefitsReligion

; 2835 : 			if(eFoundedReligion != NO_RELIGION && eReligion == eFoundedReligion)

	cmp	eax, -1
	je	SHORT $LN38@lGetFounde@2
	cmp	ebx, eax
	jne	SHORT $LN38@lGetFounde@2

; 2836 : 			{
; 2837 : 				const CvReligion* pReligion = pReligions->GetReligion(eFoundedReligion, pkPlayer->GetID());

	mov	ecx, DWORD PTR [ebp+44]
	push	ecx
	push	eax
	mov	ecx, edi
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion

; 2838 : 				if(pReligion)

	test	eax, eax
	je	SHORT $LN38@lGetFounde@2

; 2839 : 				{
; 2840 : 					iRtnValue = pReligion->m_Beliefs.GetCombatModifierFriendlyCities();

	mov	eax, DWORD PTR [eax+172]
	jmp	SHORT $LN35@lGetFounde@2
$LN38@lGetFounde@2:
	mov	eax, DWORD PTR _iRtnValue$[esp+24]
$LN35@lGetFounde@2:

; 2841 : 				}
; 2842 : 			}
; 2843 : 		}
; 2844 : 
; 2845 : 	}
; 2846 : 	lua_pushinteger(L, iRtnValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2847 : 
; 2848 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2849 : }

	add	esp, 8
	ret	0
?lGetFoundedReligionFriendlyCityCombatMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetFoundedReligionFriendlyCityCombatMod
_TEXT	ENDS
PUBLIC	?lGetMinimumFaithNextGreatProphet@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinimumFaithNextGreatProphet
EXTRN	?GetCostNextProphet@CvPlayerReligions@@QBEH_N0@Z:PROC ; CvPlayerReligions::GetCostNextProphet
; Function compile flags: /Ogtpy
;	COMDAT ?lGetMinimumFaithNextGreatProphet@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMinimumFaithNextGreatProphet@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinimumFaithNextGreatProphet, COMDAT

; 2853 : {

	push	ebx
	push	ebp
	push	esi

; 2854 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetMinimu
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetMinimu
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetMinimu
	xor	bl, bl
$LN5@lGetMinimu:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetMinimu
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetMinimu:

; 2855 : 
; 2856 : 	int iFaith = pkPlayer->GetReligions()->GetCostNextProphet(true /*bIncludeBeliefDiscounts*/, true /*bAdjustForSpeedDifficulty*/);

	push	1
	push	1
	mov	ecx, edi
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	ecx, eax
	call	?GetCostNextProphet@CvPlayerReligions@@QBEH_N0@Z ; CvPlayerReligions::GetCostNextProphet

; 2857 : 	lua_pushinteger(L, iFaith);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2858 : 
; 2859 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2860 : }

	ret	0
?lGetMinimumFaithNextGreatProphet@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinimumFaithNextGreatProphet
_TEXT	ENDS
PUBLIC	?lHasReligionInMostCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasReligionInMostCities
EXTRN	?HasReligionInMostCities@CvPlayerReligions@@QBE_NW4ReligionTypes@@@Z:PROC ; CvPlayerReligions::HasReligionInMostCities
; Function compile flags: /Ogtpy
;	COMDAT ?lHasReligionInMostCities@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lHasReligionInMostCities@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lHasReligionInMostCities, COMDAT

; 2864 : {

	push	ebx
	push	ebp
	push	esi

; 2865 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lHasReligi
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lHasReligi
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lHasReligi
	xor	bl, bl
$LN5@lHasReligi:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lHasReligi
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lHasReligi:

; 2866 : 	ReligionTypes eReligion = (ReligionTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 2867 : 
; 2868 : 	bool bResult = pkPlayer->GetReligions()->HasReligionInMostCities(eReligion);

	push	eax
	mov	ecx, edi
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	ecx, eax
	call	?HasReligionInMostCities@CvPlayerReligions@@QBE_NW4ReligionTypes@@@Z ; CvPlayerReligions::HasReligionInMostCities

; 2869 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2870 : 
; 2871 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2872 : }

	ret	0
?lHasReligionInMostCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lHasReligionInMostCities
_TEXT	ENDS
PUBLIC	?lDoesUnitPassFaithPurchaseCheck@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lDoesUnitPassFaithPurchaseCheck
EXTRN	?DoesUnitPassFaithPurchaseCheck@CvReligionAIHelpers@@YA_NAAVCvPlayer@@W4UnitTypes@@@Z:PROC ; CvReligionAIHelpers::DoesUnitPassFaithPurchaseCheck
; Function compile flags: /Ogtpy
;	COMDAT ?lDoesUnitPassFaithPurchaseCheck@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lDoesUnitPassFaithPurchaseCheck@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lDoesUnitPassFaithPurchaseCheck, COMDAT

; 2876 : {

	push	ebx
	push	ebp
	push	esi

; 2877 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lDoesUnitP
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lDoesUnitP
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lDoesUnitP
	xor	bl, bl
$LN5@lDoesUnitP:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lDoesUnitP
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lDoesUnitP:

; 2878 : 	UnitTypes eUnit = (UnitTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 2879 : 
; 2880 : 	bool bRtnValue = CvReligionAIHelpers::DoesUnitPassFaithPurchaseCheck(*pkPlayer, eUnit);

	push	eax
	push	edi
	call	?DoesUnitPassFaithPurchaseCheck@CvReligionAIHelpers@@YA_NAAVCvPlayer@@W4UnitTypes@@@Z ; CvReligionAIHelpers::DoesUnitPassFaithPurchaseCheck

; 2881 : 
; 2882 : 	lua_pushboolean(L, bRtnValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 24					; 00000018H
	pop	edi
	pop	esi
	pop	ebp

; 2883 : 
; 2884 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2885 : }

	ret	0
?lDoesUnitPassFaithPurchaseCheck@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lDoesUnitPassFaithPurchaseCheck
_TEXT	ENDS
PUBLIC	?lGetHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetHappiness
EXTRN	?GetHappiness@CvPlayer@@QBEHXZ:PROC		; CvPlayer::GetHappiness
; Function compile flags: /Ogtpy
;	COMDAT ?lGetHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetHappiness, COMDAT

; 2890 : 	return BasicLuaMethod(L, &CvPlayerAI::GetHappiness);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetHappiness@CvPlayer@@QBEHXZ	; CvPlayer::GetHappiness
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2891 : }

	ret	0
?lGetHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetHappiness
_TEXT	ENDS
PUBLIC	?lSetHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lSetHappiness
EXTRN	?SetHappiness@CvPlayer@@QAEXH@Z:PROC		; CvPlayer::SetHappiness
; Function compile flags: /Ogtpy
;	COMDAT ?lSetHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lSetHappiness, COMDAT

; 2896 : 	return BasicLuaMethod(L, &CvPlayerAI::SetHappiness);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?SetHappiness@CvPlayer@@QAEXH@Z	; CvPlayer::SetHappiness
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2897 : }

	ret	0
?lSetHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lSetHappiness
_TEXT	ENDS
PUBLIC	?lGetExcessHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetExcessHappiness
EXTRN	?GetExcessHappiness@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetExcessHappiness
; Function compile flags: /Ogtpy
;	COMDAT ?lGetExcessHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetExcessHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetExcessHappiness, COMDAT

; 2903 : 	return BasicLuaMethod(L, &CvPlayerAI::GetExcessHappiness);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetExcessHappiness@CvPlayer@@QBEHXZ ; CvPlayer::GetExcessHappiness
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2904 : }

	ret	0
?lGetExcessHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetExcessHappiness
_TEXT	ENDS
PUBLIC	?lIsEmpireUnhappy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsEmpireUnhappy
EXTRN	?IsEmpireUnhappy@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::IsEmpireUnhappy
; Function compile flags: /Ogtpy
;	COMDAT ?lIsEmpireUnhappy@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsEmpireUnhappy@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsEmpireUnhappy, COMDAT

; 2910 : 	return BasicLuaMethod(L, &CvPlayerAI::IsEmpireUnhappy);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?IsEmpireUnhappy@CvPlayer@@QBE_NXZ ; CvPlayer::IsEmpireUnhappy
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 2911 : }

	ret	0
?lIsEmpireUnhappy@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsEmpireUnhappy
_TEXT	ENDS
PUBLIC	?lIsEmpireVeryUnhappy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsEmpireVeryUnhappy
EXTRN	?IsEmpireVeryUnhappy@CvPlayer@@QBE_NXZ:PROC	; CvPlayer::IsEmpireVeryUnhappy
; Function compile flags: /Ogtpy
;	COMDAT ?lIsEmpireVeryUnhappy@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsEmpireVeryUnhappy@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsEmpireVeryUnhappy, COMDAT

; 2917 : 	return BasicLuaMethod(L, &CvPlayerAI::IsEmpireVeryUnhappy);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?IsEmpireVeryUnhappy@CvPlayer@@QBE_NXZ ; CvPlayer::IsEmpireVeryUnhappy
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 2918 : }

	ret	0
?lIsEmpireVeryUnhappy@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsEmpireVeryUnhappy
_TEXT	ENDS
PUBLIC	?lIsEmpireSuperUnhappy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsEmpireSuperUnhappy
EXTRN	?IsEmpireSuperUnhappy@CvPlayer@@QBE_NXZ:PROC	; CvPlayer::IsEmpireSuperUnhappy
; Function compile flags: /Ogtpy
;	COMDAT ?lIsEmpireSuperUnhappy@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsEmpireSuperUnhappy@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsEmpireSuperUnhappy, COMDAT

; 2924 : 	return BasicLuaMethod(L, &CvPlayerAI::IsEmpireSuperUnhappy);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?IsEmpireSuperUnhappy@CvPlayer@@QBE_NXZ ; CvPlayer::IsEmpireSuperUnhappy
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 2925 : }

	ret	0
?lIsEmpireSuperUnhappy@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsEmpireSuperUnhappy
_TEXT	ENDS
PUBLIC	?lGetHappinessFromPolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromPolicies
EXTRN	?GetHappinessFromPolicies@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetHappinessFromPolicies
; Function compile flags: /Ogtpy
;	COMDAT ?lGetHappinessFromPolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHappinessFromPolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetHappinessFromPolicies, COMDAT

; 2931 : 	return BasicLuaMethod(L, &CvPlayerAI::GetHappinessFromPolicies);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetHappinessFromPolicies@CvPlayer@@QBEHXZ ; CvPlayer::GetHappinessFromPolicies
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2932 : }

	ret	0
?lGetHappinessFromPolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetHappinessFromPolicies
_TEXT	ENDS
PUBLIC	?lGetHappinessFromCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromCities
EXTRN	?GetHappinessFromCities@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetHappinessFromCities
; Function compile flags: /Ogtpy
;	COMDAT ?lGetHappinessFromCities@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHappinessFromCities@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetHappinessFromCities, COMDAT

; 2938 : 	return BasicLuaMethod(L, &CvPlayerAI::GetHappinessFromCities);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetHappinessFromCities@CvPlayer@@QBEHXZ ; CvPlayer::GetHappinessFromCities
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2939 : }

	ret	0
?lGetHappinessFromCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetHappinessFromCities
_TEXT	ENDS
PUBLIC	?lGetHappinessFromBuildings@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromBuildings
EXTRN	?GetHappinessFromBuildings@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetHappinessFromBuildings
; Function compile flags: /Ogtpy
;	COMDAT ?lGetHappinessFromBuildings@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHappinessFromBuildings@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetHappinessFromBuildings, COMDAT

; 2945 : 	return BasicLuaMethod(L, &CvPlayerAI::GetHappinessFromBuildings);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetHappinessFromBuildings@CvPlayer@@QBEHXZ ; CvPlayer::GetHappinessFromBuildings
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2946 : }

	ret	0
?lGetHappinessFromBuildings@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetHappinessFromBuildings
_TEXT	ENDS
PUBLIC	?lGetExtraHappinessPerCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetExtraHappinessPerCity
EXTRN	?GetExtraHappinessPerCity@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetExtraHappinessPerCity
; Function compile flags: /Ogtpy
;	COMDAT ?lGetExtraHappinessPerCity@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetExtraHappinessPerCity@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetExtraHappinessPerCity, COMDAT

; 2952 : 	return BasicLuaMethod(L, &CvPlayerAI::GetExtraHappinessPerCity);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetExtraHappinessPerCity@CvPlayer@@QBEHXZ ; CvPlayer::GetExtraHappinessPerCity
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2953 : }

	ret	0
?lGetExtraHappinessPerCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetExtraHappinessPerCity
_TEXT	ENDS
PUBLIC	?lChangeExtraHappinessPerCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeExtraHappinessPerCity
EXTRN	?ChangeExtraHappinessPerCity@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::ChangeExtraHappinessPerCity
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeExtraHappinessPerCity@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeExtraHappinessPerCity@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeExtraHappinessPerCity, COMDAT

; 2959 : 	return BasicLuaMethod(L, &CvPlayerAI::ChangeExtraHappinessPerCity);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?ChangeExtraHappinessPerCity@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeExtraHappinessPerCity
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2960 : }

	ret	0
?lChangeExtraHappinessPerCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeExtraHappinessPerCity
_TEXT	ENDS
PUBLIC	?lGetHappinessFromResources@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromResources
EXTRN	?GetHappinessFromResources@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetHappinessFromResources
; Function compile flags: /Ogtpy
;	COMDAT ?lGetHappinessFromResources@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHappinessFromResources@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetHappinessFromResources, COMDAT

; 2966 : 	return BasicLuaMethod(L, &CvPlayerAI::GetHappinessFromResources);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetHappinessFromResources@CvPlayer@@QBEHXZ ; CvPlayer::GetHappinessFromResources
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2967 : }

	ret	0
?lGetHappinessFromResources@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetHappinessFromResources
_TEXT	ENDS
PUBLIC	?lGetHappinessFromResourceVariety@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromResourceVariety
EXTRN	?GetHappinessFromResourceVariety@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetHappinessFromResourceVariety
; Function compile flags: /Ogtpy
;	COMDAT ?lGetHappinessFromResourceVariety@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHappinessFromResourceVariety@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetHappinessFromResourceVariety, COMDAT

; 2973 : 	return BasicLuaMethod(L, &CvPlayerAI::GetHappinessFromResourceVariety);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetHappinessFromResourceVariety@CvPlayer@@QBEHXZ ; CvPlayer::GetHappinessFromResourceVariety
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2974 : }

	ret	0
?lGetHappinessFromResourceVariety@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetHappinessFromResourceVariety
_TEXT	ENDS
PUBLIC	?lGetExtraHappinessPerLuxury@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetExtraHappinessPerLuxury
EXTRN	?GetExtraHappinessPerLuxury@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetExtraHappinessPerLuxury
; Function compile flags: /Ogtpy
;	COMDAT ?lGetExtraHappinessPerLuxury@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetExtraHappinessPerLuxury@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetExtraHappinessPerLuxury, COMDAT

; 2980 : 	return BasicLuaMethod(L, &CvPlayerAI::GetExtraHappinessPerLuxury);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetExtraHappinessPerLuxury@CvPlayer@@QBEHXZ ; CvPlayer::GetExtraHappinessPerLuxury
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2981 : }

	ret	0
?lGetExtraHappinessPerLuxury@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetExtraHappinessPerLuxury
_TEXT	ENDS
PUBLIC	?lGetHappinessFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromReligion
EXTRN	?GetHappinessFromReligion@CvPlayer@@QAEHXZ:PROC	; CvPlayer::GetHappinessFromReligion
; Function compile flags: /Ogtpy
;	COMDAT ?lGetHappinessFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHappinessFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetHappinessFromReligion, COMDAT

; 2987 : 	return BasicLuaMethod(L, &CvPlayerAI::GetHappinessFromReligion);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetHappinessFromReligion@CvPlayer@@QAEHXZ ; CvPlayer::GetHappinessFromReligion
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2988 : }

	ret	0
?lGetHappinessFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetHappinessFromReligion
_TEXT	ENDS
PUBLIC	?lGetHappinessFromNaturalWonders@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromNaturalWonders
EXTRN	?GetHappinessFromNaturalWonders@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetHappinessFromNaturalWonders
; Function compile flags: /Ogtpy
;	COMDAT ?lGetHappinessFromNaturalWonders@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHappinessFromNaturalWonders@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetHappinessFromNaturalWonders, COMDAT

; 2994 : 	return BasicLuaMethod(L, &CvPlayerAI::GetHappinessFromNaturalWonders);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetHappinessFromNaturalWonders@CvPlayer@@QBEHXZ ; CvPlayer::GetHappinessFromNaturalWonders
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 2995 : }

	ret	0
?lGetHappinessFromNaturalWonders@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetHappinessFromNaturalWonders
_TEXT	ENDS
PUBLIC	?lGetHappinessFromLeagues@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromLeagues
EXTRN	?GetHappinessFromLeagues@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetHappinessFromLeagues
; Function compile flags: /Ogtpy
;	COMDAT ?lGetHappinessFromLeagues@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHappinessFromLeagues@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetHappinessFromLeagues, COMDAT

; 3001 : 	return BasicLuaMethod(L, &CvPlayerAI::GetHappinessFromLeagues);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetHappinessFromLeagues@CvPlayer@@QBEHXZ ; CvPlayer::GetHappinessFromLeagues
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 3002 : }

	ret	0
?lGetHappinessFromLeagues@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetHappinessFromLeagues
_TEXT	ENDS
PUBLIC	?lGetUnhappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappiness
EXTRN	?GetUnhappiness@CvPlayer@@QBEHPAVCvCity@@0@Z:PROC ; CvPlayer::GetUnhappiness
; Function compile flags: /Ogtpy
;	COMDAT ?lGetUnhappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnhappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetUnhappiness, COMDAT

; 3008 : 	return BasicLuaMethod(L, &CvPlayerAI::GetUnhappiness);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetUnhappiness@CvPlayer@@QBEHPAVCvCity@@0@Z ; CvPlayer::GetUnhappiness
	push	eax
	call	??$BasicLuaMethod@HPAVCvCity@@PAV1@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHPAVCvCity@@1@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,CvCity *,CvCity *>
	add	esp, 8

; 3009 : }

	ret	0
?lGetUnhappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetUnhappiness
_TEXT	ENDS
PUBLIC	?lGetUnhappinessForecast@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappinessForecast
; Function compile flags: /Ogtpy
;	COMDAT ?lGetUnhappinessForecast@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkInstance$251829 = -4					; size = 4
_L$ = 8							; size = 4
?lGetUnhappinessForecast@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetUnhappinessForecast, COMDAT

; 3014 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 3015 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	xor	ebp, ebp
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$251829[esp+32], ebp
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetUnhapp
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetUnhapp
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$251829[esp+20], eax
	cmp	eax, ebp
	je	SHORT $LN5@lGetUnhapp
	xor	bl, bl
$LN5@lGetUnhapp:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetUnhapp
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetUnhapp:

; 3016 : 	CvCity* pkAssumeCityAnnexed = CvLuaCity::GetInstance(L, 2, false);

	push	esi
	call	_lua_gettop
	push	2
	push	esi
	mov	edi, eax
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN16@lGetUnhapp
	push	OFFSET $SG237679
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN16@lGetUnhapp
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	ebp, eax
$LN16@lGetUnhapp:
	push	edi
	push	esi
	call	_lua_settop

; 3017 : 	CvCity* pkAssumeCityPuppeted = CvLuaCity::GetInstance(L, 3, false);

	push	esi
	call	_lua_gettop
	push	3
	push	esi
	mov	ebx, eax
	xor	edi, edi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 5
	jne	SHORT $LN23@lGetUnhapp
	push	OFFSET $SG237679
	push	3
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN23@lGetUnhapp
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	edi, eax
$LN23@lGetUnhapp:
	push	ebx
	push	esi
	call	_lua_settop

; 3018 : 
; 3019 : 	const int iUnhappiness = pkPlayer->GetUnhappiness(pkAssumeCityAnnexed, pkAssumeCityPuppeted);

	mov	ecx, DWORD PTR _pkInstance$251829[esp+28]
	add	esp, 8
	push	edi
	push	ebp
	call	?GetUnhappiness@CvPlayer@@QBEHPAVCvCity@@0@Z ; CvPlayer::GetUnhappiness

; 3020 : 	lua_pushinteger(L, iUnhappiness);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3021 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3022 : }

	pop	ecx
	ret	0
?lGetUnhappinessForecast@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetUnhappinessForecast
_TEXT	ENDS
PUBLIC	?lGetUnhappinessFromCityForUI@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappinessFromCityForUI
EXTRN	?GetUnhappinessFromCityForUI@CvPlayer@@QBEHPAVCvCity@@@Z:PROC ; CvPlayer::GetUnhappinessFromCityForUI
; Function compile flags: /Ogtpy
;	COMDAT ?lGetUnhappinessFromCityForUI@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnhappinessFromCityForUI@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetUnhappinessFromCityForUI, COMDAT

; 3027 : {

	push	ebx
	push	ebp
	push	esi

; 3028 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	xor	ebp, ebp
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetUnhapp@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetUnhapp@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	ebp, eax
	add	esp, 8
	test	ebp, ebp
	je	SHORT $LN5@lGetUnhapp@2
	xor	bl, bl
$LN5@lGetUnhapp@2:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetUnhapp@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetUnhapp@2:

; 3029 : 	CvCity* pkCity = CvLuaCity::GetInstance(L, 2, false);

	push	esi
	call	_lua_gettop
	push	2
	push	esi
	mov	ebx, eax
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN16@lGetUnhapp@2
	push	OFFSET $SG237679
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN16@lGetUnhapp@2
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	edi, eax
$LN16@lGetUnhapp@2:
	push	ebx
	push	esi
	call	_lua_settop
	add	esp, 8

; 3030 : 
; 3031 : 	const int iUnhappiness = pkPlayer->GetUnhappinessFromCityForUI(pkCity);

	push	edi
	mov	ecx, ebp
	call	?GetUnhappinessFromCityForUI@CvPlayer@@QBEHPAVCvCity@@@Z ; CvPlayer::GetUnhappinessFromCityForUI

; 3032 : 	lua_pushinteger(L, iUnhappiness);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3033 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3034 : }

	ret	0
?lGetUnhappinessFromCityForUI@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetUnhappinessFromCityForUI
_TEXT	ENDS
PUBLIC	?lGetUnhappinessFromCityCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappinessFromCityCount
EXTRN	?GetUnhappinessFromCityCount@CvPlayer@@QBEHPAVCvCity@@0@Z:PROC ; CvPlayer::GetUnhappinessFromCityCount
; Function compile flags: /Ogtpy
;	COMDAT ?lGetUnhappinessFromCityCount@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkInstance$251918 = -4					; size = 4
_L$ = 8							; size = 4
?lGetUnhappinessFromCityCount@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetUnhappinessFromCityCount, COMDAT

; 3039 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 3040 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	xor	ebp, ebp
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$251918[esp+32], ebp
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetUnhapp@3
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetUnhapp@3
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$251918[esp+20], eax
	cmp	eax, ebp
	je	SHORT $LN5@lGetUnhapp@3
	xor	bl, bl
$LN5@lGetUnhapp@3:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetUnhapp@3
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetUnhapp@3:

; 3041 : 	CvCity* pAnnexedCity = CvLuaCity::GetInstance(L, 2, false);

	push	esi
	call	_lua_gettop
	push	2
	push	esi
	mov	edi, eax
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN16@lGetUnhapp@3
	push	OFFSET $SG237679
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN16@lGetUnhapp@3
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	ebp, eax
$LN16@lGetUnhapp@3:
	push	edi
	push	esi
	call	_lua_settop

; 3042 : 	CvCity* pPuppetedCity = CvLuaCity::GetInstance(L, 3, false);

	push	esi
	call	_lua_gettop
	push	3
	push	esi
	mov	ebx, eax
	xor	edi, edi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 5
	jne	SHORT $LN23@lGetUnhapp@3
	push	OFFSET $SG237679
	push	3
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN23@lGetUnhapp@3
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	edi, eax
$LN23@lGetUnhapp@3:
	push	ebx
	push	esi
	call	_lua_settop

; 3043 : 	const int iResult = pkPlayer->GetUnhappinessFromCityCount(pAnnexedCity, pPuppetedCity);

	mov	ecx, DWORD PTR _pkInstance$251918[esp+28]
	add	esp, 8
	push	edi
	push	ebp
	call	?GetUnhappinessFromCityCount@CvPlayer@@QBEHPAVCvCity@@0@Z ; CvPlayer::GetUnhappinessFromCityCount

; 3044 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3045 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3046 : }

	pop	ecx
	ret	0
?lGetUnhappinessFromCityCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetUnhappinessFromCityCount
_TEXT	ENDS
PUBLIC	?lGetUnhappinessFromCapturedCityCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappinessFromCapturedCityCount
EXTRN	?GetUnhappinessFromCapturedCityCount@CvPlayer@@QBEHPAVCvCity@@0@Z:PROC ; CvPlayer::GetUnhappinessFromCapturedCityCount
; Function compile flags: /Ogtpy
;	COMDAT ?lGetUnhappinessFromCapturedCityCount@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnhappinessFromCapturedCityCount@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetUnhappinessFromCapturedCityCount, COMDAT

; 3052 : 	return BasicLuaMethod(L, &CvPlayerAI::GetUnhappinessFromCapturedCityCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetUnhappinessFromCapturedCityCount@CvPlayer@@QBEHPAVCvCity@@0@Z ; CvPlayer::GetUnhappinessFromCapturedCityCount
	push	eax
	call	??$BasicLuaMethod@HPAVCvCity@@PAV1@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHPAVCvCity@@1@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,CvCity *,CvCity *>
	add	esp, 8

; 3053 : }

	ret	0
?lGetUnhappinessFromCapturedCityCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetUnhappinessFromCapturedCityCount
_TEXT	ENDS
PUBLIC	?lGetUnhappinessFromCityPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappinessFromCityPopulation
EXTRN	?GetUnhappinessFromCityPopulation@CvPlayer@@QBEHPAVCvCity@@0@Z:PROC ; CvPlayer::GetUnhappinessFromCityPopulation
; Function compile flags: /Ogtpy
;	COMDAT ?lGetUnhappinessFromCityPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnhappinessFromCityPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetUnhappinessFromCityPopulation, COMDAT

; 3059 : 	return BasicLuaMethod(L, &CvPlayerAI::GetUnhappinessFromCityPopulation);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetUnhappinessFromCityPopulation@CvPlayer@@QBEHPAVCvCity@@0@Z ; CvPlayer::GetUnhappinessFromCityPopulation
	push	eax
	call	??$BasicLuaMethod@HPAVCvCity@@PAV1@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHPAVCvCity@@1@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,CvCity *,CvCity *>
	add	esp, 8

; 3060 : }

	ret	0
?lGetUnhappinessFromCityPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetUnhappinessFromCityPopulation
_TEXT	ENDS
PUBLIC	?lGetUnhappinessFromCitySpecialists@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappinessFromCitySpecialists
EXTRN	?GetUnhappinessFromCitySpecialists@CvPlayer@@QBEHPAVCvCity@@0@Z:PROC ; CvPlayer::GetUnhappinessFromCitySpecialists
; Function compile flags: /Ogtpy
;	COMDAT ?lGetUnhappinessFromCitySpecialists@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkInstance$251973 = -4					; size = 4
_L$ = 8							; size = 4
?lGetUnhappinessFromCitySpecialists@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetUnhappinessFromCitySpecialists, COMDAT

; 3065 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 3066 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	xor	ebp, ebp
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$251973[esp+32], ebp
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetUnhapp@4
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetUnhapp@4
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$251973[esp+20], eax
	cmp	eax, ebp
	je	SHORT $LN5@lGetUnhapp@4
	xor	bl, bl
$LN5@lGetUnhapp@4:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetUnhapp@4
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetUnhapp@4:

; 3067 : 	CvCity* pAnnexedCity = CvLuaCity::GetInstance(L, 2, false);

	push	esi
	call	_lua_gettop
	push	2
	push	esi
	mov	edi, eax
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN16@lGetUnhapp@4
	push	OFFSET $SG237679
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN16@lGetUnhapp@4
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	ebp, eax
$LN16@lGetUnhapp@4:
	push	edi
	push	esi
	call	_lua_settop

; 3068 : 	CvCity* pPuppetedCity = CvLuaCity::GetInstance(L, 3, false);

	push	esi
	call	_lua_gettop
	push	3
	push	esi
	mov	ebx, eax
	xor	edi, edi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 5
	jne	SHORT $LN23@lGetUnhapp@4
	push	OFFSET $SG237679
	push	3
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN23@lGetUnhapp@4
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	edi, eax
$LN23@lGetUnhapp@4:
	push	ebx
	push	esi
	call	_lua_settop

; 3069 : 	const int iResult = pkPlayer->GetUnhappinessFromCitySpecialists(pAnnexedCity, pPuppetedCity);

	mov	ecx, DWORD PTR _pkInstance$251973[esp+28]
	add	esp, 8
	push	edi
	push	ebp
	call	?GetUnhappinessFromCitySpecialists@CvPlayer@@QBEHPAVCvCity@@0@Z ; CvPlayer::GetUnhappinessFromCitySpecialists

; 3070 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3071 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3072 : }

	pop	ecx
	ret	0
?lGetUnhappinessFromCitySpecialists@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetUnhappinessFromCitySpecialists
_TEXT	ENDS
PUBLIC	?lGetUnhappinessFromPuppetCityPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappinessFromPuppetCityPopulation
EXTRN	?GetUnhappinessFromPuppetCityPopulation@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetUnhappinessFromPuppetCityPopulation
; Function compile flags: /Ogtpy
;	COMDAT ?lGetUnhappinessFromPuppetCityPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnhappinessFromPuppetCityPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetUnhappinessFromPuppetCityPopulation, COMDAT

; 3078 : 	return BasicLuaMethod(L, &CvPlayerAI::GetUnhappinessFromPuppetCityPopulation);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetUnhappinessFromPuppetCityPopulation@CvPlayer@@QBEHXZ ; CvPlayer::GetUnhappinessFromPuppetCityPopulation
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 3079 : }

	ret	0
?lGetUnhappinessFromPuppetCityPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetUnhappinessFromPuppetCityPopulation
_TEXT	ENDS
PUBLIC	?lGetUnhappinessFromOccupiedCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappinessFromOccupiedCities
EXTRN	?GetUnhappinessFromOccupiedCities@CvPlayer@@QBEHPAVCvCity@@0@Z:PROC ; CvPlayer::GetUnhappinessFromOccupiedCities
; Function compile flags: /Ogtpy
;	COMDAT ?lGetUnhappinessFromOccupiedCities@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnhappinessFromOccupiedCities@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetUnhappinessFromOccupiedCities, COMDAT

; 3085 : 	return BasicLuaMethod(L, &CvPlayerAI::GetUnhappinessFromOccupiedCities);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetUnhappinessFromOccupiedCities@CvPlayer@@QBEHPAVCvCity@@0@Z ; CvPlayer::GetUnhappinessFromOccupiedCities
	push	eax
	call	??$BasicLuaMethod@HPAVCvCity@@PAV1@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHPAVCvCity@@1@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,CvCity *,CvCity *>
	add	esp, 8

; 3086 : }

	ret	0
?lGetUnhappinessFromOccupiedCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetUnhappinessFromOccupiedCities
_TEXT	ENDS
PUBLIC	?lGetUnhappinessFromPublicOpinion@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappinessFromPublicOpinion
; Function compile flags: /Ogtpy
;	COMDAT ?lGetUnhappinessFromPublicOpinion@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnhappinessFromPublicOpinion@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetUnhappinessFromPublicOpinion, COMDAT

; 3091 : {

	push	ebx
	push	ebp
	push	esi

; 3092 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetUnhapp@5
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetUnhapp@5
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetUnhapp@5
	xor	bl, bl
$LN5@lGetUnhapp@5:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetUnhapp@5
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetUnhapp@5:

; 3093 : 	const int iResult = pkPlayer->GetCulture()->GetPublicOpinionUnhappiness();

	mov	ecx, edi
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetPublicOpinionUnhappiness@CvPlayerCulture@@QBEHXZ ; CvPlayerCulture::GetPublicOpinionUnhappiness

; 3094 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3095 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3096 : }

	ret	0
?lGetUnhappinessFromPublicOpinion@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetUnhappinessFromPublicOpinion
_TEXT	ENDS
PUBLIC	?lGetUnhappinessFromUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappinessFromUnits
EXTRN	?GetUnhappinessFromUnits@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetUnhappinessFromUnits
; Function compile flags: /Ogtpy
;	COMDAT ?lGetUnhappinessFromUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnhappinessFromUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetUnhappinessFromUnits, COMDAT

; 3102 : 	return BasicLuaMethod(L, &CvPlayerAI::GetUnhappinessFromUnits);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetUnhappinessFromUnits@CvPlayer@@QBEHXZ ; CvPlayer::GetUnhappinessFromUnits
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 3103 : }

	ret	0
?lGetUnhappinessFromUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetUnhappinessFromUnits
_TEXT	ENDS
PUBLIC	?lChangeUnhappinessFromUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeUnhappinessFromUnits
EXTRN	?ChangeUnhappinessFromUnits@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::ChangeUnhappinessFromUnits
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeUnhappinessFromUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeUnhappinessFromUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeUnhappinessFromUnits, COMDAT

; 3109 : 	return BasicLuaMethod(L, &CvPlayerAI::ChangeUnhappinessFromUnits);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?ChangeUnhappinessFromUnits@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeUnhappinessFromUnits
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 3110 : }

	ret	0
?lChangeUnhappinessFromUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeUnhappinessFromUnits
_TEXT	ENDS
PUBLIC	?lGetUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappinessMod
EXTRN	?GetUnhappinessMod@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetUnhappinessMod
; Function compile flags: /Ogtpy
;	COMDAT ?lGetUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetUnhappinessMod, COMDAT

; 3115 : 	return BasicLuaMethod(L, &CvPlayerAI::GetUnhappinessMod);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetUnhappinessMod@CvPlayer@@QBEHXZ ; CvPlayer::GetUnhappinessMod
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 3116 : }

	ret	0
?lGetUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetUnhappinessMod
_TEXT	ENDS
PUBLIC	?lGetCityCountUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCityCountUnhappinessMod
EXTRN	?GetCityCountUnhappinessMod@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetCityCountUnhappinessMod
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCityCountUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCityCountUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCityCountUnhappinessMod, COMDAT

; 3121 : 	return BasicLuaMethod(L, &CvPlayerAI::GetCityCountUnhappinessMod);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetCityCountUnhappinessMod@CvPlayer@@QBEHXZ ; CvPlayer::GetCityCountUnhappinessMod
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 3122 : }

	ret	0
?lGetCityCountUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCityCountUnhappinessMod
_TEXT	ENDS
PUBLIC	?lGetOccupiedPopulationUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetOccupiedPopulationUnhappinessMod
EXTRN	?GetOccupiedPopulationUnhappinessMod@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetOccupiedPopulationUnhappinessMod
; Function compile flags: /Ogtpy
;	COMDAT ?lGetOccupiedPopulationUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetOccupiedPopulationUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetOccupiedPopulationUnhappinessMod, COMDAT

; 3127 : 	return BasicLuaMethod(L, &CvPlayerAI::GetOccupiedPopulationUnhappinessMod);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetOccupiedPopulationUnhappinessMod@CvPlayer@@QBEHXZ ; CvPlayer::GetOccupiedPopulationUnhappinessMod
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 3128 : }

	ret	0
?lGetOccupiedPopulationUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetOccupiedPopulationUnhappinessMod
_TEXT	ENDS
PUBLIC	?lGetCapitalUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCapitalUnhappinessMod
EXTRN	?GetCapitalUnhappinessMod@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetCapitalUnhappinessMod
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCapitalUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCapitalUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCapitalUnhappinessMod, COMDAT

; 3133 : 	return BasicLuaMethod(L, &CvPlayerAI::GetCapitalUnhappinessMod);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetCapitalUnhappinessMod@CvPlayer@@QBEHXZ ; CvPlayer::GetCapitalUnhappinessMod
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 3134 : }

	ret	0
?lGetCapitalUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCapitalUnhappinessMod
_TEXT	ENDS
PUBLIC	?lGetTraitCityUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTraitCityUnhappinessMod
EXTRN	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ:PROC ; CvPlayer::GetPlayerTraits
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTraitCityUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTraitCityUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTraitCityUnhappinessMod, COMDAT

; 3138 : {

	push	ebx
	push	ebp
	push	esi

; 3139 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetTraitC
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetTraitC
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetTraitC
	xor	bl, bl
$LN5@lGetTraitC:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetTraitC
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetTraitC:

; 3140 : 	const int iResult = pkPlayer->GetPlayerTraits()->GetCityUnhappinessModifier();

	mov	ecx, edi
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits

; 3141 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR [eax+80]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3142 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3143 : }

	ret	0
?lGetTraitCityUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTraitCityUnhappinessMod
_TEXT	ENDS
PUBLIC	?lGetTraitPopUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTraitPopUnhappinessMod
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTraitPopUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTraitPopUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTraitPopUnhappinessMod, COMDAT

; 3147 : {

	push	ebx
	push	ebp
	push	esi

; 3148 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetTraitP
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetTraitP
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetTraitP
	xor	bl, bl
$LN5@lGetTraitP:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetTraitP
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetTraitP:

; 3149 : 	const int iResult = pkPlayer->GetPlayerTraits()->GetPopulationUnhappinessModifier();

	mov	ecx, edi
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits

; 3150 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR [eax+84]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3151 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3152 : }

	ret	0
?lGetTraitPopUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTraitPopUnhappinessMod
_TEXT	ENDS
PUBLIC	?lIsHalfSpecialistUnhappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsHalfSpecialistUnhappiness
EXTRN	?isHalfSpecialistUnhappiness@CvPlayer@@QBE_NXZ:PROC ; CvPlayer::isHalfSpecialistUnhappiness
; Function compile flags: /Ogtpy
;	COMDAT ?lIsHalfSpecialistUnhappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsHalfSpecialistUnhappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsHalfSpecialistUnhappiness, COMDAT

; 3157 : 	return BasicLuaMethod(L, &CvPlayerAI::isHalfSpecialistUnhappiness);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isHalfSpecialistUnhappiness@CvPlayer@@QBE_NXZ ; CvPlayer::isHalfSpecialistUnhappiness
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 3158 : }

	ret	0
?lIsHalfSpecialistUnhappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsHalfSpecialistUnhappiness
_TEXT	ENDS
PUBLIC	?lGetHappinessPerGarrisonedUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessPerGarrisonedUnit
EXTRN	?GetHappinessPerGarrisonedUnit@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetHappinessPerGarrisonedUnit
; Function compile flags: /Ogtpy
;	COMDAT ?lGetHappinessPerGarrisonedUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHappinessPerGarrisonedUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetHappinessPerGarrisonedUnit, COMDAT

; 3164 : 	return BasicLuaMethod(L, &CvPlayerAI::GetHappinessPerGarrisonedUnit);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetHappinessPerGarrisonedUnit@CvPlayer@@QBEHXZ ; CvPlayer::GetHappinessPerGarrisonedUnit
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 3165 : }

	ret	0
?lGetHappinessPerGarrisonedUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetHappinessPerGarrisonedUnit
_TEXT	ENDS
PUBLIC	?lSetHappinessPerGarrisonedUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetHappinessPerGarrisonedUnit
EXTRN	?SetHappinessPerGarrisonedUnit@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::SetHappinessPerGarrisonedUnit
; Function compile flags: /Ogtpy
;	COMDAT ?lSetHappinessPerGarrisonedUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetHappinessPerGarrisonedUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetHappinessPerGarrisonedUnit, COMDAT

; 3170 : 	return BasicLuaMethod(L, &CvPlayerAI::SetHappinessPerGarrisonedUnit);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?SetHappinessPerGarrisonedUnit@CvPlayer@@QAEXH@Z ; CvPlayer::SetHappinessPerGarrisonedUnit
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 3171 : }

	ret	0
?lSetHappinessPerGarrisonedUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetHappinessPerGarrisonedUnit
_TEXT	ENDS
PUBLIC	?lChangeHappinessPerGarrisonedUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeHappinessPerGarrisonedUnit
EXTRN	?ChangeHappinessPerGarrisonedUnit@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::ChangeHappinessPerGarrisonedUnit
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeHappinessPerGarrisonedUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeHappinessPerGarrisonedUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeHappinessPerGarrisonedUnit, COMDAT

; 3176 : 	return BasicLuaMethod(L, &CvPlayerAI::ChangeHappinessPerGarrisonedUnit);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?ChangeHappinessPerGarrisonedUnit@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeHappinessPerGarrisonedUnit
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 3177 : }

	ret	0
?lChangeHappinessPerGarrisonedUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeHappinessPerGarrisonedUnit
_TEXT	ENDS
PUBLIC	?lGetHappinessFromTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromTradeRoutes
EXTRN	?GetHappinessFromTradeRoutes@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetHappinessFromTradeRoutes
; Function compile flags: /Ogtpy
;	COMDAT ?lGetHappinessFromTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHappinessFromTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetHappinessFromTradeRoutes, COMDAT

; 3182 : 	return BasicLuaMethod(L, &CvPlayerAI::GetHappinessFromTradeRoutes);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetHappinessFromTradeRoutes@CvPlayer@@QBEHXZ ; CvPlayer::GetHappinessFromTradeRoutes
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 3183 : }

	ret	0
?lGetHappinessFromTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetHappinessFromTradeRoutes
_TEXT	ENDS
PUBLIC	?lGetHappinessPerTradeRoute@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessPerTradeRoute
EXTRN	?GetHappinessPerTradeRoute@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetHappinessPerTradeRoute
; Function compile flags: /Ogtpy
;	COMDAT ?lGetHappinessPerTradeRoute@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHappinessPerTradeRoute@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetHappinessPerTradeRoute, COMDAT

; 3188 : 	return BasicLuaMethod(L, &CvPlayerAI::GetHappinessPerTradeRoute);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetHappinessPerTradeRoute@CvPlayer@@QBEHXZ ; CvPlayer::GetHappinessPerTradeRoute
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 3189 : }

	ret	0
?lGetHappinessPerTradeRoute@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetHappinessPerTradeRoute
_TEXT	ENDS
PUBLIC	?lSetHappinessPerTradeRoute@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetHappinessPerTradeRoute
EXTRN	?SetHappinessPerTradeRoute@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::SetHappinessPerTradeRoute
; Function compile flags: /Ogtpy
;	COMDAT ?lSetHappinessPerTradeRoute@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetHappinessPerTradeRoute@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetHappinessPerTradeRoute, COMDAT

; 3194 : 	return BasicLuaMethod(L, &CvPlayerAI::SetHappinessPerTradeRoute);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?SetHappinessPerTradeRoute@CvPlayer@@QAEXH@Z ; CvPlayer::SetHappinessPerTradeRoute
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 3195 : }

	ret	0
?lSetHappinessPerTradeRoute@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetHappinessPerTradeRoute
_TEXT	ENDS
PUBLIC	?lChangeHappinessPerTradeRoute@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeHappinessPerTradeRoute
EXTRN	?ChangeHappinessPerTradeRoute@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::ChangeHappinessPerTradeRoute
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeHappinessPerTradeRoute@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeHappinessPerTradeRoute@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeHappinessPerTradeRoute, COMDAT

; 3200 : 	return BasicLuaMethod(L, &CvPlayerAI::ChangeHappinessPerTradeRoute);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?ChangeHappinessPerTradeRoute@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeHappinessPerTradeRoute
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 3201 : }

	ret	0
?lChangeHappinessPerTradeRoute@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeHappinessPerTradeRoute
_TEXT	ENDS
PUBLIC	?lGetCityConnectionTradeRouteGoldModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCityConnectionTradeRouteGoldModifier
EXTRN	?GetCityConnectionTradeRouteGoldModifier@CvTreasury@@QBEHXZ:PROC ; CvTreasury::GetCityConnectionTradeRouteGoldModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCityConnectionTradeRouteGoldModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCityConnectionTradeRouteGoldModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCityConnectionTradeRouteGoldModifier, COMDAT

; 3205 : {

	push	ebx
	push	ebp
	push	esi

; 3206 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetCityCo@4
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetCityCo@4
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetCityCo@4
	xor	bl, bl
$LN5@lGetCityCo@4:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetCityCo@4
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetCityCo@4:

; 3207 : 	const int iResult = pkPlayer->GetTreasury()->GetCityConnectionTradeRouteGoldModifier();

	mov	ecx, edi
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?GetCityConnectionTradeRouteGoldModifier@CvTreasury@@QBEHXZ ; CvTreasury::GetCityConnectionTradeRouteGoldModifier

; 3208 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3209 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3210 : }

	ret	0
?lGetCityConnectionTradeRouteGoldModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCityConnectionTradeRouteGoldModifier
_TEXT	ENDS
PUBLIC	?lGetNumInternationalTradeRoutesUsed@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumInternationalTradeRoutesUsed
EXTRN	?GetNumTradeRoutesUsed@CvPlayerTrade@@QAEH_N@Z:PROC ; CvPlayerTrade::GetNumTradeRoutesUsed
EXTRN	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ:PROC ; CvPlayer::GetTrade
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumInternationalTradeRoutesUsed@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumInternationalTradeRoutesUsed@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumInternationalTradeRoutesUsed, COMDAT

; 3258 : {

	push	ebx
	push	ebp
	push	esi

; 3259 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumInt
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumInt
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumInt
	xor	bl, bl
$LN5@lGetNumInt:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumInt
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumInt:

; 3260 : 	const int iResult = pkPlayer->GetTrade()->GetNumTradeRoutesUsed(true);

	push	1
	mov	ecx, edi
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	ecx, eax
	call	?GetNumTradeRoutesUsed@CvPlayerTrade@@QAEH_N@Z ; CvPlayerTrade::GetNumTradeRoutesUsed

; 3261 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3262 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3263 : }

	ret	0
?lGetNumInternationalTradeRoutesUsed@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumInternationalTradeRoutesUsed
_TEXT	ENDS
PUBLIC	?lGetNumInternationalTradeRoutesAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumInternationalTradeRoutesAvailable
EXTRN	?GetNumTradeRoutesPossible@CvPlayerTrade@@QAEIXZ:PROC ; CvPlayerTrade::GetNumTradeRoutesPossible
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumInternationalTradeRoutesAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumInternationalTradeRoutesAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumInternationalTradeRoutesAvailable, COMDAT

; 3267 : {

	push	ebx
	push	ebp
	push	esi

; 3268 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumInt@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumInt@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumInt@2
	xor	bl, bl
$LN5@lGetNumInt@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumInt@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumInt@2:

; 3269 : 	const int iResult = pkPlayer->GetTrade()->GetNumTradeRoutesPossible();

	mov	ecx, edi
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	ecx, eax
	call	?GetNumTradeRoutesPossible@CvPlayerTrade@@QAEIXZ ; CvPlayerTrade::GetNumTradeRoutesPossible

; 3270 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3271 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3272 : }

	ret	0
?lGetNumInternationalTradeRoutesAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumInternationalTradeRoutesAvailable
_TEXT	ENDS
PUBLIC	?lGetInternationalTradeRouteResourceTraitModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteResourceTraitModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetInternationalTradeRouteResourceTraitModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetInternationalTradeRouteResourceTraitModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetInternationalTradeRouteResourceTraitModifier, COMDAT

; 3469 : {

	push	ebx
	push	ebp
	push	esi

; 3470 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetIntern
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetIntern
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetIntern
	xor	bl, bl
$LN5@lGetIntern:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetIntern
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetIntern:

; 3471 : 	lua_pushinteger(L, pkPlayer->GetPlayerTraits()->GetTradeRouteResourceModifier());

	mov	ecx, edi
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	eax, DWORD PTR [eax+296]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3472 : 
; 3473 : 	return 1;	

	mov	eax, 1
	pop	ebx

; 3474 : }

	ret	0
?lGetInternationalTradeRouteResourceTraitModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetInternationalTradeRouteResourceTraitModifier
_TEXT	ENDS
PUBLIC	?lGetPotentialTradeUnitNewHomeCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPotentialTradeUnitNewHomeCity
EXTRN	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z:PROC	; CvPlayer::nextCity
EXTRN	_lua_rawseti:PROC
EXTRN	?canChangeTradeUnitHomeCityAt@CvUnit@@QBE_NPBVCvPlot@@HH@Z:PROC ; CvUnit::canChangeTradeUnitHomeCityAt
EXTRN	?plot@CvCity@@QBEPAVCvPlot@@XZ:PROC		; CvCity::plot
EXTRN	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z:PROC	; CvPlayer::firstCity
EXTRN	?canChangeTradeUnitHomeCity@CvUnit@@QBE_NPBVCvPlot@@@Z:PROC ; CvUnit::canChangeTradeUnitHomeCity
; Function compile flags: /Ogtpy
;	COMDAT ?lGetPotentialTradeUnitNewHomeCity@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkInstance$252274 = -24				; size = 4
_pkInstance$252259 = -20				; size = 4
_iLoopCityY$230101 = -16				; size = 4
_iLoopCityX$230100 = -12				; size = 4
_pkUnitPlot$ = -8					; size = 4
_iCityLoop$230095 = -4					; size = 4
_L$ = 8							; size = 4
?lGetPotentialTradeUnitNewHomeCity@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPotentialTradeUnitNewHomeCity, COMDAT

; 3690 : {

	sub	esp, 24					; 00000018H
	push	ebx
	push	ebp
	push	esi

; 3691 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+32]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$252259[esp+52], 0
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN47@lGetPotent
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN47@lGetPotent
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$252259[esp+40], eax
	test	eax, eax
	je	SHORT $LN47@lGetPotent
	xor	bl, bl
$LN47@lGetPotent:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN18@lGetPotent
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN18@lGetPotent:

; 3692 : 	CvUnit* pkUnit = CvLuaUnit::GetInstance(L, 2, false);

	push	esi
	call	_lua_gettop
	push	2
	xor	edi, edi
	push	esi
	mov	ebx, eax
	mov	DWORD PTR _pkInstance$252274[esp+52], edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN22@lGetPotent
	push	OFFSET $SG237816
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN22@lGetPotent
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$252274[esp+40], eax
	mov	edi, eax
$LN22@lGetPotent:
	push	ebx
	push	esi
	call	_lua_settop
	add	esp, 8

; 3693 : 	CvPlot* pkUnitPlot = pkUnit->plot();

	mov	ecx, edi
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot

; 3694 : 
; 3695 : 	lua_createtable(L, 0, 0);

	push	0
	mov	ebx, eax
	push	0
	push	esi
	mov	DWORD PTR _pkUnitPlot$[esp+52], ebx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 3696 : 	int index = 1;
; 3697 : 
; 3698 : 	if (pkUnit->canChangeTradeUnitHomeCity(pkUnitPlot))

	push	ebx
	mov	ecx, edi
	mov	ebp, 1
	call	?canChangeTradeUnitHomeCity@CvUnit@@QBE_NPBVCvPlot@@@Z ; CvUnit::canChangeTradeUnitHomeCity
	test	al, al
	je	$LN46@lGetPotent

; 3699 : 	{
; 3700 : 		int iCityLoop;
; 3701 : 		CvCity* pLoopCity = NULL;
; 3702 : 		for(pLoopCity = pkPlayer->firstCity(&iCityLoop); pLoopCity != NULL; pLoopCity = pkPlayer->nextCity(&iCityLoop))

	mov	ecx, DWORD PTR _pkInstance$252259[esp+40]
	push	0
	lea	eax, DWORD PTR _iCityLoop$230095[esp+44]
	push	eax
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	edi, eax
	test	edi, edi
	je	$LN46@lGetPotent
$LL5@lGetPotent:

; 3703 : 		{
; 3704 : 			int iLoopCityX = pLoopCity->getX();

	mov	ecx, DWORD PTR [edi+96]

; 3705 : 			int iLoopCityY = pLoopCity->getY();

	mov	edx, DWORD PTR [edi+108]
	mov	DWORD PTR _iLoopCityX$230100[esp+40], ecx

; 3706 : 
; 3707 : 			// can't change to its own home city
; 3708 : 			if (pLoopCity->plot() == pkUnitPlot)

	mov	ecx, edi
	mov	DWORD PTR _iLoopCityY$230101[esp+40], edx
	call	?plot@CvCity@@QBEPAVCvPlot@@XZ		; CvCity::plot
	cmp	eax, ebx
	je	SHORT $LN4@lGetPotent

; 3709 : 			{
; 3710 : 				continue;
; 3711 : 			}
; 3712 : 
; 3713 : 			if (pkUnit->canChangeTradeUnitHomeCityAt(pkUnitPlot, iLoopCityX, iLoopCityY))

	mov	eax, DWORD PTR _iLoopCityY$230101[esp+40]
	mov	ecx, DWORD PTR _iLoopCityX$230100[esp+40]
	push	eax
	push	ecx
	mov	ecx, DWORD PTR _pkInstance$252274[esp+48]
	push	ebx
	call	?canChangeTradeUnitHomeCityAt@CvUnit@@QBE_NPBVCvPlot@@HH@Z ; CvUnit::canChangeTradeUnitHomeCityAt
	test	al, al
	je	SHORT $LN4@lGetPotent

; 3714 : 			{
; 3715 : 				lua_createtable(L, 0, 0);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 3716 : 				const int t = lua_gettop(L);

	push	esi
	call	_lua_gettop

; 3717 : 				lua_pushinteger(L, pLoopCity->getX());

	mov	edx, DWORD PTR [edi+96]
	push	edx
	push	esi
	mov	ebx, eax
	call	_lua_pushinteger

; 3718 : 				lua_setfield(L, t, "X");

	push	OFFSET $SG230105
	push	ebx
	push	esi
	call	_lua_setfield

; 3719 : 				lua_pushinteger(L, pLoopCity->getY());

	mov	eax, DWORD PTR [edi+108]
	push	eax
	push	esi
	call	_lua_pushinteger

; 3720 : 				lua_setfield(L, t, "Y");

	push	OFFSET $SG230106
	push	ebx
	push	esi
	call	_lua_setfield

; 3721 : 				lua_rawseti(L, -2, index++);

	push	ebp
	push	-2					; fffffffeH
	push	esi
	call	_lua_rawseti
	mov	ebx, DWORD PTR _pkUnitPlot$[esp+108]
	add	esp, 68					; 00000044H
	inc	ebp
$LN4@lGetPotent:
	push	0
	lea	ecx, DWORD PTR _iCityLoop$230095[esp+44]
	push	ecx
	mov	ecx, DWORD PTR _pkInstance$252259[esp+48]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	edi, eax
	test	edi, edi
	jne	$LL5@lGetPotent

; 3722 : 			}
; 3723 : 		}
; 3724 : 	}
; 3725 : 
; 3726 : 	return 1;

	lea	eax, DWORD PTR [edi+1]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 3727 : }

	add	esp, 24					; 00000018H
	ret	0
$LN46@lGetPotent:
	pop	edi
	pop	esi

; 3722 : 			}
; 3723 : 		}
; 3724 : 	}
; 3725 : 
; 3726 : 	return 1;

	mov	eax, ebp
	pop	ebp
	pop	ebx

; 3727 : }

	add	esp, 24					; 00000018H
	ret	0
?lGetPotentialTradeUnitNewHomeCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPotentialTradeUnitNewHomeCity
_TEXT	ENDS
PUBLIC	?lGetPotentialAdmiralNewPort@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPotentialAdmiralNewPort
EXTRN	?canChangeAdmiralPortAt@CvUnit@@QBE_NPBVCvPlot@@HH@Z:PROC ; CvUnit::canChangeAdmiralPortAt
EXTRN	?canChangeAdmiralPort@CvUnit@@QBE_NPBVCvPlot@@@Z:PROC ; CvUnit::canChangeAdmiralPort
; Function compile flags: /Ogtpy
;	COMDAT ?lGetPotentialAdmiralNewPort@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkInstance$252350 = -24				; size = 4
_pkInstance$252335 = -20				; size = 4
_iLoopCityY$230121 = -16				; size = 4
_iLoopCityX$230120 = -12				; size = 4
_pkUnitPlot$ = -8					; size = 4
_iCityLoop$230115 = -4					; size = 4
_L$ = 8							; size = 4
?lGetPotentialAdmiralNewPort@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPotentialAdmiralNewPort, COMDAT

; 3731 : {

	sub	esp, 24					; 00000018H
	push	ebx
	push	ebp
	push	esi

; 3732 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+32]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$252335[esp+52], 0
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN47@lGetPotent@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN47@lGetPotent@2
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$252335[esp+40], eax
	test	eax, eax
	je	SHORT $LN47@lGetPotent@2
	xor	bl, bl
$LN47@lGetPotent@2:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN18@lGetPotent@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN18@lGetPotent@2:

; 3733 : 	CvUnit* pkUnit = CvLuaUnit::GetInstance(L, 2, false);

	push	esi
	call	_lua_gettop
	push	2
	xor	edi, edi
	push	esi
	mov	ebx, eax
	mov	DWORD PTR _pkInstance$252350[esp+52], edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN22@lGetPotent@2
	push	OFFSET $SG237816
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN22@lGetPotent@2
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$252350[esp+40], eax
	mov	edi, eax
$LN22@lGetPotent@2:
	push	ebx
	push	esi
	call	_lua_settop
	add	esp, 8

; 3734 : 	CvPlot* pkUnitPlot = pkUnit->plot();

	mov	ecx, edi
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot

; 3735 : 
; 3736 : 	lua_createtable(L, 0, 0);

	push	0
	mov	ebx, eax
	push	0
	push	esi
	mov	DWORD PTR _pkUnitPlot$[esp+52], ebx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 3737 : 	int index = 1;
; 3738 : 
; 3739 : 	if (pkUnit->canChangeAdmiralPort(pkUnitPlot))

	push	ebx
	mov	ecx, edi
	mov	ebp, 1
	call	?canChangeAdmiralPort@CvUnit@@QBE_NPBVCvPlot@@@Z ; CvUnit::canChangeAdmiralPort
	test	al, al
	je	$LN46@lGetPotent@2

; 3740 : 	{
; 3741 : 		int iCityLoop;
; 3742 : 		CvCity* pLoopCity = NULL;
; 3743 : 		for(pLoopCity = pkPlayer->firstCity(&iCityLoop); pLoopCity != NULL; pLoopCity = pkPlayer->nextCity(&iCityLoop))

	mov	ecx, DWORD PTR _pkInstance$252335[esp+40]
	push	0
	lea	eax, DWORD PTR _iCityLoop$230115[esp+44]
	push	eax
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	edi, eax
	test	edi, edi
	je	$LN46@lGetPotent@2
$LL5@lGetPotent@2:

; 3744 : 		{
; 3745 : 			int iLoopCityX = pLoopCity->getX();

	mov	ecx, DWORD PTR [edi+96]

; 3746 : 			int iLoopCityY = pLoopCity->getY();

	mov	edx, DWORD PTR [edi+108]
	mov	DWORD PTR _iLoopCityX$230120[esp+40], ecx

; 3747 : 
; 3748 : 			// can't change to its own home city
; 3749 : 			if (pLoopCity->plot() == pkUnitPlot)

	mov	ecx, edi
	mov	DWORD PTR _iLoopCityY$230121[esp+40], edx
	call	?plot@CvCity@@QBEPAVCvPlot@@XZ		; CvCity::plot
	cmp	eax, ebx
	je	SHORT $LN4@lGetPotent@2

; 3750 : 			{
; 3751 : 				continue;
; 3752 : 			}
; 3753 : 
; 3754 : 			if (pkUnit->canChangeAdmiralPortAt(pkUnitPlot, iLoopCityX, iLoopCityY))

	mov	eax, DWORD PTR _iLoopCityY$230121[esp+40]
	mov	ecx, DWORD PTR _iLoopCityX$230120[esp+40]
	push	eax
	push	ecx
	mov	ecx, DWORD PTR _pkInstance$252350[esp+48]
	push	ebx
	call	?canChangeAdmiralPortAt@CvUnit@@QBE_NPBVCvPlot@@HH@Z ; CvUnit::canChangeAdmiralPortAt
	test	al, al
	je	SHORT $LN4@lGetPotent@2

; 3755 : 			{
; 3756 : 				lua_createtable(L, 0, 0);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 3757 : 				const int t = lua_gettop(L);

	push	esi
	call	_lua_gettop

; 3758 : 				lua_pushinteger(L, pLoopCity->getX());

	mov	edx, DWORD PTR [edi+96]
	push	edx
	push	esi
	mov	ebx, eax
	call	_lua_pushinteger

; 3759 : 				lua_setfield(L, t, "X");

	push	OFFSET $SG230125
	push	ebx
	push	esi
	call	_lua_setfield

; 3760 : 				lua_pushinteger(L, pLoopCity->getY());

	mov	eax, DWORD PTR [edi+108]
	push	eax
	push	esi
	call	_lua_pushinteger

; 3761 : 				lua_setfield(L, t, "Y");

	push	OFFSET $SG230126
	push	ebx
	push	esi
	call	_lua_setfield

; 3762 : 				lua_rawseti(L, -2, index++);

	push	ebp
	push	-2					; fffffffeH
	push	esi
	call	_lua_rawseti
	mov	ebx, DWORD PTR _pkUnitPlot$[esp+108]
	add	esp, 68					; 00000044H
	inc	ebp
$LN4@lGetPotent@2:
	push	0
	lea	ecx, DWORD PTR _iCityLoop$230115[esp+44]
	push	ecx
	mov	ecx, DWORD PTR _pkInstance$252335[esp+48]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	edi, eax
	test	edi, edi
	jne	$LL5@lGetPotent@2

; 3763 : 			}
; 3764 : 		}
; 3765 : 	}
; 3766 : 
; 3767 : 	return 1;

	lea	eax, DWORD PTR [edi+1]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 3768 : }

	add	esp, 24					; 00000018H
	ret	0
$LN46@lGetPotent@2:
	pop	edi
	pop	esi

; 3763 : 			}
; 3764 : 		}
; 3765 : 	}
; 3766 : 
; 3767 : 	return 1;

	mov	eax, ebp
	pop	ebp
	pop	ebx

; 3768 : }

	add	esp, 24					; 00000018H
	ret	0
?lGetPotentialAdmiralNewPort@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPotentialAdmiralNewPort
_TEXT	ENDS
PUBLIC	?lGetNumAvailableTradeUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumAvailableTradeUnits
EXTRN	?nextUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z:PROC	; CvPlayer::nextUnit
EXTRN	?IsUnitIDUsed@CvGameTrade@@QAE_NH@Z:PROC	; CvGameTrade::IsUnitIDUsed
EXTRN	?getDomainType@CvUnit@@QBE?AW4DomainTypes@@XZ:PROC ; CvUnit::getDomainType
EXTRN	?isTrade@CvUnit@@QBE_NXZ:PROC			; CvUnit::isTrade
EXTRN	?firstUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z:PROC	; CvPlayer::firstUnit
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumAvailableTradeUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eDomain$ = -12						; size = 4
_pTrade$ = -8						; size = 4
_iLoopUnit$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetNumAvailableTradeUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumAvailableTradeUnits, COMDAT

; 3772 : {

	sub	esp, 12					; 0000000cH
	push	ebx
	push	ebp
	push	esi
	push	edi

; 3773 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	edi, DWORD PTR _L$[esp+24]
	push	edi
	call	_lua_gettop
	push	1
	push	edi
	mov	esi, eax
	mov	bl, 1
	xor	ebp, ebp
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN9@lGetNumAva
	push	OFFSET $SG237728
	push	1
	push	edi
	call	_lua_getfield
	push	-1
	push	edi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN9@lGetNumAva
	push	-1
	push	edi
	call	_lua_touserdata
	mov	ebp, eax
	add	esp, 8
	test	ebp, ebp
	je	SHORT $LN9@lGetNumAva
	xor	bl, bl
$LN9@lGetNumAva:
	push	esi
	push	edi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN16@lGetNumAva
	push	OFFSET $SG237734
	push	edi
	call	_luaL_error
	push	OFFSET $SG237742
	push	edi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN16@lGetNumAva:

; 3774 : 	DomainTypes eDomain = (DomainTypes)lua_tointeger(L, 2);

	push	2
	push	edi
	call	_lua_tointeger

; 3775 : 	CvGameTrade* pTrade = GC.getGame().GetGameTrade();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 8
	mov	DWORD PTR _eDomain$[esp+28], eax
	call	?GetGameTrade@CvGame@@QAEPAVCvGameTrade@@XZ ; CvGame::GetGameTrade
	mov	DWORD PTR _pTrade$[esp+28], eax

; 3776 : 
; 3777 : 	int iCount = 0;

	xor	ebx, ebx

; 3778 : 	int iLoopUnit;
; 3779 : 	CvUnit* pLoopUnit;
; 3780 : 	for (pLoopUnit = pkPlayer->firstUnit(&iLoopUnit); pLoopUnit != NULL; pLoopUnit = pkPlayer->nextUnit(&iLoopUnit))

	push	ebx
	lea	eax, DWORD PTR _iLoopUnit$[esp+32]
	push	eax
	mov	ecx, ebp
	call	?firstUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z ; CvPlayer::firstUnit
	mov	esi, eax
	test	esi, esi
	je	SHORT $LN2@lGetNumAva
$LL4@lGetNumAva:

; 3781 : 	{
; 3782 : 		if (pLoopUnit->isTrade() && pLoopUnit->getDomainType() == eDomain && !pTrade->IsUnitIDUsed(pLoopUnit->GetID()))

	mov	ecx, esi
	call	?isTrade@CvUnit@@QBE_NXZ		; CvUnit::isTrade
	test	al, al
	je	SHORT $LN3@lGetNumAva
	mov	ecx, esi
	call	?getDomainType@CvUnit@@QBE?AW4DomainTypes@@XZ ; CvUnit::getDomainType
	cmp	eax, DWORD PTR _eDomain$[esp+28]
	jne	SHORT $LN3@lGetNumAva
	mov	esi, DWORD PTR [esi+100]
	mov	ecx, DWORD PTR _pTrade$[esp+28]
	push	esi
	call	?IsUnitIDUsed@CvGameTrade@@QAE_NH@Z	; CvGameTrade::IsUnitIDUsed
	test	al, al
	jne	SHORT $LN3@lGetNumAva

; 3783 : 		{
; 3784 : 			iCount++;

	inc	ebx
$LN3@lGetNumAva:

; 3778 : 	int iLoopUnit;
; 3779 : 	CvUnit* pLoopUnit;
; 3780 : 	for (pLoopUnit = pkPlayer->firstUnit(&iLoopUnit); pLoopUnit != NULL; pLoopUnit = pkPlayer->nextUnit(&iLoopUnit))

	push	0
	lea	ecx, DWORD PTR _iLoopUnit$[esp+32]
	push	ecx
	mov	ecx, ebp
	call	?nextUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z ; CvPlayer::nextUnit
	mov	esi, eax
	test	esi, esi
	jne	SHORT $LL4@lGetNumAva
$LN2@lGetNumAva:

; 3785 : 		}
; 3786 : 	}
; 3787 : 
; 3788 : 	lua_pushinteger(L, iCount);

	push	ebx
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 3789 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3790 : }

	add	esp, 12					; 0000000cH
	ret	0
?lGetNumAvailableTradeUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumAvailableTradeUnits
_TEXT	ENDS
PUBLIC	?lGetTradeUnitType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTradeUnitType
EXTRN	?GetTradeUnit@CvPlayerTrade@@SA?AW4UnitTypes@@W4DomainTypes@@@Z:PROC ; CvPlayerTrade::GetTradeUnit
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTradeUnitType@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTradeUnitType@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTradeUnitType, COMDAT

; 3794 : {

	push	ebx
	push	ebp
	push	esi

; 3795 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetTradeU
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetTradeU
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetTradeU
	xor	bl, bl
$LN5@lGetTradeU:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetTradeU
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetTradeU:

; 3796 : 	DomainTypes eDomain = (DomainTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 3797 : 	lua_pushinteger(L, pkPlayer->GetTrade()->GetTradeUnit(eDomain));

	mov	ecx, edi
	mov	ebx, eax
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	push	ebx
	call	?GetTradeUnit@CvPlayerTrade@@SA?AW4UnitTypes@@W4DomainTypes@@@Z ; CvPlayerTrade::GetTradeUnit
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebp

; 3798 : 	return 1;

	mov	eax, 1
	pop	ebx

; 3799 : }

	ret	0
?lGetTradeUnitType@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTradeUnitType
_TEXT	ENDS
PUBLIC	?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTradeYourRoutesTTString
EXTRN	__imp_?toUTF8@String@Localization@@QAEPBDXZ:PROC
EXTRN	?isMinorCiv@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::isMinorCiv
EXTRN	?getNameKey@CvCity@@QBEPBDXZ:PROC		; CvCity::getNameKey
EXTRN	__imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z:PROC
EXTRN	__imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z:PROC
EXTRN	__imp_??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z:PROC
EXTRN	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z:PROC ; CvPlayerTrade::GetTradeConnectionValueTimes100
EXTRN	?IsTradeRouteIndexEmpty@CvGameTrade@@QAE_NH@Z:PROC ; CvGameTrade::IsTradeRouteIndexEmpty
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__ehfuncinfo$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	016H
	DD	FLAT:__unwindtable$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$4
	DD	01H
	DD	FLAT:__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$5
	DD	01H
	DD	FLAT:__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$6
	DD	01H
	DD	FLAT:__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$7
	DD	01H
	DD	FLAT:__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$8
	DD	08H
	DD	FLAT:__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$9
	DD	08H
	DD	FLAT:__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$10
	DD	08H
	DD	FLAT:__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$11
	DD	08H
	DD	FLAT:__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$12
	DD	08H
	DD	FLAT:__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$13
	DD	08H
	DD	FLAT:__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$14
	DD	08H
	DD	FLAT:__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$15
	DD	0fH
	DD	FLAT:__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$16
	DD	0fH
	DD	FLAT:__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$17
	DD	0fH
	DD	FLAT:__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$18
	DD	0fH
	DD	FLAT:__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$19
	DD	0fH
	DD	FLAT:__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$20
	DD	0fH
	DD	FLAT:__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$21
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pOriginCity$230166 = -532				; size = 4
_pOriginPlot$230162 = -532				; size = 4
_pConnection$ = -528					; size = 4
_pDestCity$230167 = -524				; size = 4
_ui$230156 = -520					; size = 4
_pkInstance$252522 = -516				; size = 4
_pTrade$ = -512						; size = 4
_strOriginYieldsStr$230170 = -508			; size = 28
_pPlayerTrade$ = -480					; size = 4
_strDestYieldsStr$230210 = -476				; size = 28
_strResult$ = -448					; size = 28
_strBuffer$230242 = -420				; size = 80
$T252473 = -340						; size = 28
$T252470 = -340						; size = 28
$T252472 = -312						; size = 28
$T252471 = -312						; size = 28
$T252475 = -284						; size = 28
$T252468 = -284						; size = 28
$T252476 = -256						; size = 28
$T252467 = -256						; size = 28
$T252477 = -228						; size = 28
$T252466 = -228						; size = 28
$T252474 = -200						; size = 28
$T252469 = -200						; size = 28
$T252482 = -172						; size = 80
$T252481 = -172						; size = 80
$T252480 = -172						; size = 80
$T252479 = -172						; size = 80
$T252478 = -172						; size = 80
$T252483 = -92						; size = 80
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTradeYourRoutesTTString, COMDAT

; 3803 : {

	push	-1
	push	__ehhandler$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 520				; 00000208H
	push	ebx
	push	ebp
	push	esi

; 3804 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+540]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	xor	edi, edi
	push	esi
	mov	ebp, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$252522[esp+560], edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN79@lGetTradeY
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN79@lGetTradeY
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	mov	DWORD PTR _pkInstance$252522[esp+548], edi
	test	edi, edi
	je	SHORT $LN79@lGetTradeY
	xor	bl, bl
$LN79@lGetTradeY:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN86@lGetTradeY
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN86@lGetTradeY:

; 3805 : 	CvGameTrade* pTrade = GC.getGame().GetGameTrade();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetGameTrade@CvGame@@QAEPAVCvGameTrade@@XZ ; CvGame::GetGameTrade
	mov	ebx, eax

; 3806 : 	CvPlayerTrade* pPlayerTrade = pkPlayer->GetTrade();

	mov	ecx, edi
	mov	DWORD PTR _pTrade$[esp+548], ebx
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade

; 3807 : 
; 3808 : 	CvString strResult = "";	

	push	OFFSET $SG230154
	lea	ecx, DWORD PTR _strResult$[esp+552]
	mov	DWORD PTR _pPlayerTrade$[esp+552], eax
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	xor	eax, eax
	mov	DWORD PTR __$EHRec$[esp+556], eax

; 3809 : 
; 3810 : 	TradeConnection* pConnection = NULL;
; 3811 : 	for (uint ui = 0; ui < pTrade->m_aTradeConnections.size(); ui++)

	mov	DWORD PTR _ui$230156[esp+548], eax
	cmp	DWORD PTR [ebx+4], eax
	jbe	$LN290@lGetTradeY
	mov	esi, eax
	jmp	SHORT $LN52@lGetTradeY
$LL286@lGetTradeY:
	mov	edi, DWORD PTR _pkInstance$252522[esp+548]
$LN52@lGetTradeY:

; 3812 : 	{
; 3813 : 		if (pTrade->IsTradeRouteIndexEmpty(ui))

	push	esi
	mov	ecx, ebx
	call	?IsTradeRouteIndexEmpty@CvGameTrade@@QAE_NH@Z ; CvGameTrade::IsTradeRouteIndexEmpty
	test	al, al
	jne	$LN51@lGetTradeY

; 3814 : 		{
; 3815 : 			continue;
; 3816 : 		}
; 3817 : 
; 3818 : 		pConnection = &(pTrade->m_aTradeConnections[ui]);
; 3819 : 		if (pConnection->m_eOriginOwner == pkPlayer->GetID())

	mov	eax, DWORD PTR [edi+44]
	mov	ecx, esi
	imul	ecx, 444				; 000001bcH
	add	ecx, DWORD PTR [ebx]
	mov	DWORD PTR _pConnection$[esp+548], ecx
	cmp	DWORD PTR [ecx+20], eax
	jne	$LN51@lGetTradeY

; 3820 : 		{
; 3821 : 			CvPlot* pOriginPlot = GC.getMap().plot(pConnection->m_iOriginX, pConnection->m_iOriginY);

	mov	eax, DWORD PTR [ecx+4]
	mov	ebp, DWORD PTR [ecx+8]
	mov	ebx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	cmp	eax, -2147483647			; 80000001H
	je	$LN105@lGetTradeY
	cmp	ebp, -2147483647			; 80000001H
	je	$LN105@lGetTradeY
	mov	dl, BYTE PTR [ebx+4056]
	mov	ecx, DWORD PTR [ebx+4020]
	test	dl, dl
	je	SHORT $LN115@lGetTradeY
	test	eax, eax
	jge	SHORT $LN117@lGetTradeY
	cdq
	idiv	ecx
	mov	esi, edx
	add	esi, ecx
	jmp	SHORT $LN119@lGetTradeY
$LN117@lGetTradeY:
	cmp	eax, ecx
	jl	SHORT $LN115@lGetTradeY
	cdq
	idiv	ecx
	mov	esi, edx
	jmp	SHORT $LN119@lGetTradeY
$LN115@lGetTradeY:
	mov	esi, eax
$LN119@lGetTradeY:
	mov	al, BYTE PTR [ebx+4057]
	mov	edi, DWORD PTR [ebx+4024]
	test	al, al
	je	SHORT $LN287@lGetTradeY
	test	ebp, ebp
	jge	SHORT $LN127@lGetTradeY
	mov	eax, ebp
	cdq
	idiv	edi
	add	edx, edi
	jmp	SHORT $LN129@lGetTradeY
$LN127@lGetTradeY:
	cmp	ebp, edi
	jl	SHORT $LN287@lGetTradeY
	mov	eax, ebp
	cdq
	idiv	edi
	jmp	SHORT $LN129@lGetTradeY
$LN287@lGetTradeY:
	mov	edx, ebp
$LN129@lGetTradeY:
	test	esi, esi
	jl	SHORT $LN109@lGetTradeY
	cmp	esi, ecx
	jge	SHORT $LN109@lGetTradeY
	test	edx, edx
	jl	SHORT $LN109@lGetTradeY
	cmp	edx, edi
	jge	SHORT $LN109@lGetTradeY
	imul	ecx, edx
	add	ecx, esi
	imul	ecx, 484				; 000001e4H
	add	ecx, DWORD PTR [ebx+4068]
	mov	DWORD PTR _pOriginPlot$230162[esp+548], ecx
	mov	ecx, DWORD PTR _pConnection$[esp+548]
	jmp	SHORT $LN107@lGetTradeY
$LN109@lGetTradeY:
	mov	ecx, DWORD PTR _pConnection$[esp+548]
$LN105@lGetTradeY:
	mov	DWORD PTR _pOriginPlot$230162[esp+548], 0
$LN107@lGetTradeY:

; 3822 : 			CvPlot* pDestPlot = GC.getMap().plot(pConnection->m_iDestX, pConnection->m_iDestY);

	mov	eax, DWORD PTR [ecx+12]
	mov	ebp, DWORD PTR [ecx+16]
	cmp	eax, -2147483647			; 80000001H
	je	$LN145@lGetTradeY
	cmp	ebp, -2147483647			; 80000001H
	je	SHORT $LN145@lGetTradeY
	mov	dl, BYTE PTR [ebx+4056]
	mov	ecx, DWORD PTR [ebx+4020]
	test	dl, dl
	je	SHORT $LN155@lGetTradeY
	test	eax, eax
	jge	SHORT $LN157@lGetTradeY
	cdq
	idiv	ecx
	mov	esi, edx
	add	esi, ecx
	jmp	SHORT $LN159@lGetTradeY
$LN157@lGetTradeY:
	cmp	eax, ecx
	jl	SHORT $LN155@lGetTradeY
	cdq
	idiv	ecx
	mov	esi, edx
	jmp	SHORT $LN159@lGetTradeY
$LN155@lGetTradeY:
	mov	esi, eax
$LN159@lGetTradeY:
	mov	al, BYTE PTR [ebx+4057]
	mov	edi, DWORD PTR [ebx+4024]
	test	al, al
	je	SHORT $LN165@lGetTradeY
	test	ebp, ebp
	jge	SHORT $LN167@lGetTradeY
	mov	eax, ebp
	cdq
	idiv	edi
	add	edx, edi
	jmp	SHORT $LN169@lGetTradeY
$LN167@lGetTradeY:
	cmp	ebp, edi
	jl	SHORT $LN165@lGetTradeY
	mov	eax, ebp
	cdq
	idiv	edi
	jmp	SHORT $LN169@lGetTradeY
$LN165@lGetTradeY:
	mov	edx, ebp
$LN169@lGetTradeY:
	test	esi, esi
	jl	SHORT $LN145@lGetTradeY
	cmp	esi, ecx
	jge	SHORT $LN145@lGetTradeY
	test	edx, edx
	jl	SHORT $LN145@lGetTradeY
	cmp	edx, edi
	jge	SHORT $LN145@lGetTradeY
	imul	ecx, edx
	add	ecx, esi
	imul	ecx, 484				; 000001e4H
	add	ecx, DWORD PTR [ebx+4068]
	mov	esi, ecx
	jmp	SHORT $LN147@lGetTradeY
$LN145@lGetTradeY:
	xor	esi, esi
$LN147@lGetTradeY:

; 3823 : 			if (pOriginPlot == NULL || pDestPlot == NULL)

	cmp	DWORD PTR _pOriginPlot$230162[esp+548], 0
	je	$LN51@lGetTradeY
	test	esi, esi
	je	$LN51@lGetTradeY

; 3824 : 			{
; 3825 : 				continue;
; 3826 : 			}
; 3827 : 
; 3828 : 			CvCity* pOriginCity = pOriginPlot->getPlotCity();

	mov	ecx, DWORD PTR _pOriginPlot$230162[esp+548]
	mov	eax, DWORD PTR [ecx+104]
	test	eax, eax
	jl	SHORT $LN288@lGetTradeY
	cmp	eax, 64					; 00000040H
	jge	SHORT $LN288@lGetTradeY
	mov	ecx, DWORD PTR [ecx+108]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	ecx
	mov	ecx, eax
	call	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z	; CvPlayer::getCity
	mov	DWORD PTR _pOriginCity$230166[esp+548], eax
	jmp	SHORT $LN184@lGetTradeY
$LN288@lGetTradeY:
	mov	DWORD PTR _pOriginCity$230166[esp+548], 0
$LN184@lGetTradeY:

; 3829 : 			CvCity* pDestCity = pDestPlot->getPlotCity();

	mov	eax, DWORD PTR [esi+104]
	test	eax, eax
	jl	SHORT $LN188@lGetTradeY
	cmp	eax, 64					; 00000040H
	jge	SHORT $LN188@lGetTradeY
	mov	edx, DWORD PTR [esi+108]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	edx
	mov	ecx, eax
	call	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z	; CvPlayer::getCity
	jmp	SHORT $LN293@lGetTradeY
$LN188@lGetTradeY:
	xor	eax, eax
$LN293@lGetTradeY:

; 3830 : 
; 3831 : 			if (pOriginCity == NULL || pDestCity == NULL)

	cmp	DWORD PTR _pOriginCity$230166[esp+548], 0
	mov	DWORD PTR _pDestCity$230167[esp+548], eax
	je	$LN51@lGetTradeY
	test	eax, eax
	je	$LN51@lGetTradeY

; 3832 : 			{
; 3833 : 				continue;
; 3834 : 			}
; 3835 : 
; 3836 : 
; 3837 : 			CvString strOriginYieldsStr = "";

	push	OFFSET $SG230171
	lea	ecx, DWORD PTR _strOriginYieldsStr$230170[esp+552]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z

; 3838 : 			for (uint uiYield = 0; uiYield < NUM_YIELD_TYPES; uiYield++)

	mov	ebp, DWORD PTR _pConnection$[esp+548]
	mov	ebx, DWORD PTR _pPlayerTrade$[esp+548]
	mov	BYTE PTR __$EHRec$[esp+556], 1
	xor	edi, edi
	npad	3
$LL43@lGetTradeY:

; 3839 : 			{
; 3840 : 				YieldTypes eYield = (YieldTypes)uiYield;
; 3841 : 				int iYieldQuantity = pPlayerTrade->GetTradeConnectionValueTimes100(*pConnection, eYield, true);

	push	1
	push	edi
	push	ebp
	mov	ecx, ebx
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	mov	esi, eax

; 3842 : 				if (iYieldQuantity != 0)

	test	esi, esi
	je	$LN42@lGetTradeY

; 3843 : 				{
; 3844 : 					if (strOriginYieldsStr != "") 

	lea	eax, DWORD PTR _strOriginYieldsStr$230170[esp+548]
	push	OFFSET $SG230181
	push	eax
	call	DWORD PTR __imp_??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
	add	esp, 8
	test	al, al
	je	SHORT $LN39@lGetTradeY

; 3845 : 					{
; 3846 : 						strOriginYieldsStr += ", ";

	push	OFFSET $SG230182
	lea	ecx, DWORD PTR _strOriginYieldsStr$230170[esp+552]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN39@lGetTradeY:

; 3847 : 					}
; 3848 : 
; 3849 : 					switch (eYield)

	cmp	edi, 5
	ja	$LN42@lGetTradeY
	jmp	DWORD PTR $LN297@lGetTradeY[edi*4]
$LN36@lGetTradeY:

; 3850 : 					{
; 3851 : 					case YIELD_FOOD:
; 3852 : 						strOriginYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_FOOD_YIELD_TT", iYieldQuantity / 100);

	mov	eax, 1374389535				; 51eb851fH
	imul	esi
	sar	edx, 5
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	push	ecx
	lea	edx, DWORD PTR $T252466[esp+552]
	push	OFFSET $SG230194
	push	edx
	call	??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z ; GetLocalizedText<int>
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _strOriginYieldsStr$230170[esp+552]
	mov	BYTE PTR __$EHRec$[esp+560], 2
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T252466[esp+548]

; 3853 : 						break;

	jmp	$LN294@lGetTradeY
$LN35@lGetTradeY:

; 3854 : 					case YIELD_PRODUCTION:
; 3855 : 						strOriginYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_PRODUCTION_YIELD_TT", iYieldQuantity / 100);

	mov	eax, 1374389535				; 51eb851fH
	imul	esi
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	push	eax
	lea	ecx, DWORD PTR $T252467[esp+552]
	push	OFFSET $SG230197
	push	ecx
	call	??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z ; GetLocalizedText<int>
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _strOriginYieldsStr$230170[esp+552]
	mov	BYTE PTR __$EHRec$[esp+560], 3
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T252467[esp+548]

; 3856 : 						break;

	jmp	$LN294@lGetTradeY
$LN34@lGetTradeY:

; 3857 : 					case YIELD_GOLD:
; 3858 : 						strOriginYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_GOLD_YIELD_TT", iYieldQuantity / 100);

	mov	eax, 1374389535				; 51eb851fH
	imul	esi
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	push	eax
	lea	ecx, DWORD PTR $T252468[esp+552]
	push	OFFSET $SG230200
	push	ecx
	call	??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z ; GetLocalizedText<int>
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _strOriginYieldsStr$230170[esp+552]
	mov	BYTE PTR __$EHRec$[esp+560], 4
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T252468[esp+548]

; 3859 : 						break;

	jmp	$LN294@lGetTradeY
$LN33@lGetTradeY:

; 3860 : 					case YIELD_SCIENCE:
; 3861 : 						strOriginYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_SCIENCE_YIELD_TT", iYieldQuantity / 100);

	mov	eax, 1374389535				; 51eb851fH
	imul	esi
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	push	eax
	lea	ecx, DWORD PTR $T252469[esp+552]
	push	OFFSET $SG230203
	push	ecx
	call	??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z ; GetLocalizedText<int>
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _strOriginYieldsStr$230170[esp+552]
	mov	BYTE PTR __$EHRec$[esp+560], 5
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T252469[esp+548]

; 3862 : 						break;

	jmp	$LN294@lGetTradeY
$LN32@lGetTradeY:

; 3863 : 					case YIELD_CULTURE:
; 3864 : 						strOriginYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_CULTURE_YIELD_TT", iYieldQuantity / 100);

	mov	eax, 1374389535				; 51eb851fH
	imul	esi
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	push	eax
	lea	ecx, DWORD PTR $T252470[esp+552]
	push	OFFSET $SG230206
	push	ecx
	call	??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z ; GetLocalizedText<int>
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _strOriginYieldsStr$230170[esp+552]
	mov	BYTE PTR __$EHRec$[esp+560], 6
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T252470[esp+548]

; 3865 : 						break;

	jmp	SHORT $LN294@lGetTradeY
$LN31@lGetTradeY:

; 3866 : 					case YIELD_FAITH:
; 3867 : 						strOriginYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_FAITH_YIELD_TT", iYieldQuantity / 100);

	mov	eax, 1374389535				; 51eb851fH
	imul	esi
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	push	eax
	lea	ecx, DWORD PTR $T252471[esp+552]
	push	OFFSET $SG230209
	push	ecx
	call	??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z ; GetLocalizedText<int>
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _strOriginYieldsStr$230170[esp+552]
	mov	BYTE PTR __$EHRec$[esp+560], 7
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T252471[esp+548]
$LN294@lGetTradeY:
	mov	BYTE PTR __$EHRec$[esp+556], 1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN42@lGetTradeY:
	inc	edi
	cmp	edi, 6
	jb	$LL43@lGetTradeY

; 3868 : 						break;
; 3869 : 					}
; 3870 : 				}
; 3871 : 			}
; 3872 : 
; 3873 : 			CvString strDestYieldsStr = "";

	push	OFFSET $SG230211
	lea	ecx, DWORD PTR _strDestYieldsStr$230210[esp+552]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[esp+556], 8

; 3874 : 			for (uint uiYield = 0; uiYield < NUM_YIELD_TYPES; uiYield++)

	xor	esi, esi
$LL30@lGetTradeY:

; 3875 : 			{
; 3876 : 				YieldTypes eYield = (YieldTypes)uiYield;
; 3877 : 				int iYieldQuantity = pPlayerTrade->GetTradeConnectionValueTimes100(*pConnection, eYield, false);

	push	0
	push	esi
	push	ebp
	mov	ecx, ebx
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	mov	ecx, eax

; 3878 : 				if (iYieldQuantity != 0)

	test	ecx, ecx
	je	$LN29@lGetTradeY

; 3879 : 				{
; 3880 : 					switch (eYield)

	cmp	esi, 5
	ja	$LN29@lGetTradeY
	jmp	DWORD PTR $LN298@lGetTradeY[esi*4]
$LN24@lGetTradeY:

; 3881 : 					{
; 3882 : 					case YIELD_FOOD:
; 3883 : 						strDestYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_FOOD_YIELD_TT", iYieldQuantity / 100);

	mov	eax, 1374389535				; 51eb851fH
	imul	ecx
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	push	eax
	lea	ecx, DWORD PTR $T252472[esp+552]
	push	OFFSET $SG230226
	push	ecx
	call	??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z ; GetLocalizedText<int>
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _strDestYieldsStr$230210[esp+552]
	mov	BYTE PTR __$EHRec$[esp+560], 9
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T252472[esp+548]

; 3884 : 						break;

	jmp	$LN295@lGetTradeY
$LN23@lGetTradeY:

; 3885 : 					case YIELD_PRODUCTION:
; 3886 : 						strDestYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_PRODUCTION_YIELD_TT", iYieldQuantity / 100);

	mov	eax, 1374389535				; 51eb851fH
	imul	ecx
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	push	eax
	lea	ecx, DWORD PTR $T252473[esp+552]
	push	OFFSET $SG230229
	push	ecx
	call	??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z ; GetLocalizedText<int>
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _strDestYieldsStr$230210[esp+552]
	mov	BYTE PTR __$EHRec$[esp+560], 10		; 0000000aH
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T252473[esp+548]

; 3887 : 						break;

	jmp	$LN295@lGetTradeY
$LN22@lGetTradeY:

; 3888 : 					case YIELD_GOLD:
; 3889 : 						strDestYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_GOLD_YIELD_TT", iYieldQuantity / 100);

	mov	eax, 1374389535				; 51eb851fH
	imul	ecx
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	push	eax
	lea	ecx, DWORD PTR $T252474[esp+552]
	push	OFFSET $SG230232
	push	ecx
	call	??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z ; GetLocalizedText<int>
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _strDestYieldsStr$230210[esp+552]
	mov	BYTE PTR __$EHRec$[esp+560], 11		; 0000000bH
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T252474[esp+548]

; 3890 : 						break;

	jmp	$LN295@lGetTradeY
$LN21@lGetTradeY:

; 3891 : 					case YIELD_SCIENCE:
; 3892 : 						strDestYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_SCIENCE_YIELD_TT", iYieldQuantity / 100);

	mov	eax, 1374389535				; 51eb851fH
	imul	ecx
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	push	eax
	lea	ecx, DWORD PTR $T252475[esp+552]
	push	OFFSET $SG230235
	push	ecx
	call	??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z ; GetLocalizedText<int>
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _strDestYieldsStr$230210[esp+552]
	mov	BYTE PTR __$EHRec$[esp+560], 12		; 0000000cH
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T252475[esp+548]

; 3893 : 						break;

	jmp	$LN295@lGetTradeY
$LN20@lGetTradeY:

; 3894 : 					case YIELD_CULTURE:
; 3895 : 						strDestYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_CULTURE_YIELD_TT", iYieldQuantity / 100);

	mov	eax, 1374389535				; 51eb851fH
	imul	ecx
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	push	eax
	lea	ecx, DWORD PTR $T252476[esp+552]
	push	OFFSET $SG230238
	push	ecx
	call	??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z ; GetLocalizedText<int>
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _strDestYieldsStr$230210[esp+552]
	mov	BYTE PTR __$EHRec$[esp+560], 13		; 0000000dH
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T252476[esp+548]

; 3896 : 						break;

	jmp	SHORT $LN295@lGetTradeY
$LN19@lGetTradeY:

; 3897 : 					case YIELD_FAITH:
; 3898 : 						strDestYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_FAITH_YIELD_TT", iYieldQuantity / 100);

	mov	eax, 1374389535				; 51eb851fH
	imul	ecx
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	push	eax
	lea	ecx, DWORD PTR $T252477[esp+552]
	push	OFFSET $SG230241
	push	ecx
	call	??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z ; GetLocalizedText<int>
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _strDestYieldsStr$230210[esp+552]
	mov	BYTE PTR __$EHRec$[esp+560], 14		; 0000000eH
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T252477[esp+548]
$LN295@lGetTradeY:
	mov	BYTE PTR __$EHRec$[esp+556], 8
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN29@lGetTradeY:
	inc	esi
	cmp	esi, 6
	jb	$LL30@lGetTradeY

; 3899 : 						break;
; 3900 : 					}
; 3901 : 				}
; 3902 : 			}
; 3903 : 
; 3904 : 			//CvUnitEntry* pUnitEntry = GC.getUnitInfo(pPlayerTrade->GetTradeUnit(pConnection->m_eDomain));
; 3905 : 
; 3906 : 			Localization::String strBuffer;

	lea	ecx, DWORD PTR _strBuffer$230242[esp+548]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ

; 3907 : 			if (pConnection->m_eConnectionType == TRADE_CONNECTION_INTERNATIONAL)

	cmp	DWORD PTR [ebp+32], 0

; 3908 : 			{
; 3909 : 				if (strOriginYieldsStr != "" && strDestYieldsStr != "")

	mov	ebx, DWORD PTR __imp_??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
	mov	BYTE PTR __$EHRec$[esp+556], 15		; 0000000fH
	jne	$LN18@lGetTradeY
	lea	edx, DWORD PTR _strOriginYieldsStr$230170[esp+548]
	push	OFFSET $SG230245
	push	edx
	call	ebx
	add	esp, 8
	test	al, al
	je	SHORT $LN17@lGetTradeY
	lea	eax, DWORD PTR _strDestYieldsStr$230210[esp+548]
	push	OFFSET $SG230246
	push	eax
	call	ebx
	add	esp, 8
	test	al, al
	je	SHORT $LN17@lGetTradeY

; 3910 : 				{
; 3911 : 					strBuffer = Localization::Lookup("TXT_KEY_TOP_PANEL_ITR_YOUR_ROUTE_BOTH_TT");

	lea	ecx, DWORD PTR $T252478[esp+548]
	push	OFFSET $SG230248
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strBuffer$230242[esp+552]
	mov	BYTE PTR __$EHRec$[esp+560], 16		; 00000010H
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T252478[esp+548]
	jmp	$LN296@lGetTradeY
$LN17@lGetTradeY:

; 3912 : 				}
; 3913 : 				else if (strOriginYieldsStr != "")

	lea	edx, DWORD PTR _strOriginYieldsStr$230170[esp+548]
	push	OFFSET $SG230251
	push	edx
	call	ebx
	add	esp, 8
	test	al, al
	je	SHORT $LN15@lGetTradeY

; 3914 : 				{
; 3915 : 					strBuffer = Localization::Lookup("TXT_KEY_TOP_PANEL_ITR_YOUR_ROUTE_ONLY_ORIGIN_TT");

	lea	eax, DWORD PTR $T252479[esp+548]
	push	OFFSET $SG230253
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strBuffer$230242[esp+552]
	mov	BYTE PTR __$EHRec$[esp+560], 17		; 00000011H
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T252479[esp+548]
	jmp	$LN296@lGetTradeY
$LN15@lGetTradeY:

; 3916 : 				}
; 3917 : 				else if (strDestYieldsStr != "")

	lea	ecx, DWORD PTR _strDestYieldsStr$230210[esp+548]
	push	OFFSET $SG230256
	push	ecx
	call	ebx
	add	esp, 8
	test	al, al
	je	$LN289@lGetTradeY

; 3918 : 				{
; 3919 : 					strBuffer = Localization::Lookup("TXT_KEY_TOP_PANEL_ITR_YOUR_ROUTE_ONLY_DEST_TT");

	lea	edx, DWORD PTR $T252480[esp+548]
	push	OFFSET $SG230258
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strBuffer$230242[esp+552]
	mov	BYTE PTR __$EHRec$[esp+560], 18		; 00000012H
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T252480[esp+548]

; 3920 : 				}
; 3921 : 			}
; 3922 : 			else

	jmp	$LN296@lGetTradeY
$LN18@lGetTradeY:

; 3923 : 			{
; 3924 : 				if (strOriginYieldsStr != "" && strDestYieldsStr != "")

	lea	eax, DWORD PTR _strOriginYieldsStr$230170[esp+548]
	push	OFFSET $SG230261
	push	eax
	call	ebx
	add	esp, 8
	test	al, al
	je	SHORT $LN11@lGetTradeY
	lea	ecx, DWORD PTR _strDestYieldsStr$230210[esp+548]
	push	OFFSET $SG230262
	push	ecx
	call	ebx
	add	esp, 8
	test	al, al
	je	SHORT $LN11@lGetTradeY

; 3925 : 				{
; 3926 : 					strBuffer = Localization::Lookup("TXT_KEY_TOP_PANEL_ITR_INTERNAL_YOUR_ROUTE_BOTH_TT");

	lea	edx, DWORD PTR $T252481[esp+548]
	push	OFFSET $SG230264
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strBuffer$230242[esp+552]
	mov	BYTE PTR __$EHRec$[esp+560], 19		; 00000013H
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T252481[esp+548]
	jmp	$LN296@lGetTradeY
$LN11@lGetTradeY:

; 3927 : 				}
; 3928 : 				else if (strOriginYieldsStr != "")

	lea	eax, DWORD PTR _strOriginYieldsStr$230170[esp+548]
	push	OFFSET $SG230267
	push	eax
	call	ebx
	add	esp, 8
	test	al, al
	je	SHORT $LN9@lGetTradeY

; 3929 : 				{
; 3930 : 					strBuffer = Localization::Lookup("TXT_KEY_TOP_PANEL_ITR_INTERNAL_YOUR_ROUTE_ONLY_ORIGIN_TT");

	lea	ecx, DWORD PTR $T252482[esp+548]
	push	OFFSET $SG230269
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strBuffer$230242[esp+552]
	mov	BYTE PTR __$EHRec$[esp+560], 20		; 00000014H
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T252482[esp+548]
	jmp	SHORT $LN296@lGetTradeY
$LN9@lGetTradeY:

; 3931 : 				}
; 3932 : 				else if (strDestYieldsStr != "")

	lea	edx, DWORD PTR _strDestYieldsStr$230210[esp+548]
	push	OFFSET $SG230272
	push	edx
	call	ebx
	add	esp, 8
	test	al, al
	je	SHORT $LN289@lGetTradeY

; 3933 : 				{
; 3934 : 					strBuffer = Localization::Lookup("TXT_KEY_TOP_PANEL_ITR_INTERNAL_YOUR_ROUTE_ONLY_DEST_TT");

	lea	eax, DWORD PTR $T252483[esp+548]
	push	OFFSET $SG230274
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strBuffer$230242[esp+552]
	mov	BYTE PTR __$EHRec$[esp+560], 21		; 00000015H
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T252483[esp+548]
$LN296@lGetTradeY:
	mov	BYTE PTR __$EHRec$[esp+556], 15		; 0000000fH
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN289@lGetTradeY:

; 3935 : 				}
; 3936 : 			}
; 3937 : 
; 3938 : 			strBuffer << pOriginCity->getNameKey();

	mov	ecx, DWORD PTR _pOriginCity$230166[esp+548]
	call	?getNameKey@CvCity@@QBEPBDXZ		; CvCity::getNameKey
	mov	esi, DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NPBD@Z
	push	eax
	lea	ecx, DWORD PTR _strBuffer$230242[esp+552]
	call	esi

; 3939 : 			if (strOriginYieldsStr != "")

	lea	ecx, DWORD PTR _strOriginYieldsStr$230170[esp+548]
	push	OFFSET $SG230282
	push	ecx
	call	ebx
	add	esp, 8
	test	al, al
	je	SHORT $LN241@lGetTradeY

; 3940 : 			{
; 3941 : 				strBuffer << strOriginYieldsStr;

	lea	ecx, DWORD PTR _strOriginYieldsStr$230170[esp+548]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strBuffer$230242[esp+552]
	call	esi
$LN241@lGetTradeY:

; 3942 : 			}
; 3943 : 			
; 3944 : 			if (pConnection->m_eConnectionType == TRADE_CONNECTION_INTERNATIONAL)

	cmp	DWORD PTR [ebp+32], 0

; 3945 : 			{
; 3946 : 				if (GET_PLAYER(pDestCity->getOwner()).isMinorCiv())

	mov	edi, DWORD PTR _pDestCity$230167[esp+548]
	jne	SHORT $LN259@lGetTradeY
	mov	eax, DWORD PTR [edi+84]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	ecx, eax
	call	?isMinorCiv@CvPlayer@@QBE_NXZ		; CvPlayer::isMinorCiv
	test	al, al
	je	SHORT $LN4@lGetTradeY

; 3947 : 				{
; 3948 : 					strBuffer << "TXT_KEY_TOP_PANEL_ITR_CITY_STATE_TT";

	push	35					; 00000023H
	push	OFFSET $SG230301
	lea	ecx, DWORD PTR _strBuffer$230242[esp+556]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NPBDI@Z

; 3949 : 				}
; 3950 : 				else

	jmp	SHORT $LN259@lGetTradeY
$LN4@lGetTradeY:

; 3951 : 				{
; 3952 : 					strBuffer << GET_PLAYER(pDestCity->getOwner()).getCivilizationShortDescription();

	mov	eax, DWORD PTR [edi+84]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	ecx, eax
	call	?getCivilizationShortDescription@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescription
	push	eax
	lea	ecx, DWORD PTR _strBuffer$230242[esp+552]
	call	esi
$LN259@lGetTradeY:

; 3953 : 				}
; 3954 : 			}
; 3955 : 
; 3956 : 			strBuffer << pDestCity->getNameKey();

	mov	ecx, edi
	call	?getNameKey@CvCity@@QBEPBDXZ		; CvCity::getNameKey
	push	eax
	lea	ecx, DWORD PTR _strBuffer$230242[esp+552]
	call	esi

; 3957 : 			if (strDestYieldsStr != "")

	lea	edx, DWORD PTR _strDestYieldsStr$230210[esp+548]
	push	OFFSET $SG230306
	push	edx
	call	ebx
	add	esp, 8
	test	al, al
	je	SHORT $LN263@lGetTradeY

; 3958 : 			{
; 3959 : 				strBuffer << strDestYieldsStr;

	lea	ecx, DWORD PTR _strDestYieldsStr$230210[esp+548]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strBuffer$230242[esp+552]
	call	esi
$LN263@lGetTradeY:

; 3960 : 			}
; 3961 : 
; 3962 : 			if (strResult != "")

	lea	eax, DWORD PTR _strResult$[esp+548]
	push	OFFSET $SG230308
	push	eax
	call	ebx
	add	esp, 8
	test	al, al
	je	SHORT $LN1@lGetTradeY

; 3963 : 			{
; 3964 : 				strResult += "[NEWLINE]";

	push	OFFSET $SG230309
	lea	ecx, DWORD PTR _strResult$[esp+552]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN1@lGetTradeY:

; 3965 : 			}
; 3966 : 
; 3967 : 			strResult += strBuffer.toUTF8();

	lea	ecx, DWORD PTR _strBuffer$230242[esp+548]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strResult$[esp+552]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 3968 : 		}

	lea	ecx, DWORD PTR _strBuffer$230242[esp+548]
	mov	BYTE PTR __$EHRec$[esp+556], 8
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	lea	ecx, DWORD PTR _strDestYieldsStr$230210[esp+548]
	mov	BYTE PTR __$EHRec$[esp+556], 1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR _strOriginYieldsStr$230170[esp+548]
	mov	BYTE PTR __$EHRec$[esp+556], 0
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN51@lGetTradeY:
	mov	esi, DWORD PTR _ui$230156[esp+548]
	mov	ebx, DWORD PTR _pTrade$[esp+548]
	inc	esi
	mov	DWORD PTR _ui$230156[esp+548], esi
	cmp	esi, DWORD PTR [ebx+4]
	jb	$LL286@lGetTradeY

; 3809 : 
; 3810 : 	TradeConnection* pConnection = NULL;
; 3811 : 	for (uint ui = 0; ui < pTrade->m_aTradeConnections.size(); ui++)

	mov	esi, DWORD PTR _L$[esp+544]
$LN290@lGetTradeY:

; 3969 : 	}
; 3970 : 	
; 3971 : 	lua_pushstring(L, strResult);

	lea	ecx, DWORD PTR _strResult$[esp+548]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8

; 3972 : 
; 3973 : 	return 1;

	lea	ecx, DWORD PTR _strResult$[esp+548]
	mov	DWORD PTR __$EHRec$[esp+556], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 3974 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+548]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 532				; 00000214H
	ret	0
	npad	3
$LN297@lGetTradeY:
	DD	$LN36@lGetTradeY
	DD	$LN35@lGetTradeY
	DD	$LN34@lGetTradeY
	DD	$LN33@lGetTradeY
	DD	$LN32@lGetTradeY
	DD	$LN31@lGetTradeY
$LN298@lGetTradeY:
	DD	$LN24@lGetTradeY
	DD	$LN23@lGetTradeY
	DD	$LN22@lGetTradeY
	DD	$LN21@lGetTradeY
	DD	$LN20@lGetTradeY
	DD	$LN19@lGetTradeY
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _strResult$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR _strOriginYieldsStr$230170[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$2:
	lea	ecx, DWORD PTR $T252466[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$3:
	lea	ecx, DWORD PTR $T252467[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$4:
	lea	ecx, DWORD PTR $T252468[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$5:
	lea	ecx, DWORD PTR $T252469[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$6:
	lea	ecx, DWORD PTR $T252470[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$7:
	lea	ecx, DWORD PTR $T252471[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$8:
	lea	ecx, DWORD PTR _strDestYieldsStr$230210[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$9:
	lea	ecx, DWORD PTR $T252472[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$10:
	lea	ecx, DWORD PTR $T252473[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$11:
	lea	ecx, DWORD PTR $T252474[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$12:
	lea	ecx, DWORD PTR $T252475[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$13:
	lea	ecx, DWORD PTR $T252476[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$14:
	lea	ecx, DWORD PTR $T252477[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$15:
	lea	ecx, DWORD PTR _strBuffer$230242[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$16:
	lea	ecx, DWORD PTR $T252478[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$17:
	lea	ecx, DWORD PTR $T252479[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$18:
	lea	ecx, DWORD PTR $T252480[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$19:
	lea	ecx, DWORD PTR $T252481[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$20:
	lea	ecx, DWORD PTR $T252482[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$21:
	lea	ecx, DWORD PTR $T252483[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__ehhandler$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTradeYourRoutesTTString
PUBLIC	?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTradeToYouRoutesTTString
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__ehfuncinfo$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	0dH
	DD	FLAT:__unwindtable$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$4
	DD	02H
	DD	FLAT:__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$5
	DD	02H
	DD	FLAT:__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$6
	DD	02H
	DD	FLAT:__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$7
	DD	02H
	DD	FLAT:__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$8
	DD	02H
	DD	FLAT:__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$9
	DD	09H
	DD	FLAT:__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$10
	DD	09H
	DD	FLAT:__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$11
	DD	09H
	DD	FLAT:__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$12
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pOriginCity$230331 = -536				; size = 4
_pOriginPlot$230327 = -536				; size = 4
tv1203 = -532						; size = 4
_ui$230320 = -528					; size = 4
_pDestCity$230332 = -524				; size = 4
_pConnection$ = -520					; size = 4
_pkInstance$253000 = -516				; size = 4
_pTrade$ = -512						; size = 4
_pPlayerTrade$ = -508					; size = 4
_strDestYieldsStr$230337 = -504				; size = 28
_strOriginYieldsStr$230335 = -476			; size = 28
_strResult$ = -448					; size = 28
_strBuffer$230372 = -420				; size = 80
$T252960 = -340						; size = 28
$T252962 = -312						; size = 28
$T252959 = -284						; size = 28
$T252958 = -256						; size = 28
$T252961 = -228						; size = 28
$T252957 = -200						; size = 28
$T252964 = -172						; size = 80
$T252963 = -172						; size = 80
$T252965 = -92						; size = 80
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTradeToYouRoutesTTString, COMDAT

; 3978 : {

	push	-1
	push	__ehhandler$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 524				; 0000020cH
	push	ebx
	push	ebp
	push	esi

; 3979 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+544]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	xor	edi, edi
	push	esi
	mov	ebp, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$253000[esp+564], edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN52@lGetTradeT
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN52@lGetTradeT
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	mov	DWORD PTR _pkInstance$253000[esp+552], edi
	test	edi, edi
	je	SHORT $LN52@lGetTradeT
	xor	bl, bl
$LN52@lGetTradeT:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN59@lGetTradeT
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN59@lGetTradeT:

; 3980 : 	CvGameTrade* pTrade = GC.getGame().GetGameTrade();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetGameTrade@CvGame@@QAEPAVCvGameTrade@@XZ ; CvGame::GetGameTrade
	mov	ebx, eax

; 3981 : 	CvPlayerTrade* pPlayerTrade = pkPlayer->GetTrade();

	mov	ecx, edi
	mov	DWORD PTR _pTrade$[esp+552], ebx
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade

; 3982 : 
; 3983 : 	CvString strResult = "";	

	push	OFFSET $SG230318
	lea	ecx, DWORD PTR _strResult$[esp+556]
	mov	DWORD PTR _pPlayerTrade$[esp+556], eax
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	xor	eax, eax
	mov	DWORD PTR __$EHRec$[esp+560], eax

; 3984 : 
; 3985 : 	TradeConnection* pConnection = NULL;
; 3986 : 	for (uint ui = 0; ui < pTrade->m_aTradeConnections.size(); ui++)

	mov	DWORD PTR _ui$230320[esp+552], eax
	cmp	DWORD PTR [ebx+4], eax
	jbe	$LN32@lGetTradeT
	mov	DWORD PTR tv1203[esp+552], eax
	mov	esi, ebx
	jmp	SHORT $LN34@lGetTradeT
	npad	6
$LL229@lGetTradeT:

; 3980 : 	CvGameTrade* pTrade = GC.getGame().GetGameTrade();

	mov	edi, DWORD PTR _pkInstance$253000[esp+552]
$LN34@lGetTradeT:

; 3987 : 	{
; 3988 : 		if (pTrade->IsTradeRouteIndexEmpty(ui))

	push	eax
	mov	ecx, esi
	call	?IsTradeRouteIndexEmpty@CvGameTrade@@QAE_NH@Z ; CvGameTrade::IsTradeRouteIndexEmpty
	test	al, al
	jne	$LN33@lGetTradeT

; 3989 : 		{
; 3990 : 			continue;
; 3991 : 		}
; 3992 : 
; 3993 : 		pConnection = &(pTrade->m_aTradeConnections[ui]);

	mov	ecx, DWORD PTR [esi]
	add	ecx, DWORD PTR tv1203[esp+552]

; 3994 : 
; 3995 : 		// don't include internal trade, but does this not count teams sharing stuff between each other
; 3996 : 		if (pConnection->m_eConnectionType != TRADE_CONNECTION_INTERNATIONAL)

	cmp	DWORD PTR [ecx+32], 0
	mov	DWORD PTR _pConnection$[esp+552], ecx
	jne	$LN33@lGetTradeT

; 3997 : 		{
; 3998 : 			continue;
; 3999 : 		}
; 4000 : 
; 4001 : 		if (pConnection->m_eDestOwner == pkPlayer->GetID())

	mov	eax, DWORD PTR [edi+44]
	cmp	DWORD PTR [ecx+24], eax
	jne	$LN33@lGetTradeT

; 4002 : 		{
; 4003 : 			CvPlot* pOriginPlot = GC.getMap().plot(pConnection->m_iOriginX, pConnection->m_iOriginY);

	mov	eax, DWORD PTR [ecx+4]
	mov	ebp, DWORD PTR [ecx+8]
	mov	ebx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	cmp	eax, -2147483647			; 80000001H
	je	$LN78@lGetTradeT
	cmp	ebp, -2147483647			; 80000001H
	je	$LN78@lGetTradeT
	mov	dl, BYTE PTR [ebx+4056]
	mov	ecx, DWORD PTR [ebx+4020]
	test	dl, dl
	je	SHORT $LN88@lGetTradeT
	test	eax, eax
	jge	SHORT $LN90@lGetTradeT
	cdq
	idiv	ecx
	mov	esi, edx
	add	esi, ecx
	jmp	SHORT $LN92@lGetTradeT
$LN90@lGetTradeT:
	cmp	eax, ecx
	jl	SHORT $LN88@lGetTradeT
	cdq
	idiv	ecx
	mov	esi, edx
	jmp	SHORT $LN92@lGetTradeT
$LN88@lGetTradeT:
	mov	esi, eax
$LN92@lGetTradeT:
	mov	al, BYTE PTR [ebx+4057]
	mov	edi, DWORD PTR [ebx+4024]
	test	al, al
	je	SHORT $LN230@lGetTradeT
	test	ebp, ebp
	jge	SHORT $LN100@lGetTradeT
	mov	eax, ebp
	cdq
	idiv	edi
	add	edx, edi
	jmp	SHORT $LN102@lGetTradeT
$LN100@lGetTradeT:
	cmp	ebp, edi
	jl	SHORT $LN230@lGetTradeT
	mov	eax, ebp
	cdq
	idiv	edi
	jmp	SHORT $LN102@lGetTradeT
$LN230@lGetTradeT:
	mov	edx, ebp
$LN102@lGetTradeT:
	test	esi, esi
	jl	SHORT $LN82@lGetTradeT
	cmp	esi, ecx
	jge	SHORT $LN82@lGetTradeT
	test	edx, edx
	jl	SHORT $LN82@lGetTradeT
	cmp	edx, edi
	jge	SHORT $LN82@lGetTradeT
	imul	ecx, edx
	add	ecx, esi
	imul	ecx, 484				; 000001e4H
	add	ecx, DWORD PTR [ebx+4068]
	mov	DWORD PTR _pOriginPlot$230327[esp+552], ecx
	mov	ecx, DWORD PTR _pConnection$[esp+552]
	jmp	SHORT $LN80@lGetTradeT
$LN82@lGetTradeT:
	mov	ecx, DWORD PTR _pConnection$[esp+552]
$LN78@lGetTradeT:
	mov	DWORD PTR _pOriginPlot$230327[esp+552], 0
$LN80@lGetTradeT:

; 4004 : 			CvPlot* pDestPlot = GC.getMap().plot(pConnection->m_iDestX, pConnection->m_iDestY);

	mov	eax, DWORD PTR [ecx+12]
	mov	ebp, DWORD PTR [ecx+16]
	cmp	eax, -2147483647			; 80000001H
	je	$LN118@lGetTradeT
	cmp	ebp, -2147483647			; 80000001H
	je	SHORT $LN118@lGetTradeT
	mov	dl, BYTE PTR [ebx+4056]
	mov	ecx, DWORD PTR [ebx+4020]
	test	dl, dl
	je	SHORT $LN128@lGetTradeT
	test	eax, eax
	jge	SHORT $LN130@lGetTradeT
	cdq
	idiv	ecx
	mov	esi, edx
	add	esi, ecx
	jmp	SHORT $LN132@lGetTradeT
$LN130@lGetTradeT:
	cmp	eax, ecx
	jl	SHORT $LN128@lGetTradeT
	cdq
	idiv	ecx
	mov	esi, edx
	jmp	SHORT $LN132@lGetTradeT
$LN128@lGetTradeT:
	mov	esi, eax
$LN132@lGetTradeT:
	mov	al, BYTE PTR [ebx+4057]
	mov	edi, DWORD PTR [ebx+4024]
	test	al, al
	je	SHORT $LN138@lGetTradeT
	test	ebp, ebp
	jge	SHORT $LN140@lGetTradeT
	mov	eax, ebp
	cdq
	idiv	edi
	add	edx, edi
	jmp	SHORT $LN142@lGetTradeT
$LN140@lGetTradeT:
	cmp	ebp, edi
	jl	SHORT $LN138@lGetTradeT
	mov	eax, ebp
	cdq
	idiv	edi
	jmp	SHORT $LN142@lGetTradeT
$LN138@lGetTradeT:
	mov	edx, ebp
$LN142@lGetTradeT:
	test	esi, esi
	jl	SHORT $LN118@lGetTradeT
	cmp	esi, ecx
	jge	SHORT $LN118@lGetTradeT
	test	edx, edx
	jl	SHORT $LN118@lGetTradeT
	cmp	edx, edi
	jge	SHORT $LN118@lGetTradeT
	imul	ecx, edx
	add	ecx, esi
	imul	ecx, 484				; 000001e4H
	add	ecx, DWORD PTR [ebx+4068]
	mov	esi, ecx
	jmp	SHORT $LN120@lGetTradeT
$LN118@lGetTradeT:
	xor	esi, esi
$LN120@lGetTradeT:

; 4005 : 			if (pOriginPlot == NULL || pDestPlot == NULL)

	cmp	DWORD PTR _pOriginPlot$230327[esp+552], 0
	je	$LN33@lGetTradeT
	test	esi, esi
	je	$LN33@lGetTradeT

; 4006 : 			{
; 4007 : 				continue;
; 4008 : 			}
; 4009 : 
; 4010 : 			CvCity* pOriginCity = pOriginPlot->getPlotCity();

	mov	ecx, DWORD PTR _pOriginPlot$230327[esp+552]
	mov	eax, DWORD PTR [ecx+104]
	test	eax, eax
	jl	SHORT $LN231@lGetTradeT
	cmp	eax, 64					; 00000040H
	jge	SHORT $LN231@lGetTradeT
	mov	ecx, DWORD PTR [ecx+108]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	ecx
	mov	ecx, eax
	call	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z	; CvPlayer::getCity
	mov	DWORD PTR _pOriginCity$230331[esp+552], eax
	jmp	SHORT $LN157@lGetTradeT
$LN231@lGetTradeT:
	mov	DWORD PTR _pOriginCity$230331[esp+552], 0
$LN157@lGetTradeT:

; 4011 : 			CvCity* pDestCity = pDestPlot->getPlotCity();

	mov	eax, DWORD PTR [esi+104]
	test	eax, eax
	jl	SHORT $LN161@lGetTradeT
	cmp	eax, 64					; 00000040H
	jge	SHORT $LN161@lGetTradeT
	mov	edx, DWORD PTR [esi+108]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	edx
	mov	ecx, eax
	call	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z	; CvPlayer::getCity
	jmp	SHORT $LN235@lGetTradeT
$LN161@lGetTradeT:
	xor	eax, eax
$LN235@lGetTradeT:

; 4012 : 
; 4013 : 			if (pOriginCity == NULL || pDestCity == NULL)

	cmp	DWORD PTR _pOriginCity$230331[esp+552], 0
	mov	DWORD PTR _pDestCity$230332[esp+552], eax
	je	$LN33@lGetTradeT
	test	eax, eax
	je	$LN33@lGetTradeT

; 4014 : 			{
; 4015 : 				continue;
; 4016 : 			}
; 4017 : 
; 4018 : 			CvString strOriginYieldsStr = "";

	push	OFFSET $SG230336
	lea	ecx, DWORD PTR _strOriginYieldsStr$230335[esp+556]
	call	??0CvString@@QAE@PBD@Z			; CvString::CvString

; 4019 : 			//for (uint uiYield = 0; uiYield < NUM_YIELD_TYPES; uiYield++)
; 4020 : 			//{
; 4021 : 			//	YieldTypes eYield = (YieldTypes)uiYield;
; 4022 : 			//	int iYieldQuantity = pPlayerTrade->GetTradeConnectionValueTimes100(*pConnection, eYield, false);
; 4023 : 			//	if (iYieldQuantity != 0)
; 4024 : 			//	{
; 4025 : 			//		switch (eYield)
; 4026 : 			//		{
; 4027 : 			//		case YIELD_FOOD:
; 4028 : 			//			strOriginYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_FOOD_YIELD_TT", iYieldQuantity / 100);
; 4029 : 			//			break;
; 4030 : 			//		case YIELD_PRODUCTION:
; 4031 : 			//			strOriginYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_PRODUCTION_YIELD_TT", iYieldQuantity / 100);
; 4032 : 			//			break;
; 4033 : 			//		case YIELD_GOLD:
; 4034 : 			//			strOriginYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_GOLD_YIELD_TT", iYieldQuantity / 100);
; 4035 : 			//			break;
; 4036 : 			//		case YIELD_SCIENCE:
; 4037 : 			//			strOriginYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_SCIENCE_YIELD_TT", iYieldQuantity / 100);
; 4038 : 			//			break;
; 4039 : 			//		case YIELD_CULTURE:
; 4040 : 			//			strOriginYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_CULTURE_YIELD_TT", iYieldQuantity / 100);
; 4041 : 			//			break;
; 4042 : 			//		case YIELD_FAITH:
; 4043 : 			//			strOriginYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_FAITH_YIELD_TT", iYieldQuantity / 100);
; 4044 : 			//			break;
; 4045 : 			//		}
; 4046 : 			//	}
; 4047 : 			//}
; 4048 : 
; 4049 : 			CvString strDestYieldsStr = "";

	push	OFFSET $SG230338
	lea	ecx, DWORD PTR _strDestYieldsStr$230337[esp+556]
	mov	BYTE PTR __$EHRec$[esp+564], 1
	call	??0CvString@@QAE@PBD@Z			; CvString::CvString

; 4050 : 			for (uint uiYield = 0; uiYield < NUM_YIELD_TYPES; uiYield++)

	mov	ebp, DWORD PTR _pConnection$[esp+552]
	mov	ebx, DWORD PTR _pPlayerTrade$[esp+552]
	mov	BYTE PTR __$EHRec$[esp+560], 2
	xor	edi, edi
$LL24@lGetTradeT:

; 4051 : 			{
; 4052 : 				YieldTypes eYield = (YieldTypes)uiYield;
; 4053 : 				int iYieldQuantity = pPlayerTrade->GetTradeConnectionValueTimes100(*pConnection, eYield, false);

	push	0
	push	edi
	push	ebp
	mov	ecx, ebx
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	mov	esi, eax

; 4054 : 				if (iYieldQuantity != 0)

	test	esi, esi
	je	$LN23@lGetTradeT

; 4055 : 				{
; 4056 : 					if (strDestYieldsStr != "") 

	lea	eax, DWORD PTR _strDestYieldsStr$230337[esp+552]
	push	OFFSET $SG230348
	push	eax
	call	DWORD PTR __imp_??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
	add	esp, 8
	test	al, al
	je	SHORT $LN20@lGetTradeT

; 4057 : 					{
; 4058 : 						strDestYieldsStr += ", ";

	push	OFFSET $SG230349
	lea	ecx, DWORD PTR _strDestYieldsStr$230337[esp+556]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN20@lGetTradeT:

; 4059 : 					}
; 4060 : 					switch (eYield)

	cmp	edi, 5
	ja	$LN23@lGetTradeT
	jmp	DWORD PTR $LN238@lGetTradeT[edi*4]
$LN17@lGetTradeT:

; 4061 : 					{
; 4062 : 					case YIELD_FOOD:
; 4063 : 						strDestYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_FOOD_YIELD_TT", iYieldQuantity / 100);

	mov	eax, 1374389535				; 51eb851fH
	imul	esi
	sar	edx, 5
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	push	ecx
	lea	edx, DWORD PTR $T252957[esp+556]
	push	OFFSET $SG230356
	push	edx
	call	??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z ; GetLocalizedText<int>
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _strDestYieldsStr$230337[esp+556]
	mov	BYTE PTR __$EHRec$[esp+564], 3
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T252957[esp+552]

; 4064 : 						break;

	jmp	$LN236@lGetTradeT
$LN16@lGetTradeT:

; 4065 : 					case YIELD_PRODUCTION:
; 4066 : 						strDestYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_PRODUCTION_YIELD_TT", iYieldQuantity / 100);

	mov	eax, 1374389535				; 51eb851fH
	imul	esi
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	push	eax
	lea	ecx, DWORD PTR $T252958[esp+556]
	push	OFFSET $SG230359
	push	ecx
	call	??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z ; GetLocalizedText<int>
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _strDestYieldsStr$230337[esp+556]
	mov	BYTE PTR __$EHRec$[esp+564], 4
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T252958[esp+552]

; 4067 : 						break;

	jmp	$LN236@lGetTradeT
$LN15@lGetTradeT:

; 4068 : 					case YIELD_GOLD:
; 4069 : 						strDestYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_GOLD_YIELD_TT", iYieldQuantity / 100);

	mov	eax, 1374389535				; 51eb851fH
	imul	esi
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	push	eax
	lea	ecx, DWORD PTR $T252959[esp+556]
	push	OFFSET $SG230362
	push	ecx
	call	??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z ; GetLocalizedText<int>
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _strDestYieldsStr$230337[esp+556]
	mov	BYTE PTR __$EHRec$[esp+564], 5
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T252959[esp+552]

; 4070 : 						break;

	jmp	$LN236@lGetTradeT
$LN14@lGetTradeT:

; 4071 : 					case YIELD_SCIENCE:
; 4072 : 						strDestYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_SCIENCE_YIELD_TT", iYieldQuantity / 100);

	mov	eax, 1374389535				; 51eb851fH
	imul	esi
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	push	eax
	lea	ecx, DWORD PTR $T252960[esp+556]
	push	OFFSET $SG230365
	push	ecx
	call	??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z ; GetLocalizedText<int>
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _strDestYieldsStr$230337[esp+556]
	mov	BYTE PTR __$EHRec$[esp+564], 6
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T252960[esp+552]

; 4073 : 						break;

	jmp	$LN236@lGetTradeT
$LN13@lGetTradeT:

; 4074 : 					case YIELD_CULTURE:
; 4075 : 						strDestYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_CULTURE_YIELD_TT", iYieldQuantity / 100);

	mov	eax, 1374389535				; 51eb851fH
	imul	esi
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	push	eax
	lea	ecx, DWORD PTR $T252961[esp+556]
	push	OFFSET $SG230368
	push	ecx
	call	??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z ; GetLocalizedText<int>
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _strDestYieldsStr$230337[esp+556]
	mov	BYTE PTR __$EHRec$[esp+564], 7
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T252961[esp+552]

; 4076 : 						break;

	jmp	SHORT $LN236@lGetTradeT
$LN12@lGetTradeT:

; 4077 : 					case YIELD_FAITH:
; 4078 : 						strDestYieldsStr += GetLocalizedText("TXT_KEY_TOP_PANEL_ITR_FAITH_YIELD_TT", iYieldQuantity / 100);

	mov	eax, 1374389535				; 51eb851fH
	imul	esi
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	push	eax
	lea	ecx, DWORD PTR $T252962[esp+556]
	push	OFFSET $SG230371
	push	ecx
	call	??$GetLocalizedText@H@@YA?AVCvString@@PBDH@Z ; GetLocalizedText<int>
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _strDestYieldsStr$230337[esp+556]
	mov	BYTE PTR __$EHRec$[esp+564], 8
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T252962[esp+552]
$LN236@lGetTradeT:
	mov	BYTE PTR __$EHRec$[esp+560], 2
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN23@lGetTradeT:
	inc	edi
	cmp	edi, 6
	jb	$LL24@lGetTradeT

; 4079 : 						break;
; 4080 : 					}
; 4081 : 				}
; 4082 : 			}
; 4083 : 
; 4084 : 			//CvUnitEntry* pUnitEntry = GC.getUnitInfo(pPlayerTrade->GetTradeUnit(pConnection->m_eDomain));
; 4085 : 
; 4086 : 			Localization::String strBuffer;

	lea	ecx, DWORD PTR _strBuffer$230372[esp+552]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ

; 4087 : 			if (strOriginYieldsStr != "" && strDestYieldsStr != "")

	mov	edi, DWORD PTR __imp_??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
	lea	edx, DWORD PTR _strOriginYieldsStr$230335[esp+552]
	push	OFFSET $SG230374
	push	edx
	mov	BYTE PTR __$EHRec$[esp+568], 9
	call	edi
	add	esp, 8
	test	al, al
	je	SHORT $LN11@lGetTradeT
	lea	eax, DWORD PTR _strDestYieldsStr$230337[esp+552]
	push	OFFSET $SG230375
	push	eax
	call	edi
	add	esp, 8
	test	al, al
	je	SHORT $LN11@lGetTradeT

; 4088 : 			{
; 4089 : 				strBuffer = Localization::Lookup("TXT_KEY_TOP_PANEL_ITR_TO_YOU_ROUTE_BOTH_TT");

	lea	ecx, DWORD PTR $T252963[esp+552]
	push	OFFSET $SG230377
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strBuffer$230372[esp+556]
	mov	BYTE PTR __$EHRec$[esp+564], 10		; 0000000aH
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T252963[esp+552]
	jmp	$LN237@lGetTradeT
$LN11@lGetTradeT:

; 4090 : 			}
; 4091 : 			else if (strOriginYieldsStr != "")

	lea	edx, DWORD PTR _strOriginYieldsStr$230335[esp+552]
	push	OFFSET $SG230380
	push	edx
	call	edi
	add	esp, 8
	test	al, al
	je	SHORT $LN9@lGetTradeT

; 4092 : 			{
; 4093 : 				strBuffer = Localization::Lookup("TXT_KEY_TOP_PANEL_ITR_TO_YOU_ROUTE_ONLY_ORIGIN_TT");

	lea	eax, DWORD PTR $T252964[esp+552]
	push	OFFSET $SG230382
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strBuffer$230372[esp+556]
	mov	BYTE PTR __$EHRec$[esp+564], 11		; 0000000bH
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T252964[esp+552]
	jmp	SHORT $LN237@lGetTradeT
$LN9@lGetTradeT:

; 4094 : 			}
; 4095 : 			else if (strDestYieldsStr != "")

	lea	ecx, DWORD PTR _strDestYieldsStr$230337[esp+552]
	push	OFFSET $SG230385
	push	ecx
	call	edi
	add	esp, 8
	test	al, al
	je	SHORT $LN232@lGetTradeT

; 4096 : 			{
; 4097 : 				strBuffer = Localization::Lookup("TXT_KEY_TOP_PANEL_ITR_TO_YOU_ROUTE_ONLY_DEST_TT");

	lea	edx, DWORD PTR $T252965[esp+552]
	push	OFFSET $SG230387
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strBuffer$230372[esp+556]
	mov	BYTE PTR __$EHRec$[esp+564], 12		; 0000000cH
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T252965[esp+552]
$LN237@lGetTradeT:
	mov	BYTE PTR __$EHRec$[esp+560], 9
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN232@lGetTradeT:

; 4098 : 			}
; 4099 : 
; 4100 : 			if (pConnection->m_eConnectionType == TRADE_CONNECTION_INTERNATIONAL)

	cmp	DWORD PTR [ebp+32], 0
	jne	SHORT $LN233@lGetTradeT

; 4101 : 			{
; 4102 : 				if (GET_PLAYER(pDestCity->getOwner()).isMinorCiv())

	mov	eax, DWORD PTR _pDestCity$230332[esp+552]
	mov	eax, DWORD PTR [eax+84]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	ecx, eax
	call	?isMinorCiv@CvPlayer@@QBE_NXZ		; CvPlayer::isMinorCiv
	test	al, al
	je	$LN5@lGetTradeT

; 4103 : 				{
; 4104 : 					strBuffer << "TXT_KEY_TOP_PANEL_ITR_CITY_STATE_TT";

	push	35					; 00000023H
	push	OFFSET $SG230390
	lea	ecx, DWORD PTR _strBuffer$230372[esp+560]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NPBDI@Z
$LN233@lGetTradeT:

; 4105 : 				}
; 4106 : 				else

	mov	esi, DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NPBD@Z

; 4107 : 				{
; 4108 : 					strBuffer << GET_PLAYER(pOriginCity->getOwner()).getCivilizationShortDescription();

$LN198@lGetTradeT:

; 4109 : 				}
; 4110 : 			}
; 4111 : 
; 4112 : 			strBuffer << pOriginCity->getNameKey();

	mov	ecx, DWORD PTR _pOriginCity$230331[esp+552]
	call	?getNameKey@CvCity@@QBEPBDXZ		; CvCity::getNameKey
	push	eax
	lea	ecx, DWORD PTR _strBuffer$230372[esp+556]
	call	esi

; 4113 : 			if (strOriginYieldsStr != "")

	lea	edx, DWORD PTR _strOriginYieldsStr$230335[esp+552]
	push	OFFSET $SG230395
	push	edx
	call	edi
	add	esp, 8
	test	al, al
	je	SHORT $LN202@lGetTradeT

; 4114 : 			{
; 4115 : 				strBuffer << strOriginYieldsStr;

	lea	ecx, DWORD PTR _strOriginYieldsStr$230335[esp+552]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strBuffer$230372[esp+556]
	call	esi
$LN202@lGetTradeT:

; 4116 : 			}
; 4117 : 
; 4118 : 			strBuffer << pDestCity->getNameKey();

	mov	ecx, DWORD PTR _pDestCity$230332[esp+552]
	call	?getNameKey@CvCity@@QBEPBDXZ		; CvCity::getNameKey
	push	eax
	lea	ecx, DWORD PTR _strBuffer$230372[esp+556]
	call	esi

; 4119 : 			if (strDestYieldsStr != "")

	lea	eax, DWORD PTR _strDestYieldsStr$230337[esp+552]
	push	OFFSET $SG230398
	push	eax
	call	edi
	add	esp, 8
	test	al, al
	je	SHORT $LN208@lGetTradeT

; 4120 : 			{
; 4121 : 				strBuffer << strDestYieldsStr;

	lea	ecx, DWORD PTR _strDestYieldsStr$230337[esp+552]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strBuffer$230372[esp+556]
	call	esi
$LN208@lGetTradeT:

; 4122 : 			}
; 4123 : 
; 4124 : 			if (strResult != "")

	lea	ecx, DWORD PTR _strResult$[esp+552]
	push	OFFSET $SG230400
	push	ecx
	call	edi
	add	esp, 8
	test	al, al
	je	SHORT $LN1@lGetTradeT

; 4125 : 			{
; 4126 : 				strResult += "[NEWLINE]";

	push	OFFSET $SG230401
	lea	ecx, DWORD PTR _strResult$[esp+556]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN1@lGetTradeT:

; 4127 : 			}
; 4128 : 
; 4129 : 			strResult += strBuffer.toUTF8();

	lea	ecx, DWORD PTR _strBuffer$230372[esp+552]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strResult$[esp+556]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 4130 : 		}

	lea	ecx, DWORD PTR _strBuffer$230372[esp+552]
	mov	BYTE PTR __$EHRec$[esp+560], 2
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	lea	ecx, DWORD PTR _strDestYieldsStr$230337[esp+552]
	mov	BYTE PTR __$EHRec$[esp+560], 1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR _strOriginYieldsStr$230335[esp+552]
	mov	BYTE PTR __$EHRec$[esp+560], 0
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN33@lGetTradeT:
	mov	eax, DWORD PTR _ui$230320[esp+552]
	mov	esi, DWORD PTR _pTrade$[esp+552]
	add	DWORD PTR tv1203[esp+552], 444		; 000001bcH
	inc	eax
	mov	DWORD PTR _ui$230320[esp+552], eax
	cmp	eax, DWORD PTR [esi+4]
	jb	$LL229@lGetTradeT

; 3984 : 
; 3985 : 	TradeConnection* pConnection = NULL;
; 3986 : 	for (uint ui = 0; ui < pTrade->m_aTradeConnections.size(); ui++)

	mov	esi, DWORD PTR _L$[esp+548]
$LN32@lGetTradeT:

; 4131 : 	}
; 4132 : 
; 4133 : 	lua_pushstring(L, strResult);

	lea	ecx, DWORD PTR _strResult$[esp+552]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8

; 4134 : 
; 4135 : 	return 1;

	lea	ecx, DWORD PTR _strResult$[esp+552]
	mov	DWORD PTR __$EHRec$[esp+560], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 4136 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+552]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 536				; 00000218H
	ret	0
$LN5@lGetTradeT:

; 4107 : 				{
; 4108 : 					strBuffer << GET_PLAYER(pOriginCity->getOwner()).getCivilizationShortDescription();

	mov	ecx, DWORD PTR _pOriginCity$230331[esp+552]
	mov	eax, DWORD PTR [ecx+84]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	ecx, eax
	call	?getCivilizationShortDescription@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescription
	mov	esi, DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NPBD@Z
	push	eax
	lea	ecx, DWORD PTR _strBuffer$230372[esp+556]
	call	esi
	jmp	$LN198@lGetTradeT
	npad	2
$LN238@lGetTradeT:

; 4136 : }

	DD	$LN17@lGetTradeT
	DD	$LN16@lGetTradeT
	DD	$LN15@lGetTradeT
	DD	$LN14@lGetTradeT
	DD	$LN13@lGetTradeT
	DD	$LN12@lGetTradeT
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _strResult$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR _strOriginYieldsStr$230335[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$2:
	lea	ecx, DWORD PTR _strDestYieldsStr$230337[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$3:
	lea	ecx, DWORD PTR $T252957[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$4:
	lea	ecx, DWORD PTR $T252958[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$5:
	lea	ecx, DWORD PTR $T252959[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$6:
	lea	ecx, DWORD PTR $T252960[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$7:
	lea	ecx, DWORD PTR $T252961[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$8:
	lea	ecx, DWORD PTR $T252962[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$9:
	lea	ecx, DWORD PTR _strBuffer$230372[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$10:
	lea	ecx, DWORD PTR $T252963[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$11:
	lea	ecx, DWORD PTR $T252964[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z$12:
	lea	ecx, DWORD PTR $T252965[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__ehhandler$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTradeToYouRoutesTTString
PUBLIC	?lGetTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTradeRoutes
EXTRN	?getGameTurn@CvGame@@QAEHXZ:PROC		; CvGame::getGameTurn
EXTRN	?GetBaseTourism@CvCityCulture@@QAEHXZ:PROC	; CvCityCulture::GetBaseTourism
EXTRN	?GetTourismMultiplier@CvCityCulture@@QBEHW4PlayerTypes@@_N1111@Z:PROC ; CvCityCulture::GetTourismMultiplier
EXTRN	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ:PROC ; CvCity::GetCityCulture
EXTRN	?WouldExertTradeRoutePressureToward@CvCityReligions@@QAE_NPAVCvCity@@AAW4ReligionTypes@@AAH@Z:PROC ; CvCityReligions::WouldExertTradeRoutePressureToward
EXTRN	?getName@CvCity@@QBE?BVCvString@@XZ:PROC	; CvCity::getName
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
xdata$x	SEGMENT
__unwindtable$?lGetTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z$1
__ehfuncinfo$?lGetTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?lGetTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iToDelta$230445 = -112					; size = 4
_pFromCity$230416 = -112				; size = 4
_pkInstance$253401 = -108				; size = 4
tv605 = -104						; size = 4
tv604 = -104						; size = 4
$T253538 = -104						; size = 4
_pToPlayer$230418 = -104				; size = 4
_iToPressure$230438 = -100				; size = 4
_iFromPressure$230440 = -96				; size = 4
tv1018 = -92						; size = 4
_eToReligion$230437 = -88				; size = 4
_eFromReligion$230439 = -84				; size = 4
_index$ = -80						; size = 4
_ui$230409 = -76					; size = 4
_pTrade$ = -72						; size = 4
$T253385 = -68						; size = 28
$T253386 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetTradeRoutes, COMDAT

; 4140 : {

	push	-1
	push	__ehhandler$?lGetTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 100				; 00000064H
	push	ebx
	push	ebp
	push	esi

; 4141 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+120]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	xor	ebp, ebp
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$253401[esp+140], ebp
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN166@lGetTradeR
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN166@lGetTradeR
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$253401[esp+128], eax
	cmp	eax, ebp
	je	SHORT $LN166@lGetTradeR
	xor	bl, bl
$LN166@lGetTradeR:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN19@lGetTradeR
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN19@lGetTradeR:

; 4142 : #ifdef AUI_WARNING_FIXES
; 4143 : 	const CvPlayerTrade* pPlayerTrade = pkPlayer->GetTrade();
; 4144 : #endif
; 4145 : 
; 4146 : 	lua_createtable(L, 0, 0);

	push	ebp
	push	ebp
	push	esi
	call	_lua_createtable

; 4147 : 	int index = 1;
; 4148 : 
; 4149 : 	CvGameTrade* pTrade = GC.getGame().GetGameTrade();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _index$[esp+128], 1
	call	?GetGameTrade@CvGame@@QAEPAVCvGameTrade@@XZ ; CvGame::GetGameTrade
	mov	edi, eax

; 4150 : 	for (uint ui = 0; ui < pTrade->m_aTradeConnections.size(); ui++)

	xor	ebx, ebx
	mov	DWORD PTR _pTrade$[esp+128], edi
	mov	DWORD PTR _ui$230409[esp+128], ebx
	cmp	DWORD PTR [edi+4], ebp
	jbe	$LN165@lGetTradeR

; 4142 : #ifdef AUI_WARNING_FIXES
; 4143 : 	const CvPlayerTrade* pPlayerTrade = pkPlayer->GetTrade();
; 4144 : #endif
; 4145 : 
; 4146 : 	lua_createtable(L, 0, 0);

	mov	DWORD PTR tv1018[esp+128], ebp
$LL5@lGetTradeR:

; 4151 : 	{
; 4152 : 		if (pTrade->IsTradeRouteIndexEmpty(ui))

	push	ebx
	mov	ecx, edi
	call	?IsTradeRouteIndexEmpty@CvGameTrade@@QAE_NH@Z ; CvGameTrade::IsTradeRouteIndexEmpty
	test	al, al
	jne	$LN4@lGetTradeR

; 4153 : 		{
; 4154 : 			continue;
; 4155 : 		}
; 4156 : 
; 4157 : 		TradeConnection* pConnection = &(pTrade->m_aTradeConnections[ui]);

	mov	ebp, DWORD PTR [edi]

; 4158 : 		if (pConnection->m_eOriginOwner != pkPlayer->GetID())

	mov	eax, DWORD PTR _pkInstance$253401[esp+128]
	add	ebp, DWORD PTR tv1018[esp+128]
	mov	eax, DWORD PTR [eax+44]
	cmp	DWORD PTR [ebp+20], eax
	jne	$LN4@lGetTradeR

; 4159 : 		{
; 4160 : 			continue;
; 4161 : 		}
; 4162 : 
; 4163 : 		CvCity* pFromCity = GC.getMap().plot(pConnection->m_iOriginX, pConnection->m_iOriginY)->getPlotCity();

	mov	eax, DWORD PTR [ebp+4]
	mov	edx, DWORD PTR [ebp+8]
	mov	DWORD PTR $T253538[esp+128], edx
	cmp	eax, -2147483647			; 80000001H
	je	$LN33@lGetTradeR
	cmp	edx, -2147483647			; 80000001H
	je	$LN33@lGetTradeR
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	bl, BYTE PTR [ecx+4056]
	mov	ecx, DWORD PTR [ecx+4020]
	test	bl, bl
	je	SHORT $LN43@lGetTradeR
	test	eax, eax
	jge	SHORT $LN45@lGetTradeR
	cdq
	idiv	ecx
	mov	edi, edx
	mov	edx, DWORD PTR $T253538[esp+128]
	add	edi, ecx
	jmp	SHORT $LN47@lGetTradeR
$LN45@lGetTradeR:
	cmp	eax, ecx
	jl	SHORT $LN43@lGetTradeR
	cdq
	idiv	ecx
	mov	edi, edx
	mov	edx, DWORD PTR $T253538[esp+128]
	jmp	SHORT $LN47@lGetTradeR
$LN43@lGetTradeR:
	mov	edi, eax
$LN47@lGetTradeR:
	mov	ebx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	al, BYTE PTR [ebx+4057]
	mov	ebx, DWORD PTR [ebx+4024]
	test	al, al
	je	SHORT $LN169@lGetTradeR
	test	edx, edx
	jge	SHORT $LN55@lGetTradeR
	mov	eax, edx
	cdq
	idiv	ebx
	add	edx, ebx
	jmp	SHORT $LN169@lGetTradeR
$LN55@lGetTradeR:
	cmp	edx, ebx
	jl	SHORT $LN169@lGetTradeR
	mov	eax, edx
	cdq
	idiv	ebx
$LN169@lGetTradeR:
	test	edi, edi
	jl	SHORT $LN33@lGetTradeR
	cmp	edi, ecx
	jge	SHORT $LN33@lGetTradeR
	test	edx, edx
	jl	SHORT $LN33@lGetTradeR
	cmp	edx, ebx
	jge	SHORT $LN33@lGetTradeR
	imul	ecx, edx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	add	ecx, edi
	imul	ecx, 484				; 000001e4H
	add	ecx, DWORD PTR [edx+4068]
	jmp	SHORT $LN35@lGetTradeR
$LN33@lGetTradeR:
	xor	ecx, ecx
$LN35@lGetTradeR:
	mov	eax, DWORD PTR [ecx+104]
	test	eax, eax
	jl	SHORT $LN167@lGetTradeR
	cmp	eax, 64					; 00000040H
	jge	SHORT $LN167@lGetTradeR
	mov	ecx, DWORD PTR [ecx+108]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	ecx
	mov	ecx, eax
	call	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z	; CvPlayer::getCity
	mov	DWORD PTR _pFromCity$230416[esp+128], eax
	jmp	SHORT $LN72@lGetTradeR
$LN167@lGetTradeR:
	mov	DWORD PTR _pFromCity$230416[esp+128], 0
$LN72@lGetTradeR:

; 4164 : 		CvCity* pToCity = GC.getMap().plot(pConnection->m_iDestX, pConnection->m_iDestY)->getPlotCity();

	mov	eax, DWORD PTR [ebp+12]
	mov	ecx, DWORD PTR [ebp+16]
	cmp	eax, -2147483647			; 80000001H
	je	$LN78@lGetTradeR
	cmp	ecx, -2147483647			; 80000001H
	je	$LN78@lGetTradeR
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	dl, BYTE PTR [ecx+4056]
	mov	ecx, DWORD PTR [ecx+4020]
	test	dl, dl
	je	SHORT $LN88@lGetTradeR
	test	eax, eax
	jge	SHORT $LN90@lGetTradeR
	cdq
	idiv	ecx
	mov	edi, edx
	add	edi, ecx
	jmp	SHORT $LN92@lGetTradeR
$LN90@lGetTradeR:
	cmp	eax, ecx
	jl	SHORT $LN88@lGetTradeR
	cdq
	idiv	ecx
	mov	edi, edx
	jmp	SHORT $LN92@lGetTradeR
$LN88@lGetTradeR:
	mov	edi, eax
$LN92@lGetTradeR:
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	al, BYTE PTR [edx+4057]
	mov	ebx, DWORD PTR [edx+4024]
	test	al, al
	je	SHORT $LN168@lGetTradeR
	mov	eax, DWORD PTR [ebp+16]
	test	eax, eax
	jge	SHORT $LN100@lGetTradeR
	cdq
	idiv	ebx
	add	edx, ebx
	jmp	SHORT $LN102@lGetTradeR
$LN100@lGetTradeR:
	cmp	eax, ebx
	jl	SHORT $LN168@lGetTradeR
	cdq
	idiv	ebx
	jmp	SHORT $LN102@lGetTradeR
$LN168@lGetTradeR:
	mov	edx, DWORD PTR [ebp+16]
$LN102@lGetTradeR:
	test	edi, edi
	jl	SHORT $LN78@lGetTradeR
	cmp	edi, ecx
	jge	SHORT $LN78@lGetTradeR
	test	edx, edx
	jl	SHORT $LN78@lGetTradeR
	cmp	edx, ebx
	jge	SHORT $LN78@lGetTradeR
	imul	ecx, edx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	add	ecx, edi
	imul	ecx, 484				; 000001e4H
	add	ecx, DWORD PTR [edx+4068]
	jmp	SHORT $LN80@lGetTradeR
$LN78@lGetTradeR:
	xor	ecx, ecx
$LN80@lGetTradeR:
	mov	eax, DWORD PTR [ecx+104]
	test	eax, eax
	jl	SHORT $LN116@lGetTradeR
	cmp	eax, 64					; 00000040H
	jge	SHORT $LN116@lGetTradeR
	mov	ecx, DWORD PTR [ecx+108]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	ecx
	mov	ecx, eax
	call	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z	; CvPlayer::getCity
	mov	ebx, eax
	jmp	SHORT $LN117@lGetTradeR
$LN116@lGetTradeR:
	xor	ebx, ebx
$LN117@lGetTradeR:

; 4165 : 
; 4166 : 		CvPlayer* pToPlayer = &GET_PLAYER(pToCity->getOwner());

	mov	eax, DWORD PTR [ebx+84]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers

; 4167 : 
; 4168 : 		lua_createtable(L, 0, 0);

	push	0
	push	0
	push	esi
	mov	DWORD PTR _pToPlayer$230418[esp+140], eax
	call	_lua_createtable

; 4169 : 		const int t = lua_gettop(L);

	push	esi
	call	_lua_gettop

; 4170 : 
; 4171 : 		lua_pushinteger(L, pConnection->m_eDomain);

	mov	edx, DWORD PTR [ebp+28]
	push	edx
	push	esi
	mov	edi, eax
	call	_lua_pushinteger

; 4172 : 		lua_setfield(L, t, "Domain");

	push	OFFSET $SG230420
	push	edi
	push	esi
	call	_lua_setfield

; 4173 : 		lua_pushinteger(L, pkPlayer->getCivilizationType());

	mov	ecx, DWORD PTR _pkInstance$253401[esp+164]
	add	esp, 36					; 00000024H
	call	?getCivilizationType@CvPlayer@@QBE?AW4CivilizationTypes@@XZ ; CvPlayer::getCivilizationType
	push	eax
	push	esi
	call	_lua_pushinteger

; 4174 : 		lua_setfield(L, t, "FromCivilizationType");

	push	OFFSET $SG230421
	push	edi
	push	esi
	call	_lua_setfield

; 4175 : 		lua_pushinteger(L , pkPlayer->GetID());

	mov	eax, DWORD PTR _pkInstance$253401[esp+148]
	mov	eax, DWORD PTR [eax+44]
	push	eax
	push	esi
	call	_lua_pushinteger

; 4176 : 		lua_setfield(L, t, "FromID");

	push	OFFSET $SG230422
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 40					; 00000028H

; 4177 : 		lua_pushstring(L, pFromCity->getName());

	lea	ecx, DWORD PTR $T253385[esp+128]
	push	ecx
	mov	ecx, DWORD PTR _pFromCity$230416[esp+132]
	call	?getName@CvCity@@QBE?BVCvString@@XZ	; CvCity::getName
	mov	ecx, eax
	mov	DWORD PTR __$EHRec$[esp+136], 0
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8
	lea	ecx, DWORD PTR $T253385[esp+128]
	mov	DWORD PTR __$EHRec$[esp+136], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 4178 : 		lua_setfield(L, t, "FromCityName");

	push	OFFSET $SG230424
	push	edi
	push	esi
	call	_lua_setfield

; 4179 : 		CvLuaCity::Push(L, pFromCity);

	mov	edx, DWORD PTR _pFromCity$230416[esp+140]
	push	edx
	push	esi
	call	?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push

; 4180 : 		lua_setfield(L, t, "FromCity");

	push	OFFSET $SG230425
	push	edi
	push	esi
	call	_lua_setfield

; 4181 : 		lua_pushinteger(L, GET_PLAYER(pConnection->m_eDestOwner).getCivilizationType());

	mov	ecx, DWORD PTR [ebp+24]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	add	esp, 32					; 00000020H
	call	?getCivilizationType@CvPlayer@@QBE?AW4CivilizationTypes@@XZ ; CvPlayer::getCivilizationType
	push	eax
	push	esi
	call	_lua_pushinteger

; 4182 : 		lua_setfield(L, t, "ToCivilizationType");

	push	OFFSET $SG230426
	push	edi
	push	esi
	call	_lua_setfield

; 4183 : 		lua_pushinteger(L, pToPlayer->GetID());

	mov	eax, DWORD PTR _pToPlayer$230418[esp+148]
	mov	eax, DWORD PTR [eax+44]
	push	eax
	push	esi
	call	_lua_pushinteger

; 4184 : 		lua_setfield(L, t, "ToID");

	push	OFFSET $SG230427
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 40					; 00000028H

; 4185 : 		lua_pushstring(L, pToCity->getName());

	lea	ecx, DWORD PTR $T253386[esp+128]
	push	ecx
	mov	ecx, ebx
	call	?getName@CvCity@@QBE?BVCvString@@XZ	; CvCity::getName
	mov	ecx, eax
	mov	DWORD PTR __$EHRec$[esp+136], 1
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8
	lea	ecx, DWORD PTR $T253386[esp+128]
	mov	DWORD PTR __$EHRec$[esp+136], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 4186 : 		lua_setfield(L, t, "ToCityName");

	push	OFFSET $SG230429
	push	edi
	push	esi
	call	_lua_setfield

; 4187 : 		CvLuaCity::Push(L, pToCity);

	push	ebx
	push	esi
	call	?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push

; 4188 : 		lua_setfield(L, t, "ToCity");

	push	OFFSET $SG230430
	push	edi
	push	esi
	call	_lua_setfield

; 4189 : #ifdef AUI_WARNING_FIXES
; 4190 : 		lua_pushinteger(L, pPlayerTrade->GetTradeConnectionValueTimes100(*pConnection, YIELD_GOLD, true));
; 4191 : 		lua_setfield(L, t, "FromGPT");
; 4192 : 		lua_pushinteger(L, pPlayerTrade->GetTradeConnectionValueTimes100(*pConnection, YIELD_GOLD, false));
; 4193 : 		lua_setfield(L, t, "ToGPT");
; 4194 : 		lua_pushinteger(L, pPlayerTrade->GetTradeConnectionValueTimes100(*pConnection, YIELD_FOOD, false));
; 4195 : 		lua_setfield(L, t, "ToFood");
; 4196 : 		lua_pushinteger(L, pPlayerTrade->GetTradeConnectionValueTimes100(*pConnection, YIELD_PRODUCTION, false));
; 4197 : 		lua_setfield(L, t, "ToProduction");
; 4198 : 		lua_pushinteger(L, pPlayerTrade->GetTradeConnectionValueTimes100(*pConnection, YIELD_SCIENCE, true));
; 4199 : 		lua_setfield(L, t, "FromScience");
; 4200 : 		lua_pushinteger(L, pPlayerTrade->GetTradeConnectionValueTimes100(*pConnection, YIELD_SCIENCE, false));
; 4201 : #else
; 4202 : 		lua_pushinteger(L, pkPlayer->GetTrade()->GetTradeConnectionValueTimes100(*pConnection, YIELD_GOLD, true));

	mov	ecx, DWORD PTR _pkInstance$253401[esp+160]
	add	esp, 32					; 00000020H
	push	1
	push	2
	push	ebp
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	ecx, eax
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	push	eax
	push	esi
	call	_lua_pushinteger

; 4203 : 		lua_setfield(L, t, "FromGPT");

	push	OFFSET $SG230431
	push	edi
	push	esi
	call	_lua_setfield

; 4204 : 		lua_pushinteger(L, pToPlayer->GetTrade()->GetTradeConnectionValueTimes100(*pConnection, YIELD_GOLD, false));

	mov	ecx, DWORD PTR _pToPlayer$230418[esp+148]
	add	esp, 20					; 00000014H
	push	0
	push	2
	push	ebp
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	ecx, eax
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	push	eax
	push	esi
	call	_lua_pushinteger

; 4205 : 		lua_setfield(L, t, "ToGPT");

	push	OFFSET $SG230432
	push	edi
	push	esi
	call	_lua_setfield

; 4206 : 		lua_pushinteger(L, pToPlayer->GetTrade()->GetTradeConnectionValueTimes100(*pConnection, YIELD_FOOD, false));

	mov	ecx, DWORD PTR _pToPlayer$230418[esp+148]
	add	esp, 20					; 00000014H
	push	0
	push	0
	push	ebp
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	ecx, eax
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	push	eax
	push	esi
	call	_lua_pushinteger

; 4207 : 		lua_setfield(L, t, "ToFood");

	push	OFFSET $SG230433
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 4208 : 		lua_pushinteger(L, pToPlayer->GetTrade()->GetTradeConnectionValueTimes100(*pConnection, YIELD_PRODUCTION, false));

	push	0
	push	1
	mov	ecx, DWORD PTR _pToPlayer$230418[esp+136]
	push	ebp
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	ecx, eax
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	push	eax
	push	esi
	call	_lua_pushinteger

; 4209 : 		lua_setfield(L, t, "ToProduction");

	push	OFFSET $SG230434
	push	edi
	push	esi
	call	_lua_setfield

; 4210 : 		lua_pushinteger(L, pkPlayer->GetTrade()->GetTradeConnectionValueTimes100(*pConnection, YIELD_SCIENCE, true));

	mov	ecx, DWORD PTR _pkInstance$253401[esp+148]
	add	esp, 20					; 00000014H
	push	1
	push	3
	push	ebp
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	ecx, eax
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	push	eax
	push	esi
	call	_lua_pushinteger

; 4211 : 		lua_setfield(L, t, "FromScience");

	push	OFFSET $SG230435
	push	edi
	push	esi
	call	_lua_setfield

; 4212 : 		lua_pushinteger(L, pToPlayer->GetTrade()->GetTradeConnectionValueTimes100(*pConnection, YIELD_SCIENCE, false));

	mov	ecx, DWORD PTR _pToPlayer$230418[esp+148]
	add	esp, 20					; 00000014H
	push	0
	push	3
	push	ebp
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	ecx, eax
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	push	eax
	push	esi
	call	_lua_pushinteger

; 4213 : #endif
; 4214 : 		lua_setfield(L, t, "ToScience");

	push	OFFSET $SG230436
	push	edi
	push	esi
	call	_lua_setfield

; 4215 : 
; 4216 : 
; 4217 : 		ReligionTypes eToReligion = NO_RELIGION;

	or	eax, -1
	add	esp, 20					; 00000014H

; 4218 : 		int iToPressure = 0;
; 4219 : 		ReligionTypes eFromReligion = NO_RELIGION;
; 4220 : 		int iFromPressure = 0;
; 4221 : 
; 4222 : 		pFromCity->GetCityReligions()->WouldExertTradeRoutePressureToward(pToCity, eToReligion, iToPressure);

	lea	edx, DWORD PTR _iToPressure$230438[esp+128]
	mov	DWORD PTR _eToReligion$230437[esp+128], eax
	xor	ecx, ecx
	mov	DWORD PTR _eFromReligion$230439[esp+128], eax
	push	edx
	lea	eax, DWORD PTR _eToReligion$230437[esp+132]
	push	eax
	mov	DWORD PTR _iToPressure$230438[esp+136], ecx
	mov	DWORD PTR _iFromPressure$230440[esp+136], ecx
	mov	ecx, DWORD PTR _pFromCity$230416[esp+136]
	push	ebx
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?WouldExertTradeRoutePressureToward@CvCityReligions@@QAE_NPAVCvCity@@AAW4ReligionTypes@@AAH@Z ; CvCityReligions::WouldExertTradeRoutePressureToward

; 4223 : 		pToCity->GetCityReligions()->WouldExertTradeRoutePressureToward(pFromCity, eFromReligion, iFromPressure);

	mov	eax, DWORD PTR _pFromCity$230416[esp+128]
	lea	ecx, DWORD PTR _iFromPressure$230440[esp+128]
	push	ecx
	lea	edx, DWORD PTR _eFromReligion$230439[esp+132]
	push	edx
	push	eax
	mov	ecx, ebx
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?WouldExertTradeRoutePressureToward@CvCityReligions@@QAE_NPAVCvCity@@AAW4ReligionTypes@@AAH@Z ; CvCityReligions::WouldExertTradeRoutePressureToward

; 4224 : 		
; 4225 : 		// Internally pressure is now 10 times greater than what is shown to user
; 4226 : 		iToPressure /= GC.getRELIGION_MISSIONARY_PRESSURE_MULTIPLIER();

	mov	eax, DWORD PTR _iToPressure$230438[esp+128]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7900
	cdq
	idiv	ecx
	mov	DWORD PTR _iToPressure$230438[esp+128], eax

; 4227 : 		iFromPressure /= GC.getRELIGION_MISSIONARY_PRESSURE_MULTIPLIER();

	mov	eax, DWORD PTR _iFromPressure$230440[esp+128]
	cdq
	idiv	ecx

; 4228 : 
; 4229 : 		lua_pushinteger(L, eToReligion);

	mov	ecx, DWORD PTR _eToReligion$230437[esp+128]
	push	ecx
	push	esi
	mov	DWORD PTR _iFromPressure$230440[esp+136], eax
	call	_lua_pushinteger

; 4230 : 		lua_setfield(L, t, "ToReligion");

	push	OFFSET $SG230441
	push	edi
	push	esi
	call	_lua_setfield

; 4231 : 		lua_pushinteger(L, iToPressure);

	mov	edx, DWORD PTR _iToPressure$230438[esp+148]
	push	edx
	push	esi
	call	_lua_pushinteger

; 4232 : 		lua_setfield(L, t, "ToPressure");

	push	OFFSET $SG230442
	push	edi
	push	esi
	call	_lua_setfield

; 4233 : 		lua_pushinteger(L, eFromReligion);

	mov	eax, DWORD PTR _eFromReligion$230439[esp+168]
	push	eax
	push	esi
	call	_lua_pushinteger

; 4234 : 		lua_setfield(L, t, "FromReligion");

	push	OFFSET $SG230443
	push	edi
	push	esi
	call	_lua_setfield

; 4235 : 		lua_pushinteger(L, iFromPressure);

	mov	ecx, DWORD PTR _iFromPressure$230440[esp+188]
	push	ecx
	push	esi
	call	_lua_pushinteger
	add	esp, 68					; 00000044H

; 4236 : 		lua_setfield(L, t, "FromPressure");

	push	OFFSET $SG230444
	push	edi
	push	esi
	call	_lua_setfield

; 4237 : 
; 4238 : 		int iToDelta = pFromCity->GetCityCulture()->GetBaseTourism() * pFromCity->GetCityCulture()->GetTourismMultiplier(pToPlayer->GetID(), true, true, false, true, true);

	mov	edx, DWORD PTR _pToPlayer$230418[esp+140]
	mov	eax, DWORD PTR [edx+44]
	mov	ecx, DWORD PTR _pFromCity$230416[esp+140]
	add	esp, 12					; 0000000cH
	push	1
	push	1
	push	0
	push	1
	push	1
	push	eax
	call	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ ; CvCity::GetCityCulture
	mov	ecx, eax
	call	?GetTourismMultiplier@CvCityCulture@@QBEHW4PlayerTypes@@_N1111@Z ; CvCityCulture::GetTourismMultiplier
	mov	ecx, DWORD PTR _pFromCity$230416[esp+128]
	mov	DWORD PTR tv605[esp+128], eax
	call	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ ; CvCity::GetCityCulture
	mov	ecx, eax
	call	?GetBaseTourism@CvCityCulture@@QAEHXZ	; CvCityCulture::GetBaseTourism
	mov	ecx, DWORD PTR tv605[esp+128]

; 4239 : 		int iFromDelta = pToCity->GetCityCulture()->GetBaseTourism() * pToCity->GetCityCulture()->GetTourismMultiplier(pkPlayer->GetID(), true, true, false, true, true);

	mov	edx, DWORD PTR _pkInstance$253401[esp+128]
	imul	ecx, eax
	mov	eax, DWORD PTR [edx+44]
	push	1
	push	1
	push	0
	push	1
	push	1
	mov	DWORD PTR _iToDelta$230445[esp+148], ecx
	push	eax
	mov	ecx, ebx
	call	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ ; CvCity::GetCityCulture
	mov	ecx, eax
	call	?GetTourismMultiplier@CvCityCulture@@QBEHW4PlayerTypes@@_N1111@Z ; CvCityCulture::GetTourismMultiplier
	mov	ecx, ebx
	mov	DWORD PTR tv604[esp+128], eax
	call	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ ; CvCity::GetCityCulture
	mov	ecx, eax
	call	?GetBaseTourism@CvCityCulture@@QAEHXZ	; CvCityCulture::GetBaseTourism
	mov	ecx, DWORD PTR tv604[esp+128]
	imul	ecx, eax

; 4240 : 		lua_pushinteger(L, iFromDelta);

	push	ecx
	push	esi
	call	_lua_pushinteger

; 4241 : 		lua_setfield(L, t, "FromTourism");

	push	OFFSET $SG230447
	push	edi
	push	esi
	call	_lua_setfield

; 4242 : 		lua_pushinteger(L, iToDelta);

	mov	eax, DWORD PTR _iToDelta$230445[esp+148]
	push	eax
	push	esi
	call	_lua_pushinteger

; 4243 : 		lua_setfield(L, t, "ToTourism");

	push	OFFSET $SG230448
	push	edi
	push	esi
	call	_lua_setfield

; 4244 : 
; 4245 : 		lua_pushinteger(L, pConnection->m_iTurnRouteComplete - GC.getGame().getGameTurn());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 40					; 00000028H
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	mov	ecx, DWORD PTR [ebp+392]
	sub	ecx, eax
	push	ecx
	push	esi
	call	_lua_pushinteger

; 4246 : 		lua_setfield(L, t, "TurnsLeft");

	push	OFFSET $SG230449
	push	edi
	push	esi
	call	_lua_setfield

; 4247 : 
; 4248 : 		lua_rawseti(L, -2, index++);

	mov	edi, DWORD PTR _index$[esp+148]
	push	edi
	push	-2					; fffffffeH
	push	esi
	call	_lua_rawseti
	mov	ebx, DWORD PTR _ui$230409[esp+160]
	add	esp, 32					; 00000020H
	inc	edi
	mov	DWORD PTR _index$[esp+128], edi
	mov	edi, DWORD PTR _pTrade$[esp+128]
$LN4@lGetTradeR:
	add	DWORD PTR tv1018[esp+128], 444		; 000001bcH
	inc	ebx
	mov	DWORD PTR _ui$230409[esp+128], ebx
	cmp	ebx, DWORD PTR [edi+4]
	jb	$LL5@lGetTradeR
$LN165@lGetTradeR:

; 4249 : 	}
; 4250 : 
; 4251 : 	return 1;
; 4252 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+128]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 112				; 00000070H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR $T253385[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR $T253386[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetTradeRoutes
PUBLIC	?lGetTradeRoutesToYou@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTradeRoutesToYou
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
xdata$x	SEGMENT
__unwindtable$?lGetTradeRoutesToYou@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetTradeRoutesToYou@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetTradeRoutesToYou@CvLuaPlayer@@KAHPAUlua_State@@@Z$1
__ehfuncinfo$?lGetTradeRoutesToYou@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?lGetTradeRoutesToYou@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetTradeRoutesToYou@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pFromCity$230543 = -116				; size = 4
$T253920 = -112						; size = 4
_iToDelta$230573 = -112					; size = 4
_pToPlayer$230546 = -112				; size = 4
_iToPressure$230566 = -108				; size = 4
_iFromPressure$230568 = -104				; size = 4
_pkInstance$253783 = -100				; size = 4
tv1059 = -96						; size = 4
tv658 = -92						; size = 4
tv596 = -92						; size = 4
_pFromPlayer$230545 = -92				; size = 4
_eToReligion$230565 = -88				; size = 4
_eFromReligion$230567 = -84				; size = 4
_index$ = -80						; size = 4
_ui$230535 = -76					; size = 4
_pTrade$ = -72						; size = 4
$T253767 = -68						; size = 28
$T253768 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetTradeRoutesToYou@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTradeRoutesToYou, COMDAT

; 4444 : {

	push	-1
	push	__ehhandler$?lGetTradeRoutesToYou@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 104				; 00000068H
	push	ebx
	push	ebp
	push	esi

; 4445 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+124]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	xor	ebp, ebp
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$253783[esp+144], ebp
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN173@lGetTradeR@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN173@lGetTradeR@2
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$253783[esp+132], eax
	cmp	eax, ebp
	je	SHORT $LN173@lGetTradeR@2
	xor	bl, bl
$LN173@lGetTradeR@2:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN20@lGetTradeR@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN20@lGetTradeR@2:

; 4446 : 
; 4447 : 	lua_createtable(L, 0, 0);

	push	ebp
	push	ebp
	push	esi
	call	_lua_createtable

; 4448 : 	int index = 1;
; 4449 : 
; 4450 : 	CvGameTrade* pTrade = GC.getGame().GetGameTrade();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _index$[esp+132], 1
	call	?GetGameTrade@CvGame@@QAEPAVCvGameTrade@@XZ ; CvGame::GetGameTrade
	mov	edi, eax

; 4451 : 	for (uint ui = 0; ui < pTrade->m_aTradeConnections.size(); ui++)

	xor	ebx, ebx
	mov	DWORD PTR _pTrade$[esp+132], edi
	mov	DWORD PTR _ui$230535[esp+132], ebx
	cmp	DWORD PTR [edi+4], ebp
	jbe	$LN172@lGetTradeR@2

; 4446 : 
; 4447 : 	lua_createtable(L, 0, 0);

	mov	DWORD PTR tv1059[esp+132], ebp
$LL6@lGetTradeR@2:

; 4452 : 	{
; 4453 : 		if (pTrade->IsTradeRouteIndexEmpty(ui))

	push	ebx
	mov	ecx, edi
	call	?IsTradeRouteIndexEmpty@CvGameTrade@@QAE_NH@Z ; CvGameTrade::IsTradeRouteIndexEmpty
	test	al, al
	jne	$LN5@lGetTradeR@2

; 4454 : 		{
; 4455 : 			continue;
; 4456 : 		}
; 4457 : 
; 4458 : 		TradeConnection* pConnection = &(pTrade->m_aTradeConnections[ui]);

	mov	ebp, DWORD PTR [edi]
	add	ebp, DWORD PTR tv1059[esp+132]

; 4459 : 		// internal trade route. Ignore.
; 4460 : 		if (pConnection->m_eOriginOwner == pConnection->m_eDestOwner)

	mov	eax, DWORD PTR [ebp+24]
	cmp	DWORD PTR [ebp+20], eax
	je	$LN5@lGetTradeR@2

; 4461 : 		{
; 4462 : 			continue;
; 4463 : 		}
; 4464 : 
; 4465 : 		// trade route does not involve target player. Ignore.
; 4466 : 		if (pConnection->m_eDestOwner != pkPlayer->GetID())

	mov	ecx, DWORD PTR _pkInstance$253783[esp+132]
	cmp	eax, DWORD PTR [ecx+44]
	jne	$LN5@lGetTradeR@2

; 4467 : 		{
; 4468 : 			continue;
; 4469 : 		}
; 4470 : 
; 4471 : 		CvCity* pFromCity = GC.getMap().plot(pConnection->m_iOriginX, pConnection->m_iOriginY)->getPlotCity();

	mov	eax, DWORD PTR [ebp+4]
	mov	edx, DWORD PTR [ebp+8]
	mov	DWORD PTR $T253920[esp+132], edx
	cmp	eax, -2147483647			; 80000001H
	je	$LN34@lGetTradeR@2
	cmp	edx, -2147483647			; 80000001H
	je	$LN34@lGetTradeR@2
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	bl, BYTE PTR [ecx+4056]
	mov	ecx, DWORD PTR [ecx+4020]
	test	bl, bl
	je	SHORT $LN44@lGetTradeR@2
	test	eax, eax
	jge	SHORT $LN46@lGetTradeR@2
	cdq
	idiv	ecx
	mov	edi, edx
	mov	edx, DWORD PTR $T253920[esp+132]
	add	edi, ecx
	jmp	SHORT $LN48@lGetTradeR@2
$LN46@lGetTradeR@2:
	cmp	eax, ecx
	jl	SHORT $LN44@lGetTradeR@2
	cdq
	idiv	ecx
	mov	edi, edx
	mov	edx, DWORD PTR $T253920[esp+132]
	jmp	SHORT $LN48@lGetTradeR@2
$LN44@lGetTradeR@2:
	mov	edi, eax
$LN48@lGetTradeR@2:
	mov	ebx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	al, BYTE PTR [ebx+4057]
	mov	ebx, DWORD PTR [ebx+4024]
	test	al, al
	je	SHORT $LN176@lGetTradeR@2
	test	edx, edx
	jge	SHORT $LN56@lGetTradeR@2
	mov	eax, edx
	cdq
	idiv	ebx
	add	edx, ebx
	jmp	SHORT $LN176@lGetTradeR@2
$LN56@lGetTradeR@2:
	cmp	edx, ebx
	jl	SHORT $LN176@lGetTradeR@2
	mov	eax, edx
	cdq
	idiv	ebx
$LN176@lGetTradeR@2:
	test	edi, edi
	jl	SHORT $LN34@lGetTradeR@2
	cmp	edi, ecx
	jge	SHORT $LN34@lGetTradeR@2
	test	edx, edx
	jl	SHORT $LN34@lGetTradeR@2
	cmp	edx, ebx
	jge	SHORT $LN34@lGetTradeR@2
	imul	ecx, edx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	add	ecx, edi
	imul	ecx, 484				; 000001e4H
	add	ecx, DWORD PTR [edx+4068]
	jmp	SHORT $LN36@lGetTradeR@2
$LN34@lGetTradeR@2:
	xor	ecx, ecx
$LN36@lGetTradeR@2:
	mov	eax, DWORD PTR [ecx+104]
	test	eax, eax
	jl	SHORT $LN174@lGetTradeR@2
	cmp	eax, 64					; 00000040H
	jge	SHORT $LN174@lGetTradeR@2
	mov	ecx, DWORD PTR [ecx+108]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	ecx
	mov	ecx, eax
	call	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z	; CvPlayer::getCity
	mov	DWORD PTR _pFromCity$230543[esp+132], eax
	jmp	SHORT $LN73@lGetTradeR@2
$LN174@lGetTradeR@2:
	mov	DWORD PTR _pFromCity$230543[esp+132], 0
$LN73@lGetTradeR@2:

; 4472 : 		CvCity* pToCity = GC.getMap().plot(pConnection->m_iDestX, pConnection->m_iDestY)->getPlotCity();

	mov	eax, DWORD PTR [ebp+12]
	mov	ecx, DWORD PTR [ebp+16]
	cmp	eax, -2147483647			; 80000001H
	je	$LN79@lGetTradeR@2
	cmp	ecx, -2147483647			; 80000001H
	je	$LN79@lGetTradeR@2
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	dl, BYTE PTR [ecx+4056]
	mov	ecx, DWORD PTR [ecx+4020]
	test	dl, dl
	je	SHORT $LN89@lGetTradeR@2
	test	eax, eax
	jge	SHORT $LN91@lGetTradeR@2
	cdq
	idiv	ecx
	mov	edi, edx
	add	edi, ecx
	jmp	SHORT $LN93@lGetTradeR@2
$LN91@lGetTradeR@2:
	cmp	eax, ecx
	jl	SHORT $LN89@lGetTradeR@2
	cdq
	idiv	ecx
	mov	edi, edx
	jmp	SHORT $LN93@lGetTradeR@2
$LN89@lGetTradeR@2:
	mov	edi, eax
$LN93@lGetTradeR@2:
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	al, BYTE PTR [edx+4057]
	mov	ebx, DWORD PTR [edx+4024]
	test	al, al
	je	SHORT $LN175@lGetTradeR@2
	mov	eax, DWORD PTR [ebp+16]
	test	eax, eax
	jge	SHORT $LN101@lGetTradeR@2
	cdq
	idiv	ebx
	add	edx, ebx
	jmp	SHORT $LN103@lGetTradeR@2
$LN101@lGetTradeR@2:
	cmp	eax, ebx
	jl	SHORT $LN175@lGetTradeR@2
	cdq
	idiv	ebx
	jmp	SHORT $LN103@lGetTradeR@2
$LN175@lGetTradeR@2:
	mov	edx, DWORD PTR [ebp+16]
$LN103@lGetTradeR@2:
	test	edi, edi
	jl	SHORT $LN79@lGetTradeR@2
	cmp	edi, ecx
	jge	SHORT $LN79@lGetTradeR@2
	test	edx, edx
	jl	SHORT $LN79@lGetTradeR@2
	cmp	edx, ebx
	jge	SHORT $LN79@lGetTradeR@2
	imul	ecx, edx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	add	ecx, edi
	imul	ecx, 484				; 000001e4H
	add	ecx, DWORD PTR [edx+4068]
	jmp	SHORT $LN81@lGetTradeR@2
$LN79@lGetTradeR@2:
	xor	ecx, ecx
$LN81@lGetTradeR@2:
	mov	eax, DWORD PTR [ecx+104]
	test	eax, eax
	jl	SHORT $LN117@lGetTradeR@2
	cmp	eax, 64					; 00000040H
	jge	SHORT $LN117@lGetTradeR@2
	mov	ecx, DWORD PTR [ecx+108]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	ecx
	mov	ecx, eax
	call	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z	; CvPlayer::getCity
	mov	ebx, eax
	jmp	SHORT $LN118@lGetTradeR@2
$LN117@lGetTradeR@2:
	xor	ebx, ebx
$LN118@lGetTradeR@2:

; 4473 : 
; 4474 : 		CvPlayer* pFromPlayer = &GET_PLAYER(pFromCity->getOwner());

	mov	edx, DWORD PTR _pFromCity$230543[esp+132]
	mov	eax, DWORD PTR [edx+84]
	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	imul	eax, 63236				; 0000f704H
	add	eax, ecx
	mov	DWORD PTR _pFromPlayer$230545[esp+132], eax

; 4475 : 		CvPlayer* pToPlayer = &GET_PLAYER(pToCity->getOwner());

	mov	eax, DWORD PTR [ebx+84]
	imul	eax, 63236				; 0000f704H

; 4476 : 
; 4477 : 		lua_createtable(L, 0, 0);

	push	0
	add	eax, ecx
	push	0
	push	esi
	mov	DWORD PTR _pToPlayer$230546[esp+144], eax
	call	_lua_createtable

; 4478 : 		const int t = lua_gettop(L);

	push	esi
	call	_lua_gettop
	mov	edi, eax

; 4479 : 
; 4480 : 		lua_pushinteger(L, pConnection->m_eDomain);

	mov	eax, DWORD PTR [ebp+28]
	push	eax
	push	esi
	call	_lua_pushinteger

; 4481 : 		lua_setfield(L, t, "Domain");

	push	OFFSET $SG230548
	push	edi
	push	esi
	call	_lua_setfield

; 4482 : 		lua_pushinteger(L, pkPlayer->getCivilizationType());

	mov	ecx, DWORD PTR _pkInstance$253783[esp+168]
	add	esp, 36					; 00000024H
	call	?getCivilizationType@CvPlayer@@QBE?AW4CivilizationTypes@@XZ ; CvPlayer::getCivilizationType
	push	eax
	push	esi
	call	_lua_pushinteger

; 4483 : 		lua_setfield(L, t, "FromCivilizationType");

	push	OFFSET $SG230549
	push	edi
	push	esi
	call	_lua_setfield

; 4484 : 		lua_pushinteger(L , pFromCity->getOwner());

	mov	ecx, DWORD PTR _pFromCity$230543[esp+152]
	mov	eax, DWORD PTR [ecx+84]
	push	eax
	push	esi
	call	_lua_pushinteger

; 4485 : 		lua_setfield(L, t, "FromID");

	push	OFFSET $SG230550
	push	edi
	push	esi
	call	_lua_setfield

; 4486 : 		lua_pushstring(L, pFromCity->getName());

	mov	ecx, DWORD PTR _pFromCity$230543[esp+172]
	add	esp, 40					; 00000028H
	lea	edx, DWORD PTR $T253767[esp+132]
	push	edx
	call	?getName@CvCity@@QBE?BVCvString@@XZ	; CvCity::getName
	mov	ecx, eax
	mov	DWORD PTR __$EHRec$[esp+140], 0
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8
	lea	ecx, DWORD PTR $T253767[esp+132]
	mov	DWORD PTR __$EHRec$[esp+140], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 4487 : 		lua_setfield(L, t, "FromCityName");

	push	OFFSET $SG230552
	push	edi
	push	esi
	call	_lua_setfield

; 4488 : 		CvLuaCity::Push(L, pFromCity);

	mov	eax, DWORD PTR _pFromCity$230543[esp+144]
	push	eax
	push	esi
	call	?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push

; 4489 : 		lua_setfield(L, t, "FromCity");

	push	OFFSET $SG230553
	push	edi
	push	esi
	call	_lua_setfield

; 4490 : 		lua_pushinteger(L, GET_PLAYER(pConnection->m_eDestOwner).getCivilizationType());

	mov	ecx, DWORD PTR [ebp+24]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	add	esp, 32					; 00000020H
	call	?getCivilizationType@CvPlayer@@QBE?AW4CivilizationTypes@@XZ ; CvPlayer::getCivilizationType
	push	eax
	push	esi
	call	_lua_pushinteger

; 4491 : 		lua_setfield(L, t, "ToCivilizationType");

	push	OFFSET $SG230554
	push	edi
	push	esi
	call	_lua_setfield

; 4492 : 		lua_pushinteger(L, pToCity->getOwner());

	mov	eax, DWORD PTR [ebx+84]
	push	eax
	push	esi
	call	_lua_pushinteger

; 4493 : 		lua_setfield(L, t, "ToID");

	push	OFFSET $SG230555
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 40					; 00000028H

; 4494 : 		lua_pushstring(L, pToCity->getName());

	lea	ecx, DWORD PTR $T253768[esp+132]
	push	ecx
	mov	ecx, ebx
	call	?getName@CvCity@@QBE?BVCvString@@XZ	; CvCity::getName
	mov	ecx, eax
	mov	DWORD PTR __$EHRec$[esp+140], 1
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8
	lea	ecx, DWORD PTR $T253768[esp+132]
	mov	DWORD PTR __$EHRec$[esp+140], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 4495 : 		lua_setfield(L, t, "ToCityName");

	push	OFFSET $SG230557
	push	edi
	push	esi
	call	_lua_setfield

; 4496 : 		CvLuaCity::Push(L, pToCity);

	push	ebx
	push	esi
	call	?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push

; 4497 : 		lua_setfield(L, t, "ToCity");

	push	OFFSET $SG230558
	push	edi
	push	esi
	call	_lua_setfield

; 4498 : #ifdef AUI_WARNING_FIXES
; 4499 : 		const CvPlayerTrade* pFromPlayerTrade = pFromPlayer->GetTrade();
; 4500 : 		const CvPlayerTrade* pToPlayerTrade = pToPlayer->GetTrade();
; 4501 : 		lua_pushinteger(L, pFromPlayerTrade->GetTradeConnectionValueTimes100(*pConnection, YIELD_GOLD, true));
; 4502 : 		lua_setfield(L, t, "FromGPT");
; 4503 : 		lua_pushinteger(L, pToPlayerTrade->GetTradeConnectionValueTimes100(*pConnection, YIELD_GOLD, false));
; 4504 : 		lua_setfield(L, t, "ToGPT");
; 4505 : 		lua_pushinteger(L, pToPlayerTrade->GetTradeConnectionValueTimes100(*pConnection, YIELD_FOOD, false));
; 4506 : 		lua_setfield(L, t, "ToFood");
; 4507 : 		lua_pushinteger(L, pToPlayerTrade->GetTradeConnectionValueTimes100(*pConnection, YIELD_PRODUCTION, false));
; 4508 : 		lua_setfield(L, t, "ToProduction");
; 4509 : 		lua_pushinteger(L, pFromPlayerTrade->GetTradeConnectionValueTimes100(*pConnection, YIELD_SCIENCE, true));
; 4510 : 		lua_setfield(L, t, "FromScience");
; 4511 : 		lua_pushinteger(L, pToPlayerTrade->GetTradeConnectionValueTimes100(*pConnection, YIELD_SCIENCE, false));
; 4512 : #else
; 4513 : 		lua_pushinteger(L, pFromPlayer->GetTrade()->GetTradeConnectionValueTimes100(*pConnection, YIELD_GOLD, true));

	mov	ecx, DWORD PTR _pFromPlayer$230545[esp+164]
	add	esp, 32					; 00000020H
	push	1
	push	2
	push	ebp
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	ecx, eax
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	push	eax
	push	esi
	call	_lua_pushinteger

; 4514 : 		lua_setfield(L, t, "FromGPT");

	push	OFFSET $SG230559
	push	edi
	push	esi
	call	_lua_setfield

; 4515 : 		lua_pushinteger(L, pToPlayer->GetTrade()->GetTradeConnectionValueTimes100(*pConnection, YIELD_GOLD, false));

	mov	ecx, DWORD PTR _pToPlayer$230546[esp+152]
	add	esp, 20					; 00000014H
	push	0
	push	2
	push	ebp
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	ecx, eax
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	push	eax
	push	esi
	call	_lua_pushinteger

; 4516 : 		lua_setfield(L, t, "ToGPT");

	push	OFFSET $SG230560
	push	edi
	push	esi
	call	_lua_setfield

; 4517 : 		lua_pushinteger(L, pToPlayer->GetTrade()->GetTradeConnectionValueTimes100(*pConnection, YIELD_FOOD, false));

	mov	ecx, DWORD PTR _pToPlayer$230546[esp+152]
	add	esp, 20					; 00000014H
	push	0
	push	0
	push	ebp
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	ecx, eax
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	push	eax
	push	esi
	call	_lua_pushinteger

; 4518 : 		lua_setfield(L, t, "ToFood");

	push	OFFSET $SG230561
	push	edi
	push	esi
	call	_lua_setfield

; 4519 : 		lua_pushinteger(L, pToPlayer->GetTrade()->GetTradeConnectionValueTimes100(*pConnection, YIELD_PRODUCTION, false));

	mov	ecx, DWORD PTR _pToPlayer$230546[esp+152]
	add	esp, 20					; 00000014H
	push	0
	push	1
	push	ebp
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	ecx, eax
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	push	eax
	push	esi
	call	_lua_pushinteger

; 4520 : 		lua_setfield(L, t, "ToProduction");

	push	OFFSET $SG230562
	push	edi
	push	esi
	call	_lua_setfield

; 4521 : 		lua_pushinteger(L, pFromPlayer->GetTrade()->GetTradeConnectionValueTimes100(*pConnection, YIELD_SCIENCE, true));

	mov	ecx, DWORD PTR _pFromPlayer$230545[esp+152]
	add	esp, 20					; 00000014H
	push	1
	push	3
	push	ebp
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	ecx, eax
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	push	eax
	push	esi
	call	_lua_pushinteger

; 4522 : 		lua_setfield(L, t, "FromScience");

	push	OFFSET $SG230563
	push	edi
	push	esi
	call	_lua_setfield

; 4523 : 		lua_pushinteger(L, pToPlayer->GetTrade()->GetTradeConnectionValueTimes100(*pConnection, YIELD_SCIENCE, false));

	mov	ecx, DWORD PTR _pToPlayer$230546[esp+152]
	add	esp, 20					; 00000014H
	push	0
	push	3
	push	ebp
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	ecx, eax
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	push	eax
	push	esi
	call	_lua_pushinteger

; 4524 : #endif
; 4525 : 		lua_setfield(L, t, "ToScience");

	push	OFFSET $SG230564
	push	edi
	push	esi
	call	_lua_setfield

; 4526 : 
; 4527 : 		ReligionTypes eToReligion = NO_RELIGION;

	or	eax, -1
	add	esp, 20					; 00000014H

; 4528 : 		int iToPressure = 0;
; 4529 : 		ReligionTypes eFromReligion = NO_RELIGION;
; 4530 : 		int iFromPressure = 0;
; 4531 : 
; 4532 : 		pFromCity->GetCityReligions()->WouldExertTradeRoutePressureToward(pToCity, eToReligion, iToPressure);

	lea	edx, DWORD PTR _iToPressure$230566[esp+132]
	mov	DWORD PTR _eToReligion$230565[esp+132], eax
	xor	ecx, ecx
	mov	DWORD PTR _eFromReligion$230567[esp+132], eax
	push	edx
	lea	eax, DWORD PTR _eToReligion$230565[esp+136]
	push	eax
	mov	DWORD PTR _iToPressure$230566[esp+140], ecx
	mov	DWORD PTR _iFromPressure$230568[esp+140], ecx
	mov	ecx, DWORD PTR _pFromCity$230543[esp+140]
	push	ebx
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?WouldExertTradeRoutePressureToward@CvCityReligions@@QAE_NPAVCvCity@@AAW4ReligionTypes@@AAH@Z ; CvCityReligions::WouldExertTradeRoutePressureToward

; 4533 : 		pToCity->GetCityReligions()->WouldExertTradeRoutePressureToward(pFromCity, eFromReligion, iFromPressure);

	mov	eax, DWORD PTR _pFromCity$230543[esp+132]
	lea	ecx, DWORD PTR _iFromPressure$230568[esp+132]
	push	ecx
	lea	edx, DWORD PTR _eFromReligion$230567[esp+136]
	push	edx
	push	eax
	mov	ecx, ebx
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?WouldExertTradeRoutePressureToward@CvCityReligions@@QAE_NPAVCvCity@@AAW4ReligionTypes@@AAH@Z ; CvCityReligions::WouldExertTradeRoutePressureToward

; 4534 : 
; 4535 : 		// Internally pressure is now 10 times greater than what is shown to user
; 4536 : 		iToPressure /= GC.getRELIGION_MISSIONARY_PRESSURE_MULTIPLIER();

	mov	eax, DWORD PTR _iToPressure$230566[esp+132]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7900
	cdq
	idiv	ecx
	mov	DWORD PTR _iToPressure$230566[esp+132], eax

; 4537 : 		iFromPressure /= GC.getRELIGION_MISSIONARY_PRESSURE_MULTIPLIER();

	mov	eax, DWORD PTR _iFromPressure$230568[esp+132]
	cdq
	idiv	ecx

; 4538 : 
; 4539 : 		lua_pushinteger(L, eToReligion);

	mov	ecx, DWORD PTR _eToReligion$230565[esp+132]
	push	ecx
	push	esi
	mov	DWORD PTR _iFromPressure$230568[esp+140], eax
	call	_lua_pushinteger

; 4540 : 		lua_setfield(L, t, "ToReligion");

	push	OFFSET $SG230569
	push	edi
	push	esi
	call	_lua_setfield

; 4541 : 		lua_pushinteger(L, iToPressure);

	mov	edx, DWORD PTR _iToPressure$230566[esp+152]
	push	edx
	push	esi
	call	_lua_pushinteger

; 4542 : 		lua_setfield(L, t, "ToPressure");

	push	OFFSET $SG230570
	push	edi
	push	esi
	call	_lua_setfield

; 4543 : 		lua_pushinteger(L, eFromReligion);

	mov	eax, DWORD PTR _eFromReligion$230567[esp+172]
	push	eax
	push	esi
	call	_lua_pushinteger

; 4544 : 		lua_setfield(L, t, "FromReligion");

	push	OFFSET $SG230571
	push	edi
	push	esi
	call	_lua_setfield

; 4545 : 		lua_pushinteger(L, iFromPressure);

	mov	ecx, DWORD PTR _iFromPressure$230568[esp+192]
	push	ecx
	push	esi
	call	_lua_pushinteger
	add	esp, 68					; 00000044H

; 4546 : 		lua_setfield(L, t, "FromPressure");

	push	OFFSET $SG230572
	push	edi
	push	esi
	call	_lua_setfield

; 4547 : 
; 4548 : 		int iToDelta = pFromCity->GetCityCulture()->GetBaseTourism() * pFromCity->GetCityCulture()->GetTourismMultiplier(pToPlayer->GetID(), true, true, false, true, true);

	mov	edx, DWORD PTR _pToPlayer$230546[esp+144]
	mov	eax, DWORD PTR [edx+44]
	mov	ecx, DWORD PTR _pFromCity$230543[esp+144]
	add	esp, 12					; 0000000cH
	push	1
	push	1
	push	0
	push	1
	push	1
	push	eax
	call	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ ; CvCity::GetCityCulture
	mov	ecx, eax
	call	?GetTourismMultiplier@CvCityCulture@@QBEHW4PlayerTypes@@_N1111@Z ; CvCityCulture::GetTourismMultiplier
	mov	ecx, DWORD PTR _pFromCity$230543[esp+132]
	mov	DWORD PTR tv596[esp+132], eax
	call	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ ; CvCity::GetCityCulture
	mov	ecx, eax
	call	?GetBaseTourism@CvCityCulture@@QAEHXZ	; CvCityCulture::GetBaseTourism
	mov	ecx, DWORD PTR tv596[esp+132]

; 4549 : 		int iFromDelta = pToCity->GetCityCulture()->GetBaseTourism() * pToCity->GetCityCulture()->GetTourismMultiplier(pkPlayer->GetID(), true, true, false, true, true);

	mov	edx, DWORD PTR _pkInstance$253783[esp+132]
	imul	ecx, eax
	mov	eax, DWORD PTR [edx+44]
	push	1
	push	1
	push	0
	push	1
	push	1
	mov	DWORD PTR _iToDelta$230573[esp+152], ecx
	push	eax
	mov	ecx, ebx
	call	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ ; CvCity::GetCityCulture
	mov	ecx, eax
	call	?GetTourismMultiplier@CvCityCulture@@QBEHW4PlayerTypes@@_N1111@Z ; CvCityCulture::GetTourismMultiplier
	mov	ecx, ebx
	mov	DWORD PTR tv658[esp+132], eax
	call	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ ; CvCity::GetCityCulture
	mov	ecx, eax
	call	?GetBaseTourism@CvCityCulture@@QAEHXZ	; CvCityCulture::GetBaseTourism
	mov	ecx, DWORD PTR tv658[esp+132]
	imul	ecx, eax

; 4550 : 		lua_pushinteger(L, iFromDelta);

	push	ecx
	push	esi
	call	_lua_pushinteger

; 4551 : 		lua_setfield(L, t, "FromTourism");

	push	OFFSET $SG230575
	push	edi
	push	esi
	call	_lua_setfield

; 4552 : 		lua_pushinteger(L, iToDelta);

	mov	eax, DWORD PTR _iToDelta$230573[esp+152]
	push	eax
	push	esi
	call	_lua_pushinteger

; 4553 : 		lua_setfield(L, t, "ToTourism");

	push	OFFSET $SG230576
	push	edi
	push	esi
	call	_lua_setfield

; 4554 : 
; 4555 : 		lua_pushinteger(L, GC.getGame().getGameTurn() - pConnection->m_iTurnRouteComplete);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 40					; 00000028H
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	sub	eax, DWORD PTR [ebp+392]
	push	eax
	push	esi
	call	_lua_pushinteger

; 4556 : 		lua_setfield(L, t, "TurnsLeft");

	push	OFFSET $SG230577
	push	edi
	push	esi
	call	_lua_setfield

; 4557 : 
; 4558 : 		lua_rawseti(L, -2, index++);

	mov	edi, DWORD PTR _index$[esp+152]
	push	edi
	push	-2					; fffffffeH
	push	esi
	call	_lua_rawseti
	mov	ebx, DWORD PTR _ui$230535[esp+164]
	add	esp, 32					; 00000020H
	inc	edi
	mov	DWORD PTR _index$[esp+132], edi
	mov	edi, DWORD PTR _pTrade$[esp+132]
$LN5@lGetTradeR@2:
	add	DWORD PTR tv1059[esp+132], 444		; 000001bcH
	inc	ebx
	mov	DWORD PTR _ui$230535[esp+132], ebx
	cmp	ebx, DWORD PTR [edi+4]
	jb	$LL6@lGetTradeR@2
$LN172@lGetTradeR@2:

; 4559 : 	}
; 4560 : 
; 4561 : 	return 1;
; 4562 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+132]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 116				; 00000074H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetTradeRoutesToYou@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR $T253767[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeRoutesToYou@CvLuaPlayer@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR $T253768[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetTradeRoutesToYou@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetTradeRoutesToYou@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetTradeRoutesToYou@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTradeRoutesToYou
PUBLIC	?lGetNumTechDifference@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumTechDifference
EXTRN	?GetTechDifference@CvGameTrade@@QAEHW4PlayerTypes@@0@Z:PROC ; CvGameTrade::GetTechDifference
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumTechDifference@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumTechDifference@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumTechDifference, COMDAT

; 4566 : {

	push	ebx
	push	ebp
	push	esi

; 4567 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumTec
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumTec
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumTec
	xor	bl, bl
$LN5@lGetNumTec:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumTec
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumTec:

; 4568 : 	PlayerTypes eOtherPlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 4569 : 	lua_pushinteger(L, GC.getGame().GetGameTrade()->GetTechDifference(pkPlayer->GetID(), eOtherPlayer));

	mov	edi, DWORD PTR [edi+44]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 8
	push	eax
	push	edi
	call	?GetGameTrade@CvGame@@QAEPAVCvGameTrade@@XZ ; CvGame::GetGameTrade
	mov	ecx, eax
	call	?GetTechDifference@CvGameTrade@@QAEHW4PlayerTypes@@0@Z ; CvGameTrade::GetTechDifference
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 4570 : 	return 1;

	mov	eax, 1
	pop	ebx

; 4571 : }

	ret	0
?lGetNumTechDifference@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumTechDifference
_TEXT	ENDS
PUBLIC	?lGetGreatWorks@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatWorks
EXTRN	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ:PROC ; CvGame::GetGameCulture
EXTRN	?GetBuildingGreatWork@CvCityBuildings@@QBEHW4BuildingClassTypes@@H@Z:PROC ; CvCityBuildings::GetBuildingGreatWork
EXTRN	?GetGreatWorkCount@CvBuildingEntry@@QBEHXZ:PROC	; CvBuildingEntry::GetGreatWorkCount
EXTRN	?GetNumBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z:PROC ; CvCityBuildings::GetNumBuilding
EXTRN	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ:PROC ; CvCity::GetCityBuildings
EXTRN	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ:PROC ; CvPlayer::getCivilizationInfo
EXTRN	?getNumBuildingClassInfos@CvGlobals@@QAEHXZ:PROC ; CvGlobals::getNumBuildingClassInfos
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGreatWorks@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkInstance$254212 = -32				; size = 4
_iBuildingClassLoop$230596 = -28			; size = 4
_pCity$ = -24						; size = 4
_index$ = -20						; size = 4
_iI$230609 = -16					; size = 4
_eGreatWorkClass$ = -12					; size = 4
_iNumSlots$230608 = -8					; size = 4
_iCityLoop$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetGreatWorks@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetGreatWorks, COMDAT

; 4575 : {

	sub	esp, 32					; 00000020H
	push	ebx
	push	esi

; 4576 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+36]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$254212[esp+56], 0
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN47@lGetGreatW
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN47@lGetGreatW
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$254212[esp+44], eax
	test	eax, eax
	je	SHORT $LN47@lGetGreatW
	xor	bl, bl
$LN47@lGetGreatW:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN26@lGetGreatW
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN26@lGetGreatW:

; 4577 : 	GreatWorkClass eGreatWorkClass = (GreatWorkClass)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 4578 : 
; 4579 : 	lua_createtable(L, 0, 0);

	push	0
	push	0
	push	esi
	mov	DWORD PTR _eGreatWorkClass$[esp+64], eax
	call	_lua_createtable

; 4580 : 	int index = 1;
; 4581 : 
; 4582 : 	int iCityLoop;
; 4583 : 	CvCity* pCity = NULL;
; 4584 : 	for (pCity = pkPlayer->firstCity(&iCityLoop); pCity != NULL; pCity = pkPlayer->nextCity(&iCityLoop))

	mov	ecx, DWORD PTR _pkInstance$254212[esp+64]
	add	esp, 20					; 00000014H
	push	0
	lea	eax, DWORD PTR _iCityLoop$[esp+48]
	push	eax
	mov	DWORD PTR _index$[esp+52], 1
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pCity$[esp+44], eax
	test	eax, eax
	je	$LN46@lGetGreatW
	push	ebp
$LL49@lGetGreatW:

; 4585 : 	{
; 4586 : #ifdef AUI_WARNING_FIXES
; 4587 : 		for (uint iBuildingClassLoop = 0; iBuildingClassLoop < GC.getNumBuildingClassInfos(); iBuildingClassLoop++)
; 4588 : #else
; 4589 : 		for(int iBuildingClassLoop = 0; iBuildingClassLoop < GC.getNumBuildingClassInfos(); iBuildingClassLoop++)

	xor	ebp, ebp
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR _iBuildingClassLoop$230596[esp+48], ebp
	call	?getNumBuildingClassInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumBuildingClassInfos
	test	eax, eax
	jle	$LN13@lGetGreatW
	npad	5
$LL53@lGetGreatW:

; 4590 : #endif
; 4591 : 		{
; 4592 : 			CvCivilizationInfo& playerCivilizationInfo = pkPlayer->getCivilizationInfo();

	mov	ecx, DWORD PTR _pkInstance$254212[esp+48]
	call	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ ; CvPlayer::getCivilizationInfo

; 4593 : 			BuildingTypes eBuilding = (BuildingTypes)playerCivilizationInfo.getCivilizationBuildings((BuildingClassTypes)iBuildingClassLoop);

	push	ebp
	mov	ecx, eax
	call	?getCivilizationBuildings@CvCivilizationInfo@@QBEHH@Z ; CvCivilizationInfo::getCivilizationBuildings
	mov	edi, eax

; 4594 : 			if (eBuilding != NO_BUILDING)

	cmp	edi, -1
	je	$LN10@lGetGreatW

; 4595 : 			{
; 4596 : 				CvBuildingEntry *pkBuilding = GC.getBuildingInfo(eBuilding);

	push	edi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	ebx, eax

; 4597 : 				if (pkBuilding)

	test	ebx, ebx
	je	$LN10@lGetGreatW

; 4598 : 				{
; 4599 : 					if (pCity->GetCityBuildings()->GetNumBuilding(eBuilding) > 0)

	mov	ecx, DWORD PTR _pCity$[esp+48]
	push	edi
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetNumBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetNumBuilding
	test	eax, eax
	jle	$LN10@lGetGreatW

; 4600 : 					{
; 4601 : 						int iNumSlots = pkBuilding->GetGreatWorkCount();

	mov	ecx, ebx
	call	?GetGreatWorkCount@CvBuildingEntry@@QBEHXZ ; CvBuildingEntry::GetGreatWorkCount

; 4602 : 						for (int iI = 0; iI < iNumSlots; iI++)

	xor	edi, edi
	mov	DWORD PTR _iNumSlots$230608[esp+48], eax
	mov	DWORD PTR _iI$230609[esp+48], edi
	test	eax, eax
	jle	$LN10@lGetGreatW
$LL5@lGetGreatW:

; 4603 : 						{
; 4604 : 							int iGreatWorkIndex = pCity->GetCityBuildings()->GetBuildingGreatWork((BuildingClassTypes)iBuildingClassLoop, iI);

	mov	ecx, DWORD PTR _pCity$[esp+48]
	push	edi
	push	ebp
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetBuildingGreatWork@CvCityBuildings@@QBEHW4BuildingClassTypes@@H@Z ; CvCityBuildings::GetBuildingGreatWork
	mov	ebp, eax

; 4605 : 							if (iGreatWorkIndex != -1)

	cmp	ebp, -1
	je	$LN4@lGetGreatW

; 4606 : 							{
; 4607 : 								if (GC.getGame().GetGameCulture()->m_CurrentGreatWorks[iGreatWorkIndex].m_eClassType == eGreatWorkClass)

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _eGreatWorkClass$[esp+48]
	lea	ebx, DWORD PTR [ebp+ebp*2]
	shl	ebx, 4
	cmp	DWORD PTR [ebx+ecx+32], edx
	jne	$LN4@lGetGreatW

; 4608 : 								{
; 4609 : 									lua_createtable(L, 0, 0);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 4610 : 									const int t = lua_gettop(L);

	push	esi
	call	_lua_gettop

; 4611 : 									lua_pushinteger(L, iGreatWorkIndex);

	push	ebp
	push	esi
	mov	edi, eax
	call	_lua_pushinteger

; 4612 : 									lua_setfield(L, t, "Index");

	push	OFFSET $SG230618
	push	edi
	push	esi
	call	_lua_setfield

; 4613 : 									lua_pushinteger(L, GC.getGame().GetGameCulture()->m_CurrentGreatWorks[iGreatWorkIndex].m_ePlayer);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 36					; 00000024H
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [eax+ebx+44]
	push	ecx
	push	esi
	call	_lua_pushinteger

; 4614 : 									lua_setfield(L, t, "Creator");

	push	OFFSET $SG230619
	push	edi
	push	esi
	call	_lua_setfield

; 4615 : 									int iEra = GC.getGame().GetGameCulture()->m_CurrentGreatWorks[iGreatWorkIndex].m_eEra;

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 20					; 00000014H
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture

; 4616 : 									lua_pushinteger(L, iEra);

	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [ebx+edx+40]
	push	eax
	push	esi
	call	_lua_pushinteger

; 4617 : 									lua_setfield(L, t, "Era");

	push	OFFSET $SG230621
	push	edi
	push	esi
	call	_lua_setfield

; 4618 : 									lua_rawseti(L, -2, index++);

	mov	edi, DWORD PTR _index$[esp+68]
	push	edi
	push	-2					; fffffffeH
	push	esi
	call	_lua_rawseti
	add	esp, 32					; 00000020H
	inc	edi
	mov	DWORD PTR _index$[esp+48], edi
	mov	edi, DWORD PTR _iI$230609[esp+48]
$LN4@lGetGreatW:
	mov	ebp, DWORD PTR _iBuildingClassLoop$230596[esp+48]
	inc	edi
	cmp	edi, DWORD PTR _iNumSlots$230608[esp+48]
	mov	DWORD PTR _iI$230609[esp+48], edi
	jl	$LL5@lGetGreatW
$LN10@lGetGreatW:

; 4585 : 	{
; 4586 : #ifdef AUI_WARNING_FIXES
; 4587 : 		for (uint iBuildingClassLoop = 0; iBuildingClassLoop < GC.getNumBuildingClassInfos(); iBuildingClassLoop++)
; 4588 : #else
; 4589 : 		for(int iBuildingClassLoop = 0; iBuildingClassLoop < GC.getNumBuildingClassInfos(); iBuildingClassLoop++)

	inc	ebp
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR _iBuildingClassLoop$230596[esp+48], ebp
	call	?getNumBuildingClassInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumBuildingClassInfos
	cmp	ebp, eax
	jl	$LL53@lGetGreatW
$LN13@lGetGreatW:

; 4580 : 	int index = 1;
; 4581 : 
; 4582 : 	int iCityLoop;
; 4583 : 	CvCity* pCity = NULL;
; 4584 : 	for (pCity = pkPlayer->firstCity(&iCityLoop); pCity != NULL; pCity = pkPlayer->nextCity(&iCityLoop))

	push	0
	lea	ecx, DWORD PTR _iCityLoop$[esp+52]
	push	ecx
	mov	ecx, DWORD PTR _pkInstance$254212[esp+56]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pCity$[esp+48], eax
	test	eax, eax
	jne	$LL49@lGetGreatW
	pop	ebp
$LN46@lGetGreatW:
	pop	edi
	pop	esi

; 4619 : 								}
; 4620 : 							}
; 4621 : 						}
; 4622 : 					}
; 4623 : 				}
; 4624 : 			}
; 4625 : 		}
; 4626 : 	}
; 4627 : 
; 4628 : 	return 1;

	mov	eax, 1
	pop	ebx

; 4629 : }

	add	esp, 32					; 00000020H
	ret	0
?lGetGreatWorks@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetGreatWorks
_TEXT	ENDS
PUBLIC	?lGetOthersGreatWorks@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetOthersGreatWorks
EXTRN	?GetSwappableMusicIndex@CvPlayerCulture@@QBEHXZ:PROC ; CvPlayerCulture::GetSwappableMusicIndex
EXTRN	?GetSwappableArtifactIndex@CvPlayerCulture@@QBEHXZ:PROC ; CvPlayerCulture::GetSwappableArtifactIndex
EXTRN	?GetSwappableArtIndex@CvPlayerCulture@@QBEHXZ:PROC ; CvPlayerCulture::GetSwappableArtIndex
EXTRN	?GetSwappableWritingIndex@CvPlayerCulture@@QBEHXZ:PROC ; CvPlayerCulture::GetSwappableWritingIndex
EXTRN	?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z:PROC	; CvTeam::isHasMet
EXTRN	?isAtWar@CvTeam@@QBE_NW4TeamTypes@@@Z:PROC	; CvTeam::isAtWar
; Function compile flags: /Ogtpy
;	COMDAT ?lGetOthersGreatWorks@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkInstance$254276 = -20				; size = 4
_eMusicWorkPlayer$230661 = -16				; size = 4
_eArtifactWorkPlayer$230654 = -16			; size = 4
_eArtWorkPlayer$230647 = -16				; size = 4
_eWritingWorkPlayer$230640 = -16			; size = 4
_index$ = -12						; size = 4
_uiPlayer$230627 = -8					; size = 4
_eMusicWorkEra$230662 = -4				; size = 4
_eArtifactWorkEra$230655 = -4				; size = 4
_eArtWorkEra$230648 = -4				; size = 4
_eWritingWorkEra$230641 = -4				; size = 4
_L$ = 8							; size = 4
?lGetOthersGreatWorks@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetOthersGreatWorks, COMDAT

; 4633 : {

	sub	esp, 20					; 00000014H
	push	ebx
	push	ebp
	push	esi

; 4634 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+28]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	xor	ebp, ebp
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$254276[esp+48], ebp
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN104@lGetOthers
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN104@lGetOthers
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$254276[esp+36], eax
	cmp	eax, ebp
	je	SHORT $LN104@lGetOthers
	xor	bl, bl
$LN104@lGetOthers:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN23@lGetOthers
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN23@lGetOthers:

; 4635 : 
; 4636 : 	lua_createtable(L, 0, 0);

	push	ebp
	push	ebp
	push	esi
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 4637 : 	int index = 1;
; 4638 : 
; 4639 : 	for (uint uiPlayer = 0; uiPlayer < MAX_MAJOR_CIVS; uiPlayer++)

	xor	ebx, ebx
	mov	DWORD PTR _index$[esp+36], 1
	mov	DWORD PTR _uiPlayer$230627[esp+36], ebx
	npad	3
$LL11@lGetOthers:

; 4640 : 	{
; 4641 : 		PlayerTypes eOtherPlayer = (PlayerTypes)uiPlayer;
; 4642 : 
; 4643 : 		// skip if me
; 4644 : 		if (eOtherPlayer == pkPlayer->GetID())

	mov	eax, DWORD PTR _pkInstance$254276[esp+36]
	cmp	ebx, DWORD PTR [eax+44]
	je	$LN10@lGetOthers

; 4645 : 		{
; 4646 : 			continue;
; 4647 : 		}
; 4648 : 
; 4649 : 		// skip if dead
; 4650 : 		if (!GET_PLAYER(eOtherPlayer).isAlive())

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	cmp	BYTE PTR [eax+ebp+2256], 0
	je	$LN10@lGetOthers

; 4651 : 		{
; 4652 : 			continue;
; 4653 : 		}
; 4654 : 
; 4655 : 		// skip if at war
; 4656 : 		if (GET_TEAM(pkPlayer->getTeam()).isAtWar(GET_PLAYER(eOtherPlayer).getTeam()))

	mov	eax, DWORD PTR [eax+ebp+44]
	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN41@lGetOthers
	mov	ecx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	edx, DWORD PTR [ecx+4]
	mov	edi, DWORD PTR [edx+eax*4]
	jmp	SHORT $LN42@lGetOthers
$LN41@lGetOthers:
	or	edi, -1
$LN42@lGetOthers:
	mov	ecx, DWORD PTR _pkInstance$254276[esp+36]
	call	?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ	; CvPlayer::getTeam
	imul	eax, 2984				; 00000ba8H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	push	edi
	mov	ecx, eax
	call	?isAtWar@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isAtWar
	test	al, al
	jne	$LN10@lGetOthers

; 4657 : 		{
; 4658 : 			continue;
; 4659 : 		}
; 4660 : 
; 4661 : 		// skip if have not met
; 4662 : 		if (!GET_TEAM(pkPlayer->getTeam()).isHasMet(GET_PLAYER(eOtherPlayer).getTeam()))

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	eax, DWORD PTR [eax+ebp+44]
	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN54@lGetOthers
	mov	ecx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	edx, DWORD PTR [ecx+4]
	mov	edi, DWORD PTR [edx+eax*4]
	jmp	SHORT $LN55@lGetOthers
$LN54@lGetOthers:
	or	edi, -1
$LN55@lGetOthers:
	mov	ecx, DWORD PTR _pkInstance$254276[esp+36]
	call	?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ	; CvPlayer::getTeam
	imul	eax, 2984				; 00000ba8H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	push	edi
	mov	ecx, eax
	call	?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isHasMet
	test	al, al
	je	$LN10@lGetOthers

; 4663 : 		{
; 4664 : 			continue;
; 4665 : 		}
; 4666 : 
; 4667 : 		lua_createtable(L, 0, 0);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 4668 : 		const int t = lua_gettop(L);

	push	esi
	call	_lua_gettop

; 4669 : 
; 4670 : 		lua_pushinteger(L, eOtherPlayer);

	push	ebx
	push	esi
	mov	edi, eax
	call	_lua_pushinteger

; 4671 : 		lua_setfield(L, t, "iPlayer");

	push	OFFSET $SG230638
	push	edi
	push	esi
	call	_lua_setfield

; 4672 : 
; 4673 : 		// writing
; 4674 : 		int iWritingWorkIndex = GET_PLAYER(eOtherPlayer).GetCulture()->GetSwappableWritingIndex();

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	add	esp, 36					; 00000024H
	lea	ecx, DWORD PTR [eax+ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetSwappableWritingIndex@CvPlayerCulture@@QBEHXZ ; CvPlayerCulture::GetSwappableWritingIndex
	mov	ebx, eax

; 4675 : 		PlayerTypes eWritingWorkPlayer = NO_PLAYER;

	or	eax, -1

; 4676 : 		EraTypes eWritingWorkEra = NO_ERA;
; 4677 : 		lua_pushinteger(L, iWritingWorkIndex);

	push	ebx
	push	esi
	mov	DWORD PTR _eWritingWorkPlayer$230640[esp+44], eax
	mov	DWORD PTR _eWritingWorkEra$230641[esp+44], eax
	call	_lua_pushinteger

; 4678 : 		lua_setfield(L, t, "WritingIndex");

	push	OFFSET $SG230642
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 4679 : 		if (iWritingWorkIndex != -1)

	cmp	ebx, -1
	je	SHORT $LN106@lGetOthers

; 4680 : 		{
; 4681 : 			eWritingWorkPlayer = GC.getGame().GetGameCulture()->m_CurrentGreatWorks[iWritingWorkIndex].m_ePlayer;

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	ecx, DWORD PTR [eax]
	lea	ebx, DWORD PTR [ebx+ebx*2]
	shl	ebx, 4
	mov	edx, DWORD PTR [ebx+ecx+44]

; 4682 : 			eWritingWorkEra = GC.getGame().GetGameCulture()->m_CurrentGreatWorks[iWritingWorkIndex].m_eEra;

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR _eWritingWorkPlayer$230640[esp+36], edx
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	eax, DWORD PTR [eax]
	mov	ebx, DWORD PTR [ebx+eax+40]
	jmp	SHORT $LN4@lGetOthers
$LN106@lGetOthers:
	mov	ebx, DWORD PTR _eWritingWorkEra$230641[esp+36]
$LN4@lGetOthers:

; 4683 : 		}
; 4684 : 		lua_pushinteger(L, eWritingWorkPlayer);

	mov	ecx, DWORD PTR _eWritingWorkPlayer$230640[esp+36]
	push	ecx
	push	esi
	call	_lua_pushinteger

; 4685 : 		lua_setfield(L, t, "WritingCreator");

	push	OFFSET $SG230644
	push	edi
	push	esi
	call	_lua_setfield

; 4686 : 		lua_pushinteger(L, eWritingWorkEra);

	push	ebx
	push	esi
	call	_lua_pushinteger

; 4687 : 		lua_setfield(L, t, "WritingEra");

	push	OFFSET $SG230645
	push	edi
	push	esi
	call	_lua_setfield

; 4688 : 
; 4689 : 		// art
; 4690 : 		int iArtWorkIndex = GET_PLAYER(eOtherPlayer).GetCulture()->GetSwappableArtIndex();

	mov	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	add	esp, 40					; 00000028H
	lea	ecx, DWORD PTR [edx+ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetSwappableArtIndex@CvPlayerCulture@@QBEHXZ ; CvPlayerCulture::GetSwappableArtIndex
	mov	ebx, eax

; 4691 : 		PlayerTypes eArtWorkPlayer = NO_PLAYER;

	or	eax, -1

; 4692 : 		EraTypes eArtWorkEra = NO_ERA;
; 4693 : 		lua_pushinteger(L, iArtWorkIndex);

	push	ebx
	push	esi
	mov	DWORD PTR _eArtWorkPlayer$230647[esp+44], eax
	mov	DWORD PTR _eArtWorkEra$230648[esp+44], eax
	call	_lua_pushinteger

; 4694 : 		lua_setfield(L, t, "ArtIndex");

	push	OFFSET $SG230649
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 4695 : 		if (iArtWorkIndex != -1)

	cmp	ebx, -1
	je	SHORT $LN107@lGetOthers

; 4696 : 		{
; 4697 : 			eArtWorkPlayer = GC.getGame().GetGameCulture()->m_CurrentGreatWorks[iArtWorkIndex].m_ePlayer;

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	eax, DWORD PTR [eax]
	lea	ebx, DWORD PTR [ebx+ebx*2]
	shl	ebx, 4
	mov	ecx, DWORD PTR [eax+ebx+44]
	mov	DWORD PTR _eArtWorkPlayer$230647[esp+36], ecx

; 4698 : 			eArtWorkEra = GC.getGame().GetGameCulture()->m_CurrentGreatWorks[iArtWorkIndex].m_eEra;

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	edx, DWORD PTR [eax]
	mov	ebx, DWORD PTR [ebx+edx+40]
	jmp	SHORT $LN3@lGetOthers
$LN107@lGetOthers:
	mov	ebx, DWORD PTR _eArtWorkEra$230648[esp+36]
$LN3@lGetOthers:

; 4699 : 		}
; 4700 : 		lua_pushinteger(L, eArtWorkPlayer);

	mov	eax, DWORD PTR _eArtWorkPlayer$230647[esp+36]
	push	eax
	push	esi
	call	_lua_pushinteger

; 4701 : 		lua_setfield(L, t, "ArtCreator");

	push	OFFSET $SG230651
	push	edi
	push	esi
	call	_lua_setfield

; 4702 : 		lua_pushinteger(L, eArtWorkEra);

	push	ebx
	push	esi
	call	_lua_pushinteger

; 4703 : 		lua_setfield(L, t, "ArtEra");

	push	OFFSET $SG230652
	push	edi
	push	esi
	call	_lua_setfield

; 4704 : 
; 4705 : 		// artifact
; 4706 : 		int iArtifactWorkIndex = GET_PLAYER(eOtherPlayer).GetCulture()->GetSwappableArtifactIndex();

	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	add	esp, 40					; 00000028H
	add	ecx, ebp
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetSwappableArtifactIndex@CvPlayerCulture@@QBEHXZ ; CvPlayerCulture::GetSwappableArtifactIndex
	mov	ebx, eax

; 4707 : 		PlayerTypes eArtifactWorkPlayer = NO_PLAYER;

	or	eax, -1

; 4708 : 		EraTypes eArtifactWorkEra = NO_ERA;
; 4709 : 		lua_pushinteger(L, iArtifactWorkIndex);

	push	ebx
	push	esi
	mov	DWORD PTR _eArtifactWorkPlayer$230654[esp+44], eax
	mov	DWORD PTR _eArtifactWorkEra$230655[esp+44], eax
	call	_lua_pushinteger

; 4710 : 		lua_setfield(L, t, "ArtifactIndex");

	push	OFFSET $SG230656
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 4711 : 		if (iArtifactWorkIndex != -1)

	cmp	ebx, -1
	je	SHORT $LN108@lGetOthers

; 4712 : 		{
; 4713 : 			eArtifactWorkPlayer = GC.getGame().GetGameCulture()->m_CurrentGreatWorks[iArtifactWorkIndex].m_ePlayer;

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	edx, DWORD PTR [eax]

; 4714 : 			eArtifactWorkEra = GC.getGame().GetGameCulture()->m_CurrentGreatWorks[iArtifactWorkIndex].m_eEra;

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	lea	ebx, DWORD PTR [ebx+ebx*2]
	shl	ebx, 4
	mov	eax, DWORD PTR [ebx+edx+44]
	mov	DWORD PTR _eArtifactWorkPlayer$230654[esp+36], eax
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	ecx, DWORD PTR [eax]
	mov	ebx, DWORD PTR [ecx+ebx+40]
	jmp	SHORT $LN2@lGetOthers
$LN108@lGetOthers:
	mov	ebx, DWORD PTR _eArtifactWorkEra$230655[esp+36]
$LN2@lGetOthers:

; 4715 : 		}
; 4716 : 		lua_pushinteger(L, eArtifactWorkPlayer);

	mov	edx, DWORD PTR _eArtifactWorkPlayer$230654[esp+36]
	push	edx
	push	esi
	call	_lua_pushinteger

; 4717 : 		lua_setfield(L, t, "ArtifactCreator");

	push	OFFSET $SG230658
	push	edi
	push	esi
	call	_lua_setfield

; 4718 : 		lua_pushinteger(L, eArtifactWorkEra);

	push	ebx
	push	esi
	call	_lua_pushinteger

; 4719 : 		lua_setfield(L, t, "ArtifactEra");

	push	OFFSET $SG230659
	push	edi
	push	esi
	call	_lua_setfield

; 4720 : 
; 4721 : 		// music
; 4722 : 		int iMusicWorkIndex = GET_PLAYER(eOtherPlayer).GetCulture()->GetSwappableMusicIndex();

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	add	esp, 40					; 00000028H
	lea	ecx, DWORD PTR [eax+ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetSwappableMusicIndex@CvPlayerCulture@@QBEHXZ ; CvPlayerCulture::GetSwappableMusicIndex
	mov	ebx, eax

; 4723 : 		PlayerTypes eMusicWorkPlayer = NO_PLAYER;

	or	eax, -1

; 4724 : 		EraTypes eMusicWorkEra = NO_ERA;
; 4725 : 		lua_pushinteger(L, iMusicWorkIndex);

	push	ebx
	push	esi
	mov	DWORD PTR _eMusicWorkPlayer$230661[esp+44], eax
	mov	DWORD PTR _eMusicWorkEra$230662[esp+44], eax
	call	_lua_pushinteger

; 4726 : 		lua_setfield(L, t, "MusicIndex");

	push	OFFSET $SG230663
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 4727 : 		if (iMusicWorkIndex != -1)

	cmp	ebx, -1
	je	SHORT $LN109@lGetOthers

; 4728 : 		{
; 4729 : 			eMusicWorkPlayer = GC.getGame().GetGameCulture()->m_CurrentGreatWorks[iMusicWorkIndex].m_ePlayer;

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	ecx, DWORD PTR [eax]
	lea	ebx, DWORD PTR [ebx+ebx*2]
	shl	ebx, 4
	mov	edx, DWORD PTR [ebx+ecx+44]

; 4730 : 			eMusicWorkEra = GC.getGame().GetGameCulture()->m_CurrentGreatWorks[iMusicWorkIndex].m_eEra;

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR _eMusicWorkPlayer$230661[esp+36], edx
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	eax, DWORD PTR [eax]
	mov	ebx, DWORD PTR [ebx+eax+40]
	jmp	SHORT $LN1@lGetOthers
$LN109@lGetOthers:
	mov	ebx, DWORD PTR _eMusicWorkEra$230662[esp+36]
$LN1@lGetOthers:

; 4731 : 		}
; 4732 : 		lua_pushinteger(L, eMusicWorkPlayer);

	mov	ecx, DWORD PTR _eMusicWorkPlayer$230661[esp+36]
	push	ecx
	push	esi
	call	_lua_pushinteger

; 4733 : 		lua_setfield(L, t, "MusicCreator");

	push	OFFSET $SG230665
	push	edi
	push	esi
	call	_lua_setfield

; 4734 : 		lua_pushinteger(L, eMusicWorkEra);

	push	ebx
	push	esi
	call	_lua_pushinteger

; 4735 : 		lua_setfield(L, t, "MusicEra");

	push	OFFSET $SG230666
	push	edi
	push	esi
	call	_lua_setfield

; 4736 : 
; 4737 : 		lua_rawseti(L, -2, index++);

	mov	edi, DWORD PTR _index$[esp+76]
	push	edi
	push	-2					; fffffffeH
	push	esi
	call	_lua_rawseti
	mov	ebx, DWORD PTR _uiPlayer$230627[esp+88]
	add	esp, 52					; 00000034H
	inc	edi
	mov	DWORD PTR _index$[esp+36], edi
$LN10@lGetOthers:
	inc	ebx
	add	ebp, 63236				; 0000f704H
	mov	DWORD PTR _uiPlayer$230627[esp+36], ebx
	cmp	ebp, 1391192				; 00153a58H
	jb	$LL11@lGetOthers
	pop	edi
	pop	esi
	pop	ebp

; 4738 : 	}
; 4739 : 
; 4740 : 	return 1;

	mov	eax, 1
	pop	ebx

; 4741 : }

	add	esp, 20					; 00000014H
	ret	0
?lGetOthersGreatWorks@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetOthersGreatWorks
_TEXT	ENDS
PUBLIC	?lGetSwappableGreatWriting@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetSwappableGreatWriting
; Function compile flags: /Ogtpy
;	COMDAT ?lGetSwappableGreatWriting@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetSwappableGreatWriting@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetSwappableGreatWriting, COMDAT

; 4745 : {

	push	ebx
	push	ebp
	push	esi

; 4746 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetSwappa
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetSwappa
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetSwappa
	xor	bl, bl
$LN5@lGetSwappa:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetSwappa
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetSwappa:

; 4747 : 	lua_pushinteger(L, pkPlayer->GetCulture()->GetSwappableWritingIndex());

	mov	ecx, edi
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetSwappableWritingIndex@CvPlayerCulture@@QBEHXZ ; CvPlayerCulture::GetSwappableWritingIndex
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 4748 : 	return 1;

	mov	eax, 1
	pop	ebx

; 4749 : }

	ret	0
?lGetSwappableGreatWriting@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetSwappableGreatWriting
_TEXT	ENDS
PUBLIC	?lGetSwappableGreatArt@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetSwappableGreatArt
; Function compile flags: /Ogtpy
;	COMDAT ?lGetSwappableGreatArt@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetSwappableGreatArt@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetSwappableGreatArt, COMDAT

; 4753 : {

	push	ebx
	push	ebp
	push	esi

; 4754 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetSwappa@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetSwappa@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetSwappa@2
	xor	bl, bl
$LN5@lGetSwappa@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetSwappa@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetSwappa@2:

; 4755 : 	lua_pushinteger(L, pkPlayer->GetCulture()->GetSwappableArtIndex());

	mov	ecx, edi
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetSwappableArtIndex@CvPlayerCulture@@QBEHXZ ; CvPlayerCulture::GetSwappableArtIndex
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 4756 : 	return 1;

	mov	eax, 1
	pop	ebx

; 4757 : }

	ret	0
?lGetSwappableGreatArt@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetSwappableGreatArt
_TEXT	ENDS
PUBLIC	?lGetSwappableGreatArtifact@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetSwappableGreatArtifact
; Function compile flags: /Ogtpy
;	COMDAT ?lGetSwappableGreatArtifact@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetSwappableGreatArtifact@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetSwappableGreatArtifact, COMDAT

; 4761 : {

	push	ebx
	push	ebp
	push	esi

; 4762 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetSwappa@3
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetSwappa@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetSwappa@3
	xor	bl, bl
$LN5@lGetSwappa@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetSwappa@3
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetSwappa@3:

; 4763 : 	lua_pushinteger(L, pkPlayer->GetCulture()->GetSwappableArtifactIndex());

	mov	ecx, edi
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetSwappableArtifactIndex@CvPlayerCulture@@QBEHXZ ; CvPlayerCulture::GetSwappableArtifactIndex
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 4764 : 	return 1;

	mov	eax, 1
	pop	ebx

; 4765 : }

	ret	0
?lGetSwappableGreatArtifact@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetSwappableGreatArtifact
_TEXT	ENDS
PUBLIC	?lGetSwappableGreatMusic@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetSwappableGreatMusic
; Function compile flags: /Ogtpy
;	COMDAT ?lGetSwappableGreatMusic@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetSwappableGreatMusic@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetSwappableGreatMusic, COMDAT

; 4769 : {

	push	ebx
	push	ebp
	push	esi

; 4770 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetSwappa@4
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetSwappa@4
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetSwappa@4
	xor	bl, bl
$LN5@lGetSwappa@4:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetSwappa@4
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetSwappa@4:

; 4771 : 	lua_pushinteger(L, pkPlayer->GetCulture()->GetSwappableMusicIndex());

	mov	ecx, edi
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetSwappableMusicIndex@CvPlayerCulture@@QBEHXZ ; CvPlayerCulture::GetSwappableMusicIndex
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 4772 : 	return 1;

	mov	eax, 1
	pop	ebx

; 4773 : }

	ret	0
?lGetSwappableGreatMusic@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetSwappableGreatMusic
_TEXT	ENDS
PUBLIC	?lGetHappinessFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromMinorCivs
EXTRN	?GetHappinessFromMinorCivs@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetHappinessFromMinorCivs
; Function compile flags: /Ogtpy
;	COMDAT ?lGetHappinessFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHappinessFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetHappinessFromMinorCivs, COMDAT

; 4779 : 	return BasicLuaMethod(L, &CvPlayerAI::GetHappinessFromMinorCivs);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetHappinessFromMinorCivs@CvPlayer@@QBEHXZ ; CvPlayer::GetHappinessFromMinorCivs
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 4780 : }

	ret	0
?lGetHappinessFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetHappinessFromMinorCivs
_TEXT	ENDS
PUBLIC	?lGetHappinessFromMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromMinor
EXTRN	?GetHappinessFromMinor@CvPlayer@@QBEHW4PlayerTypes@@@Z:PROC ; CvPlayer::GetHappinessFromMinor
; Function compile flags: /Ogtpy
;	COMDAT ?lGetHappinessFromMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHappinessFromMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetHappinessFromMinor, COMDAT

; 4785 : 	return BasicLuaMethod(L, &CvPlayerAI::GetHappinessFromMinor);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetHappinessFromMinor@CvPlayer@@QBEHW4PlayerTypes@@@Z ; CvPlayer::GetHappinessFromMinor
	push	eax
	call	??$BasicLuaMethod@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum PlayerTypes>
	add	esp, 8

; 4786 : }

	ret	0
?lGetHappinessFromMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetHappinessFromMinor
_TEXT	ENDS
PUBLIC	?lGetBarbarianCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBarbarianCombatBonus
EXTRN	?GetBarbarianCombatBonus@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetBarbarianCombatBonus
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBarbarianCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBarbarianCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetBarbarianCombatBonus, COMDAT

; 4790 : 	return BasicLuaMethod(L, &CvPlayerAI::GetBarbarianCombatBonus);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetBarbarianCombatBonus@CvPlayer@@QBEHXZ ; CvPlayer::GetBarbarianCombatBonus
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 4791 : }

	ret	0
?lGetBarbarianCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetBarbarianCombatBonus
_TEXT	ENDS
PUBLIC	?lSetBarbarianCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetBarbarianCombatBonus
EXTRN	?SetBarbarianCombatBonus@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::SetBarbarianCombatBonus
; Function compile flags: /Ogtpy
;	COMDAT ?lSetBarbarianCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetBarbarianCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetBarbarianCombatBonus, COMDAT

; 4795 : 	return BasicLuaMethod(L, &CvPlayerAI::SetBarbarianCombatBonus);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?SetBarbarianCombatBonus@CvPlayer@@QAEXH@Z ; CvPlayer::SetBarbarianCombatBonus
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 4796 : }

	ret	0
?lSetBarbarianCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetBarbarianCombatBonus
_TEXT	ENDS
PUBLIC	?lChangeBarbarianCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeBarbarianCombatBonus
EXTRN	?ChangeBarbarianCombatBonus@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::ChangeBarbarianCombatBonus
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeBarbarianCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeBarbarianCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeBarbarianCombatBonus, COMDAT

; 4800 : 	return BasicLuaMethod(L, &CvPlayerAI::ChangeBarbarianCombatBonus);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?ChangeBarbarianCombatBonus@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeBarbarianCombatBonus
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 4801 : }

	ret	0
?lChangeBarbarianCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeBarbarianCombatBonus
_TEXT	ENDS
PUBLIC	?lGetCombatBonusVsHigherTech@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCombatBonusVsHigherTech
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCombatBonusVsHigherTech@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCombatBonusVsHigherTech@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCombatBonusVsHigherTech, COMDAT

; 4804 : {

	push	ebx
	push	ebp
	push	esi

; 4805 : 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetCombat
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetCombat
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetCombat
	xor	bl, bl
$LN6@lGetCombat:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lGetCombat
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lGetCombat:

; 4806 : 	if(pkPlayer)

	test	edi, edi
	je	SHORT $LN17@lGetCombat

; 4807 : 	{
; 4808 : 		lua_pushinteger(L, pkPlayer->GetPlayerTraits()->GetCombatBonusVsHigherTech());

	mov	ecx, edi
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	eax, DWORD PTR [eax+240]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
$LN17@lGetCombat:
	pop	edi
	pop	esi
	pop	ebp

; 4809 : 	}
; 4810 : 	return 1;

	mov	eax, 1
	pop	ebx

; 4811 : }

	ret	0
?lGetCombatBonusVsHigherTech@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCombatBonusVsHigherTech
_TEXT	ENDS
PUBLIC	?lGetCombatBonusVsLargerCiv@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCombatBonusVsLargerCiv
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCombatBonusVsLargerCiv@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCombatBonusVsLargerCiv@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCombatBonusVsLargerCiv, COMDAT

; 4814 : {

	push	ebx
	push	ebp
	push	esi

; 4815 : 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetCombat@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetCombat@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetCombat@2
	xor	bl, bl
$LN6@lGetCombat@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lGetCombat@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lGetCombat@2:

; 4816 : 	if(pkPlayer)

	test	edi, edi
	je	SHORT $LN17@lGetCombat@2

; 4817 : 	{
; 4818 : 		lua_pushinteger(L, pkPlayer->GetPlayerTraits()->GetCombatBonusVsLargerCiv());

	mov	ecx, edi
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	eax, DWORD PTR [eax+244]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
$LN17@lGetCombat@2:
	pop	edi
	pop	esi
	pop	ebp

; 4819 : 	}
; 4820 : 	return 1;

	mov	eax, 1
	pop	ebx

; 4821 : }

	ret	0
?lGetCombatBonusVsLargerCiv@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCombatBonusVsLargerCiv
_TEXT	ENDS
PUBLIC	?lGetCombatBonusVsSmallerCiv@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCombatBonusVsSmallerCiv
EXTRN	?GetNumericModifier@CvPlayerPolicies@@QAEHW4PolicyModifierType@@@Z:PROC ; CvPlayerPolicies::GetNumericModifier
EXTRN	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ:PROC ; CvPlayer::GetPlayerPolicies
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCombatBonusVsSmallerCiv@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCombatBonusVsSmallerCiv@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCombatBonusVsSmallerCiv, COMDAT

; 4825 : {

	push	ebx
	push	ebp
	push	esi

; 4826 : 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetCombat@3
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetCombat@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetCombat@3
	xor	bl, bl
$LN6@lGetCombat@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lGetCombat@3
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lGetCombat@3:

; 4827 : 	if(pkPlayer)

	test	edi, edi
	je	SHORT $LN15@lGetCombat@3

; 4828 : 	{
; 4829 : 		lua_pushinteger(L, pkPlayer->GetPlayerPolicies()->GetNumericModifier(POLICYMOD_COMBAT_BONUS_VS_SMALLER_CIV));

	push	46					; 0000002eH
	mov	ecx, edi
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumericModifier@CvPlayerPolicies@@QAEHW4PolicyModifierType@@@Z ; CvPlayerPolicies::GetNumericModifier
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
$LN15@lGetCombat@3:
	pop	edi
	pop	esi
	pop	ebp

; 4830 : 	}
; 4831 : 	return 1;

	mov	eax, 1
	pop	ebx

; 4832 : }

	ret	0
?lGetCombatBonusVsSmallerCiv@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCombatBonusVsSmallerCiv
_TEXT	ENDS
PUBLIC	?lIsAlwaysSeeBarbCamps@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAlwaysSeeBarbCamps
EXTRN	?IsAlwaysSeeBarbCamps@CvPlayer@@QBE_NXZ:PROC	; CvPlayer::IsAlwaysSeeBarbCamps
; Function compile flags: /Ogtpy
;	COMDAT ?lIsAlwaysSeeBarbCamps@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsAlwaysSeeBarbCamps@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsAlwaysSeeBarbCamps, COMDAT

; 4837 : 	return BasicLuaMethod(L, &CvPlayerAI::IsAlwaysSeeBarbCamps);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?IsAlwaysSeeBarbCamps@CvPlayer@@QBE_NXZ ; CvPlayer::IsAlwaysSeeBarbCamps
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 4838 : }

	ret	0
?lIsAlwaysSeeBarbCamps@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsAlwaysSeeBarbCamps
_TEXT	ENDS
PUBLIC	?lSetAlwaysSeeBarbCampsCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetAlwaysSeeBarbCampsCount
EXTRN	?SetAlwaysSeeBarbCampsCount@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::SetAlwaysSeeBarbCampsCount
; Function compile flags: /Ogtpy
;	COMDAT ?lSetAlwaysSeeBarbCampsCount@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetAlwaysSeeBarbCampsCount@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetAlwaysSeeBarbCampsCount, COMDAT

; 4842 : 	return BasicLuaMethod(L, &CvPlayerAI::SetAlwaysSeeBarbCampsCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?SetAlwaysSeeBarbCampsCount@CvPlayer@@QAEXH@Z ; CvPlayer::SetAlwaysSeeBarbCampsCount
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 4843 : }

	ret	0
?lSetAlwaysSeeBarbCampsCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetAlwaysSeeBarbCampsCount
_TEXT	ENDS
PUBLIC	?lChangeAlwaysSeeBarbCampsCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeAlwaysSeeBarbCampsCount
EXTRN	?ChangeAlwaysSeeBarbCampsCount@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::ChangeAlwaysSeeBarbCampsCount
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeAlwaysSeeBarbCampsCount@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeAlwaysSeeBarbCampsCount@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeAlwaysSeeBarbCampsCount, COMDAT

; 4847 : 	return BasicLuaMethod(L, &CvPlayerAI::ChangeAlwaysSeeBarbCampsCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?ChangeAlwaysSeeBarbCampsCount@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeAlwaysSeeBarbCampsCount
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 4848 : }

	ret	0
?lChangeAlwaysSeeBarbCampsCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeAlwaysSeeBarbCampsCount
_TEXT	ENDS
PUBLIC	?lGetGarrisonedCityRangeStrikeModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGarrisonedCityRangeStrikeModifier
EXTRN	?GetGarrisonedCityRangeStrikeModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetGarrisonedCityRangeStrikeModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGarrisonedCityRangeStrikeModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGarrisonedCityRangeStrikeModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGarrisonedCityRangeStrikeModifier, COMDAT

; 4852 : 	return BasicLuaMethod(L, &CvPlayerAI::GetGarrisonedCityRangeStrikeModifier);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetGarrisonedCityRangeStrikeModifier@CvPlayer@@QBEHXZ ; CvPlayer::GetGarrisonedCityRangeStrikeModifier
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 4853 : }

	ret	0
?lGetGarrisonedCityRangeStrikeModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGarrisonedCityRangeStrikeModifier
_TEXT	ENDS
PUBLIC	?lChangeGarrisonedCityRangeStrikeModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeGarrisonedCityRangeStrikeModifier
EXTRN	?ChangeGarrisonedCityRangeStrikeModifier@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::ChangeGarrisonedCityRangeStrikeModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeGarrisonedCityRangeStrikeModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeGarrisonedCityRangeStrikeModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeGarrisonedCityRangeStrikeModifier, COMDAT

; 4857 : 	return BasicLuaMethod(L, &CvPlayerAI::ChangeGarrisonedCityRangeStrikeModifier);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?ChangeGarrisonedCityRangeStrikeModifier@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeGarrisonedCityRangeStrikeModifier
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 4858 : }

	ret	0
?lChangeGarrisonedCityRangeStrikeModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeGarrisonedCityRangeStrikeModifier
_TEXT	ENDS
PUBLIC	?lIsPolicyBlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPolicyBlocked
EXTRN	?IsPolicyBlocked@CvPlayerPolicies@@QBE_NW4PolicyTypes@@@Z:PROC ; CvPlayerPolicies::IsPolicyBlocked
; Function compile flags: /Ogtpy
;	COMDAT ?lIsPolicyBlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsPolicyBlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsPolicyBlocked, COMDAT

; 4863 : {

	push	ebx
	push	ebp
	push	esi

; 4864 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsPolicyB
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsPolicyB
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsPolicyB
	xor	bl, bl
$LN5@lIsPolicyB:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsPolicyB
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsPolicyB:

; 4865 : 	const PolicyTypes ePolicy = (PolicyTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 4866 : 
; 4867 : 	const bool bResult = pkPlayer->GetPlayerPolicies()->IsPolicyBlocked(ePolicy);

	push	eax
	mov	ecx, edi
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?IsPolicyBlocked@CvPlayerPolicies@@QBE_NW4PolicyTypes@@@Z ; CvPlayerPolicies::IsPolicyBlocked

; 4868 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 4869 : 	return 1;

	mov	eax, 1
	pop	ebx

; 4870 : }

	ret	0
?lIsPolicyBlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsPolicyBlocked
_TEXT	ENDS
PUBLIC	?lIsPolicyBranchBlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPolicyBranchBlocked
EXTRN	?IsPolicyBranchBlocked@CvPlayerPolicies@@QBE_NW4PolicyBranchTypes@@@Z:PROC ; CvPlayerPolicies::IsPolicyBranchBlocked
; Function compile flags: /Ogtpy
;	COMDAT ?lIsPolicyBranchBlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsPolicyBranchBlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPolicyBranchBlocked, COMDAT

; 4875 : {

	push	ebx
	push	ebp
	push	esi

; 4876 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsPolicyB@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsPolicyB@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsPolicyB@2
	xor	bl, bl
$LN5@lIsPolicyB@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsPolicyB@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsPolicyB@2:

; 4877 : 	const PolicyBranchTypes ePolicyBranch = (PolicyBranchTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 4878 : 
; 4879 : 	const bool bResult = pkPlayer->GetPlayerPolicies()->IsPolicyBranchBlocked(ePolicyBranch);

	push	eax
	mov	ecx, edi
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?IsPolicyBranchBlocked@CvPlayerPolicies@@QBE_NW4PolicyBranchTypes@@@Z ; CvPlayerPolicies::IsPolicyBranchBlocked

; 4880 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 4881 : 	return 1;

	mov	eax, 1
	pop	ebx

; 4882 : }

	ret	0
?lIsPolicyBranchBlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPolicyBranchBlocked
_TEXT	ENDS
PUBLIC	?lIsPolicyBranchUnlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPolicyBranchUnlocked
EXTRN	?IsPolicyBranchUnlocked@CvPlayerPolicies@@QBE_NW4PolicyBranchTypes@@@Z:PROC ; CvPlayerPolicies::IsPolicyBranchUnlocked
; Function compile flags: /Ogtpy
;	COMDAT ?lIsPolicyBranchUnlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsPolicyBranchUnlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPolicyBranchUnlocked, COMDAT

; 4887 : {

	push	ebx
	push	ebp
	push	esi

; 4888 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsPolicyB@3
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsPolicyB@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsPolicyB@3
	xor	bl, bl
$LN5@lIsPolicyB@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsPolicyB@3
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsPolicyB@3:

; 4889 : 	const PolicyBranchTypes eBranchType = (PolicyBranchTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 4890 : 
; 4891 : 	const bool bResult = pkPlayer->GetPlayerPolicies()->IsPolicyBranchUnlocked(eBranchType);

	push	eax
	mov	ecx, edi
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?IsPolicyBranchUnlocked@CvPlayerPolicies@@QBE_NW4PolicyBranchTypes@@@Z ; CvPlayerPolicies::IsPolicyBranchUnlocked

; 4892 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 4893 : 	return 1;

	mov	eax, 1
	pop	ebx

; 4894 : }

	ret	0
?lIsPolicyBranchUnlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPolicyBranchUnlocked
_TEXT	ENDS
PUBLIC	?lSetPolicyBranchUnlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetPolicyBranchUnlocked
EXTRN	?SetPolicyBranchUnlocked@CvPlayerPolicies@@QAEXW4PolicyBranchTypes@@_N1@Z:PROC ; CvPlayerPolicies::SetPolicyBranchUnlocked
; Function compile flags: /Ogtpy
;	COMDAT ?lSetPolicyBranchUnlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bRevolution$ = -8					; size = 1
_bNewValue$ = -4					; size = 1
_L$ = 8							; size = 4
?lSetPolicyBranchUnlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetPolicyBranchUnlocked, COMDAT

; 4899 : {

	sub	esp, 8
	push	ebx
	push	ebp
	push	esi

; 4900 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+16]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lSetPolicy
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lSetPolicy
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lSetPolicy
	xor	bl, bl
$LN5@lSetPolicy:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lSetPolicy
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lSetPolicy:

; 4901 : 	const PolicyBranchTypes eBranchType = (PolicyBranchTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 4902 : 	const bool bNewValue = lua_toboolean(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_toboolean
	test	eax, eax
	setne	al

; 4903 : 	const bool bRevolution = lua_toboolean(L, 4);

	push	4
	push	esi
	mov	BYTE PTR _bNewValue$[esp+48], al
	call	_lua_toboolean
	add	esp, 24					; 00000018H
	test	eax, eax

; 4904 : 
; 4905 : 	pkPlayer->GetPlayerPolicies()->SetPolicyBranchUnlocked(eBranchType, bNewValue, bRevolution);

	mov	eax, DWORD PTR _bNewValue$[esp+24]
	setne	cl
	mov	BYTE PTR _bRevolution$[esp+24], cl
	mov	edx, DWORD PTR _bRevolution$[esp+24]
	push	edx
	push	eax
	push	ebx
	mov	ecx, edi
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?SetPolicyBranchUnlocked@CvPlayerPolicies@@QAEXW4PolicyBranchTypes@@_N1@Z ; CvPlayerPolicies::SetPolicyBranchUnlocked
	pop	edi
	pop	esi
	pop	ebp

; 4906 : 	return 1;

	mov	eax, 1
	pop	ebx

; 4907 : }

	add	esp, 8
	ret	0
?lSetPolicyBranchUnlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetPolicyBranchUnlocked
_TEXT	ENDS
PUBLIC	?lGetNumPolicyBranchesUnlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumPolicyBranchesUnlocked
EXTRN	?GetNumPolicyBranchesUnlocked@CvPlayerPolicies@@QBEHXZ:PROC ; CvPlayerPolicies::GetNumPolicyBranchesUnlocked
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumPolicyBranchesUnlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumPolicyBranchesUnlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumPolicyBranchesUnlocked, COMDAT

; 4912 : {

	push	ebx
	push	ebp
	push	esi

; 4913 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumPol
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumPol
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumPol
	xor	bl, bl
$LN5@lGetNumPol:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumPol
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumPol:

; 4914 : 
; 4915 : 	const int iResult = pkPlayer->GetPlayerPolicies()->GetNumPolicyBranchesUnlocked();

	mov	ecx, edi
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumPolicyBranchesUnlocked@CvPlayerPolicies@@QBEHXZ ; CvPlayerPolicies::GetNumPolicyBranchesUnlocked

; 4916 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 4917 : 	return 1;

	mov	eax, 1
	pop	ebx

; 4918 : }

	ret	0
?lGetNumPolicyBranchesUnlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumPolicyBranchesUnlocked
_TEXT	ENDS
PUBLIC	?lGetNumPolicyBranchesAllowed@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumPolicyBranchesAllowed
EXTRN	?GetNumPolicyBranchesAllowed@CvPlayerPolicies@@QBEHXZ:PROC ; CvPlayerPolicies::GetNumPolicyBranchesAllowed
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumPolicyBranchesAllowed@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumPolicyBranchesAllowed@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumPolicyBranchesAllowed, COMDAT

; 4923 : {

	push	ebx
	push	ebp
	push	esi

; 4924 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumPol@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumPol@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumPol@2
	xor	bl, bl
$LN5@lGetNumPol@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumPol@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumPol@2:

; 4925 : 
; 4926 : 	const int iResult = pkPlayer->GetPlayerPolicies()->GetNumPolicyBranchesAllowed();

	mov	ecx, edi
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumPolicyBranchesAllowed@CvPlayerPolicies@@QBEHXZ ; CvPlayerPolicies::GetNumPolicyBranchesAllowed

; 4927 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 4928 : 	return 1;

	mov	eax, 1
	pop	ebx

; 4929 : }

	ret	0
?lGetNumPolicyBranchesAllowed@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumPolicyBranchesAllowed
_TEXT	ENDS
PUBLIC	?lGetPolicyBranchChosen@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyBranchChosen
EXTRN	?GetPolicyBranchChosen@CvPlayerPolicies@@QBE?AW4PolicyBranchTypes@@H@Z:PROC ; CvPlayerPolicies::GetPolicyBranchChosen
; Function compile flags: /Ogtpy
;	COMDAT ?lGetPolicyBranchChosen@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetPolicyBranchChosen@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPolicyBranchChosen, COMDAT

; 4934 : {

	push	ebx
	push	ebp
	push	esi

; 4935 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetPolicy@3
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetPolicy@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetPolicy@3
	xor	bl, bl
$LN5@lGetPolicy@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetPolicy@3
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetPolicy@3:

; 4936 : 	const int iID = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 4937 : 
; 4938 : 	const int iResult = pkPlayer->GetPlayerPolicies()->GetPolicyBranchChosen(iID);

	push	eax
	mov	ecx, edi
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetPolicyBranchChosen@CvPlayerPolicies@@QBE?AW4PolicyBranchTypes@@H@Z ; CvPlayerPolicies::GetPolicyBranchChosen

; 4939 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 4940 : 	return 1;

	mov	eax, 1
	pop	ebx

; 4941 : }

	ret	0
?lGetPolicyBranchChosen@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPolicyBranchChosen
_TEXT	ENDS
PUBLIC	?lGetNumPolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumPolicies
EXTRN	?GetNumPoliciesOwned@CvPlayerPolicies@@QBEHXZ:PROC ; CvPlayerPolicies::GetNumPoliciesOwned
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumPolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumPolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetNumPolicies, COMDAT

; 4947 : {

	push	ebx
	push	ebp
	push	esi

; 4948 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumPol@3
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumPol@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumPol@3
	xor	bl, bl
$LN5@lGetNumPol@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumPol@3
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumPol@3:

; 4949 : 
; 4950 : 	const int iResult = pkPlayer->GetPlayerPolicies()->GetNumPoliciesOwned();

	mov	ecx, edi
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumPoliciesOwned@CvPlayerPolicies@@QBEHXZ ; CvPlayerPolicies::GetNumPoliciesOwned

; 4951 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 4952 : 	return 1;

	mov	eax, 1
	pop	ebx

; 4953 : }

	ret	0
?lGetNumPolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetNumPolicies
_TEXT	ENDS
PUBLIC	?lGetNumPoliciesInBranch@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumPoliciesInBranch
EXTRN	?GetNumPoliciesOwnedInBranch@CvPlayerPolicies@@QBEHW4PolicyBranchTypes@@@Z:PROC ; CvPlayerPolicies::GetNumPoliciesOwnedInBranch
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumPoliciesInBranch@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumPoliciesInBranch@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumPoliciesInBranch, COMDAT

; 4958 : {

	push	ebx
	push	ebp
	push	esi

; 4959 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumPol@4
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumPol@4
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumPol@4
	xor	bl, bl
$LN5@lGetNumPol@4:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumPol@4
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumPol@4:

; 4960 : 	const PolicyBranchTypes eIndex = (PolicyBranchTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 4961 : 
; 4962 : 	const int iResult = pkPlayer->GetPlayerPolicies()->GetNumPoliciesOwnedInBranch(eIndex);

	push	eax
	mov	ecx, edi
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumPoliciesOwnedInBranch@CvPlayerPolicies@@QBEHW4PolicyBranchTypes@@@Z ; CvPlayerPolicies::GetNumPoliciesOwnedInBranch

; 4963 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 4964 : 	return 1;

	mov	eax, 1
	pop	ebx

; 4965 : }

	ret	0
?lGetNumPoliciesInBranch@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumPoliciesInBranch
_TEXT	ENDS
PUBLIC	?lHasPolicy@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lHasPolicy
EXTRN	?HasPolicy@CvPlayerPolicies@@QBE_NW4PolicyTypes@@@Z:PROC ; CvPlayerPolicies::HasPolicy
; Function compile flags: /Ogtpy
;	COMDAT ?lHasPolicy@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lHasPolicy@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lHasPolicy, COMDAT

; 4970 : {

	push	ebx
	push	ebp
	push	esi

; 4971 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lHasPolicy
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lHasPolicy
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lHasPolicy
	xor	bl, bl
$LN5@lHasPolicy:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lHasPolicy
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lHasPolicy:

; 4972 : 	const PolicyTypes iIndex = (PolicyTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 4973 : 
; 4974 : 	const bool bResult
; 4975 : 	    = pkPlayer->GetPlayerPolicies()->HasPolicy(iIndex);

	push	eax
	mov	ecx, edi
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?HasPolicy@CvPlayerPolicies@@QBE_NW4PolicyTypes@@@Z ; CvPlayerPolicies::HasPolicy

; 4976 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 4977 : 	return 1;

	mov	eax, 1
	pop	ebx

; 4978 : }

	ret	0
?lHasPolicy@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lHasPolicy
_TEXT	ENDS
PUBLIC	?lSetHasPolicy@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lSetHasPolicy
EXTRN	?setHasPolicy@CvPlayer@@QAEXW4PolicyTypes@@_N@Z:PROC ; CvPlayer::setHasPolicy
; Function compile flags: /Ogtpy
;	COMDAT ?lSetHasPolicy@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetHasPolicy@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lSetHasPolicy, COMDAT

; 4983 : 	return BasicLuaMethod(L, &CvPlayerAI::setHasPolicy);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?setHasPolicy@CvPlayer@@QAEXW4PolicyTypes@@_N@Z ; CvPlayer::setHasPolicy
	push	eax
	call	??$BasicLuaMethod@W4PolicyTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4PolicyTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PolicyTypes,bool>
	add	esp, 8

; 4984 : }

	ret	0
?lSetHasPolicy@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lSetHasPolicy
_TEXT	ENDS
PUBLIC	?lGetNextPolicyCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNextPolicyCost
EXTRN	?getNextPolicyCost@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getNextPolicyCost
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNextPolicyCost@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNextPolicyCost@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNextPolicyCost, COMDAT

; 4989 : 	return BasicLuaMethod(L, &CvPlayerAI::getNextPolicyCost);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getNextPolicyCost@CvPlayer@@QBEHXZ ; CvPlayer::getNextPolicyCost
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 4990 : }

	ret	0
?lGetNextPolicyCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNextPolicyCost
_TEXT	ENDS
PUBLIC	?lCanAdoptPolicy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanAdoptPolicy
EXTRN	?CanAdoptPolicy@CvPlayerPolicies@@QBE_NW4PolicyTypes@@_N@Z:PROC ; CvPlayerPolicies::CanAdoptPolicy
; Function compile flags: /Ogtpy
;	COMDAT ?lCanAdoptPolicy@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bIgnoreCost$ = -8					; size = 1
_ePolicy$ = -4						; size = 4
_L$ = 8							; size = 4
?lCanAdoptPolicy@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lCanAdoptPolicy, COMDAT

; 4994 : {

	sub	esp, 8
	push	ebx
	push	ebp
	push	esi

; 4995 : 	const PolicyTypes ePolicy = static_cast<PolicyTypes>(luaL_checkinteger(L, 2));

	mov	esi, DWORD PTR _L$[esp+16]
	push	edi
	push	2
	push	esi
	call	_luaL_checkinteger

; 4996 : 	bool bIgnoreCost = luaL_optbool(L, 3, false);

	push	0
	push	3
	push	esi
	mov	DWORD PTR _ePolicy$[esp+44], eax
	call	?luaL_optbool@@YA_NPAUlua_State@@H_N@Z	; luaL_optbool

; 4997 : 
; 4998 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	esi
	mov	BYTE PTR _bIgnoreCost$[esp+48], al
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 32					; 00000020H
	cmp	eax, 5
	jne	SHORT $LN7@lCanAdoptP
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@lCanAdoptP
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@lCanAdoptP
	xor	bl, bl
$LN7@lCanAdoptP:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@lCanAdoptP
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@lCanAdoptP:

; 4999 : 	CvAssert(pkPlayer != NULL);
; 5000 : 	if(pkPlayer != NULL)

	test	edi, edi
	je	SHORT $LN1@lCanAdoptP

; 5001 : 	{
; 5002 : 		CvPlayerPolicies* pkPolicies = pkPlayer->GetPlayerPolicies();

	mov	ecx, edi
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies

; 5003 : 		CvAssert(pkPolicies != NULL);
; 5004 : 		if(pkPolicies != NULL)

	test	eax, eax
	je	SHORT $LN1@lCanAdoptP

; 5005 : 		{
; 5006 : 			bool bResult = pkPolicies->CanAdoptPolicy(ePolicy, bIgnoreCost);

	mov	ecx, DWORD PTR _bIgnoreCost$[esp+24]
	mov	edx, DWORD PTR _ePolicy$[esp+24]
	push	ecx
	push	edx
	mov	ecx, eax
	call	?CanAdoptPolicy@CvPlayerPolicies@@QBE_NW4PolicyTypes@@_N@Z ; CvPlayerPolicies::CanAdoptPolicy

; 5007 : 			lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 5008 : 			return 1;

	mov	eax, 1
	pop	ebx

; 5013 : }

	add	esp, 8
	ret	0
$LN1@lCanAdoptP:
	pop	edi
	pop	esi
	pop	ebp

; 5009 : 		}
; 5010 : 	}
; 5011 : 
; 5012 : 	return 0;

	xor	eax, eax
	pop	ebx

; 5013 : }

	add	esp, 8
	ret	0
?lCanAdoptPolicy@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lCanAdoptPolicy
_TEXT	ENDS
PUBLIC	?lDoAdoptPolicy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lDoAdoptPolicy
EXTRN	?doAdoptPolicy@CvPlayer@@QAEXW4PolicyTypes@@@Z:PROC ; CvPlayer::doAdoptPolicy
; Function compile flags: /Ogtpy
;	COMDAT ?lDoAdoptPolicy@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lDoAdoptPolicy@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lDoAdoptPolicy, COMDAT

; 5018 : 	return BasicLuaMethod(L, &CvPlayerAI::doAdoptPolicy);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?doAdoptPolicy@CvPlayer@@QAEXW4PolicyTypes@@@Z ; CvPlayer::doAdoptPolicy
	push	eax
	call	??$BasicLuaMethod@W4PolicyTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4PolicyTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PolicyTypes>
	add	esp, 8

; 5019 : }

	ret	0
?lDoAdoptPolicy@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lDoAdoptPolicy
_TEXT	ENDS
PUBLIC	?lCanUnlockPolicyBranch@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanUnlockPolicyBranch
EXTRN	?CanUnlockPolicyBranch@CvPlayerPolicies@@QAE_NW4PolicyBranchTypes@@@Z:PROC ; CvPlayerPolicies::CanUnlockPolicyBranch
; Function compile flags: /Ogtpy
;	COMDAT ?lCanUnlockPolicyBranch@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanUnlockPolicyBranch@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lCanUnlockPolicyBranch, COMDAT

; 5025 : {

	push	ebx
	push	ebp
	push	esi

; 5026 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCanUnlock
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCanUnlock
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCanUnlock
	xor	bl, bl
$LN5@lCanUnlock:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lCanUnlock
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lCanUnlock:

; 5027 : 	const PolicyBranchTypes iIndex = (PolicyBranchTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 5028 : 
; 5029 : 	const bool bResult
; 5030 : 	    = pkPlayer->GetPlayerPolicies()->CanUnlockPolicyBranch(iIndex);

	push	eax
	mov	ecx, edi
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?CanUnlockPolicyBranch@CvPlayerPolicies@@QAE_NW4PolicyBranchTypes@@@Z ; CvPlayerPolicies::CanUnlockPolicyBranch

; 5031 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 5032 : 	return 1;

	mov	eax, 1
	pop	ebx

; 5033 : }

	ret	0
?lCanUnlockPolicyBranch@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lCanUnlockPolicyBranch
_TEXT	ENDS
PUBLIC	?lGetDominantPolicyBranchForTitle@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetDominantPolicyBranchForTitle
EXTRN	?GetDominantPolicyBranchForTitle@CvPlayerPolicies@@QBE?AW4PolicyBranchTypes@@XZ:PROC ; CvPlayerPolicies::GetDominantPolicyBranchForTitle
; Function compile flags: /Ogtpy
;	COMDAT ?lGetDominantPolicyBranchForTitle@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetDominantPolicyBranchForTitle@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetDominantPolicyBranchForTitle, COMDAT

; 5038 : {

	push	ebx
	push	ebp
	push	esi

; 5039 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetDomina
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetDomina
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetDomina
	xor	bl, bl
$LN5@lGetDomina:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetDomina
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetDomina:

; 5040 : 	const int iResult = pkPlayer->GetPlayerPolicies()->GetDominantPolicyBranchForTitle();

	mov	ecx, edi
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetDominantPolicyBranchForTitle@CvPlayerPolicies@@QBE?AW4PolicyBranchTypes@@XZ ; CvPlayerPolicies::GetDominantPolicyBranchForTitle

; 5041 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 5042 : 	return 1;

	mov	eax, 1
	pop	ebx

; 5043 : }

	ret	0
?lGetDominantPolicyBranchForTitle@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetDominantPolicyBranchForTitle
_TEXT	ENDS
PUBLIC	?lGetLateGamePolicyTree@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetLateGamePolicyTree
EXTRN	?GetLateGamePolicyTree@CvPlayerPolicies@@QBE?AW4PolicyBranchTypes@@XZ:PROC ; CvPlayerPolicies::GetLateGamePolicyTree
; Function compile flags: /Ogtpy
;	COMDAT ?lGetLateGamePolicyTree@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetLateGamePolicyTree@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetLateGamePolicyTree, COMDAT

; 5048 : {

	push	ebx
	push	ebp
	push	esi

; 5049 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetLateGa
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetLateGa
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetLateGa
	xor	bl, bl
$LN5@lGetLateGa:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetLateGa
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetLateGa:

; 5050 : 	const int iResult = pkPlayer->GetPlayerPolicies()->GetLateGamePolicyTree();

	mov	ecx, edi
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetLateGamePolicyTree@CvPlayerPolicies@@QBE?AW4PolicyBranchTypes@@XZ ; CvPlayerPolicies::GetLateGamePolicyTree

; 5051 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 5052 : 	return 1;

	mov	eax, 1
	pop	ebx

; 5053 : }

	ret	0
?lGetLateGamePolicyTree@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetLateGamePolicyTree
_TEXT	ENDS
PUBLIC	?lGetBranchPicked1@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBranchPicked1
EXTRN	?GetBranchPicked1@CvPlayerPolicies@@QBE?AW4PolicyBranchTypes@@XZ:PROC ; CvPlayerPolicies::GetBranchPicked1
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBranchPicked1@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBranchPicked1@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetBranchPicked1, COMDAT

; 5058 : {

	push	ebx
	push	ebp
	push	esi

; 5059 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetBranch
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetBranch
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetBranch
	xor	bl, bl
$LN5@lGetBranch:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetBranch
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetBranch:

; 5060 : 	const int iResult = pkPlayer->GetPlayerPolicies()->GetBranchPicked1();

	mov	ecx, edi
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetBranchPicked1@CvPlayerPolicies@@QBE?AW4PolicyBranchTypes@@XZ ; CvPlayerPolicies::GetBranchPicked1

; 5061 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 5062 : 	return 1;

	mov	eax, 1
	pop	ebx

; 5063 : }

	ret	0
?lGetBranchPicked1@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetBranchPicked1
_TEXT	ENDS
PUBLIC	?lGetBranchPicked2@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBranchPicked2
EXTRN	?GetBranchPicked2@CvPlayerPolicies@@QBE?AW4PolicyBranchTypes@@XZ:PROC ; CvPlayerPolicies::GetBranchPicked2
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBranchPicked2@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBranchPicked2@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetBranchPicked2, COMDAT

; 5068 : {

	push	ebx
	push	ebp
	push	esi

; 5069 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetBranch@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetBranch@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetBranch@2
	xor	bl, bl
$LN5@lGetBranch@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetBranch@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetBranch@2:

; 5070 : 	const int iResult = pkPlayer->GetPlayerPolicies()->GetBranchPicked2();

	mov	ecx, edi
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetBranchPicked2@CvPlayerPolicies@@QBE?AW4PolicyBranchTypes@@XZ ; CvPlayerPolicies::GetBranchPicked2

; 5071 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 5072 : 	return 1;

	mov	eax, 1
	pop	ebx

; 5073 : }

	ret	0
?lGetBranchPicked2@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetBranchPicked2
_TEXT	ENDS
PUBLIC	?lGetBranchPicked3@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBranchPicked3
EXTRN	?GetBranchPicked3@CvPlayerPolicies@@QBE?AW4PolicyBranchTypes@@XZ:PROC ; CvPlayerPolicies::GetBranchPicked3
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBranchPicked3@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBranchPicked3@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetBranchPicked3, COMDAT

; 5078 : {

	push	ebx
	push	ebp
	push	esi

; 5079 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetBranch@3
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetBranch@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetBranch@3
	xor	bl, bl
$LN5@lGetBranch@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetBranch@3
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetBranch@3:

; 5080 : 	const int iResult = pkPlayer->GetPlayerPolicies()->GetBranchPicked3();

	mov	ecx, edi
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetBranchPicked3@CvPlayerPolicies@@QBE?AW4PolicyBranchTypes@@XZ ; CvPlayerPolicies::GetBranchPicked3

; 5081 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 5082 : 	return 1;

	mov	eax, 1
	pop	ebx

; 5083 : }

	ret	0
?lGetBranchPicked3@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetBranchPicked3
_TEXT	ENDS
PUBLIC	?lGetPolicyCatchSpiesModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyCatchSpiesModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetPolicyCatchSpiesModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetPolicyCatchSpiesModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPolicyCatchSpiesModifier, COMDAT

; 5088 : {

	push	ebx
	push	ebp
	push	esi

; 5089 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetPolicy@4
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetPolicy@4
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetPolicy@4
	xor	bl, bl
$LN5@lGetPolicy@4:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetPolicy@4
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetPolicy@4:

; 5090 : 	const int iResult = pkPlayer->GetPlayerPolicies()->GetNumericModifier(POLICYMOD_CATCH_SPIES_MODIFIER);

	push	21					; 00000015H
	mov	ecx, edi
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumericModifier@CvPlayerPolicies@@QAEHW4PolicyModifierType@@@Z ; CvPlayerPolicies::GetNumericModifier

; 5091 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 5092 : 	return 1;

	mov	eax, 1
	pop	ebx

; 5093 : }

	ret	0
?lGetPolicyCatchSpiesModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPolicyCatchSpiesModifier
_TEXT	ENDS
PUBLIC	?lGetNumPolicyBranchesFinished@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumPolicyBranchesFinished
EXTRN	?GetNumPolicyBranchesFinished@CvPlayerPolicies@@QBEHXZ:PROC ; CvPlayerPolicies::GetNumPolicyBranchesFinished
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumPolicyBranchesFinished@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumPolicyBranchesFinished@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumPolicyBranchesFinished, COMDAT

; 5098 : {

	push	ebx
	push	ebp
	push	esi

; 5099 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumPol@5
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumPol@5
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumPol@5
	xor	bl, bl
$LN5@lGetNumPol@5:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumPol@5
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumPol@5:

; 5100 : 	const int iResult = pkPlayer->GetPlayerPolicies()->GetNumPolicyBranchesFinished();

	mov	ecx, edi
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumPolicyBranchesFinished@CvPlayerPolicies@@QBEHXZ ; CvPlayerPolicies::GetNumPolicyBranchesFinished

; 5101 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 5102 : 	return 1;

	mov	eax, 1
	pop	ebx

; 5103 : }

	ret	0
?lGetNumPolicyBranchesFinished@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumPolicyBranchesFinished
_TEXT	ENDS
PUBLIC	?lIsPolicyBranchFinished@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPolicyBranchFinished
EXTRN	?IsPolicyBranchFinished@CvPlayerPolicies@@QBE_NW4PolicyBranchTypes@@@Z:PROC ; CvPlayerPolicies::IsPolicyBranchFinished
; Function compile flags: /Ogtpy
;	COMDAT ?lIsPolicyBranchFinished@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsPolicyBranchFinished@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPolicyBranchFinished, COMDAT

; 5108 : {

	push	ebx
	push	ebp
	push	esi

; 5109 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsPolicyB@4
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsPolicyB@4
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsPolicyB@4
	xor	bl, bl
$LN5@lIsPolicyB@4:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsPolicyB@4
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsPolicyB@4:

; 5110 : 	const int iID = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 5111 : 
; 5112 : 	const bool iResult = pkPlayer->GetPlayerPolicies()->IsPolicyBranchFinished(PolicyBranchTypes(iID));

	push	eax
	mov	ecx, edi
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?IsPolicyBranchFinished@CvPlayerPolicies@@QBE_NW4PolicyBranchTypes@@@Z ; CvPlayerPolicies::IsPolicyBranchFinished

; 5113 : 	lua_pushboolean(L, iResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 5114 : 	return 1;

	mov	eax, 1
	pop	ebx

; 5115 : }

	ret	0
?lIsPolicyBranchFinished@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPolicyBranchFinished
_TEXT	ENDS
PUBLIC	?lGetTenet@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetTenet
EXTRN	?GetTenet@CvPlayerPolicies@@QAE?AW4PolicyTypes@@W4PolicyBranchTypes@@HH@Z:PROC ; CvPlayerPolicies::GetTenet
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTenet@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTenet@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetTenet, COMDAT

; 5147 : {

	push	ebx
	push	ebp
	push	esi

; 5148 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetTenet
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetTenet
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetTenet
	xor	bl, bl
$LN5@lGetTenet:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetTenet
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetTenet:

; 5149 : 	const PolicyBranchTypes eBranch = (PolicyBranchTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 5150 : 	const int iLevel = lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger

; 5151 : 	const int iIndex = lua_tointeger(L, 4);

	push	4
	push	esi
	mov	ebp, eax
	call	_lua_tointeger
	add	esp, 24					; 00000018H

; 5152 : 
; 5153 : 	const int iResult = pkPlayer->GetPlayerPolicies()->GetTenet(eBranch, iLevel, iIndex);

	push	eax
	push	ebp
	push	ebx
	mov	ecx, edi
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetTenet@CvPlayerPolicies@@QAE?AW4PolicyTypes@@W4PolicyBranchTypes@@HH@Z ; CvPlayerPolicies::GetTenet

; 5154 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 5155 : 	return 1;

	mov	eax, 1
	pop	ebx

; 5156 : }

	ret	0
?lGetTenet@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetTenet
_TEXT	ENDS
PUBLIC	?lIsAnarchy@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lIsAnarchy
EXTRN	?IsAnarchy@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::IsAnarchy
; Function compile flags: /Ogtpy
;	COMDAT ?lIsAnarchy@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsAnarchy@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsAnarchy, COMDAT

; 5162 : 	return BasicLuaMethod(L, &CvPlayerAI::IsAnarchy);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?IsAnarchy@CvPlayer@@QBE_NXZ	; CvPlayer::IsAnarchy
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 5163 : }

	ret	0
?lIsAnarchy@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsAnarchy
_TEXT	ENDS
PUBLIC	?lGetAnarchyNumTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAnarchyNumTurns
EXTRN	?GetAnarchyNumTurns@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetAnarchyNumTurns
; Function compile flags: /Ogtpy
;	COMDAT ?lGetAnarchyNumTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetAnarchyNumTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetAnarchyNumTurns, COMDAT

; 5168 : 	return BasicLuaMethod(L, &CvPlayerAI::GetAnarchyNumTurns);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetAnarchyNumTurns@CvPlayer@@QBEHXZ ; CvPlayer::GetAnarchyNumTurns
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5169 : }

	ret	0
?lGetAnarchyNumTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetAnarchyNumTurns
_TEXT	ENDS
PUBLIC	?lSetAnarchyNumTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetAnarchyNumTurns
EXTRN	?SetAnarchyNumTurns@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::SetAnarchyNumTurns
; Function compile flags: /Ogtpy
;	COMDAT ?lSetAnarchyNumTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetAnarchyNumTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetAnarchyNumTurns, COMDAT

; 5174 : 	return BasicLuaMethod(L, &CvPlayerAI::SetAnarchyNumTurns);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?SetAnarchyNumTurns@CvPlayer@@QAEXH@Z ; CvPlayer::SetAnarchyNumTurns
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5175 : }

	ret	0
?lSetAnarchyNumTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetAnarchyNumTurns
_TEXT	ENDS
PUBLIC	?lChangeAnarchyNumTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeAnarchyNumTurns
EXTRN	?ChangeAnarchyNumTurns@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::ChangeAnarchyNumTurns
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeAnarchyNumTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeAnarchyNumTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeAnarchyNumTurns, COMDAT

; 5180 : 	return BasicLuaMethod(L, &CvPlayerAI::ChangeAnarchyNumTurns);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?ChangeAnarchyNumTurns@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeAnarchyNumTurns
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5181 : }

	ret	0
?lChangeAnarchyNumTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeAnarchyNumTurns
_TEXT	ENDS
PUBLIC	?lGetAdvancedStartPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAdvancedStartPoints
EXTRN	?getAdvancedStartPoints@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getAdvancedStartPoints
; Function compile flags: /Ogtpy
;	COMDAT ?lGetAdvancedStartPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetAdvancedStartPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetAdvancedStartPoints, COMDAT

; 5187 : 	return BasicLuaMethod(L, &CvPlayerAI::getAdvancedStartPoints);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getAdvancedStartPoints@CvPlayer@@QBEHXZ ; CvPlayer::getAdvancedStartPoints
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5188 : }

	ret	0
?lGetAdvancedStartPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetAdvancedStartPoints
_TEXT	ENDS
PUBLIC	?lSetAdvancedStartPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetAdvancedStartPoints
EXTRN	?setAdvancedStartPoints@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::setAdvancedStartPoints
; Function compile flags: /Ogtpy
;	COMDAT ?lSetAdvancedStartPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetAdvancedStartPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetAdvancedStartPoints, COMDAT

; 5193 : 	return BasicLuaMethod(L, &CvPlayerAI::setAdvancedStartPoints);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?setAdvancedStartPoints@CvPlayer@@QAEXH@Z ; CvPlayer::setAdvancedStartPoints
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5194 : }

	ret	0
?lSetAdvancedStartPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetAdvancedStartPoints
_TEXT	ENDS
PUBLIC	?lChangeAdvancedStartPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeAdvancedStartPoints
EXTRN	?changeAdvancedStartPoints@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::changeAdvancedStartPoints
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeAdvancedStartPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeAdvancedStartPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeAdvancedStartPoints, COMDAT

; 5199 : 	return BasicLuaMethod(L, &CvPlayerAI::changeAdvancedStartPoints);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?changeAdvancedStartPoints@CvPlayer@@QAEXH@Z ; CvPlayer::changeAdvancedStartPoints
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5200 : }

	ret	0
?lChangeAdvancedStartPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeAdvancedStartPoints
_TEXT	ENDS
PUBLIC	?lGetAdvancedStartUnitCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAdvancedStartUnitCost
EXTRN	?getAdvancedStartUnitCost@CvPlayer@@QAEHW4UnitTypes@@_NPAVCvPlot@@@Z:PROC ; CvPlayer::getAdvancedStartUnitCost
; Function compile flags: /Ogtpy
;	COMDAT ?lGetAdvancedStartUnitCost@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetAdvancedStartUnitCost@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetAdvancedStartUnitCost, COMDAT

; 5205 : 	return BasicLuaMethod(L, &CvPlayerAI::getAdvancedStartUnitCost);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getAdvancedStartUnitCost@CvPlayer@@QAEHW4UnitTypes@@_NPAVCvPlot@@@Z ; CvPlayer::getAdvancedStartUnitCost
	push	eax
	call	??$BasicLuaMethod@HW4UnitTypes@@_NPAVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4UnitTypes@@_NPAVCvPlot@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum UnitTypes,bool,CvPlot *>
	add	esp, 8

; 5206 : }

	ret	0
?lGetAdvancedStartUnitCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetAdvancedStartUnitCost
_TEXT	ENDS
PUBLIC	?lGetAdvancedStartCityCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAdvancedStartCityCost
EXTRN	?getAdvancedStartCityCost@CvPlayer@@QAEH_NPAVCvPlot@@@Z:PROC ; CvPlayer::getAdvancedStartCityCost
; Function compile flags: /Ogtpy
;	COMDAT ?lGetAdvancedStartCityCost@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetAdvancedStartCityCost@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetAdvancedStartCityCost, COMDAT

; 5211 : 	return BasicLuaMethod(L, &CvPlayerAI::getAdvancedStartCityCost);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getAdvancedStartCityCost@CvPlayer@@QAEH_NPAVCvPlot@@@Z ; CvPlayer::getAdvancedStartCityCost
	push	eax
	call	??$BasicLuaMethod@H_NPAVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEH_NPAVCvPlot@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,bool,CvPlot *>
	add	esp, 8

; 5212 : }

	ret	0
?lGetAdvancedStartCityCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetAdvancedStartCityCost
_TEXT	ENDS
PUBLIC	?lGetAdvancedStartPopCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAdvancedStartPopCost
EXTRN	?getAdvancedStartPopCost@CvPlayer@@QAEH_NPAVCvCity@@@Z:PROC ; CvPlayer::getAdvancedStartPopCost
; Function compile flags: /Ogtpy
;	COMDAT ?lGetAdvancedStartPopCost@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetAdvancedStartPopCost@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetAdvancedStartPopCost, COMDAT

; 5217 : 	return BasicLuaMethod(L, &CvPlayerAI::getAdvancedStartPopCost);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getAdvancedStartPopCost@CvPlayer@@QAEH_NPAVCvCity@@@Z ; CvPlayer::getAdvancedStartPopCost
	push	eax
	call	??$BasicLuaMethod@H_NPAVCvCity@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEH_NPAVCvCity@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,bool,CvCity *>
	add	esp, 8

; 5218 : }

	ret	0
?lGetAdvancedStartPopCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetAdvancedStartPopCost
_TEXT	ENDS
PUBLIC	?lGetAdvancedStartBuildingCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAdvancedStartBuildingCost
EXTRN	?getAdvancedStartBuildingCost@CvPlayer@@QAEHW4BuildingTypes@@_NPAVCvCity@@@Z:PROC ; CvPlayer::getAdvancedStartBuildingCost
; Function compile flags: /Ogtpy
;	COMDAT ?lGetAdvancedStartBuildingCost@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetAdvancedStartBuildingCost@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetAdvancedStartBuildingCost, COMDAT

; 5223 : 	return BasicLuaMethod(L, &CvPlayerAI::getAdvancedStartBuildingCost);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getAdvancedStartBuildingCost@CvPlayer@@QAEHW4BuildingTypes@@_NPAVCvCity@@@Z ; CvPlayer::getAdvancedStartBuildingCost
	push	eax
	call	??$BasicLuaMethod@HW4BuildingTypes@@_NPAVCvCity@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4BuildingTypes@@_NPAVCvCity@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum BuildingTypes,bool,CvCity *>
	add	esp, 8

; 5224 : }

	ret	0
?lGetAdvancedStartBuildingCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetAdvancedStartBuildingCost
_TEXT	ENDS
PUBLIC	?lGetAdvancedStartImprovementCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAdvancedStartImprovementCost
EXTRN	?getAdvancedStartImprovementCost@CvPlayer@@QAEHW4ImprovementTypes@@_NPAVCvPlot@@@Z:PROC ; CvPlayer::getAdvancedStartImprovementCost
; Function compile flags: /Ogtpy
;	COMDAT ?lGetAdvancedStartImprovementCost@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetAdvancedStartImprovementCost@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetAdvancedStartImprovementCost, COMDAT

; 5229 : 	return BasicLuaMethod(L, &CvPlayerAI::getAdvancedStartImprovementCost);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getAdvancedStartImprovementCost@CvPlayer@@QAEHW4ImprovementTypes@@_NPAVCvPlot@@@Z ; CvPlayer::getAdvancedStartImprovementCost
	push	eax
	call	??$BasicLuaMethod@HW4ImprovementTypes@@_NPAVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4ImprovementTypes@@_NPAVCvPlot@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum ImprovementTypes,bool,CvPlot *>
	add	esp, 8

; 5230 : }

	ret	0
?lGetAdvancedStartImprovementCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetAdvancedStartImprovementCost
_TEXT	ENDS
PUBLIC	?lGetAdvancedStartRouteCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAdvancedStartRouteCost
EXTRN	?getAdvancedStartRouteCost@CvPlayer@@QAEHW4RouteTypes@@_NPAVCvPlot@@@Z:PROC ; CvPlayer::getAdvancedStartRouteCost
; Function compile flags: /Ogtpy
;	COMDAT ?lGetAdvancedStartRouteCost@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetAdvancedStartRouteCost@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetAdvancedStartRouteCost, COMDAT

; 5235 : 	return BasicLuaMethod(L, &CvPlayerAI::getAdvancedStartRouteCost);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getAdvancedStartRouteCost@CvPlayer@@QAEHW4RouteTypes@@_NPAVCvPlot@@@Z ; CvPlayer::getAdvancedStartRouteCost
	push	eax
	call	??$BasicLuaMethod@HW4RouteTypes@@_NPAVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4RouteTypes@@_NPAVCvPlot@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum RouteTypes,bool,CvPlot *>
	add	esp, 8

; 5236 : }

	ret	0
?lGetAdvancedStartRouteCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetAdvancedStartRouteCost
_TEXT	ENDS
PUBLIC	?lGetAdvancedStartTechCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAdvancedStartTechCost
EXTRN	?getAdvancedStartTechCost@CvPlayer@@QAEHW4TechTypes@@_N@Z:PROC ; CvPlayer::getAdvancedStartTechCost
; Function compile flags: /Ogtpy
;	COMDAT ?lGetAdvancedStartTechCost@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetAdvancedStartTechCost@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetAdvancedStartTechCost, COMDAT

; 5241 : 	return BasicLuaMethod(L, &CvPlayerAI::getAdvancedStartTechCost);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getAdvancedStartTechCost@CvPlayer@@QAEHW4TechTypes@@_N@Z ; CvPlayer::getAdvancedStartTechCost
	push	eax
	call	??$BasicLuaMethod@HW4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHW4TechTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum TechTypes,bool>
	add	esp, 8

; 5242 : }

	ret	0
?lGetAdvancedStartTechCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetAdvancedStartTechCost
_TEXT	ENDS
PUBLIC	?lGetAdvancedStartVisibilityCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAdvancedStartVisibilityCost
EXTRN	?getAdvancedStartVisibilityCost@CvPlayer@@QAEH_NPAVCvPlot@@@Z:PROC ; CvPlayer::getAdvancedStartVisibilityCost
; Function compile flags: /Ogtpy
;	COMDAT ?lGetAdvancedStartVisibilityCost@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetAdvancedStartVisibilityCost@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetAdvancedStartVisibilityCost, COMDAT

; 5247 : 	return BasicLuaMethod(L, &CvPlayerAI::getAdvancedStartVisibilityCost);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getAdvancedStartVisibilityCost@CvPlayer@@QAEH_NPAVCvPlot@@@Z ; CvPlayer::getAdvancedStartVisibilityCost
	push	eax
	call	??$BasicLuaMethod@H_NPAVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEH_NPAVCvPlot@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,bool,CvPlot *>
	add	esp, 8

; 5248 : }

	ret	0
?lGetAdvancedStartVisibilityCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetAdvancedStartVisibilityCost
_TEXT	ENDS
PUBLIC	?lGetAttackBonusTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAttackBonusTurns
EXTRN	?GetAttackBonusTurns@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetAttackBonusTurns
; Function compile flags: /Ogtpy
;	COMDAT ?lGetAttackBonusTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetAttackBonusTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetAttackBonusTurns, COMDAT

; 5254 : 	return BasicLuaMethod(L, &CvPlayerAI::GetAttackBonusTurns);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetAttackBonusTurns@CvPlayer@@QBEHXZ ; CvPlayer::GetAttackBonusTurns
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5255 : }

	ret	0
?lGetAttackBonusTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetAttackBonusTurns
_TEXT	ENDS
PUBLIC	?lGetCultureBonusTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCultureBonusTurns
EXTRN	?GetCultureBonusTurns@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetCultureBonusTurns
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCultureBonusTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCultureBonusTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCultureBonusTurns, COMDAT

; 5261 : 	return BasicLuaMethod(L, &CvPlayerAI::GetCultureBonusTurns);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetCultureBonusTurns@CvPlayer@@QBEHXZ ; CvPlayer::GetCultureBonusTurns
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5262 : }

	ret	0
?lGetCultureBonusTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCultureBonusTurns
_TEXT	ENDS
PUBLIC	?lGetTourismBonusTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTourismBonusTurns
EXTRN	?GetTourismBonusTurns@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetTourismBonusTurns
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTourismBonusTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTourismBonusTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTourismBonusTurns, COMDAT

; 5268 : 	return BasicLuaMethod(L, &CvPlayerAI::GetTourismBonusTurns);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetTourismBonusTurns@CvPlayer@@QBEHXZ ; CvPlayer::GetTourismBonusTurns
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5269 : }

	ret	0
?lGetTourismBonusTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTourismBonusTurns
_TEXT	ENDS
PUBLIC	?lGetGoldenAgeProgressThreshold@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldenAgeProgressThreshold
EXTRN	?GetGoldenAgeProgressThreshold@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetGoldenAgeProgressThreshold
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGoldenAgeProgressThreshold@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGoldenAgeProgressThreshold@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGoldenAgeProgressThreshold, COMDAT

; 5274 : 	return BasicLuaMethod(L, &CvPlayerAI::GetGoldenAgeProgressThreshold);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetGoldenAgeProgressThreshold@CvPlayer@@QBEHXZ ; CvPlayer::GetGoldenAgeProgressThreshold
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5275 : }

	ret	0
?lGetGoldenAgeProgressThreshold@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGoldenAgeProgressThreshold
_TEXT	ENDS
PUBLIC	?lGetGoldenAgeProgressMeter@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldenAgeProgressMeter
EXTRN	?GetGoldenAgeProgressMeter@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetGoldenAgeProgressMeter
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGoldenAgeProgressMeter@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGoldenAgeProgressMeter@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGoldenAgeProgressMeter, COMDAT

; 5280 : 	return BasicLuaMethod(L, &CvPlayerAI::GetGoldenAgeProgressMeter);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetGoldenAgeProgressMeter@CvPlayer@@QBEHXZ ; CvPlayer::GetGoldenAgeProgressMeter
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5281 : }

	ret	0
?lGetGoldenAgeProgressMeter@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGoldenAgeProgressMeter
_TEXT	ENDS
PUBLIC	?lSetGoldenAgeProgressMeter@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetGoldenAgeProgressMeter
EXTRN	?SetGoldenAgeProgressMeter@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::SetGoldenAgeProgressMeter
; Function compile flags: /Ogtpy
;	COMDAT ?lSetGoldenAgeProgressMeter@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetGoldenAgeProgressMeter@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetGoldenAgeProgressMeter, COMDAT

; 5286 : 	return BasicLuaMethod(L, &CvPlayerAI::SetGoldenAgeProgressMeter);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?SetGoldenAgeProgressMeter@CvPlayer@@QAEXH@Z ; CvPlayer::SetGoldenAgeProgressMeter
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5287 : }

	ret	0
?lSetGoldenAgeProgressMeter@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetGoldenAgeProgressMeter
_TEXT	ENDS
PUBLIC	?lChangeGoldenAgeProgressMeter@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeGoldenAgeProgressMeter
EXTRN	?ChangeGoldenAgeProgressMeter@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::ChangeGoldenAgeProgressMeter
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeGoldenAgeProgressMeter@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeGoldenAgeProgressMeter@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeGoldenAgeProgressMeter, COMDAT

; 5292 : 	return BasicLuaMethod(L, &CvPlayerAI::ChangeGoldenAgeProgressMeter);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?ChangeGoldenAgeProgressMeter@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeGoldenAgeProgressMeter
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5293 : }

	ret	0
?lChangeGoldenAgeProgressMeter@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeGoldenAgeProgressMeter
_TEXT	ENDS
PUBLIC	?lGetNumGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumGoldenAges
EXTRN	?GetNumGoldenAges@CvPlayer@@QBEHXZ:PROC		; CvPlayer::GetNumGoldenAges
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumGoldenAges, COMDAT

; 5298 : 	return BasicLuaMethod(L, &CvPlayerAI::GetNumGoldenAges);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetNumGoldenAges@CvPlayer@@QBEHXZ ; CvPlayer::GetNumGoldenAges
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5299 : }

	ret	0
?lGetNumGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumGoldenAges
_TEXT	ENDS
PUBLIC	?lSetNumGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetNumGoldenAges
EXTRN	?SetNumGoldenAges@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::SetNumGoldenAges
; Function compile flags: /Ogtpy
;	COMDAT ?lSetNumGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetNumGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetNumGoldenAges, COMDAT

; 5304 : 	return BasicLuaMethod(L, &CvPlayerAI::SetNumGoldenAges);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?SetNumGoldenAges@CvPlayer@@QAEXH@Z ; CvPlayer::SetNumGoldenAges
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5305 : }

	ret	0
?lSetNumGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetNumGoldenAges
_TEXT	ENDS
PUBLIC	?lChangeNumGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNumGoldenAges
EXTRN	?ChangeNumGoldenAges@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::ChangeNumGoldenAges
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeNumGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeNumGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeNumGoldenAges, COMDAT

; 5310 : 	return BasicLuaMethod(L, &CvPlayerAI::ChangeNumGoldenAges);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?ChangeNumGoldenAges@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeNumGoldenAges
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5311 : }

	ret	0
?lChangeNumGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeNumGoldenAges
_TEXT	ENDS
PUBLIC	?lGetGoldenAgeTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldenAgeTurns
EXTRN	?getGoldenAgeTurns@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getGoldenAgeTurns
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGoldenAgeTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGoldenAgeTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGoldenAgeTurns, COMDAT

; 5317 : 	return BasicLuaMethod(L, &CvPlayerAI::getGoldenAgeTurns);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getGoldenAgeTurns@CvPlayer@@QBEHXZ ; CvPlayer::getGoldenAgeTurns
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5318 : }

	ret	0
?lGetGoldenAgeTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGoldenAgeTurns
_TEXT	ENDS
PUBLIC	?lGetGoldenAgeLength@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldenAgeLength
EXTRN	?getGoldenAgeLength@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getGoldenAgeLength
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGoldenAgeLength@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGoldenAgeLength@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGoldenAgeLength, COMDAT

; 5323 : 	return BasicLuaMethod(L, &CvPlayerAI::getGoldenAgeLength);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getGoldenAgeLength@CvPlayer@@QBEHXZ ; CvPlayer::getGoldenAgeLength
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5324 : }

	ret	0
?lGetGoldenAgeLength@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGoldenAgeLength
_TEXT	ENDS
PUBLIC	?lIsGoldenAge@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lIsGoldenAge
EXTRN	?isGoldenAge@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::isGoldenAge
; Function compile flags: /Ogtpy
;	COMDAT ?lIsGoldenAge@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsGoldenAge@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsGoldenAge, COMDAT

; 5329 : 	return BasicLuaMethod(L, &CvPlayerAI::isGoldenAge);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isGoldenAge@CvPlayer@@QBE_NXZ	; CvPlayer::isGoldenAge
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 5330 : }

	ret	0
?lIsGoldenAge@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsGoldenAge
_TEXT	ENDS
PUBLIC	?lChangeGoldenAgeTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeGoldenAgeTurns
EXTRN	?changeGoldenAgeTurns@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::changeGoldenAgeTurns
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeGoldenAgeTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeGoldenAgeTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeGoldenAgeTurns, COMDAT

; 5335 : 	return BasicLuaMethod(L, &CvPlayerAI::changeGoldenAgeTurns);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?changeGoldenAgeTurns@CvPlayer@@QAEXH@Z ; CvPlayer::changeGoldenAgeTurns
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5336 : }

	ret	0
?lChangeGoldenAgeTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeGoldenAgeTurns
_TEXT	ENDS
PUBLIC	?lGetNumUnitGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumUnitGoldenAges
EXTRN	?getNumUnitGoldenAges@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getNumUnitGoldenAges
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumUnitGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumUnitGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumUnitGoldenAges, COMDAT

; 5341 : 	return BasicLuaMethod(L, &CvPlayerAI::getNumUnitGoldenAges);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getNumUnitGoldenAges@CvPlayer@@QBEHXZ ; CvPlayer::getNumUnitGoldenAges
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5342 : }

	ret	0
?lGetNumUnitGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumUnitGoldenAges
_TEXT	ENDS
PUBLIC	?lChangeNumUnitGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNumUnitGoldenAges
EXTRN	?changeNumUnitGoldenAges@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::changeNumUnitGoldenAges
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeNumUnitGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeNumUnitGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeNumUnitGoldenAges, COMDAT

; 5347 : 	return BasicLuaMethod(L, &CvPlayerAI::changeNumUnitGoldenAges);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?changeNumUnitGoldenAges@CvPlayer@@QAEXH@Z ; CvPlayer::changeNumUnitGoldenAges
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5348 : }

	ret	0
?lChangeNumUnitGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeNumUnitGoldenAges
_TEXT	ENDS
PUBLIC	?lGetStrikeTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetStrikeTurns
EXTRN	?getStrikeTurns@CvPlayer@@QBEHXZ:PROC		; CvPlayer::getStrikeTurns
; Function compile flags: /Ogtpy
;	COMDAT ?lGetStrikeTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetStrikeTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetStrikeTurns, COMDAT

; 5353 : 	return BasicLuaMethod(L, &CvPlayerAI::getStrikeTurns);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getStrikeTurns@CvPlayer@@QBEHXZ	; CvPlayer::getStrikeTurns
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5354 : }

	ret	0
?lGetStrikeTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetStrikeTurns
_TEXT	ENDS
PUBLIC	?lGetGoldenAgeModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldenAgeModifier
EXTRN	?getGoldenAgeModifier@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getGoldenAgeModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGoldenAgeModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGoldenAgeModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGoldenAgeModifier, COMDAT

; 5359 : 	return BasicLuaMethod(L, &CvPlayerAI::getGoldenAgeModifier);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getGoldenAgeModifier@CvPlayer@@QBEHXZ ; CvPlayer::getGoldenAgeModifier
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5360 : }

	ret	0
?lGetGoldenAgeModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGoldenAgeModifier
_TEXT	ENDS
PUBLIC	?lGetGoldenAgeTourismModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldenAgeTourismModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGoldenAgeTourismModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGoldenAgeTourismModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGoldenAgeTourismModifier, COMDAT

; 5363 : {

	push	ebx
	push	ebp
	push	esi

; 5364 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetGolden
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetGolden
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetGolden
	xor	bl, bl
$LN5@lGetGolden:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetGolden
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetGolden:

; 5365 : 	const int iResult = pkPlayer->GetPlayerTraits()->GetGoldenAgeTourismModifier();

	mov	ecx, edi
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits

; 5366 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR [eax+184]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 5367 : 	return 1;

	mov	eax, 1
	pop	ebx

; 5368 : }

	ret	0
?lGetGoldenAgeTourismModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGoldenAgeTourismModifier
_TEXT	ENDS
PUBLIC	?lGetGoldenAgeGreatWriterRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldenAgeGreatWriterRateModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGoldenAgeGreatWriterRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGoldenAgeGreatWriterRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGoldenAgeGreatWriterRateModifier, COMDAT

; 5371 : {

	push	ebx
	push	ebp
	push	esi

; 5372 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetGolden@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetGolden@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetGolden@2
	xor	bl, bl
$LN5@lGetGolden@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetGolden@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetGolden@2:

; 5373 : 	const int iResult = pkPlayer->GetPlayerTraits()->GetGoldenAgeGreatWriterRateModifier();

	mov	ecx, edi
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits

; 5374 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR [eax+196]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 5375 : 	return 1;

	mov	eax, 1
	pop	ebx

; 5376 : }

	ret	0
?lGetGoldenAgeGreatWriterRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGoldenAgeGreatWriterRateModifier
_TEXT	ENDS
PUBLIC	?lGetGoldenAgeGreatArtistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldenAgeGreatArtistRateModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGoldenAgeGreatArtistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGoldenAgeGreatArtistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGoldenAgeGreatArtistRateModifier, COMDAT

; 5379 : {

	push	ebx
	push	ebp
	push	esi

; 5380 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetGolden@3
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetGolden@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetGolden@3
	xor	bl, bl
$LN5@lGetGolden@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetGolden@3
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetGolden@3:

; 5381 : 	const int iResult = pkPlayer->GetPlayerTraits()->GetGoldenAgeGreatArtistRateModifier();

	mov	ecx, edi
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits

; 5382 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR [eax+188]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 5383 : 	return 1;

	mov	eax, 1
	pop	ebx

; 5384 : }

	ret	0
?lGetGoldenAgeGreatArtistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGoldenAgeGreatArtistRateModifier
_TEXT	ENDS
PUBLIC	?lGetGoldenAgeGreatMusicianRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldenAgeGreatMusicianRateModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGoldenAgeGreatMusicianRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGoldenAgeGreatMusicianRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGoldenAgeGreatMusicianRateModifier, COMDAT

; 5387 : {

	push	ebx
	push	ebp
	push	esi

; 5388 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetGolden@4
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetGolden@4
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetGolden@4
	xor	bl, bl
$LN5@lGetGolden@4:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetGolden@4
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetGolden@4:

; 5389 : 	const int iResult = pkPlayer->GetPlayerTraits()->GetGoldenAgeGreatMusicianRateModifier();

	mov	ecx, edi
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits

; 5390 : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR [eax+192]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 5391 : 	return 1;

	mov	eax, 1
	pop	ebx

; 5392 : }

	ret	0
?lGetGoldenAgeGreatMusicianRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGoldenAgeGreatMusicianRateModifier
_TEXT	ENDS
PUBLIC	?lGetHurryModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHurryModifier
EXTRN	?getHurryModifier@CvPlayer@@QBEHW4HurryTypes@@@Z:PROC ; CvPlayer::getHurryModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetHurryModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHurryModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetHurryModifier, COMDAT

; 5397 : 	return BasicLuaMethod(L, &CvPlayerAI::getHurryModifier);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getHurryModifier@CvPlayer@@QBEHW4HurryTypes@@@Z ; CvPlayer::getHurryModifier
	push	eax
	call	??$BasicLuaMethod@HW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4HurryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum HurryTypes>
	add	esp, 8

; 5398 : }

	ret	0
?lGetHurryModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetHurryModifier
_TEXT	ENDS
PUBLIC	?lCreateGreatGeneral@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCreateGreatGeneral
EXTRN	?createGreatGeneral@CvPlayer@@QAEXW4UnitTypes@@HH@Z:PROC ; CvPlayer::createGreatGeneral
; Function compile flags: /Ogtpy
;	COMDAT ?lCreateGreatGeneral@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCreateGreatGeneral@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lCreateGreatGeneral, COMDAT

; 5402 : {

	push	ebx
	push	ebp
	push	esi

; 5403 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCreateGre
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCreateGre
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCreateGre
	xor	bl, bl
$LN5@lCreateGre:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lCreateGre
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lCreateGre:

; 5404 : 	const UnitTypes eGreatPersonUnit = (UnitTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 5405 : 	const int x = lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger

; 5406 : 	const int y = lua_tointeger(L, 4);

	push	4
	push	esi
	mov	ebp, eax
	call	_lua_tointeger
	add	esp, 24					; 00000018H

; 5407 : 
; 5408 : 	pkPlayer->createGreatGeneral(eGreatPersonUnit, x, y);

	push	eax
	push	ebp
	push	ebx
	mov	ecx, edi
	call	?createGreatGeneral@CvPlayer@@QAEXW4UnitTypes@@HH@Z ; CvPlayer::createGreatGeneral
	pop	edi
	pop	esi
	pop	ebp

; 5409 : 	return 0;

	xor	eax, eax
	pop	ebx

; 5410 : }

	ret	0
?lCreateGreatGeneral@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lCreateGreatGeneral
_TEXT	ENDS
PUBLIC	?lGetGreatPeopleCreated@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatPeopleCreated
EXTRN	?getGreatPeopleCreated@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getGreatPeopleCreated
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGreatPeopleCreated@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGreatPeopleCreated@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGreatPeopleCreated, COMDAT

; 5415 : 	return BasicLuaMethod(L, &CvPlayerAI::getGreatPeopleCreated);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getGreatPeopleCreated@CvPlayer@@QBEHXZ ; CvPlayer::getGreatPeopleCreated
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5416 : }

	ret	0
?lGetGreatPeopleCreated@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGreatPeopleCreated
_TEXT	ENDS
PUBLIC	?lGetGreatGeneralsCreated@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatGeneralsCreated
EXTRN	?getGreatGeneralsCreated@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getGreatGeneralsCreated
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGreatGeneralsCreated@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGreatGeneralsCreated@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGreatGeneralsCreated, COMDAT

; 5421 : 	return BasicLuaMethod(L, &CvPlayerAI::getGreatGeneralsCreated);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getGreatGeneralsCreated@CvPlayer@@QBEHXZ ; CvPlayer::getGreatGeneralsCreated
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5422 : }

	ret	0
?lGetGreatGeneralsCreated@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGreatGeneralsCreated
_TEXT	ENDS
PUBLIC	?lGetGreatPeopleThresholdModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatPeopleThresholdModifier
EXTRN	?getGreatPeopleThresholdModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getGreatPeopleThresholdModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGreatPeopleThresholdModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGreatPeopleThresholdModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGreatPeopleThresholdModifier, COMDAT

; 5427 : 	return BasicLuaMethod(L, &CvPlayerAI::getGreatPeopleThresholdModifier);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getGreatPeopleThresholdModifier@CvPlayer@@QBEHXZ ; CvPlayer::getGreatPeopleThresholdModifier
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5428 : }

	ret	0
?lGetGreatPeopleThresholdModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGreatPeopleThresholdModifier
_TEXT	ENDS
PUBLIC	?lGetGreatGeneralsThresholdModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatGeneralsThresholdModifier
EXTRN	?getGreatGeneralsThresholdModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getGreatGeneralsThresholdModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGreatGeneralsThresholdModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGreatGeneralsThresholdModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGreatGeneralsThresholdModifier, COMDAT

; 5433 : 	return BasicLuaMethod(L, &CvPlayerAI::getGreatGeneralsThresholdModifier);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getGreatGeneralsThresholdModifier@CvPlayer@@QBEHXZ ; CvPlayer::getGreatGeneralsThresholdModifier
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5434 : }

	ret	0
?lGetGreatGeneralsThresholdModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGreatGeneralsThresholdModifier
_TEXT	ENDS
PUBLIC	?lGetGreatAdmiralsThresholdModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatAdmiralsThresholdModifier
EXTRN	?getGreatAdmiralsThresholdModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getGreatAdmiralsThresholdModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGreatAdmiralsThresholdModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGreatAdmiralsThresholdModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGreatAdmiralsThresholdModifier, COMDAT

; 5439 : 	return BasicLuaMethod(L, &CvPlayerAI::getGreatAdmiralsThresholdModifier);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getGreatAdmiralsThresholdModifier@CvPlayer@@QBEHXZ ; CvPlayer::getGreatAdmiralsThresholdModifier
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5440 : }

	ret	0
?lGetGreatAdmiralsThresholdModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGreatAdmiralsThresholdModifier
_TEXT	ENDS
PUBLIC	?lGetGreatPeopleRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatPeopleRateModifier
EXTRN	?getGreatPeopleRateModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getGreatPeopleRateModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGreatPeopleRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGreatPeopleRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGreatPeopleRateModifier, COMDAT

; 5445 : 	return BasicLuaMethod(L, &CvPlayerAI::getGreatPeopleRateModifier);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getGreatPeopleRateModifier@CvPlayer@@QBEHXZ ; CvPlayer::getGreatPeopleRateModifier
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5446 : }

	ret	0
?lGetGreatPeopleRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGreatPeopleRateModifier
_TEXT	ENDS
PUBLIC	?lGetGreatGeneralRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatGeneralRateModifier
EXTRN	?getGreatGeneralRateModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getGreatGeneralRateModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGreatGeneralRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGreatGeneralRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGreatGeneralRateModifier, COMDAT

; 5451 : 	return BasicLuaMethod(L, &CvPlayerAI::getGreatGeneralRateModifier);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getGreatGeneralRateModifier@CvPlayer@@QBEHXZ ; CvPlayer::getGreatGeneralRateModifier
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5452 : }

	ret	0
?lGetGreatGeneralRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGreatGeneralRateModifier
_TEXT	ENDS
PUBLIC	?lGetDomesticGreatGeneralRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetDomesticGreatGeneralRateModifier
EXTRN	?getDomesticGreatGeneralRateModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getDomesticGreatGeneralRateModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetDomesticGreatGeneralRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetDomesticGreatGeneralRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetDomesticGreatGeneralRateModifier, COMDAT

; 5457 : 	return BasicLuaMethod(L, &CvPlayerAI::getDomesticGreatGeneralRateModifier);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getDomesticGreatGeneralRateModifier@CvPlayer@@QBEHXZ ; CvPlayer::getDomesticGreatGeneralRateModifier
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5458 : }

	ret	0
?lGetDomesticGreatGeneralRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetDomesticGreatGeneralRateModifier
_TEXT	ENDS
PUBLIC	?lGetGreatWriterRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatWriterRateModifier
EXTRN	?getGreatWriterRateModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getGreatWriterRateModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGreatWriterRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGreatWriterRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGreatWriterRateModifier, COMDAT

; 5464 : 	return BasicLuaMethod(L, &CvPlayerAI::getGreatWriterRateModifier);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getGreatWriterRateModifier@CvPlayer@@QBEHXZ ; CvPlayer::getGreatWriterRateModifier
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5465 : }

	ret	0
?lGetGreatWriterRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGreatWriterRateModifier
_TEXT	ENDS
PUBLIC	?lGetGreatArtistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatArtistRateModifier
EXTRN	?getGreatArtistRateModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getGreatArtistRateModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGreatArtistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGreatArtistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGreatArtistRateModifier, COMDAT

; 5471 : 	return BasicLuaMethod(L, &CvPlayerAI::getGreatArtistRateModifier);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getGreatArtistRateModifier@CvPlayer@@QBEHXZ ; CvPlayer::getGreatArtistRateModifier
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5472 : }

	ret	0
?lGetGreatArtistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGreatArtistRateModifier
_TEXT	ENDS
PUBLIC	?lGetGreatMusicianRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatMusicianRateModifier
EXTRN	?getGreatMusicianRateModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getGreatMusicianRateModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGreatMusicianRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGreatMusicianRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGreatMusicianRateModifier, COMDAT

; 5478 : 	return BasicLuaMethod(L, &CvPlayerAI::getGreatMusicianRateModifier);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getGreatMusicianRateModifier@CvPlayer@@QBEHXZ ; CvPlayer::getGreatMusicianRateModifier
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5479 : }

	ret	0
?lGetGreatMusicianRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGreatMusicianRateModifier
_TEXT	ENDS
PUBLIC	?lGetGreatScientistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatScientistRateModifier
EXTRN	?getGreatScientistRateModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getGreatScientistRateModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGreatScientistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGreatScientistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGreatScientistRateModifier, COMDAT

; 5485 : 	return BasicLuaMethod(L, &CvPlayerAI::getGreatScientistRateModifier);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getGreatScientistRateModifier@CvPlayer@@QBEHXZ ; CvPlayer::getGreatScientistRateModifier
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5486 : }

	ret	0
?lGetGreatScientistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGreatScientistRateModifier
_TEXT	ENDS
PUBLIC	?lGetGreatMerchantRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatMerchantRateModifier
EXTRN	?getGreatMerchantRateModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getGreatMerchantRateModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGreatMerchantRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGreatMerchantRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGreatMerchantRateModifier, COMDAT

; 5492 : 	return BasicLuaMethod(L, &CvPlayerAI::getGreatMerchantRateModifier);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getGreatMerchantRateModifier@CvPlayer@@QBEHXZ ; CvPlayer::getGreatMerchantRateModifier
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5493 : }

	ret	0
?lGetGreatMerchantRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGreatMerchantRateModifier
_TEXT	ENDS
PUBLIC	?lGetGreatEngineerRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatEngineerRateModifier
EXTRN	?getGreatEngineerRateModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getGreatEngineerRateModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGreatEngineerRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGreatEngineerRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGreatEngineerRateModifier, COMDAT

; 5499 : 	return BasicLuaMethod(L, &CvPlayerAI::getGreatEngineerRateModifier);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getGreatEngineerRateModifier@CvPlayer@@QBEHXZ ; CvPlayer::getGreatEngineerRateModifier
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5500 : }

	ret	0
?lGetGreatEngineerRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGreatEngineerRateModifier
_TEXT	ENDS
PUBLIC	?lGetPolicyGreatPeopleRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyGreatPeopleRateModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetPolicyGreatPeopleRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetPolicyGreatPeopleRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPolicyGreatPeopleRateModifier, COMDAT

; 5505 : {

	push	ebx
	push	ebp
	push	esi

; 5506 : 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetPolicy@5
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetPolicy@5
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetPolicy@5
	xor	bl, bl
$LN6@lGetPolicy@5:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lGetPolicy@5
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lGetPolicy@5:

; 5507 : 	if(pkPlayer)

	test	edi, edi
	je	SHORT $LN15@lGetPolicy@5

; 5508 : 	{
; 5509 : 		lua_pushinteger(L, pkPlayer->GetPlayerPolicies()->GetNumericModifier(POLICYMOD_GREAT_PERSON_RATE));

	push	2
	mov	ecx, edi
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumericModifier@CvPlayerPolicies@@QAEHW4PolicyModifierType@@@Z ; CvPlayerPolicies::GetNumericModifier
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
$LN15@lGetPolicy@5:
	pop	edi
	pop	esi
	pop	ebp

; 5510 : 	}
; 5511 : 	return 1;

	mov	eax, 1
	pop	ebx

; 5512 : }

	ret	0
?lGetPolicyGreatPeopleRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPolicyGreatPeopleRateModifier
_TEXT	ENDS
PUBLIC	?lGetPolicyGreatWriterRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyGreatWriterRateModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetPolicyGreatWriterRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetPolicyGreatWriterRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPolicyGreatWriterRateModifier, COMDAT

; 5517 : {

	push	ebx
	push	ebp
	push	esi

; 5518 : 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetPolicy@6
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetPolicy@6
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetPolicy@6
	xor	bl, bl
$LN6@lGetPolicy@6:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lGetPolicy@6
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lGetPolicy@6:

; 5519 : 	if(pkPlayer)

	test	edi, edi
	je	SHORT $LN15@lGetPolicy@6

; 5520 : 	{
; 5521 : 		lua_pushinteger(L, pkPlayer->GetPlayerPolicies()->GetNumericModifier(POLICYMOD_GREAT_WRITER_RATE));

	push	23					; 00000017H
	mov	ecx, edi
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumericModifier@CvPlayerPolicies@@QAEHW4PolicyModifierType@@@Z ; CvPlayerPolicies::GetNumericModifier
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
$LN15@lGetPolicy@6:
	pop	edi
	pop	esi
	pop	ebp

; 5522 : 	}
; 5523 : 	return 1;

	mov	eax, 1
	pop	ebx

; 5524 : }

	ret	0
?lGetPolicyGreatWriterRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPolicyGreatWriterRateModifier
_TEXT	ENDS
PUBLIC	?lGetPolicyGreatArtistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyGreatArtistRateModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetPolicyGreatArtistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetPolicyGreatArtistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPolicyGreatArtistRateModifier, COMDAT

; 5529 : {

	push	ebx
	push	ebp
	push	esi

; 5530 : 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetPolicy@7
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetPolicy@7
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetPolicy@7
	xor	bl, bl
$LN6@lGetPolicy@7:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lGetPolicy@7
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lGetPolicy@7:

; 5531 : 	if(pkPlayer)

	test	edi, edi
	je	SHORT $LN15@lGetPolicy@7

; 5532 : 	{
; 5533 : 		lua_pushinteger(L, pkPlayer->GetPlayerPolicies()->GetNumericModifier(POLICYMOD_GREAT_ARTIST_RATE));

	push	24					; 00000018H
	mov	ecx, edi
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumericModifier@CvPlayerPolicies@@QAEHW4PolicyModifierType@@@Z ; CvPlayerPolicies::GetNumericModifier
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
$LN15@lGetPolicy@7:
	pop	edi
	pop	esi
	pop	ebp

; 5534 : 	}
; 5535 : 	return 1;

	mov	eax, 1
	pop	ebx

; 5536 : }

	ret	0
?lGetPolicyGreatArtistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPolicyGreatArtistRateModifier
_TEXT	ENDS
PUBLIC	?lGetPolicyGreatMusicianRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyGreatMusicianRateModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetPolicyGreatMusicianRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetPolicyGreatMusicianRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPolicyGreatMusicianRateModifier, COMDAT

; 5541 : {

	push	ebx
	push	ebp
	push	esi
	push	edi

; 5542 : 	CvPlayer* pkPlayer = GetInstance(L);

	mov	edi, DWORD PTR _L$[esp+12]
	push	edi
	call	_lua_gettop
	push	1
	push	edi
	mov	ebp, eax
	mov	bl, 1
	xor	esi, esi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@lGetPolicy@8
	push	OFFSET $SG237728
	push	1
	push	edi
	call	_lua_getfield
	push	-1
	push	edi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@lGetPolicy@8
	push	-1
	push	edi
	call	_lua_touserdata
	mov	esi, eax
	add	esp, 8
	test	esi, esi
	je	SHORT $LN7@lGetPolicy@8
	xor	bl, bl
$LN7@lGetPolicy@8:
	push	ebp
	push	edi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@lGetPolicy@8
	push	OFFSET $SG237734
	push	edi
	call	_luaL_error
	push	OFFSET $SG237742
	push	edi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@lGetPolicy@8:

; 5543 : 	if(pkPlayer)

	test	esi, esi
	je	SHORT $LN16@lGetPolicy@8

; 5544 : 	{
; 5545 : 		
; 5546 : #ifdef NQ_PRODUCTION_TO_GREAT_MUSICIANS_MODIFIER_FROM_POLICIES
; 5547 : 		int iMod = pkPlayer->GetPlayerPolicies()->GetNumericModifier(POLICYMOD_GREAT_MUSICIAN_RATE);

	push	25					; 00000019H
	mov	ecx, esi
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumericModifier@CvPlayerPolicies@@QAEHW4PolicyModifierType@@@Z ; CvPlayerPolicies::GetNumericModifier

; 5548 : 		int iProductionToGreatMusiciansModifier = pkPlayer->GetPlayerPolicies()->GetNumericModifier(POLICYMOD_PRODUCTION_TO_GREAT_MUSICIANS_MODIFIER);

	push	47					; 0000002fH
	mov	ecx, esi
	mov	ebp, eax
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumericModifier@CvPlayerPolicies@@QAEHW4PolicyModifierType@@@Z ; CvPlayerPolicies::GetNumericModifier
	mov	ebx, eax

; 5549 : 		if (iProductionToGreatMusiciansModifier > 0)

	test	ebx, ebx
	jle	SHORT $LN1@lGetPolicy@8

; 5550 : 		{
; 5551 : 			iMod += pkPlayer->calculateTotalYield(YIELD_PRODUCTION) * iProductionToGreatMusiciansModifier / 100;

	push	1
	mov	ecx, esi
	call	?calculateTotalYield@CvPlayer@@QBEHW4YieldTypes@@@Z ; CvPlayer::calculateTotalYield
	mov	ecx, eax
	imul	ecx, ebx
	mov	eax, 1374389535				; 51eb851fH
	imul	ecx
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	add	ebp, eax
$LN1@lGetPolicy@8:

; 5552 : 		}
; 5553 : 		lua_pushinteger(L, iMod);

	push	ebp
	push	edi
	call	_lua_pushinteger
	add	esp, 8
$LN16@lGetPolicy@8:
	pop	edi
	pop	esi
	pop	ebp

; 5554 : #else
; 5555 : 		lua_pushinteger(L, pkPlayer->GetPlayerPolicies()->GetNumericModifier(POLICYMOD_GREAT_MUSICIAN_RATE));
; 5556 : #endif
; 5557 : 	}
; 5558 : 	return 1;

	mov	eax, 1
	pop	ebx

; 5559 : }

	ret	0
?lGetPolicyGreatMusicianRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPolicyGreatMusicianRateModifier
_TEXT	ENDS
PUBLIC	?lGetPolicyGreatScientistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyGreatScientistRateModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetPolicyGreatScientistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetPolicyGreatScientistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPolicyGreatScientistRateModifier, COMDAT

; 5564 : {

	push	ebx
	push	ebp
	push	esi

; 5565 : 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetPolicy@9
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetPolicy@9
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetPolicy@9
	xor	bl, bl
$LN6@lGetPolicy@9:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lGetPolicy@9
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lGetPolicy@9:

; 5566 : 	if(pkPlayer)

	test	edi, edi
	je	SHORT $LN15@lGetPolicy@9

; 5567 : 	{
; 5568 : 		lua_pushinteger(L, pkPlayer->GetPlayerPolicies()->GetNumericModifier(POLICYMOD_GREAT_SCIENTIST_RATE));

	push	27					; 0000001bH
	mov	ecx, edi
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumericModifier@CvPlayerPolicies@@QAEHW4PolicyModifierType@@@Z ; CvPlayerPolicies::GetNumericModifier
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
$LN15@lGetPolicy@9:
	pop	edi
	pop	esi
	pop	ebp

; 5569 : 	}
; 5570 : 	return 1;

	mov	eax, 1
	pop	ebx

; 5571 : }

	ret	0
?lGetPolicyGreatScientistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPolicyGreatScientistRateModifier
_TEXT	ENDS
PUBLIC	?lGetPolicyGreatMerchantRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyGreatMerchantRateModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetPolicyGreatMerchantRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetPolicyGreatMerchantRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPolicyGreatMerchantRateModifier, COMDAT

; 5576 : {

	push	ebx
	push	ebp
	push	esi

; 5577 : 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetPolicy@10
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetPolicy@10
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetPolicy@10
	xor	bl, bl
$LN6@lGetPolicy@10:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lGetPolicy@10
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lGetPolicy@10:

; 5578 : 	if(pkPlayer)

	test	edi, edi
	je	SHORT $LN15@lGetPolicy@10

; 5579 : 	{
; 5580 : 		lua_pushinteger(L, pkPlayer->GetPlayerPolicies()->GetNumericModifier(POLICYMOD_GREAT_MERCHANT_RATE));

	push	26					; 0000001aH
	mov	ecx, edi
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumericModifier@CvPlayerPolicies@@QAEHW4PolicyModifierType@@@Z ; CvPlayerPolicies::GetNumericModifier
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
$LN15@lGetPolicy@10:
	pop	edi
	pop	esi
	pop	ebp

; 5581 : 	}
; 5582 : 	return 1;

	mov	eax, 1
	pop	ebx

; 5583 : }

	ret	0
?lGetPolicyGreatMerchantRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPolicyGreatMerchantRateModifier
_TEXT	ENDS
PUBLIC	?lGetPolicyGreatEngineerRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyGreatEngineerRateModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetPolicyGreatEngineerRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetPolicyGreatEngineerRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPolicyGreatEngineerRateModifier, COMDAT

; 5588 : {

	push	ebx
	push	ebp
	push	esi

; 5589 : 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetPolicy@11
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetPolicy@11
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetPolicy@11
	xor	bl, bl
$LN6@lGetPolicy@11:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lGetPolicy@11
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lGetPolicy@11:

; 5590 : 	if(pkPlayer)

	test	edi, edi
	je	SHORT $LN15@lGetPolicy@11

; 5591 : 	{
; 5592 : 		lua_pushinteger(L, 0);

	push	0
	push	esi
	call	_lua_pushinteger
	add	esp, 8
$LN15@lGetPolicy@11:
	pop	edi
	pop	esi
	pop	ebp

; 5593 : 	}
; 5594 : 	return 1;

	mov	eax, 1
	pop	ebx

; 5595 : }

	ret	0
?lGetPolicyGreatEngineerRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPolicyGreatEngineerRateModifier
_TEXT	ENDS
PUBLIC	?lGetProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetProductionModifier
EXTRN	?getProductionModifier@CvPlayer@@QBEHPAVCvString@@@Z:PROC ; CvPlayer::getProductionModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetProductionModifier, COMDAT

; 5600 : {

	push	ebx
	push	ebp
	push	esi

; 5601 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetProduc
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetProduc
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetProduc
	xor	bl, bl
$LN5@lGetProduc:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetProduc
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetProduc:

; 5602 : 	lua_pushinteger(L, pkPlayer->getProductionModifier());

	push	0
	mov	ecx, edi
	call	?getProductionModifier@CvPlayer@@QBEHPAVCvString@@@Z ; CvPlayer::getProductionModifier
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 5603 : 	return 1;

	mov	eax, 1
	pop	ebx

; 5604 : }

	ret	0
?lGetProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetProductionModifier
_TEXT	ENDS
PUBLIC	?lGetUnitProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnitProductionModifier
EXTRN	?getProductionModifier@CvPlayer@@QBEHW4UnitTypes@@PAVCvString@@@Z:PROC ; CvPlayer::getProductionModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetUnitProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnitProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetUnitProductionModifier, COMDAT

; 5607 : {

	push	ebx
	push	ebp
	push	esi

; 5608 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetUnitPr@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetUnitPr@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetUnitPr@2
	xor	bl, bl
$LN5@lGetUnitPr@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetUnitPr@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetUnitPr@2:

; 5609 : 	const UnitTypes eUnit = (UnitTypes)luaL_checkinteger(L, 2);

	push	2
	push	esi
	call	_luaL_checkinteger
	add	esp, 8

; 5610 : 	lua_pushinteger(L, pkPlayer->getProductionModifier(eUnit));

	push	0
	push	eax
	mov	ecx, edi
	call	?getProductionModifier@CvPlayer@@QBEHW4UnitTypes@@PAVCvString@@@Z ; CvPlayer::getProductionModifier
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 5611 : 	return 1;

	mov	eax, 1
	pop	ebx

; 5612 : }

	ret	0
?lGetUnitProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetUnitProductionModifier
_TEXT	ENDS
PUBLIC	?lGetBuildingProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBuildingProductionModifier
EXTRN	?getProductionModifier@CvPlayer@@QBEHW4BuildingTypes@@PAVCvString@@@Z:PROC ; CvPlayer::getProductionModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBuildingProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBuildingProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetBuildingProductionModifier, COMDAT

; 5615 : {

	push	ebx
	push	ebp
	push	esi

; 5616 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetBuildi@4
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetBuildi@4
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetBuildi@4
	xor	bl, bl
$LN5@lGetBuildi@4:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetBuildi@4
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetBuildi@4:

; 5617 : 	const BuildingTypes eBuilding = (BuildingTypes)luaL_checkinteger(L, 2);

	push	2
	push	esi
	call	_luaL_checkinteger
	add	esp, 8

; 5618 : 	lua_pushinteger(L, pkPlayer->getProductionModifier(eBuilding));

	push	0
	push	eax
	mov	ecx, edi
	call	?getProductionModifier@CvPlayer@@QBEHW4BuildingTypes@@PAVCvString@@@Z ; CvPlayer::getProductionModifier
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 5619 : 	return 1;

	mov	eax, 1
	pop	ebx

; 5620 : }

	ret	0
?lGetBuildingProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetBuildingProductionModifier
_TEXT	ENDS
PUBLIC	?lGetProjectProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetProjectProductionModifier
EXTRN	?getProductionModifier@CvPlayer@@QBEHW4ProjectTypes@@PAVCvString@@@Z:PROC ; CvPlayer::getProductionModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetProjectProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProjectProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetProjectProductionModifier, COMDAT

; 5623 : {

	push	ebx
	push	ebp
	push	esi

; 5624 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetProjec@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetProjec@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetProjec@2
	xor	bl, bl
$LN5@lGetProjec@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetProjec@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetProjec@2:

; 5625 : 	const ProjectTypes eProject = (ProjectTypes)luaL_checkinteger(L, 2);

	push	2
	push	esi
	call	_luaL_checkinteger
	add	esp, 8

; 5626 : 	lua_pushinteger(L, pkPlayer->getProductionModifier(eProject));

	push	0
	push	eax
	mov	ecx, edi
	call	?getProductionModifier@CvPlayer@@QBEHW4ProjectTypes@@PAVCvString@@@Z ; CvPlayer::getProductionModifier
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 5627 : 	return 1;

	mov	eax, 1
	pop	ebx

; 5628 : }

	ret	0
?lGetProjectProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetProjectProductionModifier
_TEXT	ENDS
PUBLIC	?lGetSpecialistProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetSpecialistProductionModifier
EXTRN	?getProductionModifier@CvPlayer@@QBEHW4SpecialistTypes@@PAVCvString@@@Z:PROC ; CvPlayer::getProductionModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetSpecialistProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetSpecialistProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetSpecialistProductionModifier, COMDAT

; 5631 : {

	push	ebx
	push	ebp
	push	esi

; 5632 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetSpecia
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetSpecia
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetSpecia
	xor	bl, bl
$LN5@lGetSpecia:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetSpecia
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetSpecia:

; 5633 : 	const SpecialistTypes eSpecialist = (SpecialistTypes)luaL_checkinteger(L, 2);

	push	2
	push	esi
	call	_luaL_checkinteger
	add	esp, 8

; 5634 : 	lua_pushinteger(L, pkPlayer->getProductionModifier(eSpecialist));

	push	0
	push	eax
	mov	ecx, edi
	call	?getProductionModifier@CvPlayer@@QBEHW4SpecialistTypes@@PAVCvString@@@Z ; CvPlayer::getProductionModifier
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 5635 : 	return 1;

	mov	eax, 1
	pop	ebx

; 5636 : }

	ret	0
?lGetSpecialistProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetSpecialistProductionModifier
_TEXT	ENDS
PUBLIC	?lGetMaxGlobalBuildingProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMaxGlobalBuildingProductionModifier
EXTRN	?getMaxGlobalBuildingProductionModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getMaxGlobalBuildingProductionModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetMaxGlobalBuildingProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMaxGlobalBuildingProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMaxGlobalBuildingProductionModifier, COMDAT

; 5641 : 	return BasicLuaMethod(L, &CvPlayerAI::getMaxGlobalBuildingProductionModifier);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getMaxGlobalBuildingProductionModifier@CvPlayer@@QBEHXZ ; CvPlayer::getMaxGlobalBuildingProductionModifier
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5642 : }

	ret	0
?lGetMaxGlobalBuildingProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMaxGlobalBuildingProductionModifier
_TEXT	ENDS
PUBLIC	?lGetMaxTeamBuildingProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMaxTeamBuildingProductionModifier
EXTRN	?getMaxTeamBuildingProductionModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getMaxTeamBuildingProductionModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetMaxTeamBuildingProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMaxTeamBuildingProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMaxTeamBuildingProductionModifier, COMDAT

; 5647 : 	return BasicLuaMethod(L, &CvPlayerAI::getMaxTeamBuildingProductionModifier);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getMaxTeamBuildingProductionModifier@CvPlayer@@QBEHXZ ; CvPlayer::getMaxTeamBuildingProductionModifier
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5648 : }

	ret	0
?lGetMaxTeamBuildingProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMaxTeamBuildingProductionModifier
_TEXT	ENDS
PUBLIC	?lGetMaxPlayerBuildingProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMaxPlayerBuildingProductionModifier
EXTRN	?getMaxPlayerBuildingProductionModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getMaxPlayerBuildingProductionModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetMaxPlayerBuildingProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMaxPlayerBuildingProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMaxPlayerBuildingProductionModifier, COMDAT

; 5653 : 	return BasicLuaMethod(L, &CvPlayerAI::getMaxPlayerBuildingProductionModifier);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getMaxPlayerBuildingProductionModifier@CvPlayer@@QBEHXZ ; CvPlayer::getMaxPlayerBuildingProductionModifier
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5654 : }

	ret	0
?lGetMaxPlayerBuildingProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMaxPlayerBuildingProductionModifier
_TEXT	ENDS
PUBLIC	?lGetFreeExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFreeExperience
EXTRN	?getFreeExperience@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getFreeExperience
; Function compile flags: /Ogtpy
;	COMDAT ?lGetFreeExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFreeExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetFreeExperience, COMDAT

; 5659 : 	return BasicLuaMethod(L, &CvPlayerAI::getFreeExperience);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getFreeExperience@CvPlayer@@QBEHXZ ; CvPlayer::getFreeExperience
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5660 : }

	ret	0
?lGetFreeExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetFreeExperience
_TEXT	ENDS
PUBLIC	?lGetFeatureProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFeatureProductionModifier
EXTRN	?getFeatureProductionModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getFeatureProductionModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetFeatureProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFeatureProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetFeatureProductionModifier, COMDAT

; 5665 : 	return BasicLuaMethod(L, &CvPlayerAI::getFeatureProductionModifier);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getFeatureProductionModifier@CvPlayer@@QBEHXZ ; CvPlayer::getFeatureProductionModifier
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5666 : }

	ret	0
?lGetFeatureProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetFeatureProductionModifier
_TEXT	ENDS
PUBLIC	?lGetWorkerSpeedModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetWorkerSpeedModifier
EXTRN	?getWorkerSpeedModifier@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getWorkerSpeedModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetWorkerSpeedModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetWorkerSpeedModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetWorkerSpeedModifier, COMDAT

; 5671 : 	return BasicLuaMethod(L, &CvPlayerAI::getWorkerSpeedModifier);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getWorkerSpeedModifier@CvPlayer@@QBEHXZ ; CvPlayer::getWorkerSpeedModifier
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5672 : }

	ret	0
?lGetWorkerSpeedModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetWorkerSpeedModifier
_TEXT	ENDS
PUBLIC	?lGetImprovementUpgradeRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetImprovementUpgradeRateModifier
EXTRN	?getImprovementUpgradeRateModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getImprovementUpgradeRateModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetImprovementUpgradeRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetImprovementUpgradeRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetImprovementUpgradeRateModifier, COMDAT

; 5677 : 	return BasicLuaMethod(L, &CvPlayerAI::getImprovementUpgradeRateModifier);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getImprovementUpgradeRateModifier@CvPlayer@@QBEHXZ ; CvPlayer::getImprovementUpgradeRateModifier
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5678 : }

	ret	0
?lGetImprovementUpgradeRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetImprovementUpgradeRateModifier
_TEXT	ENDS
PUBLIC	?lGetMilitaryProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMilitaryProductionModifier
EXTRN	?getMilitaryProductionModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getMilitaryProductionModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetMilitaryProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMilitaryProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMilitaryProductionModifier, COMDAT

; 5683 : 	return BasicLuaMethod(L, &CvPlayerAI::getMilitaryProductionModifier);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getMilitaryProductionModifier@CvPlayer@@QBEHXZ ; CvPlayer::getMilitaryProductionModifier
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5684 : }

	ret	0
?lGetMilitaryProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMilitaryProductionModifier
_TEXT	ENDS
PUBLIC	?lGetSpaceProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetSpaceProductionModifier
EXTRN	?getSpaceProductionModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getSpaceProductionModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetSpaceProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetSpaceProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetSpaceProductionModifier, COMDAT

; 5689 : 	return BasicLuaMethod(L, &CvPlayerAI::getSpaceProductionModifier);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getSpaceProductionModifier@CvPlayer@@QBEHXZ ; CvPlayer::getSpaceProductionModifier
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5690 : }

	ret	0
?lGetSpaceProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetSpaceProductionModifier
_TEXT	ENDS
PUBLIC	?lGetSettlerProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetSettlerProductionModifier
EXTRN	?getSettlerProductionModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getSettlerProductionModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetSettlerProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetSettlerProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetSettlerProductionModifier, COMDAT

; 5695 : 	return BasicLuaMethod(L, &CvPlayerAI::getSettlerProductionModifier);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getSettlerProductionModifier@CvPlayer@@QBEHXZ ; CvPlayer::getSettlerProductionModifier
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5696 : }

	ret	0
?lGetSettlerProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetSettlerProductionModifier
_TEXT	ENDS
PUBLIC	?lGetCapitalSettlerProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCapitalSettlerProductionModifier
EXTRN	?getCapitalSettlerProductionModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getCapitalSettlerProductionModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCapitalSettlerProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCapitalSettlerProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCapitalSettlerProductionModifier, COMDAT

; 5701 : 	return BasicLuaMethod(L, &CvPlayerAI::getCapitalSettlerProductionModifier);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getCapitalSettlerProductionModifier@CvPlayer@@QBEHXZ ; CvPlayer::getCapitalSettlerProductionModifier
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5702 : }

	ret	0
?lGetCapitalSettlerProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCapitalSettlerProductionModifier
_TEXT	ENDS
PUBLIC	?lGetWonderProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetWonderProductionModifier
EXTRN	?getWonderProductionModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getWonderProductionModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetWonderProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetWonderProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetWonderProductionModifier, COMDAT

; 5707 : 	return BasicLuaMethod(L, &CvPlayerAI::getWonderProductionModifier);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getWonderProductionModifier@CvPlayer@@QBEHXZ ; CvPlayer::getWonderProductionModifier
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5708 : }

	ret	0
?lGetWonderProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetWonderProductionModifier
_TEXT	ENDS
PUBLIC	?lGetUnitProductionMaintenanceMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnitProductionMaintenanceMod
EXTRN	?GetUnitProductionMaintenanceMod@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetUnitProductionMaintenanceMod
; Function compile flags: /Ogtpy
;	COMDAT ?lGetUnitProductionMaintenanceMod@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnitProductionMaintenanceMod@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetUnitProductionMaintenanceMod, COMDAT

; 5713 : 	return BasicLuaMethod(L, &CvPlayerAI::GetUnitProductionMaintenanceMod);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetUnitProductionMaintenanceMod@CvPlayer@@QBEHXZ ; CvPlayer::GetUnitProductionMaintenanceMod
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5714 : }

	ret	0
?lGetUnitProductionMaintenanceMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetUnitProductionMaintenanceMod
_TEXT	ENDS
PUBLIC	?lGetNumUnitsSupplied@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumUnitsSupplied
EXTRN	?GetNumUnitsSupplied@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetNumUnitsSupplied
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumUnitsSupplied@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumUnitsSupplied@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumUnitsSupplied, COMDAT

; 5719 : 	return BasicLuaMethod(L, &CvPlayerAI::GetNumUnitsSupplied);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetNumUnitsSupplied@CvPlayer@@QBEHXZ ; CvPlayer::GetNumUnitsSupplied
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5720 : }

	ret	0
?lGetNumUnitsSupplied@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumUnitsSupplied
_TEXT	ENDS
PUBLIC	?lGetNumUnitsSuppliedByHandicap@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumUnitsSuppliedByHandicap
EXTRN	?GetNumUnitsSuppliedByHandicap@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetNumUnitsSuppliedByHandicap
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumUnitsSuppliedByHandicap@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumUnitsSuppliedByHandicap@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumUnitsSuppliedByHandicap, COMDAT

; 5725 : 	return BasicLuaMethod(L, &CvPlayerAI::GetNumUnitsSuppliedByHandicap);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetNumUnitsSuppliedByHandicap@CvPlayer@@QBEHXZ ; CvPlayer::GetNumUnitsSuppliedByHandicap
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5726 : }

	ret	0
?lGetNumUnitsSuppliedByHandicap@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumUnitsSuppliedByHandicap
_TEXT	ENDS
PUBLIC	?lGetNumUnitsSuppliedByCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumUnitsSuppliedByCities
EXTRN	?GetNumUnitsSuppliedByCities@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetNumUnitsSuppliedByCities
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumUnitsSuppliedByCities@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumUnitsSuppliedByCities@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumUnitsSuppliedByCities, COMDAT

; 5731 : 	return BasicLuaMethod(L, &CvPlayerAI::GetNumUnitsSuppliedByCities);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetNumUnitsSuppliedByCities@CvPlayer@@QBEHXZ ; CvPlayer::GetNumUnitsSuppliedByCities
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5732 : }

	ret	0
?lGetNumUnitsSuppliedByCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumUnitsSuppliedByCities
_TEXT	ENDS
PUBLIC	?lGetNumUnitsSuppliedByPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumUnitsSuppliedByPopulation
EXTRN	?GetNumUnitsSuppliedByPopulation@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetNumUnitsSuppliedByPopulation
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumUnitsSuppliedByPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumUnitsSuppliedByPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumUnitsSuppliedByPopulation, COMDAT

; 5737 : 	return BasicLuaMethod(L, &CvPlayerAI::GetNumUnitsSuppliedByPopulation);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetNumUnitsSuppliedByPopulation@CvPlayer@@QBEHXZ ; CvPlayer::GetNumUnitsSuppliedByPopulation
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5738 : }

	ret	0
?lGetNumUnitsSuppliedByPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumUnitsSuppliedByPopulation
_TEXT	ENDS
PUBLIC	?lGetNumUnitsOutOfSupply@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumUnitsOutOfSupply
EXTRN	?GetNumUnitsOutOfSupply@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetNumUnitsOutOfSupply
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumUnitsOutOfSupply@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumUnitsOutOfSupply@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumUnitsOutOfSupply, COMDAT

; 5743 : 	return BasicLuaMethod(L, &CvPlayerAI::GetNumUnitsOutOfSupply);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetNumUnitsOutOfSupply@CvPlayer@@QBEHXZ ; CvPlayer::GetNumUnitsOutOfSupply
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5744 : }

	ret	0
?lGetNumUnitsOutOfSupply@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumUnitsOutOfSupply
_TEXT	ENDS
PUBLIC	?lGetCityDefenseModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCityDefenseModifier
EXTRN	?getCityDefenseModifier@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getCityDefenseModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCityDefenseModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCityDefenseModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCityDefenseModifier, COMDAT

; 5749 : 	return BasicLuaMethod(L, &CvPlayerAI::getCityDefenseModifier);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getCityDefenseModifier@CvPlayer@@QBEHXZ ; CvPlayer::getCityDefenseModifier
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5750 : }

	ret	0
?lGetCityDefenseModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCityDefenseModifier
_TEXT	ENDS
PUBLIC	?lGetNumNukeUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumNukeUnits
EXTRN	?getNumNukeUnits@CvPlayer@@QBEHXZ:PROC		; CvPlayer::getNumNukeUnits
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumNukeUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumNukeUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetNumNukeUnits, COMDAT

; 5755 : 	return BasicLuaMethod(L, &CvPlayerAI::getNumNukeUnits);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getNumNukeUnits@CvPlayer@@QBEHXZ ; CvPlayer::getNumNukeUnits
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5756 : }

	ret	0
?lGetNumNukeUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetNumNukeUnits
_TEXT	ENDS
PUBLIC	?lGetNumOutsideUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumOutsideUnits
EXTRN	?getNumOutsideUnits@CvPlayer@@QAEHXZ:PROC	; CvPlayer::getNumOutsideUnits
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumOutsideUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumOutsideUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumOutsideUnits, COMDAT

; 5761 : 	return BasicLuaMethod(L, &CvPlayerAI::getNumOutsideUnits);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getNumOutsideUnits@CvPlayer@@QAEHXZ ; CvPlayer::getNumOutsideUnits
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5762 : }

	ret	0
?lGetNumOutsideUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumOutsideUnits
_TEXT	ENDS
PUBLIC	?lGetGoldPerUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldPerUnit
EXTRN	?getGoldPerUnit@CvPlayer@@QBEHXZ:PROC		; CvPlayer::getGoldPerUnit
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGoldPerUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGoldPerUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetGoldPerUnit, COMDAT

; 5768 : 	return BasicLuaMethod(L, &CvPlayerAI::getGoldPerUnit);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getGoldPerUnit@CvPlayer@@QBEHXZ	; CvPlayer::getGoldPerUnit
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5769 : }

	ret	0
?lGetGoldPerUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetGoldPerUnit
_TEXT	ENDS
PUBLIC	?lChangeGoldPerUnitTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeGoldPerUnitTimes100
EXTRN	?changeGoldPerUnitTimes100@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::changeGoldPerUnitTimes100
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeGoldPerUnitTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeGoldPerUnitTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeGoldPerUnitTimes100, COMDAT

; 5774 : 	return BasicLuaMethod(L, &CvPlayerAI::changeGoldPerUnitTimes100);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?changeGoldPerUnitTimes100@CvPlayer@@QAEXH@Z ; CvPlayer::changeGoldPerUnitTimes100
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5775 : }

	ret	0
?lChangeGoldPerUnitTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeGoldPerUnitTimes100
_TEXT	ENDS
PUBLIC	?lGetGoldPerMilitaryUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldPerMilitaryUnit
EXTRN	?getGoldPerMilitaryUnit@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getGoldPerMilitaryUnit
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGoldPerMilitaryUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGoldPerMilitaryUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGoldPerMilitaryUnit, COMDAT

; 5780 : 	return BasicLuaMethod(L, &CvPlayerAI::getGoldPerMilitaryUnit);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getGoldPerMilitaryUnit@CvPlayer@@QBEHXZ ; CvPlayer::getGoldPerMilitaryUnit
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5781 : }

	ret	0
?lGetGoldPerMilitaryUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGoldPerMilitaryUnit
_TEXT	ENDS
PUBLIC	?lGetExtraUnitCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetExtraUnitCost
EXTRN	?getExtraUnitCost@CvPlayer@@QBEHXZ:PROC		; CvPlayer::getExtraUnitCost
; Function compile flags: /Ogtpy
;	COMDAT ?lGetExtraUnitCost@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetExtraUnitCost@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetExtraUnitCost, COMDAT

; 5786 : 	return BasicLuaMethod(L, &CvPlayerAI::getExtraUnitCost);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getExtraUnitCost@CvPlayer@@QBEHXZ ; CvPlayer::getExtraUnitCost
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5787 : }

	ret	0
?lGetExtraUnitCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetExtraUnitCost
_TEXT	ENDS
PUBLIC	?lGetNumMilitaryUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumMilitaryUnits
EXTRN	?getNumMilitaryUnits@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getNumMilitaryUnits
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumMilitaryUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumMilitaryUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumMilitaryUnits, COMDAT

; 5792 : 	return BasicLuaMethod(L, &CvPlayerAI::getNumMilitaryUnits);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getNumMilitaryUnits@CvPlayer@@QBEHXZ ; CvPlayer::getNumMilitaryUnits
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5793 : }

	ret	0
?lGetNumMilitaryUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumMilitaryUnits
_TEXT	ENDS
PUBLIC	?lGetHappyPerMilitaryUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappyPerMilitaryUnit
EXTRN	?getHappyPerMilitaryUnit@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getHappyPerMilitaryUnit
; Function compile flags: /Ogtpy
;	COMDAT ?lGetHappyPerMilitaryUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHappyPerMilitaryUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetHappyPerMilitaryUnit, COMDAT

; 5798 : 	return BasicLuaMethod(L, &CvPlayerAI::getHappyPerMilitaryUnit);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getHappyPerMilitaryUnit@CvPlayer@@QBEHXZ ; CvPlayer::getHappyPerMilitaryUnit
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5799 : }

	ret	0
?lGetHappyPerMilitaryUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetHappyPerMilitaryUnit
_TEXT	ENDS
PUBLIC	?lIsMilitaryFoodProduction@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsMilitaryFoodProduction
EXTRN	?isMilitaryFoodProduction@CvPlayer@@QBE_NXZ:PROC ; CvPlayer::isMilitaryFoodProduction
; Function compile flags: /Ogtpy
;	COMDAT ?lIsMilitaryFoodProduction@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsMilitaryFoodProduction@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsMilitaryFoodProduction, COMDAT

; 5804 : 	return BasicLuaMethod(L, &CvPlayerAI::isMilitaryFoodProduction);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isMilitaryFoodProduction@CvPlayer@@QBE_NXZ ; CvPlayer::isMilitaryFoodProduction
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 5805 : }

	ret	0
?lIsMilitaryFoodProduction@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsMilitaryFoodProduction
_TEXT	ENDS
PUBLIC	?lGetHighestUnitLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHighestUnitLevel
EXTRN	?getHighestUnitLevel@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getHighestUnitLevel
; Function compile flags: /Ogtpy
;	COMDAT ?lGetHighestUnitLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHighestUnitLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetHighestUnitLevel, COMDAT

; 5810 : 	return BasicLuaMethod(L, &CvPlayerAI::getHighestUnitLevel);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getHighestUnitLevel@CvPlayer@@QBEHXZ ; CvPlayer::getHighestUnitLevel
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5811 : }

	ret	0
?lGetHighestUnitLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetHighestUnitLevel
_TEXT	ENDS
PUBLIC	?lGetConscriptCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetConscriptCount
EXTRN	?getConscriptCount@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getConscriptCount
; Function compile flags: /Ogtpy
;	COMDAT ?lGetConscriptCount@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetConscriptCount@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetConscriptCount, COMDAT

; 5817 : 	return BasicLuaMethod(L, &CvPlayerAI::getConscriptCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getConscriptCount@CvPlayer@@QBEHXZ ; CvPlayer::getConscriptCount
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5818 : }

	ret	0
?lGetConscriptCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetConscriptCount
_TEXT	ENDS
PUBLIC	?lSetConscriptCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetConscriptCount
EXTRN	?setConscriptCount@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::setConscriptCount
; Function compile flags: /Ogtpy
;	COMDAT ?lSetConscriptCount@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetConscriptCount@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetConscriptCount, COMDAT

; 5823 : 	return BasicLuaMethod(L, &CvPlayerAI::setConscriptCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?setConscriptCount@CvPlayer@@QAEXH@Z ; CvPlayer::setConscriptCount
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5824 : }

	ret	0
?lSetConscriptCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetConscriptCount
_TEXT	ENDS
PUBLIC	?lChangeConscriptCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeConscriptCount
EXTRN	?changeConscriptCount@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::changeConscriptCount
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeConscriptCount@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeConscriptCount@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeConscriptCount, COMDAT

; 5829 : 	return BasicLuaMethod(L, &CvPlayerAI::changeConscriptCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?changeConscriptCount@CvPlayer@@QAEXH@Z ; CvPlayer::changeConscriptCount
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5830 : }

	ret	0
?lChangeConscriptCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeConscriptCount
_TEXT	ENDS
PUBLIC	?lGetMaxConscript@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMaxConscript
EXTRN	?getMaxConscript@CvPlayer@@QBEHXZ:PROC		; CvPlayer::getMaxConscript
; Function compile flags: /Ogtpy
;	COMDAT ?lGetMaxConscript@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMaxConscript@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetMaxConscript, COMDAT

; 5836 : 	return BasicLuaMethod(L, &CvPlayerAI::getMaxConscript);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getMaxConscript@CvPlayer@@QBEHXZ ; CvPlayer::getMaxConscript
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5837 : }

	ret	0
?lGetMaxConscript@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetMaxConscript
_TEXT	ENDS
PUBLIC	?lGetOverflowResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetOverflowResearch
EXTRN	?getOverflowResearch@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getOverflowResearch
; Function compile flags: /Ogtpy
;	COMDAT ?lGetOverflowResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetOverflowResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetOverflowResearch, COMDAT

; 5842 : 	return BasicLuaMethod(L, &CvPlayerAI::getOverflowResearch);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getOverflowResearch@CvPlayer@@QBEHXZ ; CvPlayer::getOverflowResearch
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5843 : }

	ret	0
?lGetOverflowResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetOverflowResearch
_TEXT	ENDS
PUBLIC	?lGetExpInBorderModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetExpInBorderModifier
EXTRN	?getExpInBorderModifier@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getExpInBorderModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetExpInBorderModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetExpInBorderModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetExpInBorderModifier, COMDAT

; 5848 : 	return BasicLuaMethod(L, &CvPlayerAI::getExpInBorderModifier);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getExpInBorderModifier@CvPlayer@@QBEHXZ ; CvPlayer::getExpInBorderModifier
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5849 : }

	ret	0
?lGetExpInBorderModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetExpInBorderModifier
_TEXT	ENDS
PUBLIC	?lGetLevelExperienceModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetLevelExperienceModifier
EXTRN	?getLevelExperienceModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getLevelExperienceModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetLevelExperienceModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetLevelExperienceModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetLevelExperienceModifier, COMDAT

; 5854 : 	return BasicLuaMethod(L, &CvPlayerAI::getLevelExperienceModifier);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getLevelExperienceModifier@CvPlayer@@QBEHXZ ; CvPlayer::getLevelExperienceModifier
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5855 : }

	ret	0
?lGetLevelExperienceModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetLevelExperienceModifier
_TEXT	ENDS
PUBLIC	?lGetCultureBombTimer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCultureBombTimer
EXTRN	?getCultureBombTimer@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getCultureBombTimer
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCultureBombTimer@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCultureBombTimer@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCultureBombTimer, COMDAT

; 5860 : 	return BasicLuaMethod(L, &CvPlayerAI::getCultureBombTimer);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getCultureBombTimer@CvPlayer@@QBEHXZ ; CvPlayer::getCultureBombTimer
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5861 : }

	ret	0
?lGetCultureBombTimer@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCultureBombTimer
_TEXT	ENDS
PUBLIC	?lGetConversionTimer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetConversionTimer
EXTRN	?getConversionTimer@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getConversionTimer
; Function compile flags: /Ogtpy
;	COMDAT ?lGetConversionTimer@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetConversionTimer@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetConversionTimer, COMDAT

; 5866 : 	return BasicLuaMethod(L, &CvPlayerAI::getConversionTimer);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getConversionTimer@CvPlayer@@QBEHXZ ; CvPlayer::getConversionTimer
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5867 : }

	ret	0
?lGetConversionTimer@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetConversionTimer
_TEXT	ENDS
PUBLIC	?lGetCapitalCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCapitalCity
EXTRN	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ:PROC	; CvPlayer::getCapitalCity
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCapitalCity@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCapitalCity@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetCapitalCity, COMDAT

; 5871 : {

	push	ebx
	push	ebp
	push	esi

; 5872 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetCapita
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetCapita
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetCapita
	xor	bl, bl
$LN5@lGetCapita:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetCapita
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetCapita:

; 5873 : 
; 5874 : 	CvCity* pkCity = pkPlayer->getCapitalCity();

	mov	ecx, edi
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity

; 5875 : 	CvLuaCity::Push(L, pkCity);

	push	eax
	push	esi
	call	?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 5876 : 	return 1;

	mov	eax, 1
	pop	ebx

; 5877 : }

	ret	0
?lGetCapitalCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetCapitalCity
_TEXT	ENDS
PUBLIC	?lIsHasLostCapital@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsHasLostCapital
EXTRN	?IsHasLostCapital@CvPlayer@@QBE_NXZ:PROC	; CvPlayer::IsHasLostCapital
; Function compile flags: /Ogtpy
;	COMDAT ?lIsHasLostCapital@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsHasLostCapital@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsHasLostCapital, COMDAT

; 5882 : 	return BasicLuaMethod(L, &CvPlayerAI::IsHasLostCapital);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?IsHasLostCapital@CvPlayer@@QBE_NXZ ; CvPlayer::IsHasLostCapital
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 5883 : }

	ret	0
?lIsHasLostCapital@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsHasLostCapital
_TEXT	ENDS
PUBLIC	?lGetCitiesLost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCitiesLost
EXTRN	?getCitiesLost@CvPlayer@@QBEHXZ:PROC		; CvPlayer::getCitiesLost
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCitiesLost@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCitiesLost@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetCitiesLost, COMDAT

; 5888 : 	return BasicLuaMethod(L, &CvPlayerAI::getCitiesLost);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getCitiesLost@CvPlayer@@QBEHXZ	; CvPlayer::getCitiesLost
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5889 : }

	ret	0
?lGetCitiesLost@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetCitiesLost
_TEXT	ENDS
PUBLIC	?lGetPower@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetPower
EXTRN	?getPower@CvPlayer@@QBEHXZ:PROC			; CvPlayer::getPower
; Function compile flags: /Ogtpy
;	COMDAT ?lGetPower@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetPower@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetPower, COMDAT

; 5895 : 	return BasicLuaMethod(L, &CvPlayerAI::getPower);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getPower@CvPlayer@@QBEHXZ	; CvPlayer::getPower
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5896 : }

	ret	0
?lGetPower@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetPower
_TEXT	ENDS
PUBLIC	?lGetMilitaryMight@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMilitaryMight
EXTRN	?GetMilitaryMight@CvPlayer@@QBEHXZ:PROC		; CvPlayer::GetMilitaryMight
; Function compile flags: /Ogtpy
;	COMDAT ?lGetMilitaryMight@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMilitaryMight@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMilitaryMight, COMDAT

; 5901 : 	return BasicLuaMethod(L, &CvPlayerAI::GetMilitaryMight);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetMilitaryMight@CvPlayer@@QBEHXZ ; CvPlayer::GetMilitaryMight
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5902 : }

	ret	0
?lGetMilitaryMight@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMilitaryMight
_TEXT	ENDS
PUBLIC	?lGetTotalTimePlayed@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTotalTimePlayed
EXTRN	?getTotalTimePlayed@CvPlayer@@QBEIXZ:PROC	; CvPlayer::getTotalTimePlayed
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTotalTimePlayed@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTotalTimePlayed@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTotalTimePlayed, COMDAT

; 5907 : 	return BasicLuaMethod(L, &CvPlayerAI::getTotalTimePlayed);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getTotalTimePlayed@CvPlayer@@QBEIXZ ; CvPlayer::getTotalTimePlayed
	push	eax
	call	??$BasicLuaMethod@I@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEIXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<unsigned int>
	add	esp, 8

; 5908 : }

	ret	0
?lGetTotalTimePlayed@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTotalTimePlayed
_TEXT	ENDS
PUBLIC	?lGetScore@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetScore
EXTRN	?GetScore@CvPlayer@@QBEH_N0@Z:PROC		; CvPlayer::GetScore
; Function compile flags: /Ogtpy
;	COMDAT ?lGetScore@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScore@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetScore, COMDAT

; 5912 : 	return BasicLuaMethod(L, &CvPlayerAI::GetScore);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetScore@CvPlayer@@QBEH_N0@Z	; CvPlayer::GetScore
	push	eax
	call	??$BasicLuaMethod@H_N_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEH_N1@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,bool,bool>
	add	esp, 8

; 5913 : }

	ret	0
?lGetScore@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetScore
_TEXT	ENDS
PUBLIC	?lGetScoreFromCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromCities
EXTRN	?GetScoreFromCities@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetScoreFromCities
; Function compile flags: /Ogtpy
;	COMDAT ?lGetScoreFromCities@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScoreFromCities@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetScoreFromCities, COMDAT

; 5917 : 	return BasicLuaMethod(L, &CvPlayerAI::GetScoreFromCities);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetScoreFromCities@CvPlayer@@QBEHXZ ; CvPlayer::GetScoreFromCities
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5918 : }

	ret	0
?lGetScoreFromCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetScoreFromCities
_TEXT	ENDS
PUBLIC	?lGetScoreFromPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromPopulation
EXTRN	?GetScoreFromPopulation@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetScoreFromPopulation
; Function compile flags: /Ogtpy
;	COMDAT ?lGetScoreFromPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScoreFromPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetScoreFromPopulation, COMDAT

; 5922 : 	return BasicLuaMethod(L, &CvPlayerAI::GetScoreFromPopulation);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetScoreFromPopulation@CvPlayer@@QBEHXZ ; CvPlayer::GetScoreFromPopulation
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5923 : }

	ret	0
?lGetScoreFromPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetScoreFromPopulation
_TEXT	ENDS
PUBLIC	?lGetScoreFromLand@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromLand
EXTRN	?GetScoreFromLand@CvPlayer@@QBEHXZ:PROC		; CvPlayer::GetScoreFromLand
; Function compile flags: /Ogtpy
;	COMDAT ?lGetScoreFromLand@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScoreFromLand@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetScoreFromLand, COMDAT

; 5927 : 	return BasicLuaMethod(L, &CvPlayerAI::GetScoreFromLand);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetScoreFromLand@CvPlayer@@QBEHXZ ; CvPlayer::GetScoreFromLand
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5928 : }

	ret	0
?lGetScoreFromLand@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetScoreFromLand
_TEXT	ENDS
PUBLIC	?lGetScoreFromWonders@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromWonders
EXTRN	?GetScoreFromWonders@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetScoreFromWonders
; Function compile flags: /Ogtpy
;	COMDAT ?lGetScoreFromWonders@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScoreFromWonders@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetScoreFromWonders, COMDAT

; 5932 : 	return BasicLuaMethod(L, &CvPlayerAI::GetScoreFromWonders);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetScoreFromWonders@CvPlayer@@QBEHXZ ; CvPlayer::GetScoreFromWonders
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5933 : }

	ret	0
?lGetScoreFromWonders@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetScoreFromWonders
_TEXT	ENDS
PUBLIC	?lGetScoreFromTechs@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromTechs
EXTRN	?GetScoreFromTechs@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetScoreFromTechs
; Function compile flags: /Ogtpy
;	COMDAT ?lGetScoreFromTechs@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScoreFromTechs@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetScoreFromTechs, COMDAT

; 5937 : 	return BasicLuaMethod(L, &CvPlayerAI::GetScoreFromTechs);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetScoreFromTechs@CvPlayer@@QBEHXZ ; CvPlayer::GetScoreFromTechs
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5938 : }

	ret	0
?lGetScoreFromTechs@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetScoreFromTechs
_TEXT	ENDS
PUBLIC	?lGetScoreFromFutureTech@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromFutureTech
EXTRN	?GetScoreFromFutureTech@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetScoreFromFutureTech
; Function compile flags: /Ogtpy
;	COMDAT ?lGetScoreFromFutureTech@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScoreFromFutureTech@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetScoreFromFutureTech, COMDAT

; 5942 : 	return BasicLuaMethod(L, &CvPlayerAI::GetScoreFromFutureTech);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetScoreFromFutureTech@CvPlayer@@QBEHXZ ; CvPlayer::GetScoreFromFutureTech
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5943 : }

	ret	0
?lGetScoreFromFutureTech@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetScoreFromFutureTech
_TEXT	ENDS
PUBLIC	?lChangeScoreFromFutureTech@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeScoreFromFutureTech
EXTRN	?ChangeScoreFromFutureTech@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::ChangeScoreFromFutureTech
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeScoreFromFutureTech@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeScoreFromFutureTech@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeScoreFromFutureTech, COMDAT

; 5947 : {

	push	ebx
	push	ebp
	push	esi

; 5948 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lChangeSco
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lChangeSco
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lChangeSco
	xor	bl, bl
$LN5@lChangeSco:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lChangeSco
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lChangeSco:

; 5949 : 	int iChange = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 5950 : 
; 5951 : 	pkPlayer->ChangeScoreFromFutureTech(iChange);

	push	eax
	mov	ecx, edi
	call	?ChangeScoreFromFutureTech@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeScoreFromFutureTech
	pop	edi
	pop	esi
	pop	ebp

; 5952 : 	return 1;

	mov	eax, 1
	pop	ebx

; 5953 : }

	ret	0
?lChangeScoreFromFutureTech@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeScoreFromFutureTech
_TEXT	ENDS
PUBLIC	?lGetScoreFromScenario1@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromScenario1
EXTRN	?GetScoreFromScenario1@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetScoreFromScenario1
; Function compile flags: /Ogtpy
;	COMDAT ?lGetScoreFromScenario1@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScoreFromScenario1@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetScoreFromScenario1, COMDAT

; 5957 : 	return BasicLuaMethod(L, &CvPlayerAI::GetScoreFromScenario1);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetScoreFromScenario1@CvPlayer@@QBEHXZ ; CvPlayer::GetScoreFromScenario1
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5958 : }

	ret	0
?lGetScoreFromScenario1@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetScoreFromScenario1
_TEXT	ENDS
PUBLIC	?lChangeScoreFromScenario1@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeScoreFromScenario1
EXTRN	?ChangeScoreFromScenario1@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::ChangeScoreFromScenario1
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeScoreFromScenario1@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeScoreFromScenario1@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeScoreFromScenario1, COMDAT

; 5962 : {

	push	ebx
	push	ebp
	push	esi

; 5963 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lChangeSco@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lChangeSco@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lChangeSco@2
	xor	bl, bl
$LN5@lChangeSco@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lChangeSco@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lChangeSco@2:

; 5964 : 	int iChange = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 5965 : 
; 5966 : 	pkPlayer->ChangeScoreFromScenario1(iChange);

	push	eax
	mov	ecx, edi
	call	?ChangeScoreFromScenario1@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeScoreFromScenario1
	pop	edi
	pop	esi
	pop	ebp

; 5967 : 	return 1;

	mov	eax, 1
	pop	ebx

; 5968 : }

	ret	0
?lChangeScoreFromScenario1@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeScoreFromScenario1
_TEXT	ENDS
PUBLIC	?lGetScoreFromScenario2@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromScenario2
EXTRN	?GetScoreFromScenario2@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetScoreFromScenario2
; Function compile flags: /Ogtpy
;	COMDAT ?lGetScoreFromScenario2@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScoreFromScenario2@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetScoreFromScenario2, COMDAT

; 5972 : 	return BasicLuaMethod(L, &CvPlayerAI::GetScoreFromScenario2);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetScoreFromScenario2@CvPlayer@@QBEHXZ ; CvPlayer::GetScoreFromScenario2
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5973 : }

	ret	0
?lGetScoreFromScenario2@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetScoreFromScenario2
_TEXT	ENDS
PUBLIC	?lChangeScoreFromScenario2@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeScoreFromScenario2
EXTRN	?ChangeScoreFromScenario2@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::ChangeScoreFromScenario2
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeScoreFromScenario2@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeScoreFromScenario2@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeScoreFromScenario2, COMDAT

; 5977 : {

	push	ebx
	push	ebp
	push	esi

; 5978 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lChangeSco@3
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lChangeSco@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lChangeSco@3
	xor	bl, bl
$LN5@lChangeSco@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lChangeSco@3
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lChangeSco@3:

; 5979 : 	int iChange = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 5980 : 
; 5981 : 	pkPlayer->ChangeScoreFromScenario2(iChange);

	push	eax
	mov	ecx, edi
	call	?ChangeScoreFromScenario2@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeScoreFromScenario2
	pop	edi
	pop	esi
	pop	ebp

; 5982 : 	return 1;

	mov	eax, 1
	pop	ebx

; 5983 : }

	ret	0
?lChangeScoreFromScenario2@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeScoreFromScenario2
_TEXT	ENDS
PUBLIC	?lGetScoreFromScenario3@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromScenario3
EXTRN	?GetScoreFromScenario3@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetScoreFromScenario3
; Function compile flags: /Ogtpy
;	COMDAT ?lGetScoreFromScenario3@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScoreFromScenario3@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetScoreFromScenario3, COMDAT

; 5987 : 	return BasicLuaMethod(L, &CvPlayerAI::GetScoreFromScenario3);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetScoreFromScenario3@CvPlayer@@QBEHXZ ; CvPlayer::GetScoreFromScenario3
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 5988 : }

	ret	0
?lGetScoreFromScenario3@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetScoreFromScenario3
_TEXT	ENDS
PUBLIC	?lChangeScoreFromScenario3@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeScoreFromScenario3
EXTRN	?ChangeScoreFromScenario3@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::ChangeScoreFromScenario3
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeScoreFromScenario3@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeScoreFromScenario3@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeScoreFromScenario3, COMDAT

; 5992 : {

	push	ebx
	push	ebp
	push	esi

; 5993 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lChangeSco@4
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lChangeSco@4
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lChangeSco@4
	xor	bl, bl
$LN5@lChangeSco@4:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lChangeSco@4
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lChangeSco@4:

; 5994 : 	int iChange = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 5995 : 
; 5996 : 	pkPlayer->ChangeScoreFromScenario3(iChange);

	push	eax
	mov	ecx, edi
	call	?ChangeScoreFromScenario3@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeScoreFromScenario3
	pop	edi
	pop	esi
	pop	ebp

; 5997 : 	return 1;

	mov	eax, 1
	pop	ebx

; 5998 : }

	ret	0
?lChangeScoreFromScenario3@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeScoreFromScenario3
_TEXT	ENDS
PUBLIC	?lGetScoreFromScenario4@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromScenario4
EXTRN	?GetScoreFromScenario4@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetScoreFromScenario4
; Function compile flags: /Ogtpy
;	COMDAT ?lGetScoreFromScenario4@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScoreFromScenario4@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetScoreFromScenario4, COMDAT

; 6002 : 	return BasicLuaMethod(L, &CvPlayerAI::GetScoreFromScenario4);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetScoreFromScenario4@CvPlayer@@QBEHXZ ; CvPlayer::GetScoreFromScenario4
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 6003 : }

	ret	0
?lGetScoreFromScenario4@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetScoreFromScenario4
_TEXT	ENDS
PUBLIC	?lChangeScoreFromScenario4@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeScoreFromScenario4
EXTRN	?ChangeScoreFromScenario4@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::ChangeScoreFromScenario4
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeScoreFromScenario4@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeScoreFromScenario4@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeScoreFromScenario4, COMDAT

; 6007 : {

	push	ebx
	push	ebp
	push	esi

; 6008 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lChangeSco@5
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lChangeSco@5
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lChangeSco@5
	xor	bl, bl
$LN5@lChangeSco@5:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lChangeSco@5
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lChangeSco@5:

; 6009 : 	int iChange = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6010 : 
; 6011 : 	pkPlayer->ChangeScoreFromScenario4(iChange);

	push	eax
	mov	ecx, edi
	call	?ChangeScoreFromScenario4@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeScoreFromScenario4
	pop	edi
	pop	esi
	pop	ebp

; 6012 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6013 : }

	ret	0
?lChangeScoreFromScenario4@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeScoreFromScenario4
_TEXT	ENDS
PUBLIC	?lGetScoreFromPolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromPolicies
EXTRN	?GetScoreFromPolicies@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetScoreFromPolicies
; Function compile flags: /Ogtpy
;	COMDAT ?lGetScoreFromPolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScoreFromPolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetScoreFromPolicies, COMDAT

; 6017 : 	return BasicLuaMethod(L, &CvPlayerAI::GetScoreFromPolicies);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetScoreFromPolicies@CvPlayer@@QBEHXZ ; CvPlayer::GetScoreFromPolicies
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 6018 : }

	ret	0
?lGetScoreFromPolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetScoreFromPolicies
_TEXT	ENDS
PUBLIC	?lGetScoreFromGreatWorks@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromGreatWorks
EXTRN	?GetScoreFromGreatWorks@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetScoreFromGreatWorks
; Function compile flags: /Ogtpy
;	COMDAT ?lGetScoreFromGreatWorks@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScoreFromGreatWorks@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetScoreFromGreatWorks, COMDAT

; 6022 : 	return BasicLuaMethod(L, &CvPlayerAI::GetScoreFromGreatWorks);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetScoreFromGreatWorks@CvPlayer@@QBEHXZ ; CvPlayer::GetScoreFromGreatWorks
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 6023 : }

	ret	0
?lGetScoreFromGreatWorks@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetScoreFromGreatWorks
_TEXT	ENDS
PUBLIC	?lGetScoreFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromReligion
EXTRN	?GetScoreFromReligion@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetScoreFromReligion
; Function compile flags: /Ogtpy
;	COMDAT ?lGetScoreFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScoreFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetScoreFromReligion, COMDAT

; 6027 : 	return BasicLuaMethod(L, &CvPlayerAI::GetScoreFromReligion);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetScoreFromReligion@CvPlayer@@QBEHXZ ; CvPlayer::GetScoreFromReligion
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 6028 : }

	ret	0
?lGetScoreFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetScoreFromReligion
_TEXT	ENDS
PUBLIC	?lIsGoldenAgeCultureBonusDisabled@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsGoldenAgeCultureBonusDisabled
EXTRN	?IsGoldenAgeCultureBonusDisabled@CvPlayer@@QBE_NXZ:PROC ; CvPlayer::IsGoldenAgeCultureBonusDisabled
; Function compile flags: /Ogtpy
;	COMDAT ?lIsGoldenAgeCultureBonusDisabled@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsGoldenAgeCultureBonusDisabled@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsGoldenAgeCultureBonusDisabled, COMDAT

; 6032 : 	return BasicLuaMethod(L, &CvPlayerAI::IsGoldenAgeCultureBonusDisabled);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?IsGoldenAgeCultureBonusDisabled@CvPlayer@@QBE_NXZ ; CvPlayer::IsGoldenAgeCultureBonusDisabled
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 6033 : }

	ret	0
?lIsGoldenAgeCultureBonusDisabled@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsGoldenAgeCultureBonusDisabled
_TEXT	ENDS
PUBLIC	?lIsMinorCiv@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lIsMinorCiv
; Function compile flags: /Ogtpy
;	COMDAT ?lIsMinorCiv@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsMinorCiv@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsMinorCiv, COMDAT

; 6040 : 	return BasicLuaMethod(L, &CvPlayerAI::isMinorCiv);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isMinorCiv@CvPlayer@@QBE_NXZ	; CvPlayer::isMinorCiv
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 6041 : }

	ret	0
?lIsMinorCiv@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsMinorCiv
_TEXT	ENDS
PUBLIC	?lGetMinorCivType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivType
EXTRN	?GetMinorCivType@CvMinorCivAI@@QBE?AW4MinorCivTypes@@XZ:PROC ; CvMinorCivAI::GetMinorCivType
EXTRN	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ:PROC ; CvPlayer::GetMinorCivAI
; Function compile flags: /Ogtpy
;	COMDAT ?lGetMinorCivType@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMinorCivType@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetMinorCivType, COMDAT

; 6045 : {

	push	ebx
	push	ebp
	push	esi

; 6046 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetMinorC
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetMinorC
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetMinorC
	xor	bl, bl
$LN5@lGetMinorC:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetMinorC
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetMinorC:

; 6047 : 
; 6048 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetMinorCivType();

	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetMinorCivType@CvMinorCivAI@@QBE?AW4MinorCivTypes@@XZ ; CvMinorCivAI::GetMinorCivType

; 6049 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6050 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6051 : }

	ret	0
?lGetMinorCivType@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetMinorCivType
_TEXT	ENDS
PUBLIC	?lGetMinorCivTrait@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivTrait
EXTRN	?GetTrait@CvMinorCivAI@@QBE?AW4MinorCivTraitTypes@@XZ:PROC ; CvMinorCivAI::GetTrait
; Function compile flags: /Ogtpy
;	COMDAT ?lGetMinorCivTrait@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMinorCivTrait@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorCivTrait, COMDAT

; 6054 : {

	push	ebx
	push	ebp
	push	esi

; 6055 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetMinorC@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetMinorC@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetMinorC@2
	xor	bl, bl
$LN5@lGetMinorC@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetMinorC@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetMinorC@2:

; 6056 : 
; 6057 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetTrait();

	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetTrait@CvMinorCivAI@@QBE?AW4MinorCivTraitTypes@@XZ ; CvMinorCivAI::GetTrait

; 6058 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6059 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6060 : }

	ret	0
?lGetMinorCivTrait@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorCivTrait
_TEXT	ENDS
PUBLIC	?lGetPersonality@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPersonality
EXTRN	?GetPersonality@CvMinorCivAI@@QBE?AW4MinorCivPersonalityTypes@@XZ:PROC ; CvMinorCivAI::GetPersonality
; Function compile flags: /Ogtpy
;	COMDAT ?lGetPersonality@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetPersonality@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetPersonality, COMDAT

; 6063 : {

	push	ebx
	push	ebp
	push	esi

; 6064 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetPerson
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetPerson
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetPerson
	xor	bl, bl
$LN5@lGetPerson:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetPerson
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetPerson:

; 6065 : 
; 6066 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetPersonality();

	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetPersonality@CvMinorCivAI@@QBE?AW4MinorCivPersonalityTypes@@XZ ; CvMinorCivAI::GetPersonality

; 6067 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6068 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6069 : }

	ret	0
?lGetPersonality@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetPersonality
_TEXT	ENDS
PUBLIC	?lIsMinorCivHasUniqueUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsMinorCivHasUniqueUnit
EXTRN	?IsHasUniqueUnit@CvMinorCivAI@@QBE_NXZ:PROC	; CvMinorCivAI::IsHasUniqueUnit
; Function compile flags: /Ogtpy
;	COMDAT ?lIsMinorCivHasUniqueUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsMinorCivHasUniqueUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsMinorCivHasUniqueUnit, COMDAT

; 6072 : {

	push	ebx
	push	ebp
	push	esi

; 6073 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsMinorCi
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsMinorCi
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsMinorCi
	xor	bl, bl
$LN5@lIsMinorCi:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsMinorCi
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsMinorCi:

; 6074 : 
; 6075 : 	const bool bResult = pkPlayer->GetMinorCivAI()->IsHasUniqueUnit();

	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsHasUniqueUnit@CvMinorCivAI@@QBE_NXZ	; CvMinorCivAI::IsHasUniqueUnit

; 6076 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6077 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6078 : }

	ret	0
?lIsMinorCivHasUniqueUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsMinorCivHasUniqueUnit
_TEXT	ENDS
PUBLIC	?lGetMinorCivUniqueUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivUniqueUnit
EXTRN	?GetUniqueUnit@CvMinorCivAI@@QBE?AW4UnitTypes@@XZ:PROC ; CvMinorCivAI::GetUniqueUnit
; Function compile flags: /Ogtpy
;	COMDAT ?lGetMinorCivUniqueUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMinorCivUniqueUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorCivUniqueUnit, COMDAT

; 6081 : {

	push	ebx
	push	ebp
	push	esi

; 6082 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetMinorC@3
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetMinorC@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetMinorC@3
	xor	bl, bl
$LN5@lGetMinorC@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetMinorC@3
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetMinorC@3:

; 6083 : 
; 6084 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetUniqueUnit();

	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetUniqueUnit@CvMinorCivAI@@QBE?AW4UnitTypes@@XZ ; CvMinorCivAI::GetUniqueUnit

; 6085 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6086 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6087 : }

	ret	0
?lGetMinorCivUniqueUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorCivUniqueUnit
_TEXT	ENDS
PUBLIC	?lSetMinorCivUniqueUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetMinorCivUniqueUnit
EXTRN	?SetUniqueUnit@CvMinorCivAI@@QAEXW4UnitTypes@@@Z:PROC ; CvMinorCivAI::SetUniqueUnit
; Function compile flags: /Ogtpy
;	COMDAT ?lSetMinorCivUniqueUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetMinorCivUniqueUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetMinorCivUniqueUnit, COMDAT

; 6090 : {

	push	ebx
	push	ebp
	push	esi

; 6091 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lSetMinorC
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lSetMinorC
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lSetMinorC
	xor	bl, bl
$LN5@lSetMinorC:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lSetMinorC
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lSetMinorC:

; 6092 : 	const UnitTypes eUnit = (UnitTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6093 : 
; 6094 : 	pkPlayer->GetMinorCivAI()->SetUniqueUnit(eUnit);

	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?SetUniqueUnit@CvMinorCivAI@@QAEXW4UnitTypes@@@Z ; CvMinorCivAI::SetUniqueUnit
	pop	edi
	pop	esi
	pop	ebp

; 6095 : 	return 0;

	xor	eax, eax
	pop	ebx

; 6096 : }

	ret	0
?lSetMinorCivUniqueUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetMinorCivUniqueUnit
_TEXT	ENDS
PUBLIC	?lGetAlly@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetAlly
EXTRN	?GetAlly@CvMinorCivAI@@QBE?AW4PlayerTypes@@XZ:PROC ; CvMinorCivAI::GetAlly
; Function compile flags: /Ogtpy
;	COMDAT ?lGetAlly@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetAlly@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC		; CvLuaPlayer::lGetAlly, COMDAT

; 6099 : {

	push	ebx
	push	ebp
	push	esi

; 6100 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetAlly
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetAlly
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetAlly
	xor	bl, bl
$LN5@lGetAlly:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetAlly
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetAlly:

; 6101 : 
; 6102 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetAlly();

	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetAlly@CvMinorCivAI@@QBE?AW4PlayerTypes@@XZ ; CvMinorCivAI::GetAlly

; 6103 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6104 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6105 : }

	ret	0
?lGetAlly@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP		; CvLuaPlayer::lGetAlly
_TEXT	ENDS
PUBLIC	?lGetAlliedTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAlliedTurns
EXTRN	?GetAlliedTurns@CvMinorCivAI@@QBEHXZ:PROC	; CvMinorCivAI::GetAlliedTurns
; Function compile flags: /Ogtpy
;	COMDAT ?lGetAlliedTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetAlliedTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetAlliedTurns, COMDAT

; 6108 : {

	push	ebx
	push	ebp
	push	esi

; 6109 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetAllied
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetAllied
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetAllied
	xor	bl, bl
$LN5@lGetAllied:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetAllied
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetAllied:

; 6110 : 
; 6111 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetAlliedTurns();

	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetAlliedTurns@CvMinorCivAI@@QBEHXZ	; CvMinorCivAI::GetAlliedTurns

; 6112 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6113 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6114 : }

	ret	0
?lGetAlliedTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetAlliedTurns
_TEXT	ENDS
PUBLIC	?lIsFriends@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lIsFriends
EXTRN	?IsFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::IsFriends
; Function compile flags: /Ogtpy
;	COMDAT ?lIsFriends@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsFriends@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsFriends, COMDAT

; 6117 : {

	push	ebx
	push	ebp
	push	esi

; 6118 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsFriends
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsFriends
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsFriends
	xor	bl, bl
$LN5@lIsFriends:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsFriends
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsFriends:

; 6119 : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6120 : 
; 6121 : 	const bool bResult = pkPlayer->GetMinorCivAI()->IsFriends(ePlayer);

	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsFriends

; 6122 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6123 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6124 : }

	ret	0
?lIsFriends@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsFriends
_TEXT	ENDS
PUBLIC	?lIsAllies@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lIsAllies
EXTRN	?IsAllies@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::IsAllies
; Function compile flags: /Ogtpy
;	COMDAT ?lIsAllies@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsAllies@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsAllies, COMDAT

; 6127 : {

	push	ebx
	push	ebp
	push	esi

; 6128 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsAllies
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsAllies
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsAllies
	xor	bl, bl
$LN5@lIsAllies:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsAllies
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsAllies:

; 6129 : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6130 : 
; 6131 : 	const bool bResult = pkPlayer->GetMinorCivAI()->IsAllies(ePlayer);

	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsAllies@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsAllies

; 6132 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6133 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6134 : }

	ret	0
?lIsAllies@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsAllies
_TEXT	ENDS
PUBLIC	?lIsPlayerHasOpenBorders@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerHasOpenBorders
EXTRN	?IsPlayerHasOpenBorders@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::IsPlayerHasOpenBorders
; Function compile flags: /Ogtpy
;	COMDAT ?lIsPlayerHasOpenBorders@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsPlayerHasOpenBorders@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerHasOpenBorders, COMDAT

; 6137 : {

	push	ebx
	push	ebp
	push	esi

; 6138 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsPlayerH
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsPlayerH
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsPlayerH
	xor	bl, bl
$LN5@lIsPlayerH:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsPlayerH
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsPlayerH:

; 6139 : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6140 : 
; 6141 : 	const bool bResult = pkPlayer->GetMinorCivAI()->IsPlayerHasOpenBorders(ePlayer);

	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsPlayerHasOpenBorders@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsPlayerHasOpenBorders

; 6142 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6143 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6144 : }

	ret	0
?lIsPlayerHasOpenBorders@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerHasOpenBorders
_TEXT	ENDS
PUBLIC	?lIsPlayerHasOpenBordersAutomatically@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerHasOpenBordersAutomatically
EXTRN	?IsPlayerHasOpenBordersAutomatically@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::IsPlayerHasOpenBordersAutomatically
; Function compile flags: /Ogtpy
;	COMDAT ?lIsPlayerHasOpenBordersAutomatically@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsPlayerHasOpenBordersAutomatically@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerHasOpenBordersAutomatically, COMDAT

; 6147 : {

	push	ebx
	push	ebp
	push	esi

; 6148 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsPlayerH@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsPlayerH@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsPlayerH@2
	xor	bl, bl
$LN5@lIsPlayerH@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsPlayerH@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsPlayerH@2:

; 6149 : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6150 : 
; 6151 : 	const bool bResult = pkPlayer->GetMinorCivAI()->IsPlayerHasOpenBordersAutomatically(ePlayer);

	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsPlayerHasOpenBordersAutomatically@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsPlayerHasOpenBordersAutomatically

; 6152 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6153 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6154 : }

	ret	0
?lIsPlayerHasOpenBordersAutomatically@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerHasOpenBordersAutomatically
_TEXT	ENDS
PUBLIC	?lGetFriendshipChangePerTurnTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFriendshipChangePerTurnTimes100
EXTRN	?GetFriendshipChangePerTurnTimes100@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetFriendshipChangePerTurnTimes100
; Function compile flags: /Ogtpy
;	COMDAT ?lGetFriendshipChangePerTurnTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFriendshipChangePerTurnTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetFriendshipChangePerTurnTimes100, COMDAT

; 6157 : {

	push	ebx
	push	ebp
	push	esi

; 6158 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetFriend
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetFriend
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetFriend
	xor	bl, bl
$LN5@lGetFriend:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetFriend
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetFriend:

; 6159 : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6160 : 
; 6161 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetFriendshipChangePerTurnTimes100(ePlayer);

	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetFriendshipChangePerTurnTimes100@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetFriendshipChangePerTurnTimes100

; 6162 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6163 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6164 : }

	ret	0
?lGetFriendshipChangePerTurnTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetFriendshipChangePerTurnTimes100
_TEXT	ENDS
PUBLIC	?lGetMinorCivFriendshipWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivFriendshipWithMajor
EXTRN	?GetEffectiveFriendshipWithMajor@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetEffectiveFriendshipWithMajor
; Function compile flags: /Ogtpy
;	COMDAT ?lGetMinorCivFriendshipWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMinorCivFriendshipWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorCivFriendshipWithMajor, COMDAT

; 6167 : {

	push	ebx
	push	ebp
	push	esi

; 6168 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetMinorC@4
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetMinorC@4
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetMinorC@4
	xor	bl, bl
$LN5@lGetMinorC@4:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetMinorC@4
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetMinorC@4:

; 6169 : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6170 : 
; 6171 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetEffectiveFriendshipWithMajor(ePlayer);

	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetEffectiveFriendshipWithMajor@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetEffectiveFriendshipWithMajor

; 6172 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6173 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6174 : }

	ret	0
?lGetMinorCivFriendshipWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorCivFriendshipWithMajor
_TEXT	ENDS
PUBLIC	?lGetMinorCivBaseFriendshipWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivBaseFriendshipWithMajor
EXTRN	?GetBaseFriendshipWithMajor@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetBaseFriendshipWithMajor
; Function compile flags: /Ogtpy
;	COMDAT ?lGetMinorCivBaseFriendshipWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMinorCivBaseFriendshipWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorCivBaseFriendshipWithMajor, COMDAT

; 6178 : {

	push	ebx
	push	ebp
	push	esi

; 6179 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetMinorC@5
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetMinorC@5
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetMinorC@5
	xor	bl, bl
$LN5@lGetMinorC@5:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetMinorC@5
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetMinorC@5:

; 6180 : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6181 : 
; 6182 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetBaseFriendshipWithMajor(ePlayer);

	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetBaseFriendshipWithMajor@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetBaseFriendshipWithMajor

; 6183 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6184 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6185 : }

	ret	0
?lGetMinorCivBaseFriendshipWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorCivBaseFriendshipWithMajor
_TEXT	ENDS
PUBLIC	?lChangeMinorCivFriendshipWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeMinorCivFriendshipWithMajor
EXTRN	?ChangeFriendshipWithMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z:PROC ; CvMinorCivAI::ChangeFriendshipWithMajor
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeMinorCivFriendshipWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeMinorCivFriendshipWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeMinorCivFriendshipWithMajor, COMDAT

; 6190 : {

	push	ebx
	push	ebp
	push	esi

; 6191 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lChangeMin
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lChangeMin
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lChangeMin
	xor	bl, bl
$LN5@lChangeMin:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lChangeMin
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lChangeMin:

; 6192 : 	PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 6193 : 	int iChange = lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H

; 6194 : 
; 6195 : 	pkPlayer->GetMinorCivAI()->ChangeFriendshipWithMajor(ePlayer, iChange);

	push	0
	push	eax
	push	ebx
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?ChangeFriendshipWithMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@H_N@Z ; CvMinorCivAI::ChangeFriendshipWithMajor
	pop	edi
	pop	esi
	pop	ebp

; 6196 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6197 : }

	ret	0
?lChangeMinorCivFriendshipWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeMinorCivFriendshipWithMajor
_TEXT	ENDS
PUBLIC	?lGetMinorCivFriendshipAnchorWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivFriendshipAnchorWithMajor
EXTRN	?GetFriendshipAnchorWithMajor@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetFriendshipAnchorWithMajor
; Function compile flags: /Ogtpy
;	COMDAT ?lGetMinorCivFriendshipAnchorWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMinorCivFriendshipAnchorWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorCivFriendshipAnchorWithMajor, COMDAT

; 6201 : {

	push	ebx
	push	ebp
	push	esi

; 6202 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetMinorC@6
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetMinorC@6
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetMinorC@6
	xor	bl, bl
$LN5@lGetMinorC@6:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetMinorC@6
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetMinorC@6:

; 6203 : 	PlayerTypes eMajor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6204 : 
; 6205 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetFriendshipAnchorWithMajor(eMajor);

	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetFriendshipAnchorWithMajor@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetFriendshipAnchorWithMajor

; 6206 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6207 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6208 : }

	ret	0
?lGetMinorCivFriendshipAnchorWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorCivFriendshipAnchorWithMajor
_TEXT	ENDS
PUBLIC	?lIsPeaceBlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPeaceBlocked
EXTRN	?IsPeaceBlocked@CvMinorCivAI@@QBE_NW4TeamTypes@@@Z:PROC ; CvMinorCivAI::IsPeaceBlocked
; Function compile flags: /Ogtpy
;	COMDAT ?lIsPeaceBlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsPeaceBlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsPeaceBlocked, COMDAT

; 6211 : {

	push	ebx
	push	ebp
	push	esi

; 6212 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsPeaceBl
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsPeaceBl
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsPeaceBl
	xor	bl, bl
$LN5@lIsPeaceBl:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsPeaceBl
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsPeaceBl:

; 6213 : 	const TeamTypes eTeam = (TeamTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6214 : 
; 6215 : 	const bool bResult = pkPlayer->GetMinorCivAI()->IsPeaceBlocked(eTeam);

	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsPeaceBlocked@CvMinorCivAI@@QBE_NW4TeamTypes@@@Z ; CvMinorCivAI::IsPeaceBlocked

; 6216 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6217 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6218 : }

	ret	0
?lIsPeaceBlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsPeaceBlocked
_TEXT	ENDS
PUBLIC	?lIsInfluenceTooLowForPeace@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsInfluenceTooLowForPeace
EXTRN	?IsInfluenceTooLowForPeace@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::IsInfluenceTooLowForPeace
; Function compile flags: /Ogtpy
;	COMDAT ?lIsInfluenceTooLowForPeace@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsInfluenceTooLowForPeace@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsInfluenceTooLowForPeace, COMDAT

; 6222 : {

	push	ebx
	push	ebp
	push	esi

; 6223 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsInfluen
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsInfluen
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsInfluen
	xor	bl, bl
$LN5@lIsInfluen:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsInfluen
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsInfluen:

; 6224 : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6225 : 
; 6226 : 	const bool bResult = pkPlayer->GetMinorCivAI()->IsInfluenceTooLowForPeace(ePlayer);

	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsInfluenceTooLowForPeace@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsInfluenceTooLowForPeace

; 6227 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6228 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6229 : }

	ret	0
?lIsInfluenceTooLowForPeace@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsInfluenceTooLowForPeace
_TEXT	ENDS
PUBLIC	?lIsMinorPermanentWar@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsMinorPermanentWar
EXTRN	?IsPermanentWar@CvMinorCivAI@@QBE_NW4TeamTypes@@@Z:PROC ; CvMinorCivAI::IsPermanentWar
; Function compile flags: /Ogtpy
;	COMDAT ?lIsMinorPermanentWar@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsMinorPermanentWar@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsMinorPermanentWar, COMDAT

; 6233 : {

	push	ebx
	push	ebp
	push	esi

; 6234 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsMinorPe
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsMinorPe
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsMinorPe
	xor	bl, bl
$LN5@lIsMinorPe:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsMinorPe
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsMinorPe:

; 6235 : 	const TeamTypes eTeam = (TeamTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6236 : 
; 6237 : 	const bool bResult = pkPlayer->GetMinorCivAI()->IsPermanentWar(eTeam);

	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsPermanentWar@CvMinorCivAI@@QBE_NW4TeamTypes@@@Z ; CvMinorCivAI::IsPermanentWar

; 6238 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6239 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6240 : }

	ret	0
?lIsMinorPermanentWar@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsMinorPermanentWar
_TEXT	ENDS
PUBLIC	?lGetNumMinorCivsMet@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumMinorCivsMet
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumMinorCivsMet@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iNumMinorCivsMet$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetNumMinorCivsMet@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumMinorCivsMet, COMDAT

; 6243 : {

	push	ecx
	push	ebx
	push	ebp

; 6244 : 	int iNumMinorCivsMet = 0;
; 6245 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	ebp, DWORD PTR _L$[esp+8]
	push	esi
	push	edi
	xor	esi, esi
	push	ebp
	mov	DWORD PTR _iNumMinorCivsMet$[esp+24], esi
	call	_lua_gettop
	push	1
	push	ebp
	mov	edi, eax
	mov	bl, 1
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN10@lGetNumMin
	push	OFFSET $SG237728
	push	1
	push	ebp
	call	_lua_getfield
	push	-1
	push	ebp
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN10@lGetNumMin
	push	-1
	push	ebp
	call	_lua_touserdata
	mov	esi, eax
	add	esp, 8
	test	esi, esi
	je	SHORT $LN10@lGetNumMin
	xor	bl, bl
$LN10@lGetNumMin:
	push	edi
	push	ebp
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN17@lGetNumMin
	push	OFFSET $SG237734
	push	ebp
	call	_luaL_error
	push	OFFSET $SG237742
	push	ebp
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN17@lGetNumMin:

; 6246 : 	TeamTypes eTeam = pkPlayer->getTeam();

	mov	esi, DWORD PTR [esi+44]
	cmp	esi, 63					; 0000003fH
	ja	SHORT $LN23@lGetNumMin
	mov	eax, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	ecx, DWORD PTR [eax+4]
	mov	esi, DWORD PTR [ecx+esi*4]
	jmp	SHORT $LN24@lGetNumMin
$LN23@lGetNumMin:
	or	esi, -1
$LN24@lGetNumMin:

; 6247 : 
; 6248 : 	for(int i = MAX_MAJOR_CIVS; i < MAX_CIV_PLAYERS; i++)

	mov	edi, 1391192				; 00153a58H
	npad	3
$LL44@lGetNumMin:

; 6249 : 	{
; 6250 : 		TeamTypes eOtherTeam = GET_PLAYER((PlayerTypes)i).getTeam();

	mov	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	eax, DWORD PTR [edi+edx+44]
	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN34@lGetNumMin
	mov	ecx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax*4]
	jmp	SHORT $LN35@lGetNumMin
$LN34@lGetNumMin:
	or	eax, -1
$LN35@lGetNumMin:

; 6251 : 
; 6252 : 		if(eOtherTeam == eTeam)

	cmp	eax, esi
	je	SHORT $LN4@lGetNumMin

; 6253 : 		{
; 6254 : 			continue;
; 6255 : 		}
; 6256 : 
; 6257 : 		if(GET_TEAM(eTeam).isHasMet(eOtherTeam))

	mov	ecx, esi
	imul	ecx, 2984				; 00000ba8H
	add	ecx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	push	eax
	call	?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isHasMet
	test	al, al
	je	SHORT $LN4@lGetNumMin

; 6258 : 		{
; 6259 : 			iNumMinorCivsMet += 1;

	inc	DWORD PTR _iNumMinorCivsMet$[esp+20]
$LN4@lGetNumMin:

; 6247 : 
; 6248 : 	for(int i = MAX_MAJOR_CIVS; i < MAX_CIV_PLAYERS; i++)

	add	edi, 63236				; 0000f704H
	cmp	edi, 3983868				; 003cc9fcH
	jl	SHORT $LL44@lGetNumMin

; 6260 : 		}
; 6261 : 	}
; 6262 : 
; 6263 : 	lua_pushinteger(L, iNumMinorCivsMet);

	mov	eax, DWORD PTR _iNumMinorCivsMet$[esp+20]
	push	eax
	push	ebp
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6264 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6265 : }

	pop	ecx
	ret	0
?lGetNumMinorCivsMet@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumMinorCivsMet
_TEXT	ENDS
PUBLIC	?lGetFriendshipNeededForNextLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFriendshipNeededForNextLevel
EXTRN	?GetFriendshipNeededForNextLevel@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetFriendshipNeededForNextLevel
; Function compile flags: /Ogtpy
;	COMDAT ?lGetFriendshipNeededForNextLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFriendshipNeededForNextLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetFriendshipNeededForNextLevel, COMDAT

; 6268 : {

	push	ebx
	push	ebp
	push	esi

; 6269 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetFriend@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetFriend@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetFriend@2
	xor	bl, bl
$LN5@lGetFriend@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetFriend@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetFriend@2:

; 6270 : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6271 : 
; 6272 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetFriendshipNeededForNextLevel(ePlayer);

	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetFriendshipNeededForNextLevel@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetFriendshipNeededForNextLevel

; 6273 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6274 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6275 : }

	ret	0
?lGetFriendshipNeededForNextLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetFriendshipNeededForNextLevel
_TEXT	ENDS
PUBLIC	?lGetMinorCivFriendshipLevelWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivFriendshipLevelWithMajor
EXTRN	?GetFriendshipLevelWithMajor@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetFriendshipLevelWithMajor
; Function compile flags: /Ogtpy
;	COMDAT ?lGetMinorCivFriendshipLevelWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMinorCivFriendshipLevelWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorCivFriendshipLevelWithMajor, COMDAT

; 6278 : {

	push	ebx
	push	ebp
	push	esi

; 6279 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetMinorC@7
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetMinorC@7
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetMinorC@7
	xor	bl, bl
$LN5@lGetMinorC@7:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetMinorC@7
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetMinorC@7:

; 6280 : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6281 : 
; 6282 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetFriendshipLevelWithMajor(ePlayer);

	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetFriendshipLevelWithMajor@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetFriendshipLevelWithMajor

; 6283 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6284 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6285 : }

	ret	0
?lGetMinorCivFriendshipLevelWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorCivFriendshipLevelWithMajor
_TEXT	ENDS
PUBLIC	?lIsMinorCivActiveQuestForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsMinorCivActiveQuestForPlayer
EXTRN	?IsActiveQuestForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z:PROC ; CvMinorCivAI::IsActiveQuestForPlayer
; Function compile flags: /Ogtpy
;	COMDAT ?lIsMinorCivActiveQuestForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsMinorCivActiveQuestForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsMinorCivActiveQuestForPlayer, COMDAT

; 6294 : {

	push	ebx
	push	ebp
	push	esi

; 6295 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsMinorCi@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsMinorCi@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsMinorCi@2
	xor	bl, bl
$LN5@lIsMinorCi@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsMinorCi@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsMinorCi@2:

; 6296 : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 6297 : 	const MinorCivQuestTypes eType = (MinorCivQuestTypes) lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H

; 6298 : 
; 6299 : 	const int bResult = pkPlayer->GetMinorCivAI()->IsActiveQuestForPlayer(ePlayer, eType);

	push	eax
	push	ebx
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsActiveQuestForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::IsActiveQuestForPlayer
	movzx	eax, al

; 6300 : 	lua_pushboolean(L, bResult);

	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6301 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6302 : }

	ret	0
?lIsMinorCivActiveQuestForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsMinorCivActiveQuestForPlayer
_TEXT	ENDS
PUBLIC	?lGetMinorCivNumActiveQuestsForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivNumActiveQuestsForPlayer
EXTRN	?GetNumActiveQuestsForPlayer@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetNumActiveQuestsForPlayer
; Function compile flags: /Ogtpy
;	COMDAT ?lGetMinorCivNumActiveQuestsForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMinorCivNumActiveQuestsForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorCivNumActiveQuestsForPlayer, COMDAT

; 6305 : {

	push	ebx
	push	ebp
	push	esi

; 6306 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetMinorC@8
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetMinorC@8
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetMinorC@8
	xor	bl, bl
$LN5@lGetMinorC@8:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetMinorC@8
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetMinorC@8:

; 6307 : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6308 : 
; 6309 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetNumActiveQuestsForPlayer(ePlayer);

	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetNumActiveQuestsForPlayer@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetNumActiveQuestsForPlayer

; 6310 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6311 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6312 : }

	ret	0
?lGetMinorCivNumActiveQuestsForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorCivNumActiveQuestsForPlayer
_TEXT	ENDS
PUBLIC	?lIsMinorCivDisplayedQuestForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsMinorCivDisplayedQuestForPlayer
EXTRN	?IsDisplayedQuestForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z:PROC ; CvMinorCivAI::IsDisplayedQuestForPlayer
; Function compile flags: /Ogtpy
;	COMDAT ?lIsMinorCivDisplayedQuestForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsMinorCivDisplayedQuestForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsMinorCivDisplayedQuestForPlayer, COMDAT

; 6315 : {

	push	ebx
	push	ebp
	push	esi

; 6316 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsMinorCi@3
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsMinorCi@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsMinorCi@3
	xor	bl, bl
$LN5@lIsMinorCi@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsMinorCi@3
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsMinorCi@3:

; 6317 : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 6318 : 	const MinorCivQuestTypes eType = (MinorCivQuestTypes) lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H

; 6319 : 
; 6320 : 	const int bResult = pkPlayer->GetMinorCivAI()->IsDisplayedQuestForPlayer(ePlayer, eType);

	push	eax
	push	ebx
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsDisplayedQuestForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::IsDisplayedQuestForPlayer
	movzx	eax, al

; 6321 : 	lua_pushboolean(L, bResult);

	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6322 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6323 : }

	ret	0
?lIsMinorCivDisplayedQuestForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsMinorCivDisplayedQuestForPlayer
_TEXT	ENDS
PUBLIC	?lGetMinorCivNumDisplayedQuestsForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivNumDisplayedQuestsForPlayer
EXTRN	?GetNumDisplayedQuestsForPlayer@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetNumDisplayedQuestsForPlayer
; Function compile flags: /Ogtpy
;	COMDAT ?lGetMinorCivNumDisplayedQuestsForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMinorCivNumDisplayedQuestsForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorCivNumDisplayedQuestsForPlayer, COMDAT

; 6326 : {

	push	ebx
	push	ebp
	push	esi

; 6327 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetMinorC@9
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetMinorC@9
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetMinorC@9
	xor	bl, bl
$LN5@lGetMinorC@9:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetMinorC@9
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetMinorC@9:

; 6328 : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6329 : 
; 6330 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetNumDisplayedQuestsForPlayer(ePlayer);

	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetNumDisplayedQuestsForPlayer@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetNumDisplayedQuestsForPlayer

; 6331 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6332 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6333 : }

	ret	0
?lGetMinorCivNumDisplayedQuestsForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorCivNumDisplayedQuestsForPlayer
_TEXT	ENDS
PUBLIC	?lGetQuestData1@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetQuestData1
EXTRN	?GetQuestData1@CvMinorCivAI@@QBEHW4PlayerTypes@@W4MinorCivQuestTypes@@@Z:PROC ; CvMinorCivAI::GetQuestData1
; Function compile flags: /Ogtpy
;	COMDAT ?lGetQuestData1@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetQuestData1@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetQuestData1, COMDAT

; 6336 : {

	push	ebx
	push	ebp
	push	esi

; 6337 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetQuestD
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetQuestD
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetQuestD
	xor	bl, bl
$LN5@lGetQuestD:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetQuestD
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetQuestD:

; 6338 : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 6339 : 	const MinorCivQuestTypes eType = (MinorCivQuestTypes) lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H

; 6340 : 
; 6341 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetQuestData1(ePlayer, eType);

	push	eax
	push	ebx
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetQuestData1@CvMinorCivAI@@QBEHW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::GetQuestData1

; 6342 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6343 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6344 : }

	ret	0
?lGetQuestData1@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetQuestData1
_TEXT	ENDS
PUBLIC	?lGetQuestData2@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetQuestData2
EXTRN	?GetQuestData2@CvMinorCivAI@@QBEHW4PlayerTypes@@W4MinorCivQuestTypes@@@Z:PROC ; CvMinorCivAI::GetQuestData2
; Function compile flags: /Ogtpy
;	COMDAT ?lGetQuestData2@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetQuestData2@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetQuestData2, COMDAT

; 6347 : {

	push	ebx
	push	ebp
	push	esi

; 6348 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetQuestD@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetQuestD@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetQuestD@2
	xor	bl, bl
$LN5@lGetQuestD@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetQuestD@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetQuestD@2:

; 6349 : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 6350 : 	const MinorCivQuestTypes eType = (MinorCivQuestTypes) lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H

; 6351 : 
; 6352 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetQuestData2(ePlayer, eType);

	push	eax
	push	ebx
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetQuestData2@CvMinorCivAI@@QBEHW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::GetQuestData2

; 6353 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6354 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6355 : }

	ret	0
?lGetQuestData2@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetQuestData2
_TEXT	ENDS
PUBLIC	?lGetQuestTurnsRemaining@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetQuestTurnsRemaining
EXTRN	?GetQuestTurnsRemaining@CvMinorCivAI@@QBEHW4PlayerTypes@@W4MinorCivQuestTypes@@H@Z:PROC ; CvMinorCivAI::GetQuestTurnsRemaining
; Function compile flags: /Ogtpy
;	COMDAT ?lGetQuestTurnsRemaining@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetQuestTurnsRemaining@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetQuestTurnsRemaining, COMDAT

; 6358 : {

	push	ebx
	push	ebp
	push	esi

; 6359 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetQuestT
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetQuestT
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetQuestT
	xor	bl, bl
$LN5@lGetQuestT:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetQuestT
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetQuestT:

; 6360 : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 6361 : 	const MinorCivQuestTypes eType = (MinorCivQuestTypes) lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger

; 6362 : 	const int iGameTurn = lua_tointeger(L, 4);

	push	4
	push	esi
	mov	ebp, eax
	call	_lua_tointeger
	add	esp, 24					; 00000018H

; 6363 : 
; 6364 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetQuestTurnsRemaining(ePlayer, eType, iGameTurn);

	push	eax
	push	ebp
	push	ebx
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetQuestTurnsRemaining@CvMinorCivAI@@QBEHW4PlayerTypes@@W4MinorCivQuestTypes@@H@Z ; CvMinorCivAI::GetQuestTurnsRemaining

; 6365 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6366 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6367 : }

	ret	0
?lGetQuestTurnsRemaining@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetQuestTurnsRemaining
_TEXT	ENDS
PUBLIC	?lIsMinorCivContestLeader@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsMinorCivContestLeader
EXTRN	?IsContestLeader@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z:PROC ; CvMinorCivAI::IsContestLeader
; Function compile flags: /Ogtpy
;	COMDAT ?lIsMinorCivContestLeader@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsMinorCivContestLeader@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsMinorCivContestLeader, COMDAT

; 6370 : {

	push	ebx
	push	ebp
	push	esi

; 6371 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsMinorCi@4
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsMinorCi@4
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsMinorCi@4
	xor	bl, bl
$LN5@lIsMinorCi@4:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsMinorCi@4
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsMinorCi@4:

; 6372 : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 6373 : 	const MinorCivQuestTypes eType = (MinorCivQuestTypes) lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H

; 6374 : 	
; 6375 : 	const bool bResult = pkPlayer->GetMinorCivAI()->IsContestLeader(ePlayer, eType);

	push	eax
	push	ebx
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsContestLeader@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::IsContestLeader

; 6376 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6377 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6378 : }

	ret	0
?lIsMinorCivContestLeader@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsMinorCivContestLeader
_TEXT	ENDS
PUBLIC	?lGetMinorCivContestValueForLeader@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivContestValueForLeader
EXTRN	?GetContestValueForLeader@CvMinorCivAI@@QAEHW4MinorCivQuestTypes@@@Z:PROC ; CvMinorCivAI::GetContestValueForLeader
; Function compile flags: /Ogtpy
;	COMDAT ?lGetMinorCivContestValueForLeader@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMinorCivContestValueForLeader@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorCivContestValueForLeader, COMDAT

; 6381 : {

	push	ebx
	push	ebp
	push	esi

; 6382 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetMinorC@10
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetMinorC@10
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetMinorC@10
	xor	bl, bl
$LN5@lGetMinorC@10:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetMinorC@10
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetMinorC@10:

; 6383 : 	const MinorCivQuestTypes eType = (MinorCivQuestTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6384 : 
; 6385 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetContestValueForLeader(eType);

	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetContestValueForLeader@CvMinorCivAI@@QAEHW4MinorCivQuestTypes@@@Z ; CvMinorCivAI::GetContestValueForLeader

; 6386 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6387 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6388 : }

	ret	0
?lGetMinorCivContestValueForLeader@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorCivContestValueForLeader
_TEXT	ENDS
PUBLIC	?lGetMinorCivContestValueForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivContestValueForPlayer
EXTRN	?GetContestValueForPlayer@CvMinorCivAI@@QAEHW4PlayerTypes@@W4MinorCivQuestTypes@@@Z:PROC ; CvMinorCivAI::GetContestValueForPlayer
; Function compile flags: /Ogtpy
;	COMDAT ?lGetMinorCivContestValueForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMinorCivContestValueForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorCivContestValueForPlayer, COMDAT

; 6391 : {

	push	ebx
	push	ebp
	push	esi

; 6392 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetMinorC@11
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetMinorC@11
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetMinorC@11
	xor	bl, bl
$LN5@lGetMinorC@11:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetMinorC@11
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetMinorC@11:

; 6393 : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 6394 : 	const MinorCivQuestTypes eType = (MinorCivQuestTypes) lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H

; 6395 : 
; 6396 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetContestValueForPlayer(ePlayer, eType);

	push	eax
	push	ebx
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetContestValueForPlayer@CvMinorCivAI@@QAEHW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::GetContestValueForPlayer

; 6397 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6398 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6399 : }

	ret	0
?lGetMinorCivContestValueForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorCivContestValueForPlayer
_TEXT	ENDS
PUBLIC	?lIsMinorCivUnitSpawningDisabled@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsMinorCivUnitSpawningDisabled
EXTRN	?IsUnitSpawningDisabled@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::IsUnitSpawningDisabled
; Function compile flags: /Ogtpy
;	COMDAT ?lIsMinorCivUnitSpawningDisabled@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsMinorCivUnitSpawningDisabled@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsMinorCivUnitSpawningDisabled, COMDAT

; 6402 : {

	push	ebx
	push	ebp
	push	esi

; 6403 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsMinorCi@5
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsMinorCi@5
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsMinorCi@5
	xor	bl, bl
$LN5@lIsMinorCi@5:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsMinorCi@5
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsMinorCi@5:

; 6404 : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6405 : 
; 6406 : 	const bool bResult = pkPlayer->GetMinorCivAI()->IsUnitSpawningDisabled(ePlayer);

	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsUnitSpawningDisabled@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsUnitSpawningDisabled

; 6407 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6408 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6409 : }

	ret	0
?lIsMinorCivUnitSpawningDisabled@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsMinorCivUnitSpawningDisabled
_TEXT	ENDS
PUBLIC	?lIsMinorCivRouteEstablishedWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsMinorCivRouteEstablishedWithMajor
EXTRN	?IsRouteConnectionEstablished@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::IsRouteConnectionEstablished
; Function compile flags: /Ogtpy
;	COMDAT ?lIsMinorCivRouteEstablishedWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsMinorCivRouteEstablishedWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsMinorCivRouteEstablishedWithMajor, COMDAT

; 6412 : {

	push	ebx
	push	ebp
	push	esi

; 6413 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsMinorCi@6
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsMinorCi@6
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsMinorCi@6
	xor	bl, bl
$LN5@lIsMinorCi@6:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsMinorCi@6
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsMinorCi@6:

; 6414 : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6415 : 
; 6416 : 	const bool bResult = pkPlayer->GetMinorCivAI()->IsRouteConnectionEstablished(ePlayer);

	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsRouteConnectionEstablished@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsRouteConnectionEstablished

; 6417 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6418 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6419 : }

	ret	0
?lIsMinorCivRouteEstablishedWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsMinorCivRouteEstablishedWithMajor
_TEXT	ENDS
PUBLIC	?lIsProxyWarActiveForMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsProxyWarActiveForMajor
EXTRN	?IsProxyWarActiveForMajor@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::IsProxyWarActiveForMajor
; Function compile flags: /Ogtpy
;	COMDAT ?lIsProxyWarActiveForMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsProxyWarActiveForMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsProxyWarActiveForMajor, COMDAT

; 6436 : {

	push	ebx
	push	ebp
	push	esi

; 6437 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsProxyWa
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsProxyWa
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsProxyWa
	xor	bl, bl
$LN5@lIsProxyWa:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsProxyWa
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsProxyWa:

; 6438 : 	const PlayerTypes eMajor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6439 : 
; 6440 : 	const bool bResult = pkPlayer->GetMinorCivAI()->IsProxyWarActiveForMajor(eMajor);

	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsProxyWarActiveForMajor@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsProxyWarActiveForMajor

; 6441 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6442 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6443 : }

	ret	0
?lIsProxyWarActiveForMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsProxyWarActiveForMajor
_TEXT	ENDS
PUBLIC	?lIsThreateningBarbariansEventActiveForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsThreateningBarbariansEventActiveForPlayer
EXTRN	?IsThreateningBarbariansEventActiveForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::IsThreateningBarbariansEventActiveForPlayer
; Function compile flags: /Ogtpy
;	COMDAT ?lIsThreateningBarbariansEventActiveForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsThreateningBarbariansEventActiveForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsThreateningBarbariansEventActiveForPlayer, COMDAT

; 6446 : {

	push	ebx
	push	ebp
	push	esi

; 6447 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsThreate
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsThreate
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsThreate
	xor	bl, bl
$LN5@lIsThreate:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsThreate
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsThreate:

; 6448 : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6449 : 
; 6450 : 	const bool bResult = pkPlayer->GetMinorCivAI()->IsThreateningBarbariansEventActiveForPlayer(ePlayer);

	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsThreateningBarbariansEventActiveForPlayer@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsThreateningBarbariansEventActiveForPlayer

; 6451 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6452 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6453 : }

	ret	0
?lIsThreateningBarbariansEventActiveForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsThreateningBarbariansEventActiveForPlayer
_TEXT	ENDS
PUBLIC	?lGetTurnsSinceThreatenedByBarbarians@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTurnsSinceThreatenedByBarbarians
EXTRN	?GetTurnsSinceThreatenedAnnouncement@CvMinorCivAI@@QBEHXZ:PROC ; CvMinorCivAI::GetTurnsSinceThreatenedAnnouncement
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTurnsSinceThreatenedByBarbarians@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTurnsSinceThreatenedByBarbarians@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTurnsSinceThreatenedByBarbarians, COMDAT

; 6457 : {

	push	ebx
	push	ebp
	push	esi

; 6458 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetTurnsS
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetTurnsS
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetTurnsS
	xor	bl, bl
$LN5@lGetTurnsS:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetTurnsS
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetTurnsS:

; 6459 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetTurnsSinceThreatenedAnnouncement();

	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetTurnsSinceThreatenedAnnouncement@CvMinorCivAI@@QBEHXZ ; CvMinorCivAI::GetTurnsSinceThreatenedAnnouncement

; 6460 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6461 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6462 : }

	ret	0
?lGetTurnsSinceThreatenedByBarbarians@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTurnsSinceThreatenedByBarbarians
_TEXT	ENDS
PUBLIC	?lGetTurnsSinceThreatenedAnnouncement@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTurnsSinceThreatenedAnnouncement
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTurnsSinceThreatenedAnnouncement@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTurnsSinceThreatenedAnnouncement@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTurnsSinceThreatenedAnnouncement, COMDAT

; 6465 : {

	push	ebx
	push	ebp
	push	esi

; 6466 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetTurnsS@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetTurnsS@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetTurnsS@2
	xor	bl, bl
$LN5@lGetTurnsS@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetTurnsS@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetTurnsS@2:

; 6467 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetTurnsSinceThreatenedAnnouncement();

	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetTurnsSinceThreatenedAnnouncement@CvMinorCivAI@@QBEHXZ ; CvMinorCivAI::GetTurnsSinceThreatenedAnnouncement

; 6468 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6469 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6470 : }

	ret	0
?lGetTurnsSinceThreatenedAnnouncement@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTurnsSinceThreatenedAnnouncement
_TEXT	ENDS
PUBLIC	?lGetFriendshipFromGoldGift@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFriendshipFromGoldGift
EXTRN	?GetFriendshipFromGoldGift@CvMinorCivAI@@QAEHW4PlayerTypes@@H@Z:PROC ; CvMinorCivAI::GetFriendshipFromGoldGift
; Function compile flags: /Ogtpy
;	COMDAT ?lGetFriendshipFromGoldGift@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFriendshipFromGoldGift@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetFriendshipFromGoldGift, COMDAT

; 6473 : {

	push	ebx
	push	ebp
	push	esi

; 6474 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetFriend@3
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetFriend@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetFriend@3
	xor	bl, bl
$LN5@lGetFriend@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetFriend@3
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetFriend@3:

; 6475 : 	const PlayerTypes eMajor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 6476 : 	const int iGold = lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H

; 6477 : 
; 6478 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetFriendshipFromGoldGift(eMajor, iGold);

	push	eax
	push	ebx
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetFriendshipFromGoldGift@CvMinorCivAI@@QAEHW4PlayerTypes@@H@Z ; CvMinorCivAI::GetFriendshipFromGoldGift

; 6479 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6480 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6481 : }

	ret	0
?lGetFriendshipFromGoldGift@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetFriendshipFromGoldGift
_TEXT	ENDS
PUBLIC	?lGetFriendshipFromFaithGift@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFriendshipFromFaithGift
EXTRN	?GetFriendshipFromFaithGift@CvMinorCivAI@@QAEHW4PlayerTypes@@H@Z:PROC ; CvMinorCivAI::GetFriendshipFromFaithGift
; Function compile flags: /Ogtpy
;	COMDAT ?lGetFriendshipFromFaithGift@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFriendshipFromFaithGift@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetFriendshipFromFaithGift, COMDAT

; 6485 : {

	push	ebx
	push	ebp
	push	esi

; 6486 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetFriend@4
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetFriend@4
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetFriend@4
	xor	bl, bl
$LN5@lGetFriend@4:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetFriend@4
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetFriend@4:

; 6487 : 	const PlayerTypes eMajor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 6488 : 	const int iFaith = lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H

; 6489 : 
; 6490 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetFriendshipFromFaithGift(eMajor, iFaith);

	push	eax
	push	ebx
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetFriendshipFromFaithGift@CvMinorCivAI@@QAEHW4PlayerTypes@@H@Z ; CvMinorCivAI::GetFriendshipFromFaithGift

; 6491 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6492 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6493 : }

	ret	0
?lGetFriendshipFromFaithGift@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetFriendshipFromFaithGift
_TEXT	ENDS
PUBLIC	?lIsSameReligionAsMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsSameReligionAsMajor
EXTRN	?IsSameReligionAsMajor@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::IsSameReligionAsMajor
; Function compile flags: /Ogtpy
;	COMDAT ?lIsSameReligionAsMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsSameReligionAsMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsSameReligionAsMajor, COMDAT

; 6497 : {

	push	ebx
	push	ebp
	push	esi

; 6498 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsSameRel
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsSameRel
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsSameRel
	xor	bl, bl
$LN5@lIsSameRel:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsSameRel
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsSameRel:

; 6499 : 	PlayerTypes eMajor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6500 : 
; 6501 : 	const bool bResult = pkPlayer->GetMinorCivAI()->IsSameReligionAsMajor(eMajor);

	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsSameReligionAsMajor@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsSameReligionAsMajor

; 6502 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6503 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6504 : }

	ret	0
?lIsSameReligionAsMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsSameReligionAsMajor
_TEXT	ENDS
PUBLIC	?lGetMinorCivFavoriteMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivFavoriteMajor
; Function compile flags: /Ogtpy
;	COMDAT ?lGetMinorCivFavoriteMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMinorCivFavoriteMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorCivFavoriteMajor, COMDAT

; 6508 : {

	push	ebx
	push	ebp
	push	esi

; 6509 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetMinorC@12
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetMinorC@12
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetMinorC@12
	xor	bl, bl
$LN5@lGetMinorC@12:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetMinorC@12
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetMinorC@12:

; 6510 : 	lua_pushinteger(L, pkPlayer->GetMinorCivAI()->GetAlly());

	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetAlly@CvMinorCivAI@@QBE?AW4PlayerTypes@@XZ ; CvMinorCivAI::GetAlly
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6511 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6512 : }

	ret	0
?lGetMinorCivFavoriteMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorCivFavoriteMajor
_TEXT	ENDS
PUBLIC	?lGetMinorCivScienceFriendshipBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivScienceFriendshipBonus
EXTRN	?GetScienceFriendshipBonus@CvMinorCivAI@@QAEHXZ:PROC ; CvMinorCivAI::GetScienceFriendshipBonus
; Function compile flags: /Ogtpy
;	COMDAT ?lGetMinorCivScienceFriendshipBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMinorCivScienceFriendshipBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorCivScienceFriendshipBonus, COMDAT

; 6515 : {

	push	ebx
	push	ebp
	push	esi

; 6516 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetMinorC@13
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetMinorC@13
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetMinorC@13
	xor	bl, bl
$LN5@lGetMinorC@13:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetMinorC@13
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetMinorC@13:

; 6517 : 	lua_pushinteger(L, pkPlayer->GetMinorCivAI()->GetScienceFriendshipBonus());

	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetScienceFriendshipBonus@CvMinorCivAI@@QAEHXZ ; CvMinorCivAI::GetScienceFriendshipBonus
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6518 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6519 : }

	ret	0
?lGetMinorCivScienceFriendshipBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorCivScienceFriendshipBonus
_TEXT	ENDS
PUBLIC	?lGetMinorCivCultureFriendshipBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivCultureFriendshipBonus
EXTRN	?GetCulturePerBuildingFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z:PROC ; CvMinorCivAI::GetCulturePerBuildingFriendshipBonus
EXTRN	?GetCultureFlatFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z:PROC ; CvMinorCivAI::GetCultureFlatFriendshipBonus
; Function compile flags: /Ogtpy
;	COMDAT ?lGetMinorCivCultureFriendshipBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMinorCivCultureFriendshipBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorCivCultureFriendshipBonus, COMDAT

; 6523 : {

	push	ebx
	push	ebp
	push	esi

; 6524 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN14@lGetMinorC@14
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN14@lGetMinorC@14
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN14@lGetMinorC@14
	xor	bl, bl
$LN14@lGetMinorC@14:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetMinorC@14
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetMinorC@14:

; 6525 : 	PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	mov	ebx, eax

; 6526 : 
; 6527 : 	int iValue = 0;
; 6528 : 	iValue += pkPlayer->GetMinorCivAI()->GetCultureFlatFriendshipBonus(ePlayer);

	push	-1
	push	ebx
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetCultureFlatFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetCultureFlatFriendshipBonus

; 6529 : 	iValue += pkPlayer->GetMinorCivAI()->GetCulturePerBuildingFriendshipBonus(ePlayer);

	push	-1
	push	ebx
	mov	ecx, edi
	mov	ebp, eax
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetCulturePerBuildingFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetCulturePerBuildingFriendshipBonus
	add	ebp, eax

; 6530 : 	lua_pushinteger(L, iValue);

	push	ebp
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6531 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6532 : }

	ret	0
?lGetMinorCivCultureFriendshipBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorCivCultureFriendshipBonus
_TEXT	ENDS
PUBLIC	?lGetMinorCivCurrentCultureFlatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivCurrentCultureFlatBonus
EXTRN	?GetCurrentCultureFlatBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetCurrentCultureFlatBonus
; Function compile flags: /Ogtpy
;	COMDAT ?lGetMinorCivCurrentCultureFlatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMinorCivCurrentCultureFlatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorCivCurrentCultureFlatBonus, COMDAT

; 6535 : {

	push	ebx
	push	ebp
	push	esi

; 6536 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetMinorC@15
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetMinorC@15
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetMinorC@15
	xor	bl, bl
$LN5@lGetMinorC@15:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetMinorC@15
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetMinorC@15:

; 6537 : 	PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6538 : 	lua_pushinteger(L, pkPlayer->GetMinorCivAI()->GetCurrentCultureFlatBonus(ePlayer));

	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetCurrentCultureFlatBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetCurrentCultureFlatBonus
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6539 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6540 : }

	ret	0
?lGetMinorCivCurrentCultureFlatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorCivCurrentCultureFlatBonus
_TEXT	ENDS
PUBLIC	?lGetMinorCivCurrentCulturePerBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivCurrentCulturePerBuildingBonus
EXTRN	?GetCurrentCulturePerBuildingBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetCurrentCulturePerBuildingBonus
; Function compile flags: /Ogtpy
;	COMDAT ?lGetMinorCivCurrentCulturePerBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMinorCivCurrentCulturePerBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorCivCurrentCulturePerBuildingBonus, COMDAT

; 6543 : {

	push	ebx
	push	ebp
	push	esi

; 6544 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetMinorC@16
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetMinorC@16
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetMinorC@16
	xor	bl, bl
$LN5@lGetMinorC@16:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetMinorC@16
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetMinorC@16:

; 6545 : 	PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6546 : 	lua_pushinteger(L, pkPlayer->GetMinorCivAI()->GetCurrentCulturePerBuildingBonus(ePlayer));

	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetCurrentCulturePerBuildingBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetCurrentCulturePerBuildingBonus
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6547 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6548 : }

	ret	0
?lGetMinorCivCurrentCulturePerBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorCivCurrentCulturePerBuildingBonus
_TEXT	ENDS
PUBLIC	?lGetMinorCivCurrentCultureBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivCurrentCultureBonus
EXTRN	?GetCurrentCultureBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetCurrentCultureBonus
; Function compile flags: /Ogtpy
;	COMDAT ?lGetMinorCivCurrentCultureBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMinorCivCurrentCultureBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorCivCurrentCultureBonus, COMDAT

; 6557 : {

	push	ebx
	push	ebp
	push	esi

; 6558 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetMinorC@17
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetMinorC@17
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetMinorC@17
	xor	bl, bl
$LN5@lGetMinorC@17:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetMinorC@17
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetMinorC@17:

; 6559 : 	PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6560 : 	lua_pushinteger(L, pkPlayer->GetMinorCivAI()->GetCurrentCultureBonus(ePlayer));

	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetCurrentCultureBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetCurrentCultureBonus
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6561 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6562 : }

	ret	0
?lGetMinorCivCurrentCultureBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorCivCurrentCultureBonus
_TEXT	ENDS
PUBLIC	?lGetMinorCivHappinessFriendshipBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivHappinessFriendshipBonus
EXTRN	?GetHappinessPerLuxuryFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z:PROC ; CvMinorCivAI::GetHappinessPerLuxuryFriendshipBonus
EXTRN	?GetHappinessFlatFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z:PROC ; CvMinorCivAI::GetHappinessFlatFriendshipBonus
; Function compile flags: /Ogtpy
;	COMDAT ?lGetMinorCivHappinessFriendshipBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMinorCivHappinessFriendshipBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorCivHappinessFriendshipBonus, COMDAT

; 6566 : {

	push	ebx
	push	ebp
	push	esi

; 6567 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN14@lGetMinorC@18
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN14@lGetMinorC@18
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN14@lGetMinorC@18
	xor	bl, bl
$LN14@lGetMinorC@18:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetMinorC@18
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetMinorC@18:

; 6568 : 	PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	mov	ebx, eax

; 6569 : 
; 6570 : 	int iValue = 0;
; 6571 : 	iValue += pkPlayer->GetMinorCivAI()->GetHappinessFlatFriendshipBonus(ePlayer);

	push	-1
	push	ebx
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetHappinessFlatFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetHappinessFlatFriendshipBonus

; 6572 : 	iValue += pkPlayer->GetMinorCivAI()->GetHappinessPerLuxuryFriendshipBonus(ePlayer);

	push	-1
	push	ebx
	mov	ecx, edi
	mov	ebp, eax
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetHappinessPerLuxuryFriendshipBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@W4EraTypes@@@Z ; CvMinorCivAI::GetHappinessPerLuxuryFriendshipBonus
	add	ebp, eax

; 6573 : 	lua_pushinteger(L, iValue);

	push	ebp
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6574 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6575 : }

	ret	0
?lGetMinorCivHappinessFriendshipBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorCivHappinessFriendshipBonus
_TEXT	ENDS
PUBLIC	?lGetMinorCivCurrentHappinessFlatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivCurrentHappinessFlatBonus
EXTRN	?GetCurrentHappinessFlatBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetCurrentHappinessFlatBonus
; Function compile flags: /Ogtpy
;	COMDAT ?lGetMinorCivCurrentHappinessFlatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMinorCivCurrentHappinessFlatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorCivCurrentHappinessFlatBonus, COMDAT

; 6578 : {

	push	ebx
	push	ebp
	push	esi

; 6579 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetMinorC@19
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetMinorC@19
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetMinorC@19
	xor	bl, bl
$LN5@lGetMinorC@19:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetMinorC@19
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetMinorC@19:

; 6580 : 	PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6581 : 	lua_pushinteger(L, pkPlayer->GetMinorCivAI()->GetCurrentHappinessFlatBonus(ePlayer));

	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetCurrentHappinessFlatBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetCurrentHappinessFlatBonus
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6582 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6583 : }

	ret	0
?lGetMinorCivCurrentHappinessFlatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorCivCurrentHappinessFlatBonus
_TEXT	ENDS
PUBLIC	?lGetMinorCivCurrentHappinessPerLuxuryBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivCurrentHappinessPerLuxuryBonus
EXTRN	?GetCurrentHappinessPerLuxuryBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetCurrentHappinessPerLuxuryBonus
; Function compile flags: /Ogtpy
;	COMDAT ?lGetMinorCivCurrentHappinessPerLuxuryBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMinorCivCurrentHappinessPerLuxuryBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorCivCurrentHappinessPerLuxuryBonus, COMDAT

; 6586 : {

	push	ebx
	push	ebp
	push	esi

; 6587 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetMinorC@20
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetMinorC@20
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetMinorC@20
	xor	bl, bl
$LN5@lGetMinorC@20:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetMinorC@20
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetMinorC@20:

; 6588 : 	PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6589 : 	lua_pushinteger(L, pkPlayer->GetMinorCivAI()->GetCurrentHappinessPerLuxuryBonus(ePlayer));

	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetCurrentHappinessPerLuxuryBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetCurrentHappinessPerLuxuryBonus
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6590 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6591 : }

	ret	0
?lGetMinorCivCurrentHappinessPerLuxuryBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorCivCurrentHappinessPerLuxuryBonus
_TEXT	ENDS
PUBLIC	?lGetMinorCivCurrentHappinessBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivCurrentHappinessBonus
EXTRN	?GetCurrentHappinessBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetCurrentHappinessBonus
; Function compile flags: /Ogtpy
;	COMDAT ?lGetMinorCivCurrentHappinessBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMinorCivCurrentHappinessBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorCivCurrentHappinessBonus, COMDAT

; 6594 : {

	push	ebx
	push	ebp
	push	esi

; 6595 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetMinorC@21
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetMinorC@21
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetMinorC@21
	xor	bl, bl
$LN5@lGetMinorC@21:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetMinorC@21
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetMinorC@21:

; 6596 : 	PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6597 : 	lua_pushinteger(L, pkPlayer->GetMinorCivAI()->GetCurrentHappinessBonus(ePlayer));

	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetCurrentHappinessBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetCurrentHappinessBonus
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6598 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6599 : }

	ret	0
?lGetMinorCivCurrentHappinessBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorCivCurrentHappinessBonus
_TEXT	ENDS
PUBLIC	?lGetMinorCivCurrentFaithBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivCurrentFaithBonus
EXTRN	?GetCurrentFaithBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetCurrentFaithBonus
; Function compile flags: /Ogtpy
;	COMDAT ?lGetMinorCivCurrentFaithBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMinorCivCurrentFaithBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorCivCurrentFaithBonus, COMDAT

; 6602 : {

	push	ebx
	push	ebp
	push	esi

; 6603 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetMinorC@22
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetMinorC@22
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetMinorC@22
	xor	bl, bl
$LN5@lGetMinorC@22:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetMinorC@22
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetMinorC@22:

; 6604 : 	PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6605 : 	lua_pushinteger(L, pkPlayer->GetMinorCivAI()->GetCurrentFaithBonus(ePlayer));

	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetCurrentFaithBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetCurrentFaithBonus
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6606 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6607 : }

	ret	0
?lGetMinorCivCurrentFaithBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorCivCurrentFaithBonus
_TEXT	ENDS
PUBLIC	?lGetCurrentCapitalFoodBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCurrentCapitalFoodBonus
EXTRN	?GetCurrentCapitalFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetCurrentCapitalFoodBonus
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCurrentCapitalFoodBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCurrentCapitalFoodBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCurrentCapitalFoodBonus, COMDAT

; 6610 : {

	push	ebx
	push	ebp
	push	esi

; 6611 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetCurren@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetCurren@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetCurren@2
	xor	bl, bl
$LN5@lGetCurren@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetCurren@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetCurren@2:

; 6612 : 	PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6613 : 	lua_pushinteger(L, pkPlayer->GetMinorCivAI()->GetCurrentCapitalFoodBonus(ePlayer));

	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetCurrentCapitalFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetCurrentCapitalFoodBonus
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6614 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6615 : }

	ret	0
?lGetCurrentCapitalFoodBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCurrentCapitalFoodBonus
_TEXT	ENDS
PUBLIC	?lGetCurrentOtherCityFoodBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCurrentOtherCityFoodBonus
EXTRN	?GetCurrentOtherCityFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetCurrentOtherCityFoodBonus
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCurrentOtherCityFoodBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCurrentOtherCityFoodBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCurrentOtherCityFoodBonus, COMDAT

; 6618 : {

	push	ebx
	push	ebp
	push	esi

; 6619 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetCurren@3
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetCurren@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetCurren@3
	xor	bl, bl
$LN5@lGetCurren@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetCurren@3
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetCurren@3:

; 6620 : 	PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6621 : 	lua_pushinteger(L, pkPlayer->GetMinorCivAI()->GetCurrentOtherCityFoodBonus(ePlayer));

	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetCurrentOtherCityFoodBonus@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetCurrentOtherCityFoodBonus
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6622 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6623 : }

	ret	0
?lGetCurrentOtherCityFoodBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCurrentOtherCityFoodBonus
_TEXT	ENDS
PUBLIC	?lGetCurrentSpawnEstimate@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCurrentSpawnEstimate
EXTRN	?GetCurrentSpawnEstimate@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetCurrentSpawnEstimate
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCurrentSpawnEstimate@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCurrentSpawnEstimate@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCurrentSpawnEstimate, COMDAT

; 6626 : {

	push	ebx
	push	ebp
	push	esi

; 6627 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetCurren@4
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetCurren@4
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetCurren@4
	xor	bl, bl
$LN5@lGetCurren@4:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetCurren@4
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetCurren@4:

; 6628 : 	PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6629 : 	lua_pushinteger(L, pkPlayer->GetMinorCivAI()->GetCurrentSpawnEstimate(ePlayer));

	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetCurrentSpawnEstimate@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetCurrentSpawnEstimate
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6630 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6631 : }

	ret	0
?lGetCurrentSpawnEstimate@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCurrentSpawnEstimate
_TEXT	ENDS
PUBLIC	?lGetCurrentScienceFriendshipBonusTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCurrentScienceFriendshipBonusTimes100
EXTRN	?GetCurrentScienceFriendshipBonusTimes100@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetCurrentScienceFriendshipBonusTimes100
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCurrentScienceFriendshipBonusTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCurrentScienceFriendshipBonusTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCurrentScienceFriendshipBonusTimes100, COMDAT

; 6634 : {

	push	ebx
	push	ebp
	push	esi

; 6635 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetCurren@5
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetCurren@5
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetCurren@5
	xor	bl, bl
$LN5@lGetCurren@5:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetCurren@5
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetCurren@5:

; 6636 : 	PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6637 : 	lua_pushinteger(L, pkPlayer->GetMinorCivAI()->GetCurrentScienceFriendshipBonusTimes100(ePlayer));

	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetCurrentScienceFriendshipBonusTimes100@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetCurrentScienceFriendshipBonusTimes100
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6638 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6639 : }

	ret	0
?lGetCurrentScienceFriendshipBonusTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCurrentScienceFriendshipBonusTimes100
_TEXT	ENDS
PUBLIC	?lDoMinorLiberationByMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lDoMinorLiberationByMajor
EXTRN	?DoLiberationByMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@W4TeamTypes@@@Z:PROC ; CvMinorCivAI::DoLiberationByMajor
; Function compile flags: /Ogtpy
;	COMDAT ?lDoMinorLiberationByMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lDoMinorLiberationByMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lDoMinorLiberationByMajor, COMDAT

; 6643 : {

	push	ebx
	push	ebp
	push	esi

; 6644 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lDoMinorLi
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lDoMinorLi
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lDoMinorLi
	xor	bl, bl
$LN5@lDoMinorLi:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lDoMinorLi
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lDoMinorLi:

; 6645 : 	PlayerTypes eLiberator = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 6646 : 	TeamTypes eConquerorTeam = (TeamTypes) lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H

; 6647 : 
; 6648 : 	pkPlayer->GetMinorCivAI()->DoLiberationByMajor(eLiberator, eConquerorTeam);

	push	eax
	push	ebx
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?DoLiberationByMajor@CvMinorCivAI@@QAEXW4PlayerTypes@@W4TeamTypes@@@Z ; CvMinorCivAI::DoLiberationByMajor
	pop	edi
	pop	esi
	pop	ebp

; 6649 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6650 : }

	ret	0
?lDoMinorLiberationByMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lDoMinorLiberationByMajor
_TEXT	ENDS
PUBLIC	?lIsProtectedByMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsProtectedByMajor
EXTRN	?IsProtectedByMajor@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::IsProtectedByMajor
; Function compile flags: /Ogtpy
;	COMDAT ?lIsProtectedByMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsProtectedByMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsProtectedByMajor, COMDAT

; 6654 : {

	push	ebx
	push	ebp
	push	esi

; 6655 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsProtect
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsProtect
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsProtect
	xor	bl, bl
$LN5@lIsProtect:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsProtect
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsProtect:

; 6656 : 	PlayerTypes eMajor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6657 : 
; 6658 : 	const bool bResult = pkPlayer->GetMinorCivAI()->IsProtectedByMajor(eMajor);

	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsProtectedByMajor@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsProtectedByMajor

; 6659 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6660 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6661 : }

	ret	0
?lIsProtectedByMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsProtectedByMajor
_TEXT	ENDS
PUBLIC	?lCanMajorProtect@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanMajorProtect
EXTRN	?CanMajorProtect@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::CanMajorProtect
; Function compile flags: /Ogtpy
;	COMDAT ?lCanMajorProtect@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanMajorProtect@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lCanMajorProtect, COMDAT

; 6665 : {

	push	ebx
	push	ebp
	push	esi

; 6666 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCanMajorP
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCanMajorP
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCanMajorP
	xor	bl, bl
$LN5@lCanMajorP:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lCanMajorP
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lCanMajorP:

; 6667 : 	PlayerTypes eMajor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6668 : 
; 6669 : 	const bool bResult = pkPlayer->GetMinorCivAI()->CanMajorProtect(eMajor);

	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?CanMajorProtect@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::CanMajorProtect

; 6670 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6671 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6672 : }

	ret	0
?lCanMajorProtect@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lCanMajorProtect
_TEXT	ENDS
PUBLIC	?lCanMajorStartProtection@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanMajorStartProtection
EXTRN	?CanMajorStartProtection@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::CanMajorStartProtection
; Function compile flags: /Ogtpy
;	COMDAT ?lCanMajorStartProtection@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanMajorStartProtection@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lCanMajorStartProtection, COMDAT

; 6676 : {

	push	ebx
	push	ebp
	push	esi

; 6677 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCanMajorS
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCanMajorS
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCanMajorS
	xor	bl, bl
$LN5@lCanMajorS:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lCanMajorS
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lCanMajorS:

; 6678 : 	PlayerTypes eMajor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6679 : 
; 6680 : 	const bool bResult = pkPlayer->GetMinorCivAI()->CanMajorStartProtection(eMajor);

	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?CanMajorStartProtection@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::CanMajorStartProtection

; 6681 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6682 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6683 : }

	ret	0
?lCanMajorStartProtection@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lCanMajorStartProtection
_TEXT	ENDS
PUBLIC	?lCanMajorWithdrawProtection@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanMajorWithdrawProtection
EXTRN	?CanMajorWithdrawProtection@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::CanMajorWithdrawProtection
; Function compile flags: /Ogtpy
;	COMDAT ?lCanMajorWithdrawProtection@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanMajorWithdrawProtection@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lCanMajorWithdrawProtection, COMDAT

; 6687 : {

	push	ebx
	push	ebp
	push	esi

; 6688 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCanMajorW
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCanMajorW
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCanMajorW
	xor	bl, bl
$LN5@lCanMajorW:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lCanMajorW
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lCanMajorW:

; 6689 : 	PlayerTypes eMajor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6690 : 
; 6691 : 	const bool bResult = pkPlayer->GetMinorCivAI()->CanMajorWithdrawProtection(eMajor);

	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?CanMajorWithdrawProtection@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::CanMajorWithdrawProtection

; 6692 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6693 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6694 : }

	ret	0
?lCanMajorWithdrawProtection@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lCanMajorWithdrawProtection
_TEXT	ENDS
PUBLIC	?lGetTurnLastPledgedProtectionByMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTurnLastPledgedProtectionByMajor
EXTRN	?GetTurnLastPledgedProtectionByMajor@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetTurnLastPledgedProtectionByMajor
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTurnLastPledgedProtectionByMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTurnLastPledgedProtectionByMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTurnLastPledgedProtectionByMajor, COMDAT

; 6698 : {

	push	ebx
	push	ebp
	push	esi

; 6699 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetTurnLa
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetTurnLa
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetTurnLa
	xor	bl, bl
$LN5@lGetTurnLa:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetTurnLa
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetTurnLa:

; 6700 : 	PlayerTypes eMajor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6701 : 
; 6702 : 	const int iValue = pkPlayer->GetMinorCivAI()->GetTurnLastPledgedProtectionByMajor(eMajor);

	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetTurnLastPledgedProtectionByMajor@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetTurnLastPledgedProtectionByMajor

; 6703 : 	lua_pushinteger(L, iValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6704 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6705 : }

	ret	0
?lGetTurnLastPledgedProtectionByMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTurnLastPledgedProtectionByMajor
_TEXT	ENDS
PUBLIC	?lGetTurnLastPledgeBrokenByMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTurnLastPledgeBrokenByMajor
EXTRN	?GetTurnLastPledgeBrokenByMajor@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetTurnLastPledgeBrokenByMajor
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTurnLastPledgeBrokenByMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTurnLastPledgeBrokenByMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTurnLastPledgeBrokenByMajor, COMDAT

; 6709 : {

	push	ebx
	push	ebp
	push	esi

; 6710 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetTurnLa@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetTurnLa@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetTurnLa@2
	xor	bl, bl
$LN5@lGetTurnLa@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetTurnLa@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetTurnLa@2:

; 6711 : 	PlayerTypes eMajor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6712 : 
; 6713 : 	const int iValue = pkPlayer->GetMinorCivAI()->GetTurnLastPledgeBrokenByMajor(eMajor);

	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetTurnLastPledgeBrokenByMajor@CvMinorCivAI@@QBEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetTurnLastPledgeBrokenByMajor

; 6714 : 	lua_pushinteger(L, iValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6715 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6716 : }

	ret	0
?lGetTurnLastPledgeBrokenByMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTurnLastPledgeBrokenByMajor
_TEXT	ENDS
PUBLIC	?lGetMinorCivBullyGoldAmount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivBullyGoldAmount
EXTRN	?GetBullyGoldAmount@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetBullyGoldAmount
; Function compile flags: /Ogtpy
;	COMDAT ?lGetMinorCivBullyGoldAmount@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMinorCivBullyGoldAmount@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorCivBullyGoldAmount, COMDAT

; 6720 : {

	push	ebx
	push	ebp
	push	esi

; 6721 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetMinorC@23
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetMinorC@23
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetMinorC@23
	xor	bl, bl
$LN5@lGetMinorC@23:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetMinorC@23
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetMinorC@23:

; 6722 : 	PlayerTypes eMajor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6723 : 
; 6724 : 	const int iValue = pkPlayer->GetMinorCivAI()->GetBullyGoldAmount(eMajor);

	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetBullyGoldAmount@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetBullyGoldAmount

; 6725 : 	lua_pushinteger(L, iValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6726 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6727 : }

	ret	0
?lGetMinorCivBullyGoldAmount@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorCivBullyGoldAmount
_TEXT	ENDS
PUBLIC	?lCanMajorBullyGold@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanMajorBullyGold
EXTRN	?CanMajorBullyGold@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::CanMajorBullyGold
; Function compile flags: /Ogtpy
;	COMDAT ?lCanMajorBullyGold@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanMajorBullyGold@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lCanMajorBullyGold, COMDAT

; 6731 : {

	push	ebx
	push	ebp
	push	esi

; 6732 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCanMajorB
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCanMajorB
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCanMajorB
	xor	bl, bl
$LN5@lCanMajorB:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lCanMajorB
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lCanMajorB:

; 6733 : 	PlayerTypes eMajor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6734 : 
; 6735 : 	const bool bResult = pkPlayer->GetMinorCivAI()->CanMajorBullyGold(eMajor);

	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?CanMajorBullyGold@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::CanMajorBullyGold

; 6736 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6737 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6738 : }

	ret	0
?lCanMajorBullyGold@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lCanMajorBullyGold
_TEXT	ENDS
PUBLIC	?lGetMajorBullyGoldDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMajorBullyGoldDetails
EXTRN	?GetMajorBullyGoldDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetMajorBullyGoldDetails
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetMajorBullyGoldDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetMajorBullyGoldDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetMajorBullyGoldDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetMajorBullyGoldDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetMajorBullyGoldDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_sResult$ = -40						; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetMajorBullyGoldDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMajorBullyGoldDetails, COMDAT

; 6742 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetMajorBullyGoldDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 28					; 0000001cH
	push	ebx
	push	ebp
	push	esi

; 6743 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+48]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetMajorB
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetMajorB
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetMajorB
	xor	bl, bl
$LN6@lGetMajorB:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lGetMajorB
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lGetMajorB:

; 6744 : 	PlayerTypes eMajor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6745 : 
; 6746 : 	const CvString sResult = pkPlayer->GetMinorCivAI()->GetMajorBullyGoldDetails(eMajor);

	push	eax
	lea	eax, DWORD PTR _sResult$[esp+60]
	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetMajorBullyGoldDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z ; CvMinorCivAI::GetMajorBullyGoldDetails

; 6747 : 	lua_pushstring(L, sResult);

	lea	ecx, DWORD PTR _sResult$[esp+56]
	mov	DWORD PTR __$EHRec$[esp+64], 0
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8

; 6748 : 	return 1;

	lea	ecx, DWORD PTR _sResult$[esp+56]
	mov	DWORD PTR __$EHRec$[esp+64], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 6749 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+56]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetMajorBullyGoldDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _sResult$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetMajorBullyGoldDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetMajorBullyGoldDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetMajorBullyGoldDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMajorBullyGoldDetails
PUBLIC	?lCanMajorBullyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanMajorBullyUnit
EXTRN	?CanMajorBullyUnit@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::CanMajorBullyUnit
; Function compile flags: /Ogtpy
;	COMDAT ?lCanMajorBullyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanMajorBullyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lCanMajorBullyUnit, COMDAT

; 6753 : {

	push	ebx
	push	ebp
	push	esi

; 6754 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCanMajorB@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCanMajorB@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCanMajorB@2
	xor	bl, bl
$LN5@lCanMajorB@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lCanMajorB@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lCanMajorB@2:

; 6755 : 	PlayerTypes eMajor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6756 : 
; 6757 : 	const bool bResult = pkPlayer->GetMinorCivAI()->CanMajorBullyUnit(eMajor);

	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?CanMajorBullyUnit@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::CanMajorBullyUnit

; 6758 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6759 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6760 : }

	ret	0
?lCanMajorBullyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lCanMajorBullyUnit
_TEXT	ENDS
PUBLIC	?lGetMajorBullyUnitDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMajorBullyUnitDetails
EXTRN	?GetMajorBullyUnitDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetMajorBullyUnitDetails
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetMajorBullyUnitDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetMajorBullyUnitDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetMajorBullyUnitDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetMajorBullyUnitDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetMajorBullyUnitDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_sResult$ = -40						; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetMajorBullyUnitDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMajorBullyUnitDetails, COMDAT

; 6764 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetMajorBullyUnitDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 28					; 0000001cH
	push	ebx
	push	ebp
	push	esi

; 6765 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+48]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetMajorB@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetMajorB@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetMajorB@2
	xor	bl, bl
$LN6@lGetMajorB@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lGetMajorB@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lGetMajorB@2:

; 6766 : 	PlayerTypes eMajor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6767 : 
; 6768 : 	const CvString sResult = pkPlayer->GetMinorCivAI()->GetMajorBullyUnitDetails(eMajor);

	push	eax
	lea	eax, DWORD PTR _sResult$[esp+60]
	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetMajorBullyUnitDetails@CvMinorCivAI@@QAE?AVCvString@@W4PlayerTypes@@@Z ; CvMinorCivAI::GetMajorBullyUnitDetails

; 6769 : 	lua_pushstring(L, sResult);

	lea	ecx, DWORD PTR _sResult$[esp+56]
	mov	DWORD PTR __$EHRec$[esp+64], 0
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8

; 6770 : 	return 1;

	lea	ecx, DWORD PTR _sResult$[esp+56]
	mov	DWORD PTR __$EHRec$[esp+64], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 6771 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+56]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetMajorBullyUnitDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _sResult$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetMajorBullyUnitDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetMajorBullyUnitDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetMajorBullyUnitDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMajorBullyUnitDetails
PUBLIC	?lCanMajorBuyout@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanMajorBuyout
EXTRN	?CanMajorBuyout@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::CanMajorBuyout
; Function compile flags: /Ogtpy
;	COMDAT ?lCanMajorBuyout@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanMajorBuyout@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lCanMajorBuyout, COMDAT

; 6775 : {

	push	ebx
	push	ebp
	push	esi

; 6776 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCanMajorB@3
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCanMajorB@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCanMajorB@3
	xor	bl, bl
$LN5@lCanMajorB@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lCanMajorB@3
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lCanMajorB@3:

; 6777 : 	PlayerTypes eMajor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6778 : 
; 6779 : 	const bool bResult = pkPlayer->GetMinorCivAI()->CanMajorBuyout(eMajor);

	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?CanMajorBuyout@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::CanMajorBuyout

; 6780 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6781 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6782 : }

	ret	0
?lCanMajorBuyout@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lCanMajorBuyout
_TEXT	ENDS
PUBLIC	?lGetBuyoutCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBuyoutCost
EXTRN	?GetBuyoutCost@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetBuyoutCost
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBuyoutCost@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBuyoutCost@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetBuyoutCost, COMDAT

; 6786 : {

	push	ebx
	push	ebp
	push	esi

; 6787 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetBuyout
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetBuyout
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetBuyout
	xor	bl, bl
$LN5@lGetBuyout:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetBuyout
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetBuyout:

; 6788 : 	PlayerTypes eMajor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6789 : 
; 6790 : 	const int iCost = pkPlayer->GetMinorCivAI()->GetBuyoutCost(eMajor);

	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetBuyoutCost@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetBuyoutCost

; 6791 : 	lua_pushinteger(L, iCost);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6792 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6793 : }

	ret	0
?lGetBuyoutCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetBuyoutCost
_TEXT	ENDS
PUBLIC	?lCanMajorGiftTileImprovement@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanMajorGiftTileImprovement
EXTRN	?CanMajorGiftTileImprovement@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::CanMajorGiftTileImprovement
; Function compile flags: /Ogtpy
;	COMDAT ?lCanMajorGiftTileImprovement@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanMajorGiftTileImprovement@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lCanMajorGiftTileImprovement, COMDAT

; 6797 : {

	push	ebx
	push	ebp
	push	esi

; 6798 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCanMajorG
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCanMajorG
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCanMajorG
	xor	bl, bl
$LN5@lCanMajorG:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lCanMajorG
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lCanMajorG:

; 6799 : 	PlayerTypes eMajor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6800 : 
; 6801 : 	const bool bResult = pkPlayer->GetMinorCivAI()->CanMajorGiftTileImprovement(eMajor);

	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?CanMajorGiftTileImprovement@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::CanMajorGiftTileImprovement

; 6802 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6803 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6804 : }

	ret	0
?lCanMajorGiftTileImprovement@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lCanMajorGiftTileImprovement
_TEXT	ENDS
PUBLIC	?lCanMajorGiftTileImprovementAtPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanMajorGiftTileImprovementAtPlot
EXTRN	?CanMajorGiftTileImprovementAtPlot@CvMinorCivAI@@QAE_NW4PlayerTypes@@HH@Z:PROC ; CvMinorCivAI::CanMajorGiftTileImprovementAtPlot
; Function compile flags: /Ogtpy
;	COMDAT ?lCanMajorGiftTileImprovementAtPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanMajorGiftTileImprovementAtPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lCanMajorGiftTileImprovementAtPlot, COMDAT

; 6808 : {

	push	ebx
	push	ebp
	push	esi

; 6809 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCanMajorG@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCanMajorG@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCanMajorG@2
	xor	bl, bl
$LN5@lCanMajorG@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lCanMajorG@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lCanMajorG@2:

; 6810 : 	PlayerTypes eMajor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 6811 : 	const int iX = lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger

; 6812 : 	const int iY = lua_tointeger(L, 4);

	push	4
	push	esi
	mov	ebp, eax
	call	_lua_tointeger
	add	esp, 24					; 00000018H

; 6813 : 
; 6814 : 	const bool bResult = pkPlayer->GetMinorCivAI()->CanMajorGiftTileImprovementAtPlot(eMajor, iX, iY);

	push	eax
	push	ebp
	push	ebx
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?CanMajorGiftTileImprovementAtPlot@CvMinorCivAI@@QAE_NW4PlayerTypes@@HH@Z ; CvMinorCivAI::CanMajorGiftTileImprovementAtPlot

; 6815 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6816 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6817 : }

	ret	0
?lCanMajorGiftTileImprovementAtPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lCanMajorGiftTileImprovementAtPlot
_TEXT	ENDS
PUBLIC	?lGetGiftTileImprovementCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGiftTileImprovementCost
EXTRN	?GetGiftTileImprovementCost@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::GetGiftTileImprovementCost
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGiftTileImprovementCost@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGiftTileImprovementCost@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetGiftTileImprovementCost, COMDAT

; 6821 : {

	push	ebx
	push	ebp
	push	esi

; 6822 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetGiftTi
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetGiftTi
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetGiftTi
	xor	bl, bl
$LN5@lGetGiftTi:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetGiftTi
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetGiftTi:

; 6823 : 	PlayerTypes eMajor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 6824 : 
; 6825 : 	const int iCost = pkPlayer->GetMinorCivAI()->GetGiftTileImprovementCost(eMajor);

	push	eax
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetGiftTileImprovementCost@CvMinorCivAI@@QAEHW4PlayerTypes@@@Z ; CvMinorCivAI::GetGiftTileImprovementCost

; 6826 : 	lua_pushinteger(L, iCost);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6827 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6828 : }

	ret	0
?lGetGiftTileImprovementCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetGiftTileImprovementCost
_TEXT	ENDS
PUBLIC	?lAddMinorCivQuestIfAble@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lAddMinorCivQuestIfAble
EXTRN	?AddQuestIfAble@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z:PROC ; CvMinorCivAI::AddQuestIfAble
; Function compile flags: /Ogtpy
;	COMDAT ?lAddMinorCivQuestIfAble@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lAddMinorCivQuestIfAble@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lAddMinorCivQuestIfAble, COMDAT

; 6832 : {

	push	ebx
	push	ebp
	push	esi

; 6833 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lAddMinorC
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lAddMinorC
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lAddMinorC
	xor	bl, bl
$LN5@lAddMinorC:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lAddMinorC
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lAddMinorC:

; 6834 : 	PlayerTypes eMajor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 6835 : 	MinorCivQuestTypes eQuest = (MinorCivQuestTypes) lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H

; 6836 : 
; 6837 : 	const bool bResult = pkPlayer->GetMinorCivAI()->AddQuestIfAble(eMajor, eQuest);

	push	eax
	push	ebx
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?AddQuestIfAble@CvMinorCivAI@@QAE_NW4PlayerTypes@@W4MinorCivQuestTypes@@@Z ; CvMinorCivAI::AddQuestIfAble

; 6838 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6839 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6840 : }

	ret	0
?lAddMinorCivQuestIfAble@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lAddMinorCivQuestIfAble
_TEXT	ENDS
PUBLIC	?lGetFriendshipFromUnitGift@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFriendshipFromUnitGift
EXTRN	?GetFriendshipFromUnitGift@CvMinorCivAI@@QAEHW4PlayerTypes@@_N1@Z:PROC ; CvMinorCivAI::GetFriendshipFromUnitGift
; Function compile flags: /Ogtpy
;	COMDAT ?lGetFriendshipFromUnitGift@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bDistanceGift$ = -8					; size = 1
_bGreatPerson$ = -4					; size = 1
_L$ = 8							; size = 4
?lGetFriendshipFromUnitGift@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetFriendshipFromUnitGift, COMDAT

; 6844 : {

	sub	esp, 8
	push	ebx
	push	ebp
	push	esi

; 6845 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+16]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetFriend@5
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetFriend@5
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetFriend@5
	xor	bl, bl
$LN5@lGetFriend@5:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetFriend@5
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetFriend@5:

; 6846 : 	PlayerTypes eMajor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 6847 : 	bool bGreatPerson = lua_toboolean(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_toboolean
	test	eax, eax
	setne	al

; 6848 : 	bool bDistanceGift = lua_toboolean(L, 4);

	push	4
	push	esi
	mov	BYTE PTR _bGreatPerson$[esp+48], al
	call	_lua_toboolean
	add	esp, 24					; 00000018H
	test	eax, eax

; 6849 : 
; 6850 : 	const int iResult = pkPlayer->GetMinorCivAI()->GetFriendshipFromUnitGift(eMajor, bGreatPerson, bDistanceGift);

	mov	eax, DWORD PTR _bGreatPerson$[esp+24]
	setne	cl
	mov	BYTE PTR _bDistanceGift$[esp+24], cl
	mov	edx, DWORD PTR _bDistanceGift$[esp+24]
	push	edx
	push	eax
	push	ebx
	mov	ecx, edi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetFriendshipFromUnitGift@CvMinorCivAI@@QAEHW4PlayerTypes@@_N1@Z ; CvMinorCivAI::GetFriendshipFromUnitGift

; 6851 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 6852 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6853 : }

	add	esp, 8
	ret	0
?lGetFriendshipFromUnitGift@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetFriendshipFromUnitGift
_TEXT	ENDS
PUBLIC	?lIsAlive@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lIsAlive
; Function compile flags: /Ogtpy
;	COMDAT ?lIsAlive@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsAlive@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC		; CvLuaPlayer::lIsAlive, COMDAT

; 6858 : 	return BasicLuaMethod(L, &CvPlayerAI::isAlive);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isAlive@CvPlayer@@QBE_NXZ	; CvPlayer::isAlive
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 6859 : }

	ret	0
?lIsAlive@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP		; CvLuaPlayer::lIsAlive
_TEXT	ENDS
PUBLIC	?lIsEverAlive@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lIsEverAlive
; Function compile flags: /Ogtpy
;	COMDAT ?lIsEverAlive@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsEverAlive@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsEverAlive, COMDAT

; 6864 : 	return BasicLuaMethod(L, &CvPlayerAI::isEverAlive);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isEverAlive@CvPlayer@@QBE_NXZ	; CvPlayer::isEverAlive
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 6865 : }

	ret	0
?lIsEverAlive@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsEverAlive
_TEXT	ENDS
PUBLIC	?lIsExtendedGame@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsExtendedGame
EXTRN	?isExtendedGame@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::isExtendedGame
; Function compile flags: /Ogtpy
;	COMDAT ?lIsExtendedGame@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsExtendedGame@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsExtendedGame, COMDAT

; 6870 : 	return BasicLuaMethod(L, &CvPlayerAI::isExtendedGame);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isExtendedGame@CvPlayer@@QBE_NXZ ; CvPlayer::isExtendedGame
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 6871 : }

	ret	0
?lIsExtendedGame@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsExtendedGame
_TEXT	ENDS
PUBLIC	?lIsFoundedFirstCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsFoundedFirstCity
EXTRN	?isFoundedFirstCity@CvPlayer@@QBE_NXZ:PROC	; CvPlayer::isFoundedFirstCity
; Function compile flags: /Ogtpy
;	COMDAT ?lIsFoundedFirstCity@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsFoundedFirstCity@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsFoundedFirstCity, COMDAT

; 6876 : 	return BasicLuaMethod(L, &CvPlayerAI::isFoundedFirstCity);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isFoundedFirstCity@CvPlayer@@QBE_NXZ ; CvPlayer::isFoundedFirstCity
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 6877 : }

	ret	0
?lIsFoundedFirstCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsFoundedFirstCity
_TEXT	ENDS
PUBLIC	?lGetEndTurnBlockingType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetEndTurnBlockingType
EXTRN	?GetEndTurnBlockingType@CvPlayer@@QBE?AW4EndTurnBlockingTypes@@XZ:PROC ; CvPlayer::GetEndTurnBlockingType
; Function compile flags: /Ogtpy
;	COMDAT ?lGetEndTurnBlockingType@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetEndTurnBlockingType@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetEndTurnBlockingType, COMDAT

; 6883 : 	return BasicLuaMethod(L, &CvPlayerAI::GetEndTurnBlockingType);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetEndTurnBlockingType@CvPlayer@@QBE?AW4EndTurnBlockingTypes@@XZ ; CvPlayer::GetEndTurnBlockingType
	push	eax
	call	??$BasicLuaMethod@W4EndTurnBlockingTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4EndTurnBlockingTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum EndTurnBlockingTypes>
	add	esp, 8

; 6884 : }

	ret	0
?lGetEndTurnBlockingType@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetEndTurnBlockingType
_TEXT	ENDS
PUBLIC	?lGetEndTurnBlockingNotificationIndex@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetEndTurnBlockingNotificationIndex
EXTRN	?GetEndTurnBlockingNotificationIndex@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetEndTurnBlockingNotificationIndex
; Function compile flags: /Ogtpy
;	COMDAT ?lGetEndTurnBlockingNotificationIndex@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetEndTurnBlockingNotificationIndex@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetEndTurnBlockingNotificationIndex, COMDAT

; 6889 : 	return BasicLuaMethod(L, &CvPlayerAI::GetEndTurnBlockingNotificationIndex);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetEndTurnBlockingNotificationIndex@CvPlayer@@QBEHXZ ; CvPlayer::GetEndTurnBlockingNotificationIndex
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 6890 : }

	ret	0
?lGetEndTurnBlockingNotificationIndex@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetEndTurnBlockingNotificationIndex
_TEXT	ENDS
PUBLIC	?lIsStrike@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lIsStrike
EXTRN	?isStrike@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::isStrike
; Function compile flags: /Ogtpy
;	COMDAT ?lIsStrike@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsStrike@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsStrike, COMDAT

; 6896 : 	return BasicLuaMethod(L, &CvPlayerAI::isStrike);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isStrike@CvPlayer@@QBE_NXZ	; CvPlayer::isStrike
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 6897 : }

	ret	0
?lIsStrike@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsStrike
_TEXT	ENDS
PUBLIC	?lGetID@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetID
; Function compile flags: /Ogtpy
;	COMDAT ?lGetID@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetID@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC		; CvLuaPlayer::lGetID, COMDAT

; 6902 : 	return BasicLuaMethod(L, &CvPlayerAI::GetID);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetID@CvPlayer@@QBE?AW4PlayerTypes@@XZ ; CvPlayer::GetID
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4PlayerTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PlayerTypes>
	add	esp, 8

; 6903 : }

	ret	0
?lGetID@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP		; CvLuaPlayer::lGetID
_TEXT	ENDS
PUBLIC	?lGetHandicapType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHandicapType
EXTRN	?getHandicapType@CvPlayer@@QBE?AW4HandicapTypes@@XZ:PROC ; CvPlayer::getHandicapType
; Function compile flags: /Ogtpy
;	COMDAT ?lGetHandicapType@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHandicapType@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetHandicapType, COMDAT

; 6908 : 	return BasicLuaMethod(L, &CvPlayerAI::getHandicapType);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getHandicapType@CvPlayer@@QBE?AW4HandicapTypes@@XZ ; CvPlayer::getHandicapType
	push	eax
	call	??$BasicLuaMethod@W4HandicapTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4HandicapTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum HandicapTypes>
	add	esp, 8

; 6909 : }

	ret	0
?lGetHandicapType@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetHandicapType
_TEXT	ENDS
PUBLIC	?lGetCivilizationType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCivilizationType
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCivilizationType@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCivilizationType@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCivilizationType, COMDAT

; 6914 : 	return BasicLuaMethod(L, &CvPlayerAI::getCivilizationType);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getCivilizationType@CvPlayer@@QBE?AW4CivilizationTypes@@XZ ; CvPlayer::getCivilizationType
	push	eax
	call	??$BasicLuaMethod@W4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4CivilizationTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum CivilizationTypes>
	add	esp, 8

; 6915 : }

	ret	0
?lGetCivilizationType@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCivilizationType
_TEXT	ENDS
PUBLIC	?lGetLeaderType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetLeaderType
EXTRN	?getLeaderType@CvPlayer@@QBE?AW4LeaderHeadTypes@@XZ:PROC ; CvPlayer::getLeaderType
; Function compile flags: /Ogtpy
;	COMDAT ?lGetLeaderType@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetLeaderType@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetLeaderType, COMDAT

; 6920 : 	return BasicLuaMethod(L, &CvPlayerAI::getLeaderType);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getLeaderType@CvPlayer@@QBE?AW4LeaderHeadTypes@@XZ ; CvPlayer::getLeaderType
	push	eax
	call	??$BasicLuaMethod@W4LeaderHeadTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4LeaderHeadTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum LeaderHeadTypes>
	add	esp, 8

; 6921 : }

	ret	0
?lGetLeaderType@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetLeaderType
_TEXT	ENDS
PUBLIC	?lGetPersonalityType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPersonalityType
EXTRN	?getPersonalityType@CvPlayer@@QBE?AW4LeaderHeadTypes@@XZ:PROC ; CvPlayer::getPersonalityType
; Function compile flags: /Ogtpy
;	COMDAT ?lGetPersonalityType@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetPersonalityType@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPersonalityType, COMDAT

; 6926 : 	return BasicLuaMethod(L, &CvPlayerAI::getPersonalityType);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getPersonalityType@CvPlayer@@QBE?AW4LeaderHeadTypes@@XZ ; CvPlayer::getPersonalityType
	push	eax
	call	??$BasicLuaMethod@W4LeaderHeadTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4LeaderHeadTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum LeaderHeadTypes>
	add	esp, 8

; 6927 : }

	ret	0
?lGetPersonalityType@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPersonalityType
_TEXT	ENDS
PUBLIC	?lSetPersonalityType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetPersonalityType
EXTRN	?setPersonalityType@CvPlayer@@QAEXW4LeaderHeadTypes@@@Z:PROC ; CvPlayer::setPersonalityType
; Function compile flags: /Ogtpy
;	COMDAT ?lSetPersonalityType@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetPersonalityType@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetPersonalityType, COMDAT

; 6932 : 	return BasicLuaMethod(L, &CvPlayerAI::setPersonalityType);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?setPersonalityType@CvPlayer@@QAEXW4LeaderHeadTypes@@@Z ; CvPlayer::setPersonalityType
	push	eax
	call	??$BasicLuaMethod@W4LeaderHeadTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4LeaderHeadTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum LeaderHeadTypes>
	add	esp, 8

; 6933 : }

	ret	0
?lSetPersonalityType@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetPersonalityType
_TEXT	ENDS
PUBLIC	?lGetCurrentEra@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCurrentEra
EXTRN	?GetCurrentEra@CvPlayer@@QBE?AW4EraTypes@@XZ:PROC ; CvPlayer::GetCurrentEra
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCurrentEra@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCurrentEra@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetCurrentEra, COMDAT

; 6938 : 	return BasicLuaMethod(L, &CvPlayerAI::GetCurrentEra);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetCurrentEra@CvPlayer@@QBE?AW4EraTypes@@XZ ; CvPlayer::GetCurrentEra
	push	eax
	call	??$BasicLuaMethod@W4EraTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4EraTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum EraTypes>
	add	esp, 8

; 6939 : }

	ret	0
?lGetCurrentEra@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetCurrentEra
_TEXT	ENDS
PUBLIC	?lGetTeam@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetTeam
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTeam@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTeam@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC		; CvLuaPlayer::lGetTeam, COMDAT

; 6944 : #ifdef AUI_WARNING_FIXES
; 6945 : 	return BasicLuaMethod<TeamTypes>(L, (&CvPlayerAI::getTeam));
; 6946 : #else
; 6947 : 	return BasicLuaMethod(L, &CvPlayerAI::getTeam);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ ; CvPlayer::getTeam
	push	eax
	call	??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4TeamTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum TeamTypes>
	add	esp, 8

; 6948 : #endif
; 6949 : }

	ret	0
?lGetTeam@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP		; CvLuaPlayer::lGetTeam
_TEXT	ENDS
PUBLIC	?lGetPlayerColor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPlayerColor
EXTRN	?playerColor@CvPreGame@@YA?AW4PlayerColorTypes@@W4PlayerTypes@@@Z:PROC ; CvPreGame::playerColor
; Function compile flags: /Ogtpy
;	COMDAT ?lGetPlayerColor@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetPlayerColor@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetPlayerColor, COMDAT

; 6953 : {

	push	ebx
	push	ebp
	push	esi

; 6954 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetPlayer@7
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetPlayer@7
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetPlayer@7
	xor	bl, bl
$LN5@lGetPlayer@7:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetPlayer@7
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetPlayer@7:

; 6955 : 	const PlayerColorTypes eColor = CvPreGame::playerColor(pkPlayer->GetID());

	mov	edi, DWORD PTR [edi+44]
	push	edi
	call	?playerColor@CvPreGame@@YA?AW4PlayerColorTypes@@W4PlayerTypes@@@Z ; CvPreGame::playerColor

; 6956 : 	lua_pushinteger(L, eColor);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebp

; 6957 : 	return 1;

	mov	eax, 1
	pop	ebx

; 6958 : }

	ret	0
?lGetPlayerColor@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetPlayerColor
_TEXT	ENDS
PUBLIC	?lGetPlayerColors@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPlayerColors
EXTRN	_lua_pushnumber:PROC
EXTRN	?GetColor@CvColorInfo@@QBEABUCvColorA@@XZ:PROC	; CvColorInfo::GetColor
EXTRN	?GetColorInfo@CvGlobals@@QAEPAVCvColorInfo@@W4ColorTypes@@@Z:PROC ; CvGlobals::GetColorInfo
EXTRN	?GetColorTypeSecondary@CvPlayerColorInfo@@QBEHXZ:PROC ; CvPlayerColorInfo::GetColorTypeSecondary
EXTRN	?GetColorTypePrimary@CvPlayerColorInfo@@QBEHXZ:PROC ; CvPlayerColorInfo::GetColorTypePrimary
EXTRN	?GetPlayerColorInfo@CvGlobals@@QAEPAVCvPlayerColorInfo@@W4PlayerColorTypes@@@Z:PROC ; CvGlobals::GetPlayerColorInfo
EXTRN	__fltused:DWORD
; Function compile flags: /Ogtpy
;	COMDAT ?lGetPlayerColors@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_stack_size$258343 = -4					; size = 4
_L$ = 8							; size = 4
?lGetPlayerColors@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetPlayerColors, COMDAT

; 6962 : {

	push	ebp
	mov	ebp, esp
	and	esp, -64				; ffffffc0H
	sub	esp, 52					; 00000034H
	push	ebx
	push	esi

; 6963 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[ebp]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	DWORD PTR _stack_size$258343[esp+76], eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN8@lGetPlayer@8
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN8@lGetPlayer@8
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN8@lGetPlayer@8
	xor	bl, bl
$LN8@lGetPlayer@8:
	mov	eax, DWORD PTR _stack_size$258343[esp+64]
	push	eax
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN15@lGetPlayer@8
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN15@lGetPlayer@8:

; 6964 : 	const PlayerColorTypes eColor = CvPreGame::playerColor(pkPlayer->GetID());

	mov	edi, DWORD PTR [edi+44]
	push	edi
	call	?playerColor@CvPreGame@@YA?AW4PlayerColorTypes@@W4PlayerTypes@@@Z ; CvPreGame::playerColor
	add	esp, 4
	mov	ebx, eax

; 6965 : 
; 6966 : 	CvPlayerColorInfo* pkPlayerColor = GC.GetPlayerColorInfo(eColor);

	push	ebx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetPlayerColorInfo@CvGlobals@@QAEPAVCvPlayerColorInfo@@W4PlayerColorTypes@@@Z ; CvGlobals::GetPlayerColorInfo
	mov	edi, eax

; 6967 : 
; 6968 : 	if(pkPlayerColor == NULL)

	test	edi, edi
	jne	SHORT $LN3@lGetPlayer@8

; 6969 : 	{
; 6970 : 		luaL_error(L, "Could not find player color at row %d", eColor);

	push	ebx
	push	OFFSET $SG232862
	push	esi
	call	_luaL_error
	add	esp, 12					; 0000000cH

; 6971 : 		return 0;

	xor	eax, eax

; 7013 : 
; 7014 : 	return 2;
; 7015 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN3@lGetPlayer@8:

; 6972 : 	}
; 6973 : 
; 6974 : 	const ColorTypes ePrimaryColor	 = (ColorTypes)pkPlayerColor->GetColorTypePrimary();

	mov	ecx, edi
	call	?GetColorTypePrimary@CvPlayerColorInfo@@QBEHXZ ; CvPlayerColorInfo::GetColorTypePrimary

; 6975 : 	const ColorTypes eSecondaryColor = (ColorTypes)pkPlayerColor->GetColorTypeSecondary();

	mov	ecx, edi
	mov	ebx, eax
	call	?GetColorTypeSecondary@CvPlayerColorInfo@@QBEHXZ ; CvPlayerColorInfo::GetColorTypeSecondary

; 6976 : 
; 6977 : 	CvColorInfo* pkPrimaryColor = GC.GetColorInfo(ePrimaryColor);

	push	ebx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	edi, eax
	call	?GetColorInfo@CvGlobals@@QAEPAVCvColorInfo@@W4ColorTypes@@@Z ; CvGlobals::GetColorInfo

; 6978 : 	if(pkPrimaryColor == NULL)

	test	eax, eax
	jne	SHORT $LN2@lGetPlayer@8

; 6979 : 	{
; 6980 : 		luaL_error(L, "Could not find primary color at row %d", ePrimaryColor);

	push	ebx
	push	OFFSET $SG232869
	push	esi
	call	_luaL_error
	add	esp, 12					; 0000000cH

; 6981 : 		return 0;

	xor	eax, eax

; 7013 : 
; 7014 : 	return 2;
; 7015 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN2@lGetPlayer@8:

; 6982 : 	}
; 6983 : 	const CvColorA& kPrimaryColor = pkPrimaryColor->GetColor();

	mov	ecx, eax
	call	?GetColor@CvColorInfo@@QBEABUCvColorA@@XZ ; CvColorInfo::GetColor

; 6984 : 
; 6985 : 	CvColorInfo* pkSecondaryColor = GC.GetColorInfo(eSecondaryColor);

	push	edi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	ebx, eax
	call	?GetColorInfo@CvGlobals@@QAEPAVCvColorInfo@@W4ColorTypes@@@Z ; CvGlobals::GetColorInfo

; 6986 : 	if(pkSecondaryColor == NULL)

	test	eax, eax
	jne	SHORT $LN1@lGetPlayer@8

; 6987 : 	{
; 6988 : 		luaL_error(L, "Could not find secondary color at row %d", eSecondaryColor);

	push	edi
	push	OFFSET $SG232873
	push	esi
	call	_luaL_error
	add	esp, 12					; 0000000cH

; 6989 : 		return 0;

	xor	eax, eax

; 7013 : 
; 7014 : 	return 2;
; 7015 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN1@lGetPlayer@8:

; 6990 : 	}
; 6991 : 	const CvColorA& kSecondaryColor = pkSecondaryColor->GetColor();

	mov	ecx, eax
	call	?GetColor@CvColorInfo@@QBEABUCvColorA@@XZ ; CvColorInfo::GetColor

; 6992 : 
; 6993 : 	//Now export colors
; 6994 : 	lua_createtable(L, 0, 4);

	push	4
	push	0
	push	esi
	mov	edi, eax
	call	_lua_createtable

; 6995 : 	lua_pushnumber(L, kPrimaryColor.r);

	fld	DWORD PTR [ebx]
	add	esp, 4
	fstp	QWORD PTR [esp]
	push	esi
	call	_lua_pushnumber

; 6996 : 	lua_setfield(L, -2, "x");

	push	OFFSET $SG232875
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 6997 : 	lua_pushnumber(L, kPrimaryColor.g);

	fld	DWORD PTR [ebx+4]
	add	esp, 16					; 00000010H
	fstp	QWORD PTR [esp]
	push	esi
	call	_lua_pushnumber

; 6998 : 	lua_setfield(L, -2, "y");

	push	OFFSET $SG232876
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 6999 : 	lua_pushnumber(L, kPrimaryColor.b);

	fld	DWORD PTR [ebx+8]
	add	esp, 16					; 00000010H
	fstp	QWORD PTR [esp]
	push	esi
	call	_lua_pushnumber

; 7000 : 	lua_setfield(L, -2, "z");

	push	OFFSET $SG232877
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 7001 : 	lua_pushnumber(L, kPrimaryColor.a);

	fld	DWORD PTR [ebx+12]
	add	esp, 16					; 00000010H
	fstp	QWORD PTR [esp]
	push	esi
	call	_lua_pushnumber

; 7002 : 	lua_setfield(L, -2, "w");

	push	OFFSET $SG232878
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 7003 : 
; 7004 : 	lua_createtable(L, 0, 4);

	push	4
	push	0
	push	esi
	call	_lua_createtable

; 7005 : 	lua_pushnumber(L, kSecondaryColor.r);

	fld	DWORD PTR [edi]
	add	esp, 28					; 0000001cH
	fstp	QWORD PTR [esp]
	push	esi
	call	_lua_pushnumber

; 7006 : 	lua_setfield(L, -2, "x");

	push	OFFSET $SG232879
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 7007 : 	lua_pushnumber(L, kSecondaryColor.g);

	fld	DWORD PTR [edi+4]
	add	esp, 16					; 00000010H
	fstp	QWORD PTR [esp]
	push	esi
	call	_lua_pushnumber

; 7008 : 	lua_setfield(L, -2, "y");

	push	OFFSET $SG232880
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 7009 : 	lua_pushnumber(L, kSecondaryColor.b);

	fld	DWORD PTR [edi+8]
	add	esp, 16					; 00000010H
	fstp	QWORD PTR [esp]
	push	esi
	call	_lua_pushnumber

; 7010 : 	lua_setfield(L, -2, "z");

	push	OFFSET $SG232881
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 7011 : 	lua_pushnumber(L, kSecondaryColor.a);

	fld	DWORD PTR [edi+12]
	add	esp, 16					; 00000010H
	fstp	QWORD PTR [esp]
	push	esi
	call	_lua_pushnumber

; 7012 : 	lua_setfield(L, -2, "w");

	push	OFFSET $SG232882
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 24					; 00000018H

; 7013 : 
; 7014 : 	return 2;
; 7015 : }

	pop	edi
	pop	esi
	mov	eax, 2
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?lGetPlayerColors@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetPlayerColors
_TEXT	ENDS
PUBLIC	?lGetSeaPlotYield@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetSeaPlotYield
EXTRN	?getSeaPlotYield@CvPlayer@@QBEHW4YieldTypes@@@Z:PROC ; CvPlayer::getSeaPlotYield
; Function compile flags: /Ogtpy
;	COMDAT ?lGetSeaPlotYield@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetSeaPlotYield@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetSeaPlotYield, COMDAT

; 7020 : 	return BasicLuaMethod(L, &CvPlayerAI::getSeaPlotYield);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getSeaPlotYield@CvPlayer@@QBEHW4YieldTypes@@@Z ; CvPlayer::getSeaPlotYield
	push	eax
	call	??$BasicLuaMethod@HW4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4YieldTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum YieldTypes>
	add	esp, 8

; 7021 : }

	ret	0
?lGetSeaPlotYield@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetSeaPlotYield
_TEXT	ENDS
PUBLIC	?lGetYieldRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetYieldRateModifier
EXTRN	?getYieldRateModifier@CvPlayer@@QBEHW4YieldTypes@@@Z:PROC ; CvPlayer::getYieldRateModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetYieldRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetYieldRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetYieldRateModifier, COMDAT

; 7026 : 	return BasicLuaMethod(L, &CvPlayerAI::getYieldRateModifier);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getYieldRateModifier@CvPlayer@@QBEHW4YieldTypes@@@Z ; CvPlayer::getYieldRateModifier
	push	eax
	call	??$BasicLuaMethod@HW4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4YieldTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum YieldTypes>
	add	esp, 8

; 7027 : }

	ret	0
?lGetYieldRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetYieldRateModifier
_TEXT	ENDS
PUBLIC	?lGetCapitalYieldRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCapitalYieldRateModifier
EXTRN	?getCapitalYieldRateModifier@CvPlayer@@QBEHW4YieldTypes@@@Z:PROC ; CvPlayer::getCapitalYieldRateModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCapitalYieldRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCapitalYieldRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCapitalYieldRateModifier, COMDAT

; 7032 : 	return BasicLuaMethod(L, &CvPlayerAI::getCapitalYieldRateModifier);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getCapitalYieldRateModifier@CvPlayer@@QBEHW4YieldTypes@@@Z ; CvPlayer::getCapitalYieldRateModifier
	push	eax
	call	??$BasicLuaMethod@HW4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4YieldTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum YieldTypes>
	add	esp, 8

; 7033 : }

	ret	0
?lGetCapitalYieldRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCapitalYieldRateModifier
_TEXT	ENDS
PUBLIC	?lGetExtraYieldThreshold@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetExtraYieldThreshold
EXTRN	?getExtraYieldThreshold@CvPlayer@@QBEHW4YieldTypes@@@Z:PROC ; CvPlayer::getExtraYieldThreshold
; Function compile flags: /Ogtpy
;	COMDAT ?lGetExtraYieldThreshold@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetExtraYieldThreshold@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetExtraYieldThreshold, COMDAT

; 7038 : 	return BasicLuaMethod(L, &CvPlayerAI::getExtraYieldThreshold);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getExtraYieldThreshold@CvPlayer@@QBEHW4YieldTypes@@@Z ; CvPlayer::getExtraYieldThreshold
	push	eax
	call	??$BasicLuaMethod@HW4YieldTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4YieldTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum YieldTypes>
	add	esp, 8

; 7039 : }

	ret	0
?lGetExtraYieldThreshold@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetExtraYieldThreshold
_TEXT	ENDS
PUBLIC	?lGetScience@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetScience
EXTRN	?GetScience@CvPlayer@@QBEHXZ:PROC		; CvPlayer::GetScience
; Function compile flags: /Ogtpy
;	COMDAT ?lGetScience@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScience@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetScience, COMDAT

; 7044 : 	return BasicLuaMethod(L, &CvPlayerAI::GetScience);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetScience@CvPlayer@@QBEHXZ	; CvPlayer::GetScience
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7045 : }

	ret	0
?lGetScience@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetScience
_TEXT	ENDS
PUBLIC	?lGetScienceTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScienceTimes100
EXTRN	?GetScienceTimes100@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetScienceTimes100
; Function compile flags: /Ogtpy
;	COMDAT ?lGetScienceTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScienceTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetScienceTimes100, COMDAT

; 7050 : 	return BasicLuaMethod(L, &CvPlayerAI::GetScienceTimes100);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetScienceTimes100@CvPlayer@@QBEHXZ ; CvPlayer::GetScienceTimes100
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7051 : }

	ret	0
?lGetScienceTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetScienceTimes100
_TEXT	ENDS
PUBLIC	?lGetScienceFromCitiesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScienceFromCitiesTimes100
EXTRN	?GetScienceFromCitiesTimes100@CvPlayer@@QBEH_N@Z:PROC ; CvPlayer::GetScienceFromCitiesTimes100
; Function compile flags: /Ogtpy
;	COMDAT ?lGetScienceFromCitiesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScienceFromCitiesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetScienceFromCitiesTimes100, COMDAT

; 7055 : 	return BasicLuaMethod(L, &CvPlayerAI::GetScienceFromCitiesTimes100);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetScienceFromCitiesTimes100@CvPlayer@@QBEH_N@Z ; CvPlayer::GetScienceFromCitiesTimes100
	push	eax
	call	??$BasicLuaMethod@H_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEH_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,bool>
	add	esp, 8

; 7056 : }

	ret	0
?lGetScienceFromCitiesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetScienceFromCitiesTimes100
_TEXT	ENDS
PUBLIC	?lGetScienceFromOtherPlayersTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScienceFromOtherPlayersTimes100
EXTRN	?GetScienceFromOtherPlayersTimes100@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetScienceFromOtherPlayersTimes100
; Function compile flags: /Ogtpy
;	COMDAT ?lGetScienceFromOtherPlayersTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScienceFromOtherPlayersTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetScienceFromOtherPlayersTimes100, COMDAT

; 7060 : 	return BasicLuaMethod(L, &CvPlayerAI::GetScienceFromOtherPlayersTimes100);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetScienceFromOtherPlayersTimes100@CvPlayer@@QBEHXZ ; CvPlayer::GetScienceFromOtherPlayersTimes100
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7061 : }

	ret	0
?lGetScienceFromOtherPlayersTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetScienceFromOtherPlayersTimes100
_TEXT	ENDS
PUBLIC	?lGetScienceFromHappinessTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScienceFromHappinessTimes100
EXTRN	?GetScienceFromHappinessTimes100@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetScienceFromHappinessTimes100
; Function compile flags: /Ogtpy
;	COMDAT ?lGetScienceFromHappinessTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScienceFromHappinessTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetScienceFromHappinessTimes100, COMDAT

; 7065 : 	return BasicLuaMethod(L, &CvPlayerAI::GetScienceFromHappinessTimes100);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetScienceFromHappinessTimes100@CvPlayer@@QBEHXZ ; CvPlayer::GetScienceFromHappinessTimes100
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7066 : }

	ret	0
?lGetScienceFromHappinessTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetScienceFromHappinessTimes100
_TEXT	ENDS
PUBLIC	?lGetScienceFromGoldTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScienceFromGoldTimes100
EXTRN	?GetScienceFromGoldTimes100@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetScienceFromGoldTimes100
; Function compile flags: /Ogtpy
;	COMDAT ?lGetScienceFromGoldTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScienceFromGoldTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetScienceFromGoldTimes100, COMDAT

; 7071 : 	return BasicLuaMethod(L, &CvPlayerAI::GetScienceFromGoldTimes100);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetScienceFromGoldTimes100@CvPlayer@@QBEHXZ ; CvPlayer::GetScienceFromGoldTimes100
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7072 : }

	ret	0
?lGetScienceFromGoldTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetScienceFromGoldTimes100
_TEXT	ENDS
PUBLIC	?lGetMinorFriendshipGainBullyGoldSuccess@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorFriendshipGainBullyGoldSuccess
EXTRN	?GetMinorFriendshipGainBullyGoldSuccess@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetMinorFriendshipGainBullyGoldSuccess
; Function compile flags: /Ogtpy
;	COMDAT ?lGetMinorFriendshipGainBullyGoldSuccess@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMinorFriendshipGainBullyGoldSuccess@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorFriendshipGainBullyGoldSuccess, COMDAT

; 7078 : 	return BasicLuaMethod(L, &CvPlayerAI::GetMinorFriendshipGainBullyGoldSuccess);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetMinorFriendshipGainBullyGoldSuccess@CvPlayer@@QBEHXZ ; CvPlayer::GetMinorFriendshipGainBullyGoldSuccess
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7079 : }

	ret	0
?lGetMinorFriendshipGainBullyGoldSuccess@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorFriendshipGainBullyGoldSuccess
_TEXT	ENDS
PUBLIC	?lGetScienceFromResearchAgreementsTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScienceFromResearchAgreementsTimes100
EXTRN	?GetScienceFromResearchAgreementsTimes100@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetScienceFromResearchAgreementsTimes100
; Function compile flags: /Ogtpy
;	COMDAT ?lGetScienceFromResearchAgreementsTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScienceFromResearchAgreementsTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetScienceFromResearchAgreementsTimes100, COMDAT

; 7084 : 	return BasicLuaMethod(L, &CvPlayerAI::GetScienceFromResearchAgreementsTimes100);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetScienceFromResearchAgreementsTimes100@CvPlayer@@QBEHXZ ; CvPlayer::GetScienceFromResearchAgreementsTimes100
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7085 : }

	ret	0
?lGetScienceFromResearchAgreementsTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetScienceFromResearchAgreementsTimes100
_TEXT	ENDS
PUBLIC	?lGetScienceFromBudgetDeficitTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScienceFromBudgetDeficitTimes100
EXTRN	?GetScienceFromBudgetDeficitTimes100@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetScienceFromBudgetDeficitTimes100
; Function compile flags: /Ogtpy
;	COMDAT ?lGetScienceFromBudgetDeficitTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScienceFromBudgetDeficitTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetScienceFromBudgetDeficitTimes100, COMDAT

; 7089 : 	return BasicLuaMethod(L, &CvPlayerAI::GetScienceFromBudgetDeficitTimes100);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetScienceFromBudgetDeficitTimes100@CvPlayer@@QBEHXZ ; CvPlayer::GetScienceFromBudgetDeficitTimes100
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7090 : }

	ret	0
?lGetScienceFromBudgetDeficitTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetScienceFromBudgetDeficitTimes100
_TEXT	ENDS
PUBLIC	?lGetProximityToPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetProximityToPlayer
EXTRN	?GetProximityToPlayer@CvPlayer@@QBE?AW4PlayerProximityTypes@@W4PlayerTypes@@@Z:PROC ; CvPlayer::GetProximityToPlayer
; Function compile flags: /Ogtpy
;	COMDAT ?lGetProximityToPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProximityToPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetProximityToPlayer, COMDAT

; 7095 : 	return BasicLuaMethod(L, &CvPlayerAI::GetProximityToPlayer);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetProximityToPlayer@CvPlayer@@QBE?AW4PlayerProximityTypes@@W4PlayerTypes@@@Z ; CvPlayer::GetProximityToPlayer
	push	eax
	call	??$BasicLuaMethod@W4PlayerProximityTypes@@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4PlayerProximityTypes@@W4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PlayerProximityTypes,enum PlayerTypes>
	add	esp, 8

; 7096 : }

	ret	0
?lGetProximityToPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetProximityToPlayer
_TEXT	ENDS
PUBLIC	?lDoUpdateProximityToPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lDoUpdateProximityToPlayer
EXTRN	?DoUpdateProximityToPlayer@CvPlayer@@QAEXW4PlayerTypes@@@Z:PROC ; CvPlayer::DoUpdateProximityToPlayer
; Function compile flags: /Ogtpy
;	COMDAT ?lDoUpdateProximityToPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lDoUpdateProximityToPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lDoUpdateProximityToPlayer, COMDAT

; 7101 : 	return BasicLuaMethod(L, &CvPlayerAI::DoUpdateProximityToPlayer);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?DoUpdateProximityToPlayer@CvPlayer@@QAEXW4PlayerTypes@@@Z ; CvPlayer::DoUpdateProximityToPlayer
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PlayerTypes>
	add	esp, 8

; 7102 : }

	ret	0
?lDoUpdateProximityToPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lDoUpdateProximityToPlayer
_TEXT	ENDS
PUBLIC	?lGetIncomingUnitType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetIncomingUnitType
EXTRN	?GetIncomingUnitType@CvPlayer@@QBE?AW4UnitTypes@@W4PlayerTypes@@@Z:PROC ; CvPlayer::GetIncomingUnitType
; Function compile flags: /Ogtpy
;	COMDAT ?lGetIncomingUnitType@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetIncomingUnitType@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetIncomingUnitType, COMDAT

; 7107 : 	return BasicLuaMethod(L, &CvPlayer::GetIncomingUnitType);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetIncomingUnitType@CvPlayer@@QBE?AW4UnitTypes@@W4PlayerTypes@@@Z ; CvPlayer::GetIncomingUnitType
	push	eax
	call	??$BasicLuaMethod@W4UnitTypes@@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE?AW4UnitTypes@@W4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum UnitTypes,enum PlayerTypes>
	add	esp, 8

; 7108 : }

	ret	0
?lGetIncomingUnitType@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetIncomingUnitType
_TEXT	ENDS
PUBLIC	?lGetIncomingUnitCountdown@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetIncomingUnitCountdown
EXTRN	?GetIncomingUnitCountdown@CvPlayer@@QBEHW4PlayerTypes@@@Z:PROC ; CvPlayer::GetIncomingUnitCountdown
; Function compile flags: /Ogtpy
;	COMDAT ?lGetIncomingUnitCountdown@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetIncomingUnitCountdown@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetIncomingUnitCountdown, COMDAT

; 7113 : 	return BasicLuaMethod(L, &CvPlayer::GetIncomingUnitCountdown);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetIncomingUnitCountdown@CvPlayer@@QBEHW4PlayerTypes@@@Z ; CvPlayer::GetIncomingUnitCountdown
	push	eax
	call	??$BasicLuaMethod@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum PlayerTypes>
	add	esp, 8

; 7114 : }

	ret	0
?lGetIncomingUnitCountdown@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetIncomingUnitCountdown
_TEXT	ENDS
PUBLIC	?lIsOption@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lIsOption
EXTRN	?isOption@CvPlayer@@QBE_NW4PlayerOptionTypes@@@Z:PROC ; CvPlayer::isOption
; Function compile flags: /Ogtpy
;	COMDAT ?lIsOption@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsOption@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsOption, COMDAT

; 7119 : 	return BasicLuaMethod(L, &CvPlayerAI::isOption);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isOption@CvPlayer@@QBE_NW4PlayerOptionTypes@@@Z ; CvPlayer::isOption
	push	eax
	call	??$BasicLuaMethod@_NW4PlayerOptionTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4PlayerOptionTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum PlayerOptionTypes>
	add	esp, 8

; 7120 : }

	ret	0
?lIsOption@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsOption
_TEXT	ENDS
PUBLIC	?lSetOption@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lSetOption
EXTRN	?setOption@CvPlayer@@QAEXW4PlayerOptionTypes@@_N@Z:PROC ; CvPlayer::setOption
; Function compile flags: /Ogtpy
;	COMDAT ?lSetOption@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetOption@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lSetOption, COMDAT

; 7125 : 	return BasicLuaMethod(L, &CvPlayerAI::setOption);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?setOption@CvPlayer@@QAEXW4PlayerOptionTypes@@_N@Z ; CvPlayer::setOption
	push	eax
	call	??$BasicLuaMethod@W4PlayerOptionTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4PlayerOptionTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum PlayerOptionTypes,bool>
	add	esp, 8

; 7126 : }

	ret	0
?lSetOption@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lSetOption
_TEXT	ENDS
PUBLIC	?lIsPlayable@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lIsPlayable
EXTRN	?isPlayable@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::isPlayable
; Function compile flags: /Ogtpy
;	COMDAT ?lIsPlayable@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsPlayable@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsPlayable, COMDAT

; 7131 : 	return BasicLuaMethod(L, &CvPlayerAI::isPlayable);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isPlayable@CvPlayer@@QBE_NXZ	; CvPlayer::isPlayable
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 7132 : }

	ret	0
?lIsPlayable@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsPlayable
_TEXT	ENDS
PUBLIC	?lSetPlayable@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lSetPlayable
EXTRN	?setPlayable@CvPlayer@@QAEX_N@Z:PROC		; CvPlayer::setPlayable
; Function compile flags: /Ogtpy
;	COMDAT ?lSetPlayable@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetPlayable@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lSetPlayable, COMDAT

; 7137 : 	return BasicLuaMethod(L, &CvPlayerAI::setPlayable);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?setPlayable@CvPlayer@@QAEX_N@Z	; CvPlayer::setPlayable
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEX_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 7138 : }

	ret	0
?lSetPlayable@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lSetPlayable
_TEXT	ENDS
PUBLIC	?lGetNumResourceUsed@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumResourceUsed
EXTRN	?getNumResourceUsed@CvPlayer@@QBEHW4ResourceTypes@@@Z:PROC ; CvPlayer::getNumResourceUsed
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumResourceUsed@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumResourceUsed@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumResourceUsed, COMDAT

; 7143 : 	return BasicLuaMethod(L, &CvPlayerAI::getNumResourceUsed);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getNumResourceUsed@CvPlayer@@QBEHW4ResourceTypes@@@Z ; CvPlayer::getNumResourceUsed
	push	eax
	call	??$BasicLuaMethod@HW4ResourceTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4ResourceTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum ResourceTypes>
	add	esp, 8

; 7144 : }

	ret	0
?lGetNumResourceUsed@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumResourceUsed
_TEXT	ENDS
PUBLIC	?lGetNumResourceTotal@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumResourceTotal
EXTRN	?getNumResourceTotal@CvPlayer@@QBEHW4ResourceTypes@@_N@Z:PROC ; CvPlayer::getNumResourceTotal
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumResourceTotal@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumResourceTotal@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumResourceTotal, COMDAT

; 7149 : 	return BasicLuaMethod(L, &CvPlayerAI::getNumResourceTotal);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getNumResourceTotal@CvPlayer@@QBEHW4ResourceTypes@@_N@Z ; CvPlayer::getNumResourceTotal
	push	eax
	call	??$BasicLuaMethod@HW4ResourceTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4ResourceTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum ResourceTypes,bool>
	add	esp, 8

; 7150 : }

	ret	0
?lGetNumResourceTotal@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumResourceTotal
_TEXT	ENDS
PUBLIC	?lChangeNumResourceTotal@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNumResourceTotal
EXTRN	?changeNumResourceTotal@CvPlayer@@QAEXW4ResourceTypes@@H_N@Z:PROC ; CvPlayer::changeNumResourceTotal
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeNumResourceTotal@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeNumResourceTotal@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeNumResourceTotal, COMDAT

; 7155 : 	return BasicLuaMethod(L, &CvPlayerAI::changeNumResourceTotal);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?changeNumResourceTotal@CvPlayer@@QAEXW4ResourceTypes@@H_N@Z ; CvPlayer::changeNumResourceTotal
	push	eax
	call	??$BasicLuaMethod@W4ResourceTypes@@H_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4ResourceTypes@@H_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum ResourceTypes,int,bool>
	add	esp, 8

; 7156 : }

	ret	0
?lChangeNumResourceTotal@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeNumResourceTotal
_TEXT	ENDS
PUBLIC	?lGetNumResourceAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumResourceAvailable
EXTRN	?getNumResourceAvailable@CvPlayer@@QBEHW4ResourceTypes@@_N@Z:PROC ; CvPlayer::getNumResourceAvailable
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumResourceAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumResourceAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumResourceAvailable, COMDAT

; 7161 : 	return BasicLuaMethod(L, &CvPlayerAI::getNumResourceAvailable);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getNumResourceAvailable@CvPlayer@@QBEHW4ResourceTypes@@_N@Z ; CvPlayer::getNumResourceAvailable
	push	eax
	call	??$BasicLuaMethod@HW4ResourceTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4ResourceTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum ResourceTypes,bool>
	add	esp, 8

; 7162 : }

	ret	0
?lGetNumResourceAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumResourceAvailable
_TEXT	ENDS
PUBLIC	?lGetResourceExport@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetResourceExport
EXTRN	?getResourceExport@CvPlayer@@QBEHW4ResourceTypes@@@Z:PROC ; CvPlayer::getResourceExport
; Function compile flags: /Ogtpy
;	COMDAT ?lGetResourceExport@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetResourceExport@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetResourceExport, COMDAT

; 7168 : 	return BasicLuaMethod(L, &CvPlayerAI::getResourceExport);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getResourceExport@CvPlayer@@QBEHW4ResourceTypes@@@Z ; CvPlayer::getResourceExport
	push	eax
	call	??$BasicLuaMethod@HW4ResourceTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4ResourceTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum ResourceTypes>
	add	esp, 8

; 7169 : }

	ret	0
?lGetResourceExport@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetResourceExport
_TEXT	ENDS
PUBLIC	?lGetResourceImport@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetResourceImport
EXTRN	?getResourceImport@CvPlayer@@QBEHW4ResourceTypes@@@Z:PROC ; CvPlayer::getResourceImport
; Function compile flags: /Ogtpy
;	COMDAT ?lGetResourceImport@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetResourceImport@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetResourceImport, COMDAT

; 7174 : 	return BasicLuaMethod(L, &CvPlayerAI::getResourceImport);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getResourceImport@CvPlayer@@QBEHW4ResourceTypes@@@Z ; CvPlayer::getResourceImport
	push	eax
	call	??$BasicLuaMethod@HW4ResourceTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4ResourceTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum ResourceTypes>
	add	esp, 8

; 7175 : }

	ret	0
?lGetResourceImport@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetResourceImport
_TEXT	ENDS
PUBLIC	?lGetResourceFromMinors@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetResourceFromMinors
EXTRN	?getResourceFromMinors@CvPlayer@@QBEHW4ResourceTypes@@@Z:PROC ; CvPlayer::getResourceFromMinors
; Function compile flags: /Ogtpy
;	COMDAT ?lGetResourceFromMinors@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetResourceFromMinors@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetResourceFromMinors, COMDAT

; 7180 : 	return BasicLuaMethod(L, &CvPlayerAI::getResourceFromMinors);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getResourceFromMinors@CvPlayer@@QBEHW4ResourceTypes@@@Z ; CvPlayer::getResourceFromMinors
	push	eax
	call	??$BasicLuaMethod@HW4ResourceTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4ResourceTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum ResourceTypes>
	add	esp, 8

; 7181 : }

	ret	0
?lGetResourceFromMinors@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetResourceFromMinors
_TEXT	ENDS
PUBLIC	?lGetImprovementCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetImprovementCount
EXTRN	?getImprovementCount@CvPlayer@@QBEHW4ImprovementTypes@@@Z:PROC ; CvPlayer::getImprovementCount
; Function compile flags: /Ogtpy
;	COMDAT ?lGetImprovementCount@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetImprovementCount@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetImprovementCount, COMDAT

; 7187 : 	return BasicLuaMethod(L, &CvPlayerAI::getImprovementCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getImprovementCount@CvPlayer@@QBEHW4ImprovementTypes@@@Z ; CvPlayer::getImprovementCount
	push	eax
	call	??$BasicLuaMethod@HW4ImprovementTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4ImprovementTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum ImprovementTypes>
	add	esp, 8

; 7188 : }

	ret	0
?lGetImprovementCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetImprovementCount
_TEXT	ENDS
PUBLIC	?lIsBuildingFree@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsBuildingFree
EXTRN	?isBuildingFree@CvPlayer@@QBE_NW4BuildingTypes@@@Z:PROC ; CvPlayer::isBuildingFree
; Function compile flags: /Ogtpy
;	COMDAT ?lIsBuildingFree@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsBuildingFree@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsBuildingFree, COMDAT

; 7194 : 	return BasicLuaMethod(L, &CvPlayerAI::isBuildingFree);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isBuildingFree@CvPlayer@@QBE_NW4BuildingTypes@@@Z ; CvPlayer::isBuildingFree
	push	eax
	call	??$BasicLuaMethod@_NW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4BuildingTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum BuildingTypes>
	add	esp, 8

; 7195 : }

	ret	0
?lIsBuildingFree@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsBuildingFree
_TEXT	ENDS
PUBLIC	?lGetUnitClassCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnitClassCount
EXTRN	?getUnitClassCount@CvPlayer@@QBEHW4UnitClassTypes@@@Z:PROC ; CvPlayer::getUnitClassCount
; Function compile flags: /Ogtpy
;	COMDAT ?lGetUnitClassCount@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnitClassCount@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetUnitClassCount, COMDAT

; 7200 : 	return BasicLuaMethod(L, &CvPlayerAI::getUnitClassCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getUnitClassCount@CvPlayer@@QBEHW4UnitClassTypes@@@Z ; CvPlayer::getUnitClassCount
	push	eax
	call	??$BasicLuaMethod@HW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4UnitClassTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum UnitClassTypes>
	add	esp, 8

; 7201 : }

	ret	0
?lGetUnitClassCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetUnitClassCount
_TEXT	ENDS
PUBLIC	?lIsUnitClassMaxedOut@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsUnitClassMaxedOut
EXTRN	?isUnitClassMaxedOut@CvPlayer@@QBE_NW4UnitClassTypes@@H@Z:PROC ; CvPlayer::isUnitClassMaxedOut
; Function compile flags: /Ogtpy
;	COMDAT ?lIsUnitClassMaxedOut@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsUnitClassMaxedOut@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsUnitClassMaxedOut, COMDAT

; 7206 : 	return BasicLuaMethod(L, &CvPlayerAI::isUnitClassMaxedOut);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isUnitClassMaxedOut@CvPlayer@@QBE_NW4UnitClassTypes@@H@Z ; CvPlayer::isUnitClassMaxedOut
	push	eax
	call	??$BasicLuaMethod@_NW4UnitClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4UnitClassTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum UnitClassTypes,int>
	add	esp, 8

; 7207 : }

	ret	0
?lIsUnitClassMaxedOut@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsUnitClassMaxedOut
_TEXT	ENDS
PUBLIC	?lGetUnitClassMaking@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnitClassMaking
EXTRN	?getUnitClassMaking@CvPlayer@@QBEHW4UnitClassTypes@@@Z:PROC ; CvPlayer::getUnitClassMaking
; Function compile flags: /Ogtpy
;	COMDAT ?lGetUnitClassMaking@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnitClassMaking@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetUnitClassMaking, COMDAT

; 7212 : 	return BasicLuaMethod(L, &CvPlayerAI::getUnitClassMaking);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getUnitClassMaking@CvPlayer@@QBEHW4UnitClassTypes@@@Z ; CvPlayer::getUnitClassMaking
	push	eax
	call	??$BasicLuaMethod@HW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4UnitClassTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum UnitClassTypes>
	add	esp, 8

; 7213 : }

	ret	0
?lGetUnitClassMaking@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetUnitClassMaking
_TEXT	ENDS
PUBLIC	?lGetUnitClassCountPlusMaking@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnitClassCountPlusMaking
EXTRN	?getUnitClassCountPlusMaking@CvPlayer@@QBEHW4UnitClassTypes@@@Z:PROC ; CvPlayer::getUnitClassCountPlusMaking
; Function compile flags: /Ogtpy
;	COMDAT ?lGetUnitClassCountPlusMaking@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnitClassCountPlusMaking@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetUnitClassCountPlusMaking, COMDAT

; 7218 : 	return BasicLuaMethod(L, &CvPlayerAI::getUnitClassCountPlusMaking);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getUnitClassCountPlusMaking@CvPlayer@@QBEHW4UnitClassTypes@@@Z ; CvPlayer::getUnitClassCountPlusMaking
	push	eax
	call	??$BasicLuaMethod@HW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4UnitClassTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum UnitClassTypes>
	add	esp, 8

; 7219 : }

	ret	0
?lGetUnitClassCountPlusMaking@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetUnitClassCountPlusMaking
_TEXT	ENDS
PUBLIC	?lGetBuildingClassCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBuildingClassCount
EXTRN	?getBuildingClassCount@CvPlayer@@QBEHW4BuildingClassTypes@@@Z:PROC ; CvPlayer::getBuildingClassCount
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBuildingClassCount@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBuildingClassCount@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetBuildingClassCount, COMDAT

; 7224 : 	return BasicLuaMethod(L, &CvPlayerAI::getBuildingClassCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getBuildingClassCount@CvPlayer@@QBEHW4BuildingClassTypes@@@Z ; CvPlayer::getBuildingClassCount
	push	eax
	call	??$BasicLuaMethod@HW4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4BuildingClassTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum BuildingClassTypes>
	add	esp, 8

; 7225 : }

	ret	0
?lGetBuildingClassCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetBuildingClassCount
_TEXT	ENDS
PUBLIC	?lIsBuildingClassMaxedOut@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsBuildingClassMaxedOut
EXTRN	?isBuildingClassMaxedOut@CvPlayer@@QBE_NW4BuildingClassTypes@@H@Z:PROC ; CvPlayer::isBuildingClassMaxedOut
; Function compile flags: /Ogtpy
;	COMDAT ?lIsBuildingClassMaxedOut@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsBuildingClassMaxedOut@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsBuildingClassMaxedOut, COMDAT

; 7230 : 	return BasicLuaMethod(L, &CvPlayerAI::isBuildingClassMaxedOut);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isBuildingClassMaxedOut@CvPlayer@@QBE_NW4BuildingClassTypes@@H@Z ; CvPlayer::isBuildingClassMaxedOut
	push	eax
	call	??$BasicLuaMethod@_NW4BuildingClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4BuildingClassTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum BuildingClassTypes,int>
	add	esp, 8

; 7231 : }

	ret	0
?lIsBuildingClassMaxedOut@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsBuildingClassMaxedOut
_TEXT	ENDS
PUBLIC	?lGetBuildingClassMaking@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBuildingClassMaking
EXTRN	?getBuildingClassMaking@CvPlayer@@QBEHW4BuildingClassTypes@@@Z:PROC ; CvPlayer::getBuildingClassMaking
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBuildingClassMaking@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBuildingClassMaking@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetBuildingClassMaking, COMDAT

; 7236 : 	return BasicLuaMethod(L, &CvPlayerAI::getBuildingClassMaking);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getBuildingClassMaking@CvPlayer@@QBEHW4BuildingClassTypes@@@Z ; CvPlayer::getBuildingClassMaking
	push	eax
	call	??$BasicLuaMethod@HW4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4BuildingClassTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum BuildingClassTypes>
	add	esp, 8

; 7237 : }

	ret	0
?lGetBuildingClassMaking@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetBuildingClassMaking
_TEXT	ENDS
PUBLIC	?lGetBuildingClassCountPlusMaking@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBuildingClassCountPlusMaking
EXTRN	?getBuildingClassCountPlusMaking@CvPlayer@@QBEHW4BuildingClassTypes@@@Z:PROC ; CvPlayer::getBuildingClassCountPlusMaking
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBuildingClassCountPlusMaking@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBuildingClassCountPlusMaking@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetBuildingClassCountPlusMaking, COMDAT

; 7242 : 	return BasicLuaMethod(L, &CvPlayerAI::getBuildingClassCountPlusMaking);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getBuildingClassCountPlusMaking@CvPlayer@@QBEHW4BuildingClassTypes@@@Z ; CvPlayer::getBuildingClassCountPlusMaking
	push	eax
	call	??$BasicLuaMethod@HW4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4BuildingClassTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum BuildingClassTypes>
	add	esp, 8

; 7243 : }

	ret	0
?lGetBuildingClassCountPlusMaking@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetBuildingClassCountPlusMaking
_TEXT	ENDS
PUBLIC	?lGetHurryCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHurryCount
EXTRN	?getHurryCount@CvPlayer@@QBEHW4HurryTypes@@@Z:PROC ; CvPlayer::getHurryCount
; Function compile flags: /Ogtpy
;	COMDAT ?lGetHurryCount@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHurryCount@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetHurryCount, COMDAT

; 7248 : 	return BasicLuaMethod(L, &CvPlayerAI::getHurryCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getHurryCount@CvPlayer@@QBEHW4HurryTypes@@@Z ; CvPlayer::getHurryCount
	push	eax
	call	??$BasicLuaMethod@HW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4HurryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum HurryTypes>
	add	esp, 8

; 7249 : }

	ret	0
?lGetHurryCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetHurryCount
_TEXT	ENDS
PUBLIC	?lIsHasAccessToHurry@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsHasAccessToHurry
EXTRN	?IsHasAccessToHurry@CvPlayer@@QBE_NW4HurryTypes@@@Z:PROC ; CvPlayer::IsHasAccessToHurry
; Function compile flags: /Ogtpy
;	COMDAT ?lIsHasAccessToHurry@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsHasAccessToHurry@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsHasAccessToHurry, COMDAT

; 7254 : 	return BasicLuaMethod(L, &CvPlayerAI::IsHasAccessToHurry);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?IsHasAccessToHurry@CvPlayer@@QBE_NW4HurryTypes@@@Z ; CvPlayer::IsHasAccessToHurry
	push	eax
	call	??$BasicLuaMethod@_NW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4HurryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum HurryTypes>
	add	esp, 8

; 7255 : }

	ret	0
?lIsHasAccessToHurry@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsHasAccessToHurry
_TEXT	ENDS
PUBLIC	?lIsCanHurry@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lIsCanHurry
EXTRN	?IsCanHurry@CvPlayer@@QBE_NW4HurryTypes@@@Z:PROC ; CvPlayer::IsCanHurry
; Function compile flags: /Ogtpy
;	COMDAT ?lIsCanHurry@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsCanHurry@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsCanHurry, COMDAT

; 7260 : 	return BasicLuaMethod(L, &CvPlayerAI::IsCanHurry);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?IsCanHurry@CvPlayer@@QBE_NW4HurryTypes@@@Z ; CvPlayer::IsCanHurry
	push	eax
	call	??$BasicLuaMethod@_NW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NW4HurryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum HurryTypes>
	add	esp, 8

; 7261 : }

	ret	0
?lIsCanHurry@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsCanHurry
_TEXT	ENDS
PUBLIC	?lGetHurryGoldCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHurryGoldCost
EXTRN	?GetHurryGoldCost@CvPlayer@@QBEHW4HurryTypes@@@Z:PROC ; CvPlayer::GetHurryGoldCost
; Function compile flags: /Ogtpy
;	COMDAT ?lGetHurryGoldCost@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHurryGoldCost@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetHurryGoldCost, COMDAT

; 7266 : 	return BasicLuaMethod(L, &CvPlayerAI::GetHurryGoldCost);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetHurryGoldCost@CvPlayer@@QBEHW4HurryTypes@@@Z ; CvPlayer::GetHurryGoldCost
	push	eax
	call	??$BasicLuaMethod@HW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4HurryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum HurryTypes>
	add	esp, 8

; 7267 : }

	ret	0
?lGetHurryGoldCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetHurryGoldCost
_TEXT	ENDS
PUBLIC	?lIsResearchingTech@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsResearchingTech
EXTRN	?IsResearchingTech@CvPlayerTechs@@QBE_NW4TechTypes@@@Z:PROC ; CvPlayerTechs::IsResearchingTech
; Function compile flags: /Ogtpy
;	COMDAT ?lIsResearchingTech@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsResearchingTech@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsResearchingTech, COMDAT

; 7272 : {

	push	ebx
	push	ebp
	push	esi

; 7273 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsResearc@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsResearc@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsResearc@2
	xor	bl, bl
$LN5@lIsResearc@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsResearc@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsResearc@2:

; 7274 : 	const TechTypes iIndex = (TechTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 7275 : 
; 7276 : 	const bool bResult = pkPlayer->GetPlayerTechs()->IsResearchingTech(iIndex);

	push	eax
	mov	ecx, edi
	call	?GetPlayerTechs@CvPlayer@@QBEPAVCvPlayerTechs@@XZ ; CvPlayer::GetPlayerTechs
	mov	ecx, eax
	call	?IsResearchingTech@CvPlayerTechs@@QBE_NW4TechTypes@@@Z ; CvPlayerTechs::IsResearchingTech

; 7277 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 7278 : 	return 1;

	mov	eax, 1
	pop	ebx

; 7279 : }

	ret	0
?lIsResearchingTech@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsResearchingTech
_TEXT	ENDS
PUBLIC	?lSetResearchingTech@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetResearchingTech
EXTRN	?setResearchingTech@CvPlayer@@QAEXW4TechTypes@@_N@Z:PROC ; CvPlayer::setResearchingTech
; Function compile flags: /Ogtpy
;	COMDAT ?lSetResearchingTech@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetResearchingTech@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetResearchingTech, COMDAT

; 7284 : 	return BasicLuaMethod(L, &CvPlayerAI::setResearchingTech);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?setResearchingTech@CvPlayer@@QAEXW4TechTypes@@_N@Z ; CvPlayer::setResearchingTech
	push	eax
	call	??$BasicLuaMethod@W4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4TechTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum TechTypes,bool>
	add	esp, 8

; 7285 : }

	ret	0
?lSetResearchingTech@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetResearchingTech
_TEXT	ENDS
PUBLIC	?lGetCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCombatExperience
EXTRN	?getCombatExperience@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getCombatExperience
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCombatExperience, COMDAT

; 7291 : 	return BasicLuaMethod(L, &CvPlayerAI::getCombatExperience);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getCombatExperience@CvPlayer@@QBEHXZ ; CvPlayer::getCombatExperience
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7292 : }

	ret	0
?lGetCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCombatExperience
_TEXT	ENDS
PUBLIC	?lChangeCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeCombatExperience
EXTRN	?changeCombatExperience@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::changeCombatExperience
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeCombatExperience, COMDAT

; 7297 : 	return BasicLuaMethod(L, &CvPlayerAI::changeCombatExperience);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?changeCombatExperience@CvPlayer@@QAEXH@Z ; CvPlayer::changeCombatExperience
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7298 : }

	ret	0
?lChangeCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeCombatExperience
_TEXT	ENDS
PUBLIC	?lSetCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetCombatExperience
EXTRN	?setCombatExperience@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::setCombatExperience
; Function compile flags: /Ogtpy
;	COMDAT ?lSetCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetCombatExperience, COMDAT

; 7303 : 	return BasicLuaMethod(L, &CvPlayerAI::setCombatExperience);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?setCombatExperience@CvPlayer@@QAEXH@Z ; CvPlayer::setCombatExperience
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7304 : }

	ret	0
?lSetCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetCombatExperience
_TEXT	ENDS
PUBLIC	?lGetLifetimeCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetLifetimeCombatExperience
EXTRN	?getLifetimeCombatExperience@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getLifetimeCombatExperience
; Function compile flags: /Ogtpy
;	COMDAT ?lGetLifetimeCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetLifetimeCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetLifetimeCombatExperience, COMDAT

; 7309 : 	return BasicLuaMethod(L, &CvPlayerAI::getLifetimeCombatExperience);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getLifetimeCombatExperience@CvPlayer@@QBEHXZ ; CvPlayer::getLifetimeCombatExperience
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7310 : }

	ret	0
?lGetLifetimeCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetLifetimeCombatExperience
_TEXT	ENDS
PUBLIC	?lGetNavalCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNavalCombatExperience
EXTRN	?getNavalCombatExperience@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getNavalCombatExperience
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNavalCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNavalCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNavalCombatExperience, COMDAT

; 7315 : 	return BasicLuaMethod(L, &CvPlayerAI::getNavalCombatExperience);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getNavalCombatExperience@CvPlayer@@QBEHXZ ; CvPlayer::getNavalCombatExperience
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7316 : }

	ret	0
?lGetNavalCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNavalCombatExperience
_TEXT	ENDS
PUBLIC	?lChangeNavalCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNavalCombatExperience
EXTRN	?changeNavalCombatExperience@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::changeNavalCombatExperience
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeNavalCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeNavalCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeNavalCombatExperience, COMDAT

; 7321 : 	return BasicLuaMethod(L, &CvPlayerAI::changeNavalCombatExperience);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?changeNavalCombatExperience@CvPlayer@@QAEXH@Z ; CvPlayer::changeNavalCombatExperience
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7322 : }

	ret	0
?lChangeNavalCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeNavalCombatExperience
_TEXT	ENDS
PUBLIC	?lSetNavalCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetNavalCombatExperience
EXTRN	?setNavalCombatExperience@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::setNavalCombatExperience
; Function compile flags: /Ogtpy
;	COMDAT ?lSetNavalCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetNavalCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetNavalCombatExperience, COMDAT

; 7327 : 	return BasicLuaMethod(L, &CvPlayerAI::setNavalCombatExperience);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?setNavalCombatExperience@CvPlayer@@QAEXH@Z ; CvPlayer::setNavalCombatExperience
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7328 : }

	ret	0
?lSetNavalCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetNavalCombatExperience
_TEXT	ENDS
PUBLIC	?lGetSpecialistExtraYield@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetSpecialistExtraYield
EXTRN	?getSpecialistExtraYield@CvPlayer@@QBEHW4SpecialistTypes@@W4YieldTypes@@@Z:PROC ; CvPlayer::getSpecialistExtraYield
EXTRN	?GetSpecialistYieldChange@CvPlayerTraits@@QBEHW4SpecialistTypes@@W4YieldTypes@@@Z:PROC ; CvPlayerTraits::GetSpecialistYieldChange
; Function compile flags: /Ogtpy
;	COMDAT ?lGetSpecialistExtraYield@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eIndex2$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetSpecialistExtraYield@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetSpecialistExtraYield, COMDAT

; 7332 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 7333 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	xor	ebp, ebp
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetSpecia@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetSpecia@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	ebp, eax
	add	esp, 8
	test	ebp, ebp
	je	SHORT $LN5@lGetSpecia@2
	xor	bl, bl
$LN5@lGetSpecia@2:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetSpecia@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetSpecia@2:

; 7334 : 	const SpecialistTypes eIndex1 = (SpecialistTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 7335 : 	const YieldTypes eIndex2 = (YieldTypes)lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H

; 7336 : 
; 7337 : #ifdef LEK_TRAIT_SPECIALIST_YIELD_MAX_ONE
; 7338 : 	const int iResult = pkPlayer->getSpecialistExtraYield(eIndex1, eIndex2) +
; 7339 : 	                    pkPlayer->GetPlayerTraits()->GetSpecialistYieldChange(eIndex1, eIndex2) +
; 7340 : 						pkPlayer->GetPlayerTraits()->GetAnySpecificSpecialistYieldChange(eIndex1, eIndex2);
; 7341 : #else
; 7342 : 	const int iResult = pkPlayer->getSpecialistExtraYield(eIndex1, eIndex2) +
; 7343 : 	                    pkPlayer->GetPlayerTraits()->GetSpecialistYieldChange(eIndex1, eIndex2);

	push	eax
	push	ebx
	mov	ecx, ebp
	mov	DWORD PTR _eIndex2$[esp+28], eax
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	ecx, eax
	call	?GetSpecialistYieldChange@CvPlayerTraits@@QBEHW4SpecialistTypes@@W4YieldTypes@@@Z ; CvPlayerTraits::GetSpecialistYieldChange
	mov	edi, eax
	mov	eax, DWORD PTR _eIndex2$[esp+20]
	push	eax
	push	ebx
	mov	ecx, ebp
	call	?getSpecialistExtraYield@CvPlayer@@QBEHW4SpecialistTypes@@W4YieldTypes@@@Z ; CvPlayer::getSpecialistExtraYield
	add	edi, eax

; 7344 : #endif
; 7345 : 	
; 7346 : 	lua_pushinteger(L, iResult);

	push	edi
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 7347 : 	return 1;

	mov	eax, 1
	pop	ebx

; 7348 : }

	pop	ecx
	ret	0
?lGetSpecialistExtraYield@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetSpecialistExtraYield
_TEXT	ENDS
PUBLIC	?lFindPathLength@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lFindPathLength
EXTRN	?findPathLength@CvPlayer@@QBEHW4TechTypes@@_N@Z:PROC ; CvPlayer::findPathLength
; Function compile flags: /Ogtpy
;	COMDAT ?lFindPathLength@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lFindPathLength@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lFindPathLength, COMDAT

; 7353 : 	return BasicLuaMethod(L, &CvPlayerAI::findPathLength);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?findPathLength@CvPlayer@@QBEHW4TechTypes@@_N@Z ; CvPlayer::findPathLength
	push	eax
	call	??$BasicLuaMethod@HW4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4TechTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum TechTypes,bool>
	add	esp, 8

; 7354 : }

	ret	0
?lFindPathLength@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lFindPathLength
_TEXT	ENDS
PUBLIC	?lGetQueuePosition@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetQueuePosition
EXTRN	?getQueuePosition@CvPlayer@@QBEHW4TechTypes@@@Z:PROC ; CvPlayer::getQueuePosition
; Function compile flags: /Ogtpy
;	COMDAT ?lGetQueuePosition@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetQueuePosition@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetQueuePosition, COMDAT

; 7359 : 	return BasicLuaMethod(L, &CvPlayerAI::getQueuePosition);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getQueuePosition@CvPlayer@@QBEHW4TechTypes@@@Z ; CvPlayer::getQueuePosition
	push	eax
	call	??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHW4TechTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,enum TechTypes>
	add	esp, 8

; 7360 : }

	ret	0
?lGetQueuePosition@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetQueuePosition
_TEXT	ENDS
PUBLIC	?lPushResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lPushResearch
EXTRN	?pushResearch@CvPlayer@@QAE_NW4TechTypes@@_N@Z:PROC ; CvPlayer::pushResearch
; Function compile flags: /Ogtpy
;	COMDAT ?lPushResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lPushResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lPushResearch, COMDAT

; 7371 : 	return BasicLuaMethod(L, &CvPlayerAI::pushResearch);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?pushResearch@CvPlayer@@QAE_NW4TechTypes@@_N@Z ; CvPlayer::pushResearch
	push	eax
	call	??$BasicLuaMethod@_NW4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AE_NW4TechTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool,enum TechTypes,bool>
	add	esp, 8

; 7372 : }

	ret	0
?lPushResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lPushResearch
_TEXT	ENDS
PUBLIC	?lPopResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lPopResearch
EXTRN	?popResearch@CvPlayer@@QAEXW4TechTypes@@@Z:PROC	; CvPlayer::popResearch
; Function compile flags: /Ogtpy
;	COMDAT ?lPopResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lPopResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lPopResearch, COMDAT

; 7377 : 	return BasicLuaMethod(L, &CvPlayerAI::popResearch);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?popResearch@CvPlayer@@QAEXW4TechTypes@@@Z ; CvPlayer::popResearch
	push	eax
	call	??$BasicLuaMethod@W4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXW4TechTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<enum TechTypes>
	add	esp, 8

; 7378 : }

	ret	0
?lPopResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lPopResearch
_TEXT	ENDS
PUBLIC	?lGetLengthResearchQueue@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetLengthResearchQueue
EXTRN	?getLengthResearchQueue@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getLengthResearchQueue
; Function compile flags: /Ogtpy
;	COMDAT ?lGetLengthResearchQueue@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetLengthResearchQueue@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetLengthResearchQueue, COMDAT

; 7383 : 	return BasicLuaMethod(L, &CvPlayerAI::getLengthResearchQueue);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getLengthResearchQueue@CvPlayer@@QBEHXZ ; CvPlayer::getLengthResearchQueue
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7384 : }

	ret	0
?lGetLengthResearchQueue@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetLengthResearchQueue
_TEXT	ENDS
PUBLIC	?lAddCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lAddCityName
EXTRN	?addCityName@CvPlayer@@QAEXABVCvString@@@Z:PROC	; CvPlayer::addCityName
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lAddCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lAddCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lAddCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lAddCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lAddCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_cityName$233590 = -40					; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lAddCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lAddCityName, COMDAT

; 7388 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lAddCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 28					; 0000001cH
	push	ebx
	push	ebp
	push	esi

; 7389 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+48]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@lAddCityNa
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@lAddCityNa
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@lAddCityNa
	xor	bl, bl
$LN7@lAddCityNa:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@lAddCityNa
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@lAddCityNa:

; 7390 : 	if(pkPlayer)

	test	edi, edi
	je	SHORT $LN24@lAddCityNa

; 7391 : 	{
; 7392 : 		CvString cityName = lua_tostring(L, 2);

	push	0
	push	2
	push	esi
	call	_lua_tolstring
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN19@lAddCityNa
	mov	eax, OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN19@lAddCityNa:
	push	eax
	lea	ecx, DWORD PTR _cityName$233590[esp+60]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z

; 7393 : 		pkPlayer->addCityName(cityName);

	lea	eax, DWORD PTR _cityName$233590[esp+56]
	push	eax
	mov	ecx, edi
	mov	DWORD PTR __$EHRec$[esp+68], 0
	call	?addCityName@CvPlayer@@QAEXABVCvString@@@Z ; CvPlayer::addCityName

; 7394 : 	}

	lea	ecx, DWORD PTR _cityName$233590[esp+56]
	mov	DWORD PTR __$EHRec$[esp+64], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN24@lAddCityNa:

; 7395 : 
; 7396 : 	return 0;
; 7397 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+56]
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lAddCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _cityName$233590[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lAddCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lAddCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lAddCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lAddCityName
PUBLIC	?lGetNumCityNames@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumCityNames
EXTRN	?getNumCityNames@CvPlayer@@QBEHXZ:PROC		; CvPlayer::getNumCityNames
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumCityNames@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumCityNames@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetNumCityNames, COMDAT

; 7402 : 	return BasicLuaMethod(L, &CvPlayerAI::getNumCityNames);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getNumCityNames@CvPlayer@@QBEHXZ ; CvPlayer::getNumCityNames
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7403 : }

	ret	0
?lGetNumCityNames@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetNumCityNames
_TEXT	ENDS
PUBLIC	?lGetCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetCityName
EXTRN	?getCityName@CvPlayer@@QBE?AVCvString@@H@Z:PROC	; CvPlayer::getCityName
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_cityName$233601 = -40					; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetCityName, COMDAT

; 7407 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 28					; 0000001cH
	push	ebx
	push	ebp
	push	esi

; 7408 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+48]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@lGetCityNa
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@lGetCityNa
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@lGetCityNa
	xor	bl, bl
$LN7@lGetCityNa:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@lGetCityNa
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@lGetCityNa:

; 7409 : 	if(pkPlayer)

	test	edi, edi
	je	SHORT $LN1@lGetCityNa

; 7410 : 	{
; 7411 : 		const int index = luaL_checkint(L, 2);

	push	2
	push	esi
	call	_luaL_checkinteger
	add	esp, 8

; 7412 : 		CvString cityName = pkPlayer->getCityName(index);

	push	eax
	lea	eax, DWORD PTR _cityName$233601[esp+60]
	push	eax
	mov	ecx, edi
	call	?getCityName@CvPlayer@@QBE?AVCvString@@H@Z ; CvPlayer::getCityName

; 7413 : 		lua_pushstring(L, cityName.c_str());

	lea	ecx, DWORD PTR _cityName$233601[esp+56]
	mov	DWORD PTR __$EHRec$[esp+64], 0
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8

; 7414 : 		return 1;

	lea	ecx, DWORD PTR _cityName$233601[esp+56]
	mov	DWORD PTR __$EHRec$[esp+64], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx

; 7415 : 	}
; 7416 : 
; 7417 : 	return 0;
; 7418 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+40]
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
$LN1@lGetCityNa:
	mov	ecx, DWORD PTR __$EHRec$[esp+56]
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _cityName$233601[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetCityName
PUBLIC	?lCitiesAux@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lCitiesAux
EXTRN	_lua_rawgeti:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?lCitiesAux@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_i$ = -4						; size = 4
_L$ = 8							; size = 4
?lCitiesAux@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lCitiesAux, COMDAT

; 7422 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 7423 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN9@lCitiesAux
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN9@lCitiesAux
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN9@lCitiesAux
	xor	bl, bl
$LN9@lCitiesAux:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN16@lCitiesAux
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN16@lCitiesAux:

; 7424 : 	CvCity* pkCity = NULL;
; 7425 : 
; 7426 : 	int i = -1;
; 7427 : 	lua_pushvalue(L, lua_upvalueindex(1));

	push	-10003					; ffffd8edH
	or	ebp, -1
	push	esi
	mov	DWORD PTR _i$[esp+28], ebp
	call	_lua_pushvalue

; 7428 : 	int t = lua_gettop(L);

	push	esi
	call	_lua_gettop
	mov	ebx, eax

; 7429 : 
; 7430 : 	lua_rawgeti(L, t, 1);

	push	1
	push	ebx
	push	esi
	call	_lua_rawgeti

; 7431 : 	if(!lua_isnil(L, -1))

	push	ebp
	push	esi
	call	_lua_type
	add	esp, 32					; 00000020H
	test	eax, eax
	je	SHORT $LN2@lCitiesAux

; 7432 : 	{
; 7433 : 		i = lua_tointeger(L, -1);

	push	ebp
	push	esi
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _i$[esp+20], eax
$LN2@lCitiesAux:

; 7434 : 	}
; 7435 : 	lua_pop(L, 1);

	push	-2					; fffffffeH
	push	esi
	call	_lua_settop
	add	esp, 8

; 7436 : 
; 7437 : 	pkCity = (i == -1)? pkPlayer->firstCity(&i) : pkPlayer->nextCity(&i);

	push	0
	cmp	DWORD PTR _i$[esp+24], ebp
	jne	SHORT $LN5@lCitiesAux
	lea	eax, DWORD PTR _i$[esp+24]
	push	eax
	mov	ecx, edi
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	jmp	SHORT $LN18@lCitiesAux
$LN5@lCitiesAux:
	lea	ecx, DWORD PTR _i$[esp+24]
	push	ecx
	mov	ecx, edi
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
$LN18@lCitiesAux:

; 7438 : 
; 7439 : 	lua_pushinteger(L, i);

	mov	edx, DWORD PTR _i$[esp+20]
	push	edx
	push	esi
	mov	edi, eax
	call	_lua_pushinteger

; 7440 : 	lua_rawseti(L, t, 1);

	push	1
	push	ebx
	push	esi
	call	_lua_rawseti
	add	esp, 20					; 00000014H

; 7441 : 
; 7442 : 	if(pkCity)

	test	edi, edi
	je	SHORT $LN1@lCitiesAux

; 7443 : 	{
; 7444 : 		CvLuaCity::Push(L, pkCity);

	push	edi
	push	esi
	call	?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 7445 : 		return 1;

	mov	eax, 1
	pop	ebx

; 7449 : }

	pop	ecx
	ret	0
$LN1@lCitiesAux:
	pop	edi
	pop	esi
	pop	ebp

; 7446 : 	}
; 7447 : 
; 7448 : 	return 0;

	xor	eax, eax
	pop	ebx

; 7449 : }

	pop	ecx
	ret	0
?lCitiesAux@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lCitiesAux
_TEXT	ENDS
PUBLIC	?lCities@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lCities
EXTRN	_lua_pushcclosure:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?lCities@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCities@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC		; CvLuaPlayer::lCities, COMDAT

; 7453 : {

	push	esi

; 7454 : 	lua_createtable(L, 1, 0);

	mov	esi, DWORD PTR _L$[esp]
	push	0
	push	1
	push	esi
	call	_lua_createtable

; 7455 : 	lua_pushcclosure(L, lCitiesAux, 1);		/* generator, */

	push	1
	push	OFFSET ?lCitiesAux@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCitiesAux
	push	esi
	call	_lua_pushcclosure

; 7456 : 	lua_pushvalue(L, 1);					/* state (self) */

	push	1
	push	esi
	call	_lua_pushvalue
	add	esp, 32					; 00000020H

; 7457 : 	return 2;

	mov	eax, 2
	pop	esi

; 7458 : }

	ret	0
?lCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP		; CvLuaPlayer::lCities
_TEXT	ENDS
PUBLIC	?lGetNumCities@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetNumCities
EXTRN	?getNumCities@CvPlayer@@QBEHXZ:PROC		; CvPlayer::getNumCities
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumCities@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumCities@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetNumCities, COMDAT

; 7463 : 	return BasicLuaMethod(L, &CvPlayerAI::getNumCities);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getNumCities@CvPlayer@@QBEHXZ	; CvPlayer::getNumCities
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7464 : }

	ret	0
?lGetNumCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetNumCities
_TEXT	ENDS
PUBLIC	?lGetCityByID@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetCityByID
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCityByID@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCityByID@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetCityByID, COMDAT

; 7468 : {

	push	ebx
	push	ebp
	push	esi

; 7469 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetCityBy
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetCityBy
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetCityBy
	xor	bl, bl
$LN5@lGetCityBy:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetCityBy
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetCityBy:

; 7470 : 	const int id = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 7471 : 
; 7472 : 	CvCity* pkCity = pkPlayer->getCity(id);

	push	eax
	mov	ecx, edi
	call	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z	; CvPlayer::getCity

; 7473 : 	CvLuaCity::Push(L, pkCity);

	push	eax
	push	esi
	call	?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 7474 : 	return 1;

	mov	eax, 1
	pop	ebx

; 7475 : }

	ret	0
?lGetCityByID@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetCityByID
_TEXT	ENDS
PUBLIC	?lUnitsAux@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lUnitsAux
; Function compile flags: /Ogtpy
;	COMDAT ?lUnitsAux@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_i$ = -4						; size = 4
_L$ = 8							; size = 4
?lUnitsAux@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lUnitsAux, COMDAT

; 7479 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 7480 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN9@lUnitsAux
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN9@lUnitsAux
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN9@lUnitsAux
	xor	bl, bl
$LN9@lUnitsAux:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN16@lUnitsAux
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN16@lUnitsAux:

; 7481 : 	CvUnit* pkUnit = NULL;
; 7482 : 
; 7483 : 	lua_pushvalue(L, lua_upvalueindex(1));

	push	-10003					; ffffd8edH
	push	esi
	call	_lua_pushvalue

; 7484 : 	int t = lua_gettop(L);

	push	esi
	call	_lua_gettop
	mov	ebx, eax

; 7485 : 
; 7486 : 	lua_rawgeti(L, t, 1);

	push	1
	push	ebx
	push	esi
	call	_lua_rawgeti

; 7487 : 	int i = -1;

	or	ebp, -1

; 7488 : 	if(!lua_isnil(L, -1))

	push	ebp
	push	esi
	mov	DWORD PTR _i$[esp+52], ebp
	call	_lua_type
	add	esp, 32					; 00000020H
	test	eax, eax
	je	SHORT $LN2@lUnitsAux

; 7489 : 	{
; 7490 : 		i = lua_tointeger(L, -1);

	push	ebp
	push	esi
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _i$[esp+20], eax
$LN2@lUnitsAux:

; 7491 : 	}
; 7492 : 	lua_pop(L, 1);

	push	-2					; fffffffeH
	push	esi
	call	_lua_settop
	add	esp, 8

; 7493 : 
; 7494 : 	pkUnit = (i == -1)? pkPlayer->firstUnit(&i) : pkPlayer->nextUnit(&i);

	push	0
	cmp	DWORD PTR _i$[esp+24], ebp
	jne	SHORT $LN5@lUnitsAux
	lea	eax, DWORD PTR _i$[esp+24]
	push	eax
	mov	ecx, edi
	call	?firstUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z ; CvPlayer::firstUnit
	jmp	SHORT $LN18@lUnitsAux
$LN5@lUnitsAux:
	lea	ecx, DWORD PTR _i$[esp+24]
	push	ecx
	mov	ecx, edi
	call	?nextUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z ; CvPlayer::nextUnit
$LN18@lUnitsAux:

; 7495 : 
; 7496 : 	lua_pushinteger(L, i);

	mov	edx, DWORD PTR _i$[esp+20]
	push	edx
	push	esi
	mov	edi, eax
	call	_lua_pushinteger

; 7497 : 	lua_rawseti(L, t, 1);

	push	1
	push	ebx
	push	esi
	call	_lua_rawseti
	add	esp, 20					; 00000014H

; 7498 : 
; 7499 : 	if(pkUnit)

	test	edi, edi
	je	SHORT $LN1@lUnitsAux

; 7500 : 	{
; 7501 : 		CvLuaUnit::Push(L, pkUnit);

	push	edi
	push	esi
	call	?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@PAVCvUnit@@@Z ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::Push
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 7502 : 		return 1;

	mov	eax, 1
	pop	ebx

; 7506 : }

	pop	ecx
	ret	0
$LN1@lUnitsAux:
	pop	edi
	pop	esi
	pop	ebp

; 7503 : 	}
; 7504 : 
; 7505 : 	return 0;

	xor	eax, eax
	pop	ebx

; 7506 : }

	pop	ecx
	ret	0
?lUnitsAux@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lUnitsAux
_TEXT	ENDS
PUBLIC	?lUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lUnits
; Function compile flags: /Ogtpy
;	COMDAT ?lUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC		; CvLuaPlayer::lUnits, COMDAT

; 7510 : {

	push	esi

; 7511 : 	lua_createtable(L, 1, 0);

	mov	esi, DWORD PTR _L$[esp]
	push	0
	push	1
	push	esi
	call	_lua_createtable

; 7512 : 	lua_pushcclosure(L, lUnitsAux, 1);		/* generator, */

	push	1
	push	OFFSET ?lUnitsAux@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lUnitsAux
	push	esi
	call	_lua_pushcclosure

; 7513 : 	lua_pushvalue(L, 1);					/* state (self)*/

	push	1
	push	esi
	call	_lua_pushvalue
	add	esp, 32					; 00000020H

; 7514 : 	return 2;

	mov	eax, 2
	pop	esi

; 7515 : }

	ret	0
?lUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP		; CvLuaPlayer::lUnits
_TEXT	ENDS
PUBLIC	?lGetUnitByID@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetUnitByID
EXTRN	?getUnit@CvPlayer@@QAEPAVCvUnit@@H@Z:PROC	; CvPlayer::getUnit
; Function compile flags: /Ogtpy
;	COMDAT ?lGetUnitByID@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnitByID@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetUnitByID, COMDAT

; 7519 : {

	push	ebx
	push	ebp
	push	esi

; 7520 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetUnitBy
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetUnitBy
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetUnitBy
	xor	bl, bl
$LN5@lGetUnitBy:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetUnitBy
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetUnitBy:

; 7521 : 	int id = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 7522 : 
; 7523 : 	CvLuaUnit::Push(L, pkPlayer->getUnit(id));

	push	eax
	mov	ecx, edi
	call	?getUnit@CvPlayer@@QAEPAVCvUnit@@H@Z	; CvPlayer::getUnit
	push	eax
	push	esi
	call	?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@PAVCvUnit@@@Z ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::Push
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 7524 : 	return 1;

	mov	eax, 1
	pop	ebx

; 7525 : }

	ret	0
?lGetUnitByID@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetUnitByID
_TEXT	ENDS
PUBLIC	?lGetNumUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetNumUnits
EXTRN	?getNumUnits@CvPlayer@@QBEHXZ:PROC		; CvPlayer::getNumUnits
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetNumUnits, COMDAT

; 7530 : 	return BasicLuaMethod(L, &CvPlayerAI::getNumUnits);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?getNumUnits@CvPlayer@@QBEHXZ	; CvPlayer::getNumUnits
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7531 : }

	ret	0
?lGetNumUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetNumUnits
_TEXT	ENDS
PUBLIC	?lAI_updateFoundValues@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lAI_updateFoundValues
; Function compile flags: /Ogtpy
;	COMDAT ?lAI_updateFoundValues@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lAI_updateFoundValues@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lAI_updateFoundValues, COMDAT

; 7536 : 	return BasicLuaMethod(L, &CvPlayerAI::AI_updateFoundValues);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ??_9CvPlayerAI@@$BCE@AE		; CvPlayerAI::`vcall'{36}'
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEX_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 7537 : }

	ret	0
?lAI_updateFoundValues@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lAI_updateFoundValues
_TEXT	ENDS
PUBLIC	?lAI_foundValue@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lAI_foundValue
; Function compile flags: /Ogtpy
;	COMDAT ?lAI_foundValue@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lAI_foundValue@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lAI_foundValue, COMDAT

; 7542 : 	return BasicLuaMethod(L, &CvPlayerAI::AI_foundValue);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ??_9CvPlayerAI@@$BDA@AE		; CvPlayerAI::`vcall'{48}'
	push	eax
	call	??$BasicLuaMethod@HHHH_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEHHHH_N@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int,int,int,int,bool>
	add	esp, 8

; 7543 : }

	ret	0
?lAI_foundValue@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lAI_foundValue
_TEXT	ENDS
PUBLIC	?lGetScoreHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreHistory
EXTRN	?getReplayDataValue@CvPlayer@@QBEHII@Z:PROC	; CvPlayer::getReplayDataValue
EXTRN	?getReplayDataSetIndex@CvPlayer@@QAEIPBD@Z:PROC	; CvPlayer::getReplayDataSetIndex
; Function compile flags: /Ogtpy
;	COMDAT ?lGetScoreHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScoreHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetScoreHistory, COMDAT

; 7548 : {

	push	ebx
	push	ebp
	push	esi

; 7549 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetScoreH
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetScoreH
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetScoreH
	xor	bl, bl
$LN5@lGetScoreH:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetScoreH
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetScoreH:

; 7550 : 	unsigned int uiTurn = (unsigned int)luaL_checkint(L, 2);

	push	2
	push	esi
	call	_luaL_checkinteger
	add	esp, 8

; 7551 : 	unsigned int uiDataSet = pkPlayer->getReplayDataSetIndex("REPLAYDATASET_SCORE");

	push	OFFSET $SG233693
	mov	ecx, edi
	mov	ebx, eax
	call	?getReplayDataSetIndex@CvPlayer@@QAEIPBD@Z ; CvPlayer::getReplayDataSetIndex

; 7552 : 	lua_pushinteger(L, pkPlayer->getReplayDataValue(uiDataSet, uiTurn));

	push	ebx
	push	eax
	mov	ecx, edi
	call	?getReplayDataValue@CvPlayer@@QBEHII@Z	; CvPlayer::getReplayDataValue
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 7553 : 	return 1;

	mov	eax, 1
	pop	ebx

; 7554 : }

	ret	0
?lGetScoreHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetScoreHistory
_TEXT	ENDS
PUBLIC	?lGetEconomyHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetEconomyHistory
; Function compile flags: /Ogtpy
;	COMDAT ?lGetEconomyHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetEconomyHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetEconomyHistory, COMDAT

; 7558 : {

	push	ebx
	push	ebp
	push	esi

; 7559 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetEconom
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetEconom
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetEconom
	xor	bl, bl
$LN5@lGetEconom:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetEconom
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetEconom:

; 7560 : 	unsigned int uiTurn = (unsigned int)luaL_checkint(L, 2);

	push	2
	push	esi
	call	_luaL_checkinteger
	add	esp, 8

; 7561 : 	unsigned int uiDataSet = pkPlayer->getReplayDataSetIndex("REPLAYDATASET_ECONOMY");

	push	OFFSET $SG233702
	mov	ecx, edi
	mov	ebx, eax
	call	?getReplayDataSetIndex@CvPlayer@@QAEIPBD@Z ; CvPlayer::getReplayDataSetIndex

; 7562 : 	lua_pushinteger(L, pkPlayer->getReplayDataValue(uiDataSet, uiTurn));

	push	ebx
	push	eax
	mov	ecx, edi
	call	?getReplayDataValue@CvPlayer@@QBEHII@Z	; CvPlayer::getReplayDataValue
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 7563 : 	return 1;

	mov	eax, 1
	pop	ebx

; 7564 : }

	ret	0
?lGetEconomyHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetEconomyHistory
_TEXT	ENDS
PUBLIC	?lGetIndustryHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetIndustryHistory
; Function compile flags: /Ogtpy
;	COMDAT ?lGetIndustryHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetIndustryHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetIndustryHistory, COMDAT

; 7568 : {

	push	ebx
	push	ebp
	push	esi

; 7569 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetIndust
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetIndust
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetIndust
	xor	bl, bl
$LN5@lGetIndust:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetIndust
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetIndust:

; 7570 : 	unsigned int uiTurn = (unsigned int)luaL_checkint(L, 2);

	push	2
	push	esi
	call	_luaL_checkinteger
	add	esp, 8

; 7571 : 	unsigned int uiDataSet = pkPlayer->getReplayDataSetIndex("REPLAYDATASET_AGRICULTURE");

	push	OFFSET $SG233711
	mov	ecx, edi
	mov	ebx, eax
	call	?getReplayDataSetIndex@CvPlayer@@QAEIPBD@Z ; CvPlayer::getReplayDataSetIndex

; 7572 : 	lua_pushinteger(L, pkPlayer->getReplayDataValue(uiDataSet, uiTurn));

	push	ebx
	push	eax
	mov	ecx, edi
	call	?getReplayDataValue@CvPlayer@@QBEHII@Z	; CvPlayer::getReplayDataValue
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 7573 : 	return 1;

	mov	eax, 1
	pop	ebx

; 7574 : }

	ret	0
?lGetIndustryHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetIndustryHistory
_TEXT	ENDS
PUBLIC	?lGetAgricultureHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAgricultureHistory
; Function compile flags: /Ogtpy
;	COMDAT ?lGetAgricultureHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetAgricultureHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetAgricultureHistory, COMDAT

; 7578 : {

	push	ebx
	push	ebp
	push	esi

; 7579 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetAgricu
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetAgricu
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetAgricu
	xor	bl, bl
$LN5@lGetAgricu:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetAgricu
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetAgricu:

; 7580 : 	unsigned int uiTurn = (unsigned int)luaL_checkint(L, 2);

	push	2
	push	esi
	call	_luaL_checkinteger
	add	esp, 8

; 7581 : 	unsigned int uiDataSet = pkPlayer->getReplayDataSetIndex("REPLAYDATASET_AGRICULTURE");

	push	OFFSET $SG233720
	mov	ecx, edi
	mov	ebx, eax
	call	?getReplayDataSetIndex@CvPlayer@@QAEIPBD@Z ; CvPlayer::getReplayDataSetIndex

; 7582 : 	lua_pushinteger(L, pkPlayer->getReplayDataValue(uiDataSet, uiTurn));

	push	ebx
	push	eax
	mov	ecx, edi
	call	?getReplayDataValue@CvPlayer@@QBEHII@Z	; CvPlayer::getReplayDataValue
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 7583 : 	return 1;

	mov	eax, 1
	pop	ebx

; 7584 : }

	ret	0
?lGetAgricultureHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetAgricultureHistory
_TEXT	ENDS
PUBLIC	?lSetReplayDataValue@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetReplayDataValue
EXTRN	?setReplayDataValue@CvPlayer@@QAEXIIH@Z:PROC	; CvPlayer::setReplayDataValue
EXTRN	_luaL_checklstring:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?lSetReplayDataValue@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetReplayDataValue@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetReplayDataValue, COMDAT

; 7622 : {

	push	ebx
	push	ebp
	push	esi

; 7623 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lSetReplay
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lSetReplay
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lSetReplay
	xor	bl, bl
$LN5@lSetReplay:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lSetReplay
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lSetReplay:

; 7624 : 	const char* szDataSet = luaL_checkstring(L, 2);

	push	0
	push	2
	push	esi
	call	_luaL_checklstring

; 7625 : 	int iTurn = luaL_checkint(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_luaL_checkinteger

; 7626 : 	int iValue = luaL_checkint(L, 4);

	push	4
	push	esi
	mov	ebp, eax
	call	_luaL_checkinteger
	add	esp, 28					; 0000001cH

; 7627 : 
; 7628 : 	unsigned int uiDataSet = pkPlayer->getReplayDataSetIndex(szDataSet);

	push	ebx
	mov	ecx, edi
	mov	esi, eax
	call	?getReplayDataSetIndex@CvPlayer@@QAEIPBD@Z ; CvPlayer::getReplayDataSetIndex

; 7629 : 	pkPlayer->setReplayDataValue(uiDataSet, iTurn, iValue);

	push	esi
	push	ebp
	push	eax
	mov	ecx, edi
	call	?setReplayDataValue@CvPlayer@@QAEXIIH@Z	; CvPlayer::setReplayDataValue
	pop	edi
	pop	esi
	pop	ebp

; 7630 : 
; 7631 : 	return 0;

	xor	eax, eax
	pop	ebx

; 7632 : }

	ret	0
?lSetReplayDataValue@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetReplayDataValue
_TEXT	ENDS
PUBLIC	?lGetScriptData@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScriptData
EXTRN	?getScriptData@CvPlayer@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ:PROC ; CvPlayer::getScriptData
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluascopedinstance.h
xdata$x	SEGMENT
__unwindtable$?lGetScriptData@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetScriptData@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetScriptData@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetScriptData@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetScriptData@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T258931 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetScriptData@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetScriptData, COMDAT

; 7636 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetScriptData@CvLuaPlayer@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 28					; 0000001cH
	push	ebx
	push	ebp
	push	esi

; 7637 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+48]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetScript
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetScript
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetScript
	xor	bl, bl
$LN6@lGetScript:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lGetScript
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lGetScript:

; 7638 : 	lua_pushstring(L, pkPlayer->getScriptData().c_str());

	lea	eax, DWORD PTR $T258931[esp+56]
	push	eax
	mov	ecx, edi
	call	?getScriptData@CvPlayer@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CvPlayer::getScriptData
	mov	ecx, eax
	mov	DWORD PTR __$EHRec$[esp+64], 0
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8
	lea	ecx, DWORD PTR $T258931[esp+56]
	mov	DWORD PTR __$EHRec$[esp+64], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 7639 : 	return 1;
; 7640 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+56]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetScriptData@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR $T258931[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?lGetScriptData@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetScriptData@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetScriptData@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetScriptData
PUBLIC	?lSetScriptData@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetScriptData
EXTRN	?setScriptData@CvPlayer@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; CvPlayer::setScriptData
; Function compile flags: /Ogtpy
;	COMDAT ?lSetScriptData@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T258965 = -4						; size = 4
_L$ = 8							; size = 4
?lSetScriptData@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lSetScriptData, COMDAT

; 7644 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 7645 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lSetScript
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lSetScript
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lSetScript
	xor	bl, bl
$LN6@lSetScript:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lSetScript
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lSetScript:

; 7646 : 	const char* strScriptData = lua_tostring(L, 2);

	push	0
	push	2
	push	esi
	call	_lua_tolstring

; 7647 : 
; 7648 : 	pkPlayer->setScriptData(strScriptData);

	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	DWORD PTR $T258965[esp+48], esp
	push	eax
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	ecx, edi
	call	?setScriptData@CvPlayer@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CvPlayer::setScriptData

; 7649 : 	return 0;
; 7650 : }

	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx
	pop	ecx
	ret	0
?lSetScriptData@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lSetScriptData
_TEXT	ENDS
PUBLIC	?lGetNumPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetNumPlots
EXTRN	?GetNumPlots@CvPlayer@@QBEHXZ:PROC		; CvPlayer::GetNumPlots
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetNumPlots, COMDAT

; 7655 : 	return BasicLuaMethod(L, &CvPlayerAI::GetNumPlots);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetNumPlots@CvPlayer@@QBEHXZ	; CvPlayer::GetNumPlots
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7656 : }

	ret	0
?lGetNumPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetNumPlots
_TEXT	ENDS
PUBLIC	?lGetNumPlotsBought@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumPlotsBought
EXTRN	?GetNumPlotsBought@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetNumPlotsBought
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumPlotsBought@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumPlotsBought@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumPlotsBought, COMDAT

; 7661 : 	return BasicLuaMethod(L, &CvPlayerAI::GetNumPlotsBought);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetNumPlotsBought@CvPlayer@@QBEHXZ ; CvPlayer::GetNumPlotsBought
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7662 : }

	ret	0
?lGetNumPlotsBought@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumPlotsBought
_TEXT	ENDS
PUBLIC	?lSetNumPlotsBought@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetNumPlotsBought
EXTRN	?SetNumPlotsBought@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::SetNumPlotsBought
; Function compile flags: /Ogtpy
;	COMDAT ?lSetNumPlotsBought@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetNumPlotsBought@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetNumPlotsBought, COMDAT

; 7667 : 	return BasicLuaMethod(L, &CvPlayerAI::SetNumPlotsBought);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?SetNumPlotsBought@CvPlayer@@QAEXH@Z ; CvPlayer::SetNumPlotsBought
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7668 : }

	ret	0
?lSetNumPlotsBought@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetNumPlotsBought
_TEXT	ENDS
PUBLIC	?lChangeNumPlotsBought@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNumPlotsBought
EXTRN	?ChangeNumPlotsBought@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::ChangeNumPlotsBought
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeNumPlotsBought@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeNumPlotsBought@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeNumPlotsBought, COMDAT

; 7673 : 	return BasicLuaMethod(L, &CvPlayerAI::ChangeNumPlotsBought);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?ChangeNumPlotsBought@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeNumPlotsBought
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7674 : }

	ret	0
?lChangeNumPlotsBought@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeNumPlotsBought
_TEXT	ENDS
PUBLIC	?lGetBuyPlotCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBuyPlotCost
EXTRN	?GetBuyPlotCost@CvPlayer@@QBEHXZ:PROC		; CvPlayer::GetBuyPlotCost
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBuyPlotCost@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBuyPlotCost@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetBuyPlotCost, COMDAT

; 7679 : 	return BasicLuaMethod(L, &CvPlayerAI::GetBuyPlotCost);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetBuyPlotCost@CvPlayer@@QBEHXZ	; CvPlayer::GetBuyPlotCost
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<int>
	add	esp, 8

; 7680 : }

	ret	0
?lGetBuyPlotCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetBuyPlotCost
_TEXT	ENDS
PUBLIC	?lGetPlotDanger@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPlotDanger
EXTRN	?GetPlotDanger@CvPlayer@@QBEHAAVCvPlot@@@Z:PROC	; CvPlayer::GetPlotDanger
; Function compile flags: /Ogtpy
;	COMDAT ?lGetPlotDanger@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkInstance$259020 = -4					; size = 4
_L$ = 8							; size = 4
?lGetPlotDanger@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetPlotDanger, COMDAT

; 7684 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 7685 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$259020[esp+32], 0
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetPlotDa
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetPlotDa
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$259020[esp+20], eax
	test	eax, eax
	je	SHORT $LN5@lGetPlotDa
	xor	bl, bl
$LN5@lGetPlotDa:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetPlotDa
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetPlotDa:

; 7686 : 	CvPlot* pkPlot = CvLuaPlot::GetInstance(L, 2);

	push	esi
	call	_lua_gettop
	push	2
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN16@lGetPlotDa
	push	OFFSET $SG237776
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN16@lGetPlotDa
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN16@lGetPlotDa
	xor	bl, bl
$LN16@lGetPlotDa:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN15@lGetPlotDa
	push	esi
	call	?HandleMissingInstance@CvLuaPlot@@SAXPAUlua_State@@@Z ; CvLuaPlot::HandleMissingInstance
	add	esp, 4
$LN15@lGetPlotDa:

; 7687 : 
; 7688 : 	lua_pushinteger(L, pkPlayer->GetPlotDanger(*pkPlot));

	mov	ecx, DWORD PTR _pkInstance$259020[esp+20]
	push	edi
	call	?GetPlotDanger@CvPlayer@@QBEHAAVCvPlot@@@Z ; CvPlayer::GetPlotDanger
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 7689 : 	return 1;

	mov	eax, 1
	pop	ebx

; 7690 : }

	pop	ecx
	ret	0
?lGetPlotDanger@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetPlotDanger
_TEXT	ENDS
PUBLIC	?lDoBeginDiploWithHuman@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lDoBeginDiploWithHuman
EXTRN	?DoBeginDiploWithHuman@CvDiplomacyAI@@QAEXXZ:PROC ; CvDiplomacyAI::DoBeginDiploWithHuman
; Function compile flags: /Ogtpy
;	COMDAT ?lDoBeginDiploWithHuman@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lDoBeginDiploWithHuman@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lDoBeginDiploWithHuman, COMDAT

; 7694 : {

	push	ebx
	push	ebp
	push	esi

; 7695 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lDoBeginDi
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lDoBeginDi
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lDoBeginDi
	xor	bl, bl
$LN5@lDoBeginDi:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lDoBeginDi
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lDoBeginDi:

; 7696 : 
; 7697 : 	pkPlayer->GetDiplomacyAI()->DoBeginDiploWithHuman();

	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?DoBeginDiploWithHuman@CvDiplomacyAI@@QAEXXZ ; CvDiplomacyAI::DoBeginDiploWithHuman
	pop	edi
	pop	esi
	pop	ebp

; 7698 : 	return 1;

	mov	eax, 1
	pop	ebx

; 7699 : }

	ret	0
?lDoBeginDiploWithHuman@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lDoBeginDiploWithHuman
_TEXT	ENDS
PUBLIC	?lDoTradeScreenOpened@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lDoTradeScreenOpened
EXTRN	?DoTradeScreenOpened@CvDealAI@@QAEXXZ:PROC	; CvDealAI::DoTradeScreenOpened
EXTRN	?GetDealAI@CvPlayer@@QBEPAVCvDealAI@@XZ:PROC	; CvPlayer::GetDealAI
; Function compile flags: /Ogtpy
;	COMDAT ?lDoTradeScreenOpened@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lDoTradeScreenOpened@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lDoTradeScreenOpened, COMDAT

; 7703 : {

	push	ebx
	push	ebp
	push	esi

; 7704 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lDoTradeSc
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lDoTradeSc
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lDoTradeSc
	xor	bl, bl
$LN5@lDoTradeSc:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lDoTradeSc
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lDoTradeSc:

; 7705 : 
; 7706 : 	pkPlayer->GetDealAI()->DoTradeScreenOpened();

	mov	ecx, edi
	call	?GetDealAI@CvPlayer@@QBEPAVCvDealAI@@XZ	; CvPlayer::GetDealAI
	mov	ecx, eax
	call	?DoTradeScreenOpened@CvDealAI@@QAEXXZ	; CvDealAI::DoTradeScreenOpened
	pop	edi
	pop	esi
	pop	ebp

; 7707 : 	return 1;

	mov	eax, 1
	pop	ebx

; 7708 : }

	ret	0
?lDoTradeScreenOpened@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lDoTradeScreenOpened
_TEXT	ENDS
PUBLIC	?lDoTradeScreenClosed@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lDoTradeScreenClosed
EXTRN	?DoTradeScreenClosed@CvDealAI@@QAEX_N@Z:PROC	; CvDealAI::DoTradeScreenClosed
; Function compile flags: /Ogtpy
;	COMDAT ?lDoTradeScreenClosed@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bAIWasMakingOffer$ = -4				; size = 1
_L$ = 8							; size = 4
?lDoTradeScreenClosed@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lDoTradeScreenClosed, COMDAT

; 7712 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 7713 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lDoTradeSc@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lDoTradeSc@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lDoTradeSc@2
	xor	bl, bl
$LN5@lDoTradeSc@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lDoTradeSc@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lDoTradeSc@2:

; 7714 : 	bool bAIWasMakingOffer = lua_toboolean(L, 2);

	push	2
	push	esi
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	al
	mov	BYTE PTR _bAIWasMakingOffer$[esp+20], al

; 7715 : 
; 7716 : 	pkPlayer->GetDealAI()->DoTradeScreenClosed(bAIWasMakingOffer);

	mov	ecx, DWORD PTR _bAIWasMakingOffer$[esp+20]
	push	ecx
	mov	ecx, edi
	call	?GetDealAI@CvPlayer@@QBEPAVCvDealAI@@XZ	; CvPlayer::GetDealAI
	mov	ecx, eax
	call	?DoTradeScreenClosed@CvDealAI@@QAEX_N@Z	; CvDealAI::DoTradeScreenClosed
	pop	edi
	pop	esi
	pop	ebp

; 7717 : 	return 1;

	mov	eax, 1
	pop	ebx

; 7718 : }

	pop	ecx
	ret	0
?lDoTradeScreenClosed@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lDoTradeScreenClosed
_TEXT	ENDS
PUBLIC	?lGetApproachTowardsUsGuess@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetApproachTowardsUsGuess
EXTRN	?GetApproachTowardsUsGuess@CvDiplomacyAI@@QAE?AW4MajorCivApproachTypes@@W4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetApproachTowardsUsGuess
; Function compile flags: /Ogtpy
;	COMDAT ?lGetApproachTowardsUsGuess@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetApproachTowardsUsGuess@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetApproachTowardsUsGuess, COMDAT

; 7722 : {

	push	ebx
	push	ebp
	push	esi

; 7723 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetApproa
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetApproa
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetApproa
	xor	bl, bl
$LN5@lGetApproa:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetApproa
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetApproa:

; 7724 : 	PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 7725 : 
; 7726 : 	lua_pushinteger(L, pkPlayer->GetDiplomacyAI()->GetApproachTowardsUsGuess(ePlayer));

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetApproachTowardsUsGuess@CvDiplomacyAI@@QAE?AW4MajorCivApproachTypes@@W4PlayerTypes@@@Z ; CvDiplomacyAI::GetApproachTowardsUsGuess
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 7727 : 	return 1;

	mov	eax, 1
	pop	ebx

; 7728 : }

	ret	0
?lGetApproachTowardsUsGuess@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetApproachTowardsUsGuess
_TEXT	ENDS
PUBLIC	?lGetMajorCivApproach@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMajorCivApproach
EXTRN	?GetMajorCivApproach@CvDiplomacyAI@@QBE?AW4MajorCivApproachTypes@@W4PlayerTypes@@_N@Z:PROC ; CvDiplomacyAI::GetMajorCivApproach
; Function compile flags: /Ogtpy
;	COMDAT ?lGetMajorCivApproach@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMajorCivApproach@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMajorCivApproach, COMDAT

; 7731 : {

	push	ebx
	push	ebp
	push	esi

; 7732 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetMajorC
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetMajorC
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetMajorC
	xor	bl, bl
$LN5@lGetMajorC:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetMajorC
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetMajorC:

; 7733 : 	PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 7734 : 
; 7735 : 	lua_pushinteger(L, pkPlayer->GetDiplomacyAI()->GetMajorCivApproach(ePlayer, /*bHideTrueFeelings*/ false));

	push	0
	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetMajorCivApproach@CvDiplomacyAI@@QBE?AW4MajorCivApproachTypes@@W4PlayerTypes@@_N@Z ; CvDiplomacyAI::GetMajorCivApproach
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 7736 : 	return 1;

	mov	eax, 1
	pop	ebx

; 7737 : }

	ret	0
?lGetMajorCivApproach@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMajorCivApproach
_TEXT	ENDS
PUBLIC	?lIsWillAcceptPeaceWithPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsWillAcceptPeaceWithPlayer
EXTRN	?IsWantsPeaceWithPlayer@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsWantsPeaceWithPlayer
; Function compile flags: /Ogtpy
;	COMDAT ?lIsWillAcceptPeaceWithPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsWillAcceptPeaceWithPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsWillAcceptPeaceWithPlayer, COMDAT

; 7741 : {

	push	ebx
	push	ebp
	push	esi

; 7742 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsWillAcc
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsWillAcc
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsWillAcc
	xor	bl, bl
$LN5@lIsWillAcc:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsWillAcc
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsWillAcc:

; 7743 : 	PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 7744 : 
; 7745 : 	const bool bWantsPeace = pkPlayer->GetDiplomacyAI()->IsWantsPeaceWithPlayer(ePlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsWantsPeaceWithPlayer@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsWantsPeaceWithPlayer

; 7746 : 
; 7747 : 	lua_pushboolean(L, bWantsPeace);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 7748 : 	return 1;

	mov	eax, 1
	pop	ebx

; 7749 : }

	ret	0
?lIsWillAcceptPeaceWithPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsWillAcceptPeaceWithPlayer
_TEXT	ENDS
PUBLIC	?lIsProtectingMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsProtectingMinor
; Function compile flags: /Ogtpy
;	COMDAT ?lIsProtectingMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsProtectingMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsProtectingMinor, COMDAT

; 7753 : {

	push	ebx
	push	ebp
	push	esi

; 7754 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsProtect@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsProtect@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsProtect@2
	xor	bl, bl
$LN5@lIsProtect@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsProtect@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsProtect@2:

; 7755 : 	PlayerTypes eMinor = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 7756 : 
; 7757 : 	const bool bProtecting = GET_PLAYER(eMinor).GetMinorCivAI()->IsProtectedByMajor(pkPlayer->GetID());

	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	edi, DWORD PTR [edi+44]
	add	esp, 8
	push	edi
	mov	ecx, eax
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsProtectedByMajor@CvMinorCivAI@@QBE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsProtectedByMajor

; 7758 : 
; 7759 : 	lua_pushboolean(L, bProtecting);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 7760 : 	return 1;

	mov	eax, 1
	pop	ebx

; 7761 : }

	ret	0
?lIsProtectingMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsProtectingMinor
_TEXT	ENDS
PUBLIC	?lIsDontSettleMessageTooSoon@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsDontSettleMessageTooSoon
EXTRN	?IsDontSettleMessageTooSoon@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsDontSettleMessageTooSoon
; Function compile flags: /Ogtpy
;	COMDAT ?lIsDontSettleMessageTooSoon@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsDontSettleMessageTooSoon@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsDontSettleMessageTooSoon, COMDAT

; 7765 : {

	push	ebx
	push	ebp
	push	esi

; 7766 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsDontSet
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsDontSet
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsDontSet
	xor	bl, bl
$LN5@lIsDontSet:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsDontSet
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsDontSet:

; 7767 : 	PlayerTypes eWithPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 7768 : 
; 7769 : 	const bool bTooSoon = pkPlayer->GetDiplomacyAI()->IsDontSettleMessageTooSoon(eWithPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsDontSettleMessageTooSoon@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsDontSettleMessageTooSoon

; 7770 : 
; 7771 : 	lua_pushboolean(L, bTooSoon);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 7772 : 	return 1;

	mov	eax, 1
	pop	ebx

; 7773 : }

	ret	0
?lIsDontSettleMessageTooSoon@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsDontSettleMessageTooSoon
_TEXT	ENDS
PUBLIC	?lIsStopSpyingMessageTooSoon@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsStopSpyingMessageTooSoon
EXTRN	?IsStopSpyingMessageTooSoon@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsStopSpyingMessageTooSoon
; Function compile flags: /Ogtpy
;	COMDAT ?lIsStopSpyingMessageTooSoon@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsStopSpyingMessageTooSoon@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsStopSpyingMessageTooSoon, COMDAT

; 7777 : {

	push	ebx
	push	ebp
	push	esi

; 7778 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsStopSpy
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsStopSpy
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsStopSpy
	xor	bl, bl
$LN5@lIsStopSpy:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsStopSpy
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsStopSpy:

; 7779 : 	PlayerTypes eWithPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 7780 : 
; 7781 : 	const bool bTooSoon = pkPlayer->GetDiplomacyAI()->IsStopSpyingMessageTooSoon(eWithPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsStopSpyingMessageTooSoon@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsStopSpyingMessageTooSoon

; 7782 : 
; 7783 : 	lua_pushboolean(L, bTooSoon);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 7784 : 	return 1;

	mov	eax, 1
	pop	ebx

; 7785 : }

	ret	0
?lIsStopSpyingMessageTooSoon@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsStopSpyingMessageTooSoon
_TEXT	ENDS
PUBLIC	?lIsAskedToStopConverting@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAskedToStopConverting
EXTRN	?IsPlayerAskedNotToConvert@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerAskedNotToConvert
; Function compile flags: /Ogtpy
;	COMDAT ?lIsAskedToStopConverting@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsAskedToStopConverting@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsAskedToStopConverting, COMDAT

; 7790 : {

	push	ebx
	push	ebp
	push	esi

; 7791 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsAskedTo
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsAskedTo
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsAskedTo
	xor	bl, bl
$LN5@lIsAskedTo:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsAskedTo
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsAskedTo:

; 7792 : 	PlayerTypes eWithPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 7793 : 
; 7794 : 	const bool bAsked = pkPlayer->GetDiplomacyAI()->IsPlayerAskedNotToConvert(eWithPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerAskedNotToConvert@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerAskedNotToConvert

; 7795 : 
; 7796 : 	lua_pushboolean(L, bAsked);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 7797 : 	return 1;

	mov	eax, 1
	pop	ebx

; 7798 : }

	ret	0
?lIsAskedToStopConverting@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsAskedToStopConverting
_TEXT	ENDS
PUBLIC	?lIsAskedToStopDigging@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAskedToStopDigging
EXTRN	?IsPlayerAskedNotToDig@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerAskedNotToDig
; Function compile flags: /Ogtpy
;	COMDAT ?lIsAskedToStopDigging@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsAskedToStopDigging@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsAskedToStopDigging, COMDAT

; 7803 : {

	push	ebx
	push	ebp
	push	esi

; 7804 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsAskedTo@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsAskedTo@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsAskedTo@2
	xor	bl, bl
$LN5@lIsAskedTo@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsAskedTo@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsAskedTo@2:

; 7805 : 	PlayerTypes eWithPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 7806 : 
; 7807 : 	const bool bAsked = pkPlayer->GetDiplomacyAI()->IsPlayerAskedNotToDig(eWithPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerAskedNotToDig@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerAskedNotToDig

; 7808 : 
; 7809 : 	lua_pushboolean(L, bAsked);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 7810 : 	return 1;

	mov	eax, 1
	pop	ebx

; 7811 : }

	ret	0
?lIsAskedToStopDigging@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsAskedToStopDigging
_TEXT	ENDS
PUBLIC	?lIsDoFMessageTooSoon@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsDoFMessageTooSoon
EXTRN	?IsDoFMessageTooSoon@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsDoFMessageTooSoon
; Function compile flags: /Ogtpy
;	COMDAT ?lIsDoFMessageTooSoon@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsDoFMessageTooSoon@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsDoFMessageTooSoon, COMDAT

; 7816 : {

	push	ebx
	push	ebp
	push	esi

; 7817 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsDoFMess
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsDoFMess
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsDoFMess
	xor	bl, bl
$LN5@lIsDoFMess:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsDoFMess
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsDoFMess:

; 7818 : 	PlayerTypes eWithPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 7819 : 
; 7820 : 	const bool bTooSoon = pkPlayer->GetDiplomacyAI()->IsDoFMessageTooSoon(eWithPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsDoFMessageTooSoon@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsDoFMessageTooSoon

; 7821 : 
; 7822 : 	lua_pushboolean(L, bTooSoon);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 7823 : 	return 1;

	mov	eax, 1
	pop	ebx

; 7824 : }

	ret	0
?lIsDoFMessageTooSoon@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsDoFMessageTooSoon
_TEXT	ENDS
PUBLIC	?lIsDoF@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lIsDoF
EXTRN	?IsDoFAccepted@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsDoFAccepted
; Function compile flags: /Ogtpy
;	COMDAT ?lIsDoF@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsDoF@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC		; CvLuaPlayer::lIsDoF, COMDAT

; 7828 : {

	push	ebx
	push	ebp
	push	esi

; 7829 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsDoF
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsDoF
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsDoF
	xor	bl, bl
$LN5@lIsDoF:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsDoF
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsDoF:

; 7830 : 	PlayerTypes eWithPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 7831 : 
; 7832 : 	const bool bTooSoon = pkPlayer->GetDiplomacyAI()->IsDoFAccepted(eWithPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsDoFAccepted@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsDoFAccepted

; 7833 : 
; 7834 : 	lua_pushboolean(L, bTooSoon);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 7835 : 	return 1;

	mov	eax, 1
	pop	ebx

; 7836 : }

	ret	0
?lIsDoF@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP		; CvLuaPlayer::lIsDoF
_TEXT	ENDS
PUBLIC	?lGetDoFCounter@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetDoFCounter
EXTRN	?GetDoFCounter@CvDiplomacyAI@@QBEFW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetDoFCounter
; Function compile flags: /Ogtpy
;	COMDAT ?lGetDoFCounter@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetDoFCounter@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetDoFCounter, COMDAT

; 7839 : {

	push	ebx
	push	ebp
	push	esi

; 7840 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetDoFCou
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetDoFCou
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetDoFCou
	xor	bl, bl
$LN5@lGetDoFCou:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetDoFCou
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetDoFCou:

; 7841 : 	PlayerTypes eWithPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 7842 : 
; 7843 : 	const int iTurnsLeft = pkPlayer->GetDiplomacyAI()->GetDoFCounter(eWithPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetDoFCounter@CvDiplomacyAI@@QBEFW4PlayerTypes@@@Z ; CvDiplomacyAI::GetDoFCounter
	cwde

; 7844 : 
; 7845 : 	lua_pushinteger(L, iTurnsLeft);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 7846 : 	return 1;

	mov	eax, 1
	pop	ebx

; 7847 : }

	ret	0
?lGetDoFCounter@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetDoFCounter
_TEXT	ENDS
PUBLIC	?lIsPlayerDoFwithAnyFriend@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerDoFwithAnyFriend
EXTRN	?IsPlayerDoFwithAnyFriend@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerDoFwithAnyFriend
; Function compile flags: /Ogtpy
;	COMDAT ?lIsPlayerDoFwithAnyFriend@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsPlayerDoFwithAnyFriend@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerDoFwithAnyFriend, COMDAT

; 7850 : {

	push	ebx
	push	ebp
	push	esi

; 7851 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsPlayerD
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsPlayerD
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsPlayerD
	xor	bl, bl
$LN5@lIsPlayerD:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsPlayerD
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsPlayerD:

; 7852 : 	PlayerTypes eWithPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 7853 : 
; 7854 : 	const bool bTooSoon = pkPlayer->GetDiplomacyAI()->IsPlayerDoFwithAnyFriend(eWithPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerDoFwithAnyFriend@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerDoFwithAnyFriend

; 7855 : 
; 7856 : 	lua_pushboolean(L, bTooSoon);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 7857 : 	return 1;

	mov	eax, 1
	pop	ebx

; 7858 : }

	ret	0
?lIsPlayerDoFwithAnyFriend@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerDoFwithAnyFriend
_TEXT	ENDS
PUBLIC	?lIsPlayerDoFwithAnyEnemy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerDoFwithAnyEnemy
EXTRN	?IsPlayerDoFwithAnyEnemy@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerDoFwithAnyEnemy
; Function compile flags: /Ogtpy
;	COMDAT ?lIsPlayerDoFwithAnyEnemy@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsPlayerDoFwithAnyEnemy@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerDoFwithAnyEnemy, COMDAT

; 7861 : {

	push	ebx
	push	ebp
	push	esi

; 7862 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsPlayerD@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsPlayerD@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsPlayerD@2
	xor	bl, bl
$LN5@lIsPlayerD@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsPlayerD@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsPlayerD@2:

; 7863 : 	PlayerTypes eWithPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 7864 : 
; 7865 : 	const bool bTooSoon = pkPlayer->GetDiplomacyAI()->IsPlayerDoFwithAnyEnemy(eWithPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerDoFwithAnyEnemy@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerDoFwithAnyEnemy

; 7866 : 
; 7867 : 	lua_pushboolean(L, bTooSoon);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 7868 : 	return 1;

	mov	eax, 1
	pop	ebx

; 7869 : }

	ret	0
?lIsPlayerDoFwithAnyEnemy@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerDoFwithAnyEnemy
_TEXT	ENDS
PUBLIC	?lIsPlayerDenouncedFriend@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerDenouncedFriend
EXTRN	?IsPlayerDenouncedFriend@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerDenouncedFriend
; Function compile flags: /Ogtpy
;	COMDAT ?lIsPlayerDenouncedFriend@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsPlayerDenouncedFriend@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerDenouncedFriend, COMDAT

; 7872 : {

	push	ebx
	push	ebp
	push	esi

; 7873 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsPlayerD@3
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsPlayerD@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsPlayerD@3
	xor	bl, bl
$LN5@lIsPlayerD@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsPlayerD@3
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsPlayerD@3:

; 7874 : 	PlayerTypes eWithPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 7875 : 
; 7876 : 	const bool bTooSoon = pkPlayer->GetDiplomacyAI()->IsPlayerDenouncedFriend(eWithPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerDenouncedFriend@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerDenouncedFriend

; 7877 : 
; 7878 : 	lua_pushboolean(L, bTooSoon);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 7879 : 	return 1;

	mov	eax, 1
	pop	ebx

; 7880 : }

	ret	0
?lIsPlayerDenouncedFriend@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerDenouncedFriend
_TEXT	ENDS
PUBLIC	?lIsPlayerDenouncedEnemy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerDenouncedEnemy
EXTRN	?IsPlayerDenouncedEnemy@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerDenouncedEnemy
; Function compile flags: /Ogtpy
;	COMDAT ?lIsPlayerDenouncedEnemy@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsPlayerDenouncedEnemy@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerDenouncedEnemy, COMDAT

; 7883 : {

	push	ebx
	push	ebp
	push	esi

; 7884 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsPlayerD@4
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsPlayerD@4
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsPlayerD@4
	xor	bl, bl
$LN5@lIsPlayerD@4:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsPlayerD@4
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsPlayerD@4:

; 7885 : 	PlayerTypes eWithPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 7886 : 
; 7887 : 	const bool bTooSoon = pkPlayer->GetDiplomacyAI()->IsPlayerDenouncedEnemy(eWithPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerDenouncedEnemy@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerDenouncedEnemy

; 7888 : 
; 7889 : 	lua_pushboolean(L, bTooSoon);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 7890 : 	return 1;

	mov	eax, 1
	pop	ebx

; 7891 : }

	ret	0
?lIsPlayerDenouncedEnemy@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerDenouncedEnemy
_TEXT	ENDS
PUBLIC	?lIsUntrustworthyFriend@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsUntrustworthyFriend
EXTRN	?IsUntrustworthyFriend@CvDiplomacyAI@@QAE_NXZ:PROC ; CvDiplomacyAI::IsUntrustworthyFriend
; Function compile flags: /Ogtpy
;	COMDAT ?lIsUntrustworthyFriend@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsUntrustworthyFriend@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsUntrustworthyFriend, COMDAT

; 7894 : {

	push	ebx
	push	ebp
	push	esi

; 7895 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsUntrust
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsUntrust
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsUntrust
	xor	bl, bl
$LN5@lIsUntrust:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsUntrust
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsUntrust:

; 7896 : 
; 7897 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsUntrustworthyFriend();

	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsUntrustworthyFriend@CvDiplomacyAI@@QAE_NXZ ; CvDiplomacyAI::IsUntrustworthyFriend

; 7898 : 
; 7899 : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 7900 : 	return 1;

	mov	eax, 1
	pop	ebx

; 7901 : }

	ret	0
?lIsUntrustworthyFriend@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsUntrustworthyFriend
_TEXT	ENDS
PUBLIC	?lGetNumFriendsDenouncedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumFriendsDenouncedBy
EXTRN	?GetNumFriendsDenouncedBy@CvDiplomacyAI@@QAEHXZ:PROC ; CvDiplomacyAI::GetNumFriendsDenouncedBy
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumFriendsDenouncedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumFriendsDenouncedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumFriendsDenouncedBy, COMDAT

; 7904 : {

	push	ebx
	push	ebp
	push	esi

; 7905 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumFri
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumFri
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumFri
	xor	bl, bl
$LN5@lGetNumFri:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumFri
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumFri:

; 7906 : 
; 7907 : 	const int iValue = pkPlayer->GetDiplomacyAI()->GetNumFriendsDenouncedBy();

	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetNumFriendsDenouncedBy@CvDiplomacyAI@@QAEHXZ ; CvDiplomacyAI::GetNumFriendsDenouncedBy

; 7908 : 
; 7909 : 	lua_pushinteger(L, iValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 7910 : 	return 1;

	mov	eax, 1
	pop	ebx

; 7911 : }

	ret	0
?lGetNumFriendsDenouncedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumFriendsDenouncedBy
_TEXT	ENDS
PUBLIC	?lIsFriendDenouncedUs@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsFriendDenouncedUs
EXTRN	?IsFriendDenouncedUs@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsFriendDenouncedUs
; Function compile flags: /Ogtpy
;	COMDAT ?lIsFriendDenouncedUs@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsFriendDenouncedUs@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsFriendDenouncedUs, COMDAT

; 7914 : {

	push	ebx
	push	ebp
	push	esi

; 7915 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsFriendD
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsFriendD
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsFriendD
	xor	bl, bl
$LN5@lIsFriendD:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsFriendD
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsFriendD:

; 7916 : 	PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 7917 : 
; 7918 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsFriendDenouncedUs(ePlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsFriendDenouncedUs@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsFriendDenouncedUs

; 7919 : 
; 7920 : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 7921 : 	return 1;

	mov	eax, 1
	pop	ebx

; 7922 : }

	ret	0
?lIsFriendDenouncedUs@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsFriendDenouncedUs
_TEXT	ENDS
PUBLIC	?lGetWeDenouncedFriendCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetWeDenouncedFriendCount
EXTRN	?GetWeDenouncedFriendCount@CvDiplomacyAI@@QAEHXZ:PROC ; CvDiplomacyAI::GetWeDenouncedFriendCount
; Function compile flags: /Ogtpy
;	COMDAT ?lGetWeDenouncedFriendCount@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetWeDenouncedFriendCount@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetWeDenouncedFriendCount, COMDAT

; 7925 : {

	push	ebx
	push	ebp
	push	esi

; 7926 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetWeDeno
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetWeDeno
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetWeDeno
	xor	bl, bl
$LN5@lGetWeDeno:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetWeDeno
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetWeDeno:

; 7927 : 
; 7928 : 	const int iValue = pkPlayer->GetDiplomacyAI()->GetWeDenouncedFriendCount();

	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetWeDenouncedFriendCount@CvDiplomacyAI@@QAEHXZ ; CvDiplomacyAI::GetWeDenouncedFriendCount

; 7929 : 
; 7930 : 	lua_pushinteger(L, iValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 7931 : 	return 1;

	mov	eax, 1
	pop	ebx

; 7932 : }

	ret	0
?lGetWeDenouncedFriendCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetWeDenouncedFriendCount
_TEXT	ENDS
PUBLIC	?lIsFriendDeclaredWarOnUs@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsFriendDeclaredWarOnUs
EXTRN	?IsFriendDeclaredWarOnUs@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsFriendDeclaredWarOnUs
; Function compile flags: /Ogtpy
;	COMDAT ?lIsFriendDeclaredWarOnUs@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsFriendDeclaredWarOnUs@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsFriendDeclaredWarOnUs, COMDAT

; 7935 : {

	push	ebx
	push	ebp
	push	esi

; 7936 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsFriendD@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsFriendD@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsFriendD@2
	xor	bl, bl
$LN5@lIsFriendD@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsFriendD@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsFriendD@2:

; 7937 : 	PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 7938 : 
; 7939 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsFriendDeclaredWarOnUs(ePlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsFriendDeclaredWarOnUs@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsFriendDeclaredWarOnUs

; 7940 : 
; 7941 : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 7942 : 	return 1;

	mov	eax, 1
	pop	ebx

; 7943 : }

	ret	0
?lIsFriendDeclaredWarOnUs@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsFriendDeclaredWarOnUs
_TEXT	ENDS
PUBLIC	?lGetWeDeclaredWarOnFriendCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetWeDeclaredWarOnFriendCount
EXTRN	?GetWeDeclaredWarOnFriendCount@CvDiplomacyAI@@QAEHXZ:PROC ; CvDiplomacyAI::GetWeDeclaredWarOnFriendCount
; Function compile flags: /Ogtpy
;	COMDAT ?lGetWeDeclaredWarOnFriendCount@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetWeDeclaredWarOnFriendCount@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetWeDeclaredWarOnFriendCount, COMDAT

; 7946 : {

	push	ebx
	push	ebp
	push	esi

; 7947 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetWeDecl
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetWeDecl
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetWeDecl
	xor	bl, bl
$LN5@lGetWeDecl:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetWeDecl
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetWeDecl:

; 7948 : 
; 7949 : 	const int iValue = pkPlayer->GetDiplomacyAI()->GetWeDeclaredWarOnFriendCount();

	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetWeDeclaredWarOnFriendCount@CvDiplomacyAI@@QAEHXZ ; CvDiplomacyAI::GetWeDeclaredWarOnFriendCount

; 7950 : 
; 7951 : 	lua_pushinteger(L, iValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 7952 : 	return 1;

	mov	eax, 1
	pop	ebx

; 7953 : }

	ret	0
?lGetWeDeclaredWarOnFriendCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetWeDeclaredWarOnFriendCount
_TEXT	ENDS
PUBLIC	?lGetCoopWarAcceptedState@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCoopWarAcceptedState
EXTRN	?GetCoopWarAcceptedState@CvDiplomacyAI@@QBE?AW4CoopWarStates@@W4PlayerTypes@@0@Z:PROC ; CvDiplomacyAI::GetCoopWarAcceptedState
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCoopWarAcceptedState@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCoopWarAcceptedState@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCoopWarAcceptedState, COMDAT

; 7970 : {

	push	ebx
	push	ebp
	push	esi

; 7971 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetCoopWa
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetCoopWa
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetCoopWa
	xor	bl, bl
$LN5@lGetCoopWa:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetCoopWa
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetCoopWa:

; 7972 : 	PlayerTypes eWithPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 7973 : 	PlayerTypes eAgainstPlayer = (PlayerTypes) lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H

; 7974 : 
; 7975 : 	const int iState = pkPlayer->GetDiplomacyAI()->GetCoopWarAcceptedState(eWithPlayer, eAgainstPlayer);

	push	eax
	push	ebx
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetCoopWarAcceptedState@CvDiplomacyAI@@QBE?AW4CoopWarStates@@W4PlayerTypes@@0@Z ; CvDiplomacyAI::GetCoopWarAcceptedState

; 7976 : 
; 7977 : 	lua_pushinteger(L, iState);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 7978 : 	return 1;

	mov	eax, 1
	pop	ebx

; 7979 : }

	ret	0
?lGetCoopWarAcceptedState@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCoopWarAcceptedState
_TEXT	ENDS
PUBLIC	?lGetNumWarsFought@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumWarsFought
EXTRN	?GetNumWarsFought@CvDiplomacyAI@@QBEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetNumWarsFought
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumWarsFought@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumWarsFought@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumWarsFought, COMDAT

; 7982 : {

	push	ebx
	push	ebp
	push	esi

; 7983 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumWar
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumWar
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumWar
	xor	bl, bl
$LN5@lGetNumWar:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumWar
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumWar:

; 7984 : 	PlayerTypes eWithPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 7985 : 
; 7986 : 	const int iNum = pkPlayer->GetDiplomacyAI()->GetNumWarsFought(eWithPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetNumWarsFought@CvDiplomacyAI@@QBEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetNumWarsFought

; 7987 : 
; 7988 : 	lua_pushinteger(L, iNum);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 7989 : 	return 1;

	mov	eax, 1
	pop	ebx

; 7990 : }

	ret	0
?lGetNumWarsFought@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumWarsFought
_TEXT	ENDS
PUBLIC	?lGetLandDisputeLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetLandDisputeLevel
EXTRN	?GetLandDisputeLevel@CvDiplomacyAI@@QBE?AW4DisputeLevelTypes@@W4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetLandDisputeLevel
; Function compile flags: /Ogtpy
;	COMDAT ?lGetLandDisputeLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetLandDisputeLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetLandDisputeLevel, COMDAT

; 7994 : {

	push	ebx
	push	ebp
	push	esi

; 7995 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetLandDi
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetLandDi
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetLandDi
	xor	bl, bl
$LN5@lGetLandDi:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetLandDi
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetLandDi:

; 7996 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 7997 : 
; 7998 : 	const int iValue = pkPlayer->GetDiplomacyAI()->GetLandDisputeLevel(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetLandDisputeLevel@CvDiplomacyAI@@QBE?AW4DisputeLevelTypes@@W4PlayerTypes@@@Z ; CvDiplomacyAI::GetLandDisputeLevel

; 7999 : 
; 8000 : 	lua_pushinteger(L, iValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8001 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8002 : }

	ret	0
?lGetLandDisputeLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetLandDisputeLevel
_TEXT	ENDS
PUBLIC	?lGetVictoryDisputeLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetVictoryDisputeLevel
EXTRN	?GetVictoryDisputeLevel@CvDiplomacyAI@@QBE?AW4DisputeLevelTypes@@W4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetVictoryDisputeLevel
; Function compile flags: /Ogtpy
;	COMDAT ?lGetVictoryDisputeLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetVictoryDisputeLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetVictoryDisputeLevel, COMDAT

; 8005 : {

	push	ebx
	push	ebp
	push	esi

; 8006 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetVictor
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetVictor
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetVictor
	xor	bl, bl
$LN5@lGetVictor:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetVictor
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetVictor:

; 8007 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8008 : 
; 8009 : 	const int iValue = pkPlayer->GetDiplomacyAI()->GetVictoryDisputeLevel(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetVictoryDisputeLevel@CvDiplomacyAI@@QBE?AW4DisputeLevelTypes@@W4PlayerTypes@@@Z ; CvDiplomacyAI::GetVictoryDisputeLevel

; 8010 : 
; 8011 : 	lua_pushinteger(L, iValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8012 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8013 : }

	ret	0
?lGetVictoryDisputeLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetVictoryDisputeLevel
_TEXT	ENDS
PUBLIC	?lGetWonderDisputeLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetWonderDisputeLevel
EXTRN	?GetWonderDisputeLevel@CvDiplomacyAI@@QBE?AW4DisputeLevelTypes@@W4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetWonderDisputeLevel
; Function compile flags: /Ogtpy
;	COMDAT ?lGetWonderDisputeLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetWonderDisputeLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetWonderDisputeLevel, COMDAT

; 8016 : {

	push	ebx
	push	ebp
	push	esi

; 8017 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetWonder
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetWonder
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetWonder
	xor	bl, bl
$LN5@lGetWonder:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetWonder
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetWonder:

; 8018 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8019 : 
; 8020 : 	const int iValue = pkPlayer->GetDiplomacyAI()->GetWonderDisputeLevel(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetWonderDisputeLevel@CvDiplomacyAI@@QBE?AW4DisputeLevelTypes@@W4PlayerTypes@@@Z ; CvDiplomacyAI::GetWonderDisputeLevel

; 8021 : 
; 8022 : 	lua_pushinteger(L, iValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8023 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8024 : }

	ret	0
?lGetWonderDisputeLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetWonderDisputeLevel
_TEXT	ENDS
PUBLIC	?lGetMinorCivDisputeLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivDisputeLevel
EXTRN	?GetMinorCivDisputeLevel@CvDiplomacyAI@@QBE?AW4DisputeLevelTypes@@W4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetMinorCivDisputeLevel
; Function compile flags: /Ogtpy
;	COMDAT ?lGetMinorCivDisputeLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMinorCivDisputeLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMinorCivDisputeLevel, COMDAT

; 8027 : {

	push	ebx
	push	ebp
	push	esi

; 8028 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetMinorC@24
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetMinorC@24
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetMinorC@24
	xor	bl, bl
$LN5@lGetMinorC@24:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetMinorC@24
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetMinorC@24:

; 8029 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8030 : 
; 8031 : 	const int iValue = pkPlayer->GetDiplomacyAI()->GetMinorCivDisputeLevel(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetMinorCivDisputeLevel@CvDiplomacyAI@@QBE?AW4DisputeLevelTypes@@W4PlayerTypes@@@Z ; CvDiplomacyAI::GetMinorCivDisputeLevel

; 8032 : 
; 8033 : 	lua_pushinteger(L, iValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8034 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8035 : }

	ret	0
?lGetMinorCivDisputeLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMinorCivDisputeLevel
_TEXT	ENDS
PUBLIC	?lGetWarmongerThreat@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetWarmongerThreat
EXTRN	?GetWarmongerThreat@CvDiplomacyAI@@QBE?AW4ThreatTypes@@W4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetWarmongerThreat
; Function compile flags: /Ogtpy
;	COMDAT ?lGetWarmongerThreat@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetWarmongerThreat@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetWarmongerThreat, COMDAT

; 8038 : {

	push	ebx
	push	ebp
	push	esi

; 8039 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetWarmon
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetWarmon
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetWarmon
	xor	bl, bl
$LN5@lGetWarmon:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetWarmon
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetWarmon:

; 8040 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8041 : 
; 8042 : 	const int iValue = pkPlayer->GetDiplomacyAI()->GetWarmongerThreat(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetWarmongerThreat@CvDiplomacyAI@@QBE?AW4ThreatTypes@@W4PlayerTypes@@@Z ; CvDiplomacyAI::GetWarmongerThreat

; 8043 : 
; 8044 : 	lua_pushinteger(L, iValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8045 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8046 : }

	ret	0
?lGetWarmongerThreat@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetWarmongerThreat
_TEXT	ENDS
PUBLIC	?lIsPlayerNoSettleRequestEverAsked@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerNoSettleRequestEverAsked
EXTRN	?IsPlayerNoSettleRequestEverAsked@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerNoSettleRequestEverAsked
; Function compile flags: /Ogtpy
;	COMDAT ?lIsPlayerNoSettleRequestEverAsked@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsPlayerNoSettleRequestEverAsked@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerNoSettleRequestEverAsked, COMDAT

; 8049 : {

	push	ebx
	push	ebp
	push	esi

; 8050 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsPlayerN
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsPlayerN
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsPlayerN
	xor	bl, bl
$LN5@lIsPlayerN:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsPlayerN
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsPlayerN:

; 8051 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8052 : 
; 8053 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsPlayerNoSettleRequestEverAsked(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerNoSettleRequestEverAsked@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerNoSettleRequestEverAsked

; 8054 : 
; 8055 : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8056 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8057 : }

	ret	0
?lIsPlayerNoSettleRequestEverAsked@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerNoSettleRequestEverAsked
_TEXT	ENDS
PUBLIC	?lIsPlayerStopSpyingRequestEverAsked@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerStopSpyingRequestEverAsked
EXTRN	?IsPlayerStopSpyingRequestEverAsked@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerStopSpyingRequestEverAsked
; Function compile flags: /Ogtpy
;	COMDAT ?lIsPlayerStopSpyingRequestEverAsked@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsPlayerStopSpyingRequestEverAsked@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerStopSpyingRequestEverAsked, COMDAT

; 8060 : {

	push	ebx
	push	ebp
	push	esi

; 8061 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsPlayerS
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsPlayerS
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsPlayerS
	xor	bl, bl
$LN5@lIsPlayerS:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsPlayerS
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsPlayerS:

; 8062 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8063 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsPlayerStopSpyingRequestEverAsked(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerStopSpyingRequestEverAsked@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerStopSpyingRequestEverAsked

; 8064 : 
; 8065 : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8066 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8067 : }

	ret	0
?lIsPlayerStopSpyingRequestEverAsked@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerStopSpyingRequestEverAsked
_TEXT	ENDS
PUBLIC	?lIsDemandEverMade@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsDemandEverMade
EXTRN	?IsDemandEverMade@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsDemandEverMade
; Function compile flags: /Ogtpy
;	COMDAT ?lIsDemandEverMade@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsDemandEverMade@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsDemandEverMade, COMDAT

; 8070 : {

	push	ebx
	push	ebp
	push	esi

; 8071 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsDemandE
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsDemandE
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsDemandE
	xor	bl, bl
$LN5@lIsDemandE:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsDemandE
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsDemandE:

; 8072 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8073 : 
; 8074 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsDemandEverMade(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsDemandEverMade@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsDemandEverMade

; 8075 : 
; 8076 : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8077 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8078 : }

	ret	0
?lIsDemandEverMade@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsDemandEverMade
_TEXT	ENDS
PUBLIC	?lGetNumCiviliansReturnedToMe@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumCiviliansReturnedToMe
EXTRN	?GetNumCiviliansReturnedToMe@CvDiplomacyAI@@QBEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetNumCiviliansReturnedToMe
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumCiviliansReturnedToMe@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumCiviliansReturnedToMe@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumCiviliansReturnedToMe, COMDAT

; 8081 : {

	push	ebx
	push	ebp
	push	esi

; 8082 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumCiv@3
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumCiv@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumCiv@3
	xor	bl, bl
$LN5@lGetNumCiv@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumCiv@3
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumCiv@3:

; 8083 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8084 : 
; 8085 : 	const int iValue = pkPlayer->GetDiplomacyAI()->GetNumCiviliansReturnedToMe(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetNumCiviliansReturnedToMe@CvDiplomacyAI@@QBEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetNumCiviliansReturnedToMe

; 8086 : 
; 8087 : 	lua_pushinteger(L, iValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8088 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8089 : }

	ret	0
?lGetNumCiviliansReturnedToMe@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumCiviliansReturnedToMe
_TEXT	ENDS
PUBLIC	?lGetNumLandmarksBuiltForMe@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumLandmarksBuiltForMe
EXTRN	?GetNumLandmarksBuiltForMe@CvDiplomacyAI@@QBEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetNumLandmarksBuiltForMe
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumLandmarksBuiltForMe@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumLandmarksBuiltForMe@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumLandmarksBuiltForMe, COMDAT

; 8092 : {

	push	ebx
	push	ebp
	push	esi

; 8093 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumLan
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumLan
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumLan
	xor	bl, bl
$LN5@lGetNumLan:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumLan
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumLan:

; 8094 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8095 : 
; 8096 : 	const int iValue = pkPlayer->GetDiplomacyAI()->GetNumLandmarksBuiltForMe(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetNumLandmarksBuiltForMe@CvDiplomacyAI@@QBEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetNumLandmarksBuiltForMe

; 8097 : 
; 8098 : 	lua_pushinteger(L, iValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8099 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8100 : }

	ret	0
?lGetNumLandmarksBuiltForMe@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumLandmarksBuiltForMe
_TEXT	ENDS
PUBLIC	?lGetNumTimesCultureBombed@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumTimesCultureBombed
EXTRN	?GetNumTimesCultureBombed@CvDiplomacyAI@@QBEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetNumTimesCultureBombed
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumTimesCultureBombed@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumTimesCultureBombed@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumTimesCultureBombed, COMDAT

; 8103 : {

	push	ebx
	push	ebp
	push	esi

; 8104 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumTim
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumTim
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumTim
	xor	bl, bl
$LN5@lGetNumTim:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumTim
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumTim:

; 8105 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8106 : 
; 8107 : 	const int iValue = pkPlayer->GetDiplomacyAI()->GetNumTimesCultureBombed(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetNumTimesCultureBombed@CvDiplomacyAI@@QBEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetNumTimesCultureBombed

; 8108 : 
; 8109 : 	lua_pushinteger(L, iValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8110 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8111 : }

	ret	0
?lGetNumTimesCultureBombed@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumTimesCultureBombed
_TEXT	ENDS
PUBLIC	?lGetNegativeReligiousConversionPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNegativeReligiousConversionPoints
EXTRN	?GetNegativeReligiousConversionPoints@CvDiplomacyAI@@QBEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetNegativeReligiousConversionPoints
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNegativeReligiousConversionPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNegativeReligiousConversionPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNegativeReligiousConversionPoints, COMDAT

; 8114 : {

	push	ebx
	push	ebp
	push	esi

; 8115 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNegati
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNegati
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNegati
	xor	bl, bl
$LN5@lGetNegati:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNegati
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNegati:

; 8116 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8117 : 
; 8118 : 	const int iValue = pkPlayer->GetDiplomacyAI()->GetNegativeReligiousConversionPoints(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetNegativeReligiousConversionPoints@CvDiplomacyAI@@QBEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetNegativeReligiousConversionPoints

; 8119 : 
; 8120 : 	lua_pushinteger(L, iValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8121 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8122 : }

	ret	0
?lGetNegativeReligiousConversionPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNegativeReligiousConversionPoints
_TEXT	ENDS
PUBLIC	?lGetNegativeArchaeologyPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNegativeArchaeologyPoints
EXTRN	?GetNegativeArchaeologyPoints@CvDiplomacyAI@@QBEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetNegativeArchaeologyPoints
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNegativeArchaeologyPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNegativeArchaeologyPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNegativeArchaeologyPoints, COMDAT

; 8125 : {

	push	ebx
	push	ebp
	push	esi

; 8126 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNegati@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNegati@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNegati@2
	xor	bl, bl
$LN5@lGetNegati@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNegati@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNegati@2:

; 8127 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8128 : 
; 8129 : 	const int iValue = pkPlayer->GetDiplomacyAI()->GetNegativeArchaeologyPoints(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetNegativeArchaeologyPoints@CvDiplomacyAI@@QBEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetNegativeArchaeologyPoints

; 8130 : 
; 8131 : 	lua_pushinteger(L, iValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8132 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8133 : }

	ret	0
?lGetNegativeArchaeologyPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNegativeArchaeologyPoints
_TEXT	ENDS
PUBLIC	?lHasOthersReligionInMostCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasOthersReligionInMostCities
EXTRN	?HasOthersReligionInMostCities@CvPlayerReligions@@QBE_NW4PlayerTypes@@@Z:PROC ; CvPlayerReligions::HasOthersReligionInMostCities
; Function compile flags: /Ogtpy
;	COMDAT ?lHasOthersReligionInMostCities@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lHasOthersReligionInMostCities@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lHasOthersReligionInMostCities, COMDAT

; 8136 : {

	push	ebx
	push	ebp
	push	esi

; 8137 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lHasOthers
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lHasOthers
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lHasOthers
	xor	bl, bl
$LN5@lHasOthers:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lHasOthers
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lHasOthers:

; 8138 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8139 : 
; 8140 : 	const bool bValue = pkPlayer->GetReligions()->HasOthersReligionInMostCities(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	ecx, eax
	call	?HasOthersReligionInMostCities@CvPlayerReligions@@QBE_NW4PlayerTypes@@@Z ; CvPlayerReligions::HasOthersReligionInMostCities

; 8141 : 
; 8142 : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8143 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8144 : }

	ret	0
?lHasOthersReligionInMostCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lHasOthersReligionInMostCities
_TEXT	ENDS
PUBLIC	?lIsPlayerBrokenMilitaryPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerBrokenMilitaryPromise
EXTRN	?IsPlayerBrokenMilitaryPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerBrokenMilitaryPromise
; Function compile flags: /Ogtpy
;	COMDAT ?lIsPlayerBrokenMilitaryPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsPlayerBrokenMilitaryPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerBrokenMilitaryPromise, COMDAT

; 8147 : {

	push	ebx
	push	ebp
	push	esi

; 8148 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsPlayerB
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsPlayerB
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsPlayerB
	xor	bl, bl
$LN5@lIsPlayerB:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsPlayerB
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsPlayerB:

; 8149 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8150 : 
; 8151 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsPlayerBrokenMilitaryPromise(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerBrokenMilitaryPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerBrokenMilitaryPromise

; 8152 : 
; 8153 : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8154 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8155 : }

	ret	0
?lIsPlayerBrokenMilitaryPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerBrokenMilitaryPromise
_TEXT	ENDS
PUBLIC	?lIsPlayerIgnoredMilitaryPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerIgnoredMilitaryPromise
EXTRN	?IsPlayerIgnoredMilitaryPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerIgnoredMilitaryPromise
; Function compile flags: /Ogtpy
;	COMDAT ?lIsPlayerIgnoredMilitaryPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsPlayerIgnoredMilitaryPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerIgnoredMilitaryPromise, COMDAT

; 8158 : {

	push	ebx
	push	ebp
	push	esi

; 8159 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsPlayerI
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsPlayerI
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsPlayerI
	xor	bl, bl
$LN5@lIsPlayerI:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsPlayerI
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsPlayerI:

; 8160 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8161 : 
; 8162 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsPlayerIgnoredMilitaryPromise(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerIgnoredMilitaryPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerIgnoredMilitaryPromise

; 8163 : 
; 8164 : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8165 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8166 : }

	ret	0
?lIsPlayerIgnoredMilitaryPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerIgnoredMilitaryPromise
_TEXT	ENDS
PUBLIC	?lIsPlayerBrokenExpansionPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerBrokenExpansionPromise
EXTRN	?IsPlayerBrokenExpansionPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerBrokenExpansionPromise
; Function compile flags: /Ogtpy
;	COMDAT ?lIsPlayerBrokenExpansionPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsPlayerBrokenExpansionPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerBrokenExpansionPromise, COMDAT

; 8169 : {

	push	ebx
	push	ebp
	push	esi

; 8170 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsPlayerB@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsPlayerB@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsPlayerB@2
	xor	bl, bl
$LN5@lIsPlayerB@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsPlayerB@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsPlayerB@2:

; 8171 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8172 : 
; 8173 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsPlayerBrokenExpansionPromise(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerBrokenExpansionPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerBrokenExpansionPromise

; 8174 : 
; 8175 : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8176 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8177 : }

	ret	0
?lIsPlayerBrokenExpansionPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerBrokenExpansionPromise
_TEXT	ENDS
PUBLIC	?lIsPlayerIgnoredExpansionPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerIgnoredExpansionPromise
EXTRN	?IsPlayerIgnoredExpansionPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerIgnoredExpansionPromise
; Function compile flags: /Ogtpy
;	COMDAT ?lIsPlayerIgnoredExpansionPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsPlayerIgnoredExpansionPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerIgnoredExpansionPromise, COMDAT

; 8180 : {

	push	ebx
	push	ebp
	push	esi

; 8181 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsPlayerI@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsPlayerI@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsPlayerI@2
	xor	bl, bl
$LN5@lIsPlayerI@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsPlayerI@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsPlayerI@2:

; 8182 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8183 : 
; 8184 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsPlayerIgnoredExpansionPromise(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerIgnoredExpansionPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerIgnoredExpansionPromise

; 8185 : 
; 8186 : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8187 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8188 : }

	ret	0
?lIsPlayerIgnoredExpansionPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerIgnoredExpansionPromise
_TEXT	ENDS
PUBLIC	?lIsPlayerBrokenBorderPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerBrokenBorderPromise
EXTRN	?IsPlayerBrokenBorderPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerBrokenBorderPromise
; Function compile flags: /Ogtpy
;	COMDAT ?lIsPlayerBrokenBorderPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsPlayerBrokenBorderPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerBrokenBorderPromise, COMDAT

; 8191 : {

	push	ebx
	push	ebp
	push	esi

; 8192 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsPlayerB@3
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsPlayerB@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsPlayerB@3
	xor	bl, bl
$LN5@lIsPlayerB@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsPlayerB@3
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsPlayerB@3:

; 8193 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8194 : 
; 8195 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsPlayerBrokenBorderPromise(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerBrokenBorderPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerBrokenBorderPromise

; 8196 : 
; 8197 : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8198 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8199 : }

	ret	0
?lIsPlayerBrokenBorderPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerBrokenBorderPromise
_TEXT	ENDS
PUBLIC	?lIsPlayerIgnoredBorderPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerIgnoredBorderPromise
EXTRN	?IsPlayerIgnoredBorderPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerIgnoredBorderPromise
; Function compile flags: /Ogtpy
;	COMDAT ?lIsPlayerIgnoredBorderPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsPlayerIgnoredBorderPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerIgnoredBorderPromise, COMDAT

; 8202 : {

	push	ebx
	push	ebp
	push	esi

; 8203 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsPlayerI@3
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsPlayerI@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsPlayerI@3
	xor	bl, bl
$LN5@lIsPlayerI@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsPlayerI@3
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsPlayerI@3:

; 8204 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8205 : 
; 8206 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsPlayerIgnoredBorderPromise(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerIgnoredBorderPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerIgnoredBorderPromise

; 8207 : 
; 8208 : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8209 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8210 : }

	ret	0
?lIsPlayerIgnoredBorderPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerIgnoredBorderPromise
_TEXT	ENDS
PUBLIC	?lIsPlayerBrokenAttackCityStatePromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerBrokenAttackCityStatePromise
EXTRN	?IsPlayerBrokenAttackCityStatePromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerBrokenAttackCityStatePromise
; Function compile flags: /Ogtpy
;	COMDAT ?lIsPlayerBrokenAttackCityStatePromise@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsPlayerBrokenAttackCityStatePromise@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerBrokenAttackCityStatePromise, COMDAT

; 8213 : {

	push	ebx
	push	ebp
	push	esi

; 8214 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsPlayerB@4
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsPlayerB@4
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsPlayerB@4
	xor	bl, bl
$LN5@lIsPlayerB@4:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsPlayerB@4
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsPlayerB@4:

; 8215 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8216 : 
; 8217 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsPlayerBrokenAttackCityStatePromise(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerBrokenAttackCityStatePromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerBrokenAttackCityStatePromise

; 8218 : 
; 8219 : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8220 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8221 : }

	ret	0
?lIsPlayerBrokenAttackCityStatePromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerBrokenAttackCityStatePromise
_TEXT	ENDS
PUBLIC	?lIsPlayerIgnoredAttackCityStatePromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerIgnoredAttackCityStatePromise
EXTRN	?IsPlayerIgnoredAttackCityStatePromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerIgnoredAttackCityStatePromise
; Function compile flags: /Ogtpy
;	COMDAT ?lIsPlayerIgnoredAttackCityStatePromise@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsPlayerIgnoredAttackCityStatePromise@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerIgnoredAttackCityStatePromise, COMDAT

; 8224 : {

	push	ebx
	push	ebp
	push	esi

; 8225 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsPlayerI@4
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsPlayerI@4
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsPlayerI@4
	xor	bl, bl
$LN5@lIsPlayerI@4:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsPlayerI@4
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsPlayerI@4:

; 8226 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8227 : 
; 8228 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsPlayerIgnoredAttackCityStatePromise(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerIgnoredAttackCityStatePromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerIgnoredAttackCityStatePromise

; 8229 : 
; 8230 : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8231 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8232 : }

	ret	0
?lIsPlayerIgnoredAttackCityStatePromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerIgnoredAttackCityStatePromise
_TEXT	ENDS
PUBLIC	?lIsPlayerBrokenBullyCityStatePromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerBrokenBullyCityStatePromise
EXTRN	?IsPlayerBrokenBullyCityStatePromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerBrokenBullyCityStatePromise
; Function compile flags: /Ogtpy
;	COMDAT ?lIsPlayerBrokenBullyCityStatePromise@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsPlayerBrokenBullyCityStatePromise@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerBrokenBullyCityStatePromise, COMDAT

; 8235 : {

	push	ebx
	push	ebp
	push	esi

; 8236 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsPlayerB@5
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsPlayerB@5
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsPlayerB@5
	xor	bl, bl
$LN5@lIsPlayerB@5:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsPlayerB@5
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsPlayerB@5:

; 8237 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8238 : 
; 8239 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsPlayerBrokenBullyCityStatePromise(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerBrokenBullyCityStatePromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerBrokenBullyCityStatePromise

; 8240 : 
; 8241 : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8242 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8243 : }

	ret	0
?lIsPlayerBrokenBullyCityStatePromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerBrokenBullyCityStatePromise
_TEXT	ENDS
PUBLIC	?lIsPlayerIgnoredBullyCityStatePromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerIgnoredBullyCityStatePromise
EXTRN	?IsPlayerIgnoredBullyCityStatePromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerIgnoredBullyCityStatePromise
; Function compile flags: /Ogtpy
;	COMDAT ?lIsPlayerIgnoredBullyCityStatePromise@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsPlayerIgnoredBullyCityStatePromise@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerIgnoredBullyCityStatePromise, COMDAT

; 8246 : {

	push	ebx
	push	ebp
	push	esi

; 8247 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsPlayerI@5
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsPlayerI@5
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsPlayerI@5
	xor	bl, bl
$LN5@lIsPlayerI@5:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsPlayerI@5
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsPlayerI@5:

; 8248 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8249 : 
; 8250 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsPlayerIgnoredBullyCityStatePromise(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerIgnoredBullyCityStatePromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerIgnoredBullyCityStatePromise

; 8251 : 
; 8252 : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8253 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8254 : }

	ret	0
?lIsPlayerIgnoredBullyCityStatePromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerIgnoredBullyCityStatePromise
_TEXT	ENDS
PUBLIC	?lIsPlayerBrokenSpyPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerBrokenSpyPromise
EXTRN	?IsPlayerBrokenSpyPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerBrokenSpyPromise
; Function compile flags: /Ogtpy
;	COMDAT ?lIsPlayerBrokenSpyPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsPlayerBrokenSpyPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerBrokenSpyPromise, COMDAT

; 8257 : {

	push	ebx
	push	ebp
	push	esi

; 8258 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsPlayerB@6
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsPlayerB@6
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsPlayerB@6
	xor	bl, bl
$LN5@lIsPlayerB@6:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsPlayerB@6
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsPlayerB@6:

; 8259 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8260 : 
; 8261 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsPlayerBrokenSpyPromise(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerBrokenSpyPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerBrokenSpyPromise

; 8262 : 
; 8263 : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8264 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8265 : }

	ret	0
?lIsPlayerBrokenSpyPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerBrokenSpyPromise
_TEXT	ENDS
PUBLIC	?lIsPlayerIgnoredSpyPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerIgnoredSpyPromise
EXTRN	?IsPlayerIgnoredSpyPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerIgnoredSpyPromise
; Function compile flags: /Ogtpy
;	COMDAT ?lIsPlayerIgnoredSpyPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsPlayerIgnoredSpyPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerIgnoredSpyPromise, COMDAT

; 8268 : {

	push	ebx
	push	ebp
	push	esi

; 8269 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsPlayerI@6
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsPlayerI@6
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsPlayerI@6
	xor	bl, bl
$LN5@lIsPlayerI@6:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsPlayerI@6
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsPlayerI@6:

; 8270 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8271 : 
; 8272 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsPlayerIgnoredSpyPromise(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerIgnoredSpyPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerIgnoredSpyPromise

; 8273 : 
; 8274 : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8275 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8276 : }

	ret	0
?lIsPlayerIgnoredSpyPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerIgnoredSpyPromise
_TEXT	ENDS
PUBLIC	?lIsPlayerForgivenForSpying@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerForgivenForSpying
EXTRN	?IsPlayerForgaveForSpying@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerForgaveForSpying
; Function compile flags: /Ogtpy
;	COMDAT ?lIsPlayerForgivenForSpying@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsPlayerForgivenForSpying@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerForgivenForSpying, COMDAT

; 8279 : {

	push	ebx
	push	ebp
	push	esi

; 8280 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsPlayerF
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsPlayerF
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsPlayerF
	xor	bl, bl
$LN5@lIsPlayerF:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsPlayerF
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsPlayerF:

; 8281 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8282 : 
; 8283 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsPlayerForgaveForSpying(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerForgaveForSpying@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerForgaveForSpying

; 8284 : 
; 8285 : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8286 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8287 : }

	ret	0
?lIsPlayerForgivenForSpying@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerForgivenForSpying
_TEXT	ENDS
PUBLIC	?lIsPlayerBrokenNoConvertPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerBrokenNoConvertPromise
EXTRN	?IsPlayerBrokenNoConvertPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerBrokenNoConvertPromise
; Function compile flags: /Ogtpy
;	COMDAT ?lIsPlayerBrokenNoConvertPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsPlayerBrokenNoConvertPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerBrokenNoConvertPromise, COMDAT

; 8290 : {

	push	ebx
	push	ebp
	push	esi

; 8291 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsPlayerB@7
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsPlayerB@7
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsPlayerB@7
	xor	bl, bl
$LN5@lIsPlayerB@7:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsPlayerB@7
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsPlayerB@7:

; 8292 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8293 : 
; 8294 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsPlayerBrokenNoConvertPromise(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerBrokenNoConvertPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerBrokenNoConvertPromise

; 8295 : 
; 8296 : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8297 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8298 : }

	ret	0
?lIsPlayerBrokenNoConvertPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerBrokenNoConvertPromise
_TEXT	ENDS
PUBLIC	?lIsPlayerIgnoredNoConvertPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerIgnoredNoConvertPromise
EXTRN	?IsPlayerIgnoredNoConvertPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerIgnoredNoConvertPromise
; Function compile flags: /Ogtpy
;	COMDAT ?lIsPlayerIgnoredNoConvertPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsPlayerIgnoredNoConvertPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerIgnoredNoConvertPromise, COMDAT

; 8301 : {

	push	ebx
	push	ebp
	push	esi

; 8302 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsPlayerI@7
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsPlayerI@7
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsPlayerI@7
	xor	bl, bl
$LN5@lIsPlayerI@7:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsPlayerI@7
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsPlayerI@7:

; 8303 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8304 : 
; 8305 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsPlayerIgnoredNoConvertPromise(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerIgnoredNoConvertPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerIgnoredNoConvertPromise

; 8306 : 
; 8307 : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8308 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8309 : }

	ret	0
?lIsPlayerIgnoredNoConvertPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerIgnoredNoConvertPromise
_TEXT	ENDS
PUBLIC	?lIsPlayerBrokenNoDiggingPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerBrokenNoDiggingPromise
EXTRN	?IsPlayerBrokenNoDiggingPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerBrokenNoDiggingPromise
; Function compile flags: /Ogtpy
;	COMDAT ?lIsPlayerBrokenNoDiggingPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsPlayerBrokenNoDiggingPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerBrokenNoDiggingPromise, COMDAT

; 8312 : {

	push	ebx
	push	ebp
	push	esi

; 8313 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsPlayerB@8
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsPlayerB@8
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsPlayerB@8
	xor	bl, bl
$LN5@lIsPlayerB@8:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsPlayerB@8
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsPlayerB@8:

; 8314 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8315 : 
; 8316 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsPlayerBrokenNoDiggingPromise(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerBrokenNoDiggingPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerBrokenNoDiggingPromise

; 8317 : 
; 8318 : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8319 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8320 : }

	ret	0
?lIsPlayerBrokenNoDiggingPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerBrokenNoDiggingPromise
_TEXT	ENDS
PUBLIC	?lIsPlayerIgnoredNoDiggingPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerIgnoredNoDiggingPromise
EXTRN	?IsPlayerIgnoredNoDiggingPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerIgnoredNoDiggingPromise
; Function compile flags: /Ogtpy
;	COMDAT ?lIsPlayerIgnoredNoDiggingPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsPlayerIgnoredNoDiggingPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerIgnoredNoDiggingPromise, COMDAT

; 8323 : {

	push	ebx
	push	ebp
	push	esi

; 8324 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsPlayerI@8
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsPlayerI@8
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsPlayerI@8
	xor	bl, bl
$LN5@lIsPlayerI@8:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsPlayerI@8
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsPlayerI@8:

; 8325 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8326 : 
; 8327 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsPlayerIgnoredNoDiggingPromise(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerIgnoredNoDiggingPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerIgnoredNoDiggingPromise

; 8328 : 
; 8329 : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8330 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8331 : }

	ret	0
?lIsPlayerIgnoredNoDiggingPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerIgnoredNoDiggingPromise
_TEXT	ENDS
PUBLIC	?lIsPlayerBrokenCoopWarPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerBrokenCoopWarPromise
EXTRN	?IsPlayerBrokenCoopWarPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerBrokenCoopWarPromise
; Function compile flags: /Ogtpy
;	COMDAT ?lIsPlayerBrokenCoopWarPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsPlayerBrokenCoopWarPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerBrokenCoopWarPromise, COMDAT

; 8334 : {

	push	ebx
	push	ebp
	push	esi

; 8335 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsPlayerB@9
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsPlayerB@9
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsPlayerB@9
	xor	bl, bl
$LN5@lIsPlayerB@9:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsPlayerB@9
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsPlayerB@9:

; 8336 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8337 : 
; 8338 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsPlayerBrokenCoopWarPromise(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerBrokenCoopWarPromise@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerBrokenCoopWarPromise

; 8339 : 
; 8340 : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8341 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8342 : }

	ret	0
?lIsPlayerBrokenCoopWarPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerBrokenCoopWarPromise
_TEXT	ENDS
PUBLIC	?lGetOtherPlayerNumProtectedMinorsKilled@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetOtherPlayerNumProtectedMinorsKilled
EXTRN	?GetOtherPlayerNumProtectedMinorsKilled@CvDiplomacyAI@@QBEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetOtherPlayerNumProtectedMinorsKilled
; Function compile flags: /Ogtpy
;	COMDAT ?lGetOtherPlayerNumProtectedMinorsKilled@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetOtherPlayerNumProtectedMinorsKilled@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetOtherPlayerNumProtectedMinorsKilled, COMDAT

; 8345 : {

	push	ebx
	push	ebp
	push	esi

; 8346 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetOtherP
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetOtherP
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetOtherP
	xor	bl, bl
$LN5@lGetOtherP:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetOtherP
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetOtherP:

; 8347 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8348 : 
; 8349 : 	const int iValue = pkPlayer->GetDiplomacyAI()->GetOtherPlayerNumProtectedMinorsKilled(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetOtherPlayerNumProtectedMinorsKilled@CvDiplomacyAI@@QBEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetOtherPlayerNumProtectedMinorsKilled

; 8350 : 
; 8351 : 	lua_pushinteger(L, iValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8352 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8353 : }

	ret	0
?lGetOtherPlayerNumProtectedMinorsKilled@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetOtherPlayerNumProtectedMinorsKilled
_TEXT	ENDS
PUBLIC	?lGetOtherPlayerNumProtectedMinorsAttacked@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetOtherPlayerNumProtectedMinorsAttacked
EXTRN	?GetOtherPlayerNumProtectedMinorsAttacked@CvDiplomacyAI@@QBEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetOtherPlayerNumProtectedMinorsAttacked
; Function compile flags: /Ogtpy
;	COMDAT ?lGetOtherPlayerNumProtectedMinorsAttacked@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetOtherPlayerNumProtectedMinorsAttacked@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetOtherPlayerNumProtectedMinorsAttacked, COMDAT

; 8356 : {

	push	ebx
	push	ebp
	push	esi

; 8357 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetOtherP@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetOtherP@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetOtherP@2
	xor	bl, bl
$LN5@lGetOtherP@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetOtherP@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetOtherP@2:

; 8358 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8359 : 
; 8360 : 	const int iValue = pkPlayer->GetDiplomacyAI()->GetOtherPlayerNumProtectedMinorsAttacked(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetOtherPlayerNumProtectedMinorsAttacked@CvDiplomacyAI@@QBEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetOtherPlayerNumProtectedMinorsAttacked

; 8361 : 
; 8362 : 	lua_pushinteger(L, iValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8363 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8364 : }

	ret	0
?lGetOtherPlayerNumProtectedMinorsAttacked@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetOtherPlayerNumProtectedMinorsAttacked
_TEXT	ENDS
PUBLIC	?lGetTurnsSincePlayerBulliedProtectedMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTurnsSincePlayerBulliedProtectedMinor
EXTRN	?GetTurnsSincePlayerBulliedProtectedMinor@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetTurnsSincePlayerBulliedProtectedMinor
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTurnsSincePlayerBulliedProtectedMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTurnsSincePlayerBulliedProtectedMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTurnsSincePlayerBulliedProtectedMinor, COMDAT

; 8369 : {

	push	ebx
	push	ebp
	push	esi

; 8370 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetTurnsS@3
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetTurnsS@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetTurnsS@3
	xor	bl, bl
$LN5@lGetTurnsS@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetTurnsS@3
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetTurnsS@3:

; 8371 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8372 : 
; 8373 : 	const int iValue = pkPlayer->GetDiplomacyAI()->GetTurnsSincePlayerBulliedProtectedMinor(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetTurnsSincePlayerBulliedProtectedMinor@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetTurnsSincePlayerBulliedProtectedMinor

; 8374 : 
; 8375 : 	lua_pushinteger(L, iValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8376 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8377 : }

	ret	0
?lGetTurnsSincePlayerBulliedProtectedMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTurnsSincePlayerBulliedProtectedMinor
_TEXT	ENDS
PUBLIC	?lIsHasPlayerBulliedProtectedMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsHasPlayerBulliedProtectedMinor
EXTRN	?GetOtherPlayerProtectedMinorBullied@CvDiplomacyAI@@QAE?AW4PlayerTypes@@W42@@Z:PROC ; CvDiplomacyAI::GetOtherPlayerProtectedMinorBullied
; Function compile flags: /Ogtpy
;	COMDAT ?lIsHasPlayerBulliedProtectedMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsHasPlayerBulliedProtectedMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsHasPlayerBulliedProtectedMinor, COMDAT

; 8381 : {

	push	ebx
	push	ebp
	push	esi

; 8382 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsHasPlay
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsHasPlay
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsHasPlay
	xor	bl, bl
$LN5@lIsHasPlay:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsHasPlay
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsHasPlay:

; 8383 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8384 : 
; 8385 : 	const bool bValue = (pkPlayer->GetDiplomacyAI()->GetOtherPlayerProtectedMinorBullied(eOtherPlayer) != NO_PLAYER);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetOtherPlayerProtectedMinorBullied@CvDiplomacyAI@@QAE?AW4PlayerTypes@@W42@@Z ; CvDiplomacyAI::GetOtherPlayerProtectedMinorBullied
	cmp	eax, -1
	setne	al

; 8386 : 
; 8387 : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8388 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8389 : }

	ret	0
?lIsHasPlayerBulliedProtectedMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsHasPlayerBulliedProtectedMinor
_TEXT	ENDS
PUBLIC	?lIsDenouncedPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsDenouncedPlayer
EXTRN	?IsDenouncedPlayer@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsDenouncedPlayer
; Function compile flags: /Ogtpy
;	COMDAT ?lIsDenouncedPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsDenouncedPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsDenouncedPlayer, COMDAT

; 8392 : {

	push	ebx
	push	ebp
	push	esi

; 8393 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsDenounc
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsDenounc
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsDenounc
	xor	bl, bl
$LN5@lIsDenounc:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsDenounc
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsDenounc:

; 8394 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8395 : 
; 8396 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsDenouncedPlayer(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsDenouncedPlayer@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsDenouncedPlayer

; 8397 : 
; 8398 : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8399 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8400 : }

	ret	0
?lIsDenouncedPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsDenouncedPlayer
_TEXT	ENDS
PUBLIC	?lGetDenouncedPlayerCounter@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetDenouncedPlayerCounter
EXTRN	?GetDenouncedPlayerCounter@CvDiplomacyAI@@QBEFW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetDenouncedPlayerCounter
; Function compile flags: /Ogtpy
;	COMDAT ?lGetDenouncedPlayerCounter@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetDenouncedPlayerCounter@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetDenouncedPlayerCounter, COMDAT

; 8403 : {

	push	ebx
	push	ebp
	push	esi

; 8404 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetDenoun
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetDenoun
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetDenoun
	xor	bl, bl
$LN5@lGetDenoun:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetDenoun
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetDenoun:

; 8405 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8406 : 
; 8407 : 	const int iValue = pkPlayer->GetDiplomacyAI()->GetDenouncedPlayerCounter(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetDenouncedPlayerCounter@CvDiplomacyAI@@QBEFW4PlayerTypes@@@Z ; CvDiplomacyAI::GetDenouncedPlayerCounter
	cwde

; 8408 : 
; 8409 : 	lua_pushinteger(L, iValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8410 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8411 : }

	ret	0
?lGetDenouncedPlayerCounter@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetDenouncedPlayerCounter
_TEXT	ENDS
PUBLIC	?lIsDenouncingPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsDenouncingPlayer
EXTRN	?IsDenouncingPlayer@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsDenouncingPlayer
; Function compile flags: /Ogtpy
;	COMDAT ?lIsDenouncingPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsDenouncingPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsDenouncingPlayer, COMDAT

; 8414 : {

	push	ebx
	push	ebp
	push	esi

; 8415 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsDenounc@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsDenounc@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsDenounc@2
	xor	bl, bl
$LN5@lIsDenounc@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsDenounc@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsDenounc@2:

; 8416 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8417 : 
; 8418 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsDenouncingPlayer(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsDenouncingPlayer@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsDenouncingPlayer

; 8419 : 
; 8420 : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8421 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8422 : }

	ret	0
?lIsDenouncingPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsDenouncingPlayer
_TEXT	ENDS
PUBLIC	?lIsPlayerRecklessExpander@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerRecklessExpander
EXTRN	?IsPlayerRecklessExpander@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerRecklessExpander
; Function compile flags: /Ogtpy
;	COMDAT ?lIsPlayerRecklessExpander@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsPlayerRecklessExpander@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsPlayerRecklessExpander, COMDAT

; 8425 : {

	push	ebx
	push	ebp
	push	esi

; 8426 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsPlayerR
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsPlayerR
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsPlayerR
	xor	bl, bl
$LN5@lIsPlayerR:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsPlayerR
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsPlayerR:

; 8427 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8428 : 
; 8429 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsPlayerRecklessExpander(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerRecklessExpander@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerRecklessExpander

; 8430 : 
; 8431 : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8432 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8433 : }

	ret	0
?lIsPlayerRecklessExpander@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsPlayerRecklessExpander
_TEXT	ENDS
PUBLIC	?lGetRecentTradeValue@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetRecentTradeValue
EXTRN	?GetRecentTradeValue@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetRecentTradeValue
; Function compile flags: /Ogtpy
;	COMDAT ?lGetRecentTradeValue@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetRecentTradeValue@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetRecentTradeValue, COMDAT

; 8436 : {

	push	ebx
	push	ebp
	push	esi

; 8437 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetRecent
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetRecent
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetRecent
	xor	bl, bl
$LN5@lGetRecent:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetRecent
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetRecent:

; 8438 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8439 : 
; 8440 : 	const int iValue = pkPlayer->GetDiplomacyAI()->GetRecentTradeValue(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetRecentTradeValue@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetRecentTradeValue

; 8441 : 
; 8442 : 	lua_pushinteger(L, iValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8443 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8444 : }

	ret	0
?lGetRecentTradeValue@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetRecentTradeValue
_TEXT	ENDS
PUBLIC	?lGetCommonFoeValue@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCommonFoeValue
EXTRN	?GetCommonFoeValue@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetCommonFoeValue
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCommonFoeValue@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCommonFoeValue@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCommonFoeValue, COMDAT

; 8447 : {

	push	ebx
	push	ebp
	push	esi

; 8448 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetCommon
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetCommon
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetCommon
	xor	bl, bl
$LN5@lGetCommon:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetCommon
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetCommon:

; 8449 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8450 : 
; 8451 : 	const int iValue = pkPlayer->GetDiplomacyAI()->GetCommonFoeValue(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetCommonFoeValue@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetCommonFoeValue

; 8452 : 
; 8453 : 	lua_pushinteger(L, iValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8454 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8455 : }

	ret	0
?lGetCommonFoeValue@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCommonFoeValue
_TEXT	ENDS
PUBLIC	?lGetRecentAssistValue@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetRecentAssistValue
EXTRN	?GetRecentAssistValue@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetRecentAssistValue
; Function compile flags: /Ogtpy
;	COMDAT ?lGetRecentAssistValue@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetRecentAssistValue@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetRecentAssistValue, COMDAT

; 8458 : {

	push	ebx
	push	ebp
	push	esi

; 8459 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetRecent@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetRecent@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetRecent@2
	xor	bl, bl
$LN5@lGetRecent@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetRecent@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetRecent@2:

; 8460 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8461 : 
; 8462 : 	const int iValue = pkPlayer->GetDiplomacyAI()->GetRecentAssistValue(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetRecentAssistValue@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetRecentAssistValue

; 8463 : 
; 8464 : 	lua_pushinteger(L, iValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8465 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8466 : }

	ret	0
?lGetRecentAssistValue@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetRecentAssistValue
_TEXT	ENDS
PUBLIC	?lIsGaveAssistanceTo@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsGaveAssistanceTo
EXTRN	?IsGaveAssistanceTo@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsGaveAssistanceTo
; Function compile flags: /Ogtpy
;	COMDAT ?lIsGaveAssistanceTo@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsGaveAssistanceTo@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsGaveAssistanceTo, COMDAT

; 8469 : {

	push	ebx
	push	ebp
	push	esi

; 8470 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsGaveAss
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsGaveAss
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsGaveAss
	xor	bl, bl
$LN5@lIsGaveAss:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsGaveAss
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsGaveAss:

; 8471 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8472 : 
; 8473 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsGaveAssistanceTo(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsGaveAssistanceTo@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsGaveAssistanceTo

; 8474 : 
; 8475 : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8476 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8477 : }

	ret	0
?lIsGaveAssistanceTo@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsGaveAssistanceTo
_TEXT	ENDS
PUBLIC	?lIsHasPaidTributeTo@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsHasPaidTributeTo
EXTRN	?IsHasPaidTributeTo@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsHasPaidTributeTo
; Function compile flags: /Ogtpy
;	COMDAT ?lIsHasPaidTributeTo@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsHasPaidTributeTo@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsHasPaidTributeTo, COMDAT

; 8480 : {

	push	ebx
	push	ebp
	push	esi

; 8481 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsHasPaid
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsHasPaid
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsHasPaid
	xor	bl, bl
$LN5@lIsHasPaid:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsHasPaid
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsHasPaid:

; 8482 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8483 : 
; 8484 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsHasPaidTributeTo(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsHasPaidTributeTo@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsHasPaidTributeTo

; 8485 : 
; 8486 : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8487 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8488 : }

	ret	0
?lIsHasPaidTributeTo@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsHasPaidTributeTo
_TEXT	ENDS
PUBLIC	?lIsNukedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lIsNukedBy
EXTRN	?IsNukedBy@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsNukedBy
; Function compile flags: /Ogtpy
;	COMDAT ?lIsNukedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsNukedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsNukedBy, COMDAT

; 8491 : {

	push	ebx
	push	ebp
	push	esi

; 8492 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsNukedBy
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsNukedBy
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsNukedBy
	xor	bl, bl
$LN5@lIsNukedBy:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsNukedBy
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsNukedBy:

; 8493 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8494 : 
; 8495 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsNukedBy(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsNukedBy@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsNukedBy

; 8496 : 
; 8497 : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8498 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8499 : }

	ret	0
?lIsNukedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsNukedBy
_TEXT	ENDS
PUBLIC	?lIsCapitalCapturedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsCapitalCapturedBy
EXTRN	?IsCapitalCapturedBy@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsCapitalCapturedBy
; Function compile flags: /Ogtpy
;	COMDAT ?lIsCapitalCapturedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsCapitalCapturedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsCapitalCapturedBy, COMDAT

; 8502 : {

	push	ebx
	push	ebp
	push	esi

; 8503 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsCapital@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsCapital@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsCapital@2
	xor	bl, bl
$LN5@lIsCapital@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsCapital@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsCapital@2:

; 8504 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8505 : 
; 8506 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsCapitalCapturedBy(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsCapitalCapturedBy@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsCapitalCapturedBy

; 8507 : 
; 8508 : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8509 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8510 : }

	ret	0
?lIsCapitalCapturedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsCapitalCapturedBy
_TEXT	ENDS
PUBLIC	?lIsAngryAboutProtectedMinorKilled@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAngryAboutProtectedMinorKilled
EXTRN	?IsAngryAboutProtectedMinorKilled@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsAngryAboutProtectedMinorKilled
; Function compile flags: /Ogtpy
;	COMDAT ?lIsAngryAboutProtectedMinorKilled@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsAngryAboutProtectedMinorKilled@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsAngryAboutProtectedMinorKilled, COMDAT

; 8513 : {

	push	ebx
	push	ebp
	push	esi

; 8514 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsAngryAb
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsAngryAb
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsAngryAb
	xor	bl, bl
$LN5@lIsAngryAb:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsAngryAb
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsAngryAb:

; 8515 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8516 : 
; 8517 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsAngryAboutProtectedMinorKilled(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsAngryAboutProtectedMinorKilled@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsAngryAboutProtectedMinorKilled

; 8518 : 
; 8519 : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8520 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8521 : }

	ret	0
?lIsAngryAboutProtectedMinorKilled@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsAngryAboutProtectedMinorKilled
_TEXT	ENDS
PUBLIC	?lIsAngryAboutProtectedMinorAttacked@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAngryAboutProtectedMinorAttacked
EXTRN	?IsAngryAboutProtectedMinorAttacked@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsAngryAboutProtectedMinorAttacked
; Function compile flags: /Ogtpy
;	COMDAT ?lIsAngryAboutProtectedMinorAttacked@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsAngryAboutProtectedMinorAttacked@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsAngryAboutProtectedMinorAttacked, COMDAT

; 8524 : {

	push	ebx
	push	ebp
	push	esi

; 8525 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsAngryAb@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsAngryAb@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsAngryAb@2
	xor	bl, bl
$LN5@lIsAngryAb@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsAngryAb@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsAngryAb@2:

; 8526 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8527 : 
; 8528 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsAngryAboutProtectedMinorAttacked(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsAngryAboutProtectedMinorAttacked@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsAngryAboutProtectedMinorAttacked

; 8529 : 
; 8530 : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8531 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8532 : }

	ret	0
?lIsAngryAboutProtectedMinorAttacked@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsAngryAboutProtectedMinorAttacked
_TEXT	ENDS
PUBLIC	?lIsAngryAboutProtectedMinorBullied@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAngryAboutProtectedMinorBullied
EXTRN	?IsAngryAboutProtectedMinorBullied@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsAngryAboutProtectedMinorBullied
; Function compile flags: /Ogtpy
;	COMDAT ?lIsAngryAboutProtectedMinorBullied@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsAngryAboutProtectedMinorBullied@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsAngryAboutProtectedMinorBullied, COMDAT

; 8535 : {

	push	ebx
	push	ebp
	push	esi

; 8536 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsAngryAb@3
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsAngryAb@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsAngryAb@3
	xor	bl, bl
$LN5@lIsAngryAb@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsAngryAb@3
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsAngryAb@3:

; 8537 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8538 : 
; 8539 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsAngryAboutProtectedMinorBullied(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsAngryAboutProtectedMinorBullied@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsAngryAboutProtectedMinorBullied

; 8540 : 
; 8541 : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8542 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8543 : }

	ret	0
?lIsAngryAboutProtectedMinorBullied@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsAngryAboutProtectedMinorBullied
_TEXT	ENDS
PUBLIC	?lIsAngryAboutSidedWithTheirProtectedMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAngryAboutSidedWithTheirProtectedMinor
EXTRN	?IsAngryAboutSidedWithTheirProtectedMinor@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsAngryAboutSidedWithTheirProtectedMinor
; Function compile flags: /Ogtpy
;	COMDAT ?lIsAngryAboutSidedWithTheirProtectedMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsAngryAboutSidedWithTheirProtectedMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsAngryAboutSidedWithTheirProtectedMinor, COMDAT

; 8546 : {

	push	ebx
	push	ebp
	push	esi

; 8547 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsAngryAb@4
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsAngryAb@4
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsAngryAb@4
	xor	bl, bl
$LN5@lIsAngryAb@4:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsAngryAb@4
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsAngryAb@4:

; 8548 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8549 : 
; 8550 : 	const bool bValue = pkPlayer->GetDiplomacyAI()->IsAngryAboutSidedWithTheirProtectedMinor(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsAngryAboutSidedWithTheirProtectedMinor@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsAngryAboutSidedWithTheirProtectedMinor

; 8551 : 
; 8552 : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8553 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8554 : }

	ret	0
?lIsAngryAboutSidedWithTheirProtectedMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsAngryAboutSidedWithTheirProtectedMinor
_TEXT	ENDS
PUBLIC	?lGetNumTimesRobbedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumTimesRobbedBy
EXTRN	?GetNumTimesRobbedBy@CvDiplomacyAI@@QBEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetNumTimesRobbedBy
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumTimesRobbedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumTimesRobbedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumTimesRobbedBy, COMDAT

; 8557 : {

	push	ebx
	push	ebp
	push	esi

; 8558 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumTim@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumTim@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumTim@2
	xor	bl, bl
$LN5@lGetNumTim@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumTim@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumTim@2:

; 8559 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8560 : 
; 8561 : 	const int iValue = pkPlayer->GetDiplomacyAI()->GetNumTimesRobbedBy(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetNumTimesRobbedBy@CvDiplomacyAI@@QBEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetNumTimesRobbedBy

; 8562 : 
; 8563 : 	lua_pushinteger(L, iValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8564 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8565 : }

	ret	0
?lGetNumTimesRobbedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumTimesRobbedBy
_TEXT	ENDS
PUBLIC	?lGetNumTimesIntrigueSharedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumTimesIntrigueSharedBy
EXTRN	?GetNumTimesIntrigueSharedBy@CvDiplomacyAI@@QBEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetNumTimesIntrigueSharedBy
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumTimesIntrigueSharedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumTimesIntrigueSharedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumTimesIntrigueSharedBy, COMDAT

; 8568 : {

	push	ebx
	push	ebp
	push	esi

; 8569 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumTim@3
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumTim@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumTim@3
	xor	bl, bl
$LN5@lGetNumTim@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumTim@3
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumTim@3:

; 8570 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8571 : 
; 8572 : 	const int iValue = pkPlayer->GetDiplomacyAI()->GetNumTimesIntrigueSharedBy(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetNumTimesIntrigueSharedBy@CvDiplomacyAI@@QBEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetNumTimesIntrigueSharedBy

; 8573 : 
; 8574 : 	lua_pushinteger(L, iValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8575 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8576 : }

	ret	0
?lGetNumTimesIntrigueSharedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumTimesIntrigueSharedBy
_TEXT	ENDS
PUBLIC	?lDoForceDoF@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lDoForceDoF
EXTRN	?SetDoFAccepted@CvDiplomacyAI@@QAEXW4PlayerTypes@@_N@Z:PROC ; CvDiplomacyAI::SetDoFAccepted
EXTRN	?SetDoFCounter@CvDiplomacyAI@@QAEXW4PlayerTypes@@H@Z:PROC ; CvDiplomacyAI::SetDoFCounter
; Function compile flags: /Ogtpy
;	COMDAT ?lDoForceDoF@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lDoForceDoF@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lDoForceDoF, COMDAT

; 8579 : {

	push	ebx
	push	ebp
	push	esi

; 8580 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lDoForceDo
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lDoForceDo
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lDoForceDo
	xor	bl, bl
$LN5@lDoForceDo:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lDoForceDo
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lDoForceDo:

; 8581 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	mov	esi, eax

; 8582 : 
; 8583 : 	pkPlayer->GetDiplomacyAI()->SetDoFCounter(eOtherPlayer, 0);

	push	0
	push	esi
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?SetDoFCounter@CvDiplomacyAI@@QAEXW4PlayerTypes@@H@Z ; CvDiplomacyAI::SetDoFCounter

; 8584 : 	pkPlayer->GetDiplomacyAI()->SetDoFAccepted(eOtherPlayer, true);

	push	1
	push	esi
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?SetDoFAccepted@CvDiplomacyAI@@QAEXW4PlayerTypes@@_N@Z ; CvDiplomacyAI::SetDoFAccepted

; 8585 : 	GET_PLAYER(eOtherPlayer).GetDiplomacyAI()->SetDoFCounter(pkPlayer->GetID(), 0);

	imul	esi, 63236				; 0000f704H
	mov	eax, DWORD PTR [edi+44]
	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	0
	add	ecx, esi
	push	eax
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?SetDoFCounter@CvDiplomacyAI@@QAEXW4PlayerTypes@@H@Z ; CvDiplomacyAI::SetDoFCounter

; 8586 : 	GET_PLAYER(eOtherPlayer).GetDiplomacyAI()->SetDoFAccepted(pkPlayer->GetID(), true);

	mov	edi, DWORD PTR [edi+44]
	mov	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	1
	lea	ecx, DWORD PTR [esi+edx]
	push	edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?SetDoFAccepted@CvDiplomacyAI@@QAEXW4PlayerTypes@@_N@Z ; CvDiplomacyAI::SetDoFAccepted
	pop	edi
	pop	esi
	pop	ebp

; 8587 : 
; 8588 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8589 : }

	ret	0
?lDoForceDoF@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lDoForceDoF
_TEXT	ENDS
PUBLIC	?lDoForceDenounce@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lDoForceDenounce
EXTRN	?GetDiploStringForMessage@CvDiplomacyAI@@QAEPBDW4DiploMessageTypes@@W4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetDiploStringForMessage
EXTRN	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ:PROC ; CvGame::getActivePlayer
EXTRN	?DoDenouncePlayer@CvDiplomacyAI@@QAEXW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::DoDenouncePlayer
; Function compile flags: /Ogtpy
;	COMDAT ?lDoForceDenounce@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lDoForceDenounce@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lDoForceDenounce, COMDAT

; 8592 : {

	push	ebx
	push	ebp
	push	esi

; 8593 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lDoForceDe
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lDoForceDe
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lDoForceDe
	xor	bl, bl
$LN6@lDoForceDe:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lDoForceDe
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lDoForceDe:

; 8594 : 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	mov	esi, eax

; 8595 : 
; 8596 : 	pkPlayer->GetDiplomacyAI()->DoDenouncePlayer(eOtherPlayer);

	push	esi
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?DoDenouncePlayer@CvDiplomacyAI@@QAEXW4PlayerTypes@@@Z ; CvDiplomacyAI::DoDenouncePlayer

; 8597 : 
; 8598 : 	// Show leader if active player is being denounced
; 8599 : 	if(GC.getGame().getActivePlayer() == eOtherPlayer)

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	eax, esi
	jne	SHORT $LN23@lDoForceDe

; 8600 : 	{
; 8601 : 		const char* strText = pkPlayer->GetDiplomacyAI()->GetDiploStringForMessage(DIPLO_MESSAGE_REPEAT_NO);

	push	-1
	push	84					; 00000054H
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetDiploStringForMessage@CvDiplomacyAI@@QAEPBDW4DiploMessageTypes@@W4PlayerTypes@@@Z ; CvDiplomacyAI::GetDiploStringForMessage

; 8602 : 		gDLL->GameplayDiplomacyAILeaderMessage(pkPlayer->GetID(), DIPLO_UI_STATE_BLANK_DISCUSSION_MEAN_AI, strText, LEADERHEAD_ANIM_NEGATIVE);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	edx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [edx+736]
	push	-1
	push	31					; 0000001fH
	push	eax
	mov	eax, DWORD PTR [edi+44]
	push	14					; 0000000eH
	push	eax
	call	edx
$LN23@lDoForceDe:
	pop	edi
	pop	esi
	pop	ebp

; 8603 : 	}
; 8604 : 
; 8605 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8606 : }

	ret	0
?lDoForceDenounce@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lDoForceDenounce
_TEXT	ENDS
PUBLIC	?lAddNotification@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lAddNotification
EXTRN	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z:PROC ; CvNotifications::Add
EXTRN	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ:PROC ; CvPlayer::GetNotifications
; Function compile flags: /Ogtpy
;	COMDAT ?lAddNotification@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lAddNotification@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lAddNotification, COMDAT

; 8611 : {

	push	ebx
	push	ebp
	push	esi

; 8612 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@lAddNotifi
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@lAddNotifi
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@lAddNotifi
	xor	bl, bl
$LN7@lAddNotifi:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@lAddNotifi
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@lAddNotifi:

; 8613 : 	CvNotifications* pNotifications = pkPlayer->GetNotifications();

	mov	ecx, edi
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	ebx, eax

; 8614 : 	int notificationID = -1;

	or	eax, -1

; 8615 : 	if(pNotifications)

	test	ebx, ebx
	je	SHORT $LN2@lAddNotifi

; 8616 : 	{
; 8617 : 		int iExtraData = -1;
; 8618 : 		if(lua_gettop(L) >= 8)

	push	esi
	or	edi, eax
	call	_lua_gettop
	add	esp, 4
	cmp	eax, 8
	jl	SHORT $LN1@lAddNotifi

; 8619 : 			iExtraData = lua_tointeger(L, 8);

	push	8
	push	esi
	call	_lua_tointeger
	add	esp, 8
	mov	edi, eax
$LN1@lAddNotifi:

; 8620 : 
; 8621 : 		notificationID = pNotifications->Add((NotificationTypes) lua_tointeger(L, 2),
; 8622 : 		                                     lua_tostring(L, 3),
; 8623 : 		                                     lua_tostring(L, 4),
; 8624 : 		                                     lua_tointeger(L, 5),
; 8625 : 		                                     lua_tointeger(L, 6),
; 8626 : 		                                     lua_tointeger(L, 7),
; 8627 : 		                                     iExtraData);

	push	edi
	push	7
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	push	6
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	push	5
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	push	0
	push	4
	push	esi
	call	_lua_tolstring
	add	esp, 12					; 0000000cH
	push	eax
	push	0
	push	3
	push	esi
	call	_lua_tolstring
	add	esp, 12					; 0000000cH
	push	eax
	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, ebx
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add
$LN2@lAddNotifi:

; 8628 : 	}
; 8629 : 	lua_pushinteger(L, notificationID);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8630 : 
; 8631 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8632 : }

	ret	0
?lAddNotification@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lAddNotification
_TEXT	ENDS
PUBLIC	?lGetNumNotifications@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumNotifications
EXTRN	?GetNumNotifications@CvNotifications@@QAEHXZ:PROC ; CvNotifications::GetNumNotifications
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumNotifications@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumNotifications@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumNotifications, COMDAT

; 8637 : {

	push	ebx
	push	ebp
	push	esi

; 8638 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumNot
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumNot
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumNot
	xor	bl, bl
$LN5@lGetNumNot:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumNot
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumNot:

; 8639 : 	lua_pushinteger(L, pkPlayer->GetNotifications()->GetNumNotifications());

	mov	ecx, edi
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	ecx, eax
	call	?GetNumNotifications@CvNotifications@@QAEHXZ ; CvNotifications::GetNumNotifications
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8640 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8641 : }

	ret	0
?lGetNumNotifications@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumNotifications
_TEXT	ENDS
PUBLIC	?lGetNotificationStr@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNotificationStr
EXTRN	?GetNotificationStr@CvNotifications@@QAE?AVCvString@@H@Z:PROC ; CvNotifications::GetNotificationStr
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetNotificationStr@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetNotificationStr@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetNotificationStr@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetNotificationStr@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetNotificationStr@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T261260 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetNotificationStr@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNotificationStr, COMDAT

; 8645 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetNotificationStr@CvLuaPlayer@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 28					; 0000001cH
	push	ebx
	push	ebp
	push	esi

; 8646 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+48]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetNotifi
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetNotifi
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetNotifi
	xor	bl, bl
$LN6@lGetNotifi:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lGetNotifi
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lGetNotifi:

; 8647 : 	int iIndex = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8648 : 
; 8649 : 	lua_pushstring(L, pkPlayer->GetNotifications()->GetNotificationStr(iIndex));

	push	eax
	lea	eax, DWORD PTR $T261260[esp+60]
	push	eax
	mov	ecx, edi
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	ecx, eax
	call	?GetNotificationStr@CvNotifications@@QAE?AVCvString@@H@Z ; CvNotifications::GetNotificationStr
	mov	ecx, eax
	mov	DWORD PTR __$EHRec$[esp+64], 0
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8
	lea	ecx, DWORD PTR $T261260[esp+56]
	mov	DWORD PTR __$EHRec$[esp+64], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 8650 : 	return 1;
; 8651 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+56]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetNotificationStr@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR $T261260[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetNotificationStr@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetNotificationStr@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetNotificationStr@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNotificationStr
PUBLIC	?lGetNotificationSummaryStr@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNotificationSummaryStr
EXTRN	?GetNotificationSummary@CvNotifications@@QAE?AVCvString@@H@Z:PROC ; CvNotifications::GetNotificationSummary
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetNotificationSummaryStr@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetNotificationSummaryStr@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetNotificationSummaryStr@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetNotificationSummaryStr@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetNotificationSummaryStr@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T261302 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetNotificationSummaryStr@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNotificationSummaryStr, COMDAT

; 8654 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetNotificationSummaryStr@CvLuaPlayer@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 28					; 0000001cH
	push	ebx
	push	ebp
	push	esi

; 8655 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+48]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetNotifi@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetNotifi@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetNotifi@2
	xor	bl, bl
$LN6@lGetNotifi@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lGetNotifi@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lGetNotifi@2:

; 8656 : 	int iIndex = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8657 : 
; 8658 : 	lua_pushstring(L, pkPlayer->GetNotifications()->GetNotificationSummary(iIndex));

	push	eax
	lea	eax, DWORD PTR $T261302[esp+60]
	push	eax
	mov	ecx, edi
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	ecx, eax
	call	?GetNotificationSummary@CvNotifications@@QAE?AVCvString@@H@Z ; CvNotifications::GetNotificationSummary
	mov	ecx, eax
	mov	DWORD PTR __$EHRec$[esp+64], 0
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8
	lea	ecx, DWORD PTR $T261302[esp+56]
	mov	DWORD PTR __$EHRec$[esp+64], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 8659 : 	return 1;
; 8660 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+56]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetNotificationSummaryStr@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR $T261302[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetNotificationSummaryStr@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetNotificationSummaryStr@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetNotificationSummaryStr@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNotificationSummaryStr
PUBLIC	?lGetNotificationIndex@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNotificationIndex
EXTRN	?GetNotificationID@CvNotifications@@QAEHH@Z:PROC ; CvNotifications::GetNotificationID
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNotificationIndex@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNotificationIndex@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNotificationIndex, COMDAT

; 8664 : {

	push	ebx
	push	ebp
	push	esi

; 8665 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNotifi@3
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNotifi@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNotifi@3
	xor	bl, bl
$LN5@lGetNotifi@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNotifi@3
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNotifi@3:

; 8666 : 	int iIndex = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8667 : 
; 8668 : 	lua_pushinteger(L, pkPlayer->GetNotifications()->GetNotificationID(iIndex));

	push	eax
	mov	ecx, edi
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	ecx, eax
	call	?GetNotificationID@CvNotifications@@QAEHH@Z ; CvNotifications::GetNotificationID
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8669 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8670 : }

	ret	0
?lGetNotificationIndex@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNotificationIndex
_TEXT	ENDS
PUBLIC	?lGetNotificationTurn@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNotificationTurn
EXTRN	?GetNotificationTurn@CvNotifications@@QAEHH@Z:PROC ; CvNotifications::GetNotificationTurn
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNotificationTurn@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNotificationTurn@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNotificationTurn, COMDAT

; 8674 : {

	push	ebx
	push	ebp
	push	esi

; 8675 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNotifi@4
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNotifi@4
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNotifi@4
	xor	bl, bl
$LN5@lGetNotifi@4:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNotifi@4
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNotifi@4:

; 8676 : 	int iIndex = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8677 : 
; 8678 : 	lua_pushinteger(L, pkPlayer->GetNotifications()->GetNotificationTurn(iIndex));

	push	eax
	mov	ecx, edi
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	ecx, eax
	call	?GetNotificationTurn@CvNotifications@@QAEHH@Z ; CvNotifications::GetNotificationTurn
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8679 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8680 : }

	ret	0
?lGetNotificationTurn@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNotificationTurn
_TEXT	ENDS
PUBLIC	?lGetNotificationDismissed@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNotificationDismissed
EXTRN	?IsNotificationDismissed@CvNotifications@@QAE_NH@Z:PROC ; CvNotifications::IsNotificationDismissed
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNotificationDismissed@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNotificationDismissed@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNotificationDismissed, COMDAT

; 8684 : {

	push	ebx
	push	ebp
	push	esi

; 8685 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNotifi@5
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNotifi@5
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNotifi@5
	xor	bl, bl
$LN5@lGetNotifi@5:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNotifi@5
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNotifi@5:

; 8686 : 	int iIndex = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 8687 : 	lua_pushboolean(L, pkPlayer->GetNotifications()->IsNotificationDismissed(iIndex));

	push	eax
	mov	ecx, edi
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	ecx, eax
	call	?IsNotificationDismissed@CvNotifications@@QAE_NH@Z ; CvNotifications::IsNotificationDismissed
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 8688 : 	return 1;

	mov	eax, 1
	pop	ebx

; 8689 : }

	ret	0
?lGetNotificationDismissed@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNotificationDismissed
_TEXT	ENDS
PUBLIC	?lGetUnimprovedAvailableLuxuryResource@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnimprovedAvailableLuxuryResource
EXTRN	?getBuildTurnsLeft@CvPlot@@QBEHW4BuildTypes@@W4PlayerTypes@@HH@Z:PROC ; CvPlot::getBuildTurnsLeft
EXTRN	?getImprovement@CvBuildInfo@@QBEHXZ:PROC	; CvBuildInfo::getImprovement
EXTRN	?getBuildInfo@CvGlobals@@QAEPAVCvBuildInfo@@W4BuildTypes@@@Z:PROC ; CvGlobals::getBuildInfo
EXTRN	?getNumBuildInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumBuildInfos
EXTRN	?IsImprovementResourceTrade@CvImprovementEntry@@QBE_NH@Z:PROC ; CvImprovementEntry::IsImprovementResourceTrade
EXTRN	?getImprovementInfo@CvGlobals@@QAEPAVCvImprovementEntry@@W4ImprovementTypes@@@Z:PROC ; CvGlobals::getImprovementInfo
EXTRN	?getImprovementType@CvPlot@@QBE?AW4ImprovementTypes@@XZ:PROC ; CvPlot::getImprovementType
EXTRN	?getResourceUsage@CvResourceInfo@@QBE?AW4ResourceUsageTypes@@XZ:PROC ; CvResourceInfo::getResourceUsage
EXTRN	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z:PROC ; CvGlobals::getResourceInfo
EXTRN	?getResourceType@CvPlot@@QBE?AW4ResourceTypes@@W4TeamTypes@@@Z:PROC ; CvPlot::getResourceType
EXTRN	?GetPlots@CvPlayer@@QAEAAV?$FStaticVector@H$0DJAA@$00$0BCJ@$0A@@@XZ:PROC ; CvPlayer::GetPlots
; Function compile flags: /Ogtpy
;	COMDAT ?lGetUnimprovedAvailableLuxuryResource@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pResultPlot$ = -12					; size = 4
_uiPlotIndex$234916 = -8				; size = 4
_aiPlots$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetUnimprovedAvailableLuxuryResource@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetUnimprovedAvailableLuxuryResource, COMDAT

; 8952 : {

	sub	esp, 12					; 0000000cH
	push	ebx
	push	ebp
	push	esi
	push	edi

; 8953 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	edi, DWORD PTR _L$[esp+24]
	push	edi
	call	_lua_gettop
	push	1
	push	edi
	mov	esi, eax
	mov	bl, 1
	xor	ebp, ebp
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN62@lGetUnimpr
	push	OFFSET $SG237728
	push	1
	push	edi
	call	_lua_getfield
	push	-1
	push	edi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN62@lGetUnimpr
	push	-1
	push	edi
	call	_lua_touserdata
	mov	ebp, eax
	add	esp, 8
	test	ebp, ebp
	je	SHORT $LN62@lGetUnimpr
	xor	bl, bl
$LN62@lGetUnimpr:
	push	esi
	push	edi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN35@lGetUnimpr
	push	OFFSET $SG237734
	push	edi
	call	_luaL_error
	push	OFFSET $SG237742
	push	edi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN35@lGetUnimpr:

; 8954 : 
; 8955 : 	CvPlot* pResultPlot = NULL;

	xor	esi, esi

; 8956 : 
; 8957 : 	const CvPlotsVector& aiPlots = pkPlayer->GetPlots();

	mov	ecx, ebp
	mov	DWORD PTR _pResultPlot$[esp+28], esi
	call	?GetPlots@CvPlayer@@QAEAAV?$FStaticVector@H$0DJAA@$00$0BCJ@$0A@@@XZ ; CvPlayer::GetPlots
	mov	DWORD PTR _aiPlots$[esp+28], eax

; 8958 : 	// go through all the plots the player has under their control
; 8959 : 	for(uint uiPlotIndex = 0; uiPlotIndex < aiPlots.size(); uiPlotIndex++)

	mov	DWORD PTR _uiPlotIndex$234916[esp+28], esi
	cmp	DWORD PTR [eax+4], esi
	ja	SHORT $LN23@lGetUnimpr
$LN2@lGetUnimpr:

; 9064 : 	}
; 9065 : 	else
; 9066 : 	{
; 9067 : 		lua_pushnil(L);

	push	edi
	call	_lua_pushnil
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebp

; 9068 : 	}
; 9069 : 
; 9070 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9071 : }

	add	esp, 12					; 0000000cH
	ret	0
	npad	2
$LL63@lGetUnimpr:

; 8958 : 	// go through all the plots the player has under their control
; 8959 : 	for(uint uiPlotIndex = 0; uiPlotIndex < aiPlots.size(); uiPlotIndex++)

	mov	eax, DWORD PTR _aiPlots$[esp+28]
$LN23@lGetUnimpr:

; 8960 : 	{
; 8961 : 		// when we encounter the first plot that is invalid, the rest of the list will be invalid
; 8962 : 		if(aiPlots[uiPlotIndex] == -1)

	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+esi*4]
	cmp	eax, -1
	je	$LN57@lGetUnimpr

; 8963 : 		{
; 8964 : 			break;
; 8965 : 		}
; 8966 : 
; 8967 : 		CvPlot* pPlot = GC.getMap().plotByIndex(aiPlots[uiPlotIndex]);

	test	eax, eax
	jl	SHORT $LN47@lGetUnimpr
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	cmp	eax, DWORD PTR [ecx+4028]
	jge	SHORT $LN47@lGetUnimpr
	imul	eax, 484				; 000001e4H
	add	eax, DWORD PTR [ecx+4068]
	mov	edi, eax
	jmp	SHORT $LN48@lGetUnimpr
$LN47@lGetUnimpr:
	xor	edi, edi
$LN48@lGetUnimpr:

; 8968 : #ifdef AUI_WARNING_FIXES
; 8969 : 		if (!pPlot)
; 8970 : 			continue;
; 8971 : #endif
; 8972 : 
; 8973 : 		// check to see if a resource is here. If not, bail out!
; 8974 : 		ResourceTypes eResource = pPlot->getResourceType(pkPlayer->getTeam());

	mov	ecx, ebp
	call	?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ	; CvPlayer::getTeam
	push	eax
	mov	ecx, edi
	call	?getResourceType@CvPlot@@QBE?AW4ResourceTypes@@W4TeamTypes@@@Z ; CvPlot::getResourceType
	mov	ebx, eax

; 8975 : 		if(eResource == NO_RESOURCE)

	cmp	ebx, -1
	je	$LN22@lGetUnimpr

; 8976 : 		{
; 8977 : 			continue;
; 8978 : 		}
; 8979 : 
; 8980 : 		CvResourceInfo* pkResource = GC.getResourceInfo(eResource);

	push	ebx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z ; CvGlobals::getResourceInfo

; 8981 : 		if(pkResource == NULL)

	test	eax, eax
	je	$LN22@lGetUnimpr

; 8982 : 		{
; 8983 : 			continue;
; 8984 : 		}
; 8985 : 
; 8986 : 		// Is this a Luxury Resource?
; 8987 : 		if(pkResource->getResourceUsage() != RESOURCEUSAGE_LUXURY)

	mov	ecx, eax
	call	?getResourceUsage@CvResourceInfo@@QBE?AW4ResourceUsageTypes@@XZ ; CvResourceInfo::getResourceUsage
	cmp	eax, 2
	jne	$LN22@lGetUnimpr

; 8988 : 		{
; 8989 : 			continue;
; 8990 : 		}
; 8991 : 
; 8992 : 		if(pkPlayer->getNumResourceTotal(eResource) > 0)

	push	1
	push	ebx
	mov	ecx, ebp
	call	?getNumResourceTotal@CvPlayer@@QBEHW4ResourceTypes@@_N@Z ; CvPlayer::getNumResourceTotal
	test	eax, eax
	jg	$LN22@lGetUnimpr

; 8993 : 		{
; 8994 : 			continue;
; 8995 : 		}
; 8996 : 
; 8997 : 		// if the resource is already improved
; 8998 : 		ImprovementTypes eExistingPlotImprovement = pPlot->getImprovementType();

	mov	ecx, edi
	call	?getImprovementType@CvPlot@@QBE?AW4ImprovementTypes@@XZ ; CvPlot::getImprovementType

; 8999 : 		if(eExistingPlotImprovement != NO_IMPROVEMENT)

	cmp	eax, -1
	je	SHORT $LN68@lGetUnimpr

; 9000 : 		{
; 9001 : 			CvImprovementEntry* pkImprovement = GC.getImprovementInfo(eExistingPlotImprovement);

	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getImprovementInfo@CvGlobals@@QAEPAVCvImprovementEntry@@W4ImprovementTypes@@@Z ; CvGlobals::getImprovementInfo

; 9002 : 			if(pkImprovement != NULL)

	test	eax, eax
	je	SHORT $LN68@lGetUnimpr

; 9003 : 			{
; 9004 : 				if(pkImprovement->IsImprovementResourceTrade(eResource))

	push	ebx
	mov	ecx, eax
	call	?IsImprovementResourceTrade@CvImprovementEntry@@QBE_NH@Z ; CvImprovementEntry::IsImprovementResourceTrade
	test	al, al
	jne	$LN22@lGetUnimpr
$LN68@lGetUnimpr:

; 9005 : 				{
; 9006 : 					continue;
; 9007 : 				}
; 9008 : 			}
; 9009 : 		}
; 9010 : 
; 9011 : 		// see if we can improve the resource
; 9012 : #ifdef AUI_WARNING_FIXES
; 9013 : 		for (uint iBuildIndex = 0; iBuildIndex < GC.getNumBuildInfos(); iBuildIndex++)
; 9014 : #else
; 9015 : 		for(int iBuildIndex = 0; iBuildIndex < GC.getNumBuildInfos(); iBuildIndex++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	xor	esi, esi
	call	?getNumBuildInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumBuildInfos
	test	eax, eax
	jle	$LN66@lGetUnimpr
$LL12@lGetUnimpr:

; 9016 : #endif
; 9017 : 		{
; 9018 : 			BuildTypes eBuild = (BuildTypes)iBuildIndex;
; 9019 : 			CvBuildInfo* buildInfo = GC.getBuildInfo(eBuild);

	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildInfo@CvGlobals@@QAEPAVCvBuildInfo@@W4BuildTypes@@@Z ; CvGlobals::getBuildInfo

; 9020 : 			if(buildInfo == NULL)

	test	eax, eax
	je	SHORT $LN11@lGetUnimpr

; 9021 : 				continue;
; 9022 : 
; 9023 : 			ImprovementTypes eImprovement = (ImprovementTypes)buildInfo->getImprovement();

	mov	ecx, eax
	call	?getImprovement@CvBuildInfo@@QBEHXZ	; CvBuildInfo::getImprovement

; 9024 : 			if(eImprovement == NO_IMPROVEMENT)

	cmp	eax, -1
	je	SHORT $LN11@lGetUnimpr

; 9025 : 			{
; 9026 : 				continue;
; 9027 : 			}
; 9028 : 
; 9029 : 			CvImprovementEntry* pkImprovementInfo = GC.getImprovementInfo(eImprovement);

	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getImprovementInfo@CvGlobals@@QAEPAVCvImprovementEntry@@W4ImprovementTypes@@@Z ; CvGlobals::getImprovementInfo

; 9030 : 			if(pkImprovementInfo == NULL)

	test	eax, eax
	je	SHORT $LN11@lGetUnimpr

; 9031 : 			{
; 9032 : 				continue;
; 9033 : 			}
; 9034 : 
; 9035 : 			if(!pkImprovementInfo->IsImprovementResourceTrade(eResource))

	push	ebx
	mov	ecx, eax
	call	?IsImprovementResourceTrade@CvImprovementEntry@@QBE_NH@Z ; CvImprovementEntry::IsImprovementResourceTrade
	test	al, al
	je	SHORT $LN11@lGetUnimpr

; 9036 : 			{
; 9037 : 				continue;
; 9038 : 			}
; 9039 : 
; 9040 : 			if(!pkPlayer->canBuild(pPlot, eBuild, false, true /*bTestVisible*/, false /*bTestGold*/))

	push	1
	push	0
	push	1
	push	0
	push	esi
	push	edi
	mov	ecx, ebp
	call	?canBuild@CvPlayer@@QBE_NPBVCvPlot@@W4BuildTypes@@_N222@Z ; CvPlayer::canBuild
	test	al, al
	je	SHORT $LN11@lGetUnimpr

; 9041 : 			{
; 9042 : 				continue;
; 9043 : 			}
; 9044 : 
; 9045 : 			int iBuildTurnsLeft = pPlot->getBuildTurnsLeft(eBuild, pkPlayer->GetID(), 0, 0);

	mov	eax, DWORD PTR [ebp+44]
	push	0
	push	0
	push	eax
	push	esi
	mov	ecx, edi
	call	?getBuildTurnsLeft@CvPlot@@QBEHW4BuildTypes@@W4PlayerTypes@@HH@Z ; CvPlot::getBuildTurnsLeft

; 9046 : 			if(iBuildTurnsLeft > 0 && iBuildTurnsLeft < 4000)

	dec	eax
	cmp	eax, 3998				; 00000f9eH
	ja	SHORT $LN4@lGetUnimpr
$LN11@lGetUnimpr:

; 9005 : 				{
; 9006 : 					continue;
; 9007 : 				}
; 9008 : 			}
; 9009 : 		}
; 9010 : 
; 9011 : 		// see if we can improve the resource
; 9012 : #ifdef AUI_WARNING_FIXES
; 9013 : 		for (uint iBuildIndex = 0; iBuildIndex < GC.getNumBuildInfos(); iBuildIndex++)
; 9014 : #else
; 9015 : 		for(int iBuildIndex = 0; iBuildIndex < GC.getNumBuildInfos(); iBuildIndex++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	inc	esi
	call	?getNumBuildInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumBuildInfos
	cmp	esi, eax
	jl	SHORT $LL12@lGetUnimpr

; 9052 : 			break;
; 9053 : 		}
; 9054 : 
; 9055 : 		if(pResultPlot != NULL)

	jmp	SHORT $LN66@lGetUnimpr
$LN4@lGetUnimpr:

; 9047 : 			{
; 9048 : 				continue;
; 9049 : 			}
; 9050 : 
; 9051 : 			pResultPlot = pPlot;

	mov	DWORD PTR _pResultPlot$[esp+28], edi
$LN66@lGetUnimpr:

; 9052 : 			break;
; 9053 : 		}
; 9054 : 
; 9055 : 		if(pResultPlot != NULL)

	cmp	DWORD PTR _pResultPlot$[esp+28], 0
	jne	SHORT $LN65@lGetUnimpr
	mov	esi, DWORD PTR _uiPlotIndex$234916[esp+28]
$LN22@lGetUnimpr:

; 8958 : 	// go through all the plots the player has under their control
; 8959 : 	for(uint uiPlotIndex = 0; uiPlotIndex < aiPlots.size(); uiPlotIndex++)

	mov	ecx, DWORD PTR _aiPlots$[esp+28]
	mov	edi, DWORD PTR _L$[esp+24]
	inc	esi
	mov	DWORD PTR _uiPlotIndex$234916[esp+28], esi
	cmp	esi, DWORD PTR [ecx+4]
	jb	$LL63@lGetUnimpr
$LN57@lGetUnimpr:

; 9056 : 		{
; 9057 : 			break;
; 9058 : 		}
; 9059 : 	}
; 9060 : 
; 9061 : 	if(pResultPlot)

	cmp	DWORD PTR _pResultPlot$[esp+28], 0
	je	$LN2@lGetUnimpr

; 9062 : 	{
; 9063 : 		CvLuaPlot::Push(L, pResultPlot);

	mov	edx, DWORD PTR _pResultPlot$[esp+28]
	push	edx
	push	edi
	call	?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 9068 : 	}
; 9069 : 
; 9070 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9071 : }

	add	esp, 12					; 0000000cH
	ret	0
$LN65@lGetUnimpr:

; 9062 : 	{
; 9063 : 		CvLuaPlot::Push(L, pResultPlot);

	mov	edx, DWORD PTR _pResultPlot$[esp+28]
	mov	edi, DWORD PTR _L$[esp+24]
	push	edx
	push	edi
	call	?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 9068 : 	}
; 9069 : 
; 9070 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9071 : }

	add	esp, 12					; 0000000cH
	ret	0
?lGetUnimprovedAvailableLuxuryResource@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetUnimprovedAvailableLuxuryResource
_TEXT	ENDS
PUBLIC	?lIsAnyPlotImproved@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAnyPlotImproved
EXTRN	?getRouteType@CvPlot@@QBE?AW4RouteTypes@@XZ:PROC ; CvPlot::getRouteType
; Function compile flags: /Ogtpy
;	COMDAT ?lIsAnyPlotImproved@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bResult$ = -1						; size = 1
_L$ = 8							; size = 4
?lIsAnyPlotImproved@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsAnyPlotImproved, COMDAT

; 9075 : {

	push	ecx
	push	ebx
	push	ebp

; 9076 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	ebp, DWORD PTR _L$[esp+8]
	push	esi
	push	edi
	push	ebp
	call	_lua_gettop
	push	1
	push	ebp
	mov	edi, eax
	mov	bl, 1
	xor	esi, esi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN13@lIsAnyPlot
	push	OFFSET $SG237728
	push	1
	push	ebp
	call	_lua_getfield
	push	-1
	push	ebp
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN13@lIsAnyPlot
	push	-1
	push	ebp
	call	_lua_touserdata
	mov	esi, eax
	add	esp, 8
	test	esi, esi
	je	SHORT $LN13@lIsAnyPlot
	xor	bl, bl
$LN13@lIsAnyPlot:
	push	edi
	push	ebp
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN20@lIsAnyPlot
	push	OFFSET $SG237734
	push	ebp
	call	_luaL_error
	push	OFFSET $SG237742
	push	ebp
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN20@lIsAnyPlot:

; 9077 : 
; 9078 : 	const CvPlotsVector& aiPlots = pkPlayer->GetPlots();

	mov	ecx, esi
	call	?GetPlots@CvPlayer@@QAEAAV?$FStaticVector@H$0DJAA@$00$0BCJ@$0A@@@XZ ; CvPlayer::GetPlots
	mov	ebx, eax

; 9079 : 
; 9080 : 	bool bResult = false;
; 9081 : 
; 9082 : 	// go through all the plots the player has under their control
; 9083 : 	for(uint uiPlotIndex = 0; uiPlotIndex < aiPlots.size(); uiPlotIndex++)

	xor	edi, edi
	mov	BYTE PTR _bResult$[esp+20], 0
	cmp	DWORD PTR [ebx+4], edi
	jbe	SHORT $LN6@lIsAnyPlot
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
$LL47@lIsAnyPlot:

; 9084 : 	{
; 9085 : 		// when we encounter the first plot that is invalid, the rest of the list will be invalid
; 9086 : 		if(aiPlots[uiPlotIndex] == -1)

	mov	eax, DWORD PTR [ebx]
	mov	eax, DWORD PTR [eax+edi*4]
	cmp	eax, -1
	je	SHORT $LN6@lIsAnyPlot

; 9087 : 		{
; 9088 : 			break;
; 9089 : 		}
; 9090 : 
; 9091 : 		CvPlot* pPlot = GC.getMap().plotByIndex(aiPlots[uiPlotIndex]);

	test	eax, eax
	jl	SHORT $LN7@lIsAnyPlot
	cmp	eax, DWORD PTR [ecx+4028]
	jge	SHORT $LN7@lIsAnyPlot
	imul	eax, 484				; 000001e4H
	add	eax, DWORD PTR [ecx+4068]
	mov	esi, eax

; 9092 : 		if(!pPlot)

	je	SHORT $LN7@lIsAnyPlot

; 9093 : 		{
; 9094 : 			continue;
; 9095 : 		}
; 9096 : 
; 9097 : 		if(pPlot->getPlotCity())

	mov	eax, DWORD PTR [esi+104]
	test	eax, eax
	jl	SHORT $LN45@lIsAnyPlot
	cmp	eax, 64					; 00000040H
	jge	SHORT $LN45@lIsAnyPlot
	mov	ecx, DWORD PTR [esi+108]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	ecx
	mov	ecx, eax
	call	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z	; CvPlayer::getCity
	test	eax, eax
	jne	SHORT $LN46@lIsAnyPlot
$LN45@lIsAnyPlot:

; 9098 : 		{
; 9099 : 			continue;
; 9100 : 		}
; 9101 : 
; 9102 : 		if(pPlot->getImprovementType() != NO_IMPROVEMENT || pPlot->getRouteType() != NO_ROUTE)

	mov	ecx, esi
	call	?getImprovementType@CvPlot@@QBE?AW4ImprovementTypes@@XZ ; CvPlot::getImprovementType
	cmp	eax, -1
	jne	SHORT $LN43@lIsAnyPlot
	mov	ecx, esi
	call	?getRouteType@CvPlot@@QBE?AW4RouteTypes@@XZ ; CvPlot::getRouteType
	cmp	eax, -1
	jne	SHORT $LN43@lIsAnyPlot
$LN46@lIsAnyPlot:
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
$LN7@lIsAnyPlot:

; 9079 : 
; 9080 : 	bool bResult = false;
; 9081 : 
; 9082 : 	// go through all the plots the player has under their control
; 9083 : 	for(uint uiPlotIndex = 0; uiPlotIndex < aiPlots.size(); uiPlotIndex++)

	inc	edi
	cmp	edi, DWORD PTR [ebx+4]
	jb	SHORT $LL47@lIsAnyPlot

; 9098 : 		{
; 9099 : 			continue;
; 9100 : 		}
; 9101 : 
; 9102 : 		if(pPlot->getImprovementType() != NO_IMPROVEMENT || pPlot->getRouteType() != NO_ROUTE)

	jmp	SHORT $LN6@lIsAnyPlot
$LN43@lIsAnyPlot:

; 9103 : 		{
; 9104 : 			bResult = true;

	mov	BYTE PTR _bResult$[esp+20], 1
$LN6@lIsAnyPlot:

; 9105 : 			break;
; 9106 : 		}
; 9107 : 	}
; 9108 : 
; 9109 : 	lua_pushboolean(L, bResult);

	movzx	edx, BYTE PTR _bResult$[esp+20]
	push	edx
	push	ebp
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 9110 : 
; 9111 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9112 : }

	pop	ecx
	ret	0
?lIsAnyPlotImproved@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsAnyPlotImproved
_TEXT	ENDS
PUBLIC	?lGetPlayerVisiblePlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPlayerVisiblePlot
; Function compile flags: /Ogtpy
;	COMDAT ?lGetPlayerVisiblePlot@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkInstance$261607 = -12				; size = 4
tv351 = -8						; size = 4
tv266 = -4						; size = 4
_L$ = 8							; size = 4
?lGetPlayerVisiblePlot@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPlayerVisiblePlot, COMDAT

; 9116 : {

	sub	esp, 12					; 0000000cH
	push	ebx
	push	ebp
	push	esi

; 9117 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+20]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	xor	ebp, ebp
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN53@lGetPlayer@9
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN53@lGetPlayer@9
	push	-1
	push	esi
	call	_lua_touserdata
	mov	ebp, eax
	add	esp, 8
	test	ebp, ebp
	je	SHORT $LN53@lGetPlayer@9
	xor	bl, bl
$LN53@lGetPlayer@9:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN18@lGetPlayer@9
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN18@lGetPlayer@9:

; 9118 : 	CvPlayerAI* pkPlayer2 = CvLuaPlayer::GetInstance(L, 2);

	push	esi
	call	_lua_gettop
	push	2
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$261607[esp+40], 0
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN22@lGetPlayer@9
	push	OFFSET $SG237728
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN22@lGetPlayer@9
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$261607[esp+28], eax
	test	eax, eax
	je	SHORT $LN22@lGetPlayer@9
	xor	bl, bl
$LN22@lGetPlayer@9:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN29@lGetPlayer@9
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 8
$LN29@lGetPlayer@9:

; 9119 : 
; 9120 : 	const CvPlotsVector& aiPlots = pkPlayer->GetPlots();

	mov	ecx, ebp
	call	?GetPlots@CvPlayer@@QAEAAV?$FStaticVector@H$0DJAA@$00$0BCJ@$0A@@@XZ ; CvPlayer::GetPlots

; 9121 : 
; 9122 : 	// go through all the plots the player has under their control
; 9123 : 	for(uint uiPlotIndex = 0; uiPlotIndex < aiPlots.size(); uiPlotIndex++)

	mov	edx, DWORD PTR [eax+4]
	xor	ebx, ebx
	mov	DWORD PTR tv266[esp+28], edx
	test	edx, edx
	jbe	SHORT $LN54@lGetPlayer@9

; 9119 : 
; 9120 : 	const CvPlotsVector& aiPlots = pkPlayer->GetPlots();

	mov	ebp, DWORD PTR [eax]
$LL6@lGetPlayer@9:

; 9124 : 	{
; 9125 : 		// when we encounter the first plot that is invalid, the rest of the list will be invalid
; 9126 : 		if(aiPlots[uiPlotIndex] == -1)

	mov	eax, DWORD PTR [ebp]
	cmp	eax, -1
	je	SHORT $LN54@lGetPlayer@9

; 9127 : 		{
; 9128 : 			break;
; 9129 : 		}
; 9130 : 
; 9131 : 		CvPlot* pPlot = GC.getMap().plotByIndex(aiPlots[uiPlotIndex]);

	test	eax, eax
	jl	SHORT $LN5@lGetPlayer@9
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	cmp	eax, DWORD PTR [ecx+4028]
	jge	SHORT $LN5@lGetPlayer@9
	imul	eax, 484				; 000001e4H
	add	eax, DWORD PTR [ecx+4068]
	mov	edi, eax

; 9132 : 		if(!pPlot)

	je	SHORT $LN5@lGetPlayer@9

; 9133 : 		{
; 9134 : 			continue;
; 9135 : 		}
; 9136 : 
; 9137 : 		if(pPlot->isRevealed(pkPlayer2->getTeam()))

	mov	ecx, DWORD PTR _pkInstance$261607[esp+28]
	call	?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ	; CvPlayer::getTeam
	mov	edx, eax
	shr	edx, 5
	mov	ecx, edx
	shl	ecx, 5
	mov	DWORD PTR tv351[esp+28], ecx
	mov	ecx, eax
	mov	eax, DWORD PTR tv351[esp+28]
	sub	ecx, eax
	mov	eax, 1
	shl	eax, cl
	test	eax, DWORD PTR [edi+edx*4+8]
	jne	SHORT $LN51@lGetPlayer@9
	mov	edx, DWORD PTR tv266[esp+28]
$LN5@lGetPlayer@9:

; 9121 : 
; 9122 : 	// go through all the plots the player has under their control
; 9123 : 	for(uint uiPlotIndex = 0; uiPlotIndex < aiPlots.size(); uiPlotIndex++)

	inc	ebx
	add	ebp, 4
	cmp	ebx, edx
	jb	SHORT $LL6@lGetPlayer@9
$LN54@lGetPlayer@9:

; 9140 : 			return 1;
; 9141 : 		}
; 9142 : 	}
; 9143 : 
; 9144 : 	lua_pushnil(L);

	push	esi
	call	_lua_pushnil
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebp

; 9145 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9146 : }

	add	esp, 12					; 0000000cH
	ret	0
$LN51@lGetPlayer@9:

; 9138 : 		{
; 9139 : 			CvLuaPlot::Push(L, pPlot);

	push	edi
	push	esi
	call	?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 9145 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9146 : }

	add	esp, 12					; 0000000cH
	ret	0
?lGetPlayerVisiblePlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPlayerVisiblePlot
_TEXT	ENDS
PUBLIC	?lGetEverPoppedGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetEverPoppedGoody
EXTRN	?GetEverPoppedGoody@CvPlayer@@QAE_NXZ:PROC	; CvPlayer::GetEverPoppedGoody
; Function compile flags: /Ogtpy
;	COMDAT ?lGetEverPoppedGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetEverPoppedGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetEverPoppedGoody, COMDAT

; 9152 : {

	push	ebx
	push	ebp
	push	esi

; 9153 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetEverPo
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetEverPo
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetEverPo
	xor	bl, bl
$LN5@lGetEverPo:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetEverPo
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetEverPo:

; 9154 : 	lua_pushboolean(L, pkPlayer->GetEverPoppedGoody());

	mov	ecx, edi
	call	?GetEverPoppedGoody@CvPlayer@@QAE_NXZ	; CvPlayer::GetEverPoppedGoody
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 9155 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9156 : }

	ret	0
?lGetEverPoppedGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetEverPoppedGoody
_TEXT	ENDS
PUBLIC	?lGetClosestGoodyPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetClosestGoodyPlot
EXTRN	?GetClosestGoodyPlot@CvPlayer@@QAEPAVCvPlot@@_N@Z:PROC ; CvPlayer::GetClosestGoodyPlot
; Function compile flags: /Ogtpy
;	COMDAT ?lGetClosestGoodyPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetClosestGoodyPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetClosestGoodyPlot, COMDAT

; 9160 : {

	push	ebx
	push	ebp
	push	esi

; 9161 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@lGetCloses
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@lGetCloses
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@lGetCloses
	xor	bl, bl
$LN7@lGetCloses:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@lGetCloses
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@lGetCloses:

; 9162 : 	CvPlot* pPlot = pkPlayer->GetClosestGoodyPlot();

	push	0
	mov	ecx, edi
	call	?GetClosestGoodyPlot@CvPlayer@@QAEPAVCvPlot@@_N@Z ; CvPlayer::GetClosestGoodyPlot

; 9163 : 
; 9164 : 	if(pPlot)

	test	eax, eax
	je	SHORT $LN2@lGetCloses

; 9165 : 	{
; 9166 : 		CvLuaPlot::Push(L, pPlot);

	push	eax
	push	esi
	call	?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 9171 : 	}
; 9172 : 
; 9173 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9174 : }

	ret	0
$LN2@lGetCloses:

; 9167 : 	}
; 9168 : 	else
; 9169 : 	{
; 9170 : 		lua_pushnil(L);

	push	esi
	call	_lua_pushnil
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebp

; 9171 : 	}
; 9172 : 
; 9173 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9174 : }

	ret	0
?lGetClosestGoodyPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetClosestGoodyPlot
_TEXT	ENDS
PUBLIC	?lIsAnyGoodyPlotAccessible@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAnyGoodyPlotAccessible
; Function compile flags: /Ogtpy
;	COMDAT ?lIsAnyGoodyPlotAccessible@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsAnyGoodyPlotAccessible@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsAnyGoodyPlotAccessible, COMDAT

; 9178 : {

	push	ebx
	push	ebp
	push	esi

; 9179 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsAnyGood
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsAnyGood
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsAnyGood
	xor	bl, bl
$LN5@lIsAnyGood:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsAnyGood
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsAnyGood:

; 9180 : 	CvPlot* pPlot = pkPlayer->GetClosestGoodyPlot(true /*bStopAfterFindingFirst*/);

	push	1
	mov	ecx, edi
	call	?GetClosestGoodyPlot@CvPlayer@@QAEPAVCvPlot@@_N@Z ; CvPlayer::GetClosestGoodyPlot

; 9181 : 
; 9182 : 	lua_pushboolean(L, pPlot ? true : false);

	xor	ecx, ecx
	test	eax, eax
	setne	cl
	push	ecx
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 9183 : 
; 9184 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9185 : }

	ret	0
?lIsAnyGoodyPlotAccessible@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsAnyGoodyPlotAccessible
_TEXT	ENDS
PUBLIC	?lGetPlotHasOrder@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPlotHasOrder
EXTRN	?GetPlotHasOrder@CvPlayer@@QAE_NPAVCvPlot@@@Z:PROC ; CvPlayer::GetPlotHasOrder
; Function compile flags: /Ogtpy
;	COMDAT ?lGetPlotHasOrder@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkInstance$261758 = -4					; size = 4
_L$ = 8							; size = 4
?lGetPlotHasOrder@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetPlotHasOrder, COMDAT

; 9190 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 9191 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$261758[esp+32], 0
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetPlotHa
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetPlotHa
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$261758[esp+20], eax
	test	eax, eax
	je	SHORT $LN5@lGetPlotHa
	xor	bl, bl
$LN5@lGetPlotHa:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetPlotHa
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetPlotHa:

; 9192 : 	CvPlot* pkPlot = CvLuaPlot::GetInstance(L, 2);

	push	esi
	call	_lua_gettop
	push	2
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN16@lGetPlotHa
	push	OFFSET $SG237776
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN16@lGetPlotHa
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN16@lGetPlotHa
	xor	bl, bl
$LN16@lGetPlotHa:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN15@lGetPlotHa
	push	esi
	call	?HandleMissingInstance@CvLuaPlot@@SAXPAUlua_State@@@Z ; CvLuaPlot::HandleMissingInstance
	add	esp, 4
$LN15@lGetPlotHa:

; 9193 : 
; 9194 : 	lua_pushboolean(L, pkPlayer->GetPlotHasOrder(pkPlot));

	mov	ecx, DWORD PTR _pkInstance$261758[esp+20]
	push	edi
	call	?GetPlotHasOrder@CvPlayer@@QAE_NPAVCvPlot@@@Z ; CvPlayer::GetPlotHasOrder
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 9195 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9196 : }

	pop	ecx
	ret	0
?lGetPlotHasOrder@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetPlotHasOrder
_TEXT	ENDS
PUBLIC	?lGetAnyUnitHasOrderToGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAnyUnitHasOrderToGoody
EXTRN	?GetAnyUnitHasOrderToGoody@CvPlayer@@QAE_NXZ:PROC ; CvPlayer::GetAnyUnitHasOrderToGoody
; Function compile flags: /Ogtpy
;	COMDAT ?lGetAnyUnitHasOrderToGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetAnyUnitHasOrderToGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetAnyUnitHasOrderToGoody, COMDAT

; 9200 : {

	push	ebx
	push	ebp
	push	esi

; 9201 : 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetAnyUni
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetAnyUni
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetAnyUni
	xor	bl, bl
$LN5@lGetAnyUni:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetAnyUni
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetAnyUni:

; 9202 : 	lua_pushboolean(L, pkPlayer->GetAnyUnitHasOrderToGoody());

	mov	ecx, edi
	call	?GetAnyUnitHasOrderToGoody@CvPlayer@@QAE_NXZ ; CvPlayer::GetAnyUnitHasOrderToGoody
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 9203 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9204 : }

	ret	0
?lGetAnyUnitHasOrderToGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetAnyUnitHasOrderToGoody
_TEXT	ENDS
PUBLIC	?lGetEverTrainedBuilder@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetEverTrainedBuilder
EXTRN	?GetEverTrainedBuilder@CvPlayer@@QAE_NXZ:PROC	; CvPlayer::GetEverTrainedBuilder
; Function compile flags: /Ogtpy
;	COMDAT ?lGetEverTrainedBuilder@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetEverTrainedBuilder@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetEverTrainedBuilder, COMDAT

; 9208 : {

	push	ebx
	push	ebp
	push	esi

; 9209 : 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetEverTr
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetEverTr
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetEverTr
	xor	bl, bl
$LN5@lGetEverTr:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetEverTr
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetEverTr:

; 9210 : 	lua_pushboolean(L, pkPlayer->GetEverTrainedBuilder());

	mov	ecx, edi
	call	?GetEverTrainedBuilder@CvPlayer@@QAE_NXZ ; CvPlayer::GetEverTrainedBuilder
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 9211 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9212 : }

	ret	0
?lGetEverTrainedBuilder@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetEverTrainedBuilder
_TEXT	ENDS
PUBLIC	?lGetNumFreeTechs@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumFreeTechs
EXTRN	?GetNumFreeTechs@CvPlayer@@QBEHXZ:PROC		; CvPlayer::GetNumFreeTechs
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumFreeTechs@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv165 = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumFreeTechs@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetNumFreeTechs, COMDAT

; 9215 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 9216 : 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumFre
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumFre
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumFre
	xor	bl, bl
$LN5@lGetNumFre:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumFre
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumFre:

; 9217 : 	lua_pushnumber(L, pkPlayer->GetNumFreeTechs());

	mov	ecx, edi
	call	?GetNumFreeTechs@CvPlayer@@QBEHXZ	; CvPlayer::GetNumFreeTechs
	mov	DWORD PTR tv165[esp+20], eax
	fild	DWORD PTR tv165[esp+20]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	esi
	call	_lua_pushnumber
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebp

; 9218 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9219 : }

	pop	ecx
	ret	0
?lGetNumFreeTechs@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetNumFreeTechs
_TEXT	ENDS
PUBLIC	?lSetNumFreeTechs@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetNumFreeTechs
EXTRN	?SetNumFreeTechs@CvPlayer@@QAEXH@Z:PROC		; CvPlayer::SetNumFreeTechs
; Function compile flags: /Ogtpy
;	COMDAT ?lSetNumFreeTechs@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetNumFreeTechs@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lSetNumFreeTechs, COMDAT

; 9222 : {

	push	ebx
	push	ebp
	push	esi

; 9223 : 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lSetNumFre
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lSetNumFre
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lSetNumFre
	xor	bl, bl
$LN5@lSetNumFre:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lSetNumFre
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lSetNumFre:

; 9224 : 	const int iNumTechs = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 9225 : 
; 9226 : 	pkPlayer->SetNumFreeTechs(iNumTechs);

	push	eax
	mov	ecx, edi
	call	?SetNumFreeTechs@CvPlayer@@QAEXH@Z	; CvPlayer::SetNumFreeTechs
	pop	edi
	pop	esi
	pop	ebp

; 9227 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9228 : }

	ret	0
?lSetNumFreeTechs@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lSetNumFreeTechs
_TEXT	ENDS
PUBLIC	?lGetNumFreePolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumFreePolicies
EXTRN	?GetNumFreePolicies@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetNumFreePolicies
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumFreePolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv165 = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumFreePolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumFreePolicies, COMDAT

; 9231 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 9232 : 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumFre@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumFre@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumFre@2
	xor	bl, bl
$LN5@lGetNumFre@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumFre@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumFre@2:

; 9233 : 	lua_pushnumber(L, pkPlayer->GetNumFreePolicies());

	mov	ecx, edi
	call	?GetNumFreePolicies@CvPlayer@@QBEHXZ	; CvPlayer::GetNumFreePolicies
	mov	DWORD PTR tv165[esp+20], eax
	fild	DWORD PTR tv165[esp+20]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	esi
	call	_lua_pushnumber
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebp

; 9234 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9235 : }

	pop	ecx
	ret	0
?lGetNumFreePolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumFreePolicies
_TEXT	ENDS
PUBLIC	?lSetNumFreePolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetNumFreePolicies
EXTRN	?SetNumFreePolicies@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::SetNumFreePolicies
; Function compile flags: /Ogtpy
;	COMDAT ?lSetNumFreePolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetNumFreePolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetNumFreePolicies, COMDAT

; 9238 : {

	push	ebx
	push	ebp
	push	esi

; 9239 : 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lSetNumFre@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lSetNumFre@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lSetNumFre@2
	xor	bl, bl
$LN5@lSetNumFre@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lSetNumFre@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lSetNumFre@2:

; 9240 : 	const int iNumPolicies = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 9241 : 
; 9242 : 	pkPlayer->SetNumFreePolicies(iNumPolicies);

	push	eax
	mov	ecx, edi
	call	?SetNumFreePolicies@CvPlayer@@QAEXH@Z	; CvPlayer::SetNumFreePolicies
	pop	edi
	pop	esi
	pop	ebp

; 9243 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9244 : }

	ret	0
?lSetNumFreePolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetNumFreePolicies
_TEXT	ENDS
PUBLIC	?lChangeNumFreePolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNumFreePolicies
EXTRN	?ChangeNumFreePolicies@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::ChangeNumFreePolicies
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeNumFreePolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeNumFreePolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeNumFreePolicies, COMDAT

; 9247 : {

	push	ebx
	push	ebp
	push	esi

; 9248 : 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lChangeNum@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lChangeNum@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lChangeNum@2
	xor	bl, bl
$LN5@lChangeNum@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lChangeNum@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lChangeNum@2:

; 9249 : 	const int iNumPolicies = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 9250 : 
; 9251 : 	pkPlayer->ChangeNumFreePolicies(iNumPolicies);

	push	eax
	mov	ecx, edi
	call	?ChangeNumFreePolicies@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeNumFreePolicies
	pop	edi
	pop	esi
	pop	ebp

; 9252 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9253 : }

	ret	0
?lChangeNumFreePolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeNumFreePolicies
_TEXT	ENDS
PUBLIC	?lGetNumFreeTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumFreeTenets
EXTRN	?GetNumFreeTenets@CvPlayer@@QBEHXZ:PROC		; CvPlayer::GetNumFreeTenets
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumFreeTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv165 = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumFreeTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumFreeTenets, COMDAT

; 9256 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 9257 : 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumFre@3
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumFre@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumFre@3
	xor	bl, bl
$LN5@lGetNumFre@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumFre@3
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumFre@3:

; 9258 : 	lua_pushnumber(L, pkPlayer->GetNumFreeTenets());

	mov	ecx, edi
	call	?GetNumFreeTenets@CvPlayer@@QBEHXZ	; CvPlayer::GetNumFreeTenets
	mov	DWORD PTR tv165[esp+20], eax
	fild	DWORD PTR tv165[esp+20]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	esi
	call	_lua_pushnumber
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebp

; 9259 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9260 : }

	pop	ecx
	ret	0
?lGetNumFreeTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumFreeTenets
_TEXT	ENDS
PUBLIC	?lSetNumFreeTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetNumFreeTenets
EXTRN	?SetNumFreeTenets@CvPlayer@@QAEXH_N@Z:PROC	; CvPlayer::SetNumFreeTenets
; Function compile flags: /Ogtpy
;	COMDAT ?lSetNumFreeTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bCountAsFreePolicies$ = -4				; size = 1
_L$ = 8							; size = 4
?lSetNumFreeTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetNumFreeTenets, COMDAT

; 9263 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 9264 : 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lSetNumFre@3
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lSetNumFre@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lSetNumFre@3
	xor	bl, bl
$LN5@lSetNumFre@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lSetNumFre@3
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lSetNumFre@3:

; 9265 : 	const int iNumTenets = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 9266 : 	const bool bCountAsFreePolicies = lua_toboolean(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_toboolean
	add	esp, 16					; 00000010H
	test	eax, eax
	setne	al
	mov	BYTE PTR _bCountAsFreePolicies$[esp+20], al

; 9267 : 
; 9268 : 	pkPlayer->SetNumFreeTenets(iNumTenets, bCountAsFreePolicies);

	mov	ecx, DWORD PTR _bCountAsFreePolicies$[esp+20]
	push	ecx
	push	ebx
	mov	ecx, edi
	call	?SetNumFreeTenets@CvPlayer@@QAEXH_N@Z	; CvPlayer::SetNumFreeTenets
	pop	edi
	pop	esi
	pop	ebp

; 9269 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9270 : }

	pop	ecx
	ret	0
?lSetNumFreeTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetNumFreeTenets
_TEXT	ENDS
PUBLIC	?lChangeNumFreeTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNumFreeTenets
EXTRN	?ChangeNumFreeTenets@CvPlayer@@QAEXH_N@Z:PROC	; CvPlayer::ChangeNumFreeTenets
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeNumFreeTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bCountAsFreePolicies$ = -4				; size = 1
_L$ = 8							; size = 4
?lChangeNumFreeTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeNumFreeTenets, COMDAT

; 9273 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 9274 : 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lChangeNum@3
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lChangeNum@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lChangeNum@3
	xor	bl, bl
$LN5@lChangeNum@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lChangeNum@3
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lChangeNum@3:

; 9275 : 	const int iNumTenets = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 9276 : 	const bool bCountAsFreePolicies = lua_toboolean(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_toboolean
	add	esp, 16					; 00000010H
	test	eax, eax
	setne	al
	mov	BYTE PTR _bCountAsFreePolicies$[esp+20], al

; 9277 : 
; 9278 : 	pkPlayer->ChangeNumFreeTenets(iNumTenets, bCountAsFreePolicies);

	mov	ecx, DWORD PTR _bCountAsFreePolicies$[esp+20]
	push	ecx
	push	ebx
	mov	ecx, edi
	call	?ChangeNumFreeTenets@CvPlayer@@QAEXH_N@Z ; CvPlayer::ChangeNumFreeTenets
	pop	edi
	pop	esi
	pop	ebp

; 9279 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9280 : }

	pop	ecx
	ret	0
?lChangeNumFreeTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeNumFreeTenets
_TEXT	ENDS
PUBLIC	?lGetNumFreeGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumFreeGreatPeople
EXTRN	?GetNumFreeGreatPeople@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetNumFreeGreatPeople
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumFreeGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv165 = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumFreeGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumFreeGreatPeople, COMDAT

; 9283 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 9284 : 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumFre@4
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumFre@4
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumFre@4
	xor	bl, bl
$LN5@lGetNumFre@4:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumFre@4
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumFre@4:

; 9285 : 	lua_pushnumber(L, pkPlayer->GetNumFreeGreatPeople());

	mov	ecx, edi
	call	?GetNumFreeGreatPeople@CvPlayer@@QBEHXZ	; CvPlayer::GetNumFreeGreatPeople
	mov	DWORD PTR tv165[esp+20], eax
	fild	DWORD PTR tv165[esp+20]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	esi
	call	_lua_pushnumber
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebp

; 9286 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9287 : }

	pop	ecx
	ret	0
?lGetNumFreeGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumFreeGreatPeople
_TEXT	ENDS
PUBLIC	?lSetNumFreeGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetNumFreeGreatPeople
EXTRN	?SetNumFreeGreatPeople@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::SetNumFreeGreatPeople
; Function compile flags: /Ogtpy
;	COMDAT ?lSetNumFreeGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetNumFreeGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetNumFreeGreatPeople, COMDAT

; 9290 : {

	push	ebx
	push	ebp
	push	esi

; 9291 : 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lSetNumFre@4
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lSetNumFre@4
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lSetNumFre@4
	xor	bl, bl
$LN5@lSetNumFre@4:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lSetNumFre@4
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lSetNumFre@4:

; 9292 : 	const int iNumGreatPeople = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 9293 : 
; 9294 : 	pkPlayer->SetNumFreeGreatPeople(iNumGreatPeople);

	push	eax
	mov	ecx, edi
	call	?SetNumFreeGreatPeople@CvPlayer@@QAEXH@Z ; CvPlayer::SetNumFreeGreatPeople
	pop	edi
	pop	esi
	pop	ebp

; 9295 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9296 : }

	ret	0
?lSetNumFreeGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetNumFreeGreatPeople
_TEXT	ENDS
PUBLIC	?lChangeNumFreeGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNumFreeGreatPeople
EXTRN	?ChangeNumFreeGreatPeople@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::ChangeNumFreeGreatPeople
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeNumFreeGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeNumFreeGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeNumFreeGreatPeople, COMDAT

; 9299 : {

	push	ebx
	push	ebp
	push	esi

; 9300 : 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lChangeNum@4
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lChangeNum@4
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lChangeNum@4
	xor	bl, bl
$LN5@lChangeNum@4:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lChangeNum@4
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lChangeNum@4:

; 9301 : 	const int iNumGreatPeople = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 9302 : 
; 9303 : 	pkPlayer->ChangeNumFreeGreatPeople(iNumGreatPeople);

	push	eax
	mov	ecx, edi
	call	?ChangeNumFreeGreatPeople@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeNumFreeGreatPeople
	pop	edi
	pop	esi
	pop	ebp

; 9304 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9305 : }

	ret	0
?lChangeNumFreeGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeNumFreeGreatPeople
_TEXT	ENDS
PUBLIC	?lGetNumMayaBoosts@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumMayaBoosts
EXTRN	?GetNumMayaBoosts@CvPlayer@@QBEHXZ:PROC		; CvPlayer::GetNumMayaBoosts
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumMayaBoosts@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv165 = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumMayaBoosts@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumMayaBoosts, COMDAT

; 9308 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 9309 : 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumMay
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumMay
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumMay
	xor	bl, bl
$LN5@lGetNumMay:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumMay
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumMay:

; 9310 : 	lua_pushnumber(L, pkPlayer->GetNumMayaBoosts());

	mov	ecx, edi
	call	?GetNumMayaBoosts@CvPlayer@@QBEHXZ	; CvPlayer::GetNumMayaBoosts
	mov	DWORD PTR tv165[esp+20], eax
	fild	DWORD PTR tv165[esp+20]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	esi
	call	_lua_pushnumber
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebp

; 9311 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9312 : }

	pop	ecx
	ret	0
?lGetNumMayaBoosts@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumMayaBoosts
_TEXT	ENDS
PUBLIC	?lSetNumMayaBoosts@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetNumMayaBoosts
EXTRN	?SetNumMayaBoosts@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::SetNumMayaBoosts
; Function compile flags: /Ogtpy
;	COMDAT ?lSetNumMayaBoosts@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetNumMayaBoosts@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetNumMayaBoosts, COMDAT

; 9315 : {

	push	ebx
	push	ebp
	push	esi

; 9316 : 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lSetNumMay
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lSetNumMay
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lSetNumMay
	xor	bl, bl
$LN5@lSetNumMay:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lSetNumMay
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lSetNumMay:

; 9317 : 	const int iNumBoosts = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 9318 : 
; 9319 : 	pkPlayer->SetNumMayaBoosts(iNumBoosts);

	push	eax
	mov	ecx, edi
	call	?SetNumMayaBoosts@CvPlayer@@QAEXH@Z	; CvPlayer::SetNumMayaBoosts
	pop	edi
	pop	esi
	pop	ebp

; 9320 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9321 : }

	ret	0
?lSetNumMayaBoosts@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetNumMayaBoosts
_TEXT	ENDS
PUBLIC	?lChangeNumMayaBoosts@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNumMayaBoosts
EXTRN	?ChangeNumMayaBoosts@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::ChangeNumMayaBoosts
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeNumMayaBoosts@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeNumMayaBoosts@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeNumMayaBoosts, COMDAT

; 9324 : {

	push	ebx
	push	ebp
	push	esi

; 9325 : 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lChangeNum@5
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lChangeNum@5
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lChangeNum@5
	xor	bl, bl
$LN5@lChangeNum@5:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lChangeNum@5
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lChangeNum@5:

; 9326 : 	const int iNumBoosts = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 9327 : 
; 9328 : 	pkPlayer->ChangeNumMayaBoosts(iNumBoosts);

	push	eax
	mov	ecx, edi
	call	?ChangeNumMayaBoosts@CvPlayer@@QAEXH@Z	; CvPlayer::ChangeNumMayaBoosts
	pop	edi
	pop	esi
	pop	ebp

; 9329 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9330 : }

	ret	0
?lChangeNumMayaBoosts@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeNumMayaBoosts
_TEXT	ENDS
PUBLIC	?lGetNumFaithGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumFaithGreatPeople
EXTRN	?GetNumFaithGreatPeople@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetNumFaithGreatPeople
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumFaithGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv165 = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumFaithGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumFaithGreatPeople, COMDAT

; 9333 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 9334 : 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumFai
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumFai
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumFai
	xor	bl, bl
$LN5@lGetNumFai:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumFai
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumFai:

; 9335 : 	lua_pushnumber(L, pkPlayer->GetNumFaithGreatPeople());

	mov	ecx, edi
	call	?GetNumFaithGreatPeople@CvPlayer@@QBEHXZ ; CvPlayer::GetNumFaithGreatPeople
	mov	DWORD PTR tv165[esp+20], eax
	fild	DWORD PTR tv165[esp+20]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	esi
	call	_lua_pushnumber
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebp

; 9336 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9337 : }

	pop	ecx
	ret	0
?lGetNumFaithGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumFaithGreatPeople
_TEXT	ENDS
PUBLIC	?lSetNumFaithGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetNumFaithGreatPeople
EXTRN	?SetNumFaithGreatPeople@CvPlayer@@QAEXH@Z:PROC	; CvPlayer::SetNumFaithGreatPeople
; Function compile flags: /Ogtpy
;	COMDAT ?lSetNumFaithGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetNumFaithGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetNumFaithGreatPeople, COMDAT

; 9340 : {

	push	ebx
	push	ebp
	push	esi

; 9341 : 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lSetNumFai
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lSetNumFai
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lSetNumFai
	xor	bl, bl
$LN5@lSetNumFai:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lSetNumFai
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lSetNumFai:

; 9342 : 	const int iNumGreatPeople = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 9343 : 
; 9344 : 	pkPlayer->SetNumFaithGreatPeople(iNumGreatPeople);

	push	eax
	mov	ecx, edi
	call	?SetNumFaithGreatPeople@CvPlayer@@QAEXH@Z ; CvPlayer::SetNumFaithGreatPeople
	pop	edi
	pop	esi
	pop	ebp

; 9345 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9346 : }

	ret	0
?lSetNumFaithGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetNumFaithGreatPeople
_TEXT	ENDS
PUBLIC	?lChangeNumFaithGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNumFaithGreatPeople
EXTRN	?ChangeNumFaithGreatPeople@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::ChangeNumFaithGreatPeople
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeNumFaithGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeNumFaithGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeNumFaithGreatPeople, COMDAT

; 9349 : {

	push	ebx
	push	ebp
	push	esi

; 9350 : 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lChangeNum@6
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lChangeNum@6
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lChangeNum@6
	xor	bl, bl
$LN5@lChangeNum@6:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lChangeNum@6
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lChangeNum@6:

; 9351 : 	const int iNumGreatPeople = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 9352 : 
; 9353 : 	pkPlayer->ChangeNumFaithGreatPeople(iNumGreatPeople);

	push	eax
	mov	ecx, edi
	call	?ChangeNumFaithGreatPeople@CvPlayer@@QAEXH@Z ; CvPlayer::ChangeNumFaithGreatPeople
	pop	edi
	pop	esi
	pop	ebp

; 9354 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9355 : }

	ret	0
?lChangeNumFaithGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeNumFaithGreatPeople
_TEXT	ENDS
PUBLIC	?lGetUnitBaktun@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnitBaktun
EXTRN	?GetUnitBaktun@CvPlayerTraits@@QBEHW4UnitTypes@@@Z:PROC ; CvPlayerTraits::GetUnitBaktun
; Function compile flags: /Ogtpy
;	COMDAT ?lGetUnitBaktun@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv164 = -4						; size = 4
_L$ = 8							; size = 4
?lGetUnitBaktun@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetUnitBaktun, COMDAT

; 9358 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 9359 : 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetUnitBa
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetUnitBa
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetUnitBa
	xor	bl, bl
$LN5@lGetUnitBa:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetUnitBa
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetUnitBa:

; 9360 : 	const UnitTypes eUnit = (UnitTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 9361 : 	lua_pushnumber(L, pkPlayer->GetPlayerTraits()->GetUnitBaktun(eUnit));

	push	eax
	mov	ecx, edi
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	ecx, eax
	call	?GetUnitBaktun@CvPlayerTraits@@QBEHW4UnitTypes@@@Z ; CvPlayerTraits::GetUnitBaktun
	mov	DWORD PTR tv164[esp+20], eax
	fild	DWORD PTR tv164[esp+20]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	esi
	call	_lua_pushnumber
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebp

; 9362 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9363 : }

	pop	ecx
	ret	0
?lGetUnitBaktun@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetUnitBaktun
_TEXT	ENDS
PUBLIC	?lIsFreeMayaGreatPersonChoice@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsFreeMayaGreatPersonChoice
EXTRN	?IsFreeMayaGreatPersonChoice@CvPlayerTraits@@QBE_NXZ:PROC ; CvPlayerTraits::IsFreeMayaGreatPersonChoice
; Function compile flags: /Ogtpy
;	COMDAT ?lIsFreeMayaGreatPersonChoice@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsFreeMayaGreatPersonChoice@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsFreeMayaGreatPersonChoice, COMDAT

; 9366 : {

	push	ebx
	push	ebp
	push	esi

; 9367 : 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lIsFreeMay
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lIsFreeMay
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lIsFreeMay
	xor	bl, bl
$LN6@lIsFreeMay:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lIsFreeMay
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lIsFreeMay:

; 9368 : 	if(pkPlayer)

	test	edi, edi
	je	SHORT $LN15@lIsFreeMay

; 9369 : 	{
; 9370 : 		lua_pushboolean(L, pkPlayer->GetPlayerTraits()->IsFreeMayaGreatPersonChoice());

	mov	ecx, edi
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	ecx, eax
	call	?IsFreeMayaGreatPersonChoice@CvPlayerTraits@@QBE_NXZ ; CvPlayerTraits::IsFreeMayaGreatPersonChoice
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
$LN15@lIsFreeMay:
	pop	edi
	pop	esi
	pop	ebp

; 9371 : 	}
; 9372 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9373 : }

	ret	0
?lIsFreeMayaGreatPersonChoice@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsFreeMayaGreatPersonChoice
_TEXT	ENDS
PUBLIC	?lHasReceivedNetTurnComplete@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasReceivedNetTurnComplete
; Function compile flags: /Ogtpy
;	COMDAT ?lHasReceivedNetTurnComplete@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lHasReceivedNetTurnComplete@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lHasReceivedNetTurnComplete, COMDAT

; 9376 : {

	push	ebx
	push	ebp
	push	esi

; 9377 : 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lHasReceiv
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lHasReceiv
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lHasReceiv
	xor	bl, bl
$LN6@lHasReceiv:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lHasReceiv
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lHasReceiv:

; 9378 : 	if(pkPlayer)

	test	edi, edi
	je	SHORT $LN21@lHasReceiv

; 9379 : 	{
; 9380 : 		lua_pushboolean(L, gDLL->HasReceivedTurnComplete(pkPlayer->GetID()));

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	edi, DWORD PTR [edi+44]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+132]
	push	edi
	call	edx
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
$LN21@lHasReceiv:
	pop	edi
	pop	esi
	pop	ebp

; 9381 : 	}
; 9382 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9383 : }

	ret	0
?lHasReceivedNetTurnComplete@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lHasReceivedNetTurnComplete
_TEXT	ENDS
PUBLIC	?lGetTraitGoldenAgeCombatModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTraitGoldenAgeCombatModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTraitGoldenAgeCombatModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTraitGoldenAgeCombatModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTraitGoldenAgeCombatModifier, COMDAT

; 9386 : {

	push	ebx
	push	ebp
	push	esi

; 9387 : 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetTraitG
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetTraitG
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetTraitG
	xor	bl, bl
$LN6@lGetTraitG:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lGetTraitG
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lGetTraitG:

; 9388 : 	if(pkPlayer)

	test	edi, edi
	je	SHORT $LN17@lGetTraitG

; 9389 : 	{
; 9390 : 		lua_pushinteger(L, pkPlayer->GetPlayerTraits()->GetGoldenAgeCombatModifier());

	mov	ecx, edi
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	eax, DWORD PTR [eax+180]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
$LN17@lGetTraitG:
	pop	edi
	pop	esi
	pop	ebp

; 9391 : 	}
; 9392 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9393 : }

	ret	0
?lGetTraitGoldenAgeCombatModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTraitGoldenAgeCombatModifier
_TEXT	ENDS
PUBLIC	?lGetTraitCityStateCombatModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTraitCityStateCombatModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTraitCityStateCombatModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTraitCityStateCombatModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTraitCityStateCombatModifier, COMDAT

; 9396 : {

	push	ebx
	push	ebp
	push	esi

; 9397 : 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetTraitC@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetTraitC@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetTraitC@2
	xor	bl, bl
$LN6@lGetTraitC@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lGetTraitC@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lGetTraitC@2:

; 9398 : 	if(pkPlayer)

	test	edi, edi
	je	SHORT $LN17@lGetTraitC@2

; 9399 : 	{
; 9400 : 		lua_pushinteger(L, pkPlayer->GetPlayerTraits()->GetCityStateCombatModifier());

	mov	ecx, edi
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	eax, DWORD PTR [eax+96]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
$LN17@lGetTraitC@2:
	pop	edi
	pop	esi
	pop	ebp

; 9401 : 	}
; 9402 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9403 : }

	ret	0
?lGetTraitCityStateCombatModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTraitCityStateCombatModifier
_TEXT	ENDS
PUBLIC	?lGetTraitGreatGeneralExtraBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTraitGreatGeneralExtraBonus
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTraitGreatGeneralExtraBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTraitGreatGeneralExtraBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTraitGreatGeneralExtraBonus, COMDAT

; 9406 : {

	push	ebx
	push	ebp
	push	esi

; 9407 : 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetTraitG@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetTraitG@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetTraitG@2
	xor	bl, bl
$LN6@lGetTraitG@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lGetTraitG@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lGetTraitG@2:

; 9408 : 	if(pkPlayer)

	test	edi, edi
	je	SHORT $LN17@lGetTraitG@2

; 9409 : 	{
; 9410 : 		lua_pushinteger(L, pkPlayer->GetPlayerTraits()->GetGreatGeneralExtraBonus());

	mov	ecx, edi
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	eax, DWORD PTR [eax+56]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
$LN17@lGetTraitG@2:
	pop	edi
	pop	esi
	pop	ebp

; 9411 : 	}
; 9412 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9413 : }

	ret	0
?lGetTraitGreatGeneralExtraBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTraitGreatGeneralExtraBonus
_TEXT	ENDS
PUBLIC	?lGetTraitGreatScientistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTraitGreatScientistRateModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTraitGreatScientistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTraitGreatScientistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTraitGreatScientistRateModifier, COMDAT

; 9416 : {

	push	ebx
	push	ebp
	push	esi

; 9417 : 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetTraitG@3
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetTraitG@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetTraitG@3
	xor	bl, bl
$LN6@lGetTraitG@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lGetTraitG@3
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lGetTraitG@3:

; 9418 : 	if(pkPlayer)

	test	edi, edi
	je	SHORT $LN17@lGetTraitG@3

; 9419 : 	{
; 9420 : 		lua_pushinteger(L, pkPlayer->GetPlayerTraits()->GetGreatScientistRateModifier());

	mov	ecx, edi
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	eax, DWORD PTR [eax+48]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
$LN17@lGetTraitG@3:
	pop	edi
	pop	esi
	pop	ebp

; 9421 : 	}
; 9422 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9423 : }

	ret	0
?lGetTraitGreatScientistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTraitGreatScientistRateModifier
_TEXT	ENDS
PUBLIC	?lIsTraitBonusReligiousBelief@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsTraitBonusReligiousBelief
; Function compile flags: /Ogtpy
;	COMDAT ?lIsTraitBonusReligiousBelief@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsTraitBonusReligiousBelief@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsTraitBonusReligiousBelief, COMDAT

; 9426 : {

	push	ebx
	push	ebp
	push	esi

; 9427 : 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lIsTraitBo
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lIsTraitBo
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lIsTraitBo
	xor	bl, bl
$LN6@lIsTraitBo:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lIsTraitBo
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lIsTraitBo:

; 9428 : 	if(pkPlayer)

	test	edi, edi
	je	SHORT $LN17@lIsTraitBo

; 9429 : 	{
; 9430 : 		lua_pushboolean(L, pkPlayer->GetPlayerTraits()->IsBonusReligiousBelief());

	mov	ecx, edi
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	movzx	eax, BYTE PTR [eax+347]
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
$LN17@lIsTraitBo:
	pop	edi
	pop	esi
	pop	ebp

; 9431 : 	}
; 9432 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9433 : }

	ret	0
?lIsTraitBonusReligiousBelief@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsTraitBonusReligiousBelief
_TEXT	ENDS
PUBLIC	?lGetHappinessFromLuxury@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromLuxury
EXTRN	?GetHappinessFromLuxury@CvPlayer@@QBEHW4ResourceTypes@@@Z:PROC ; CvPlayer::GetHappinessFromLuxury
; Function compile flags: /Ogtpy
;	COMDAT ?lGetHappinessFromLuxury@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHappinessFromLuxury@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetHappinessFromLuxury, COMDAT

; 9436 : {

	push	ebx
	push	ebp
	push	esi

; 9437 : 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@lGetHappin
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@lGetHappin
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@lGetHappin
	xor	bl, bl
$LN7@lGetHappin:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@lGetHappin
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@lGetHappin:

; 9438 : 	if(pkPlayer)

	test	edi, edi
	je	SHORT $LN16@lGetHappin

; 9439 : 	{
; 9440 : 		const ResourceTypes eResource = (ResourceTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 9441 : 		int iLuxuryHappiness = pkPlayer->GetHappinessFromLuxury(eResource);

	push	eax
	mov	ecx, edi
	call	?GetHappinessFromLuxury@CvPlayer@@QBEHW4ResourceTypes@@@Z ; CvPlayer::GetHappinessFromLuxury
	mov	ebx, eax

; 9442 : 		if (iLuxuryHappiness > 0) 

	test	ebx, ebx
	jle	SHORT $LN1@lGetHappin

; 9443 : 		{
; 9444 : 			iLuxuryHappiness += pkPlayer->GetExtraHappinessPerLuxury();

	mov	ecx, edi
	call	?GetExtraHappinessPerLuxury@CvPlayer@@QBEHXZ ; CvPlayer::GetExtraHappinessPerLuxury
	add	ebx, eax
$LN1@lGetHappin:

; 9445 : 		}
; 9446 : 		lua_pushinteger(L, iLuxuryHappiness);

	push	ebx
	push	esi
	call	_lua_pushinteger
	add	esp, 8
$LN16@lGetHappin:
	pop	edi
	pop	esi
	pop	ebp

; 9447 : 	}
; 9448 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9449 : }

	ret	0
?lGetHappinessFromLuxury@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetHappinessFromLuxury
_TEXT	ENDS
PUBLIC	?lIsAbleToAnnexCityStates@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAbleToAnnexCityStates
EXTRN	?IsAbleToAnnexCityStates@CvPlayer@@QBE_NXZ:PROC	; CvPlayer::IsAbleToAnnexCityStates
; Function compile flags: /Ogtpy
;	COMDAT ?lIsAbleToAnnexCityStates@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsAbleToAnnexCityStates@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsAbleToAnnexCityStates, COMDAT

; 9452 : {

	push	ebx
	push	ebp
	push	esi

; 9453 : 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lIsAbleToA
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lIsAbleToA
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lIsAbleToA
	xor	bl, bl
$LN6@lIsAbleToA:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lIsAbleToA
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lIsAbleToA:

; 9454 : 	if(pkPlayer)

	test	edi, edi
	je	SHORT $LN15@lIsAbleToA

; 9455 : 	{
; 9456 : 		lua_pushboolean(L, pkPlayer->IsAbleToAnnexCityStates());

	mov	ecx, edi
	call	?IsAbleToAnnexCityStates@CvPlayer@@QBE_NXZ ; CvPlayer::IsAbleToAnnexCityStates
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
$LN15@lIsAbleToA:
	pop	edi
	pop	esi
	pop	ebp

; 9457 : 	}
; 9458 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9459 : }

	ret	0
?lIsAbleToAnnexCityStates@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsAbleToAnnexCityStates
_TEXT	ENDS
PUBLIC	?lGetNumTurnsBeforeMinorAlliesRefuseBribes@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumTurnsBeforeMinorAlliesRefuseBribes
EXTRN	?GetNumTurnsBeforeMinorAlliesRefuseBribes@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetNumTurnsBeforeMinorAlliesRefuseBribes
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumTurnsBeforeMinorAlliesRefuseBribes@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumTurnsBeforeMinorAlliesRefuseBribes@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumTurnsBeforeMinorAlliesRefuseBribes, COMDAT

; 9463 : {

	push	ebx
	push	ebp
	push	esi

; 9464 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumTur
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumTur
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumTur
	xor	bl, bl
$LN5@lGetNumTur:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumTur
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumTur:

; 9465 : 
; 9466 : 	const int iResult = pkPlayer->GetNumTurnsBeforeMinorAlliesRefuseBribes();

	mov	ecx, edi
	call	?GetNumTurnsBeforeMinorAlliesRefuseBribes@CvPlayer@@QBEHXZ ; CvPlayer::GetNumTurnsBeforeMinorAlliesRefuseBribes

; 9467 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 9468 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9469 : }

	ret	0
?lGetNumTurnsBeforeMinorAlliesRefuseBribes@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumTurnsBeforeMinorAlliesRefuseBribes
_TEXT	ENDS
PUBLIC	?lIsUsingMayaCalendar@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsUsingMayaCalendar
EXTRN	?IsUsingMayaCalendar@CvPlayerTraits@@QBE_NXZ:PROC ; CvPlayerTraits::IsUsingMayaCalendar
; Function compile flags: /Ogtpy
;	COMDAT ?lIsUsingMayaCalendar@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsUsingMayaCalendar@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsUsingMayaCalendar, COMDAT

; 9473 : {

	push	ebx
	push	ebp
	push	esi

; 9474 : 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lIsUsingMa
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lIsUsingMa
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lIsUsingMa
	xor	bl, bl
$LN6@lIsUsingMa:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lIsUsingMa
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lIsUsingMa:

; 9475 : 	if(pkPlayer)

	test	edi, edi
	je	SHORT $LN15@lIsUsingMa

; 9476 : 	{
; 9477 : 		lua_pushboolean(L, pkPlayer->GetPlayerTraits()->IsUsingMayaCalendar());

	mov	ecx, edi
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	ecx, eax
	call	?IsUsingMayaCalendar@CvPlayerTraits@@QBE_NXZ ; CvPlayerTraits::IsUsingMayaCalendar
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
$LN15@lIsUsingMa:
	pop	edi
	pop	esi
	pop	ebp

; 9478 : 	}
; 9479 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9480 : }

	ret	0
?lIsUsingMayaCalendar@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsUsingMayaCalendar
_TEXT	ENDS
PUBLIC	?lGetMayaCalendarString@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMayaCalendarString
EXTRN	?GetMayaCalendarString@CvPlayerTraits@@QAE?AVCvString@@XZ:PROC ; CvPlayerTraits::GetMayaCalendarString
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetMayaCalendarString@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetMayaCalendarString@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetMayaCalendarString@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetMayaCalendarString@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetMayaCalendarString@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T262637 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetMayaCalendarString@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMayaCalendarString, COMDAT

; 9483 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetMayaCalendarString@CvLuaPlayer@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 28					; 0000001cH
	push	ebx
	push	ebp
	push	esi

; 9484 : 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+48]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@lGetMayaCa
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@lGetMayaCa
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@lGetMayaCa
	xor	bl, bl
$LN7@lGetMayaCa:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@lGetMayaCa
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@lGetMayaCa:

; 9485 : 	if(pkPlayer)

	test	edi, edi
	je	SHORT $LN21@lGetMayaCa

; 9486 : 	{
; 9487 : 		lua_pushstring(L, pkPlayer->GetPlayerTraits()->GetMayaCalendarString());

	lea	eax, DWORD PTR $T262637[esp+56]
	push	eax
	mov	ecx, edi
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	ecx, eax
	call	?GetMayaCalendarString@CvPlayerTraits@@QAE?AVCvString@@XZ ; CvPlayerTraits::GetMayaCalendarString
	mov	ecx, eax
	mov	DWORD PTR __$EHRec$[esp+64], 0
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8
	lea	ecx, DWORD PTR $T262637[esp+56]
	mov	DWORD PTR __$EHRec$[esp+64], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN21@lGetMayaCa:

; 9488 : 	}
; 9489 : 	return 1;
; 9490 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+56]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetMayaCalendarString@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR $T262637[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetMayaCalendarString@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetMayaCalendarString@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetMayaCalendarString@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMayaCalendarString
PUBLIC	?lGetMayaCalendarLongString@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMayaCalendarLongString
EXTRN	?GetMayaCalendarLongString@CvPlayerTraits@@QAE?AVCvString@@XZ:PROC ; CvPlayerTraits::GetMayaCalendarLongString
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetMayaCalendarLongString@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetMayaCalendarLongString@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetMayaCalendarLongString@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetMayaCalendarLongString@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetMayaCalendarLongString@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T262680 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetMayaCalendarLongString@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetMayaCalendarLongString, COMDAT

; 9493 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetMayaCalendarLongString@CvLuaPlayer@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 28					; 0000001cH
	push	ebx
	push	ebp
	push	esi

; 9494 : 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+48]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@lGetMayaCa@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@lGetMayaCa@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@lGetMayaCa@2
	xor	bl, bl
$LN7@lGetMayaCa@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@lGetMayaCa@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@lGetMayaCa@2:

; 9495 : 	if(pkPlayer)

	test	edi, edi
	je	SHORT $LN21@lGetMayaCa@2

; 9496 : 	{
; 9497 : 		lua_pushstring(L, pkPlayer->GetPlayerTraits()->GetMayaCalendarLongString());

	lea	eax, DWORD PTR $T262680[esp+56]
	push	eax
	mov	ecx, edi
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	ecx, eax
	call	?GetMayaCalendarLongString@CvPlayerTraits@@QAE?AVCvString@@XZ ; CvPlayerTraits::GetMayaCalendarLongString
	mov	ecx, eax
	mov	DWORD PTR __$EHRec$[esp+64], 0
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8
	lea	ecx, DWORD PTR $T262680[esp+56]
	mov	DWORD PTR __$EHRec$[esp+64], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN21@lGetMayaCa@2:

; 9498 : 	}
; 9499 : 	return 1;
; 9500 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+56]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetMayaCalendarLongString@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR $T262680[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetMayaCalendarLongString@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetMayaCalendarLongString@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetMayaCalendarLongString@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetMayaCalendarLongString
PUBLIC	?lGetExtraBuildingHappinessFromPolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetExtraBuildingHappinessFromPolicies
EXTRN	?GetBuildingClassHappiness@CvPolicyEntry@@QBEHH@Z:PROC ; CvPolicyEntry::GetBuildingClassHappiness
EXTRN	?getNumPolicyInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumPolicyInfos
EXTRN	?GetBuildingClassType@CvBuildingEntry@@QBEHXZ:PROC ; CvBuildingEntry::GetBuildingClassType
; Function compile flags: /Ogtpy
;	COMDAT ?lGetExtraBuildingHappinessFromPolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iExtraHappiness$235181 = -8				; size = 4
_eBuildingClass$235179 = -4				; size = 4
_L$ = 8							; size = 4
?lGetExtraBuildingHappinessFromPolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetExtraBuildingHappinessFromPolicies, COMDAT

; 9503 : {

	sub	esp, 8
	push	ebx
	push	ebp
	push	esi
	push	edi

; 9504 : 	CvPlayer* pkPlayer = GetInstance(L);

	mov	edi, DWORD PTR _L$[esp+20]
	push	edi
	call	_lua_gettop
	push	1
	push	edi
	mov	esi, eax
	mov	bl, 1
	xor	ebp, ebp
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN12@lGetExtraB
	push	OFFSET $SG237728
	push	1
	push	edi
	call	_lua_getfield
	push	-1
	push	edi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN12@lGetExtraB
	push	-1
	push	edi
	call	_lua_touserdata
	mov	ebp, eax
	add	esp, 8
	test	ebp, ebp
	je	SHORT $LN12@lGetExtraB
	xor	bl, bl
$LN12@lGetExtraB:
	push	esi
	push	edi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN19@lGetExtraB
	push	OFFSET $SG237734
	push	edi
	call	_luaL_error
	push	OFFSET $SG237742
	push	edi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN19@lGetExtraB:

; 9505 : 	if(pkPlayer)

	xor	esi, esi
	cmp	ebp, esi
	je	$LN6@lGetExtraB

; 9506 : 	{
; 9507 : 		const BuildingTypes eBuilding = (BuildingTypes) lua_tointeger(L, 2);

	push	2
	push	edi
	call	_lua_tointeger
	add	esp, 8

; 9508 : 		CvBuildingEntry* pkBuildingInfo = GC.getBuildingInfo(eBuilding);

	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo

; 9509 : 		if(pkBuildingInfo)

	cmp	eax, esi
	je	$LN6@lGetExtraB

; 9510 : 		{
; 9511 : 			BuildingClassTypes eBuildingClass = (BuildingClassTypes)pkBuildingInfo->GetBuildingClassType();

	mov	ecx, eax
	call	?GetBuildingClassType@CvBuildingEntry@@QBEHXZ ; CvBuildingEntry::GetBuildingClassType

; 9512 : 
; 9513 : 			int iExtraHappiness = 0;
; 9514 : 
; 9515 : #ifdef AUI_WARNING_FIXES
; 9516 : 			for (uint iPolicyLoop = 0; iPolicyLoop < GC.getNumPolicyInfos(); iPolicyLoop++)
; 9517 : #else
; 9518 : 			for(int iPolicyLoop = 0; iPolicyLoop < GC.getNumPolicyInfos(); iPolicyLoop++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR _eBuildingClass$235179[esp+24], eax
	mov	DWORD PTR _iExtraHappiness$235181[esp+24], esi
	call	?getNumPolicyInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumPolicyInfos
	test	eax, eax
	jle	SHORT $LN3@lGetExtraB
$LL23@lGetExtraB:

; 9519 : #endif
; 9520 : 			{
; 9521 : 				const PolicyTypes ePolicy = static_cast<PolicyTypes>(iPolicyLoop);
; 9522 : 				CvPolicyEntry* pkPolicyInfo = GC.getPolicyInfo(ePolicy);

	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getPolicyInfo@CvGlobals@@QAEPAVCvPolicyEntry@@W4PolicyTypes@@@Z ; CvGlobals::getPolicyInfo
	mov	ebx, eax

; 9523 : 				if(pkPolicyInfo)

	test	ebx, ebx
	je	SHORT $LN4@lGetExtraB

; 9524 : 				{
; 9525 : 					if(pkPlayer->GetPlayerPolicies()->HasPolicy(ePolicy) && !pkPlayer->GetPlayerPolicies()->IsPolicyBlocked(ePolicy))

	push	esi
	mov	ecx, ebp
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?HasPolicy@CvPlayerPolicies@@QBE_NW4PolicyTypes@@@Z ; CvPlayerPolicies::HasPolicy
	test	al, al
	je	SHORT $LN4@lGetExtraB
	push	esi
	mov	ecx, ebp
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?IsPolicyBlocked@CvPlayerPolicies@@QBE_NW4PolicyTypes@@@Z ; CvPlayerPolicies::IsPolicyBlocked
	test	al, al
	jne	SHORT $LN4@lGetExtraB

; 9526 : 					{
; 9527 : 						iExtraHappiness += pkPolicyInfo->GetBuildingClassHappiness(eBuildingClass);

	mov	eax, DWORD PTR _eBuildingClass$235179[esp+24]
	push	eax
	mov	ecx, ebx
	call	?GetBuildingClassHappiness@CvPolicyEntry@@QBEHH@Z ; CvPolicyEntry::GetBuildingClassHappiness
	add	DWORD PTR _iExtraHappiness$235181[esp+24], eax
$LN4@lGetExtraB:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	inc	esi
	call	?getNumPolicyInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumPolicyInfos
	cmp	esi, eax
	jl	SHORT $LL23@lGetExtraB
$LN3@lGetExtraB:

; 9528 : 					}
; 9529 : 				}
; 9530 : 			}
; 9531 : 
; 9532 : 			lua_pushinteger(L, iExtraHappiness);

	mov	ecx, DWORD PTR _iExtraHappiness$235181[esp+24]
	push	ecx
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 9533 : 			return 1;

	mov	eax, 1
	pop	ebx

; 9540 : }

	add	esp, 8
	ret	0
$LN6@lGetExtraB:

; 9534 : 		}
; 9535 : 	}
; 9536 : 
; 9537 : 	//BUG: This can't be right...
; 9538 : 	lua_pushinteger(L, -1);

	push	-1
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 9539 : 	return 0;

	xor	eax, eax
	pop	ebx

; 9540 : }

	add	esp, 8
	ret	0
?lGetExtraBuildingHappinessFromPolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetExtraBuildingHappinessFromPolicies
_TEXT	ENDS
PUBLIC	?lGetNextCity@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetNextCity
EXTRN	?IsPuppet@CvCity@@QBE_NXZ:PROC			; CvCity::IsPuppet
EXTRN	?getIndex@CvCity@@QBEHXZ:PROC			; CvCity::getIndex
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNextCity@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkInstance$262764 = -8					; size = 4
_iLoop$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNextCity@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetNextCity, COMDAT

; 9545 : {

	sub	esp, 8
	push	ebx
	push	ebp
	push	esi

; 9546 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+16]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	xor	ebp, ebp
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$262764[esp+36], ebp
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN29@lGetNextCi@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN29@lGetNextCi@2
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$262764[esp+24], eax
	cmp	eax, ebp
	je	SHORT $LN29@lGetNextCi@2
	xor	bl, bl
$LN29@lGetNextCi@2:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN18@lGetNextCi@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN18@lGetNextCi@2:

; 9547 : 	CvCity* pCurrentCity = CvLuaCity::GetInstance(L, 2);

	push	esi
	call	_lua_gettop
	push	2
	push	esi
	mov	edi, eax
	mov	bl, 1
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN31@lGetNextCi@2
	push	OFFSET $SG237679
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN31@lGetNextCi@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	ebp, eax
	add	esp, 8
	test	ebp, ebp
	je	SHORT $LN31@lGetNextCi@2
	xor	bl, bl
$LN31@lGetNextCi@2:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN21@lGetNextCi@2
	push	esi
	call	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
	add	esp, 4
$LN21@lGetNextCi@2:

; 9548 : 	CvCity* pLoopCity = NULL;
; 9549 : 	CvCity* pNextCity = NULL;
; 9550 : 	int	iLoop = pCurrentCity->getIndex();

	mov	ecx, ebp
	xor	ebx, ebx
	call	?getIndex@CvCity@@QBEHXZ		; CvCity::getIndex

; 9551 : 	iLoop++;

	inc	eax
	mov	DWORD PTR _iLoop$[esp+24], eax
$LL6@lGetNextCi@2:

; 9552 : 
; 9553 : 	do
; 9554 : 	{
; 9555 : 		pLoopCity = pkPlayer->nextCity(&iLoop, false);

	mov	ecx, DWORD PTR _pkInstance$262764[esp+24]
	push	0
	lea	eax, DWORD PTR _iLoop$[esp+28]
	push	eax
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	edi, eax

; 9556 : 
; 9557 : 		if(pLoopCity == NULL)

	test	edi, edi
	jne	SHORT $LN28@lGetNextCi@2

; 9558 : 		{
; 9559 : 			pLoopCity = pkPlayer->firstCity(&iLoop, false);

	push	eax
	lea	ecx, DWORD PTR _iLoop$[esp+28]
	push	ecx
	mov	ecx, DWORD PTR _pkInstance$262764[esp+32]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	edi, eax

; 9560 : 		}
; 9561 : 
; 9562 : 		if((pLoopCity != NULL) && (pLoopCity != pCurrentCity) && !pLoopCity->IsPuppet())  // we don't want the player to be able to cycle to puppeted cities - it kind of defeats teh whole purpose

	test	edi, edi
	je	SHORT $LN5@lGetNextCi@2
$LN28@lGetNextCi@2:
	cmp	edi, ebp
	je	SHORT $LN1@lGetNextCi@2
	mov	ecx, edi
	call	?IsPuppet@CvCity@@QBE_NXZ		; CvCity::IsPuppet
	test	al, al
	jne	SHORT $LN5@lGetNextCi@2

; 9563 : 		{
; 9564 : 			pNextCity = pLoopCity;

	mov	ebx, edi
$LN5@lGetNextCi@2:

; 9565 : 		}
; 9566 : 
; 9567 : 	}
; 9568 : 	while((pLoopCity != pCurrentCity) && !pNextCity);

	cmp	edi, ebp
	je	SHORT $LN1@lGetNextCi@2
	test	ebx, ebx
	je	SHORT $LL6@lGetNextCi@2
$LN1@lGetNextCi@2:

; 9569 : 
; 9570 : 
; 9571 : 	CvLuaCity::Push(L, pNextCity);

	push	ebx
	push	esi
	call	?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 9572 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9573 : }

	add	esp, 8
	ret	0
?lGetNextCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetNextCity
_TEXT	ENDS
PUBLIC	?lGetPrevCity@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetPrevCity
; Function compile flags: /Ogtpy
;	COMDAT ?lGetPrevCity@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkInstance$262806 = -8					; size = 4
_iLoop$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetPrevCity@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetPrevCity, COMDAT

; 9576 : {

	sub	esp, 8
	push	ebx
	push	ebp
	push	esi

; 9577 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+16]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	xor	ebp, ebp
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$262806[esp+36], ebp
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN29@lGetPrevCi@6
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN29@lGetPrevCi@6
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$262806[esp+24], eax
	cmp	eax, ebp
	je	SHORT $LN29@lGetPrevCi@6
	xor	bl, bl
$LN29@lGetPrevCi@6:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN18@lGetPrevCi@6
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN18@lGetPrevCi@6:

; 9578 : 	CvCity* pCurrentCity = CvLuaCity::GetInstance(L, 2);

	push	esi
	call	_lua_gettop
	push	2
	push	esi
	mov	edi, eax
	mov	bl, 1
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN32@lGetPrevCi@6
	push	OFFSET $SG237679
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN32@lGetPrevCi@6
	push	-1
	push	esi
	call	_lua_touserdata
	mov	ebp, eax
	add	esp, 8
	test	ebp, ebp
	je	SHORT $LN32@lGetPrevCi@6
	xor	bl, bl
$LN32@lGetPrevCi@6:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN21@lGetPrevCi@6
	push	esi
	call	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
	add	esp, 4
$LN21@lGetPrevCi@6:

; 9579 : 	CvCity* pLoopCity = NULL;
; 9580 : 	CvCity* pPrevCity = NULL;
; 9581 : 	int	iLoop = pCurrentCity->getIndex();

	mov	ecx, ebp
	xor	ebx, ebx
	call	?getIndex@CvCity@@QBEHXZ		; CvCity::getIndex

; 9582 : 	iLoop--;

	dec	eax
	mov	DWORD PTR _iLoop$[esp+24], eax
$LL6@lGetPrevCi@6:

; 9583 : 
; 9584 : 	do
; 9585 : 	{
; 9586 : 		pLoopCity = pkPlayer->nextCity(&iLoop, true);

	mov	ecx, DWORD PTR _pkInstance$262806[esp+24]
	push	1
	lea	eax, DWORD PTR _iLoop$[esp+28]
	push	eax
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	edi, eax

; 9587 : 
; 9588 : 		if(pLoopCity == NULL)

	test	edi, edi
	jne	SHORT $LN31@lGetPrevCi@6

; 9589 : 		{
; 9590 : 			pLoopCity = pkPlayer->firstCity(&iLoop, true);

	push	1
	lea	ecx, DWORD PTR _iLoop$[esp+28]
	push	ecx
	mov	ecx, DWORD PTR _pkInstance$262806[esp+32]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	edi, eax

; 9591 : 		}
; 9592 : 
; 9593 : 		if((pLoopCity != NULL) && (pLoopCity != pCurrentCity) && !pLoopCity->IsPuppet())  // we don't want the player to be able to cycle to puppeted cities - it kind of defeats teh whole purpose

	test	edi, edi
	je	SHORT $LN5@lGetPrevCi@6
$LN31@lGetPrevCi@6:
	cmp	edi, ebp
	je	SHORT $LN1@lGetPrevCi@6
	mov	ecx, edi
	call	?IsPuppet@CvCity@@QBE_NXZ		; CvCity::IsPuppet
	test	al, al
	jne	SHORT $LN5@lGetPrevCi@6

; 9594 : 		{
; 9595 : 			pPrevCity = pLoopCity;

	mov	ebx, edi
$LN5@lGetPrevCi@6:

; 9596 : 		}
; 9597 : 
; 9598 : 	}
; 9599 : 	while((pLoopCity != pCurrentCity) && !pPrevCity);

	cmp	edi, ebp
	je	SHORT $LN1@lGetPrevCi@6
	test	ebx, ebx
	je	SHORT $LL6@lGetPrevCi@6
$LN1@lGetPrevCi@6:

; 9600 : 
; 9601 : 	CvLuaCity::Push(L, pPrevCity);

	push	ebx
	push	esi
	call	?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 9602 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9603 : }

	add	esp, 8
	ret	0
?lGetPrevCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetPrevCity
_TEXT	ENDS
PUBLIC	?lGetFreePromotionCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFreePromotionCount
EXTRN	?GetFreePromotionCount@CvPlayer@@QBEHW4PromotionTypes@@@Z:PROC ; CvPlayer::GetFreePromotionCount
; Function compile flags: /Ogtpy
;	COMDAT ?lGetFreePromotionCount@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFreePromotionCount@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetFreePromotionCount, COMDAT

; 9608 : {

	push	ebx
	push	ebp
	push	esi

; 9609 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetFreePr
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetFreePr
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetFreePr
	xor	bl, bl
$LN5@lGetFreePr:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetFreePr
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetFreePr:

; 9610 : 	int iPromotionIndex = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 9611 : 	int iResult = pkPlayer->GetFreePromotionCount((PromotionTypes)iPromotionIndex);

	push	eax
	mov	ecx, edi
	call	?GetFreePromotionCount@CvPlayer@@QBEHW4PromotionTypes@@@Z ; CvPlayer::GetFreePromotionCount

; 9612 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 9613 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9614 : }

	ret	0
?lGetFreePromotionCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetFreePromotionCount
_TEXT	ENDS
PUBLIC	?lIsFreePromotion@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsFreePromotion
EXTRN	?IsFreePromotion@CvPlayer@@QBE_NW4PromotionTypes@@@Z:PROC ; CvPlayer::IsFreePromotion
; Function compile flags: /Ogtpy
;	COMDAT ?lIsFreePromotion@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsFreePromotion@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsFreePromotion, COMDAT

; 9619 : {

	push	ebx
	push	ebp
	push	esi

; 9620 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsFreePro
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsFreePro
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsFreePro
	xor	bl, bl
$LN5@lIsFreePro:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsFreePro
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsFreePro:

; 9621 : 	int iPromotionIndex = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 9622 : 	bool bResult = pkPlayer->IsFreePromotion((PromotionTypes)iPromotionIndex);

	push	eax
	mov	ecx, edi
	call	?IsFreePromotion@CvPlayer@@QBE_NW4PromotionTypes@@@Z ; CvPlayer::IsFreePromotion

; 9623 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 9624 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9625 : }

	ret	0
?lIsFreePromotion@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsFreePromotion
_TEXT	ENDS
PUBLIC	?lChangeFreePromotionCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeFreePromotionCount
EXTRN	?ChangeFreePromotionCount@CvPlayer@@QAEXW4PromotionTypes@@H@Z:PROC ; CvPlayer::ChangeFreePromotionCount
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeFreePromotionCount@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeFreePromotionCount@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lChangeFreePromotionCount, COMDAT

; 9630 : {

	push	ebx
	push	ebp
	push	esi

; 9631 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lChangeFre
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lChangeFre
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lChangeFre
	xor	bl, bl
$LN5@lChangeFre:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lChangeFre
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lChangeFre:

; 9632 : 	int iPromotionIndex = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 9633 : 	const int iValue = lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H

; 9634 : 	pkPlayer->ChangeFreePromotionCount((PromotionTypes)iPromotionIndex, iValue);

	push	eax
	push	ebx
	mov	ecx, edi
	call	?ChangeFreePromotionCount@CvPlayer@@QAEXW4PromotionTypes@@H@Z ; CvPlayer::ChangeFreePromotionCount
	pop	edi
	pop	esi
	pop	ebp

; 9635 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9636 : }

	ret	0
?lChangeFreePromotionCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lChangeFreePromotionCount
_TEXT	ENDS
PUBLIC	?lGetEmbarkedGraphicOverride@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetEmbarkedGraphicOverride
; Function compile flags: /Ogtpy
;	COMDAT ?lGetEmbarkedGraphicOverride@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetEmbarkedGraphicOverride@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetEmbarkedGraphicOverride, COMDAT

; 9641 : {

	push	ebx
	push	ebp
	push	esi

; 9642 : 	CvPlayer* pPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetEmbark
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetEmbark
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetEmbark
	xor	bl, bl
$LN5@lGetEmbark:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetEmbark
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetEmbark:

; 9643 : 	lua_pushstring(L, pPlayer->GetEmbarkedGraphicOverride());

	lea	ecx, DWORD PTR [edi+3132]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 9644 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9645 : }

	ret	0
?lGetEmbarkedGraphicOverride@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetEmbarkedGraphicOverride
_TEXT	ENDS
PUBLIC	?lSetEmbarkedGraphicOverride@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetEmbarkedGraphicOverride
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lSetEmbarkedGraphicOverride@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lSetEmbarkedGraphicOverride@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lSetEmbarkedGraphicOverride@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lSetEmbarkedGraphicOverride@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lSetEmbarkedGraphicOverride@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T262947 = -44						; size = 4
_szGraphic$ = -40					; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lSetEmbarkedGraphicOverride@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lSetEmbarkedGraphicOverride, COMDAT

; 9650 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lSetEmbarkedGraphicOverride@CvLuaPlayer@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 32					; 00000020H
	push	ebx
	push	ebp
	push	esi

; 9651 : 	CvPlayer* pPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+52]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@lSetEmbark
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@lSetEmbark
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@lSetEmbark
	xor	bl, bl
$LN7@lSetEmbark:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@lSetEmbark
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@lSetEmbark:

; 9652 : 	const CvString szGraphic = lua_tostring(L, 2);

	push	0
	push	2
	push	esi
	call	_lua_tolstring
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN19@lSetEmbark
	mov	eax, OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN19@lSetEmbark:
	push	eax
	lea	ecx, DWORD PTR _szGraphic$[esp+64]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z

; 9653 : 
; 9654 : 	pPlayer->SetEmbarkedGraphicOverride(szGraphic);

	sub	esp, 28					; 0000001cH
	lea	eax, DWORD PTR _szGraphic$[esp+88]
	mov	DWORD PTR $T262947[esp+88], esp
	mov	ecx, esp
	push	eax
	mov	DWORD PTR __$EHRec$[esp+100], 0
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, edi
	call	?SetEmbarkedGraphicOverride@CvPlayer@@QAEXVCvString@@@Z ; CvPlayer::SetEmbarkedGraphicOverride

; 9655 : 	return 0;

	lea	ecx, DWORD PTR _szGraphic$[esp+60]
	mov	DWORD PTR __$EHRec$[esp+68], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 9656 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+60]
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	add	esp, 44					; 0000002cH
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lSetEmbarkedGraphicOverride@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _szGraphic$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lSetEmbarkedGraphicOverride@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lSetEmbarkedGraphicOverride@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lSetEmbarkedGraphicOverride@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lSetEmbarkedGraphicOverride
PUBLIC	?lAddTemporaryDominanceZone@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lAddTemporaryDominanceZone
EXTRN	?AddTemporaryZone@CvTacticalAI@@QAEXVCvTemporaryZone@@@Z:PROC ; CvTacticalAI::AddTemporaryZone
EXTRN	?GetTacticalAI@CvPlayer@@QBEPAVCvTacticalAI@@XZ:PROC ; CvPlayer::GetTacticalAI
; Function compile flags: /Ogtpy
;	COMDAT ?lAddTemporaryDominanceZone@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkInstance$263013 = -24				; size = 4
_zone$ = -20						; size = 20
_L$ = 8							; size = 4
?lAddTemporaryDominanceZone@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lAddTemporaryDominanceZone, COMDAT

; 9659 : {

	sub	esp, 24					; 00000018H
	push	ebx
	push	ebp
	push	esi

; 9660 : 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+32]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$263013[esp+52], 0
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lAddTempor
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lAddTempor
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$263013[esp+40], eax
	test	eax, eax
	je	SHORT $LN5@lAddTempor
	xor	bl, bl
$LN5@lAddTempor:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lAddTempor
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lAddTempor:

; 9661 : 	const int iX = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 9662 : 	const int iY = lua_tointeger(L, 3);

	push	3
	push	esi

; 9663 : 
; 9664 : 	// Notify tactical AI to focus on this area
; 9665 : 	CvTemporaryZone zone;
; 9666 : 	zone.SetX(iX);

	mov	edi, eax
	call	_lua_tointeger

; 9667 : 	zone.SetY(iY);
; 9668 : 	zone.SetTargetType(AI_TACTICAL_TARGET_CITY);
; 9669 : 	zone.SetLastTurn(GC.getGame().getGameTurn() + GC.getAI_TACTICAL_MAP_TEMP_ZONE_TURNS());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	ebp, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2452
	add	esp, 16					; 00000010H
	mov	esi, eax
	mov	ebx, 1
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn

; 9670 : 	pkPlayer->GetTacticalAI()->AddTemporaryZone(zone);

	sub	esp, 20					; 00000014H
	mov	ecx, esp
	mov	DWORD PTR [ecx], edi
	mov	DWORD PTR [ecx+4], esi
	add	eax, ebp
	mov	DWORD PTR [ecx+8], ebx
	mov	DWORD PTR [ecx+12], eax
	mov	eax, DWORD PTR _zone$[esp+76]
	mov	DWORD PTR [ecx+16], eax
	mov	ecx, DWORD PTR _pkInstance$263013[esp+60]
	call	?GetTacticalAI@CvPlayer@@QBEPAVCvTacticalAI@@XZ ; CvPlayer::GetTacticalAI
	mov	ecx, eax
	call	?AddTemporaryZone@CvTacticalAI@@QAEXVCvTemporaryZone@@@Z ; CvTacticalAI::AddTemporaryZone

; 9671 : 
; 9672 : 	return 1;
; 9673 : }

	pop	edi
	pop	esi
	pop	ebp
	mov	eax, ebx
	pop	ebx
	add	esp, 24					; 00000018H
	ret	0
?lAddTemporaryDominanceZone@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lAddTemporaryDominanceZone
_TEXT	ENDS
PUBLIC	?lGetNaturalWonderYieldModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNaturalWonderYieldModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNaturalWonderYieldModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iYieldModifier$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetNaturalWonderYieldModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNaturalWonderYieldModifier, COMDAT

; 9676 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 9677 : 	int iYieldModifier = 0;
; 9678 : 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	xor	edi, edi
	push	esi
	mov	DWORD PTR _iYieldModifier$[esp+24], edi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@lGetNatura
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@lGetNatura
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@lGetNatura
	xor	bl, bl
$LN7@lGetNatura:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@lGetNatura
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@lGetNatura:

; 9679 : 	if(pkPlayer)

	test	edi, edi
	je	SHORT $LN18@lGetNatura

; 9680 : 	{
; 9681 : 		CvPlayerTraits* pkPlayerTraits = pkPlayer->GetPlayerTraits();

	mov	ecx, edi
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits

; 9682 : 		if(pkPlayerTraits)

	test	eax, eax
	je	SHORT $LN18@lGetNatura

; 9683 : 		{
; 9684 : 			iYieldModifier = pkPlayerTraits->GetNaturalWonderYieldModifier();

	mov	eax, DWORD PTR [eax+212]
	jmp	SHORT $LN16@lGetNatura
$LN18@lGetNatura:
	mov	eax, DWORD PTR _iYieldModifier$[esp+20]
$LN16@lGetNatura:

; 9685 : 		}
; 9686 : 	}
; 9687 : 
; 9688 : 	lua_pushinteger(L, iYieldModifier);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 9689 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9690 : }

	pop	ecx
	ret	0
?lGetNaturalWonderYieldModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNaturalWonderYieldModifier
_TEXT	ENDS
PUBLIC	?lGetPolicyBuildingClassYieldModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyBuildingClassYieldModifier
EXTRN	?GetBuildingClassYieldModifier@CvPlayerPolicies@@QAEHW4BuildingClassTypes@@W4YieldTypes@@@Z:PROC ; CvPlayerPolicies::GetBuildingClassYieldModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetPolicyBuildingClassYieldModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eYieldType$ = -8					; size = 4
_eBuildingClass$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetPolicyBuildingClassYieldModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPolicyBuildingClassYieldModifier, COMDAT

; 9693 : {

	sub	esp, 8
	push	ebx
	push	ebp
	push	esi

; 9694 : 	const BuildingClassTypes eBuildingClass = (BuildingClassTypes)luaL_checkint(L, 2);

	mov	esi, DWORD PTR _L$[esp+16]
	push	edi
	push	2
	push	esi
	call	_luaL_checkinteger

; 9695 : 	const YieldTypes eYieldType = (YieldTypes)luaL_checkint(L, 3);

	push	3
	push	esi
	mov	DWORD PTR _eBuildingClass$[esp+40], eax
	call	_luaL_checkinteger

; 9696 : 
; 9697 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	esi
	mov	DWORD PTR _eYieldType$[esp+44], eax
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 28					; 0000001cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetPolicy@12
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetPolicy@12
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetPolicy@12
	xor	bl, bl
$LN6@lGetPolicy@12:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lGetPolicy@12
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lGetPolicy@12:

; 9698 : 	if(pkPlayer)

	test	edi, edi
	je	SHORT $LN1@lGetPolicy@12

; 9699 : 	{
; 9700 : 		int modifier = pkPlayer->GetPlayerPolicies()->GetBuildingClassYieldModifier(eBuildingClass, eYieldType);

	mov	eax, DWORD PTR _eYieldType$[esp+24]
	mov	ecx, DWORD PTR _eBuildingClass$[esp+24]
	push	eax
	push	ecx
	mov	ecx, edi
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetBuildingClassYieldModifier@CvPlayerPolicies@@QAEHW4BuildingClassTypes@@W4YieldTypes@@@Z ; CvPlayerPolicies::GetBuildingClassYieldModifier

; 9701 : 		lua_pushinteger(L, modifier);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 9702 : 
; 9703 : 		return 1;

	mov	eax, 1
	pop	ebx

; 9707 : }

	add	esp, 8
	ret	0
$LN1@lGetPolicy@12:
	pop	edi
	pop	esi
	pop	ebp

; 9704 : 	}
; 9705 : 
; 9706 : 	return 0;

	xor	eax, eax
	pop	ebx

; 9707 : }

	add	esp, 8
	ret	0
?lGetPolicyBuildingClassYieldModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPolicyBuildingClassYieldModifier
_TEXT	ENDS
PUBLIC	?lGetPolicyBuildingClassYieldChange@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyBuildingClassYieldChange
EXTRN	?GetBuildingClassYieldChange@CvPlayerPolicies@@QAEHW4BuildingClassTypes@@W4YieldTypes@@@Z:PROC ; CvPlayerPolicies::GetBuildingClassYieldChange
; Function compile flags: /Ogtpy
;	COMDAT ?lGetPolicyBuildingClassYieldChange@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eYieldType$ = -8					; size = 4
_eBuildingClass$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetPolicyBuildingClassYieldChange@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPolicyBuildingClassYieldChange, COMDAT

; 9711 : {

	sub	esp, 8
	push	ebx
	push	ebp
	push	esi

; 9712 : 	const BuildingClassTypes eBuildingClass = (BuildingClassTypes)luaL_checkint(L, 2);

	mov	esi, DWORD PTR _L$[esp+16]
	push	edi
	push	2
	push	esi
	call	_luaL_checkinteger

; 9713 : 	const YieldTypes eYieldType = (YieldTypes)luaL_checkint(L, 3);

	push	3
	push	esi
	mov	DWORD PTR _eBuildingClass$[esp+40], eax
	call	_luaL_checkinteger

; 9714 : 
; 9715 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	esi
	mov	DWORD PTR _eYieldType$[esp+44], eax
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 28					; 0000001cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetPolicy@13
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetPolicy@13
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetPolicy@13
	xor	bl, bl
$LN6@lGetPolicy@13:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lGetPolicy@13
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lGetPolicy@13:

; 9716 : 	if(pkPlayer)

	test	edi, edi
	je	SHORT $LN1@lGetPolicy@13

; 9717 : 	{
; 9718 : 		int modifier = pkPlayer->GetPlayerPolicies()->GetBuildingClassYieldChange(eBuildingClass, eYieldType);

	mov	eax, DWORD PTR _eYieldType$[esp+24]
	mov	ecx, DWORD PTR _eBuildingClass$[esp+24]
	push	eax
	push	ecx
	mov	ecx, edi
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetBuildingClassYieldChange@CvPlayerPolicies@@QAEHW4BuildingClassTypes@@W4YieldTypes@@@Z ; CvPlayerPolicies::GetBuildingClassYieldChange

; 9719 : 		lua_pushinteger(L, modifier);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 9720 : 
; 9721 : 		return 1;

	mov	eax, 1
	pop	ebx

; 9725 : }

	add	esp, 8
	ret	0
$LN1@lGetPolicy@13:
	pop	edi
	pop	esi
	pop	ebp

; 9722 : 	}
; 9723 : 
; 9724 : 	return 0;

	xor	eax, eax
	pop	ebx

; 9725 : }

	add	esp, 8
	ret	0
?lGetPolicyBuildingClassYieldChange@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPolicyBuildingClassYieldChange
_TEXT	ENDS
PUBLIC	?lGetPlayerBuildingClassYieldChange@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPlayerBuildingClassYieldChange
EXTRN	?GetBuildingClassYieldChange@CvPlayer@@QAEHW4BuildingClassTypes@@W4YieldTypes@@@Z:PROC ; CvPlayer::GetBuildingClassYieldChange
; Function compile flags: /Ogtpy
;	COMDAT ?lGetPlayerBuildingClassYieldChange@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eYieldType$ = -8					; size = 4
_eBuildingClass$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetPlayerBuildingClassYieldChange@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPlayerBuildingClassYieldChange, COMDAT

; 9759 : {

	sub	esp, 8
	push	ebx
	push	ebp
	push	esi

; 9760 : 	const BuildingClassTypes eBuildingClass = (BuildingClassTypes)luaL_checkint(L, 2);

	mov	esi, DWORD PTR _L$[esp+16]
	push	edi
	push	2
	push	esi
	call	_luaL_checkinteger

; 9761 : 	const YieldTypes eYieldType = (YieldTypes)luaL_checkint(L, 3);

	push	3
	push	esi
	mov	DWORD PTR _eBuildingClass$[esp+40], eax
	call	_luaL_checkinteger

; 9762 : 
; 9763 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	esi
	mov	DWORD PTR _eYieldType$[esp+44], eax
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 28					; 0000001cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetPlayer@10
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetPlayer@10
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetPlayer@10
	xor	bl, bl
$LN6@lGetPlayer@10:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lGetPlayer@10
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lGetPlayer@10:

; 9764 : 	if(pkPlayer)

	test	edi, edi
	je	SHORT $LN1@lGetPlayer@10

; 9765 : 	{
; 9766 : 		int iChange = pkPlayer->GetBuildingClassYieldChange(eBuildingClass, eYieldType);

	mov	eax, DWORD PTR _eYieldType$[esp+24]
	mov	ecx, DWORD PTR _eBuildingClass$[esp+24]
	push	eax
	push	ecx
	mov	ecx, edi
	call	?GetBuildingClassYieldChange@CvPlayer@@QAEHW4BuildingClassTypes@@W4YieldTypes@@@Z ; CvPlayer::GetBuildingClassYieldChange

; 9767 : 		lua_pushinteger(L, iChange);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 9768 : 
; 9769 : 		return 1;

	mov	eax, 1
	pop	ebx

; 9773 : }

	add	esp, 8
	ret	0
$LN1@lGetPlayer@10:
	pop	edi
	pop	esi
	pop	ebp

; 9770 : 	}
; 9771 : 
; 9772 : 	return 0;

	xor	eax, eax
	pop	ebx

; 9773 : }

	add	esp, 8
	ret	0
?lGetPlayerBuildingClassYieldChange@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPlayerBuildingClassYieldChange
_TEXT	ENDS
PUBLIC	?lGetPlayerBuildingClassHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPlayerBuildingClassHappiness
EXTRN	?GetBuildingClassHappiness@CvBuildingEntry@@QBEHH@Z:PROC ; CvBuildingEntry::GetBuildingClassHappiness
EXTRN	?getBuildingClassInfo@CvGlobals@@QAEPAVCvBuildingClassInfo@@W4BuildingClassTypes@@@Z:PROC ; CvGlobals::getBuildingClassInfo
; Function compile flags: /Ogtpy
;	COMDAT ?lGetPlayerBuildingClassHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iChange$235324 = -8					; size = 4
_eOtherBuildingClass$ = -4				; size = 4
_L$ = 8							; size = 4
?lGetPlayerBuildingClassHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPlayerBuildingClassHappiness, COMDAT

; 9777 : {

	sub	esp, 8
	push	ebx
	push	ebp
	push	esi
	push	edi

; 9778 : 	const BuildingClassTypes eOtherBuildingClass = (BuildingClassTypes)luaL_checkint(L, 2);

	mov	edi, DWORD PTR _L$[esp+20]
	push	2
	push	edi
	call	_luaL_checkinteger

; 9779 : 
; 9780 : 	CvPlayer* pkPlayer = GetInstance(L);

	push	edi
	mov	DWORD PTR _eOtherBuildingClass$[esp+36], eax
	call	_lua_gettop
	push	1
	push	edi
	mov	esi, eax
	mov	bl, 1
	xor	ebp, ebp
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 5
	jne	SHORT $LN12@lGetPlayer@11
	push	OFFSET $SG237728
	push	1
	push	edi
	call	_lua_getfield
	push	-1
	push	edi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN12@lGetPlayer@11
	push	-1
	push	edi
	call	_lua_touserdata
	mov	ebp, eax
	add	esp, 8
	test	ebp, ebp
	je	SHORT $LN12@lGetPlayer@11
	xor	bl, bl
$LN12@lGetPlayer@11:
	push	esi
	push	edi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN19@lGetPlayer@11
	push	OFFSET $SG237734
	push	edi
	call	_luaL_error
	push	OFFSET $SG237742
	push	edi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN19@lGetPlayer@11:

; 9781 : 	if(pkPlayer)

	xor	ebx, ebx
	cmp	ebp, ebx
	je	$LN7@lGetPlayer@11

; 9782 : 	{
; 9783 : 		int iChange = 0;
; 9784 : 
; 9785 : #ifdef AUI_WARNING_FIXES
; 9786 : 		for (uint iI = 0; iI < GC.getNumBuildingClassInfos(); iI++)
; 9787 : #else
; 9788 : 		for(int iI = 0; iI < GC.getNumBuildingClassInfos(); iI++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR _iChange$235324[esp+24], ebx
	call	?getNumBuildingClassInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumBuildingClassInfos
	test	eax, eax
	jle	SHORT $LN4@lGetPlayer@11
	npad	10
$LL6@lGetPlayer@11:

; 9789 : #endif
; 9790 : 		{
; 9791 : 			BuildingClassTypes eParentBuildingClass = (BuildingClassTypes) iI;
; 9792 : 
; 9793 : 			CvBuildingClassInfo* pkBuildingClassInfo = GC.getBuildingClassInfo(eParentBuildingClass);

	push	ebx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingClassInfo@CvGlobals@@QAEPAVCvBuildingClassInfo@@W4BuildingClassTypes@@@Z ; CvGlobals::getBuildingClassInfo

; 9794 : 			if(!pkBuildingClassInfo)

	test	eax, eax
	je	SHORT $LN5@lGetPlayer@11

; 9795 : 			{
; 9796 : 				continue;
; 9797 : 			}
; 9798 : 			
; 9799 : 			BuildingTypes eParentBuilding = (BuildingTypes)pkPlayer->getCivilizationInfo().getCivilizationBuildings(eParentBuildingClass);

	push	ebx
	mov	ecx, ebp
	call	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ ; CvPlayer::getCivilizationInfo
	mov	ecx, eax
	call	?getCivilizationBuildings@CvCivilizationInfo@@QBEHH@Z ; CvCivilizationInfo::getCivilizationBuildings
	mov	esi, eax

; 9800 : 			if (eParentBuilding != NO_BUILDING && pkPlayer->countNumBuildings(eParentBuilding) > 0)

	cmp	esi, -1
	je	SHORT $LN5@lGetPlayer@11
	push	esi
	mov	ecx, ebp
	call	?countNumBuildings@CvPlayer@@QBEHW4BuildingTypes@@@Z ; CvPlayer::countNumBuildings
	test	eax, eax
	jle	SHORT $LN5@lGetPlayer@11

; 9801 : 			{
; 9802 : 				CvBuildingEntry* pkParentBuilding = GC.getBuildingInfo(eParentBuilding);

	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo

; 9803 : 				if (pkParentBuilding)

	test	eax, eax
	je	SHORT $LN5@lGetPlayer@11

; 9804 : 				{
; 9805 : 					iChange += pkParentBuilding->GetBuildingClassHappiness(eOtherBuildingClass);

	mov	ecx, DWORD PTR _eOtherBuildingClass$[esp+24]
	push	ecx
	mov	ecx, eax
	call	?GetBuildingClassHappiness@CvBuildingEntry@@QBEHH@Z ; CvBuildingEntry::GetBuildingClassHappiness
	add	DWORD PTR _iChange$235324[esp+24], eax
$LN5@lGetPlayer@11:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	inc	ebx
	call	?getNumBuildingClassInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumBuildingClassInfos
	cmp	ebx, eax
	jl	SHORT $LL6@lGetPlayer@11
$LN4@lGetPlayer@11:

; 9806 : 				}
; 9807 : 			}
; 9808 : 		}
; 9809 : 
; 9810 : 		lua_pushinteger(L, iChange);

	mov	edx, DWORD PTR _iChange$235324[esp+24]
	push	edx
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 9811 : 
; 9812 : 		return 1;

	mov	eax, 1
	pop	ebx

; 9816 : 	
; 9817 : }

	add	esp, 8
	ret	0
$LN7@lGetPlayer@11:
	pop	edi
	pop	esi
	pop	ebp

; 9813 : 	}
; 9814 : 
; 9815 : 	return 0;

	xor	eax, eax
	pop	ebx

; 9816 : 	
; 9817 : }

	add	esp, 8
	ret	0
?lGetPlayerBuildingClassHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPlayerBuildingClassHappiness
_TEXT	ENDS
PUBLIC	?lWasResurrectedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lWasResurrectedBy
EXTRN	?WasResurrectedBy@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::WasResurrectedBy
; Function compile flags: /Ogtpy
;	COMDAT ?lWasResurrectedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lWasResurrectedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lWasResurrectedBy, COMDAT

; 9822 : {

	push	ebx
	push	ebp
	push	esi

; 9823 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lWasResurr
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lWasResurr
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lWasResurr
	xor	bl, bl
$LN5@lWasResurr:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lWasResurr
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lWasResurr:

; 9824 : 	PlayerTypes eWithPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 9825 : 
; 9826 : 	const bool bResurrected = pkPlayer->GetDiplomacyAI()->WasResurrectedBy(eWithPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?WasResurrectedBy@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::WasResurrectedBy

; 9827 : 
; 9828 : 	lua_pushboolean(L, bResurrected);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 9829 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9830 : }

	ret	0
?lWasResurrectedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lWasResurrectedBy
_TEXT	ENDS
PUBLIC	?lWasResurrectedThisTurnBy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lWasResurrectedThisTurnBy
EXTRN	?WasResurrectedThisTurnBy@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::WasResurrectedThisTurnBy
; Function compile flags: /Ogtpy
;	COMDAT ?lWasResurrectedThisTurnBy@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lWasResurrectedThisTurnBy@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lWasResurrectedThisTurnBy, COMDAT

; 9834 : {

	push	ebx
	push	ebp
	push	esi

; 9835 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lWasResurr@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lWasResurr@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lWasResurr@2
	xor	bl, bl
$LN5@lWasResurr@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lWasResurr@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lWasResurr@2:

; 9836 : 	PlayerTypes eWithPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 9837 : 
; 9838 : 	const bool bResurrected = pkPlayer->GetDiplomacyAI()->WasResurrectedThisTurnBy(eWithPlayer);

	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?WasResurrectedThisTurnBy@CvDiplomacyAI@@QBE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::WasResurrectedThisTurnBy

; 9839 : 
; 9840 : 	lua_pushboolean(L, bResurrected);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 9841 : 	return 1;

	mov	eax, 1
	pop	ebx

; 9842 : }

	ret	0
?lWasResurrectedThisTurnBy@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lWasResurrectedThisTurnBy
_TEXT	ENDS
PUBLIC	?lGetDealValue@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetDealValue
EXTRN	?GetDealValue@CvDealAI@@QAEHPAVCvDeal@@AAH1_N@Z:PROC ; CvDealAI::GetDealValue
; Function compile flags: /Ogtpy
;	COMDAT ?lGetDealValue@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkInstance$263262 = -12				; size = 4
_iValueTheirOffering$ = -8				; size = 4
_iValueImOffering$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetDealValue@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetDealValue, COMDAT

; 10701: {

	sub	esp, 12					; 0000000cH
	push	ebx
	push	ebp
	push	esi

; 10702: 	CvPlayerAI* pkThisPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+20]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$263262[esp+40], 0
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetDealVa
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetDealVa
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$263262[esp+28], eax
	test	eax, eax
	je	SHORT $LN5@lGetDealVa
	xor	bl, bl
$LN5@lGetDealVa:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetDealVa
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetDealVa:

; 10703: 	CvDeal* pkDeal = CvLuaDeal::GetInstance(L, 2);

	push	esi
	call	_lua_gettop
	push	2
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN16@lGetDealVa
	push	OFFSET $SG237845
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN16@lGetDealVa
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN16@lGetDealVa
	xor	bl, bl
$LN16@lGetDealVa:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN15@lGetDealVa
	push	esi
	call	?HandleMissingInstance@CvLuaDeal@@SAXPAUlua_State@@@Z ; CvLuaDeal::HandleMissingInstance
	add	esp, 4
$LN15@lGetDealVa:

; 10704: 	int iValueImOffering, iValueTheirOffering;
; 10705: 	lua_pushinteger(L, pkThisPlayer->GetDealAI()->GetDealValue(pkDeal, iValueImOffering, iValueTheirOffering, false));

	push	0
	lea	eax, DWORD PTR _iValueTheirOffering$[esp+32]
	push	eax
	lea	ecx, DWORD PTR _iValueImOffering$[esp+36]
	push	ecx
	mov	ecx, DWORD PTR _pkInstance$263262[esp+40]
	push	edi
	call	?GetDealAI@CvPlayer@@QBEPAVCvDealAI@@XZ	; CvPlayer::GetDealAI
	mov	ecx, eax
	call	?GetDealValue@CvDealAI@@QAEHPAVCvDeal@@AAH1_N@Z ; CvDealAI::GetDealValue
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 10706: 	return 1;

	mov	eax, 1
	pop	ebx

; 10707: }

	add	esp, 12					; 0000000cH
	ret	0
?lGetDealValue@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetDealValue
_TEXT	ENDS
PUBLIC	?lGetDealMyValue@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetDealMyValue
; Function compile flags: /Ogtpy
;	COMDAT ?lGetDealMyValue@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkInstance$263299 = -12				; size = 4
_iValueImOffering$ = -8					; size = 4
_iValueTheyreOffering$ = -4				; size = 4
_L$ = 8							; size = 4
?lGetDealMyValue@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetDealMyValue, COMDAT

; 10711: {

	sub	esp, 12					; 0000000cH
	push	ebx
	push	ebp
	push	esi

; 10712: 	CvPlayerAI* pkThisPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+20]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$263299[esp+40], 0
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetDealMy
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetDealMy
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$263299[esp+28], eax
	test	eax, eax
	je	SHORT $LN5@lGetDealMy
	xor	bl, bl
$LN5@lGetDealMy:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetDealMy
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetDealMy:

; 10713: 	CvDeal* pkDeal = CvLuaDeal::GetInstance(L, 2);

	push	esi
	call	_lua_gettop
	push	2
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN16@lGetDealMy
	push	OFFSET $SG237845
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN16@lGetDealMy
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN16@lGetDealMy
	xor	bl, bl
$LN16@lGetDealMy:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN15@lGetDealMy
	push	esi
	call	?HandleMissingInstance@CvLuaDeal@@SAXPAUlua_State@@@Z ; CvLuaDeal::HandleMissingInstance
	add	esp, 4
$LN15@lGetDealMy:

; 10714: 	int iValueImOffering, iValueTheyreOffering;
; 10715: 	pkThisPlayer->GetDealAI()->GetDealValue(pkDeal, iValueImOffering, iValueTheyreOffering, false);

	push	0
	lea	eax, DWORD PTR _iValueTheyreOffering$[esp+32]
	push	eax
	lea	ecx, DWORD PTR _iValueImOffering$[esp+36]
	push	ecx
	mov	ecx, DWORD PTR _pkInstance$263299[esp+40]
	push	edi
	call	?GetDealAI@CvPlayer@@QBEPAVCvDealAI@@XZ	; CvPlayer::GetDealAI
	mov	ecx, eax
	call	?GetDealValue@CvDealAI@@QAEHPAVCvDeal@@AAH1_N@Z ; CvDealAI::GetDealValue

; 10716: 	lua_pushinteger(L, iValueImOffering);

	mov	edx, DWORD PTR _iValueImOffering$[esp+28]
	push	edx
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 10717: 	return 1;

	mov	eax, 1
	pop	ebx

; 10718: }

	add	esp, 12					; 0000000cH
	ret	0
?lGetDealMyValue@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetDealMyValue
_TEXT	ENDS
PUBLIC	?lGetDealTheyreValue@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetDealTheyreValue
; Function compile flags: /Ogtpy
;	COMDAT ?lGetDealTheyreValue@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkInstance$263335 = -12				; size = 4
_iValueTheyreOffering$ = -8				; size = 4
_iValueImOffering$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetDealTheyreValue@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetDealTheyreValue, COMDAT

; 10722: {

	sub	esp, 12					; 0000000cH
	push	ebx
	push	ebp
	push	esi

; 10723: 	CvPlayerAI* pkThisPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+20]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$263335[esp+40], 0
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetDealTh
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetDealTh
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$263335[esp+28], eax
	test	eax, eax
	je	SHORT $LN5@lGetDealTh
	xor	bl, bl
$LN5@lGetDealTh:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetDealTh
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetDealTh:

; 10724: 	CvDeal* pkDeal = CvLuaDeal::GetInstance(L, 2);

	push	esi
	call	_lua_gettop
	push	2
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN16@lGetDealTh
	push	OFFSET $SG237845
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN16@lGetDealTh
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN16@lGetDealTh
	xor	bl, bl
$LN16@lGetDealTh:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN15@lGetDealTh
	push	esi
	call	?HandleMissingInstance@CvLuaDeal@@SAXPAUlua_State@@@Z ; CvLuaDeal::HandleMissingInstance
	add	esp, 4
$LN15@lGetDealTh:

; 10725: 	int iValueImOffering, iValueTheyreOffering;
; 10726: 	pkThisPlayer->GetDealAI()->GetDealValue(pkDeal, iValueImOffering, iValueTheyreOffering, false);

	push	0
	lea	eax, DWORD PTR _iValueTheyreOffering$[esp+32]
	push	eax
	lea	ecx, DWORD PTR _iValueImOffering$[esp+36]
	push	ecx
	mov	ecx, DWORD PTR _pkInstance$263335[esp+40]
	push	edi
	call	?GetDealAI@CvPlayer@@QBEPAVCvDealAI@@XZ	; CvPlayer::GetDealAI
	mov	ecx, eax
	call	?GetDealValue@CvDealAI@@QAEHPAVCvDeal@@AAH1_N@Z ; CvDealAI::GetDealValue

; 10727: 	lua_pushinteger(L, iValueTheyreOffering);

	mov	edx, DWORD PTR _iValueTheyreOffering$[esp+28]
	push	edx
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 10728: 	return 1;

	mov	eax, 1
	pop	ebx

; 10729: }

	add	esp, 12					; 0000000cH
	ret	0
?lGetDealTheyreValue@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetDealTheyreValue
_TEXT	ENDS
PUBLIC	?lMayNotAnnex@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lMayNotAnnex
; Function compile flags: /Ogtpy
;	COMDAT ?lMayNotAnnex@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lMayNotAnnex@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lMayNotAnnex, COMDAT

; 10733: {

	push	ebx
	push	ebp
	push	esi

; 10734: 	CvPlayerAI* pkThisPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lMayNotAnn
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lMayNotAnn
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lMayNotAnn
	xor	bl, bl
$LN5@lMayNotAnn:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lMayNotAnn
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lMayNotAnn:

; 10735: 	lua_pushboolean(L, pkThisPlayer->GetPlayerTraits()->IsNoAnnexing());

	mov	ecx, edi
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	movzx	eax, BYTE PTR [eax+351]
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 10736: 	return 1;

	mov	eax, 1
	pop	ebx

; 10737: }

	ret	0
?lMayNotAnnex@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lMayNotAnnex
_TEXT	ENDS
PUBLIC	?lIsAllowPuppetPurchasing@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAllowPuppetPurchasing
EXTRN	?IsAllowPuppetPurchasing@CvPlayer@@QBE_NXZ:PROC	; CvPlayer::IsAllowPuppetPurchasing
; Function compile flags: /Ogtpy
;	COMDAT ?lIsAllowPuppetPurchasing@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsAllowPuppetPurchasing@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsAllowPuppetPurchasing, COMDAT

; 10742: {

	push	ebx
	push	ebp
	push	esi

; 10743: 	CvPlayerAI* pkThisPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsAllowPu
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsAllowPu
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsAllowPu
	xor	bl, bl
$LN5@lIsAllowPu:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsAllowPu
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsAllowPu:

; 10744: 	lua_pushboolean(L, pkThisPlayer->IsAllowPuppetPurchasing());

	mov	ecx, edi
	call	?IsAllowPuppetPurchasing@CvPlayer@@QBE_NXZ ; CvPlayer::IsAllowPuppetPurchasing
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 10745: 	return 1;

	mov	eax, 1
	pop	ebx

; 10746: }

	ret	0
?lIsAllowPuppetPurchasing@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsAllowPuppetPurchasing
_TEXT	ENDS
PUBLIC	?lGetEspionageCityStatus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetEspionageCityStatus
EXTRN	?getPopulation@CvCity@@QBEHXZ:PROC		; CvCity::getPopulation
EXTRN	?CalcPerTurn@CvPlayerEspionage@@QAEHHPAVCvCity@@H@Z:PROC ; CvPlayerEspionage::CalcPerTurn
EXTRN	?GetCityEspionage@CvCity@@QBEPAVCvCityEspionage@@XZ:PROC ; CvCity::GetCityEspionage
EXTRN	?CanEverMoveSpyTo@CvPlayerEspionage@@QAE_NPAVCvCity@@@Z:PROC ; CvPlayerEspionage::CanEverMoveSpyTo
EXTRN	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ:PROC ; CvPlayer::GetEspionage
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetEspionageCityStatus@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetEspionageCityStatus@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetEspionageCityStatus@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetEspionageCityStatus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetEspionageCityStatus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkInstance$263426 = -68				; size = 4
_iLargestBasePotential$ = -64				; size = 4
_pkPlayerEspionage$ = -60				; size = 4
tv672 = -56						; size = 4
_iLoop$236283 = -56					; size = 4
tv659 = -52						; size = 4
_pCityEspionage$236309 = -52				; size = 4
_index$ = -48						; size = 4
_iLoop$236303 = -44					; size = 4
_strName$236317 = -40					; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetEspionageCityStatus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetEspionageCityStatus, COMDAT

; 10751: {

	push	-1
	push	__ehhandler$?lGetEspionageCityStatus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 56					; 00000038H
	push	ebx
	push	ebp
	push	esi

; 10752: 	CvPlayerAI* pkThisPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+76]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	xor	ebp, ebp
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$263426[esp+96], ebp
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN128@lGetEspion
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN128@lGetEspion
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$263426[esp+84], eax
	cmp	eax, ebp
	je	SHORT $LN128@lGetEspion
	xor	bl, bl
$LN128@lGetEspion:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN38@lGetEspion
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN38@lGetEspion:

; 10753: 	CvPlayerEspionage* pkPlayerEspionage = pkThisPlayer->GetEspionage();

	mov	ecx, DWORD PTR _pkInstance$263426[esp+84]
	call	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ ; CvPlayer::GetEspionage

; 10754: 
; 10755: 	lua_createtable(L, 0, 0);

	push	ebp
	mov	edi, eax
	push	ebp
	push	esi
	mov	DWORD PTR _pkPlayerEspionage$[esp+96], edi
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 10756: 	int index = 1;

	mov	DWORD PTR _index$[esp+84], 1

; 10757: 
; 10758: 	// first pass to get the largest base potential available
; 10759: 	int iLargestBasePotential = 0;

	mov	DWORD PTR _iLargestBasePotential$[esp+84], ebp
	mov	DWORD PTR tv659[esp+84], ebp
	npad	13
$LL25@lGetEspion:

; 10761: 	{
; 10762: 		const PlayerTypes ePlayer(static_cast<PlayerTypes>(i));
; 10763: 		CvPlayerAI& kPlayer = GET_PLAYER(ePlayer);

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	add	ebp, eax

; 10764: 
; 10765: 		if(!kPlayer.isAlive() || kPlayer.isBarbarian())

	cmp	BYTE PTR [ebp+2256], 0
	je	SHORT $LN24@lGetEspion
	mov	ecx, ebp
	call	?isBarbarian@CvPlayer@@QBE_NXZ		; CvPlayer::isBarbarian
	test	al, al
	jne	SHORT $LN24@lGetEspion

; 10766: 		{
; 10767: 			continue;
; 10768: 		}
; 10769: 
; 10770: 		int iLoop = 0;
; 10771: 		for(CvCity* pCity = kPlayer.firstCity(&iLoop); pCity != NULL; pCity = kPlayer.nextCity(&iLoop))

	push	0
	lea	ecx, DWORD PTR _iLoop$236283[esp+88]
	push	ecx
	mov	ecx, ebp
	mov	DWORD PTR _iLoop$236283[esp+92], 0
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	ebx, eax
	test	ebx, ebx
	je	SHORT $LN24@lGetEspion
$LL20@lGetEspion:

; 10772: 		{
; 10773: 			if(pkPlayerEspionage->CanEverMoveSpyTo(pCity))

	push	ebx
	mov	ecx, edi
	call	?CanEverMoveSpyTo@CvPlayerEspionage@@QAE_NPAVCvCity@@@Z ; CvPlayerEspionage::CanEverMoveSpyTo
	test	al, al
	je	SHORT $LN19@lGetEspion

; 10774: 			{
; 10775: 				CvCityEspionage* pCityEspionage = pCity->GetCityEspionage();

	mov	ecx, ebx
	call	?GetCityEspionage@CvCity@@QBEPAVCvCityEspionage@@XZ ; CvCity::GetCityEspionage

; 10776: 				int iPotential = 0;
; 10777: 				if (pCity->getOwner() == pkThisPlayer->GetID())

	mov	ecx, DWORD PTR _pkInstance$263426[esp+84]
	mov	edx, DWORD PTR [ebx+84]
	mov	ecx, DWORD PTR [ecx+44]
	cmp	edx, ecx
	jne	SHORT $LN16@lGetEspion

; 10778: 				{
; 10779: 					iPotential = pkPlayerEspionage->CalcPerTurn(SPY_STATE_GATHERING_INTEL, pCity, -1);

	push	-1
	push	ebx
	push	3
	mov	ecx, edi
	call	?CalcPerTurn@CvPlayerEspionage@@QAEHHPAVCvCity@@H@Z ; CvPlayerEspionage::CalcPerTurn

; 10780: 				}
; 10781: 				else

	jmp	SHORT $LN15@lGetEspion
$LN16@lGetEspion:

; 10782: 				{
; 10783: 					iPotential = pCityEspionage->m_aiLastBasePotential[pkThisPlayer->GetID()];

	mov	eax, DWORD PTR [eax+ecx*4+532]
$LN15@lGetEspion:

; 10784: 				}
; 10785: 
; 10786: 				if (iPotential > iLargestBasePotential)

	cmp	eax, DWORD PTR _iLargestBasePotential$[esp+84]
	jle	SHORT $LN19@lGetEspion

; 10787: 				{
; 10788: 					iLargestBasePotential = iPotential;

	mov	DWORD PTR _iLargestBasePotential$[esp+84], eax
$LN19@lGetEspion:

; 10766: 		{
; 10767: 			continue;
; 10768: 		}
; 10769: 
; 10770: 		int iLoop = 0;
; 10771: 		for(CvCity* pCity = kPlayer.firstCity(&iLoop); pCity != NULL; pCity = kPlayer.nextCity(&iLoop))

	push	0
	lea	edx, DWORD PTR _iLoop$236283[esp+88]
	push	edx
	mov	ecx, ebp
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	ebx, eax
	test	ebx, ebx
	jne	SHORT $LL20@lGetEspion
$LN24@lGetEspion:

; 10760: 	for(int i = 0; i < MAX_PLAYERS; ++i)

	mov	ebp, DWORD PTR tv659[esp+84]
	add	ebp, 63236				; 0000f704H
	cmp	ebp, 4047104				; 003dc100H
	mov	DWORD PTR tv659[esp+84], ebp
	jl	$LL25@lGetEspion

; 10789: 				}
; 10790: 			}
; 10791: 		}
; 10792: 	}
; 10793: 
; 10794: 	// second pass to set the values
; 10795: 	for(int i = 0; i < MAX_PLAYERS; ++i)

	xor	ebx, ebx
	mov	DWORD PTR tv672[esp+84], ebx
	npad	5
$LL132@lGetEspion:

; 10796: 	{
; 10797: 		const PlayerTypes ePlayer(static_cast<PlayerTypes>(i));
; 10798: 		CvPlayerAI& kPlayer = GET_PLAYER(ePlayer);

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	add	ebx, eax

; 10799: 
; 10800: 		if(!kPlayer.isAlive() || kPlayer.isBarbarian())

	cmp	BYTE PTR [ebx+2256], 0
	je	$LN12@lGetEspion
	mov	ecx, ebx
	call	?isBarbarian@CvPlayer@@QBE_NXZ		; CvPlayer::isBarbarian
	test	al, al
	jne	$LN12@lGetEspion

; 10801: 		{
; 10802: 			continue;
; 10803: 		}
; 10804: 
; 10805: 		int iLoop = 0;
; 10806: 		for(CvCity* pCity = kPlayer.firstCity(&iLoop); pCity != NULL; pCity = kPlayer.nextCity(&iLoop))

	push	0
	lea	ecx, DWORD PTR _iLoop$236303[esp+88]
	push	ecx
	mov	ecx, ebx
	mov	DWORD PTR _iLoop$236303[esp+92], 0
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	ebp, eax
	test	ebp, ebp
	je	$LN12@lGetEspion
$LL8@lGetEspion:

; 10807: 		{
; 10808: 			if(pkPlayerEspionage->CanEverMoveSpyTo(pCity))

	push	ebp
	mov	ecx, edi
	call	?CanEverMoveSpyTo@CvPlayerEspionage@@QAE_NPAVCvCity@@@Z ; CvPlayerEspionage::CanEverMoveSpyTo
	test	al, al
	je	$LN7@lGetEspion

; 10809: 			{
; 10810: 				CvCityEspionage* pCityEspionage = pCity->GetCityEspionage();

	mov	ecx, ebp
	call	?GetCityEspionage@CvCity@@QBEPAVCvCityEspionage@@XZ ; CvCity::GetCityEspionage

; 10811: 				lua_createtable(L, 0, 0);

	push	0
	push	0
	push	esi
	mov	DWORD PTR _pCityEspionage$236309[esp+96], eax
	call	_lua_createtable

; 10812: 				const int t = lua_gettop(L);

	push	esi
	call	_lua_gettop
	mov	edi, eax

; 10813: 
; 10814: 				lua_pushinteger(L, kPlayer.GetID());

	mov	eax, DWORD PTR [ebx+44]
	push	eax
	push	esi
	call	_lua_pushinteger

; 10815: 				lua_setfield(L, t, "PlayerID");

	push	OFFSET $SG236311
	push	edi
	push	esi
	call	_lua_setfield

; 10816: 
; 10817: 				lua_pushinteger(L, pCity->GetID());

	mov	eax, DWORD PTR [ebp+120]
	push	eax
	push	esi
	call	_lua_pushinteger

; 10818: 				lua_setfield(L, t, "CityID");

	push	OFFSET $SG236312
	push	edi
	push	esi
	call	_lua_setfield

; 10819: 
; 10820: 				lua_pushinteger(L, pCity->getX());

	mov	eax, DWORD PTR [ebp+96]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 64					; 00000040H

; 10821: 				lua_setfield(L, t, "CityX");

	push	OFFSET $SG236313
	push	edi
	push	esi
	call	_lua_setfield

; 10822: 
; 10823: 				lua_pushinteger(L, pCity->getY());

	mov	eax, DWORD PTR [ebp+108]
	push	eax
	push	esi
	call	_lua_pushinteger

; 10824: 				lua_setfield(L, t, "CityY");

	push	OFFSET $SG236314
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 32					; 00000020H

; 10825: 
; 10826: 				lua_pushinteger(L, kPlayer.getCivilizationType());

	mov	ecx, ebx
	call	?getCivilizationType@CvPlayer@@QBE?AW4CivilizationTypes@@XZ ; CvPlayer::getCivilizationType
	push	eax
	push	esi
	call	_lua_pushinteger

; 10827: 				lua_setfield(L, t, "CivilizationType");

	push	OFFSET $SG236315
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 10828: 
; 10829: 				lua_pushinteger(L, kPlayer.getTeam());

	mov	ecx, ebx
	call	?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ	; CvPlayer::getTeam
	push	eax
	push	esi
	call	_lua_pushinteger

; 10830: 				lua_setfield(L, t, "Team");

	push	OFFSET $SG236316
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 10831: 
; 10832: 				CvString strName = pCity->getNameKey();

	mov	ecx, ebp
	call	?getNameKey@CvCity@@QBEPBDXZ		; CvCity::getNameKey
	test	eax, eax
	jne	SHORT $LN85@lGetEspion
	mov	eax, OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN85@lGetEspion:
	push	eax
	lea	ecx, DWORD PTR _strName$236317[esp+88]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z

; 10833: 				lua_pushstring(L, strName.c_str());

	lea	ecx, DWORD PTR _strName$236317[esp+84]
	mov	DWORD PTR __$EHRec$[esp+92], 0
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring

; 10834: 				lua_setfield(L, t, "Name");

	push	OFFSET $SG236318
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 10835: 
; 10836: 				lua_pushinteger(L, pCity->getPopulation());

	mov	ecx, ebp
	call	?getPopulation@CvCity@@QBEHXZ		; CvCity::getPopulation
	push	eax
	push	esi
	call	_lua_pushinteger

; 10837: 				lua_setfield(L, t, "Population");

	push	OFFSET $SG236319
	push	edi
	push	esi
	call	_lua_setfield

; 10838: 
; 10839: 				if(pCity->getOwner() == pkThisPlayer->GetID())

	mov	edx, DWORD PTR _pkInstance$263426[esp+104]
	mov	ecx, DWORD PTR [ebp+84]
	mov	eax, DWORD PTR [edx+44]
	add	esp, 20					; 00000014H
	cmp	ecx, eax
	jne	SHORT $LN4@lGetEspion

; 10840: 				{
; 10841: 					int iRate = pkPlayerEspionage->CalcPerTurn(SPY_STATE_GATHERING_INTEL, pCity, -1);

	mov	ecx, DWORD PTR _pkPlayerEspionage$[esp+84]
	push	-1
	push	ebp
	push	3
	call	?CalcPerTurn@CvPlayerEspionage@@QAEHHPAVCvCity@@H@Z ; CvPlayerEspionage::CalcPerTurn

; 10842: 					lua_pushinteger(L, iRate);

	push	eax

; 10843: 				}
; 10844: 				else

	jmp	SHORT $LN134@lGetEspion
$LN4@lGetEspion:

; 10845: 				{
; 10846: 					lua_pushinteger(L, pCityEspionage->m_aiLastPotential[pkThisPlayer->GetID()]);

	mov	ecx, DWORD PTR _pCityEspionage$236309[esp+84]
	mov	edx, DWORD PTR [ecx+eax*4+444]
	push	edx
$LN134@lGetEspion:
	push	esi
	call	_lua_pushinteger
	add	esp, 8

; 10847: 				}
; 10848: 				lua_setfield(L, t, "Potential");

	push	OFFSET $SG236323
	push	edi
	push	esi
	call	_lua_setfield

; 10849: 
; 10850: 				if (pCity->getOwner() == pkThisPlayer->GetID())

	mov	eax, DWORD PTR _pkInstance$263426[esp+96]
	mov	ecx, DWORD PTR [ebp+84]
	mov	eax, DWORD PTR [eax+44]
	add	esp, 12					; 0000000cH
	cmp	ecx, eax
	jne	SHORT $LN2@lGetEspion

; 10851: 				{
; 10852: 					lua_pushinteger(L, pkPlayerEspionage->CalcPerTurn(SPY_STATE_GATHERING_INTEL, pCity, -1));

	mov	ecx, DWORD PTR _pkPlayerEspionage$[esp+84]
	push	-1
	push	ebp
	push	3
	call	?CalcPerTurn@CvPlayerEspionage@@QAEHHPAVCvCity@@H@Z ; CvPlayerEspionage::CalcPerTurn
	push	eax

; 10853: 				}
; 10854: 				else

	jmp	SHORT $LN135@lGetEspion
$LN2@lGetEspion:

; 10855: 				{
; 10856: 					lua_pushinteger(L,  pCityEspionage->m_aiLastBasePotential[pkThisPlayer->GetID()]);

	mov	ecx, DWORD PTR _pCityEspionage$236309[esp+84]
	mov	edx, DWORD PTR [ecx+eax*4+532]
	push	edx
$LN135@lGetEspion:
	push	esi
	call	_lua_pushinteger
	add	esp, 8

; 10857: 				}
; 10858: 				lua_setfield(L, t, "BasePotential");

	push	OFFSET $SG236326
	push	edi
	push	esi
	call	_lua_setfield

; 10859: 
; 10860: 				lua_pushinteger(L, iLargestBasePotential);

	mov	eax, DWORD PTR _iLargestBasePotential$[esp+96]
	push	eax
	push	esi
	call	_lua_pushinteger

; 10861: 				lua_setfield(L, t, "LargestBasePotential");

	push	OFFSET $SG236327
	push	edi
	push	esi
	call	_lua_setfield

; 10862: 
; 10863: 				lua_rawseti(L, -2, index++);

	mov	edi, DWORD PTR _index$[esp+116]
	push	edi
	push	-2					; fffffffeH
	push	esi
	call	_lua_rawseti
	inc	edi
	add	esp, 44					; 0000002cH

; 10864: 			}

	lea	ecx, DWORD PTR _strName$236317[esp+84]
	mov	DWORD PTR _index$[esp+84], edi
	mov	DWORD PTR __$EHRec$[esp+92], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	edi, DWORD PTR _pkPlayerEspionage$[esp+84]
$LN7@lGetEspion:
	push	0
	lea	ecx, DWORD PTR _iLoop$236303[esp+88]
	push	ecx
	mov	ecx, ebx
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	ebp, eax
	test	ebp, ebp
	jne	$LL8@lGetEspion
$LN12@lGetEspion:

; 10789: 				}
; 10790: 			}
; 10791: 		}
; 10792: 	}
; 10793: 
; 10794: 	// second pass to set the values
; 10795: 	for(int i = 0; i < MAX_PLAYERS; ++i)

	mov	ebx, DWORD PTR tv672[esp+84]
	add	ebx, 63236				; 0000f704H
	cmp	ebx, 4047104				; 003dc100H
	mov	DWORD PTR tv672[esp+84], ebx
	jl	$LL132@lGetEspion

; 10865: 		}
; 10866: 	}
; 10867: 
; 10868: 	return 1;
; 10869: }

	mov	ecx, DWORD PTR __$EHRec$[esp+84]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 68					; 00000044H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetEspionageCityStatus@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _strName$236317[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetEspionageCityStatus@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetEspionageCityStatus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetEspionageCityStatus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetEspionageCityStatus
PUBLIC	?lGetNumSpies@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lGetNumSpies
EXTRN	?GetNumSpies@CvPlayerEspionage@@QAEHXZ:PROC	; CvPlayerEspionage::GetNumSpies
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumSpies@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumSpies@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetNumSpies, COMDAT

; 10872: {

	push	ebx
	push	ebp
	push	esi

; 10873: 	CvPlayerAI* pkThisPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@lGetNumSpi
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@lGetNumSpi
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@lGetNumSpi
	xor	bl, bl
$LN7@lGetNumSpi:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@lGetNumSpi
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@lGetNumSpi:

; 10874: 	CvPlayerEspionage* pkPlayerEspionage = pkThisPlayer->GetEspionage();

	mov	ecx, edi
	call	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ ; CvPlayer::GetEspionage

; 10875: 
; 10876: 	const int lNumSpies = (pkPlayerEspionage != NULL)? pkPlayerEspionage->GetNumSpies() : 0;

	test	eax, eax
	je	SHORT $LN3@lGetNumSpi
	mov	ecx, eax
	call	?GetNumSpies@CvPlayerEspionage@@QAEHXZ	; CvPlayerEspionage::GetNumSpies

; 10877: 
; 10878: 	lua_pushinteger(L, lNumSpies);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 10879: 	return 1;

	mov	eax, 1
	pop	ebx

; 10880: }

	ret	0
$LN3@lGetNumSpi:

; 10875: 
; 10876: 	const int lNumSpies = (pkPlayerEspionage != NULL)? pkPlayerEspionage->GetNumSpies() : 0;

	xor	eax, eax

; 10877: 
; 10878: 	lua_pushinteger(L, lNumSpies);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 10879: 	return 1;

	mov	eax, 1
	pop	ebx

; 10880: }

	ret	0
?lGetNumSpies@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetNumSpies
_TEXT	ENDS
PUBLIC	?lGetNumUnassignedSpies@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumUnassignedSpies
EXTRN	?GetNumUnassignedSpies@CvPlayerEspionage@@QAEHXZ:PROC ; CvPlayerEspionage::GetNumUnassignedSpies
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumUnassignedSpies@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumUnassignedSpies@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumUnassignedSpies, COMDAT

; 10884: {

	push	ebx
	push	ebp
	push	esi

; 10885: 	CvPlayerAI* pkThisPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@lGetNumUna
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@lGetNumUna
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@lGetNumUna
	xor	bl, bl
$LN7@lGetNumUna:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@lGetNumUna
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@lGetNumUna:

; 10886: 	CvPlayerEspionage* pkPlayerEspionage = pkThisPlayer->GetEspionage();

	mov	ecx, edi
	call	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ ; CvPlayer::GetEspionage

; 10887: 
; 10888: 	const int lNumSpies = (pkPlayerEspionage != NULL)? pkPlayerEspionage->GetNumUnassignedSpies() : 0;

	test	eax, eax
	je	SHORT $LN3@lGetNumUna
	mov	ecx, eax
	call	?GetNumUnassignedSpies@CvPlayerEspionage@@QAEHXZ ; CvPlayerEspionage::GetNumUnassignedSpies

; 10889: 
; 10890: 	lua_pushinteger(L, lNumSpies);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 10891: 	return 1;

	mov	eax, 1
	pop	ebx

; 10892: }

	ret	0
$LN3@lGetNumUna:

; 10887: 
; 10888: 	const int lNumSpies = (pkPlayerEspionage != NULL)? pkPlayerEspionage->GetNumUnassignedSpies() : 0;

	xor	eax, eax

; 10889: 
; 10890: 	lua_pushinteger(L, lNumSpies);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 10891: 	return 1;

	mov	eax, 1
	pop	ebx

; 10892: }

	ret	0
?lGetNumUnassignedSpies@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumUnassignedSpies
_TEXT	ENDS
PUBLIC	?lGetEspionageSpies@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetEspionageSpies
EXTRN	?IsDiplomat@CvPlayerEspionage@@QAE_NI@Z:PROC	; CvPlayerEspionage::IsDiplomat
EXTRN	?HasEstablishedSurveillance@CvPlayerEspionage@@QAE_NI@Z:PROC ; CvPlayerEspionage::HasEstablishedSurveillance
EXTRN	?GetPercentOfStateComplete@CvPlayerEspionage@@QAEHI@Z:PROC ; CvPlayerEspionage::GetPercentOfStateComplete
EXTRN	?GetTurnsUntilStateComplete@CvPlayerEspionage@@QAEHI@Z:PROC ; CvPlayerEspionage::GetTurnsUntilStateComplete
EXTRN	?getSpyNames@CvCivilizationInfo@@QBEPBDH@Z:PROC	; CvCivilizationInfo::getSpyNames
; Function compile flags: /Ogtpy
;	COMDAT ?lGetEspionageSpies@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkInstance$263694 = -12				; size = 4
tv372 = -8						; size = 4
_pkPlayerEspionage$ = -4				; size = 4
_L$ = 8							; size = 4
?lGetEspionageSpies@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetEspionageSpies, COMDAT

; 10896: {

	sub	esp, 12					; 0000000cH
	push	ebx
	push	ebp
	push	esi

; 10897: 	CvPlayerAI* pkThisPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+20]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	xor	ebp, ebp
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$263694[esp+40], ebp
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN42@lGetEspion@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN42@lGetEspion@2
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$263694[esp+28], eax
	cmp	eax, ebp
	je	SHORT $LN42@lGetEspion@2
	xor	bl, bl
$LN42@lGetEspion@2:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN33@lGetEspion@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN33@lGetEspion@2:

; 10898: 	CvPlayerEspionage* pkPlayerEspionage = pkThisPlayer->GetEspionage();

	mov	ecx, DWORD PTR _pkInstance$263694[esp+28]
	call	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ ; CvPlayer::GetEspionage

; 10899: 
; 10900: 	lua_createtable(L, 0, 0);

	push	ebp
	mov	edi, eax
	push	ebp
	push	esi
	mov	DWORD PTR _pkPlayerEspionage$[esp+40], edi
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 10901: 	int index = 1;
; 10902: 
; 10903: 	for(uint uiSpy = 0; uiSpy < pkPlayerEspionage->m_aSpyList.size(); ++uiSpy)

	cmp	DWORD PTR [edi+8], ebp
	jbe	$LN41@lGetEspion@2

; 10898: 	CvPlayerEspionage* pkPlayerEspionage = pkThisPlayer->GetEspionage();

	mov	DWORD PTR tv372[esp+28], ebp
	jmp	SHORT $LN21@lGetEspion@2
	npad	3
$LL43@lGetEspion@2:
	mov	edi, DWORD PTR _pkPlayerEspionage$[esp+28]
$LN21@lGetEspion@2:

; 10904: 	{
; 10905: 		CvEspionageSpy* pSpy = &(pkPlayerEspionage->m_aSpyList[uiSpy]);

	mov	ebx, DWORD PTR [edi+4]
	add	ebx, DWORD PTR tv372[esp+28]

; 10906: 
; 10907: 		lua_createtable(L, 0, 0);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 10908: 		const int t = lua_gettop(L);

	push	esi
	call	_lua_gettop

; 10909: 
; 10910: 		lua_pushinteger(L, uiSpy);

	push	ebp
	push	esi
	mov	edi, eax
	call	_lua_pushinteger

; 10911: 		lua_setfield(L, t, "AgentID");

	push	OFFSET $SG236352
	push	edi
	push	esi
	call	_lua_setfield

; 10912: 
; 10913: 		lua_pushinteger(L, pSpy->m_iCityX);

	mov	eax, DWORD PTR [ebx+4]
	push	eax
	push	esi
	call	_lua_pushinteger

; 10914: 		lua_setfield(L, t, "CityX");

	push	OFFSET $SG236353
	push	edi
	push	esi
	call	_lua_setfield

; 10915: 
; 10916: 		lua_pushinteger(L, pSpy->m_iCityY);

	mov	ecx, DWORD PTR [ebx+8]
	push	ecx
	push	esi
	call	_lua_pushinteger
	add	esp, 64					; 00000040H

; 10917: 		lua_setfield(L, t, "CityY");

	push	OFFSET $SG236354
	push	edi
	push	esi
	call	_lua_setfield

; 10918: 
; 10919: 		const char* szSpyName = pkThisPlayer->getCivilizationInfo().getSpyNames(pSpy->m_iName);

	mov	edx, DWORD PTR [ebx]
	mov	ecx, DWORD PTR _pkInstance$263694[esp+40]
	add	esp, 12					; 0000000cH
	push	edx
	call	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ ; CvPlayer::getCivilizationInfo
	mov	ecx, eax
	call	?getSpyNames@CvCivilizationInfo@@QBEPBDH@Z ; CvCivilizationInfo::getSpyNames

; 10920: 		lua_pushstring(L, szSpyName);

	push	eax
	push	esi
	call	_lua_pushstring

; 10921: 		lua_setfield(L, t, "Name");

	push	OFFSET $SG236356
	push	edi
	push	esi
	call	_lua_setfield

; 10922: 
; 10923: 		switch(pSpy->m_eRank)

	mov	eax, DWORD PTR [ebx+12]
	add	esp, 20					; 00000014H
	sub	eax, 0
	je	SHORT $LN16@lGetEspion@2
	sub	eax, 1
	je	SHORT $LN15@lGetEspion@2
	sub	eax, 1
	jne	SHORT $LN17@lGetEspion@2

; 10931: 		case SPY_RANK_SPECIAL_AGENT:
; 10932: 			lua_pushstring(L, "TXT_KEY_SPY_RANK_2");

	push	OFFSET $SG236366

; 10933: 			break;

	jmp	SHORT $LN44@lGetEspion@2
$LN15@lGetEspion@2:

; 10927: 			break;
; 10928: 		case SPY_RANK_AGENT:
; 10929: 			lua_pushstring(L, "TXT_KEY_SPY_RANK_1");

	push	OFFSET $SG236364

; 10930: 			break;

	jmp	SHORT $LN44@lGetEspion@2
$LN16@lGetEspion@2:

; 10924: 		{
; 10925: 		case SPY_RANK_RECRUIT:
; 10926: 			lua_pushstring(L, "TXT_KEY_SPY_RANK_0");

	push	OFFSET $SG236362
$LN44@lGetEspion@2:
	push	esi
	call	_lua_pushstring
	add	esp, 8
$LN17@lGetEspion@2:

; 10934: 		default:
; 10935: 			CvAssertMsg(false, "pSpy->m_eRank not in case statement");
; 10936: 			break;
; 10937: 		}
; 10938: 		lua_setfield(L, t, "Rank");

	push	OFFSET $SG236368
	push	edi
	push	esi
	call	_lua_setfield

; 10939: 
; 10940: 		switch(pSpy->m_eSpyState)

	mov	ebx, DWORD PTR [ebx+16]
	add	esp, 12					; 0000000cH
	cmp	ebx, 8
	ja	SHORT $LN1@lGetEspion@2
	jmp	DWORD PTR $LN46@lGetEspion@2[ebx*4]
$LN10@lGetEspion@2:

; 10941: 		{
; 10942: 		case SPY_STATE_UNASSIGNED:
; 10943: 			lua_pushstring(L, "TXT_KEY_SPY_STATE_UNASSIGNED");

	push	OFFSET $SG236374

; 10944: 			break;

	jmp	SHORT $LN45@lGetEspion@2
$LN9@lGetEspion@2:

; 10945: 		case SPY_STATE_TRAVELLING:
; 10946: 			lua_pushstring(L, "TXT_KEY_SPY_STATE_TRAVELLING");

	push	OFFSET $SG236376

; 10947: 			break;

	jmp	SHORT $LN45@lGetEspion@2
$LN8@lGetEspion@2:

; 10948: 		case SPY_STATE_SURVEILLANCE:
; 10949: 			lua_pushstring(L, "TXT_KEY_SPY_STATE_SURVEILLANCE");

	push	OFFSET $SG236378

; 10950: 			break;

	jmp	SHORT $LN45@lGetEspion@2
$LN7@lGetEspion@2:

; 10951: 		case SPY_STATE_GATHERING_INTEL:
; 10952: 			lua_pushstring(L, "TXT_KEY_SPY_STATE_GATHERING_INTEL");

	push	OFFSET $SG236380

; 10953: 			break;

	jmp	SHORT $LN45@lGetEspion@2
$LN6@lGetEspion@2:

; 10954: 		case SPY_STATE_RIG_ELECTION:
; 10955: 			lua_pushstring(L, "TXT_KEY_SPY_STATE_RIGGING_ELECTION");

	push	OFFSET $SG236382

; 10956: 			break;

	jmp	SHORT $LN45@lGetEspion@2
$LN5@lGetEspion@2:

; 10957: 		case SPY_STATE_COUNTER_INTEL:
; 10958: 			lua_pushstring(L, "TXT_KEY_SPY_STATE_COUNTER_INTEL");

	push	OFFSET $SG236384

; 10959: 			break;

	jmp	SHORT $LN45@lGetEspion@2
$LN4@lGetEspion@2:

; 10960: 		case SPY_STATE_DEAD:
; 10961: 			lua_pushstring(L, "TXT_KEY_SPY_STATE_DEAD");

	push	OFFSET $SG236386

; 10962: 			break;

	jmp	SHORT $LN45@lGetEspion@2
$LN3@lGetEspion@2:

; 10963: 		case SPY_STATE_MAKING_INTRODUCTIONS:
; 10964: 			lua_pushstring(L, "TXT_KEY_SPY_STATE_MAKING_INTRODUCTIONS");

	push	OFFSET $SG236388

; 10965: 			break;

	jmp	SHORT $LN45@lGetEspion@2
$LN2@lGetEspion@2:

; 10966: 		case SPY_STATE_SCHMOOZE:
; 10967: 			lua_pushstring(L, "TXT_KEY_SPY_STATE_SCHMOOZING");

	push	OFFSET $SG236390
$LN45@lGetEspion@2:
	push	esi
	call	_lua_pushstring
	add	esp, 8
$LN1@lGetEspion@2:

; 10968: 			break;
; 10969: 		default:
; 10970: 			CvAssertMsg(false, "pSpy->m_eSpyState not in case statement");
; 10971: 			break;
; 10972: 		}
; 10973: 		lua_setfield(L, t, "State");

	push	OFFSET $SG236392
	push	edi
	push	esi
	call	_lua_setfield

; 10974: 
; 10975: 		lua_pushinteger(L, pkPlayerEspionage->GetTurnsUntilStateComplete(uiSpy));

	mov	ebx, DWORD PTR _pkPlayerEspionage$[esp+40]
	add	esp, 12					; 0000000cH
	push	ebp
	mov	ecx, ebx
	call	?GetTurnsUntilStateComplete@CvPlayerEspionage@@QAEHI@Z ; CvPlayerEspionage::GetTurnsUntilStateComplete
	push	eax
	push	esi
	call	_lua_pushinteger

; 10976: 		lua_setfield(L, t, "TurnsLeft");

	push	OFFSET $SG236393
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 10977: 
; 10978: 		lua_pushinteger(L, pkPlayerEspionage->GetPercentOfStateComplete(uiSpy));

	push	ebp
	mov	ecx, ebx
	call	?GetPercentOfStateComplete@CvPlayerEspionage@@QAEHI@Z ; CvPlayerEspionage::GetPercentOfStateComplete
	push	eax
	push	esi
	call	_lua_pushinteger

; 10979: 		lua_setfield(L, t, "PercentComplete");

	push	OFFSET $SG236394
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 10980: 
; 10981: 		lua_pushboolean(L, pkPlayerEspionage->HasEstablishedSurveillance(uiSpy));

	push	ebp
	mov	ecx, ebx
	call	?HasEstablishedSurveillance@CvPlayerEspionage@@QAE_NI@Z ; CvPlayerEspionage::HasEstablishedSurveillance
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean

; 10982: 		lua_setfield(L, t, "EstablishedSurveillance");

	push	OFFSET $SG236395
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 10983: 
; 10984: 		lua_pushboolean(L, pkPlayerEspionage->IsDiplomat(uiSpy));

	push	ebp
	mov	ecx, ebx
	call	?IsDiplomat@CvPlayerEspionage@@QAE_NI@Z	; CvPlayerEspionage::IsDiplomat
	movzx	ecx, al
	push	ecx
	push	esi
	call	_lua_pushboolean

; 10985: 		lua_setfield(L, t, "IsDiplomat");

	push	OFFSET $SG236396
	push	edi
	push	esi
	call	_lua_setfield

; 10986: 
; 10987: 		lua_rawseti(L, -2, index++);

	inc	ebp
	push	ebp
	push	-2					; fffffffeH
	push	esi
	call	_lua_rawseti
	add	DWORD PTR tv372[esp+60], 28		; 0000001cH
	add	esp, 32					; 00000020H
	cmp	ebp, DWORD PTR [ebx+8]
	jb	$LL43@lGetEspion@2
$LN41@lGetEspion@2:
	pop	edi
	pop	esi
	pop	ebp

; 10988: 	}
; 10989: 	return 1;

	mov	eax, 1
	pop	ebx

; 10990: }

	add	esp, 12					; 0000000cH
	ret	0
	npad	1
$LN46@lGetEspion@2:
	DD	$LN10@lGetEspion@2
	DD	$LN9@lGetEspion@2
	DD	$LN8@lGetEspion@2
	DD	$LN7@lGetEspion@2
	DD	$LN6@lGetEspion@2
	DD	$LN5@lGetEspion@2
	DD	$LN3@lGetEspion@2
	DD	$LN2@lGetEspion@2
	DD	$LN4@lGetEspion@2
?lGetEspionageSpies@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetEspionageSpies
_TEXT	ENDS
PUBLIC	?lHasSpyEstablishedSurveillance@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasSpyEstablishedSurveillance
; Function compile flags: /Ogtpy
;	COMDAT ?lHasSpyEstablishedSurveillance@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lHasSpyEstablishedSurveillance@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lHasSpyEstablishedSurveillance, COMDAT

; 10993: {

	push	ebx
	push	ebp
	push	esi

; 10994: 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lHasSpyEst
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lHasSpyEst
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lHasSpyEst
	xor	bl, bl
$LN5@lHasSpyEst:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lHasSpyEst
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lHasSpyEst:

; 10995: 	int iSpyIndex = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 10996: 	bool bSurveillance = pkPlayer->GetEspionage()->HasEstablishedSurveillance(iSpyIndex);

	push	eax
	mov	ecx, edi
	call	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ ; CvPlayer::GetEspionage
	mov	ecx, eax
	call	?HasEstablishedSurveillance@CvPlayerEspionage@@QAE_NI@Z ; CvPlayerEspionage::HasEstablishedSurveillance

; 10997: 
; 10998: 	lua_pushboolean(L, bSurveillance);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 10999: 	return 1;

	mov	eax, 1
	pop	ebx

; 11000: }

	ret	0
?lHasSpyEstablishedSurveillance@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lHasSpyEstablishedSurveillance
_TEXT	ENDS
PUBLIC	?lIsSpyDiplomat@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsSpyDiplomat
; Function compile flags: /Ogtpy
;	COMDAT ?lIsSpyDiplomat@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsSpyDiplomat@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsSpyDiplomat, COMDAT

; 11003: {

	push	ebx
	push	ebp
	push	esi

; 11004: 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsSpyDipl
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsSpyDipl
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsSpyDipl
	xor	bl, bl
$LN5@lIsSpyDipl:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsSpyDipl
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsSpyDipl:

; 11005: 	int iSpyIndex = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 11006: 	bool bIsDiplomat = pkPlayer->GetEspionage()->IsDiplomat(iSpyIndex);

	push	eax
	mov	ecx, edi
	call	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ ; CvPlayer::GetEspionage
	mov	ecx, eax
	call	?IsDiplomat@CvPlayerEspionage@@QAE_NI@Z	; CvPlayerEspionage::IsDiplomat

; 11007: 
; 11008: 	lua_pushboolean(L, bIsDiplomat);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 11009: 	return 1;

	mov	eax, 1
	pop	ebx

; 11010: }

	ret	0
?lIsSpyDiplomat@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsSpyDiplomat
_TEXT	ENDS
PUBLIC	?lIsSpySchmoozing@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsSpySchmoozing
EXTRN	?IsSchmoozing@CvPlayerEspionage@@QAE_NI@Z:PROC	; CvPlayerEspionage::IsSchmoozing
; Function compile flags: /Ogtpy
;	COMDAT ?lIsSpySchmoozing@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsSpySchmoozing@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsSpySchmoozing, COMDAT

; 11014: {

	push	ebx
	push	ebp
	push	esi

; 11015: 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsSpySchm
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsSpySchm
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsSpySchm
	xor	bl, bl
$LN5@lIsSpySchm:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsSpySchm
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsSpySchm:

; 11016: 	int iSpyIndex = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 11017: 	bool bIsDiplomat = pkPlayer->GetEspionage()->IsSchmoozing(iSpyIndex);

	push	eax
	mov	ecx, edi
	call	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ ; CvPlayer::GetEspionage
	mov	ecx, eax
	call	?IsSchmoozing@CvPlayerEspionage@@QAE_NI@Z ; CvPlayerEspionage::IsSchmoozing

; 11018: 
; 11019: 	lua_pushboolean(L, bIsDiplomat);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 11020: 	return 1;	

	mov	eax, 1
	pop	ebx

; 11021: }

	ret	0
?lIsSpySchmoozing@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsSpySchmoozing
_TEXT	ENDS
PUBLIC	?lCanSpyStageCoup@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanSpyStageCoup
EXTRN	?CanStageCoup@CvPlayerEspionage@@QAE_NI@Z:PROC	; CvPlayerEspionage::CanStageCoup
; Function compile flags: /Ogtpy
;	COMDAT ?lCanSpyStageCoup@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanSpyStageCoup@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lCanSpyStageCoup, COMDAT

; 11025: {

	push	ebx
	push	ebp
	push	esi

; 11026: 	CvPlayer* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCanSpySta
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCanSpySta
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCanSpySta
	xor	bl, bl
$LN5@lCanSpySta:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lCanSpySta
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lCanSpySta:

; 11027: 	int iSpyIndex = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 11028: 	bool bCanStageCoup = pkPlayer->GetEspionage()->CanStageCoup(iSpyIndex);

	push	eax
	mov	ecx, edi
	call	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ ; CvPlayer::GetEspionage
	mov	ecx, eax
	call	?CanStageCoup@CvPlayerEspionage@@QAE_NI@Z ; CvPlayerEspionage::CanStageCoup

; 11029: 
; 11030: 	lua_pushboolean(L, bCanStageCoup);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 11031: 	return 1;

	mov	eax, 1
	pop	ebx

; 11032: }

	ret	0
?lCanSpyStageCoup@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lCanSpyStageCoup
_TEXT	ENDS
PUBLIC	?lGetAvailableSpyRelocationCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAvailableSpyRelocationCities
EXTRN	?CanMoveSpyTo@CvPlayerEspionage@@QAE_NPAVCvCity@@I_N@Z:PROC ; CvPlayerEspionage::CanMoveSpyTo
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetAvailableSpyRelocationCities@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetAvailableSpyRelocationCities@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetAvailableSpyRelocationCities@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetAvailableSpyRelocationCities@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetAvailableSpyRelocationCities@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_index$ = -60						; size = 4
_iLoop$236436 = -56					; size = 4
tv336 = -52						; size = 4
_uiSpyIndex$ = -48					; size = 4
_pkPlayerEspionage$ = -44				; size = 4
_strName$236447 = -40					; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetAvailableSpyRelocationCities@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetAvailableSpyRelocationCities, COMDAT

; 11035: {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetAvailableSpyRelocationCities@CvLuaPlayer@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 48					; 00000030H
	push	ebx
	push	ebp
	push	esi

; 11036: 	CvPlayerAI* pkThisPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+68]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN14@lGetAvaila
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN14@lGetAvaila
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN14@lGetAvaila
	xor	bl, bl
$LN14@lGetAvaila:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN21@lGetAvaila
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN21@lGetAvaila:

; 11037: 	CvPlayerEspionage* pkPlayerEspionage = pkThisPlayer->GetEspionage();

	mov	ecx, edi
	call	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ ; CvPlayer::GetEspionage

; 11038: 
; 11039: 	uint uiSpyIndex = luaL_checkinteger(L, 2);

	push	2
	push	esi
	mov	DWORD PTR _pkPlayerEspionage$[esp+84], eax
	call	_luaL_checkinteger

; 11040: 
; 11041: 	lua_createtable(L, 0, 0);

	push	0
	push	0
	push	esi
	mov	DWORD PTR _uiSpyIndex$[esp+96], eax
	call	_lua_createtable
	add	esp, 20					; 00000014H
	xor	edi, edi

; 11042: 	int index = 1;

	mov	DWORD PTR _index$[esp+76], 1
	mov	DWORD PTR tv336[esp+76], edi
	npad	11
$LL46@lGetAvaila:

; 11045: 	{
; 11046: 		const PlayerTypes ePlayer(static_cast<PlayerTypes>(i));
; 11047: 		CvPlayerAI& kPlayer = GET_PLAYER(ePlayer);

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers

; 11048: 
; 11049: 		if(kPlayer.isAlive())

	cmp	BYTE PTR [edi+eax+2256], 0
	lea	ebx, DWORD PTR [edi+eax]
	je	$LN7@lGetAvaila

; 11050: 		{
; 11051: 			int iLoop = 0;
; 11052: 			// Just find first coastal city
; 11053: 			for(CvCity* pCity = kPlayer.firstCity(&iLoop); pCity != NULL; pCity = kPlayer.nextCity(&iLoop))

	push	0
	lea	ecx, DWORD PTR _iLoop$236436[esp+80]
	push	ecx
	mov	ecx, ebx
	mov	DWORD PTR _iLoop$236436[esp+84], 0
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	ebp, eax
	test	ebp, ebp
	je	$LN7@lGetAvaila
$LL45@lGetAvaila:

; 11054: 			{
; 11055: 				if(pkPlayerEspionage->CanMoveSpyTo(pCity, uiSpyIndex, false))

	mov	edx, DWORD PTR _uiSpyIndex$[esp+76]
	mov	ecx, DWORD PTR _pkPlayerEspionage$[esp+76]
	push	0
	push	edx
	push	ebp
	call	?CanMoveSpyTo@CvPlayerEspionage@@QAE_NPAVCvCity@@I_N@Z ; CvPlayerEspionage::CanMoveSpyTo
	test	al, al
	je	$LN3@lGetAvaila

; 11056: 				{
; 11057: 					lua_createtable(L, 0, 0);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 11058: 					const int t = lua_gettop(L);

	push	esi
	call	_lua_gettop
	mov	edi, eax

; 11059: 
; 11060: 					lua_pushinteger(L, kPlayer.GetID());

	mov	eax, DWORD PTR [ebx+44]
	push	eax
	push	esi
	call	_lua_pushinteger

; 11061: 					lua_setfield(L, t, "PlayerID");

	push	OFFSET $SG236443
	push	edi
	push	esi
	call	_lua_setfield

; 11062: 
; 11063: 					lua_pushinteger(L, pCity->GetID());

	mov	eax, DWORD PTR [ebp+120]
	push	eax
	push	esi
	call	_lua_pushinteger

; 11064: 					lua_setfield(L, t, "CityID");

	push	OFFSET $SG236444
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 56					; 00000038H

; 11065: 
; 11066: 					lua_pushinteger(L, kPlayer.getCivilizationType());

	mov	ecx, ebx
	call	?getCivilizationType@CvPlayer@@QBE?AW4CivilizationTypes@@XZ ; CvPlayer::getCivilizationType
	push	eax
	push	esi
	call	_lua_pushinteger

; 11067: 					lua_setfield(L, t, "CivilizationType");

	push	OFFSET $SG236445
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 11068: 
; 11069: 					lua_pushinteger(L, kPlayer.getTeam());

	mov	ecx, ebx
	call	?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ	; CvPlayer::getTeam
	push	eax
	push	esi
	call	_lua_pushinteger

; 11070: 					lua_setfield(L, t, "Team");

	push	OFFSET $SG236446
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 11071: 
; 11072: 					CvString strName = pCity->getName();

	lea	eax, DWORD PTR _strName$236447[esp+76]
	push	eax
	mov	ecx, ebp
	call	?getName@CvCity@@QBE?BVCvString@@XZ	; CvCity::getName

; 11073: 					lua_pushstring(L, strName.c_str());

	lea	ecx, DWORD PTR _strName$236447[esp+76]
	mov	DWORD PTR __$EHRec$[esp+84], 0
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring

; 11074: 					lua_setfield(L, t, "Name");

	push	OFFSET $SG236449
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 11075: 
; 11076: 					lua_pushinteger(L, pCity->getPopulation());

	mov	ecx, ebp
	call	?getPopulation@CvCity@@QBEHXZ		; CvCity::getPopulation
	push	eax
	push	esi
	call	_lua_pushinteger

; 11077: 					lua_setfield(L, t, "Population");

	push	OFFSET $SG236450
	push	edi
	push	esi
	call	_lua_setfield

; 11078: 
; 11079: 					//TODO: Replace temp 99 w/ City Potential Espionage Value.
; 11080: 					lua_pushinteger(L, 99);

	push	99					; 00000063H
	push	esi
	call	_lua_pushinteger

; 11081: 					lua_setfield(L, t, "Potential");

	push	OFFSET $SG236451
	push	edi
	push	esi
	call	_lua_setfield

; 11082: 
; 11083: 					lua_rawseti(L, -2, index++);

	mov	edi, DWORD PTR _index$[esp+116]
	push	edi
	push	-2					; fffffffeH
	push	esi
	call	_lua_rawseti
	inc	edi
	add	esp, 52					; 00000034H

; 11084: 				}

	lea	ecx, DWORD PTR _strName$236447[esp+76]
	mov	DWORD PTR _index$[esp+76], edi
	mov	DWORD PTR __$EHRec$[esp+84], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN3@lGetAvaila:
	push	0
	lea	ecx, DWORD PTR _iLoop$236436[esp+80]
	push	ecx
	mov	ecx, ebx
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	ebp, eax
	test	ebp, ebp
	jne	$LL45@lGetAvaila

; 11050: 		{
; 11051: 			int iLoop = 0;
; 11052: 			// Just find first coastal city
; 11053: 			for(CvCity* pCity = kPlayer.firstCity(&iLoop); pCity != NULL; pCity = kPlayer.nextCity(&iLoop))

	mov	edi, DWORD PTR tv336[esp+76]
$LN7@lGetAvaila:

; 11043: 
; 11044: 	for(int i = 0; i < MAX_CIV_PLAYERS; ++i)

	add	edi, 63236				; 0000f704H
	cmp	edi, 3983868				; 003cc9fcH
	mov	DWORD PTR tv336[esp+76], edi
	jl	$LL46@lGetAvaila

; 11085: 			}
; 11086: 		}
; 11087: 	}
; 11088: 
; 11089: 	return 1;
; 11090: }

	mov	ecx, DWORD PTR __$EHRec$[esp+76]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 60					; 0000003cH
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetAvailableSpyRelocationCities@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _strName$236447[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetAvailableSpyRelocationCities@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetAvailableSpyRelocationCities@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetAvailableSpyRelocationCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetAvailableSpyRelocationCities
PUBLIC	?lGetNumTechsToSteal@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumTechsToSteal
EXTRN	?GetNumTechsToSteal@CvPlayerEspionage@@QAEHW4PlayerTypes@@@Z:PROC ; CvPlayerEspionage::GetNumTechsToSteal
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumTechsToSteal@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumTechsToSteal@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetNumTechsToSteal, COMDAT

; 11093: {

	push	ebx
	push	ebp
	push	esi

; 11094: 	CvPlayerAI* pkThisPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumTec@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumTec@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumTec@2
	xor	bl, bl
$LN5@lGetNumTec@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumTec@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumTec@2:

; 11095: 	CvPlayerEspionage* pkPlayerEspionage = pkThisPlayer->GetEspionage();

	mov	ecx, edi
	call	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ ; CvPlayer::GetEspionage

; 11096: 
; 11097: 	int iPlayer = lua_tointeger(L, 2);

	push	2
	push	esi
	mov	edi, eax
	call	_lua_tointeger
	add	esp, 8

; 11098: 	CvAssertMsg(iPlayer >= 0 && iPlayer < MAX_MAJOR_CIVS, "iPlayer out of bounds");
; 11099: 	PlayerTypes ePlayer = (PlayerTypes)iPlayer;
; 11100: 	lua_pushinteger(L, pkPlayerEspionage->GetNumTechsToSteal(ePlayer));

	push	eax
	mov	ecx, edi
	call	?GetNumTechsToSteal@CvPlayerEspionage@@QAEHW4PlayerTypes@@@Z ; CvPlayerEspionage::GetNumTechsToSteal
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 11101: 	return 1;

	mov	eax, 1
	pop	ebx

; 11102: }

	ret	0
?lGetNumTechsToSteal@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetNumTechsToSteal
_TEXT	ENDS
PUBLIC	?lGetIntrigueMessages@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetIntrigueMessages
EXTRN	?GetIntrigueMessage@CvPlayerEspionage@@QAE?AVString@Localization@@I@Z:PROC ; CvPlayerEspionage::GetIntrigueMessage
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$?lGetIntrigueMessages@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetIntrigueMessages@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetIntrigueMessages@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetIntrigueMessages@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetIntrigueMessages@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_i$236466 = -100					; size = 4
_index$ = -96						; size = 4
_strIntrigueMessage$236471 = -92			; size = 80
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetIntrigueMessages@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetIntrigueMessages, COMDAT

; 11105: {

	push	-1
	push	__ehhandler$?lGetIntrigueMessages@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	ebp
	push	esi

; 11106: 	lua_createtable(L, 0, 0);

	mov	esi, DWORD PTR _L$[esp+108]
	push	edi
	push	0
	push	0
	push	esi
	call	_lua_createtable

; 11107: 	int index = 1;
; 11108: 
; 11109: 	CvPlayerAI* pkThisPlayer = GetInstance(L);

	push	esi
	mov	DWORD PTR _index$[esp+132], 1
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 24					; 00000018H
	cmp	eax, 5
	jne	SHORT $LN9@lGetIntrig
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN9@lGetIntrig
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN9@lGetIntrig
	xor	bl, bl
$LN9@lGetIntrig:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN16@lGetIntrig
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN16@lGetIntrig:

; 11110: 	CvPlayerEspionage* pkPlayerEspionage = pkThisPlayer->GetEspionage();

	mov	ecx, edi
	call	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ ; CvPlayer::GetEspionage
	mov	ebp, eax

; 11111: 
; 11112: 	for(int i = pkPlayerEspionage->m_aIntrigueNotificationMessages.size(); i > 0; i--)

	mov	ecx, DWORD PTR [ebp+1288]
	sub	ecx, DWORD PTR [ebp+1284]
	mov	eax, 2021161081				; 78787879H
	imul	ecx
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	DWORD PTR _i$236466[esp+116], eax
	test	eax, eax
	jle	$LN28@lGetIntrig
	mov	ebx, eax
	shl	ebx, 4
	add	ebx, eax
	add	ebx, ebx
	add	ebx, ebx
$LL29@lGetIntrig:

; 11113: 	{
; 11114: 		lua_createtable(L, 0, 0);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 11115: 		const int t = lua_gettop(L);

	push	esi
	call	_lua_gettop
	mov	edi, eax
	mov	eax, DWORD PTR _i$236466[esp+132]
	add	esp, 16					; 00000010H
	dec	eax

; 11116: 
; 11117: 		Localization::String strIntrigueMessage = pkPlayerEspionage->GetIntrigueMessage(i - 1);

	push	eax
	lea	ecx, DWORD PTR _strIntrigueMessage$236471[esp+120]
	push	ecx
	mov	ecx, ebp
	call	?GetIntrigueMessage@CvPlayerEspionage@@QAE?AVString@Localization@@I@Z ; CvPlayerEspionage::GetIntrigueMessage

; 11118: 		const char* szIntrigueMessage = strIntrigueMessage.toUTF8();

	lea	ecx, DWORD PTR _strIntrigueMessage$236471[esp+116]
	mov	DWORD PTR __$EHRec$[esp+124], 0
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ

; 11119: 		lua_pushstring(L, szIntrigueMessage);

	push	eax
	push	esi
	call	_lua_pushstring

; 11120: 		lua_setfield(L, t, "String");

	push	OFFSET $SG236474
	push	edi
	push	esi
	call	_lua_setfield

; 11121: 		lua_pushinteger(L, pkPlayerEspionage->m_aIntrigueNotificationMessages[i - 1].m_iTurnNum);

	mov	edx, DWORD PTR [ebp+1284]
	mov	eax, DWORD PTR [edx+ebx-44]
	push	eax
	push	esi
	call	_lua_pushinteger

; 11122: 		lua_setfield(L, t, "Turn");

	push	OFFSET $SG236475
	push	edi
	push	esi
	call	_lua_setfield

; 11123: 		lua_pushinteger(L, pkPlayerEspionage->m_aIntrigueNotificationMessages[i - 1].m_eDiscoveringPlayer);

	mov	ecx, DWORD PTR [ebp+1284]
	mov	edx, DWORD PTR [ecx+ebx-68]
	push	edx
	push	esi
	call	_lua_pushinteger

; 11124: 		lua_setfield(L, t, "DiscoveringPlayer");

	push	OFFSET $SG236476
	push	edi
	push	esi
	call	_lua_setfield

; 11125: 		const char* szIntrigueSpy = pkPlayerEspionage->m_aIntrigueNotificationMessages[i - 1].m_strSpyName.c_str();

	mov	eax, DWORD PTR [ebp+1284]
	lea	eax, DWORD PTR [eax+ebx-68]
	add	esp, 60					; 0000003cH
	lea	ecx, DWORD PTR [eax+36]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ

; 11126: 		lua_pushstring(L, szIntrigueSpy);

	push	eax
	push	esi
	call	_lua_pushstring

; 11127: 		lua_setfield(L, t, "SpyName");

	push	OFFSET $SG236478
	push	edi
	push	esi
	call	_lua_setfield

; 11128: 
; 11129: 		lua_rawseti(L, -2, index++);

	mov	edi, DWORD PTR _index$[esp+136]
	push	edi
	push	-2					; fffffffeH
	push	esi
	call	_lua_rawseti
	inc	edi
	add	esp, 32					; 00000020H

; 11130: 	}

	lea	ecx, DWORD PTR _strIntrigueMessage$236471[esp+116]
	mov	DWORD PTR _index$[esp+116], edi
	mov	DWORD PTR __$EHRec$[esp+124], -1
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	eax, DWORD PTR _i$236466[esp+116]
	dec	eax
	sub	ebx, 68					; 00000044H
	mov	DWORD PTR _i$236466[esp+116], eax
	test	eax, eax
	jg	$LL29@lGetIntrig
$LN28@lGetIntrig:

; 11131: 
; 11132: 	return 1;
; 11133: }

	mov	ecx, DWORD PTR __$EHRec$[esp+116]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 100				; 00000064H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetIntrigueMessages@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _strIntrigueMessage$236471[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__ehhandler$?lGetIntrigueMessages@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetIntrigueMessages@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetIntrigueMessages@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetIntrigueMessages
PUBLIC	?lHasRecentIntrigueAbout@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasRecentIntrigueAbout
EXTRN	?HasRecentIntrigueAbout@CvPlayerEspionage@@QAE_NW4PlayerTypes@@@Z:PROC ; CvPlayerEspionage::HasRecentIntrigueAbout
; Function compile flags: /Ogtpy
;	COMDAT ?lHasRecentIntrigueAbout@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lHasRecentIntrigueAbout@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lHasRecentIntrigueAbout, COMDAT

; 11136: {

	push	ebx
	push	ebp
	push	esi

; 11137: 	CvPlayerAI* pkThisPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lHasRecent
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lHasRecent
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lHasRecent
	xor	bl, bl
$LN5@lHasRecent:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lHasRecent
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lHasRecent:

; 11138: 	CvPlayerEspionage* pkPlayerEspionage = pkThisPlayer->GetEspionage();

	mov	ecx, edi
	call	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ ; CvPlayer::GetEspionage

; 11139: 
; 11140: 	int iPlayer = lua_tointeger(L, 2);

	push	2
	push	esi
	mov	edi, eax
	call	_lua_tointeger
	add	esp, 8

; 11141: 	CvAssertMsg(iPlayer >= 0 && iPlayer < MAX_MAJOR_CIVS, "iPlayer out of bounds");
; 11142: 	PlayerTypes ePlayer = (PlayerTypes)iPlayer;
; 11143: 	lua_pushboolean(L, pkPlayerEspionage->HasRecentIntrigueAbout(ePlayer));

	push	eax
	mov	ecx, edi
	call	?HasRecentIntrigueAbout@CvPlayerEspionage@@QAE_NW4PlayerTypes@@@Z ; CvPlayerEspionage::HasRecentIntrigueAbout
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 11144: 
; 11145: 	return 1;

	mov	eax, 1
	pop	ebx

; 11146: }

	ret	0
?lHasRecentIntrigueAbout@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lHasRecentIntrigueAbout
_TEXT	ENDS
PUBLIC	?lGetRecentIntrigueInfo@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetRecentIntrigueInfo
EXTRN	?GetRecentIntrigueInfo@CvPlayerEspionage@@QAEPAUIntrigueNotificationMessage@@W4PlayerTypes@@@Z:PROC ; CvPlayerEspionage::GetRecentIntrigueInfo
; Function compile flags: /Ogtpy
;	COMDAT ?lGetRecentIntrigueInfo@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetRecentIntrigueInfo@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetRecentIntrigueInfo, COMDAT

; 11149: {

	push	ebx
	push	ebp
	push	esi

; 11150: 	CvPlayerAI* pkThisPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetRecent@3
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetRecent@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetRecent@3
	xor	bl, bl
$LN6@lGetRecent@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lGetRecent@3
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lGetRecent@3:

; 11151: 	CvPlayerEspionage* pkPlayerEspionage = pkThisPlayer->GetEspionage();

	mov	ecx, edi
	call	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ ; CvPlayer::GetEspionage

; 11152: 
; 11153: 	int iPlayer = lua_tointeger(L, 2);

	push	2
	push	esi
	mov	edi, eax
	call	_lua_tointeger
	add	esp, 8

; 11154: 	CvAssertMsg(iPlayer >= 0 && iPlayer < MAX_MAJOR_CIVS, "iPlayer out of bounds");
; 11155: 	PlayerTypes eTargetPlayer = (PlayerTypes)iPlayer;
; 11156: 	IntrigueNotificationMessage* pNotificationMessage = pkPlayerEspionage->GetRecentIntrigueInfo(eTargetPlayer);

	push	eax
	mov	ecx, edi
	call	?GetRecentIntrigueInfo@CvPlayerEspionage@@QAEPAUIntrigueNotificationMessage@@W4PlayerTypes@@@Z ; CvPlayerEspionage::GetRecentIntrigueInfo

; 11157: 
; 11158: 	PlayerTypes ePlotter = NO_PLAYER;

	or	ecx, -1

; 11159: 	CvIntrigueType eIntrigueType = NUM_INTRIGUE_TYPES;

	lea	edi, DWORD PTR [ecx+7]

; 11160: 	if (pNotificationMessage)

	test	eax, eax
	je	SHORT $LN1@lGetRecent@3

; 11161: 	{
; 11162: 		ePlotter = pNotificationMessage->m_eSourcePlayer;

	mov	ecx, DWORD PTR [eax+4]

; 11163: 		eIntrigueType = (CvIntrigueType)pNotificationMessage->m_iIntrigueType;

	mov	edi, DWORD PTR [eax+20]
$LN1@lGetRecent@3:

; 11164: 	}
; 11165: 
; 11166: 	lua_pushinteger(L, ePlotter);

	push	ecx
	push	esi
	call	_lua_pushinteger

; 11167: 	lua_pushinteger(L, eIntrigueType);

	push	edi
	push	esi
	call	_lua_pushinteger
	add	esp, 16					; 00000010H
	pop	edi
	pop	esi
	pop	ebp

; 11168: 
; 11169: 	return 2;

	mov	eax, 2
	pop	ebx

; 11170: }

	ret	0
?lGetRecentIntrigueInfo@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetRecentIntrigueInfo
_TEXT	ENDS
PUBLIC	?lGetCoupChanceOfSuccess@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCoupChanceOfSuccess
EXTRN	?GetCoupChanceOfSuccess@CvPlayerEspionage@@QAEHI@Z:PROC ; CvPlayerEspionage::GetCoupChanceOfSuccess
EXTRN	?GetSpyIndexInCity@CvPlayerEspionage@@QAEHPAVCvCity@@@Z:PROC ; CvPlayerEspionage::GetSpyIndexInCity
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCoupChanceOfSuccess@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_stack_size$264055 = -4					; size = 4
_L$ = 8							; size = 4
?lGetCoupChanceOfSuccess@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCoupChanceOfSuccess, COMDAT

; 11173: {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 11174: 	CvPlayerAI* pkThisPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetCoupCh
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetCoupCh
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetCoupCh
	xor	bl, bl
$LN6@lGetCoupCh:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lGetCoupCh
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lGetCoupCh:

; 11175: 	CvPlayerEspionage* pkPlayerEspionage = pkThisPlayer->GetEspionage();

	mov	ecx, edi
	call	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ ; CvPlayer::GetEspionage

; 11176: 	CvCity* pkCity = CvLuaCity::GetInstance(L, 2);

	push	esi
	mov	ebp, eax
	call	_lua_gettop
	push	2
	push	esi
	mov	DWORD PTR _stack_size$264055[esp+32], eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN17@lGetCoupCh
	push	OFFSET $SG237679
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN17@lGetCoupCh
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN17@lGetCoupCh
	xor	bl, bl
$LN17@lGetCoupCh:
	mov	eax, DWORD PTR _stack_size$264055[esp+20]
	push	eax
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN16@lGetCoupCh
	push	esi
	call	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
	add	esp, 4
$LN16@lGetCoupCh:

; 11177: 
; 11178: 	int iSpyIndex = pkPlayerEspionage->GetSpyIndexInCity(pkCity);

	push	edi
	mov	ecx, ebp
	call	?GetSpyIndexInCity@CvPlayerEspionage@@QAEHPAVCvCity@@@Z ; CvPlayerEspionage::GetSpyIndexInCity

; 11179: 	CvAssertMsg(iSpyIndex >= 0, "iSpyIndex out of bounds");
; 11180: 	if(iSpyIndex < 0)

	test	eax, eax
	jge	SHORT $LN1@lGetCoupCh

; 11181: 	{
; 11182: 		lua_pushinteger(L, 0);

	push	0

; 11183: 		return 1;
; 11184: 	}
; 11185: 
; 11186: 	lua_pushinteger(L, pkPlayerEspionage->GetCoupChanceOfSuccess(iSpyIndex));

	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 11187: 	return 1;

	mov	eax, 1
	pop	ebx

; 11188: }

	pop	ecx
	ret	0
$LN1@lGetCoupCh:

; 11183: 		return 1;
; 11184: 	}
; 11185: 
; 11186: 	lua_pushinteger(L, pkPlayerEspionage->GetCoupChanceOfSuccess(iSpyIndex));

	push	eax
	mov	ecx, ebp
	call	?GetCoupChanceOfSuccess@CvPlayerEspionage@@QAEHI@Z ; CvPlayerEspionage::GetCoupChanceOfSuccess
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 11187: 	return 1;

	mov	eax, 1
	pop	ebx

; 11188: }

	pop	ecx
	ret	0
?lGetCoupChanceOfSuccess@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCoupChanceOfSuccess
_TEXT	ENDS
PUBLIC	?lIsMyDiplomatVisitingThem@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsMyDiplomatVisitingThem
EXTRN	?IsMyDiplomatVisitingThem@CvPlayerEspionage@@QAE_NW4PlayerTypes@@_N@Z:PROC ; CvPlayerEspionage::IsMyDiplomatVisitingThem
; Function compile flags: /Ogtpy
;	COMDAT ?lIsMyDiplomatVisitingThem@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsMyDiplomatVisitingThem@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsMyDiplomatVisitingThem, COMDAT

; 11191: {

	push	ebx
	push	ebp
	push	esi

; 11192: 	CvPlayerAI* pkThisPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsMyDiplo
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsMyDiplo
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsMyDiplo
	xor	bl, bl
$LN5@lIsMyDiplo:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsMyDiplo
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsMyDiplo:

; 11193: 	CvPlayerEspionage* pkPlayerEspionage = pkThisPlayer->GetEspionage();

	mov	ecx, edi
	call	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ ; CvPlayer::GetEspionage

; 11194: 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	mov	edi, eax
	call	_lua_tointeger
	add	esp, 8

; 11195: 
; 11196: 	const bool bValue = pkPlayerEspionage->IsMyDiplomatVisitingThem(eOtherPlayer);

	push	0
	push	eax
	mov	ecx, edi
	call	?IsMyDiplomatVisitingThem@CvPlayerEspionage@@QAE_NW4PlayerTypes@@_N@Z ; CvPlayerEspionage::IsMyDiplomatVisitingThem

; 11197: 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 11198: 	return 1;

	mov	eax, 1
	pop	ebx

; 11199: }

	ret	0
?lIsMyDiplomatVisitingThem@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsMyDiplomatVisitingThem
_TEXT	ENDS
PUBLIC	?lIsOtherDiplomatVisitingMe@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsOtherDiplomatVisitingMe
EXTRN	?IsOtherDiplomatVisitingMe@CvPlayerEspionage@@QAE_NW4PlayerTypes@@@Z:PROC ; CvPlayerEspionage::IsOtherDiplomatVisitingMe
; Function compile flags: /Ogtpy
;	COMDAT ?lIsOtherDiplomatVisitingMe@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsOtherDiplomatVisitingMe@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lIsOtherDiplomatVisitingMe, COMDAT

; 11202: {

	push	ebx
	push	ebp
	push	esi

; 11203: 	CvPlayerAI* pkThisPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsOtherDi
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsOtherDi
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsOtherDi
	xor	bl, bl
$LN5@lIsOtherDi:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsOtherDi
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsOtherDi:

; 11204: 	CvPlayerEspionage* pkPlayerEspionage = pkThisPlayer->GetEspionage();

	mov	ecx, edi
	call	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ ; CvPlayer::GetEspionage

; 11205: 	PlayerTypes eOtherPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	mov	edi, eax
	call	_lua_tointeger
	add	esp, 8

; 11206: 
; 11207: 	const bool bValue = pkPlayerEspionage->IsOtherDiplomatVisitingMe(eOtherPlayer);

	push	eax
	mov	ecx, edi
	call	?IsOtherDiplomatVisitingMe@CvPlayerEspionage@@QAE_NW4PlayerTypes@@@Z ; CvPlayerEspionage::IsOtherDiplomatVisitingMe

; 11208: 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 11209: 	return 1;

	mov	eax, 1
	pop	ebx

; 11210: }

	ret	0
?lIsOtherDiplomatVisitingMe@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lIsOtherDiplomatVisitingMe
_TEXT	ENDS
PUBLIC	?lGetTradeRouteRange@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTradeRouteRange
EXTRN	?GetTradeRouteRange@CvPlayerTrade@@QAEHW4DomainTypes@@PAVCvCity@@@Z:PROC ; CvPlayerTrade::GetTradeRouteRange
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTradeRouteRange@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkInstance$264132 = -8					; size = 4
_eDomain$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetTradeRouteRange@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTradeRouteRange, COMDAT

; 11213: {

	sub	esp, 8
	push	ebx
	push	ebp
	push	esi

; 11214: 	CvPlayerAI* pkThisPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+16]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$264132[esp+36], 0
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN21@lGetTradeR@3
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN21@lGetTradeR@3
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$264132[esp+24], eax
	test	eax, eax
	je	SHORT $LN21@lGetTradeR@3
	xor	bl, bl
$LN21@lGetTradeR@3:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetTradeR@3
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetTradeR@3:

; 11215: 	const DomainTypes eDomain = (DomainTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 11216: 	CvCity* pkCity = CvLuaCity::GetInstance(L, 3);

	push	esi
	mov	DWORD PTR _eDomain$[esp+36], eax
	call	_lua_gettop
	push	3
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 5
	jne	SHORT $LN16@lGetTradeR@3
	push	OFFSET $SG237679
	push	3
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN16@lGetTradeR@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN16@lGetTradeR@3
	xor	bl, bl
$LN16@lGetTradeR@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN15@lGetTradeR@3
	push	esi
	call	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
	add	esp, 4
$LN15@lGetTradeR@3:

; 11217: 
; 11218: 	CvPlayerTrade* pkPlayerTrade = pkThisPlayer->GetTrade();

	mov	ecx, DWORD PTR _pkInstance$264132[esp+24]
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade

; 11219: 	lua_pushinteger(L, pkPlayerTrade->GetTradeRouteRange(eDomain, pkCity));

	mov	ecx, DWORD PTR _eDomain$[esp+24]
	push	edi
	push	ecx
	mov	ecx, eax
	call	?GetTradeRouteRange@CvPlayerTrade@@QAEHW4DomainTypes@@PAVCvCity@@@Z ; CvPlayerTrade::GetTradeRouteRange
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 11220: 	return 1;

	mov	eax, 1
	pop	ebx

; 11221: }

	add	esp, 8
	ret	0
?lGetTradeRouteRange@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTradeRouteRange
_TEXT	ENDS
PUBLIC	?lCanCommitVote@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanCommitVote
EXTRN	?CanCommitVote@CvLeagueAI@@QAE_NW4PlayerTypes@@PAVCvString@@@Z:PROC ; CvLeagueAI::CanCommitVote
EXTRN	?GetLeagueAI@CvPlayer@@QBEPAVCvLeagueAI@@XZ:PROC ; CvPlayer::GetLeagueAI
; Function compile flags: /Ogtpy
;	COMDAT ?lCanCommitVote@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanCommitVote@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lCanCommitVote, COMDAT

; 11225: {

	push	ebx
	push	ebp
	push	esi

; 11226: 	CvPlayerAI* pkThisPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCanCommit
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCanCommit
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCanCommit
	xor	bl, bl
$LN5@lCanCommit:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lCanCommit
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lCanCommit:

; 11227: 	const PlayerTypes eToPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 11228: 
; 11229: 	CvLeagueAI* pkPlayerLeagueAI = pkThisPlayer->GetLeagueAI();

	mov	ecx, edi
	mov	ebx, eax
	call	?GetLeagueAI@CvPlayer@@QBEPAVCvLeagueAI@@XZ ; CvPlayer::GetLeagueAI

; 11230: 	lua_pushboolean(L, pkPlayerLeagueAI->CanCommitVote(eToPlayer));

	push	0
	push	ebx
	mov	ecx, eax
	call	?CanCommitVote@CvLeagueAI@@QAE_NW4PlayerTypes@@PAVCvString@@@Z ; CvLeagueAI::CanCommitVote
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 11231: 	return 1;

	mov	eax, 1
	pop	ebx

; 11232: }

	ret	0
?lCanCommitVote@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lCanCommitVote
_TEXT	ENDS
PUBLIC	?lGetCommitVoteDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCommitVoteDetails
EXTRN	?GetCommitVoteDetails@CvLeagueAI@@QAE?AVCvString@@W4PlayerTypes@@@Z:PROC ; CvLeagueAI::GetCommitVoteDetails
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetCommitVoteDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetCommitVoteDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetCommitVoteDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetCommitVoteDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetCommitVoteDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T264184 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetCommitVoteDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCommitVoteDetails, COMDAT

; 11236: {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetCommitVoteDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 28					; 0000001cH
	push	ebx
	push	ebp
	push	esi

; 11237: 	CvPlayerAI* pkThisPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+48]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetCommit
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetCommit
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetCommit
	xor	bl, bl
$LN6@lGetCommit:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lGetCommit
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lGetCommit:

; 11238: 	const PlayerTypes eToPlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 11239: 
; 11240: 	CvLeagueAI* pkPlayerLeagueAI = pkThisPlayer->GetLeagueAI();

	mov	ecx, edi
	mov	ebx, eax
	call	?GetLeagueAI@CvPlayer@@QBEPAVCvLeagueAI@@XZ ; CvPlayer::GetLeagueAI

; 11241: 	lua_pushstring(L, pkPlayerLeagueAI->GetCommitVoteDetails(eToPlayer));

	push	ebx
	lea	ecx, DWORD PTR $T264184[esp+60]
	push	ecx
	mov	ecx, eax
	call	?GetCommitVoteDetails@CvLeagueAI@@QAE?AVCvString@@W4PlayerTypes@@@Z ; CvLeagueAI::GetCommitVoteDetails
	mov	ecx, eax
	mov	DWORD PTR __$EHRec$[esp+64], 0
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8
	lea	ecx, DWORD PTR $T264184[esp+56]
	mov	DWORD PTR __$EHRec$[esp+64], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 11242: 	return 1;
; 11243: }

	mov	ecx, DWORD PTR __$EHRec$[esp+56]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetCommitVoteDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR $T264184[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetCommitVoteDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetCommitVoteDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetCommitVoteDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCommitVoteDetails
PUBLIC	?lIsConnected@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lIsConnected
EXTRN	?isConnected@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::isConnected
; Function compile flags: /Ogtpy
;	COMDAT ?lIsConnected@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsConnected@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsConnected, COMDAT

; 11248: 	return BasicLuaMethod(L, &CvPlayerAI::isConnected);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isConnected@CvPlayer@@QBE_NXZ	; CvPlayer::isConnected
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 11249: }

	ret	0
?lIsConnected@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsConnected
_TEXT	ENDS
PUBLIC	?lIsObserver@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lIsObserver
EXTRN	?isObserver@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::isObserver
; Function compile flags: /Ogtpy
;	COMDAT ?lIsObserver@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsObserver@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lIsObserver, COMDAT

; 11254: 	return BasicLuaMethod(L, &CvPlayerAI::isObserver);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?isObserver@CvPlayer@@QBE_NXZ	; CvPlayer::isObserver
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 11255: }

	ret	0
?lIsObserver@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lIsObserver
_TEXT	ENDS
PUBLIC	?lHasTurnTimerExpired@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasTurnTimerExpired
EXTRN	?hasTurnTimerExpired@CvPlayer@@QAE_NXZ:PROC	; CvPlayer::hasTurnTimerExpired
; Function compile flags: /Ogtpy
;	COMDAT ?lHasTurnTimerExpired@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lHasTurnTimerExpired@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lHasTurnTimerExpired, COMDAT

; 11260: 	return BasicLuaMethod(L, &CvPlayerAI::hasTurnTimerExpired);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?hasTurnTimerExpired@CvPlayer@@QAE_NXZ ; CvPlayer::hasTurnTimerExpired
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AE_NXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod<bool>
	add	esp, 8

; 11261: }

	ret	0
?lHasTurnTimerExpired@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lHasTurnTimerExpired
_TEXT	ENDS
PUBLIC	?lHasUnitOfClassType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasUnitOfClassType
EXTRN	?getUnitClassType@CvUnit@@QBE?AW4UnitClassTypes@@XZ:PROC ; CvUnit::getUnitClassType
; Function compile flags: /Ogtpy
;	COMDAT ?lHasUnitOfClassType@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iUnitLoop$ = -4					; size = 4
_L$ = 8							; size = 4
?lHasUnitOfClassType@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lHasUnitOfClassType, COMDAT

; 11265: {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 11266: 	CvPlayerAI* pkThisPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN9@lHasUnitOf
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN9@lHasUnitOf
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN9@lHasUnitOf
	xor	bl, bl
$LN9@lHasUnitOf:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN16@lHasUnitOf
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN16@lHasUnitOf:

; 11267: 	
; 11268: 	UnitClassTypes eUnitClass = static_cast<UnitClassTypes>(luaL_checkint(L, 2));

	push	2
	push	esi
	call	_luaL_checkinteger
	add	esp, 8
	mov	ebp, eax

; 11269: 
; 11270: 	bool bResult = false;
; 11271: 	int iUnitLoop;
; 11272: 	CvUnit* pLoopUnit;
; 11273: 
; 11274: 	for(pLoopUnit = pkThisPlayer->firstUnit(&iUnitLoop); pLoopUnit != NULL; pLoopUnit = pkThisPlayer->nextUnit(&iUnitLoop))

	push	0
	lea	eax, DWORD PTR _iUnitLoop$[esp+24]
	push	eax
	mov	ecx, edi
	xor	bl, bl
	call	?firstUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z ; CvPlayer::firstUnit
	test	eax, eax
	je	SHORT $LN2@lHasUnitOf
$LN23@lHasUnitOf:

; 11275: 	{
; 11276: 		if(pLoopUnit != NULL && pLoopUnit->getUnitClassType() == eUnitClass)

	mov	ecx, eax
	call	?getUnitClassType@CvUnit@@QBE?AW4UnitClassTypes@@XZ ; CvUnit::getUnitClassType
	cmp	eax, ebp
	je	SHORT $LN19@lHasUnitOf
	push	0
	lea	ecx, DWORD PTR _iUnitLoop$[esp+24]
	push	ecx
	mov	ecx, edi
	call	?nextUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z ; CvPlayer::nextUnit
	test	eax, eax
	jne	SHORT $LN23@lHasUnitOf
	jmp	SHORT $LN2@lHasUnitOf
$LN19@lHasUnitOf:

; 11277: 		{
; 11278: 			bResult = true;

	mov	bl, 1
$LN2@lHasUnitOf:

; 11279: 			break;
; 11280: 		}
; 11281: 	}
; 11282: 
; 11283: 	lua_pushboolean(L, bResult);

	movzx	edx, bl
	push	edx
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 11284: 	return 1;

	mov	eax, 1
	pop	ebx

; 11285: }

	pop	ecx
	ret	0
?lHasUnitOfClassType@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lHasUnitOfClassType
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::begin
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::begin, COMDAT
; _this$ = ecx

; 556  : 		return (_TREE_ITERATOR(_Lmost()));

	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 557  : 		}

	ret	4
?begin@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::end, COMDAT
; _this$ = ecx

; 566  : 		return (_TREE_ITERATOR(_Myhead));

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 567  : 		}

	ret	4
?end@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::end
_TEXT	ENDS
PUBLIC	??1?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<TradeConnectionPlot,40,0,297,0>::~FStaticVector<TradeConnectionPlot,40,0,297,0>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ??1?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ
_TEXT	SEGMENT
??1?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ PROC ; FStaticVector<TradeConnectionPlot,40,0,297,0>::~FStaticVector<TradeConnectionPlot,40,0,297,0>, COMDAT
; _this$ = ecx

; 618  : 		Free(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR [ecx]
	add	ecx, 12					; 0000000cH
	cmp	eax, ecx
	je	SHORT $LN3@FStaticVec
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	pop	ecx
$LN3@FStaticVec:

; 619  : 	};

	ret	0
??1?$FStaticVector@UTradeConnectionPlot@@$0CI@$0A@$0BCJ@$0A@@@QAE@XZ ENDP ; FStaticVector<TradeConnectionPlot,40,0,297,0>::~FStaticVector<TradeConnectionPlot,40,0,297,0>
_TEXT	ENDS
PUBLIC	?begin@?$vector@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@2@XZ ; std::vector<enum PolicyTypes,std::allocator<enum PolicyTypes> >::begin
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?begin@?$vector@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@2@XZ PROC ; std::vector<enum PolicyTypes,std::allocator<enum PolicyTypes> >::begin, COMDAT
; _this$ = ecx

; 667  : 		return (iterator(_Myfirst));

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 668  : 		}

	ret	4
?begin@?$vector@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@2@XZ ENDP ; std::vector<enum PolicyTypes,std::allocator<enum PolicyTypes> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@2@XZ ; std::vector<enum PolicyTypes,std::allocator<enum PolicyTypes> >::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$vector@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@2@XZ PROC ; std::vector<enum PolicyTypes,std::allocator<enum PolicyTypes> >::end, COMDAT
; _this$ = ecx

; 677  : 		return (iterator(_Mylast));

	mov	ecx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 678  : 		}

	ret	4
?end@?$vector@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@2@XZ ENDP ; std::vector<enum PolicyTypes,std::allocator<enum PolicyTypes> >::end
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBIH@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator::operator*
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBIH@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBIH@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 465  : 			return ((reference)**(const_iterator *)this);

	mov	eax, DWORD PTR [ecx]
	add	eax, 12					; 0000000cH

; 466  : 			}

	ret	0
??Diterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBIH@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	?MoveNext@?$CvEnumerator@VICvUnit1@@@@QAE_NXZ	; CvEnumerator<ICvUnit1>::MoveNext
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvdllinterfaces.h
;	COMDAT ?MoveNext@?$CvEnumerator@VICvUnit1@@@@QAE_NXZ
_TEXT	SEGMENT
?MoveNext@?$CvEnumerator@VICvUnit1@@@@QAE_NXZ PROC	; CvEnumerator<ICvUnit1>::MoveNext, COMDAT
; _this$ = ecx

; 1849 : 		return (m_Enumerator.get() != NULL)? m_Enumerator->MoveNext() : false;

	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	je	SHORT $LN3@MoveNext
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	push	eax
	call	edx

; 1850 : 	}

	ret	0
$LN3@MoveNext:

; 1849 : 		return (m_Enumerator.get() != NULL)? m_Enumerator->MoveNext() : false;

	xor	al, al

; 1850 : 	}

	ret	0
?MoveNext@?$CvEnumerator@VICvUnit1@@@@QAE_NXZ ENDP	; CvEnumerator<ICvUnit1>::MoveNext
_TEXT	ENDS
PUBLIC	?GetCurrent@?$CvEnumerator@VICvUnit1@@@@QAEPAVICvUnit1@@XZ ; CvEnumerator<ICvUnit1>::GetCurrent
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetCurrent@?$CvEnumerator@VICvUnit1@@@@QAEPAVICvUnit1@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetCurrent@?$CvEnumerator@VICvUnit1@@@@QAEPAVICvUnit1@@XZ$0
__ehfuncinfo$?GetCurrent@?$CvEnumerator@VICvUnit1@@@@QAEPAVICvUnit1@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetCurrent@?$CvEnumerator@VICvUnit1@@@@QAEPAVICvUnit1@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?GetCurrent@?$CvEnumerator@VICvUnit1@@@@QAEPAVICvUnit1@@XZ
_TEXT	SEGMENT
_pValue$236784 = -16					; size = 4
__$EHRec$ = -12						; size = 12
?GetCurrent@?$CvEnumerator@VICvUnit1@@@@QAEPAVICvUnit1@@XZ PROC ; CvEnumerator<ICvUnit1>::GetCurrent, COMDAT
; _this$ = ecx

; 1859 : 	{

	push	-1
	push	__ehhandler$?GetCurrent@?$CvEnumerator@VICvUnit1@@@@QAEPAVICvUnit1@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx

; 1860 : 		if(m_Enumerator.get() != NULL)

	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	je	SHORT $LN2@GetCurrent

; 1861 : 		{
; 1862 : 			auto_ptr<ICvUnknown> pValue(m_Enumerator->GetCurrent());

	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+16]
	push	esi
	push	edi
	push	eax
	call	edx
	mov	esi, eax
	mov	DWORD PTR _pValue$236784[esp+24], esi
	mov	DWORD PTR __$EHRec$[esp+32], 0

; 1863 : 			return (pValue.get() != NULL)? pValue->QueryInterface<T>() : NULL;

	test	esi, esi
	je	SHORT $LN5@GetCurrent
	push	esi
	call	??$QueryInterface@VICvUnit1@@@ICvUnknown@@QAGPAVICvUnit1@@XZ ; ICvUnknown::QueryInterface<ICvUnit1>
	mov	edi, eax
	jmp	SHORT $LN6@GetCurrent
$LN5@GetCurrent:
	xor	edi, edi
$LN6@GetCurrent:
	mov	DWORD PTR __$EHRec$[esp+32], -1
	test	esi, esi
	je	SHORT $LN24@GetCurrent
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+4]
	push	esi
	call	ecx
$LN24@GetCurrent:
	mov	eax, edi
	pop	edi
	pop	esi

; 1864 : 		}
; 1865 : 		else
; 1866 : 		{
; 1867 : 			return NULL;
; 1868 : 		}	
; 1869 : 	}

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	0
$LN2@GetCurrent:
	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	xor	eax, eax
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetCurrent@?$CvEnumerator@VICvUnit1@@@@QAEPAVICvUnit1@@XZ$0:
	lea	ecx, DWORD PTR _pValue$236784[ebp]
	jmp	??1?$auto_ptr@VICvUnknown@@@std@@QAE@XZ	; std::auto_ptr<ICvUnknown>::~auto_ptr<ICvUnknown>
__ehhandler$?GetCurrent@?$CvEnumerator@VICvUnit1@@@@QAEPAVICvUnit1@@XZ:
	mov	eax, OFFSET __ehfuncinfo$?GetCurrent@?$CvEnumerator@VICvUnit1@@@@QAEPAVICvUnit1@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetCurrent@?$CvEnumerator@VICvUnit1@@@@QAEPAVICvUnit1@@XZ ENDP ; CvEnumerator<ICvUnit1>::GetCurrent
PUBLIC	?begin@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@XZ ; std::vector<Opinion,std::allocator<Opinion> >::begin
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?begin@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@XZ PROC ; std::vector<Opinion,std::allocator<Opinion> >::begin, COMDAT
; _this$ = ecx

; 667  : 		return (iterator(_Myfirst));

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 668  : 		}

	ret	4
?begin@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@XZ ENDP ; std::vector<Opinion,std::allocator<Opinion> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@XZ ; std::vector<Opinion,std::allocator<Opinion> >::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@XZ PROC ; std::vector<Opinion,std::allocator<Opinion> >::end, COMDAT
; _this$ = ecx

; 677  : 		return (iterator(_Mylast));

	mov	ecx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 678  : 		}

	ret	4
?end@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@XZ ENDP ; std::vector<Opinion,std::allocator<Opinion> >::end
_TEXT	ENDS
PUBLIC	??1?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::~_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::~_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >, COMDAT
; _this$ = ecx
	ret	0
??1?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::~_Tree_nod<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >
_TEXT	ENDS
PUBLIC	?_Buy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAE_NI@Z ; std::vector<CvString,std::allocator<CvString> >::_Buy
; Function compile flags: /Ogtpy
;	COMDAT ?_Buy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
__Capacity$ = 8						; size = 4
?_Buy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAE_NI@Z PROC ; std::vector<CvString,std::allocator<CvString> >::_Buy, COMDAT
; _this$ = ecx

; 1102 : 		{	// allocate array with _Capacity elements

	push	esi

; 1103 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	xor	eax, eax
	push	edi

; 1104 : 		if (_Capacity == 0)

	mov	edi, DWORD PTR __Capacity$[esp+4]
	mov	esi, ecx
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi+12], eax
	cmp	edi, eax
	jne	SHORT $LN4@Buy
	pop	edi

; 1105 : 			return (false);

	xor	al, al
	pop	esi

; 1115 : 		}

	ret	4
$LN4@Buy:

; 1106 : 		else if (max_size() < _Capacity)

	cmp	edi, 153391689				; 09249249H
	jbe	SHORT $LN2@Buy

; 1107 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@KAXXZ ; std::vector<CvString,std::allocator<CvString> >::_Xlen
$LN16@Buy:
$LN2@Buy:

; 1108 : 		else
; 1109 : 			{	// nonempty array, allocate storage
; 1110 : 			_Myfirst = this->_Alval.allocate(_Capacity);

	push	eax
	push	edi
	call	??$_Allocate@VCvString@@@std@@YAPAVCvString@@IPAV1@@Z ; std::_Allocate<CvString>

; 1111 : 			_Mylast = _Myfirst;
; 1112 : 			_Myend = _Myfirst + _Capacity;

	lea	ecx, DWORD PTR [edi*8]
	sub	ecx, edi
	add	esp, 8
	lea	edx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	pop	edi
	mov	DWORD PTR [esi+12], edx

; 1113 : 			}
; 1114 : 		return (true);

	mov	al, 1
	pop	esi

; 1115 : 		}

	ret	4
$LN15@Buy:
?_Buy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAE_NI@Z ENDP ; std::vector<CvString,std::allocator<CvString> >::_Buy
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::operator++
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 273  : 			{	// preincrement

	push	esi
	mov	esi, ecx

; 274  : 			_Inc();

	call	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::_Inc

; 275  : 			return (*this);

	mov	eax, esi
	pop	esi

; 276  : 			}

	ret	0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::~FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAE@XZ
_TEXT	SEGMENT
??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAE@XZ PROC ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::~FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>, COMDAT
; _this$ = ecx

; 618  : 		Free(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR [ecx]
	add	ecx, 12					; 0000000cH
	cmp	eax, ecx
	je	SHORT $LN3@FStaticVec@2
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	pop	ecx
$LN3@FStaticVec@2:

; 619  : 	};

	ret	0
??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAE@XZ ENDP ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::~FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>
_TEXT	ENDS
PUBLIC	?_Buy@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAE_NI@Z ; std::vector<Opinion,std::allocator<Opinion> >::_Buy
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Buy@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
__Capacity$ = 8						; size = 4
?_Buy@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAE_NI@Z PROC ; std::vector<Opinion,std::allocator<Opinion> >::_Buy, COMDAT
; _this$ = ecx

; 1102 : 		{	// allocate array with _Capacity elements

	push	esi

; 1103 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;
; 1104 : 		if (_Capacity == 0)

	mov	esi, DWORD PTR __Capacity$[esp]
	xor	eax, eax
	push	edi
	mov	edi, ecx
	mov	DWORD PTR [edi+4], eax
	mov	DWORD PTR [edi+8], eax
	mov	DWORD PTR [edi+12], eax
	cmp	esi, eax
	jne	SHORT $LN4@Buy@2
	pop	edi

; 1105 : 			return (false);

	xor	al, al
	pop	esi

; 1115 : 		}

	ret	4
$LN4@Buy@2:

; 1106 : 		else if (max_size() < _Capacity)

	cmp	esi, 51130563				; 030c30c3H
	jbe	SHORT $LN2@Buy@2

; 1107 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@KAXXZ ; std::vector<Opinion,std::allocator<Opinion> >::_Xlen
$LN16@Buy@2:
$LN2@Buy@2:

; 1108 : 		else
; 1109 : 			{	// nonempty array, allocate storage
; 1110 : 			_Myfirst = this->_Alval.allocate(_Capacity);

	push	eax
	push	esi
	call	??$_Allocate@UOpinion@@@std@@YAPAUOpinion@@IPAU1@@Z ; std::_Allocate<Opinion>

; 1111 : 			_Mylast = _Myfirst;
; 1112 : 			_Myend = _Myfirst + _Capacity;

	imul	esi, 84					; 00000054H
	add	esi, eax
	add	esp, 8
	mov	DWORD PTR [edi+4], eax
	mov	DWORD PTR [edi+8], eax
	mov	DWORD PTR [edi+12], esi
	pop	edi

; 1113 : 			}
; 1114 : 		return (true);

	mov	al, 1
	pop	esi

; 1115 : 		}

	ret	4
$LN15@Buy@2:
?_Buy@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAE_NI@Z ENDP ; std::vector<Opinion,std::allocator<Opinion> >::_Buy
_TEXT	ENDS
PUBLIC	?begin@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE?AV?$_Vector_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@XZ ; std::vector<CvString,std::allocator<CvString> >::begin
; Function compile flags: /Ogtpy
;	COMDAT ?begin@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE?AV?$_Vector_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE?AV?$_Vector_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@XZ PROC ; std::vector<CvString,std::allocator<CvString> >::begin, COMDAT
; _this$ = ecx

; 667  : 		return (iterator(_Myfirst));

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 668  : 		}

	ret	4
?begin@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE?AV?$_Vector_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@XZ ENDP ; std::vector<CvString,std::allocator<CvString> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE?AV?$_Vector_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@XZ ; std::vector<CvString,std::allocator<CvString> >::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE?AV?$_Vector_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE?AV?$_Vector_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@XZ PROC ; std::vector<CvString,std::allocator<CvString> >::end, COMDAT
; _this$ = ecx

; 677  : 		return (iterator(_Mylast));

	mov	ecx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 678  : 		}

	ret	4
?end@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE?AV?$_Vector_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@XZ ENDP ; std::vector<CvString,std::allocator<CvString> >::end
_TEXT	ENDS
PUBLIC	?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@IAEXI@Z ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::GrowSize
EXTRN	_memcpy:PROC
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@IAEXI@Z
_TEXT	SEGMENT
_uiFit$ = 8						; size = 4
?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@IAEXI@Z PROC ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::GrowSize, COMDAT
; _this$ = ecx

; 744  : 	{

	push	esi
	mov	esi, ecx

; 745  : 		if( m_uiCurrMaxSize == 0 ) m_uiCurrMaxSize = 1;

	cmp	DWORD PTR [esi+8], 0
	push	edi
	jne	SHORT $LN33@GrowSize
	mov	DWORD PTR [esi+8], 1
$LN33@GrowSize:

; 746  : 		while( uiFit >= m_uiCurrMaxSize ){

	mov	edx, DWORD PTR _uiFit$[esp+4]
	cmp	edx, DWORD PTR [esi+8]
	jb	SHORT $LN7@GrowSize
	npad	6
$LL8@GrowSize:

; 747  : 
; 748  : 			//Try to double size...
; 749  : 			UINT uiNewSize = m_uiCurrMaxSize<<1;

	mov	eax, DWORD PTR [esi+8]
	lea	ecx, DWORD PTR [eax+eax]

; 750  : 
; 751  : 			//...on overflow bail and set to exact size
; 752  : 			if( uiNewSize < m_uiCurrMaxSize ){

	cmp	ecx, eax
	jb	SHORT $LN34@GrowSize

; 754  : 				break;
; 755  : 			}
; 756  : 
; 757  : 			//...otherwise use the doubled size
; 758  : 			m_uiCurrMaxSize = uiNewSize;

	mov	DWORD PTR [esi+8], ecx
	cmp	edx, ecx
	jae	SHORT $LL8@GrowSize

; 750  : 
; 751  : 			//...on overflow bail and set to exact size
; 752  : 			if( uiNewSize < m_uiCurrMaxSize ){

	jmp	SHORT $LN7@GrowSize
$LN34@GrowSize:

; 753  : 				m_uiCurrMaxSize = uiFit;

	mov	DWORD PTR [esi+8], edx
$LN7@GrowSize:
	push	ebp

; 759  : 		}
; 760  : 
; 761  : 		T* pTemp = Alloc(m_uiCurrMaxSize);

	mov	ebp, DWORD PTR [esi+8]
	cmp	ebp, 800				; 00000320H
	jbe	SHORT $LN16@GrowSize
	push	798					; 0000031eH
	push	OFFSET ??_C@_0GH@ECFAPJEJ@c?3?2users?2enormousapplepie?2docume@
	lea	eax, DWORD PTR [ebp*8]
	push	4
	push	eax
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	edi, eax
	mov	DWORD PTR [esi+8], ebp
	jmp	SHORT $LN15@GrowSize
$LN16@GrowSize:
	lea	edi, DWORD PTR [esi+12]
	mov	DWORD PTR [esi+8], 800			; 00000320H
$LN15@GrowSize:

; 762  : 		if( bPODType ){
; 763  : 			memcpy( (void*)pTemp, (void*)m_pData, sizeof(T)*m_uiCurrSize);

	mov	ecx, DWORD PTR [esi+4]
	mov	edx, DWORD PTR [esi]
	add	ecx, ecx
	add	ecx, ecx
	add	ecx, ecx
	push	ecx
	push	edx
	push	edi
	call	_memcpy

; 764  : 		}else{
; 765  : 			for(unsigned int i = 0; i < m_uiCurrSize; ++i)
; 766  : 				new( (void*)&(pTemp[i]) )T( m_pData[i]);
; 767  : 		}
; 768  : 		Free(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR [esi]
	add	esp, 12					; 0000000cH
	lea	ecx, DWORD PTR [esi+12]
	pop	ebp
	cmp	eax, ecx
	je	SHORT $LN36@GrowSize
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN36@GrowSize:

; 769  : 		m_pData = pTemp;

	mov	DWORD PTR [esi], edi
	pop	edi

; 770  : 
; 771  : 		m_bIsResized = true;

	mov	BYTE PTR [esi+6412], 1
	pop	esi

; 772  : 	};

	ret	4
?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@IAEXI@Z ENDP ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::GrowSize
_TEXT	ENDS
PUBLIC	?GrowSizeToFit@?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@IAEXI@Z ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::GrowSizeToFit
; Function compile flags: /Ogtpy
;	COMDAT ?GrowSizeToFit@?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@IAEXI@Z
_TEXT	SEGMENT
_uiFit$ = 8						; size = 4
?GrowSizeToFit@?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@IAEXI@Z PROC ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::GrowSizeToFit, COMDAT
; _this$ = ecx

; 776  : 	{

	push	esi
	push	edi

; 777  : 		if( uiFit <= m_uiCurrMaxSize )

	mov	edi, DWORD PTR _uiFit$[esp+4]
	mov	esi, ecx
	cmp	edi, DWORD PTR [esi+8]
	jbe	SHORT $LN7@GrowSizeTo
	push	ebx

; 778  : 			return;
; 779  : 
; 780  : 		m_uiCurrMaxSize = uiFit;

	mov	DWORD PTR [esi+8], edi

; 781  : 		T* pTemp = Alloc(m_uiCurrMaxSize);

	cmp	edi, 800				; 00000320H
	jbe	SHORT $LN13@GrowSizeTo
	push	798					; 0000031eH
	push	OFFSET ??_C@_0GH@ECFAPJEJ@c?3?2users?2enormousapplepie?2docume@
	lea	eax, DWORD PTR [edi*8]
	push	4
	push	eax
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	ebx, eax
	mov	DWORD PTR [esi+8], edi
	jmp	SHORT $LN12@GrowSizeTo
$LN13@GrowSizeTo:
	lea	ebx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi+8], 800			; 00000320H
$LN12@GrowSizeTo:

; 782  : 		if( bPODType ){
; 783  : 			memcpy( (void*)pTemp, (void*)m_pData, sizeof(T)*m_uiCurrSize);

	mov	ecx, DWORD PTR [esi+4]
	mov	edx, DWORD PTR [esi]
	add	ecx, ecx
	add	ecx, ecx
	add	ecx, ecx
	push	ecx
	push	edx
	push	ebx
	call	_memcpy

; 784  : 		}else{
; 785  : 			for(unsigned int i = 0; i < m_uiCurrSize; ++i)
; 786  : 				new( (void*)&(pTemp[i]) )T( m_pData[i]);
; 787  : 		}
; 788  : 		Free(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR [esi]
	lea	ecx, DWORD PTR [esi+12]
	add	esp, 12					; 0000000cH
	cmp	eax, ecx
	je	SHORT $LN20@GrowSizeTo
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN20@GrowSizeTo:

; 789  : 		m_pData = pTemp;

	mov	DWORD PTR [esi], ebx

; 790  : 
; 791  : 		m_bIsResized = true;

	mov	BYTE PTR [esi+6412], 1
	pop	ebx
$LN7@GrowSizeTo:
	pop	edi
	pop	esi

; 792  : 	};

	ret	4
?GrowSizeToFit@?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@IAEXI@Z ENDP ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::GrowSizeToFit
_TEXT	ENDS
PUBLIC	??H?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<Opinion,std::allocator<Opinion> >::operator+
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??H?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??H?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QBE?AV01@H@Z PROC ; std::_Vector_iterator<Opinion,std::allocator<Opinion> >::operator+, COMDAT
; _this$ = ecx

; 381  : 		_Myt _Tmp = *this;
; 382  : 		return (_Tmp += _Off);

	mov	edx, DWORD PTR __Off$[esp-4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	imul	edx, 84					; 00000054H
	add	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 383  : 		}

	ret	8
??H?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QBE?AV01@H@Z ENDP ; std::_Vector_iterator<Opinion,std::allocator<Opinion> >::operator+
_TEXT	ENDS
PUBLIC	?_Make_iter@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QBE?AV?$_Vector_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@V?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@@Z ; std::vector<CvString,std::allocator<CvString> >::_Make_iter
; Function compile flags: /Ogtpy
;	COMDAT ?_Make_iter@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QBE?AV?$_Vector_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@V?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QBE?AV?$_Vector_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@V?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@@Z PROC ; std::vector<CvString,std::allocator<CvString> >::_Make_iter, COMDAT
; _this$ = ecx

; 687  : 		return (iterator(_Where._Myptr));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	ecx, DWORD PTR __Where$[esp-4]
	mov	DWORD PTR [eax], ecx

; 688  : 		}

	ret	8
?_Make_iter@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QBE?AV?$_Vector_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@V?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@@Z ENDP ; std::vector<CvString,std::allocator<CvString> >::_Make_iter
_TEXT	ENDS
PUBLIC	__TI3?AVout_of_range@std@@
PUBLIC	??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ ; `string'
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::erase
PUBLIC	__CTA3?AVout_of_range@std@@
PUBLIC	__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
PUBLIC	??0out_of_range@std@@QAE@ABV01@@Z		; std::out_of_range::out_of_range
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
xdata$x	SEGMENT
__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVout_of_range@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0out_of_range@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT
__CTA3?AVout_of_range@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT
__TI3?AVout_of_range@std@@ DD 00H
	DD	FLAT:??1out_of_range@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVout_of_range@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
CONST	SEGMENT
??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ DB 'invalid '
	DB	'map/set<T> iterator', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z$2
__ehfuncinfo$?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z
_TEXT	SEGMENT
__Erasednode$ = -84					; size = 4
$T264685 = -80						; size = 28
$T264684 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::erase, COMDAT
; _this$ = ecx

; 764  : 		{	// erase element at _Where

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z
	push	eax
	mov	DWORD PTR fs:0, esp

; 765  : 
; 766  :  #if _HAS_ITERATOR_DEBUGGING
; 767  : 		if (_Where._Mycont != this || _Isnil(_Where._Mynode()))
; 768  : 			_DEBUG_ERROR("map/set erase iterator outside range");
; 769  : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 770  : 		++_Where;	// save successor iterator for return
; 771  : 		_Orphan_ptr(*this, _Erasednode);
; 772  : 
; 773  :  #else /* _HAS_ITERATOR_DEBUGGING */
; 774  : 		if (_Isnil(_Where._Mynode()))

	mov	eax, DWORD PTR __Where$[esp+8]
	sub	esp, 72					; 00000048H
	cmp	BYTE PTR [eax+21], 0
	push	ebp
	mov	ebp, ecx
	je	SHORT $LN40@erase

; 775  : 			_THROW(out_of_range, "invalid map/set<T> iterator");

	push	OFFSET ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
	lea	ecx, DWORD PTR $T264685[esp+92]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T264684[esp+88]
	mov	DWORD PTR __$EHRec$[esp+96], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	lea	eax, DWORD PTR $T264685[esp+88]
	push	eax
	lea	ecx, DWORD PTR $T264684[esp+104]
	mov	BYTE PTR __$EHRec$[esp+100], 1
	mov	DWORD PTR $T264684[esp+92], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	push	OFFSET __TI3?AVout_of_range@std@@
	lea	ecx, DWORD PTR $T264684[esp+92]
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+104], 0
	mov	DWORD PTR $T264684[esp+96], OFFSET ??_7out_of_range@std@@6B@
	call	__CxxThrowException@8
$LN293@erase:
$LN40@erase:
	push	ebx
	push	esi

; 776  : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase

	mov	ebx, eax
	push	edi

; 777  : 		++_Where;	// save successor iterator for return

	lea	ecx, DWORD PTR __Where$[esp+96]
	mov	DWORD PTR __Erasednode$[esp+100], ebx
	call	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::_Inc

; 778  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 779  : 
; 780  : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 781  : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 782  : 		_Nodeptr _Pnode = _Erasednode;
; 783  : 
; 784  : 		if (_Isnil(_Left(_Pnode)))

	mov	ecx, DWORD PTR [ebx]
	cmp	BYTE PTR [ecx+21], 0
	je	SHORT $LN39@erase

; 785  : 			_Fixnode = _Right(_Pnode);	// must stitch up right subtree

	mov	edi, DWORD PTR [ebx+8]
	jmp	SHORT $LN288@erase
$LN39@erase:

; 786  : 		else if (_Isnil(_Right(_Pnode)))

	mov	edx, DWORD PTR [ebx+8]
	cmp	BYTE PTR [edx+21], 0
	je	SHORT $LN37@erase

; 787  : 			_Fixnode = _Left(_Pnode);	// must stitch up left subtree

	mov	edi, ecx

; 788  : 		else

	jmp	SHORT $LN288@erase
$LN37@erase:

; 789  : 			{	// two subtrees, must lift successor node to replace erased
; 790  : 			_Pnode = _Where._Mynode();	// _Pnode is successor node

	mov	eax, DWORD PTR __Where$[esp+96]

; 791  : 			_Fixnode = _Right(_Pnode);	// _Fixnode is its only subtree

	mov	edi, DWORD PTR [eax+8]
	lea	edx, DWORD PTR [eax+8]

; 792  : 			}
; 793  : 
; 794  : 		if (_Pnode == _Erasednode)

	cmp	eax, ebx
	jne	SHORT $LN35@erase
$LN288@erase:

; 795  : 			{	// at most one subtree, relink it
; 796  : 			_Fixnodeparent = _Parent(_Erasednode);
; 797  : 			if (!_Isnil(_Fixnode))

	cmp	BYTE PTR [edi+21], 0
	mov	esi, DWORD PTR [ebx+4]
	jne	SHORT $LN34@erase

; 798  : 				_Parent(_Fixnode) = _Fixnodeparent;	// link up

	mov	DWORD PTR [edi+4], esi
$LN34@erase:

; 799  : 
; 800  : 			if (_Root() == _Erasednode)

	mov	eax, DWORD PTR [ebp+4]
	cmp	DWORD PTR [eax+4], ebx
	jne	SHORT $LN33@erase

; 801  : 				_Root() = _Fixnode;	// link down from root

	mov	DWORD PTR [eax+4], edi
	jmp	SHORT $LN30@erase
$LN33@erase:

; 802  : 			else if (_Left(_Fixnodeparent) == _Erasednode)

	cmp	DWORD PTR [esi], ebx
	jne	SHORT $LN31@erase

; 803  : 				_Left(_Fixnodeparent) = _Fixnode;	// link down to left

	mov	DWORD PTR [esi], edi

; 804  : 			else

	jmp	SHORT $LN30@erase
$LN31@erase:

; 805  : 				_Right(_Fixnodeparent) = _Fixnode;	// link down to right

	mov	DWORD PTR [esi+8], edi
$LN30@erase:

; 806  : 
; 807  : 			if (_Lmost() == _Erasednode)

	mov	ebx, DWORD PTR [ebp+4]
	mov	eax, DWORD PTR [ebx]
	cmp	eax, DWORD PTR __Erasednode$[esp+100]
	jne	SHORT $LN29@erase

; 808  : 				_Lmost() = _Isnil(_Fixnode)
; 809  : 					? _Fixnodeparent	// smallest is parent of erased node
; 810  : 					: _Min(_Fixnode);	// smallest in relinked subtree

	cmp	BYTE PTR [edi+21], 0
	je	SHORT $LN43@erase
	mov	eax, esi
	jmp	SHORT $LN44@erase
$LN43@erase:
	push	edi
	call	?_Min@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Min
	add	esp, 4
$LN44@erase:
	mov	DWORD PTR [ebx], eax
$LN29@erase:

; 811  : 
; 812  : 			if (_Rmost() == _Erasednode)

	mov	ebx, DWORD PTR [ebp+4]
	mov	ecx, DWORD PTR __Erasednode$[esp+100]
	cmp	DWORD PTR [ebx+8], ecx
	jne	SHORT $LN173@erase

; 813  : 				_Rmost() = _Isnil(_Fixnode)
; 814  : 					? _Fixnodeparent	// largest is parent of erased node
; 815  : 					: _Max(_Fixnode);	// largest in relinked subtree

	cmp	BYTE PTR [edi+21], 0
	je	SHORT $LN45@erase
	mov	eax, esi
	mov	DWORD PTR [ebx+8], eax

; 816  : 			}
; 817  : 		else

	jmp	SHORT $LN173@erase
$LN45@erase:

; 813  : 				_Rmost() = _Isnil(_Fixnode)
; 814  : 					? _Fixnodeparent	// largest is parent of erased node
; 815  : 					: _Max(_Fixnode);	// largest in relinked subtree

	push	edi
	call	?_Max@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Max
	add	esp, 4
	mov	DWORD PTR [ebx+8], eax

; 816  : 			}
; 817  : 		else

	jmp	SHORT $LN173@erase
$LN35@erase:

; 818  : 			{	// erased has two subtrees, _Pnode is successor to erased
; 819  : 			_Parent(_Left(_Erasednode)) = _Pnode;	// link left up

	mov	DWORD PTR [ecx+4], eax

; 820  : 			_Left(_Pnode) = _Left(_Erasednode);	// link successor down

	mov	ecx, DWORD PTR [ebx]
	mov	DWORD PTR [eax], ecx

; 821  : 
; 822  : 			if (_Pnode == _Right(_Erasednode))

	cmp	eax, DWORD PTR [ebx+8]
	jne	SHORT $LN26@erase

; 823  : 				_Fixnodeparent = _Pnode;	// successor is next to erased

	mov	esi, eax

; 824  : 			else

	jmp	SHORT $LN25@erase
$LN26@erase:

; 825  : 				{	// successor further down, link in place of erased
; 826  : 				_Fixnodeparent = _Parent(_Pnode);	// parent is successor's
; 827  : 				if (!_Isnil(_Fixnode))

	cmp	BYTE PTR [edi+21], 0
	mov	esi, DWORD PTR [eax+4]
	jne	SHORT $LN24@erase

; 828  : 					_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

	mov	DWORD PTR [edi+4], esi
$LN24@erase:

; 829  : 				_Left(_Fixnodeparent) = _Fixnode;	// link fix down

	mov	DWORD PTR [esi], edi

; 830  : 				_Right(_Pnode) = _Right(_Erasednode);	// link successor down

	mov	ecx, DWORD PTR [ebx+8]
	mov	DWORD PTR [edx], ecx

; 831  : 				_Parent(_Right(_Erasednode)) = _Pnode;	// link right up

	mov	edx, DWORD PTR [ebx+8]
	mov	DWORD PTR [edx+4], eax
$LN25@erase:

; 832  : 				}
; 833  : 
; 834  : 			if (_Root() == _Erasednode)

	mov	ecx, DWORD PTR [ebp+4]
	cmp	DWORD PTR [ecx+4], ebx
	jne	SHORT $LN23@erase

; 835  : 				_Root() = _Pnode;	// link down from root

	mov	DWORD PTR [ecx+4], eax
	jmp	SHORT $LN20@erase
$LN23@erase:

; 836  : 			else if (_Left(_Parent(_Erasednode)) == _Erasednode)

	mov	ecx, DWORD PTR [ebx+4]
	cmp	DWORD PTR [ecx], ebx
	jne	SHORT $LN21@erase

; 837  : 				_Left(_Parent(_Erasednode)) = _Pnode;	// link down to left

	mov	DWORD PTR [ecx], eax

; 838  : 			else

	jmp	SHORT $LN20@erase
$LN21@erase:

; 839  : 				_Right(_Parent(_Erasednode)) = _Pnode;	// link down to right

	mov	DWORD PTR [ecx+8], eax
$LN20@erase:

; 840  : 
; 841  : 			_Parent(_Pnode) = _Parent(_Erasednode);	// link successor up

	mov	ecx, DWORD PTR [ebx+4]
	mov	DWORD PTR [eax+4], ecx

; 842  : 			_STD swap(_Color(_Pnode), _Color(_Erasednode));	// recolor it

	lea	ecx, DWORD PTR [ebx+20]
	add	eax, 20					; 00000014H
	cmp	eax, ecx
	je	SHORT $LN173@erase
	mov	bl, BYTE PTR [ecx]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR [eax], bl
	mov	BYTE PTR [ecx], dl
$LN173@erase:

; 843  : 			}
; 844  : 
; 845  : 		if (_Color(_Erasednode) == _Black)

	mov	edx, DWORD PTR __Erasednode$[esp+100]
	mov	bl, 1
	cmp	BYTE PTR [edx+20], bl
	jne	$LN19@erase

; 846  : 			{	// erasing black link, must recolor/rebalance tree
; 847  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 848  : 				_Fixnodeparent = _Parent(_Fixnode))

	mov	eax, DWORD PTR [ebp+4]
	cmp	edi, DWORD PTR [eax+4]
	je	$LN16@erase
	npad	6
$LL18@erase:
	cmp	BYTE PTR [edi+20], bl
	jne	$LN16@erase

; 849  : 				if (_Fixnode == _Left(_Fixnodeparent))

	mov	eax, DWORD PTR [esi]
	cmp	edi, eax
	jne	SHORT $LN15@erase

; 850  : 					{	// fixup left subtree
; 851  : 					_Pnode = _Right(_Fixnodeparent);

	mov	eax, DWORD PTR [esi+8]

; 852  : 					if (_Color(_Pnode) == _Red)

	cmp	BYTE PTR [eax+20], 0
	jne	SHORT $LN14@erase

; 853  : 						{	// rotate red up from right subtree
; 854  : 						_Color(_Pnode) = _Black;

	mov	BYTE PTR [eax+20], bl

; 855  : 						_Color(_Fixnodeparent) = _Red;
; 856  : 						_Lrotate(_Fixnodeparent);

	push	esi
	mov	ecx, ebp
	mov	BYTE PTR [esi+20], 0
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Lrotate

; 857  : 						_Pnode = _Right(_Fixnodeparent);

	mov	eax, DWORD PTR [esi+8]
$LN14@erase:

; 858  : 						}
; 859  : 
; 860  : 					if (_Isnil(_Pnode))

	cmp	BYTE PTR [eax+21], 0

; 861  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 862  : 					else if (_Color(_Left(_Pnode)) == _Black

	jne	SHORT $LN291@erase

; 863  : 						&& _Color(_Right(_Pnode)) == _Black)

	mov	ecx, DWORD PTR [eax]
	cmp	BYTE PTR [ecx+20], bl
	jne	SHORT $LN11@erase
	mov	edx, DWORD PTR [eax+8]
	cmp	BYTE PTR [edx+20], bl
	je	SHORT $LN292@erase
$LN11@erase:

; 864  : 						{	// redden right subtree with black children
; 865  : 						_Color(_Pnode) = _Red;
; 866  : 						_Fixnode = _Fixnodeparent;
; 867  : 						}
; 868  : 					else
; 869  : 						{	// must rearrange right subtree
; 870  : 						if (_Color(_Right(_Pnode)) == _Black)

	mov	ecx, DWORD PTR [eax+8]
	cmp	BYTE PTR [ecx+20], bl
	jne	SHORT $LN9@erase

; 871  : 							{	// rotate red up from left sub-subtree
; 872  : 							_Color(_Left(_Pnode)) = _Black;

	mov	edx, DWORD PTR [eax]
	mov	BYTE PTR [edx+20], bl

; 873  : 							_Color(_Pnode) = _Red;
; 874  : 							_Rrotate(_Pnode);

	push	eax
	mov	ecx, ebp
	mov	BYTE PTR [eax+20], 0
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Rrotate

; 875  : 							_Pnode = _Right(_Fixnodeparent);

	mov	eax, DWORD PTR [esi+8]
$LN9@erase:

; 876  : 							}
; 877  : 
; 878  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

	mov	cl, BYTE PTR [esi+20]
	mov	BYTE PTR [eax+20], cl

; 879  : 						_Color(_Fixnodeparent) = _Black;

	mov	BYTE PTR [esi+20], bl

; 880  : 						_Color(_Right(_Pnode)) = _Black;

	mov	edx, DWORD PTR [eax+8]

; 881  : 						_Lrotate(_Fixnodeparent);

	push	esi
	mov	ecx, ebp
	mov	BYTE PTR [edx+20], bl
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Lrotate

; 882  : 						break;	// tree now recolored/rebalanced

	jmp	SHORT $LN16@erase
$LN15@erase:

; 883  : 						}
; 884  : 					}
; 885  : 				else
; 886  : 					{	// fixup right subtree
; 887  : 					_Pnode = _Left(_Fixnodeparent);
; 888  : 					if (_Color(_Pnode) == _Red)

	cmp	BYTE PTR [eax+20], 0
	jne	SHORT $LN7@erase

; 889  : 						{	// rotate red up from left subtree
; 890  : 						_Color(_Pnode) = _Black;

	mov	BYTE PTR [eax+20], bl

; 891  : 						_Color(_Fixnodeparent) = _Red;
; 892  : 						_Rrotate(_Fixnodeparent);

	push	esi
	mov	ecx, ebp
	mov	BYTE PTR [esi+20], 0
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Rrotate

; 893  : 						_Pnode = _Left(_Fixnodeparent);

	mov	eax, DWORD PTR [esi]
$LN7@erase:

; 894  : 						}
; 895  : 					if (_Isnil(_Pnode))

	cmp	BYTE PTR [eax+21], 0

; 896  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 897  : 					else if (_Color(_Right(_Pnode)) == _Black

	jne	SHORT $LN291@erase

; 898  : 						&& _Color(_Left(_Pnode)) == _Black)

	mov	ecx, DWORD PTR [eax+8]
	cmp	BYTE PTR [ecx+20], bl
	jne	SHORT $LN4@erase
	mov	edx, DWORD PTR [eax]
	cmp	BYTE PTR [edx+20], bl
	jne	SHORT $LN4@erase
$LN292@erase:

; 899  : 						{	// redden left subtree with black children
; 900  : 						_Color(_Pnode) = _Red;

	mov	BYTE PTR [eax+20], 0
$LN291@erase:

; 846  : 			{	// erasing black link, must recolor/rebalance tree
; 847  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 848  : 				_Fixnodeparent = _Parent(_Fixnode))

	mov	eax, DWORD PTR [ebp+4]

; 901  : 						_Fixnode = _Fixnodeparent;

	mov	edi, esi
	mov	esi, DWORD PTR [esi+4]
	cmp	edi, DWORD PTR [eax+4]
	jne	$LL18@erase

; 846  : 			{	// erasing black link, must recolor/rebalance tree
; 847  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 848  : 				_Fixnodeparent = _Parent(_Fixnode))

	jmp	SHORT $LN16@erase
$LN4@erase:

; 902  : 						}
; 903  : 					else
; 904  : 						{	// must rearrange left subtree
; 905  : 						if (_Color(_Left(_Pnode)) == _Black)

	mov	ecx, DWORD PTR [eax]
	cmp	BYTE PTR [ecx+20], bl
	jne	SHORT $LN2@erase

; 906  : 							{	// rotate red up from right sub-subtree
; 907  : 							_Color(_Right(_Pnode)) = _Black;

	mov	edx, DWORD PTR [eax+8]
	mov	BYTE PTR [edx+20], bl

; 908  : 							_Color(_Pnode) = _Red;
; 909  : 							_Lrotate(_Pnode);

	push	eax
	mov	ecx, ebp
	mov	BYTE PTR [eax+20], 0
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Lrotate

; 910  : 							_Pnode = _Left(_Fixnodeparent);

	mov	eax, DWORD PTR [esi]
$LN2@erase:

; 911  : 							}
; 912  : 
; 913  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

	mov	cl, BYTE PTR [esi+20]
	mov	BYTE PTR [eax+20], cl

; 914  : 						_Color(_Fixnodeparent) = _Black;

	mov	BYTE PTR [esi+20], bl

; 915  : 						_Color(_Left(_Pnode)) = _Black;

	mov	edx, DWORD PTR [eax]

; 916  : 						_Rrotate(_Fixnodeparent);

	push	esi
	mov	ecx, ebp
	mov	BYTE PTR [edx+20], bl
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Rrotate
$LN16@erase:

; 917  : 						break;	// tree now recolored/rebalanced
; 918  : 						}
; 919  : 					}
; 920  : 
; 921  : 			_Color(_Fixnode) = _Black;	// ensure stopping node is black

	mov	BYTE PTR [edi+20], bl
$LN19@erase:

; 922  : 			}
; 923  : 
; 924  : 		this->_Alnod.destroy(_Erasednode);	// destroy, free erased node
; 925  : 		this->_Alnod.deallocate(_Erasednode, 1);

	mov	eax, DWORD PTR __Erasednode$[esp+100]
	push	eax
	call	??3@YAXPAX@Z				; operator delete

; 926  : 
; 927  : 		if (0 < _Mysize)

	mov	eax, DWORD PTR [ebp+8]
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	test	eax, eax
	jbe	SHORT $LN1@erase

; 928  : 			--_Mysize;

	dec	eax
	mov	DWORD PTR [ebp+8], eax
$LN1@erase:

; 929  : 
; 930  : 		return (_Make_iter(_Where));	// return successor iterator

	mov	ecx, DWORD PTR __Where$[esp+84]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+84]
	mov	DWORD PTR [eax], ecx

; 931  : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+88]
	pop	ebp
	mov	DWORD PTR fs:0, ecx
	add	esp, 84					; 00000054H
	ret	8
$LN290@erase:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z$0:
	lea	ecx, DWORD PTR $T264685[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z$2:
	lea	ecx, DWORD PTR $T264684[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z:
	mov	eax, OFFSET __ehfuncinfo$?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::erase
; Function compile flags: /Ogtpy
;	COMDAT ??0out_of_range@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV01@@Z PROC			; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR ___that$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	??0logic_error@std@@QAE@ABV01@@Z
	mov	DWORD PTR [esi], OFFSET ??_7out_of_range@std@@6B@
	mov	eax, esi
	pop	esi
	ret	4
??0out_of_range@std@@QAE@ABV01@@Z ENDP			; std::out_of_range::out_of_range
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::operator++
; Function compile flags: /Ogtpy
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Econst_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 280  : 			const_iterator _Tmp = *this;

	mov	eax, DWORD PTR [ecx]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[esp]
	mov	DWORD PTR [esi], eax

; 281  : 			++*this;

	call	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::_Inc

; 282  : 			return (_Tmp);

	mov	eax, esi
	pop	esi

; 283  : 			}

	ret	8
??Econst_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Erase
; Function compile flags: /Ogtpy
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 1166 : 		{	// free entire subtree, recursively

	push	ebx
	push	esi
	push	edi

; 1167 : 		for (_Nodeptr _Pnode = _Rootnode; !_Isnil(_Pnode); _Rootnode = _Pnode)

	mov	edi, DWORD PTR __Rootnode$[esp+8]
	cmp	BYTE PTR [edi+21], 0
	mov	ebx, ecx
	mov	esi, edi
	jne	SHORT $LN1@Erase
$LL3@Erase:

; 1168 : 			{	// free subtrees, then node
; 1169 : 			_Erase(_Right(_Pnode));

	mov	eax, DWORD PTR [esi+8]
	push	eax
	mov	ecx, ebx
	call	?_Erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Erase

; 1170 : 			_Pnode = _Left(_Pnode);

	mov	esi, DWORD PTR [esi]

; 1171 : 			this->_Alnod.destroy(_Rootnode);	// destroy, free erased node
; 1172 : 			this->_Alnod.deallocate(_Rootnode, 1);

	push	edi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	cmp	BYTE PTR [esi+21], 0
	mov	edi, esi
	je	SHORT $LL3@Erase
$LN1@Erase:
	pop	edi
	pop	esi
	pop	ebx

; 1173 : 			}
; 1174 : 		}

	ret	4
?_Erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Erase
_TEXT	ENDS
PUBLIC	?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvluamethodwrapper.h
;	COMDAT ?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXXZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXXZ@Z PROC ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod, COMDAT

; 222  : {

	push	ebx
	push	ebp
	push	esi

; 223  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@BasicLuaMe@73
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@BasicLuaMe@73
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@BasicLuaMe@73
	xor	bl, bl
$LN5@BasicLuaMe@73:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@BasicLuaMe@73
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@BasicLuaMe@73:

; 224  : 	(pkType->*func)();

	mov	ecx, edi
	call	DWORD PTR _func$[esp+12]
	pop	edi
	pop	esi
	pop	ebp

; 225  : 	return 0;

	xor	eax, eax
	pop	ebx

; 226  : }

	ret	0
?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod
_TEXT	ENDS
PUBLIC	??$unchecked_copy@PAVCvString@@PAV1@@stdext@@YAPAVCvString@@PAV1@00@Z ; stdext::unchecked_copy<CvString *,CvString *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$unchecked_copy@PAVCvString@@PAV1@@stdext@@YAPAVCvString@@PAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$unchecked_copy@PAVCvString@@PAV1@@stdext@@YAPAVCvString@@PAV1@00@Z PROC ; stdext::unchecked_copy<CvString *,CvString *>, COMDAT

; 3604 : 	{	// copy [_First, _Last) to [_Dest, ...)

	push	ebx

; 3605 : 		return (_STD _Copy_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3606 : 			_STD _Iter_random(_First, _Dest), _STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	ebx, DWORD PTR __Last$[esp]
	push	esi
	mov	esi, DWORD PTR __First$[esp+4]
	push	edi
	mov	edi, DWORD PTR __Dest$[esp+8]
	cmp	esi, ebx
	je	SHORT $LN16@unchecked_@2
$LL9@unchecked_@2:
	push	esi
	mov	ecx, edi
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	add	esi, 28					; 0000001cH
	add	edi, 28					; 0000001cH
	cmp	esi, ebx
	jne	SHORT $LL9@unchecked_@2
$LN16@unchecked_@2:
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx

; 3607 : 	}

	ret	0
??$unchecked_copy@PAVCvString@@PAV1@@stdext@@YAPAVCvString@@PAV1@00@Z ENDP ; stdext::unchecked_copy<CvString *,CvString *>
_TEXT	ENDS
PUBLIC	??$fill@PAUOpinion@@U1@@std@@YAXPAUOpinion@@0ABU1@@Z ; std::fill<Opinion *,Opinion>
; Function compile flags: /Ogtpy
;	COMDAT ??$fill@PAUOpinion@@U1@@std@@YAXPAUOpinion@@0ABU1@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$fill@PAUOpinion@@U1@@std@@YAXPAUOpinion@@0ABU1@@Z PROC ; std::fill<Opinion *,Opinion>, COMDAT

; 3187 : 	_Fill(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Val);

	jmp	??$_Fill@PAUOpinion@@U1@@std@@YAXPAUOpinion@@0ABU1@@Z ; std::_Fill<Opinion *,Opinion>
??$fill@PAUOpinion@@U1@@std@@YAXPAUOpinion@@0ABU1@@Z ENDP ; std::fill<Opinion *,Opinion>
_TEXT	ENDS
PUBLIC	??$_Unchecked_move_backward@PAUOpinion@@PAU1@@stdext@@YAPAUOpinion@@PAU1@00@Z ; stdext::_Unchecked_move_backward<Opinion *,Opinion *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Unchecked_move_backward@PAUOpinion@@PAU1@@stdext@@YAPAUOpinion@@PAU1@00@Z
_TEXT	SEGMENT
$T265207 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$265210 = 16					; size = 1
$T265189 = 16						; size = 1
__Dest$ = 16						; size = 4
??$_Unchecked_move_backward@PAUOpinion@@PAU1@@stdext@@YAPAUOpinion@@PAU1@00@Z PROC ; stdext::_Unchecked_move_backward<Opinion *,Opinion *>, COMDAT

; 3694 : 	{	// move [_First, _Last) backwards to [..., _Dest)

	push	ecx

; 3695 : 		return (_STD _Move_backward_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3696 : 			_STD _Iter_random(_First, _Dest), _STD _Move_cat(_Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Cat$265210[esp]
	mov	edx, DWORD PTR $T265189[esp]
	mov	BYTE PTR $T265207[esp+4], 0
	mov	eax, DWORD PTR $T265207[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Copy_backward_opt@PAUOpinion@@PAU1@Urandom_access_iterator_tag@std@@@std@@YAPAUOpinion@@PAU1@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<Opinion *,Opinion *,std::random_access_iterator_tag>

; 3697 : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$_Unchecked_move_backward@PAUOpinion@@PAU1@@stdext@@YAPAUOpinion@@PAU1@00@Z ENDP ; stdext::_Unchecked_move_backward<Opinion *,Opinion *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@W4PolicyTypes@@@std@@@std@@YAXPAW4PolicyTypes@@0AAV?$allocator@W4PolicyTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<enum PolicyTypes> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@W4PolicyTypes@@@std@@@std@@YAXPAW4PolicyTypes@@0AAV?$allocator@W4PolicyTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@W4PolicyTypes@@@std@@@std@@YAXPAW4PolicyTypes@@0AAV?$allocator@W4PolicyTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<enum PolicyTypes> >, COMDAT

; 233  : 	for (; _First != _Last; ++_First)
; 234  : 		_Al.destroy(_First);
; 235  : 	}

	ret	0
??$_Destroy_range@V?$allocator@W4PolicyTypes@@@std@@@std@@YAXPAW4PolicyTypes@@0AAV?$allocator@W4PolicyTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<enum PolicyTypes> >
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@VCvString@@@std@@QAEXPAVCvString@@@Z ; std::allocator<CvString>::destroy
; Function compile flags: /Ogtpy
;	COMDAT ?destroy@?$allocator@VCvString@@@std@@QAEXPAVCvString@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@VCvString@@@std@@QAEXPAVCvString@@@Z PROC ; std::allocator<CvString>::destroy, COMDAT
; _this$ = ecx

; 160  : 		_Destroy(_Ptr);

	mov	ecx, DWORD PTR __Ptr$[esp-4]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 161  : 		}

	ret	4
?destroy@?$allocator@VCvString@@@std@@QAEXPAVCvString@@@Z ENDP ; std::allocator<CvString>::destroy
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@UOpinion@@@std@@QAEXPAUOpinion@@@Z ; std::allocator<Opinion>::destroy
; Function compile flags: /Ogtpy
;	COMDAT ?destroy@?$allocator@UOpinion@@@std@@QAEXPAUOpinion@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@UOpinion@@@std@@QAEXPAUOpinion@@@Z PROC ; std::allocator<Opinion>::destroy, COMDAT
; _this$ = ecx

; 160  : 		_Destroy(_Ptr);

	mov	ecx, DWORD PTR __Ptr$[esp-4]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 161  : 		}

	ret	4
?destroy@?$allocator@UOpinion@@@std@@QAEXPAUOpinion@@@Z ENDP ; std::allocator<Opinion>::destroy
_TEXT	ENDS
PUBLIC	??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ	; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ PROC		; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>, COMDAT
; _this$ = ecx

; 545  : 		{	// destroy the object

	push	esi
	push	edi
	mov	edi, ecx

; 546  : 		if (_Buf._Begin != 0)

	mov	esi, DWORD PTR [edi]
	test	esi, esi
	je	SHORT $LN15@Temp_itera

; 547  : 			{	// destroy any constructed elements in buffer
; 548  : 			for (_Pty _Next = _Buf._Begin;
; 549  : 				_Next != _Buf._Hiwater; ++_Next)

	cmp	esi, DWORD PTR [edi+8]
	je	SHORT $LN1@Temp_itera
	push	ebx
	mov	ebx, DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LL3@Temp_itera:

; 550  : 				_Destroy(&*_Next);

	mov	ecx, esi
	call	ebx
	add	esi, 84					; 00000054H
	cmp	esi, DWORD PTR [edi+8]
	jne	SHORT $LL3@Temp_itera
	pop	ebx
$LN1@Temp_itera:

; 551  : 			std::return_temporary_buffer(_Buf._Begin);

	mov	eax, DWORD PTR [edi]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN15@Temp_itera:
	pop	edi
	pop	esi

; 552  : 			}
; 553  : 		}

	ret	0
??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ ENDP		; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>
_TEXT	ENDS
PUBLIC	??$_Distance@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0AAH@Z ; std::_Distance<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Distance@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0AAH@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Off$ = 16						; size = 4
??$_Distance@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0AAH@Z PROC ; std::_Distance<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int>, COMDAT

; 1893 : 	_Distance2(_First, _Last, _Off, _Iter_cat(_First));

	mov	ecx, DWORD PTR __Last$[esp-4]
	sub	ecx, DWORD PTR __First$[esp-4]
	mov	eax, 818089009				; 30c30c31H
	imul	ecx
	mov	eax, DWORD PTR __Off$[esp-4]
	sar	edx, 4
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	add	DWORD PTR [eax], ecx

; 1894 : 	}

	ret	0
??$_Distance@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0AAH@Z ENDP ; std::_Distance<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int>
_TEXT	ENDS
PUBLIC	?construct@?$allocator@VCvString@@@std@@QAEXPAVCvString@@ABV3@@Z ; std::allocator<CvString>::construct
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvbuildingclasses.h
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@VCvString@@@std@@QAEXPAVCvString@@ABV3@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@VCvString@@@std@@QAEXPAVCvString@@ABV3@@Z$0
__ehfuncinfo$?construct@?$allocator@VCvString@@@std@@QAEXPAVCvString@@ABV3@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@VCvString@@@std@@QAEXPAVCvString@@ABV3@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ?construct@?$allocator@VCvString@@@std@@QAEXPAVCvString@@ABV3@@Z
_TEXT	SEGMENT
$T265334 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Vptr$265342 = 8					; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@VCvString@@@std@@QAEXPAVCvString@@ABV3@@Z PROC ; std::allocator<CvString>::construct, COMDAT
; _this$ = ecx

; 154  : 		{	// construct object at _Ptr with value _Val

	push	-1
	push	__ehhandler$?construct@?$allocator@VCvString@@@std@@QAEXPAVCvString@@ABV3@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx

; 155  : 		_Construct(_Ptr, _Val);

	mov	ecx, DWORD PTR __Ptr$[esp+12]
	mov	DWORD PTR __Vptr$265342[esp+12], ecx
	mov	DWORD PTR $T265334[esp+16], ecx
	mov	DWORD PTR __$EHRec$[esp+24], 0
	test	ecx, ecx
	je	SHORT $LN5@construct
	mov	eax, DWORD PTR __Val$[esp+12]
	push	eax
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
$LN5@construct:

; 156  : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@VCvString@@@std@@QAEXPAVCvString@@ABV3@@Z$0:
	mov	eax, DWORD PTR __Vptr$265342[ebp-4]
	push	eax
	mov	ecx, DWORD PTR $T265334[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?construct@?$allocator@VCvString@@@std@@QAEXPAVCvString@@ABV3@@Z:
	mov	eax, OFFSET __ehfuncinfo$?construct@?$allocator@VCvString@@@std@@QAEXPAVCvString@@ABV3@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@VCvString@@@std@@QAEXPAVCvString@@ABV3@@Z ENDP ; std::allocator<CvString>::construct
PUBLIC	?_Maxlen@?$_Temp_iterator@UOpinion@@@std@@QAEHXZ ; std::_Temp_iterator<Opinion>::_Maxlen
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ?_Maxlen@?$_Temp_iterator@UOpinion@@@std@@QAEHXZ
_TEXT	SEGMENT
__Pair$239642 = -8					; size = 8
?_Maxlen@?$_Temp_iterator@UOpinion@@@std@@QAEHXZ PROC	; std::_Temp_iterator<Opinion>::_Maxlen, COMDAT
; _this$ = ecx

; 607  : 		{	// return size of buffer

	sub	esp, 8
	push	esi
	mov	esi, ecx

; 608  : 		if (_Pbuf->_Begin == 0 && 0 < _Pbuf->_Size)

	mov	eax, DWORD PTR [esi+16]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN4@Maxlen
	mov	eax, DWORD PTR [eax+12]
	test	eax, eax
	jle	SHORT $LN5@Maxlen

; 609  : 			{	// allocate buffer on first size query
; 610  : 			pair<_Pty, _PDFT> _Pair =
; 611  : 				std::get_temporary_buffer<_Ty>(_Pbuf->_Size);

	push	eax
	lea	eax, DWORD PTR __Pair$239642[esp+16]
	push	eax
	call	??$get_temporary_buffer@UOpinion@@@std@@YA?AU?$pair@PAUOpinion@@H@0@H@Z ; std::get_temporary_buffer<Opinion>

; 612  : 
; 613  : 			_Pbuf->_Begin = _Pair.first;

	mov	ecx, DWORD PTR [esi+16]
	mov	eax, DWORD PTR __Pair$239642[esp+20]
	mov	DWORD PTR [ecx], eax

; 614  : 			_Pbuf->_Current = _Pair.first;

	mov	edx, DWORD PTR [esi+16]
	mov	DWORD PTR [edx+4], eax

; 615  : 			_Pbuf->_Hiwater = _Pair.first;

	mov	ecx, DWORD PTR [esi+16]
	mov	DWORD PTR [ecx+8], eax

; 616  : 			_Pbuf->_Size = _Pair.second;

	mov	edx, DWORD PTR [esi+16]
	mov	eax, DWORD PTR __Pair$239642[esp+24]
	mov	DWORD PTR [edx+12], eax

; 617  : 			}
; 618  : 		return (_Pbuf->_Size);

	mov	ecx, DWORD PTR [esi+16]
	mov	eax, DWORD PTR [ecx+12]
	add	esp, 8
	pop	esi

; 619  : 		}

	add	esp, 8
	ret	0
$LN4@Maxlen:

; 617  : 			}
; 618  : 		return (_Pbuf->_Size);

	mov	edx, eax
	mov	eax, DWORD PTR [edx+12]
	pop	esi

; 619  : 		}

	add	esp, 8
	ret	0
$LN5@Maxlen:

; 617  : 			}
; 618  : 		return (_Pbuf->_Size);

	mov	eax, DWORD PTR [esi+16]
	mov	eax, DWORD PTR [eax+12]
	pop	esi

; 619  : 		}

	add	esp, 8
	ret	0
?_Maxlen@?$_Temp_iterator@UOpinion@@@std@@QAEHXZ ENDP	; std::_Temp_iterator<Opinion>::_Maxlen
_TEXT	ENDS
PUBLIC	??$advance@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@H@std@@YAXAAV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@H@Z ; std::advance<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$advance@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@H@std@@YAXAAV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@H@Z
_TEXT	SEGMENT
__Where$ = 8						; size = 4
__Off$ = 12						; size = 4
??$advance@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@H@std@@YAXAAV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@H@Z PROC ; std::advance<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int>, COMDAT

; 1774 : 	_Advance(_Where, _Off, _Iter_cat(_Where));

	mov	ecx, DWORD PTR __Off$[esp-4]
	mov	eax, DWORD PTR __Where$[esp-4]
	imul	ecx, 84					; 00000054H
	add	DWORD PTR [eax], ecx

; 1775 : 	}

	ret	0
??$advance@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@H@std@@YAXAAV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@H@Z ENDP ; std::advance<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int>
_TEXT	ENDS
PUBLIC	??$_Median@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z ; std::_Median<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$_Median@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z
_TEXT	SEGMENT
tv200 = 8						; size = 4
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
tv203 = 16						; size = 4
__Last$ = 16						; size = 4
??$_Median@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z PROC ; std::_Median<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>, COMDAT

; 3010 : 	if (40 < _Last - _First)

	mov	ecx, DWORD PTR __First$[esp-4]
	push	esi
	mov	esi, DWORD PTR __Last$[esp]
	mov	eax, esi
	sub	eax, ecx
	sar	eax, 3
	cmp	eax, 40					; 00000028H
	jle	SHORT $LN2@Median

; 3011 : 		{	// median of nine
; 3012 : 		size_t _Step = (_Last - _First + 1) / 8;

	inc	eax
	cdq
	push	ebx
	and	edx, 7
	add	eax, edx
	push	ebp
	push	edi
	sar	eax, 3

; 3013 : 		std::_Med3(_First, _First + _Step, _First + 2 * _Step);

	mov	edi, eax
	shl	edi, 4
	lea	ebx, DWORD PTR [eax*8]
	lea	edx, DWORD PTR [edi+ecx]
	lea	eax, DWORD PTR [ebx+ecx]
	push	edx
	push	eax
	push	ecx
	mov	DWORD PTR tv200[esp+24], eax
	call	??$_Med3@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z ; std::_Med3<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>

; 3014 : 		std::_Med3(_Mid - _Step, _Mid, _Mid + _Step);

	mov	ebp, DWORD PTR __Mid$[esp+24]
	lea	eax, DWORD PTR [ebx+ebp]
	push	eax
	mov	ecx, ebp
	sub	ecx, ebx
	push	ebp
	push	ecx
	call	??$_Med3@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z ; std::_Med3<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>

; 3015 : 		std::_Med3(_Last - 2 * _Step, _Last - _Step, _Last);

	mov	eax, esi
	sub	eax, ebx
	push	esi
	push	eax
	sub	esi, edi
	push	esi
	mov	DWORD PTR tv203[esp+48], eax
	call	??$_Med3@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z ; std::_Med3<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>

; 3016 : 		std::_Med3(_First + _Step, _Mid, _Last - _Step);

	mov	edx, DWORD PTR tv203[esp+48]
	mov	eax, DWORD PTR tv200[esp+48]
	push	edx
	push	ebp
	push	eax
	call	??$_Med3@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z ; std::_Med3<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
	add	esp, 48					; 00000030H
	pop	edi
	pop	ebp
	pop	ebx
	pop	esi

; 3020 : 	}

	ret	0
$LN2@Median:

; 3017 : 		}
; 3018 : 	else
; 3019 : 		std::_Med3(_First, _Mid, _Last);

	mov	edx, DWORD PTR __Mid$[esp]
	push	esi
	push	edx
	push	ecx
	call	??$_Med3@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z ; std::_Med3<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
	add	esp, 12					; 0000000cH
	pop	esi

; 3020 : 	}

	ret	0
??$_Median@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z ENDP ; std::_Median<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
_TEXT	ENDS
PUBLIC	??$_Make_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0PAH0@Z ; std::_Make_heap<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,int,CvWeightedVector<CvPlot *,800,1>::WeightedElement>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Make_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0PAH0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
??$_Make_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0PAH0@Z PROC ; std::_Make_heap<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,int,CvWeightedVector<CvPlot *,800,1>::WeightedElement>, COMDAT

; 2164 : 	{	// make nontrivial [_First, _Last) into a heap, using operator<

	push	ebx

; 2165 : 	_Diff _Bottom = _Last - _First;

	mov	ebx, DWORD PTR __Last$[esp]
	push	esi
	push	edi
	mov	edi, DWORD PTR __First$[esp+8]
	sub	ebx, edi
	sar	ebx, 3

; 2166 : 
; 2167 : 	for (_Diff _Hole = _Bottom / 2; 0 < _Hole; )

	mov	eax, ebx
	cdq
	sub	eax, edx
	mov	esi, eax
	sar	esi, 1
	test	esi, esi
	jle	SHORT $LN1@Make_heap
	npad	3
$LL2@Make_heap:

; 2168 : 		{	// reheap top half, bottom to top
; 2169 : 		--_Hole;
; 2170 : 		std::_Adjust_heap(_First, _Hole, _Bottom,
; 2171 : 			_Ty(*(_First + _Hole)));

	mov	ecx, DWORD PTR [edi+esi*8-8]
	sub	esp, 8
	mov	eax, esp
	dec	esi
	push	ebx
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR [edi+esi*8+4]
	push	esi
	push	edi
	mov	DWORD PTR [eax+4], edx
	call	??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HHU12@@Z ; std::_Adjust_heap<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,int,CvWeightedVector<CvPlot *,800,1>::WeightedElement>
	add	esp, 20					; 00000014H
	test	esi, esi
	jg	SHORT $LL2@Make_heap
$LN1@Make_heap:

; 2172 : 		}
; 2173 : 	}

	pop	edi
	pop	esi
	pop	ebx
	ret	0
??$_Make_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0PAH0@Z ENDP ; std::_Make_heap<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,int,CvWeightedVector<CvPlot *,800,1>::WeightedElement>
_TEXT	ENDS
PUBLIC	??$_Insertion_sort1@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z ; std::_Insertion_sort1<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,CvWeightedVector<CvPlot *,800,1>::WeightedElement>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Insertion_sort1@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Insertion_sort1@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z PROC ; std::_Insertion_sort1<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,CvWeightedVector<CvPlot *,800,1>::WeightedElement>, COMDAT

; 2967 : 	{	// insertion sort [_First, _Last), using operator<

	push	ebp

; 2968 : 	if (_First != _Last)

	mov	ebp, DWORD PTR __Last$[esp]
	push	edi
	mov	edi, DWORD PTR __First$[esp+4]
	cmp	edi, ebp
	je	SHORT $LN6@Insertion_

; 2969 : 		for (_BidIt _Next = _First; ++_Next != _Last; )

	lea	edx, DWORD PTR [edi+8]
	cmp	edx, ebp
	je	SHORT $LN6@Insertion_
	push	ebx
	push	esi
$LL7@Insertion_:

; 2970 : 			{	// order next element
; 2971 : 			_BidIt _Next1 = _Next;
; 2972 : 			_Ty _Val = *_Next;

	mov	esi, DWORD PTR [edx+4]

; 2973 : 
; 2974 : 			if (_DEBUG_LT(_Val, *_First))

	cmp	esi, DWORD PTR [edi+4]
	mov	ebx, DWORD PTR [edx]
	mov	ecx, edx
	jle	SHORT $LN5@Insertion_

; 2975 : 				{	// found new earliest element, move to front
; 2976 : 				_STDEXT unchecked_copy_backward(_First, _Next, ++_Next1);

	mov	eax, edx
	cmp	edi, edx
	je	SHORT $LN21@Insertion_
	npad	7
$LL22@Insertion_:
	mov	ecx, DWORD PTR [eax-8]
	sub	eax, 8
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [eax+12], ecx
	cmp	eax, edi
	jne	SHORT $LL22@Insertion_
$LN21@Insertion_:

; 2977 : 				*_First = _Val;

	mov	DWORD PTR [edi], ebx
	mov	DWORD PTR [edi+4], esi

; 2978 : 				}
; 2979 : 			else

	jmp	SHORT $LN4@Insertion_
$LN5@Insertion_:

; 2980 : 				{	// look for insertion point after first
; 2981 : 				for (_BidIt _First1 = _Next1;
; 2982 : 					_DEBUG_LT(_Val, *--_First1);
; 2983 : 					_Next1 = _First1)

	cmp	esi, DWORD PTR [edx-4]
	lea	eax, DWORD PTR [edx-8]
	jle	SHORT $LN1@Insertion_
$LL3@Insertion_:

; 2984 : 					*_Next1 = *_First1;	// move hole down

	mov	ebp, DWORD PTR [eax]
	mov	DWORD PTR [ecx], ebp
	mov	ebp, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], ebp
	mov	ecx, eax
	sub	eax, 8
	cmp	esi, DWORD PTR [eax+4]
	jg	SHORT $LL3@Insertion_

; 2980 : 				{	// look for insertion point after first
; 2981 : 				for (_BidIt _First1 = _Next1;
; 2982 : 					_DEBUG_LT(_Val, *--_First1);
; 2983 : 					_Next1 = _First1)

	mov	ebp, DWORD PTR __Last$[esp+12]
$LN1@Insertion_:

; 2985 : 				*_Next1 = _Val;	// insert element in hole

	mov	DWORD PTR [ecx], ebx
	mov	DWORD PTR [ecx+4], esi
$LN4@Insertion_:
	add	edx, 8
	cmp	edx, ebp
	jne	SHORT $LL7@Insertion_
	pop	esi
	pop	ebx
$LN6@Insertion_:
	pop	edi
	pop	ebp

; 2986 : 				}
; 2987 : 			}
; 2988 : 	}

	ret	0
??$_Insertion_sort1@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z ENDP ; std::_Insertion_sort1<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,CvWeightedVector<CvPlot *,800,1>::WeightedElement>
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<Opinion *,Opinion *,std::allocator<Opinion> >
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	SEGMENT
__catchsym$??$_Uninit_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0
__tryblocktable$??$_Uninit_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$5
__unwindtable$??$_Uninit_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Uninit_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$??$_Uninit_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Uninit_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
xdata$x	ENDS
;	COMDAT ??$_Uninit_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T265483 = -24						; size = 4
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Vptr$265491 = 8					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_copy<Opinion *,Opinion *,std::allocator<Opinion> >, COMDAT

; 124  : 	{	// copy [_First, _Last) to raw _Dest, using _Al, arbitrary type

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi

; 125  : 	_DEBUG_RANGE(_First, _Last);
; 126  : 	_DEBUG_POINTER(_Dest);
; 127  : 	_FwdIt _Next = _Dest;

	mov	esi, DWORD PTR __Dest$[ebp]
	push	edi

; 128  : 
; 129  : 	_TRY_BEGIN

	mov	edi, DWORD PTR __First$[ebp]
	xor	ebx, ebx
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR __Next$[ebp], esi
	mov	DWORD PTR __$EHRec$[ebp+12], ebx
	npad	1
$LL6@Uninit_cop:

; 130  : 	for (; _First != _Last; ++_Dest, ++_First)

	cmp	edi, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_cop

; 131  : 		_Al.construct(_Dest, *_First);

	mov	DWORD PTR __Vptr$265491[ebp], esi
	mov	DWORD PTR $T265483[ebp], esi
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	cmp	esi, ebx
	je	SHORT $LN18@Uninit_cop
	push	edi
	mov	ecx, esi
	call	DWORD PTR __imp_??0String@Localization@@QAE@ABV01@@Z
	mov	eax, DWORD PTR [edi+80]
	mov	DWORD PTR [esi+80], eax
$LN18@Uninit_cop:
	add	esi, 84					; 00000054H
	mov	BYTE PTR __$EHRec$[ebp+12], bl
	mov	DWORD PTR __Dest$[ebp], esi
	add	edi, 84					; 00000054H
	jmp	SHORT $LL6@Uninit_cop
__catch$??$_Uninit_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0:

; 132  : 	_CATCH_ALL
; 133  : 	for (; _Next != _Dest; ++_Next)

	mov	esi, DWORD PTR __Next$[ebp]
	mov	edi, DWORD PTR __Dest$[ebp]
	cmp	esi, edi
	je	SHORT $LN1@Uninit_cop
	mov	ebx, DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LL3@Uninit_cop:

; 134  : 		_Al.destroy(_Next);

	mov	ecx, esi
	call	ebx
	add	esi, 84					; 00000054H
	cmp	esi, edi
	jne	SHORT $LL3@Uninit_cop
$LN1@Uninit_cop:

; 135  : 	_RERAISE;

	xor	ebx, ebx
	push	ebx
	push	ebx
	call	__CxxThrowException@8
$LN42@Uninit_cop:
$LN4@Uninit_cop:

; 136  : 	_CATCH_END
; 137  : 	return (_Dest);
; 138  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	mov	eax, esi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN41@Uninit_cop:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninit_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2:
	mov	eax, DWORD PTR __Vptr$265491[ebp]
	push	eax
	mov	ecx, DWORD PTR $T265483[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Uninit_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z:
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<Opinion *,Opinion *,std::allocator<Opinion> >
PUBLIC	??$unchecked_copy_backward@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@@stdext@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@00@Z ; stdext::unchecked_copy_backward<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$unchecked_copy_backward@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@@stdext@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@00@Z
_TEXT	SEGMENT
$T265537 = -4						; size = 1
__Cat$265542 = 8					; size = 1
$T265539 = 8						; size = 1
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Dest$ = 20						; size = 4
??$unchecked_copy_backward@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@@stdext@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@00@Z PROC ; stdext::unchecked_copy_backward<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> > >, COMDAT

; 3636 : 	{	// copy [_First, _Last) backwards to [..., _Dest)

	push	ecx

; 3637 : 		return (_STD _Copy_backward_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3638 : 			_STD _Iter_random(_First, _Dest), _STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Cat$265542[esp]
	mov	edx, DWORD PTR $T265539[esp]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[esp+4]
	mov	BYTE PTR $T265537[esp+8], 0
	mov	eax, DWORD PTR $T265537[esp+8]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+8]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+12]
	push	edx
	mov	edx, DWORD PTR __First$[esp+16]
	push	eax
	push	ecx
	push	edx
	push	esi
	call	??$_Copy_backward_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@Urandom_access_iterator_tag@2@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::random_access_iterator_tag>
	add	esp, 28					; 0000001cH
	mov	eax, esi
	pop	esi

; 3639 : 	}

	pop	ecx
	ret	0
??$unchecked_copy_backward@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@@stdext@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@00@Z ENDP ; stdext::unchecked_copy_backward<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> > >
_TEXT	ENDS
PUBLIC	??$_Copy_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V10@Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion>,std::forward_iterator_tag>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
xdata$x	SEGMENT
__unwindtable$??$_Copy_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V10@Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Copy_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V10@Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Copy_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V10@Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$??$_Copy_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V10@Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Copy_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V10@Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Copy_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V10@Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	ENDS
;	COMDAT ??$_Copy_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V10@Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T265553 = -24						; size = 4
__Vptr$265631 = -20					; size = 4
$T265623 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Dest$ = 20						; size = 20
___formal$ = 40						; size = 1
___formal$ = 44						; size = 1
___formal$ = 48						; size = 1
??$_Copy_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V10@Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_opt<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion>,std::forward_iterator_tag>, COMDAT

; 2469 : 	{	// copy [_First, _Last) to [_Dest, ...), arbitrary iterators

	push	-1
	push	__ehhandler$??$_Copy_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V10@Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi

; 2470 : 	_DEBUG_RANGE(_First, _Last);
; 2471 : 	for (; _First != _Last; ++_Dest, ++_First)

	xor	ebx, ebx
	push	edi
	mov	DWORD PTR $T265553[esp+36], ebx
	mov	edi, DWORD PTR __First$[esp+32]
	mov	DWORD PTR __$EHRec$[esp+44], 1
	cmp	edi, DWORD PTR __Last$[esp+32]
	je	SHORT $LN1@Copy_opt@4
	push	ebp
	mov	ebp, DWORD PTR __imp_??0String@Localization@@QAE@ABV01@@Z
	npad	6
$LL13@Copy_opt@4:

; 2472 : 		*_Dest = *_First;

	mov	eax, DWORD PTR __Dest$[esp+52]
	mov	esi, DWORD PTR [eax+4]
	cmp	esi, DWORD PTR [eax+8]
	jae	SHORT $LN26@Copy_opt@4
	lea	ecx, DWORD PTR [esi+84]
	mov	DWORD PTR [eax+4], ecx
	push	edi
	mov	ecx, esi
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	edx, DWORD PTR [edi+80]
	mov	DWORD PTR [esi+80], edx
	jmp	SHORT $LN2@Copy_opt@4
$LN26@Copy_opt@4:
	mov	DWORD PTR __Vptr$265631[esp+40], esi
	mov	DWORD PTR $T265623[esp+40], esi
	mov	BYTE PTR __$EHRec$[esp+48], 2
	cmp	esi, ebx
	je	SHORT $LN33@Copy_opt@4
	push	edi
	mov	ecx, esi
	call	ebp
	mov	eax, DWORD PTR [edi+80]
	mov	DWORD PTR [esi+80], eax
	mov	eax, DWORD PTR __Dest$[esp+52]
$LN33@Copy_opt@4:
	add	DWORD PTR [eax+4], 84			; 00000054H
	mov	eax, DWORD PTR __Dest$[esp+52]
	mov	ecx, DWORD PTR [eax+4]
	mov	BYTE PTR __$EHRec$[esp+48], 1
	mov	DWORD PTR [eax+8], ecx
$LN2@Copy_opt@4:
	mov	edi, DWORD PTR __First$[esp+36]
	add	edi, 84					; 00000054H
	mov	DWORD PTR __First$[esp+36], edi
	cmp	edi, DWORD PTR __Last$[esp+36]
	jne	SHORT $LL13@Copy_opt@4
	pop	ebp
$LN1@Copy_opt@4:

; 2473 : 	return (_Dest);

	mov	edi, DWORD PTR ___$ReturnUdt$[esp+32]
	mov	edx, DWORD PTR __Dest$[esp+48]
	mov	DWORD PTR [edi], ebx
	mov	DWORD PTR [edi+4], ebx
	mov	DWORD PTR [edi+8], ebx
	mov	DWORD PTR [edi+12], ebx
	mov	DWORD PTR [edi+16], edx
	mov	esi, DWORD PTR __Dest$[esp+32]
	mov	DWORD PTR $T265553[esp+36], 1
	mov	BYTE PTR __$EHRec$[esp+44], bl
	cmp	esi, ebx
	je	SHORT $LN65@Copy_opt@4
	cmp	esi, DWORD PTR __Dest$[esp+40]
	je	SHORT $LN45@Copy_opt@4
	mov	ebx, DWORD PTR __imp_??1String@Localization@@UAE@XZ
	npad	2
$LL47@Copy_opt@4:
	mov	ecx, esi
	call	ebx
	add	esi, 84					; 00000054H
	cmp	esi, DWORD PTR __Dest$[esp+40]
	jne	SHORT $LL47@Copy_opt@4
	mov	esi, DWORD PTR __Dest$[esp+32]
$LN45@Copy_opt@4:
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN65@Copy_opt@4:

; 2474 : 	}

	mov	ecx, DWORD PTR __$EHRec$[esp+36]
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 24					; 00000018H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Copy_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V10@Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0:
	lea	ecx, DWORD PTR __Dest$[ebp-4]
	jmp	??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ ; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>
__unwindfunclet$??$_Copy_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V10@Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2:
	mov	eax, DWORD PTR __Vptr$265631[ebp]
	push	eax
	mov	ecx, DWORD PTR $T265623[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__unwindfunclet$??$_Copy_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V10@Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$1:
	mov	eax, DWORD PTR $T265553[ebp]
	and	eax, 1
	je	$LN8@Copy_opt@4
	and	DWORD PTR $T265553[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp-4]
	jmp	??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ ; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>
$LN8@Copy_opt@4:
	ret	0
__ehhandler$??$_Copy_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V10@Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z:
	mov	eax, OFFSET __ehfuncinfo$??$_Copy_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V10@Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Copy_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V10@Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_opt<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion>,std::forward_iterator_tag>
PUBLIC	??$_Lower_bound@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinion@@HUOpinionEval@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@0ABUOpinion@@UOpinionEval@@PAH@Z ; std::_Lower_bound<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,Opinion,int,OpinionEval>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$_Lower_bound@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinion@@HUOpinionEval@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@0ABUOpinion@@UOpinionEval@@PAH@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Val$ = 20						; size = 4
__Pred$ = 24						; size = 1
___formal$ = 28						; size = 4
??$_Lower_bound@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinion@@HUOpinionEval@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@0ABUOpinion@@UOpinionEval@@PAH@Z PROC ; std::_Lower_bound<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,Opinion,int,OpinionEval>, COMDAT

; 2289 : 	_DEBUG_POINTER(_Pred);
; 2290 : 	_DEBUG_ORDER_SINGLE_PRED(_First, _Last, _Pred, true);
; 2291 : 	_Diff _Count = 0;
; 2292 : 	_Distance(_First, _Last, _Count);

	mov	ecx, DWORD PTR __Last$[esp-4]
	push	esi
	push	edi
	mov	edi, DWORD PTR __First$[esp+4]
	sub	ecx, edi
	mov	eax, 818089009				; 30c30c31H
	imul	ecx
	sar	edx, 4
	mov	esi, edx
	shr	esi, 31					; 0000001fH
	add	esi, edx

; 2293 : 	for (; 0 < _Count; )

	test	esi, esi
	jle	SHORT $LN38@Lower_boun
	mov	eax, DWORD PTR __Val$[esp+4]
	push	ebx
	mov	ebx, DWORD PTR [eax+80]
	npad	7
$LL4@Lower_boun:

; 2294 : 		{	// divide and conquer, find half that contains answer
; 2295 : 		_Diff _Count2 = _Count / 2;

	mov	eax, esi
	cdq
	sub	eax, edx
	sar	eax, 1

; 2296 : 		_FwdIt _Mid = _First;
; 2297 : 		std::advance(_Mid, _Count2);

	mov	ecx, eax
	imul	ecx, 84					; 00000054H
	add	ecx, edi

; 2298 : 		_DEBUG_ORDER_SINGLE_PRED(_Mid, _Last, _Pred, false);
; 2299 : 
; 2300 : 		if (_DEBUG_LT_PRED(_Pred, *_Mid, _Val))

	cmp	DWORD PTR [ecx+80], ebx
	jge	SHORT $LN2@Lower_boun

; 2301 : 			_First = ++_Mid, _Count -= _Count2 + 1;

	lea	edi, DWORD PTR [ecx+84]
	or	ecx, -1
	sub	ecx, eax
	mov	DWORD PTR __First$[esp+8], edi
	add	esi, ecx

; 2302 : 		else

	jmp	SHORT $LN1@Lower_boun
$LN2@Lower_boun:

; 2303 : 			_Count = _Count2;

	mov	esi, eax
$LN1@Lower_boun:

; 2293 : 	for (; 0 < _Count; )

	test	esi, esi
	jg	SHORT $LL4@Lower_boun
	pop	ebx
$LN38@Lower_boun:

; 2304 : 		}
; 2305 : 	return (_First);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp+4]
	mov	DWORD PTR [eax], edi
	pop	edi
	pop	esi

; 2306 : 	}

	ret	0
??$_Lower_bound@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinion@@HUOpinionEval@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@0ABUOpinion@@UOpinionEval@@PAH@Z ENDP ; std::_Lower_bound<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,Opinion,int,OpinionEval>
_TEXT	ENDS
PUBLIC	??$_Upper_bound@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinion@@HUOpinionEval@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@0ABUOpinion@@UOpinionEval@@PAH@Z ; std::_Upper_bound<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,Opinion,int,OpinionEval>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Upper_bound@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinion@@HUOpinionEval@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@0ABUOpinion@@UOpinionEval@@PAH@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Val$ = 20						; size = 4
__Pred$ = 24						; size = 1
___formal$ = 28						; size = 4
??$_Upper_bound@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinion@@HUOpinionEval@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@0ABUOpinion@@UOpinionEval@@PAH@Z PROC ; std::_Upper_bound<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,Opinion,int,OpinionEval>, COMDAT

; 2360 : 	_DEBUG_POINTER(_Pred);
; 2361 : 	_DEBUG_ORDER_SINGLE_PRED(_First, _Last, _Pred, true);
; 2362 : 	_Diff _Count = 0;
; 2363 : 	_Distance(_First, _Last, _Count);

	mov	ecx, DWORD PTR __Last$[esp-4]
	push	esi
	push	edi
	mov	edi, DWORD PTR __First$[esp+4]
	sub	ecx, edi
	mov	eax, 818089009				; 30c30c31H
	imul	ecx
	sar	edx, 4
	mov	esi, edx
	shr	esi, 31					; 0000001fH
	add	esi, edx

; 2364 : 	for (; 0 < _Count; )

	test	esi, esi
	jle	SHORT $LN38@Upper_boun
	mov	eax, DWORD PTR __Val$[esp+4]
	push	ebx
	mov	ebx, DWORD PTR [eax+80]
	npad	7
$LL4@Upper_boun:

; 2365 : 		{	// divide and conquer, find half that contains answer
; 2366 : 		_Diff _Count2 = _Count / 2;

	mov	eax, esi
	cdq
	sub	eax, edx
	sar	eax, 1

; 2367 : 		_FwdIt _Mid = _First;
; 2368 : 		std::advance(_Mid, _Count2);

	mov	ecx, eax
	imul	ecx, 84					; 00000054H
	add	ecx, edi

; 2369 : 		_DEBUG_ORDER_SINGLE_PRED(_Mid, _Last, _Pred, false);
; 2370 : 
; 2371 : 		if (!_DEBUG_LT_PRED(_Pred, _Val, *_Mid))

	cmp	ebx, DWORD PTR [ecx+80]
	jl	SHORT $LN2@Upper_boun

; 2372 : 			_First = ++_Mid, _Count -= _Count2 + 1;

	lea	edi, DWORD PTR [ecx+84]
	or	ecx, -1
	sub	ecx, eax
	mov	DWORD PTR __First$[esp+8], edi
	add	esi, ecx

; 2373 : 		else

	jmp	SHORT $LN1@Upper_boun
$LN2@Upper_boun:

; 2374 : 			_Count = _Count2;

	mov	esi, eax
$LN1@Upper_boun:

; 2364 : 	for (; 0 < _Count; )

	test	esi, esi
	jg	SHORT $LL4@Upper_boun
	pop	ebx
$LN38@Upper_boun:

; 2375 : 		}
; 2376 : 	return (_First);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp+4]
	mov	DWORD PTR [eax], edi
	pop	edi
	pop	esi

; 2377 : 	}

	ret	0
??$_Upper_bound@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinion@@HUOpinionEval@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@0ABUOpinion@@UOpinionEval@@PAH@Z ENDP ; std::_Upper_bound<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,Opinion,int,OpinionEval>
_TEXT	ENDS
PUBLIC	??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@@stdext@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@00@Z ; stdext::unchecked_copy<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@@stdext@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@00@Z
_TEXT	SEGMENT
$T265880 = -4						; size = 1
__Cat$265885 = 8					; size = 1
$T265882 = 8						; size = 1
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Dest$ = 20						; size = 4
??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@@stdext@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@00@Z PROC ; stdext::unchecked_copy<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> > >, COMDAT

; 3604 : 	{	// copy [_First, _Last) to [_Dest, ...)

	push	ecx

; 3605 : 		return (_STD _Copy_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3606 : 			_STD _Iter_random(_First, _Dest), _STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Cat$265885[esp]
	mov	edx, DWORD PTR $T265882[esp]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[esp+4]
	mov	BYTE PTR $T265880[esp+8], 0
	mov	eax, DWORD PTR $T265880[esp+8]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+8]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+12]
	push	edx
	mov	edx, DWORD PTR __First$[esp+16]
	push	eax
	push	ecx
	push	edx
	push	esi
	call	??$_Copy_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@Urandom_access_iterator_tag@2@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::random_access_iterator_tag>
	add	esp, 28					; 0000001cH
	mov	eax, esi
	pop	esi

; 3607 : 	}

	pop	ecx
	ret	0
??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@@stdext@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@00@Z ENDP ; stdext::unchecked_copy<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> > >
_TEXT	ENDS
PUBLIC	??$unchecked_copy_backward@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@@stdext@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@PAUOpinion@@0V12@@Z ; stdext::unchecked_copy_backward<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> > >
; Function compile flags: /Ogtpy
;	COMDAT ??$unchecked_copy_backward@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@@stdext@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@PAUOpinion@@0V12@@Z
_TEXT	SEGMENT
$T265894 = -4						; size = 1
__Cat$265899 = 8					; size = 1
$T265896 = 8						; size = 1
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Dest$ = 20						; size = 4
??$unchecked_copy_backward@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@@stdext@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@PAUOpinion@@0V12@@Z PROC ; stdext::unchecked_copy_backward<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> > >, COMDAT

; 3636 : 	{	// copy [_First, _Last) backwards to [..., _Dest)

	push	ecx

; 3637 : 		return (_STD _Copy_backward_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3638 : 			_STD _Iter_random(_First, _Dest), _STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Cat$265899[esp]
	mov	edx, DWORD PTR $T265896[esp]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[esp+4]
	mov	BYTE PTR $T265894[esp+8], 0
	mov	eax, DWORD PTR $T265894[esp+8]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+8]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+12]
	push	edx
	mov	edx, DWORD PTR __First$[esp+16]
	push	eax
	push	ecx
	push	edx
	push	esi
	call	??$_Copy_backward_opt@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@Urandom_access_iterator_tag@3@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@PAUOpinion@@0V10@Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::random_access_iterator_tag>
	add	esp, 28					; 0000001cH
	mov	eax, esi
	pop	esi

; 3639 : 	}

	pop	ecx
	ret	0
??$unchecked_copy_backward@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@@stdext@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@PAUOpinion@@0V12@@Z ENDP ; stdext::unchecked_copy_backward<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> > >
_TEXT	ENDS
PUBLIC	??$unchecked_copy@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@@stdext@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@PAUOpinion@@0V12@@Z ; stdext::unchecked_copy<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> > >
; Function compile flags: /Ogtpy
;	COMDAT ??$unchecked_copy@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@@stdext@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@PAUOpinion@@0V12@@Z
_TEXT	SEGMENT
$T265908 = -4						; size = 1
__Cat$265913 = 8					; size = 1
$T265910 = 8						; size = 1
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Dest$ = 20						; size = 4
??$unchecked_copy@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@@stdext@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@PAUOpinion@@0V12@@Z PROC ; stdext::unchecked_copy<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> > >, COMDAT

; 3604 : 	{	// copy [_First, _Last) to [_Dest, ...)

	push	ecx

; 3605 : 		return (_STD _Copy_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3606 : 			_STD _Iter_random(_First, _Dest), _STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Cat$265913[esp]
	mov	edx, DWORD PTR $T265910[esp]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[esp+4]
	mov	BYTE PTR $T265908[esp+8], 0
	mov	eax, DWORD PTR $T265908[esp+8]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+8]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+12]
	push	edx
	mov	edx, DWORD PTR __First$[esp+16]
	push	eax
	push	ecx
	push	edx
	push	esi
	call	??$_Copy_opt@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@Urandom_access_iterator_tag@3@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@PAUOpinion@@0V10@Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::random_access_iterator_tag>
	add	esp, 28					; 0000001cH
	mov	eax, esi
	pop	esi

; 3607 : 	}

	pop	ecx
	ret	0
??$unchecked_copy@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@@stdext@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@PAUOpinion@@0V12@@Z ENDP ; stdext::unchecked_copy<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> > >
_TEXT	ENDS
PUBLIC	??$_Pop_heap_0@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z ; std::_Pop_heap_0<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,CvWeightedVector<CvPlot *,800,1>::WeightedElement>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$_Pop_heap_0@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Pop_heap_0@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z PROC ; std::_Pop_heap_0<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,CvWeightedVector<CvPlot *,800,1>::WeightedElement>, COMDAT

; 2088 : 	_Pop_heap(_First, _Last - 1, _Last - 1,
; 2089 : 		_Ty(*(_Last - 1)), _Dist_type(_First));

	mov	ecx, DWORD PTR __First$[esp-4]
	mov	eax, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR [ecx]
	push	esi
	mov	esi, DWORD PTR [eax-8]
	push	edi
	mov	edi, DWORD PTR [eax-4]
	mov	DWORD PTR [eax-8], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax-4], edx
	sub	eax, ecx
	sub	esp, 8
	mov	edx, esp
	sub	eax, 8
	sar	eax, 3
	push	eax
	push	0
	push	ecx
	mov	DWORD PTR [edx], esi
	mov	DWORD PTR [edx+4], edi
	call	??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HHU12@@Z ; std::_Adjust_heap<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,int,CvWeightedVector<CvPlot *,800,1>::WeightedElement>
	add	esp, 20					; 00000014H

; 2090 : 	}

	pop	edi
	pop	esi
	ret	0
??$_Pop_heap_0@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z ENDP ; std::_Pop_heap_0<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,CvWeightedVector<CvPlot *,800,1>::WeightedElement>
_TEXT	ENDS
PUBLIC	??$_Merge@PAUOpinion@@PAU1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@Urandom_access_iterator_tag@3@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@PAUOpinion@@000V10@UOpinionEval@@Urandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Merge<Opinion *,Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Merge@PAUOpinion@@PAU1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@Urandom_access_iterator_tag@3@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@PAUOpinion@@000V10@UOpinionEval@@Urandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First1$ = 12						; size = 4
$T266076 = 16						; size = 1
__Last1$ = 16						; size = 4
__First2$ = 20						; size = 4
__Last2$ = 24						; size = 4
__Cat$266080 = 28					; size = 1
$T266078 = 28						; size = 1
__Dest$ = 28						; size = 4
__Pred$ = 32						; size = 1
___formal$ = 36						; size = 1
___formal$ = 40						; size = 1
??$_Merge@PAUOpinion@@PAU1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@Urandom_access_iterator_tag@3@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@PAUOpinion@@000V10@UOpinionEval@@Urandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Merge<Opinion *,Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval,std::random_access_iterator_tag>, COMDAT

; 2594 : 	_DEBUG_ORDER_PRED(_First1, _Last1, _Pred);
; 2595 : 	_DEBUG_ORDER_PRED(_First2, _Last2, _Pred);
; 2596 : 	_DEBUG_POINTER(_Dest);
; 2597 : 	for (; _First1 != _Last1 && _First2 != _Last2; ++_Dest)

	mov	ecx, DWORD PTR __Dest$[esp-4]
	push	ebx
	mov	ebx, DWORD PTR __First2$[esp]
	push	ebp
	mov	ebp, DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	push	esi
	mov	esi, DWORD PTR __First1$[esp+8]
	push	edi
	cmp	esi, DWORD PTR __Last1$[esp+12]
	je	SHORT $LN59@Merge
	npad	4
$LL58@Merge:
	cmp	ebx, DWORD PTR __Last2$[esp+12]
	je	SHORT $LN59@Merge

; 2598 : 		if (_DEBUG_LT_PRED(_Pred, *_First2, *_First1))

	mov	eax, DWORD PTR [ebx+80]
	cmp	eax, DWORD PTR [esi+80]

; 2599 : 			*_Dest = *_First2, ++_First2;

	mov	edi, ecx
	jge	SHORT $LN2@Merge
	push	ebx
	call	ebp
	mov	ecx, DWORD PTR [ebx+80]
	mov	DWORD PTR [edi+80], ecx
	add	ebx, 84					; 00000054H

; 2600 : 		else

	jmp	SHORT $LN4@Merge
$LN2@Merge:

; 2601 : 			*_Dest = *_First1, ++_First1;

	push	esi
	call	ebp
	mov	edx, DWORD PTR [esi+80]
	mov	DWORD PTR [edi+80], edx
	add	esi, 84					; 00000054H
$LN4@Merge:
	mov	ecx, DWORD PTR __Dest$[esp+12]
	add	ecx, 84					; 00000054H
	mov	DWORD PTR __Dest$[esp+12], ecx
	cmp	esi, DWORD PTR __Last1$[esp+12]
	jne	SHORT $LL58@Merge
$LN59@Merge:

; 2602 : 
; 2603 : 	_Dest = _STDEXT unchecked_copy(_First1, _Last1, _Dest);	// copy any tail

	mov	edi, ecx
	cmp	esi, DWORD PTR __Last1$[esp+12]
	je	SHORT $LN32@Merge
$LL34@Merge:
	push	esi
	mov	ecx, edi
	call	ebp
	mov	eax, DWORD PTR [esi+80]
	mov	DWORD PTR [edi+80], eax
	add	esi, 84					; 00000054H
	add	edi, 84					; 00000054H
	cmp	esi, DWORD PTR __Last1$[esp+12]
	jne	SHORT $LL34@Merge
$LN32@Merge:

; 2604 : 	return (_STDEXT unchecked_copy(_First2, _Last2, _Dest));

	mov	esi, DWORD PTR ___$ReturnUdt$[esp+12]
	mov	DWORD PTR __Dest$[esp+12], edi
	mov	edx, DWORD PTR __Cat$266080[esp+12]
	mov	eax, DWORD PTR $T266078[esp+12]
	mov	BYTE PTR $T266076[esp+12], 0
	mov	ecx, DWORD PTR $T266076[esp+12]
	push	ecx
	mov	ecx, DWORD PTR __Last2$[esp+16]
	push	edx
	push	eax
	push	edi
	push	ecx
	push	ebx
	push	esi
	call	??$_Copy_opt@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@Urandom_access_iterator_tag@3@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@PAUOpinion@@0V10@Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::random_access_iterator_tag>
	add	esp, 28					; 0000001cH
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx

; 2605 : 	}

	ret	0
??$_Merge@PAUOpinion@@PAU1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@Urandom_access_iterator_tag@3@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@PAUOpinion@@000V10@UOpinionEval@@Urandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Merge<Opinion *,Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	??$_Rotate@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00PAHPAUOpinion@@@Z ; std::_Rotate<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion>
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	SEGMENT
__unwindtable$??$_Rotate@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00PAHPAUOpinion@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Rotate@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00PAHPAUOpinion@@@Z$0
__ehfuncinfo$??$_Rotate@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00PAHPAUOpinion@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Rotate@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00PAHPAUOpinion@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
xdata$x	ENDS
;	COMDAT ??$_Rotate@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00PAHPAUOpinion@@@Z
_TEXT	SEGMENT
__Count$ = -120						; size = 4
tv536 = -116						; size = 4
tv399 = -112						; size = 4
$T266099 = -108						; size = 4
$T266103 = -104						; size = 4
$T266104 = -100						; size = 4
__Holeval$241065 = -96					; size = 84
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
??$_Rotate@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00PAHPAUOpinion@@@Z PROC ; std::_Rotate<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion>, COMDAT

; 1679 : 	{	// rotate [_First, _Last), random-access iterators

	push	-1
	push	__ehhandler$??$_Rotate@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00PAHPAUOpinion@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 108				; 0000006cH

; 1680 : 	_DEBUG_RANGE(_First, _Mid);
; 1681 : 	_DEBUG_RANGE(_Mid, _Last);
; 1682 : 	_Diff _Shift = _Mid - _First;

	mov	ecx, DWORD PTR __Mid$[esp+116]
	push	ebx
	push	esi
	push	edi
	mov	edi, DWORD PTR __First$[esp+128]
	sub	ecx, edi
	mov	eax, 818089009				; 30c30c31H
	imul	ecx

; 1683 : 	_Diff _Count = _Last - _First;

	mov	ecx, DWORD PTR __Last$[esp+128]
	sar	edx, 4
	mov	ebx, edx
	sub	ecx, edi
	shr	ebx, 31					; 0000001fH
	add	ebx, edx
	mov	eax, 818089009				; 30c30c31H
	imul	ecx
	sar	edx, 4
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	mov	eax, ecx
	mov	DWORD PTR __Count$[esp+132], eax

; 1684 : 
; 1685 : 	for (_Diff _Factor = _Shift; _Factor != 0; )

	mov	esi, ebx
	test	ebx, ebx
	je	SHORT $LN7@Rotate
$LL105@Rotate:

; 1686 : 		{	// find subcycle count as GCD of shift count and length
; 1687 : 		_Diff _Tmp = _Count % _Factor;

	cdq
	idiv	esi

; 1688 : 		_Count = _Factor, _Factor = _Tmp;

	mov	DWORD PTR __Count$[esp+132], esi
	mov	eax, DWORD PTR __Count$[esp+132]
	mov	esi, edx
	test	edx, edx
	jne	SHORT $LL105@Rotate
$LN7@Rotate:

; 1689 : 		}
; 1690 : 
; 1691 : 	if (_Count < _Last - _First)

	cmp	eax, ecx
	jge	$LN3@Rotate

; 1692 : 		for (; 0 < _Count; --_Count)

	test	eax, eax
	jle	$LN3@Rotate
	mov	esi, ebx
	imul	esi, 84					; 00000054H
	imul	eax, 84					; 00000054H
	push	ebp
	mov	DWORD PTR tv399[esp+136], esi
	mov	DWORD PTR tv536[esp+136], eax
	jmp	SHORT $LN5@Rotate
	npad	10
$LL104@Rotate:
	mov	edi, DWORD PTR __First$[esp+132]
	mov	esi, DWORD PTR tv399[esp+136]
	mov	eax, DWORD PTR tv536[esp+136]
$LN5@Rotate:

; 1693 : 			{	// rotate each subcycle
; 1694 : 			_RanIt _Hole = _First + _Count;

	lea	ebp, DWORD PTR [eax+edi]

; 1695 : 			_RanIt _Next = _Hole;
; 1696 : 			_Ty _Holeval = *_Hole;

	push	ebp
	lea	ecx, DWORD PTR __Holeval$241065[esp+140]
	mov	edi, ebp
	call	DWORD PTR __imp_??0String@Localization@@QAE@ABV01@@Z
	mov	eax, DWORD PTR [ebp+80]
	mov	DWORD PTR __Holeval$241065[esp+216], eax

; 1697 : 			_RanIt _Next1 = _Next + _Shift == _Last ? _First : _Next + _Shift;

	lea	eax, DWORD PTR [esi+ebp]
	mov	DWORD PTR __$EHRec$[esp+144], 0
	cmp	eax, DWORD PTR __Last$[esp+132]
	jne	SHORT $LN11@Rotate
	lea	eax, DWORD PTR __First$[esp+132]
	jmp	SHORT $LN12@Rotate
$LN11@Rotate:
	mov	DWORD PTR $T266099[esp+136], eax
	lea	eax, DWORD PTR $T266099[esp+136]
$LN12@Rotate:
	mov	esi, DWORD PTR [eax]

; 1698 : 			while (_Next1 != _Hole)

	cmp	esi, ebp
	je	SHORT $LN1@Rotate
$LL2@Rotate:

; 1699 : 				{	// percolate elements back around subcycle
; 1700 : 				*_Next = *_Next1;

	push	esi
	mov	ecx, edi
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	ecx, DWORD PTR [esi+80]
	mov	DWORD PTR [edi+80], ecx

; 1701 : 				_Next = _Next1;
; 1702 : 				_Next1 = _Shift < _Last - _Next1 ? _Next1 + _Shift
; 1703 : 					: _First + (_Shift - (_Last - _Next1));

	mov	ecx, DWORD PTR __Last$[esp+132]
	sub	ecx, esi
	mov	eax, 818089009				; 30c30c31H
	imul	ecx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cmp	ebx, eax
	mov	edi, esi
	jge	SHORT $LN13@Rotate
	mov	edx, DWORD PTR tv399[esp+136]
	add	edx, esi
	mov	DWORD PTR $T266103[esp+136], edx
	lea	eax, DWORD PTR $T266103[esp+136]
	jmp	SHORT $LN14@Rotate
$LN13@Rotate:
	mov	ecx, ebx
	sub	ecx, eax
	imul	ecx, 84					; 00000054H
	add	ecx, DWORD PTR __First$[esp+132]
	lea	eax, DWORD PTR $T266104[esp+136]
	mov	DWORD PTR $T266104[esp+136], ecx
$LN14@Rotate:
	mov	esi, DWORD PTR [eax]
	cmp	esi, ebp
	jne	SHORT $LL2@Rotate
$LN1@Rotate:

; 1704 : 				}
; 1705 : 			*_Next = _Holeval;

	lea	edx, DWORD PTR __Holeval$241065[esp+136]
	push	edx
	mov	ecx, edi
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR __Holeval$241065[esp+216]

; 1706 : 			}

	lea	ecx, DWORD PTR __Holeval$241065[esp+136]
	mov	DWORD PTR [edi+80], eax
	mov	DWORD PTR __$EHRec$[esp+144], -1
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	eax, DWORD PTR __Count$[esp+136]
	sub	DWORD PTR tv536[esp+136], 84		; 00000054H
	dec	eax
	mov	DWORD PTR __Count$[esp+136], eax
	test	eax, eax
	jg	$LL104@Rotate
	pop	ebp
$LN3@Rotate:

; 1707 : 	}

	mov	ecx, DWORD PTR __$EHRec$[esp+132]
	pop	edi
	pop	esi
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 120				; 00000078H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Rotate@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00PAHPAUOpinion@@@Z$0:
	lea	ecx, DWORD PTR __Holeval$241065[ebp]
	jmp	??1Opinion@@QAE@XZ
__ehhandler$??$_Rotate@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00PAHPAUOpinion@@@Z:
	mov	eax, OFFSET __ehfuncinfo$??$_Rotate@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00PAHPAUOpinion@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Rotate@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00PAHPAUOpinion@@@Z ENDP ; std::_Rotate<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion>
PUBLIC	?lKillCities@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lKillCities
EXTRN	?killCities@CvPlayer@@QAEXXZ:PROC		; CvPlayer::killCities
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
;	COMDAT ?lKillCities@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lKillCities@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lKillCities, COMDAT

; 1099 : 	return BasicLuaMethod(L, &CvPlayerAI::killCities);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?killCities@CvPlayer@@QAEXXZ	; CvPlayer::killCities
	push	eax
	call	?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod
	add	esp, 8

; 1100 : }

	ret	0
?lKillCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lKillCities
_TEXT	ENDS
PUBLIC	?lKillUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::lKillUnits
EXTRN	?killUnits@CvPlayer@@QAEXXZ:PROC		; CvPlayer::killUnits
; Function compile flags: /Ogtpy
;	COMDAT ?lKillUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lKillUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lKillUnits, COMDAT

; 1169 : 	return BasicLuaMethod(L, &CvPlayerAI::killUnits);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?killUnits@CvPlayer@@QAEXXZ	; CvPlayer::killUnits
	push	eax
	call	?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod
	add	esp, 8

; 1170 : }

	ret	0
?lKillUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lKillUnits
_TEXT	ENDS
PUBLIC	?lFindNewCapital@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lFindNewCapital
EXTRN	?findNewCapital@CvPlayer@@QAEXXZ:PROC		; CvPlayer::findNewCapital
; Function compile flags: /Ogtpy
;	COMDAT ?lFindNewCapital@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lFindNewCapital@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lFindNewCapital, COMDAT

; 1414 : 	return BasicLuaMethod(L, &CvPlayerAI::findNewCapital);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?findNewCapital@CvPlayer@@QAEXXZ	; CvPlayer::findNewCapital
	push	eax
	call	?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod
	add	esp, 8

; 1415 : }

	ret	0
?lFindNewCapital@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lFindNewCapital
_TEXT	ENDS
PUBLIC	??0TradeConnection@@QAE@XZ			; TradeConnection::TradeConnection
; Function compile flags: /Ogtpy
;	COMDAT ??0TradeConnection@@QAE@XZ
_TEXT	SEGMENT
??0TradeConnection@@QAE@XZ PROC				; TradeConnection::TradeConnection, COMDAT
; _this$ = ecx
	mov	eax, ecx
	lea	ecx, DWORD PTR [eax+56]
	mov	DWORD PTR [eax+48], 0
	mov	DWORD PTR [eax+52], 40			; 00000028H
	mov	DWORD PTR [eax+44], ecx
	ret	0
??0TradeConnection@@QAE@XZ ENDP				; TradeConnection::TradeConnection
_TEXT	ENDS
PUBLIC	??1TradeConnection@@QAE@XZ			; TradeConnection::~TradeConnection
; Function compile flags: /Ogtpy
;	COMDAT ??1TradeConnection@@QAE@XZ
_TEXT	SEGMENT
??1TradeConnection@@QAE@XZ PROC				; TradeConnection::~TradeConnection, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR [ecx+44]
	add	ecx, 56					; 00000038H
	cmp	eax, ecx
	je	SHORT $LN6@TradeConne
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	pop	ecx
$LN6@TradeConne:
	ret	0
??1TradeConnection@@QAE@XZ ENDP				; TradeConnection::~TradeConnection
_TEXT	ENDS
PUBLIC	?lGetInternationalTradeRouteBaseBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteBaseBonus
EXTRN	?GetTradeConnectionBaseValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z:PROC ; CvPlayerTrade::GetTradeConnectionBaseValueTimes100
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?lGetInternationalTradeRouteBaseBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetInternationalTradeRouteBaseBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetInternationalTradeRouteBaseBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetInternationalTradeRouteBaseBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetInternationalTradeRouteBaseBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bOrigin$ = -464					; size = 1
_stack_size$266427 = -464				; size = 4
_pPlayerTrade$ = -460					; size = 4
_kTradeConnection$ = -456				; size = 444
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetInternationalTradeRouteBaseBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetInternationalTradeRouteBaseBonus, COMDAT

; 3397 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetInternationalTradeRouteBaseBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 452				; 000001c4H
	push	ebx
	push	ebp
	push	esi

; 3398 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+472]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetIntern@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetIntern@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetIntern@2
	xor	bl, bl
$LN6@lGetIntern@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lGetIntern@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lGetIntern@2:

; 3399 : 	CvPlayerTrade* pPlayerTrade = pkPlayer->GetTrade();

	mov	ecx, edi
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade

; 3400 : 	CvCity* pOriginCity = CvLuaCity::GetInstance(L, 2, true);

	push	esi
	mov	DWORD PTR _pPlayerTrade$[esp+484], eax
	call	_lua_gettop
	push	2
	push	esi
	mov	edi, eax
	mov	bl, 1
	xor	ebp, ebp
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN84@lGetIntern@2
	push	OFFSET $SG237679
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN84@lGetIntern@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	ebp, eax
	add	esp, 8
	test	ebp, ebp
	je	SHORT $LN84@lGetIntern@2
	xor	bl, bl
$LN84@lGetIntern@2:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN16@lGetIntern@2
	push	esi
	call	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
	add	esp, 4
$LN16@lGetIntern@2:

; 3401 : 	CvCity* pDestCity = CvLuaCity::GetInstance(L, 3, true);

	push	esi
	call	_lua_gettop
	push	3
	push	esi
	mov	DWORD PTR _stack_size$266427[esp+492], eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN85@lGetIntern@2
	push	OFFSET $SG237679
	push	3
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN85@lGetIntern@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN85@lGetIntern@2
	xor	bl, bl
$LN85@lGetIntern@2:
	mov	eax, DWORD PTR _stack_size$266427[esp+480]
	push	eax
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN23@lGetIntern@2
	push	esi
	call	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
	add	esp, 4
$LN23@lGetIntern@2:

; 3402 : 	bool bOrigin = lua_toboolean(L, 4);

	push	4
	push	esi
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	cl

; 3403 : 
; 3404 : 	TradeConnection kTradeConnection;

	xor	eax, eax
	lea	edx, DWORD PTR _kTradeConnection$[esp+536]
	mov	BYTE PTR _bOrigin$[esp+480], cl
	mov	DWORD PTR _kTradeConnection$[esp+528], eax
	mov	DWORD PTR _kTradeConnection$[esp+532], 40 ; 00000028H
	mov	DWORD PTR _kTradeConnection$[esp+524], edx
	mov	DWORD PTR __$EHRec$[esp+488], eax

; 3405 : 	kTradeConnection.m_iOriginX = pOriginCity->getX();

	mov	eax, DWORD PTR [ebp+96]
	mov	DWORD PTR _kTradeConnection$[esp+484], eax

; 3406 : 	kTradeConnection.m_iOriginY = pOriginCity->getY();

	mov	ecx, DWORD PTR [ebp+108]
	mov	DWORD PTR _kTradeConnection$[esp+488], ecx

; 3407 : 	kTradeConnection.m_iDestX = pDestCity->getX();

	mov	edx, DWORD PTR [edi+96]
	mov	DWORD PTR _kTradeConnection$[esp+492], edx

; 3408 : 	kTradeConnection.m_iDestY = pDestCity->getY();

	mov	eax, DWORD PTR [edi+108]
	mov	DWORD PTR _kTradeConnection$[esp+496], eax

; 3409 : 	kTradeConnection.m_eOriginOwner = pOriginCity->getOwner();

	mov	ecx, DWORD PTR [ebp+84]

; 3410 : 	kTradeConnection.m_eDestOwner = pDestCity->getOwner();
; 3411 : 
; 3412 : 	int iResult = pPlayerTrade->GetTradeConnectionBaseValueTimes100(kTradeConnection, YIELD_GOLD, bOrigin);

	mov	eax, DWORD PTR _bOrigin$[esp+480]
	mov	DWORD PTR _kTradeConnection$[esp+500], ecx
	mov	edx, DWORD PTR [edi+84]
	push	eax
	push	2
	lea	ecx, DWORD PTR _kTradeConnection$[esp+488]
	push	ecx
	mov	ecx, DWORD PTR _pPlayerTrade$[esp+492]
	mov	DWORD PTR _kTradeConnection$[esp+516], edx
	call	?GetTradeConnectionBaseValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionBaseValueTimes100

; 3413 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger

; 3414 : 
; 3415 : 	return 1;

	mov	eax, DWORD PTR _kTradeConnection$[esp+532]
	add	esp, 8
	pop	edi
	pop	esi
	lea	edx, DWORD PTR _kTradeConnection$[esp+528]
	pop	ebp
	mov	DWORD PTR __$EHRec$[esp+476], -1
	pop	ebx
	cmp	eax, edx
	je	SHORT $LN83@lGetIntern@2
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN83@lGetIntern@2:

; 3416 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+464]
	mov	eax, 1
	mov	DWORD PTR fs:0, ecx
	add	esp, 464				; 000001d0H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetInternationalTradeRouteBaseBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _kTradeConnection$[ebp]
	jmp	??1TradeConnection@@QAE@XZ
__ehhandler$?lGetInternationalTradeRouteBaseBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetInternationalTradeRouteBaseBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetInternationalTradeRouteBaseBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetInternationalTradeRouteBaseBonus
PUBLIC	?lGetInternationalTradeRouteGPTBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteGPTBonus
EXTRN	?GetTradeConnectionGPTValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N2@Z:PROC ; CvPlayerTrade::GetTradeConnectionGPTValueTimes100
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?lGetInternationalTradeRouteGPTBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetInternationalTradeRouteGPTBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetInternationalTradeRouteGPTBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetInternationalTradeRouteGPTBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetInternationalTradeRouteGPTBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bOrigin$ = -464					; size = 1
_stack_size$266638 = -464				; size = 4
_pPlayerTrade$ = -460					; size = 4
_kTradeConnection$ = -456				; size = 444
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetInternationalTradeRouteGPTBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetInternationalTradeRouteGPTBonus, COMDAT

; 3423 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetInternationalTradeRouteGPTBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 452				; 000001c4H
	push	ebx
	push	ebp
	push	esi

; 3424 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+472]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetIntern@3
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetIntern@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetIntern@3
	xor	bl, bl
$LN6@lGetIntern@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lGetIntern@3
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lGetIntern@3:

; 3425 : 	CvPlayerTrade* pPlayerTrade = pkPlayer->GetTrade();

	mov	ecx, edi
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade

; 3426 : 	CvCity* pOriginCity = CvLuaCity::GetInstance(L, 2, true);

	push	esi
	mov	DWORD PTR _pPlayerTrade$[esp+484], eax
	call	_lua_gettop
	push	2
	push	esi
	mov	edi, eax
	mov	bl, 1
	xor	ebp, ebp
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN84@lGetIntern@3
	push	OFFSET $SG237679
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN84@lGetIntern@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	ebp, eax
	add	esp, 8
	test	ebp, ebp
	je	SHORT $LN84@lGetIntern@3
	xor	bl, bl
$LN84@lGetIntern@3:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN16@lGetIntern@3
	push	esi
	call	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
	add	esp, 4
$LN16@lGetIntern@3:

; 3427 : 	CvCity* pDestCity = CvLuaCity::GetInstance(L, 3, true);

	push	esi
	call	_lua_gettop
	push	3
	push	esi
	mov	DWORD PTR _stack_size$266638[esp+492], eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN85@lGetIntern@3
	push	OFFSET $SG237679
	push	3
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN85@lGetIntern@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN85@lGetIntern@3
	xor	bl, bl
$LN85@lGetIntern@3:
	mov	eax, DWORD PTR _stack_size$266638[esp+480]
	push	eax
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN23@lGetIntern@3
	push	esi
	call	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
	add	esp, 4
$LN23@lGetIntern@3:

; 3428 : 	bool bOrigin = lua_toboolean(L, 4);

	push	4
	push	esi
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	cl

; 3429 : 
; 3430 : 	TradeConnection kTradeConnection;

	xor	eax, eax
	lea	edx, DWORD PTR _kTradeConnection$[esp+536]
	mov	BYTE PTR _bOrigin$[esp+480], cl
	mov	DWORD PTR _kTradeConnection$[esp+528], eax
	mov	DWORD PTR _kTradeConnection$[esp+532], 40 ; 00000028H
	mov	DWORD PTR _kTradeConnection$[esp+524], edx
	mov	DWORD PTR __$EHRec$[esp+488], eax

; 3431 : 	kTradeConnection.m_iOriginX = pOriginCity->getX();

	mov	eax, DWORD PTR [ebp+96]
	mov	DWORD PTR _kTradeConnection$[esp+484], eax

; 3432 : 	kTradeConnection.m_iOriginY = pOriginCity->getY();

	mov	ecx, DWORD PTR [ebp+108]
	mov	DWORD PTR _kTradeConnection$[esp+488], ecx

; 3433 : 	kTradeConnection.m_iDestX = pDestCity->getX();

	mov	edx, DWORD PTR [edi+96]
	mov	DWORD PTR _kTradeConnection$[esp+492], edx

; 3434 : 	kTradeConnection.m_iDestY = pDestCity->getY();

	mov	eax, DWORD PTR [edi+108]
	mov	DWORD PTR _kTradeConnection$[esp+496], eax

; 3435 : 	kTradeConnection.m_eOriginOwner = pOriginCity->getOwner();
; 3436 : 	kTradeConnection.m_eDestOwner = pDestCity->getOwner();
; 3437 : 
; 3438 : 	int iResult = pPlayerTrade->GetTradeConnectionGPTValueTimes100(kTradeConnection, YIELD_GOLD, true, bOrigin);

	mov	eax, DWORD PTR _bOrigin$[esp+480]
	mov	ecx, DWORD PTR [ebp+84]
	push	eax
	mov	DWORD PTR _kTradeConnection$[esp+504], ecx
	mov	edx, DWORD PTR [edi+84]
	push	1
	push	2
	lea	ecx, DWORD PTR _kTradeConnection$[esp+492]
	push	ecx
	mov	ecx, DWORD PTR _pPlayerTrade$[esp+496]
	mov	DWORD PTR _kTradeConnection$[esp+520], edx
	call	?GetTradeConnectionGPTValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N2@Z ; CvPlayerTrade::GetTradeConnectionGPTValueTimes100

; 3439 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger

; 3440 : 
; 3441 : 	return 1;

	mov	eax, DWORD PTR _kTradeConnection$[esp+532]
	add	esp, 8
	pop	edi
	pop	esi
	lea	edx, DWORD PTR _kTradeConnection$[esp+528]
	pop	ebp
	mov	DWORD PTR __$EHRec$[esp+476], -1
	pop	ebx
	cmp	eax, edx
	je	SHORT $LN83@lGetIntern@3
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN83@lGetIntern@3:

; 3442 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+464]
	mov	eax, 1
	mov	DWORD PTR fs:0, ecx
	add	esp, 464				; 000001d0H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetInternationalTradeRouteGPTBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _kTradeConnection$[ebp]
	jmp	??1TradeConnection@@QAE@XZ
__ehhandler$?lGetInternationalTradeRouteGPTBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetInternationalTradeRouteGPTBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetInternationalTradeRouteGPTBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetInternationalTradeRouteGPTBonus
PUBLIC	?lGetInternationalTradeRouteResourceBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteResourceBonus
EXTRN	?GetTradeConnectionResourceValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z:PROC ; CvPlayerTrade::GetTradeConnectionResourceValueTimes100
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?lGetInternationalTradeRouteResourceBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetInternationalTradeRouteResourceBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetInternationalTradeRouteResourceBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetInternationalTradeRouteResourceBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetInternationalTradeRouteResourceBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bOrigin$ = -464					; size = 1
_stack_size$266849 = -464				; size = 4
_pPlayerTrade$ = -460					; size = 4
_kTradeConnection$ = -456				; size = 444
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetInternationalTradeRouteResourceBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetInternationalTradeRouteResourceBonus, COMDAT

; 3446 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetInternationalTradeRouteResourceBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 452				; 000001c4H
	push	ebx
	push	ebp
	push	esi

; 3447 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+472]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetIntern@4
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetIntern@4
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetIntern@4
	xor	bl, bl
$LN6@lGetIntern@4:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lGetIntern@4
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lGetIntern@4:

; 3448 : 	CvPlayerTrade* pPlayerTrade = pkPlayer->GetTrade();

	mov	ecx, edi
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade

; 3449 : 	CvCity* pOriginCity = CvLuaCity::GetInstance(L, 2, true);

	push	esi
	mov	DWORD PTR _pPlayerTrade$[esp+484], eax
	call	_lua_gettop
	push	2
	push	esi
	mov	edi, eax
	mov	bl, 1
	xor	ebp, ebp
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN84@lGetIntern@4
	push	OFFSET $SG237679
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN84@lGetIntern@4
	push	-1
	push	esi
	call	_lua_touserdata
	mov	ebp, eax
	add	esp, 8
	test	ebp, ebp
	je	SHORT $LN84@lGetIntern@4
	xor	bl, bl
$LN84@lGetIntern@4:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN16@lGetIntern@4
	push	esi
	call	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
	add	esp, 4
$LN16@lGetIntern@4:

; 3450 : 	CvCity* pDestCity = CvLuaCity::GetInstance(L, 3, true);

	push	esi
	call	_lua_gettop
	push	3
	push	esi
	mov	DWORD PTR _stack_size$266849[esp+492], eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN85@lGetIntern@4
	push	OFFSET $SG237679
	push	3
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN85@lGetIntern@4
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN85@lGetIntern@4
	xor	bl, bl
$LN85@lGetIntern@4:
	mov	eax, DWORD PTR _stack_size$266849[esp+480]
	push	eax
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN23@lGetIntern@4
	push	esi
	call	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
	add	esp, 4
$LN23@lGetIntern@4:

; 3451 : 	bool bOrigin = lua_toboolean(L, 4);

	push	4
	push	esi
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	cl

; 3452 : 
; 3453 : 	TradeConnection kTradeConnection;

	xor	eax, eax
	lea	edx, DWORD PTR _kTradeConnection$[esp+536]
	mov	BYTE PTR _bOrigin$[esp+480], cl
	mov	DWORD PTR _kTradeConnection$[esp+528], eax
	mov	DWORD PTR _kTradeConnection$[esp+532], 40 ; 00000028H
	mov	DWORD PTR _kTradeConnection$[esp+524], edx
	mov	DWORD PTR __$EHRec$[esp+488], eax

; 3454 : 	kTradeConnection.m_iOriginX = pOriginCity->getX();

	mov	eax, DWORD PTR [ebp+96]
	mov	DWORD PTR _kTradeConnection$[esp+484], eax

; 3455 : 	kTradeConnection.m_iOriginY = pOriginCity->getY();

	mov	ecx, DWORD PTR [ebp+108]
	mov	DWORD PTR _kTradeConnection$[esp+488], ecx

; 3456 : 	kTradeConnection.m_iDestX = pDestCity->getX();

	mov	edx, DWORD PTR [edi+96]
	mov	DWORD PTR _kTradeConnection$[esp+492], edx

; 3457 : 	kTradeConnection.m_iDestY = pDestCity->getY();

	mov	eax, DWORD PTR [edi+108]
	mov	DWORD PTR _kTradeConnection$[esp+496], eax

; 3458 : 	kTradeConnection.m_eOriginOwner = pOriginCity->getOwner();

	mov	ecx, DWORD PTR [ebp+84]

; 3459 : 	kTradeConnection.m_eDestOwner = pDestCity->getOwner();
; 3460 : 
; 3461 : 	int iResult = pPlayerTrade->GetTradeConnectionResourceValueTimes100(kTradeConnection, YIELD_GOLD, bOrigin);

	mov	eax, DWORD PTR _bOrigin$[esp+480]
	mov	DWORD PTR _kTradeConnection$[esp+500], ecx
	mov	edx, DWORD PTR [edi+84]
	push	eax
	push	2
	lea	ecx, DWORD PTR _kTradeConnection$[esp+488]
	push	ecx
	mov	ecx, DWORD PTR _pPlayerTrade$[esp+492]
	mov	DWORD PTR _kTradeConnection$[esp+516], edx
	call	?GetTradeConnectionResourceValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionResourceValueTimes100

; 3462 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger

; 3463 : 
; 3464 : 	return 1;

	mov	eax, DWORD PTR _kTradeConnection$[esp+532]
	add	esp, 8
	pop	edi
	pop	esi
	lea	edx, DWORD PTR _kTradeConnection$[esp+528]
	pop	ebp
	mov	DWORD PTR __$EHRec$[esp+476], -1
	pop	ebx
	cmp	eax, edx
	je	SHORT $LN83@lGetIntern@4
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN83@lGetIntern@4:

; 3465 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+464]
	mov	eax, 1
	mov	DWORD PTR fs:0, ecx
	add	esp, 464				; 000001d0H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetInternationalTradeRouteResourceBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _kTradeConnection$[ebp]
	jmp	??1TradeConnection@@QAE@XZ
__ehhandler$?lGetInternationalTradeRouteResourceBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetInternationalTradeRouteResourceBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetInternationalTradeRouteResourceBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetInternationalTradeRouteResourceBonus
PUBLIC	?lGetInternationalTradeRouteExclusiveBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteExclusiveBonus
EXTRN	?GetTradeConnectionExclusiveValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@@Z:PROC ; CvPlayerTrade::GetTradeConnectionExclusiveValueTimes100
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?lGetInternationalTradeRouteExclusiveBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetInternationalTradeRouteExclusiveBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetInternationalTradeRouteExclusiveBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetInternationalTradeRouteExclusiveBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetInternationalTradeRouteExclusiveBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pPlayerTrade$ = -464					; size = 4
_stack_size$267060 = -460				; size = 4
_kTradeConnection$ = -456				; size = 444
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetInternationalTradeRouteExclusiveBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetInternationalTradeRouteExclusiveBonus, COMDAT

; 3478 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetInternationalTradeRouteExclusiveBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 452				; 000001c4H
	push	ebx
	push	ebp
	push	esi

; 3479 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+472]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetIntern@5
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetIntern@5
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetIntern@5
	xor	bl, bl
$LN6@lGetIntern@5:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lGetIntern@5
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lGetIntern@5:

; 3480 : 	CvPlayerTrade* pPlayerTrade = pkPlayer->GetTrade();

	mov	ecx, edi
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade

; 3481 : 	CvCity* pOriginCity = CvLuaCity::GetInstance(L, 2, true);

	push	esi
	mov	DWORD PTR _pPlayerTrade$[esp+484], eax
	call	_lua_gettop
	push	2
	push	esi
	mov	edi, eax
	mov	bl, 1
	xor	ebp, ebp
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN84@lGetIntern@5
	push	OFFSET $SG237679
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN84@lGetIntern@5
	push	-1
	push	esi
	call	_lua_touserdata
	mov	ebp, eax
	add	esp, 8
	test	ebp, ebp
	je	SHORT $LN84@lGetIntern@5
	xor	bl, bl
$LN84@lGetIntern@5:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN16@lGetIntern@5
	push	esi
	call	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
	add	esp, 4
$LN16@lGetIntern@5:

; 3482 : 	CvCity* pDestCity = CvLuaCity::GetInstance(L, 3, true);

	push	esi
	call	_lua_gettop
	push	3
	push	esi
	mov	DWORD PTR _stack_size$267060[esp+492], eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN85@lGetIntern@5
	push	OFFSET $SG237679
	push	3
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN85@lGetIntern@5
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN85@lGetIntern@5
	xor	bl, bl
$LN85@lGetIntern@5:
	mov	eax, DWORD PTR _stack_size$267060[esp+480]
	push	eax
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN23@lGetIntern@5
	push	esi
	call	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
	add	esp, 4
$LN23@lGetIntern@5:

; 3483 : 
; 3484 : 	TradeConnection kTradeConnection;

	xor	eax, eax
	lea	ecx, DWORD PTR _kTradeConnection$[esp+536]
	mov	DWORD PTR _kTradeConnection$[esp+528], eax
	mov	DWORD PTR _kTradeConnection$[esp+532], 40 ; 00000028H
	mov	DWORD PTR _kTradeConnection$[esp+524], ecx

; 3485 : 	kTradeConnection.m_iOriginX = pOriginCity->getX();

	mov	edx, DWORD PTR [ebp+96]
	mov	DWORD PTR _kTradeConnection$[esp+484], edx
	mov	DWORD PTR __$EHRec$[esp+488], eax

; 3486 : 	kTradeConnection.m_iOriginY = pOriginCity->getY();

	mov	eax, DWORD PTR [ebp+108]
	mov	DWORD PTR _kTradeConnection$[esp+488], eax

; 3487 : 	kTradeConnection.m_iDestX = pDestCity->getX();

	mov	ecx, DWORD PTR [edi+96]
	mov	DWORD PTR _kTradeConnection$[esp+492], ecx

; 3488 : 	kTradeConnection.m_iDestY = pDestCity->getY();

	mov	edx, DWORD PTR [edi+108]
	mov	DWORD PTR _kTradeConnection$[esp+496], edx

; 3489 : 	kTradeConnection.m_eOriginOwner = pOriginCity->getOwner();

	mov	eax, DWORD PTR [ebp+84]
	mov	DWORD PTR _kTradeConnection$[esp+500], eax

; 3490 : 	kTradeConnection.m_eDestOwner = pDestCity->getOwner();

	mov	ecx, DWORD PTR [edi+84]

; 3491 : 
; 3492 : 	int iResult = pPlayerTrade->GetTradeConnectionExclusiveValueTimes100(kTradeConnection, YIELD_GOLD);

	push	2
	lea	edx, DWORD PTR _kTradeConnection$[esp+484]
	mov	DWORD PTR _kTradeConnection$[esp+508], ecx
	mov	ecx, DWORD PTR _pPlayerTrade$[esp+484]
	push	edx
	call	?GetTradeConnectionExclusiveValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@@Z ; CvPlayerTrade::GetTradeConnectionExclusiveValueTimes100

; 3493 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger

; 3494 : 
; 3495 : 	return 1;	

	mov	eax, DWORD PTR _kTradeConnection$[esp+532]
	add	esp, 8
	pop	edi
	pop	esi
	lea	ecx, DWORD PTR _kTradeConnection$[esp+528]
	pop	ebp
	mov	DWORD PTR __$EHRec$[esp+476], -1
	pop	ebx
	cmp	eax, ecx
	je	SHORT $LN83@lGetIntern@5
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN83@lGetIntern@5:

; 3496 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+464]
	mov	eax, 1
	mov	DWORD PTR fs:0, ecx
	add	esp, 464				; 000001d0H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetInternationalTradeRouteExclusiveBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _kTradeConnection$[ebp]
	jmp	??1TradeConnection@@QAE@XZ
__ehhandler$?lGetInternationalTradeRouteExclusiveBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetInternationalTradeRouteExclusiveBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetInternationalTradeRouteExclusiveBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetInternationalTradeRouteExclusiveBonus
PUBLIC	?lGetInternationalTradeRouteYourBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteYourBuildingBonus
EXTRN	?GetTradeConnectionYourBuildingValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z:PROC ; CvPlayerTrade::GetTradeConnectionYourBuildingValueTimes100
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?lGetInternationalTradeRouteYourBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetInternationalTradeRouteYourBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetInternationalTradeRouteYourBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetInternationalTradeRouteYourBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetInternationalTradeRouteYourBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bOrigin$ = -464					; size = 1
_stack_size$267272 = -464				; size = 4
_pPlayerTrade$ = -460					; size = 4
_kTradeConnection$ = -456				; size = 444
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetInternationalTradeRouteYourBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetInternationalTradeRouteYourBuildingBonus, COMDAT

; 3500 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetInternationalTradeRouteYourBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 452				; 000001c4H
	push	ebx
	push	ebp
	push	esi

; 3501 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+472]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN84@lGetIntern@6
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN84@lGetIntern@6
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN84@lGetIntern@6
	xor	bl, bl
$LN84@lGetIntern@6:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lGetIntern@6
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lGetIntern@6:

; 3502 : 	CvPlayerTrade* pPlayerTrade = pkPlayer->GetTrade();

	mov	ecx, edi
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade

; 3503 : 	CvCity* pOriginCity = CvLuaCity::GetInstance(L, 2, true);

	push	esi
	mov	DWORD PTR _pPlayerTrade$[esp+484], eax
	call	_lua_gettop
	push	2
	push	esi
	mov	edi, eax
	mov	bl, 1
	xor	ebp, ebp
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN85@lGetIntern@6
	push	OFFSET $SG237679
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN85@lGetIntern@6
	push	-1
	push	esi
	call	_lua_touserdata
	mov	ebp, eax
	add	esp, 8
	test	ebp, ebp
	je	SHORT $LN85@lGetIntern@6
	xor	bl, bl
$LN85@lGetIntern@6:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN16@lGetIntern@6
	push	esi
	call	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
	add	esp, 4
$LN16@lGetIntern@6:

; 3504 : 	CvCity* pDestCity = CvLuaCity::GetInstance(L, 3, true);

	push	esi
	call	_lua_gettop
	push	3
	push	esi
	mov	DWORD PTR _stack_size$267272[esp+492], eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN24@lGetIntern@6
	push	OFFSET $SG237679
	push	3
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN24@lGetIntern@6
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN24@lGetIntern@6
	xor	bl, bl
$LN24@lGetIntern@6:
	mov	eax, DWORD PTR _stack_size$267272[esp+480]
	push	eax
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN23@lGetIntern@6
	push	esi
	call	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
	add	esp, 4
$LN23@lGetIntern@6:

; 3505 : 	DomainTypes eDomain = (DomainTypes)lua_tointeger(L, 4);

	push	4
	push	esi
	call	_lua_tointeger

; 3506 : 	bool bOrigin = lua_toboolean(L, 5);

	push	5
	push	esi
	mov	ebx, eax
	call	_lua_toboolean
	add	esp, 16					; 00000010H
	test	eax, eax
	setne	cl

; 3507 : 
; 3508 : 	TradeConnection kTradeConnection;

	xor	eax, eax
	lea	edx, DWORD PTR _kTradeConnection$[esp+536]
	mov	BYTE PTR _bOrigin$[esp+480], cl
	mov	DWORD PTR _kTradeConnection$[esp+528], eax
	mov	DWORD PTR _kTradeConnection$[esp+532], 40 ; 00000028H
	mov	DWORD PTR _kTradeConnection$[esp+524], edx
	mov	DWORD PTR __$EHRec$[esp+488], eax

; 3509 : 	kTradeConnection.m_iOriginX = pOriginCity->getX();

	mov	eax, DWORD PTR [ebp+96]
	mov	DWORD PTR _kTradeConnection$[esp+484], eax

; 3510 : 	kTradeConnection.m_iOriginY = pOriginCity->getY();

	mov	ecx, DWORD PTR [ebp+108]
	mov	DWORD PTR _kTradeConnection$[esp+488], ecx

; 3511 : 	kTradeConnection.m_iDestX = pDestCity->getX();

	mov	edx, DWORD PTR [edi+96]
	mov	DWORD PTR _kTradeConnection$[esp+492], edx

; 3512 : 	kTradeConnection.m_iDestY = pDestCity->getY();

	mov	eax, DWORD PTR [edi+108]
	mov	DWORD PTR _kTradeConnection$[esp+496], eax

; 3513 : 	kTradeConnection.m_eOriginOwner = pOriginCity->getOwner();

	mov	ecx, DWORD PTR [ebp+84]

; 3514 : 	kTradeConnection.m_eDestOwner = pDestCity->getOwner();
; 3515 : 	kTradeConnection.m_eDomain = eDomain;
; 3516 : 
; 3517 : 	int iResult = pPlayerTrade->GetTradeConnectionYourBuildingValueTimes100(kTradeConnection, YIELD_GOLD, bOrigin);

	mov	eax, DWORD PTR _bOrigin$[esp+480]
	mov	DWORD PTR _kTradeConnection$[esp+500], ecx
	mov	edx, DWORD PTR [edi+84]
	push	eax
	push	2
	lea	ecx, DWORD PTR _kTradeConnection$[esp+488]
	push	ecx
	mov	ecx, DWORD PTR _pPlayerTrade$[esp+492]
	mov	DWORD PTR _kTradeConnection$[esp+516], edx
	mov	DWORD PTR _kTradeConnection$[esp+520], ebx
	call	?GetTradeConnectionYourBuildingValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionYourBuildingValueTimes100

; 3518 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger

; 3519 : 	return 1;	

	mov	eax, DWORD PTR _kTradeConnection$[esp+532]
	add	esp, 8
	pop	edi
	pop	esi
	lea	edx, DWORD PTR _kTradeConnection$[esp+528]
	pop	ebp
	mov	DWORD PTR __$EHRec$[esp+476], -1
	pop	ebx
	cmp	eax, edx
	je	SHORT $LN83@lGetIntern@6
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN83@lGetIntern@6:

; 3520 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+464]
	mov	eax, 1
	mov	DWORD PTR fs:0, ecx
	add	esp, 464				; 000001d0H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetInternationalTradeRouteYourBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _kTradeConnection$[ebp]
	jmp	??1TradeConnection@@QAE@XZ
__ehhandler$?lGetInternationalTradeRouteYourBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetInternationalTradeRouteYourBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetInternationalTradeRouteYourBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetInternationalTradeRouteYourBuildingBonus
PUBLIC	?lGetInternationalTradeRouteTheirBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteTheirBuildingBonus
EXTRN	?GetTradeConnectionTheirBuildingValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z:PROC ; CvPlayerTrade::GetTradeConnectionTheirBuildingValueTimes100
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?lGetInternationalTradeRouteTheirBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetInternationalTradeRouteTheirBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetInternationalTradeRouteTheirBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetInternationalTradeRouteTheirBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetInternationalTradeRouteTheirBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bOrigin$ = -464					; size = 1
_stack_size$267481 = -464				; size = 4
_pPlayerTrade$ = -460					; size = 4
_kTradeConnection$ = -456				; size = 444
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetInternationalTradeRouteTheirBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetInternationalTradeRouteTheirBuildingBonus, COMDAT

; 3524 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetInternationalTradeRouteTheirBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 452				; 000001c4H
	push	ebx
	push	ebp
	push	esi

; 3525 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+472]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN84@lGetIntern@7
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN84@lGetIntern@7
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN84@lGetIntern@7
	xor	bl, bl
$LN84@lGetIntern@7:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lGetIntern@7
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lGetIntern@7:

; 3526 : 	CvPlayerTrade* pPlayerTrade = pkPlayer->GetTrade();

	mov	ecx, edi
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade

; 3527 : 	CvCity* pOriginCity = CvLuaCity::GetInstance(L, 2, true);

	push	esi
	mov	DWORD PTR _pPlayerTrade$[esp+484], eax
	call	_lua_gettop
	push	2
	push	esi
	mov	edi, eax
	mov	bl, 1
	xor	ebp, ebp
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN85@lGetIntern@7
	push	OFFSET $SG237679
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN85@lGetIntern@7
	push	-1
	push	esi
	call	_lua_touserdata
	mov	ebp, eax
	add	esp, 8
	test	ebp, ebp
	je	SHORT $LN85@lGetIntern@7
	xor	bl, bl
$LN85@lGetIntern@7:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN16@lGetIntern@7
	push	esi
	call	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
	add	esp, 4
$LN16@lGetIntern@7:

; 3528 : 	CvCity* pDestCity = CvLuaCity::GetInstance(L, 3, true);

	push	esi
	call	_lua_gettop
	push	3
	push	esi
	mov	DWORD PTR _stack_size$267481[esp+492], eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN24@lGetIntern@7
	push	OFFSET $SG237679
	push	3
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN24@lGetIntern@7
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN24@lGetIntern@7
	xor	bl, bl
$LN24@lGetIntern@7:
	mov	eax, DWORD PTR _stack_size$267481[esp+480]
	push	eax
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN23@lGetIntern@7
	push	esi
	call	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
	add	esp, 4
$LN23@lGetIntern@7:

; 3529 : 	DomainTypes eDomain = (DomainTypes)lua_tointeger(L, 4);

	push	4
	push	esi
	call	_lua_tointeger

; 3530 : 	bool bOrigin = lua_toboolean(L, 5);

	push	5
	push	esi
	mov	ebx, eax
	call	_lua_toboolean
	add	esp, 16					; 00000010H
	test	eax, eax
	setne	cl

; 3531 : 
; 3532 : 	TradeConnection kTradeConnection;

	xor	eax, eax
	lea	edx, DWORD PTR _kTradeConnection$[esp+536]
	mov	BYTE PTR _bOrigin$[esp+480], cl
	mov	DWORD PTR _kTradeConnection$[esp+528], eax
	mov	DWORD PTR _kTradeConnection$[esp+532], 40 ; 00000028H
	mov	DWORD PTR _kTradeConnection$[esp+524], edx
	mov	DWORD PTR __$EHRec$[esp+488], eax

; 3533 : 	kTradeConnection.m_iOriginX = pOriginCity->getX();

	mov	eax, DWORD PTR [ebp+96]
	mov	DWORD PTR _kTradeConnection$[esp+484], eax

; 3534 : 	kTradeConnection.m_iOriginY = pOriginCity->getY();

	mov	ecx, DWORD PTR [ebp+108]
	mov	DWORD PTR _kTradeConnection$[esp+488], ecx

; 3535 : 	kTradeConnection.m_iDestX = pDestCity->getX();

	mov	edx, DWORD PTR [edi+96]
	mov	DWORD PTR _kTradeConnection$[esp+492], edx

; 3536 : 	kTradeConnection.m_iDestY = pDestCity->getY();

	mov	eax, DWORD PTR [edi+108]
	mov	DWORD PTR _kTradeConnection$[esp+496], eax

; 3537 : 	kTradeConnection.m_eOriginOwner = pOriginCity->getOwner();

	mov	ecx, DWORD PTR [ebp+84]

; 3538 : 	kTradeConnection.m_eDestOwner = pDestCity->getOwner();
; 3539 : 	kTradeConnection.m_eDomain = eDomain;
; 3540 : 
; 3541 : 	int iResult = pPlayerTrade->GetTradeConnectionTheirBuildingValueTimes100(kTradeConnection, YIELD_GOLD, bOrigin);

	mov	eax, DWORD PTR _bOrigin$[esp+480]
	mov	DWORD PTR _kTradeConnection$[esp+500], ecx
	mov	edx, DWORD PTR [edi+84]
	push	eax
	push	2
	lea	ecx, DWORD PTR _kTradeConnection$[esp+488]
	push	ecx
	mov	ecx, DWORD PTR _pPlayerTrade$[esp+492]
	mov	DWORD PTR _kTradeConnection$[esp+516], edx
	mov	DWORD PTR _kTradeConnection$[esp+520], ebx
	call	?GetTradeConnectionTheirBuildingValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionTheirBuildingValueTimes100

; 3542 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger

; 3543 : 	return 1;	

	mov	eax, DWORD PTR _kTradeConnection$[esp+532]
	add	esp, 8
	pop	edi
	pop	esi
	lea	edx, DWORD PTR _kTradeConnection$[esp+528]
	pop	ebp
	mov	DWORD PTR __$EHRec$[esp+476], -1
	pop	ebx
	cmp	eax, edx
	je	SHORT $LN83@lGetIntern@7
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN83@lGetIntern@7:

; 3544 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+464]
	mov	eax, 1
	mov	DWORD PTR fs:0, ecx
	add	esp, 464				; 000001d0H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetInternationalTradeRouteTheirBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _kTradeConnection$[ebp]
	jmp	??1TradeConnection@@QAE@XZ
__ehhandler$?lGetInternationalTradeRouteTheirBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetInternationalTradeRouteTheirBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetInternationalTradeRouteTheirBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetInternationalTradeRouteTheirBuildingBonus
PUBLIC	?lGetInternationalTradeRoutePolicyBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRoutePolicyBonus
EXTRN	?GetTradeConnectionPolicyValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@@Z:PROC ; CvPlayerTrade::GetTradeConnectionPolicyValueTimes100
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?lGetInternationalTradeRoutePolicyBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetInternationalTradeRoutePolicyBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetInternationalTradeRoutePolicyBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetInternationalTradeRoutePolicyBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetInternationalTradeRoutePolicyBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pPlayerTrade$ = -464					; size = 4
_stack_size$267691 = -460				; size = 4
_kTradeConnection$ = -456				; size = 444
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetInternationalTradeRoutePolicyBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetInternationalTradeRoutePolicyBonus, COMDAT

; 3548 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetInternationalTradeRoutePolicyBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 452				; 000001c4H
	push	ebx
	push	ebp
	push	esi

; 3549 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+472]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetIntern@8
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetIntern@8
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetIntern@8
	xor	bl, bl
$LN6@lGetIntern@8:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lGetIntern@8
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lGetIntern@8:

; 3550 : 	CvPlayerTrade* pPlayerTrade = pkPlayer->GetTrade();

	mov	ecx, edi
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade

; 3551 : 	CvCity* pOriginCity = CvLuaCity::GetInstance(L, 2, true);

	push	esi
	mov	DWORD PTR _pPlayerTrade$[esp+484], eax
	call	_lua_gettop
	push	2
	push	esi
	mov	edi, eax
	mov	bl, 1
	xor	ebp, ebp
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN84@lGetIntern@8
	push	OFFSET $SG237679
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN84@lGetIntern@8
	push	-1
	push	esi
	call	_lua_touserdata
	mov	ebp, eax
	add	esp, 8
	test	ebp, ebp
	je	SHORT $LN84@lGetIntern@8
	xor	bl, bl
$LN84@lGetIntern@8:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN16@lGetIntern@8
	push	esi
	call	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
	add	esp, 4
$LN16@lGetIntern@8:

; 3552 : 	CvCity* pDestCity = CvLuaCity::GetInstance(L, 3, true);

	push	esi
	call	_lua_gettop
	push	3
	push	esi
	mov	DWORD PTR _stack_size$267691[esp+492], eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN85@lGetIntern@8
	push	OFFSET $SG237679
	push	3
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN85@lGetIntern@8
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN85@lGetIntern@8
	xor	bl, bl
$LN85@lGetIntern@8:
	mov	eax, DWORD PTR _stack_size$267691[esp+480]
	push	eax
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN23@lGetIntern@8
	push	esi
	call	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
	add	esp, 4
$LN23@lGetIntern@8:

; 3553 : 	DomainTypes eDomain = (DomainTypes)lua_tointeger(L, 4);

	push	4
	push	esi
	call	_lua_tointeger

; 3554 : 
; 3555 : 	TradeConnection kTradeConnection;

	xor	ecx, ecx
	lea	edx, DWORD PTR _kTradeConnection$[esp+544]
	add	esp, 8
	mov	DWORD PTR _kTradeConnection$[esp+528], ecx
	mov	DWORD PTR _kTradeConnection$[esp+532], 40 ; 00000028H
	mov	DWORD PTR _kTradeConnection$[esp+524], edx

; 3556 : 	kTradeConnection.m_iOriginX = pOriginCity->getX();

	mov	edx, DWORD PTR [ebp+96]
	mov	DWORD PTR _kTradeConnection$[esp+484], edx

; 3557 : 	kTradeConnection.m_iOriginY = pOriginCity->getY();

	mov	edx, DWORD PTR [ebp+108]
	mov	DWORD PTR _kTradeConnection$[esp+488], edx

; 3558 : 	kTradeConnection.m_iDestX = pDestCity->getX();

	mov	edx, DWORD PTR [edi+96]
	mov	DWORD PTR _kTradeConnection$[esp+492], edx

; 3559 : 	kTradeConnection.m_iDestY = pDestCity->getY();

	mov	edx, DWORD PTR [edi+108]
	mov	DWORD PTR _kTradeConnection$[esp+496], edx

; 3560 : 	kTradeConnection.m_eOriginOwner = pOriginCity->getOwner();

	mov	edx, DWORD PTR [ebp+84]
	mov	DWORD PTR _kTradeConnection$[esp+500], edx

; 3561 : 	kTradeConnection.m_eDestOwner = pDestCity->getOwner();

	mov	edx, DWORD PTR [edi+84]

; 3562 : 	kTradeConnection.m_eDomain = eDomain;

	mov	DWORD PTR _kTradeConnection$[esp+508], eax

; 3563 : 	kTradeConnection.m_eConnectionType = TRADE_CONNECTION_INTERNATIONAL;
; 3564 : 
; 3565 : 	int iResult = pPlayerTrade->GetTradeConnectionPolicyValueTimes100(kTradeConnection, YIELD_GOLD);

	push	2
	lea	eax, DWORD PTR _kTradeConnection$[esp+484]
	mov	DWORD PTR __$EHRec$[esp+492], ecx
	mov	DWORD PTR _kTradeConnection$[esp+516], ecx
	mov	ecx, DWORD PTR _pPlayerTrade$[esp+484]
	push	eax
	mov	DWORD PTR _kTradeConnection$[esp+512], edx
	call	?GetTradeConnectionPolicyValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@@Z ; CvPlayerTrade::GetTradeConnectionPolicyValueTimes100

; 3566 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger

; 3567 : 	return 1;

	mov	eax, DWORD PTR _kTradeConnection$[esp+532]
	add	esp, 8
	pop	edi
	pop	esi
	lea	ecx, DWORD PTR _kTradeConnection$[esp+528]
	pop	ebp
	mov	DWORD PTR __$EHRec$[esp+476], -1
	pop	ebx
	cmp	eax, ecx
	je	SHORT $LN83@lGetIntern@8
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN83@lGetIntern@8:

; 3568 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+464]
	mov	eax, 1
	mov	DWORD PTR fs:0, ecx
	add	esp, 464				; 000001d0H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetInternationalTradeRoutePolicyBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _kTradeConnection$[ebp]
	jmp	??1TradeConnection@@QAE@XZ
__ehhandler$?lGetInternationalTradeRoutePolicyBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetInternationalTradeRoutePolicyBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetInternationalTradeRoutePolicyBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetInternationalTradeRoutePolicyBonus
PUBLIC	?lGetInternationalTradeRouteOtherTraitBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteOtherTraitBonus
EXTRN	?GetTradeConnectionOtherTraitValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z:PROC ; CvPlayerTrade::GetTradeConnectionOtherTraitValueTimes100
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?lGetInternationalTradeRouteOtherTraitBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetInternationalTradeRouteOtherTraitBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetInternationalTradeRouteOtherTraitBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetInternationalTradeRouteOtherTraitBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetInternationalTradeRouteOtherTraitBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bOrigin$ = -464					; size = 1
_stack_size$267902 = -464				; size = 4
_pPlayerTrade$ = -460					; size = 4
_kTradeConnection$ = -456				; size = 444
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetInternationalTradeRouteOtherTraitBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetInternationalTradeRouteOtherTraitBonus, COMDAT

; 3572 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetInternationalTradeRouteOtherTraitBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 452				; 000001c4H
	push	ebx
	push	ebp
	push	esi

; 3573 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+472]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN84@lGetIntern@9
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN84@lGetIntern@9
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN84@lGetIntern@9
	xor	bl, bl
$LN84@lGetIntern@9:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lGetIntern@9
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lGetIntern@9:

; 3574 : 	CvPlayerTrade* pPlayerTrade = pkPlayer->GetTrade();

	mov	ecx, edi
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade

; 3575 : 	CvCity* pOriginCity = CvLuaCity::GetInstance(L, 2, true);

	push	esi
	mov	DWORD PTR _pPlayerTrade$[esp+484], eax
	call	_lua_gettop
	push	2
	push	esi
	mov	edi, eax
	mov	bl, 1
	xor	ebp, ebp
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN85@lGetIntern@9
	push	OFFSET $SG237679
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN85@lGetIntern@9
	push	-1
	push	esi
	call	_lua_touserdata
	mov	ebp, eax
	add	esp, 8
	test	ebp, ebp
	je	SHORT $LN85@lGetIntern@9
	xor	bl, bl
$LN85@lGetIntern@9:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN16@lGetIntern@9
	push	esi
	call	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
	add	esp, 4
$LN16@lGetIntern@9:

; 3576 : 	CvCity* pDestCity = CvLuaCity::GetInstance(L, 3, true);

	push	esi
	call	_lua_gettop
	push	3
	push	esi
	mov	DWORD PTR _stack_size$267902[esp+492], eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN24@lGetIntern@9
	push	OFFSET $SG237679
	push	3
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN24@lGetIntern@9
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN24@lGetIntern@9
	xor	bl, bl
$LN24@lGetIntern@9:
	mov	eax, DWORD PTR _stack_size$267902[esp+480]
	push	eax
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN23@lGetIntern@9
	push	esi
	call	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
	add	esp, 4
$LN23@lGetIntern@9:

; 3577 : 	DomainTypes eDomain = (DomainTypes)lua_tointeger(L, 4);

	push	4
	push	esi
	call	_lua_tointeger

; 3578 : 	bool bOrigin = lua_toboolean(L, 5);

	push	5
	push	esi
	mov	ebx, eax
	call	_lua_toboolean
	add	esp, 16					; 00000010H
	test	eax, eax
	setne	cl

; 3579 : 
; 3580 : 	TradeConnection kTradeConnection;

	xor	eax, eax
	lea	edx, DWORD PTR _kTradeConnection$[esp+536]
	mov	BYTE PTR _bOrigin$[esp+480], cl
	mov	DWORD PTR _kTradeConnection$[esp+528], eax
	mov	DWORD PTR _kTradeConnection$[esp+532], 40 ; 00000028H
	mov	DWORD PTR _kTradeConnection$[esp+524], edx

; 3581 : 	kTradeConnection.m_iOriginX = pOriginCity->getX();

	mov	ecx, DWORD PTR [ebp+96]
	mov	DWORD PTR _kTradeConnection$[esp+484], ecx

; 3582 : 	kTradeConnection.m_iOriginY = pOriginCity->getY();

	mov	edx, DWORD PTR [ebp+108]
	mov	DWORD PTR _kTradeConnection$[esp+488], edx

; 3583 : 	kTradeConnection.m_iDestX = pDestCity->getX();

	mov	ecx, DWORD PTR [edi+96]
	mov	DWORD PTR _kTradeConnection$[esp+492], ecx

; 3584 : 	kTradeConnection.m_iDestY = pDestCity->getY();

	mov	edx, DWORD PTR [edi+108]
	mov	DWORD PTR _kTradeConnection$[esp+496], edx

; 3585 : 	kTradeConnection.m_eOriginOwner = pOriginCity->getOwner();

	mov	ecx, DWORD PTR [ebp+84]
	mov	DWORD PTR _kTradeConnection$[esp+500], ecx

; 3586 : 	kTradeConnection.m_eDestOwner = pDestCity->getOwner();

	mov	edx, DWORD PTR [edi+84]
	mov	DWORD PTR __$EHRec$[esp+488], eax

; 3587 : 	kTradeConnection.m_eDomain = eDomain;
; 3588 : 	kTradeConnection.m_eConnectionType = TRADE_CONNECTION_INTERNATIONAL;

	mov	DWORD PTR _kTradeConnection$[esp+512], eax

; 3589 : 
; 3590 : 	int iResult = pPlayerTrade->GetTradeConnectionOtherTraitValueTimes100(kTradeConnection, YIELD_GOLD, bOrigin);

	mov	eax, DWORD PTR _bOrigin$[esp+480]
	push	eax
	push	2
	lea	ecx, DWORD PTR _kTradeConnection$[esp+488]
	push	ecx
	mov	ecx, DWORD PTR _pPlayerTrade$[esp+492]
	mov	DWORD PTR _kTradeConnection$[esp+516], edx
	mov	DWORD PTR _kTradeConnection$[esp+520], ebx
	call	?GetTradeConnectionOtherTraitValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionOtherTraitValueTimes100

; 3591 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger

; 3592 : 	return 1;	

	mov	eax, DWORD PTR _kTradeConnection$[esp+532]
	add	esp, 8
	pop	edi
	pop	esi
	lea	edx, DWORD PTR _kTradeConnection$[esp+528]
	pop	ebp
	mov	DWORD PTR __$EHRec$[esp+476], -1
	pop	ebx
	cmp	eax, edx
	je	SHORT $LN83@lGetIntern@9
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN83@lGetIntern@9:

; 3593 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+464]
	mov	eax, 1
	mov	DWORD PTR fs:0, ecx
	add	esp, 464				; 000001d0H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetInternationalTradeRouteOtherTraitBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _kTradeConnection$[ebp]
	jmp	??1TradeConnection@@QAE@XZ
__ehhandler$?lGetInternationalTradeRouteOtherTraitBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetInternationalTradeRouteOtherTraitBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetInternationalTradeRouteOtherTraitBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetInternationalTradeRouteOtherTraitBonus
PUBLIC	?lGetInternationalTradeRouteRiverModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteRiverModifier
EXTRN	?GetTradeConnectionRiverValueModifierTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z:PROC ; CvPlayerTrade::GetTradeConnectionRiverValueModifierTimes100
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?lGetInternationalTradeRouteRiverModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetInternationalTradeRouteRiverModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetInternationalTradeRouteRiverModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetInternationalTradeRouteRiverModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetInternationalTradeRouteRiverModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bOrigin$ = -464					; size = 1
_stack_size$268112 = -464				; size = 4
_pPlayerTrade$ = -460					; size = 4
_kTradeConnection$ = -456				; size = 444
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetInternationalTradeRouteRiverModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetInternationalTradeRouteRiverModifier, COMDAT

; 3597 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetInternationalTradeRouteRiverModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 452				; 000001c4H
	push	ebx
	push	ebp
	push	esi

; 3598 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+472]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN84@lGetIntern@10
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN84@lGetIntern@10
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN84@lGetIntern@10
	xor	bl, bl
$LN84@lGetIntern@10:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN13@lGetIntern@10
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN13@lGetIntern@10:

; 3599 : 	CvPlayerTrade* pPlayerTrade = pkPlayer->GetTrade();

	mov	ecx, edi
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade

; 3600 : 	CvCity* pOriginCity = CvLuaCity::GetInstance(L, 2, true);

	push	esi
	mov	DWORD PTR _pPlayerTrade$[esp+484], eax
	call	_lua_gettop
	push	2
	push	esi
	mov	edi, eax
	mov	bl, 1
	xor	ebp, ebp
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN85@lGetIntern@10
	push	OFFSET $SG237679
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN85@lGetIntern@10
	push	-1
	push	esi
	call	_lua_touserdata
	mov	ebp, eax
	add	esp, 8
	test	ebp, ebp
	je	SHORT $LN85@lGetIntern@10
	xor	bl, bl
$LN85@lGetIntern@10:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN16@lGetIntern@10
	push	esi
	call	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
	add	esp, 4
$LN16@lGetIntern@10:

; 3601 : 	CvCity* pDestCity = CvLuaCity::GetInstance(L, 3, true);

	push	esi
	call	_lua_gettop
	push	3
	push	esi
	mov	DWORD PTR _stack_size$268112[esp+492], eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN24@lGetIntern@10
	push	OFFSET $SG237679
	push	3
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN24@lGetIntern@10
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN24@lGetIntern@10
	xor	bl, bl
$LN24@lGetIntern@10:
	mov	eax, DWORD PTR _stack_size$268112[esp+480]
	push	eax
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN23@lGetIntern@10
	push	esi
	call	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
	add	esp, 4
$LN23@lGetIntern@10:

; 3602 : 	DomainTypes eDomain = (DomainTypes)lua_tointeger(L, 4);

	push	4
	push	esi
	call	_lua_tointeger

; 3603 : 	bool bOrigin = lua_toboolean(L, 5);

	push	5
	push	esi
	mov	ebx, eax
	call	_lua_toboolean
	add	esp, 16					; 00000010H
	test	eax, eax
	setne	cl

; 3604 : 
; 3605 : 	TradeConnection kTradeConnection;

	xor	eax, eax
	lea	edx, DWORD PTR _kTradeConnection$[esp+536]
	mov	BYTE PTR _bOrigin$[esp+480], cl
	mov	DWORD PTR _kTradeConnection$[esp+528], eax
	mov	DWORD PTR _kTradeConnection$[esp+532], 40 ; 00000028H
	mov	DWORD PTR _kTradeConnection$[esp+524], edx
	mov	DWORD PTR __$EHRec$[esp+488], eax

; 3606 : 	kTradeConnection.m_iOriginX = pOriginCity->getX();

	mov	eax, DWORD PTR [ebp+96]
	mov	DWORD PTR _kTradeConnection$[esp+484], eax

; 3607 : 	kTradeConnection.m_iOriginY = pOriginCity->getY();

	mov	ecx, DWORD PTR [ebp+108]
	mov	DWORD PTR _kTradeConnection$[esp+488], ecx

; 3608 : 	kTradeConnection.m_iDestX = pDestCity->getX();

	mov	edx, DWORD PTR [edi+96]
	mov	DWORD PTR _kTradeConnection$[esp+492], edx

; 3609 : 	kTradeConnection.m_iDestY = pDestCity->getY();

	mov	eax, DWORD PTR [edi+108]
	mov	DWORD PTR _kTradeConnection$[esp+496], eax

; 3610 : 	kTradeConnection.m_eOriginOwner = pOriginCity->getOwner();

	mov	ecx, DWORD PTR [ebp+84]

; 3611 : 	kTradeConnection.m_eDestOwner = pDestCity->getOwner();
; 3612 : 	kTradeConnection.m_eDomain = eDomain;
; 3613 : 
; 3614 : 	int iResult = pPlayerTrade->GetTradeConnectionRiverValueModifierTimes100(kTradeConnection, YIELD_GOLD, bOrigin);

	mov	eax, DWORD PTR _bOrigin$[esp+480]
	mov	DWORD PTR _kTradeConnection$[esp+500], ecx
	mov	edx, DWORD PTR [edi+84]
	push	eax
	push	2
	lea	ecx, DWORD PTR _kTradeConnection$[esp+488]
	push	ecx
	mov	ecx, DWORD PTR _pPlayerTrade$[esp+492]
	mov	DWORD PTR _kTradeConnection$[esp+516], edx
	mov	DWORD PTR _kTradeConnection$[esp+520], ebx
	call	?GetTradeConnectionRiverValueModifierTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionRiverValueModifierTimes100

; 3615 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger

; 3616 : 	return 1;	

	mov	eax, DWORD PTR _kTradeConnection$[esp+532]
	add	esp, 8
	pop	edi
	pop	esi
	lea	edx, DWORD PTR _kTradeConnection$[esp+528]
	pop	ebp
	mov	DWORD PTR __$EHRec$[esp+476], -1
	pop	ebx
	cmp	eax, edx
	je	SHORT $LN83@lGetIntern@10
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN83@lGetIntern@10:

; 3617 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+464]
	mov	eax, 1
	mov	DWORD PTR fs:0, ecx
	add	esp, 464				; 000001d0H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetInternationalTradeRouteRiverModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _kTradeConnection$[ebp]
	jmp	??1TradeConnection@@QAE@XZ
__ehhandler$?lGetInternationalTradeRouteRiverModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetInternationalTradeRouteRiverModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetInternationalTradeRouteRiverModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetInternationalTradeRouteRiverModifier
PUBLIC	?lGetInternationalTradeRouteTotal@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteTotal
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?lGetInternationalTradeRouteTotal@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetInternationalTradeRouteTotal@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetInternationalTradeRouteTotal@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetInternationalTradeRouteTotal@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetInternationalTradeRouteTotal@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bOrigin$ = -464					; size = 1
_stack_size$268323 = -464				; size = 4
_pPlayerTrade$ = -460					; size = 4
_kTradeConnection$ = -456				; size = 444
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetInternationalTradeRouteTotal@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetInternationalTradeRouteTotal, COMDAT

; 3630 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetInternationalTradeRouteTotal@CvLuaPlayer@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 452				; 000001c4H
	push	ebx
	push	ebp
	push	esi

; 3631 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+472]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN93@lGetIntern@11
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN93@lGetIntern@11
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN93@lGetIntern@11
	xor	bl, bl
$LN93@lGetIntern@11:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@lGetIntern@11
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@lGetIntern@11:

; 3632 : 	CvPlayerTrade* pPlayerTrade = pkPlayer->GetTrade();

	mov	ecx, edi
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade

; 3633 : 	CvCity* pOriginCity = CvLuaCity::GetInstance(L, 2, true);

	push	esi
	mov	DWORD PTR _pPlayerTrade$[esp+484], eax
	call	_lua_gettop
	push	2
	push	esi
	mov	edi, eax
	mov	bl, 1
	xor	ebp, ebp
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN94@lGetIntern@11
	push	OFFSET $SG237679
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN94@lGetIntern@11
	push	-1
	push	esi
	call	_lua_touserdata
	mov	ebp, eax
	add	esp, 8
	test	ebp, ebp
	je	SHORT $LN94@lGetIntern@11
	xor	bl, bl
$LN94@lGetIntern@11:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN17@lGetIntern@11
	push	esi
	call	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
	add	esp, 4
$LN17@lGetIntern@11:

; 3634 : 	CvCity* pDestCity = CvLuaCity::GetInstance(L, 3, true);

	push	esi
	call	_lua_gettop
	push	3
	push	esi
	mov	DWORD PTR _stack_size$268323[esp+492], eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN25@lGetIntern@11
	push	OFFSET $SG237679
	push	3
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN25@lGetIntern@11
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN25@lGetIntern@11
	xor	bl, bl
$LN25@lGetIntern@11:
	mov	eax, DWORD PTR _stack_size$268323[esp+480]
	push	eax
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN24@lGetIntern@11
	push	esi
	call	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
	add	esp, 4
$LN24@lGetIntern@11:

; 3635 : 	DomainTypes eDomain = (DomainTypes)lua_tointeger(L, 4);

	push	4
	push	esi
	call	_lua_tointeger

; 3636 : 	bool bOrigin = lua_toboolean(L, 5);

	push	5
	push	esi
	mov	ebx, eax
	call	_lua_toboolean
	add	esp, 16					; 00000010H
	test	eax, eax
	setne	cl

; 3637 : 
; 3638 : 	TradeConnection kTradeConnection;

	xor	eax, eax
	lea	edx, DWORD PTR _kTradeConnection$[esp+536]
	mov	BYTE PTR _bOrigin$[esp+480], cl
	mov	DWORD PTR _kTradeConnection$[esp+528], eax
	mov	DWORD PTR _kTradeConnection$[esp+532], 40 ; 00000028H
	mov	DWORD PTR _kTradeConnection$[esp+524], edx

; 3639 : 	kTradeConnection.m_iOriginX = pOriginCity->getX();

	mov	ecx, DWORD PTR [ebp+96]
	mov	DWORD PTR _kTradeConnection$[esp+484], ecx

; 3640 : 	kTradeConnection.m_iOriginY = pOriginCity->getY();

	mov	edx, DWORD PTR [ebp+108]
	mov	DWORD PTR _kTradeConnection$[esp+488], edx

; 3641 : 	kTradeConnection.m_iDestX = pDestCity->getX();

	mov	ecx, DWORD PTR [edi+96]
	mov	DWORD PTR _kTradeConnection$[esp+492], ecx

; 3642 : 	kTradeConnection.m_iDestY = pDestCity->getY();

	mov	edx, DWORD PTR [edi+108]
	mov	DWORD PTR _kTradeConnection$[esp+496], edx

; 3643 : 	kTradeConnection.m_eOriginOwner = pOriginCity->getOwner();

	mov	ecx, DWORD PTR [ebp+84]
	mov	DWORD PTR _kTradeConnection$[esp+500], ecx

; 3644 : 	kTradeConnection.m_eDestOwner = pDestCity->getOwner();

	mov	edx, DWORD PTR [edi+84]
	mov	DWORD PTR _kTradeConnection$[esp+504], edx

; 3645 : 	kTradeConnection.m_eDomain = eDomain;

	mov	DWORD PTR _kTradeConnection$[esp+508], ebx

; 3646 : 
; 3647 : 	if (pOriginCity->getOwner() != pDestCity->getOwner())

	mov	ebp, DWORD PTR [ebp+84]
	mov	DWORD PTR __$EHRec$[esp+488], eax
	cmp	ebp, DWORD PTR [edi+84]
	je	SHORT $LN1@lGetIntern@11

; 3648 : 	{
; 3649 : 		kTradeConnection.m_eConnectionType = TRADE_CONNECTION_INTERNATIONAL;

	mov	DWORD PTR _kTradeConnection$[esp+512], eax
$LN1@lGetIntern@11:

; 3650 : 	}
; 3651 : 
; 3652 : 	int iResult = pPlayerTrade->GetTradeConnectionValueTimes100(kTradeConnection, YIELD_GOLD, bOrigin);

	mov	eax, DWORD PTR _bOrigin$[esp+480]
	push	eax
	push	2
	lea	ecx, DWORD PTR _kTradeConnection$[esp+488]
	push	ecx
	mov	ecx, DWORD PTR _pPlayerTrade$[esp+492]
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100

; 3653 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger

; 3654 : 
; 3655 : 	return 1;	

	mov	eax, DWORD PTR _kTradeConnection$[esp+532]
	add	esp, 8
	pop	edi
	pop	esi
	lea	edx, DWORD PTR _kTradeConnection$[esp+528]
	pop	ebp
	mov	DWORD PTR __$EHRec$[esp+476], -1
	pop	ebx
	cmp	eax, edx
	je	SHORT $LN92@lGetIntern@11
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN92@lGetIntern@11:

; 3656 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+464]
	mov	eax, 1
	mov	DWORD PTR fs:0, ecx
	add	esp, 464				; 000001d0H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetInternationalTradeRouteTotal@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _kTradeConnection$[ebp]
	jmp	??1TradeConnection@@QAE@XZ
__ehhandler$?lGetInternationalTradeRouteTotal@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetInternationalTradeRouteTotal@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetInternationalTradeRouteTotal@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetInternationalTradeRouteTotal
PUBLIC	?lGetInternationalTradeRouteScience@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteScience
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?lGetInternationalTradeRouteScience@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetInternationalTradeRouteScience@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetInternationalTradeRouteScience@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetInternationalTradeRouteScience@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetInternationalTradeRouteScience@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bOrigin$ = -464					; size = 1
_stack_size$268550 = -464				; size = 4
_pPlayerTrade$ = -460					; size = 4
_kTradeConnection$ = -456				; size = 444
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetInternationalTradeRouteScience@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetInternationalTradeRouteScience, COMDAT

; 3660 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetInternationalTradeRouteScience@CvLuaPlayer@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 452				; 000001c4H
	push	ebx
	push	ebp
	push	esi

; 3661 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+472]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN93@lGetIntern@12
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN93@lGetIntern@12
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN93@lGetIntern@12
	xor	bl, bl
$LN93@lGetIntern@12:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@lGetIntern@12
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@lGetIntern@12:

; 3662 : 	CvPlayerTrade* pPlayerTrade = pkPlayer->GetTrade();

	mov	ecx, edi
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade

; 3663 : 	CvCity* pOriginCity = CvLuaCity::GetInstance(L, 2, true);

	push	esi
	mov	DWORD PTR _pPlayerTrade$[esp+484], eax
	call	_lua_gettop
	push	2
	push	esi
	mov	edi, eax
	mov	bl, 1
	xor	ebp, ebp
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN94@lGetIntern@12
	push	OFFSET $SG237679
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN94@lGetIntern@12
	push	-1
	push	esi
	call	_lua_touserdata
	mov	ebp, eax
	add	esp, 8
	test	ebp, ebp
	je	SHORT $LN94@lGetIntern@12
	xor	bl, bl
$LN94@lGetIntern@12:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN17@lGetIntern@12
	push	esi
	call	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
	add	esp, 4
$LN17@lGetIntern@12:

; 3664 : 	CvCity* pDestCity = CvLuaCity::GetInstance(L, 3, true);

	push	esi
	call	_lua_gettop
	push	3
	push	esi
	mov	DWORD PTR _stack_size$268550[esp+492], eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN25@lGetIntern@12
	push	OFFSET $SG237679
	push	3
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN25@lGetIntern@12
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN25@lGetIntern@12
	xor	bl, bl
$LN25@lGetIntern@12:
	mov	eax, DWORD PTR _stack_size$268550[esp+480]
	push	eax
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN24@lGetIntern@12
	push	esi
	call	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
	add	esp, 4
$LN24@lGetIntern@12:

; 3665 : 	DomainTypes eDomain = (DomainTypes)lua_tointeger(L, 4);

	push	4
	push	esi
	call	_lua_tointeger

; 3666 : 	bool bOrigin = lua_toboolean(L, 5);

	push	5
	push	esi
	mov	ebx, eax
	call	_lua_toboolean
	add	esp, 16					; 00000010H
	test	eax, eax
	setne	cl

; 3667 : 
; 3668 : 	TradeConnection kTradeConnection;

	xor	eax, eax
	lea	edx, DWORD PTR _kTradeConnection$[esp+536]
	mov	BYTE PTR _bOrigin$[esp+480], cl
	mov	DWORD PTR _kTradeConnection$[esp+528], eax
	mov	DWORD PTR _kTradeConnection$[esp+532], 40 ; 00000028H
	mov	DWORD PTR _kTradeConnection$[esp+524], edx

; 3669 : 	kTradeConnection.m_iOriginX = pOriginCity->getX();

	mov	ecx, DWORD PTR [ebp+96]
	mov	DWORD PTR _kTradeConnection$[esp+484], ecx

; 3670 : 	kTradeConnection.m_iOriginY = pOriginCity->getY();

	mov	edx, DWORD PTR [ebp+108]
	mov	DWORD PTR _kTradeConnection$[esp+488], edx

; 3671 : 	kTradeConnection.m_iDestX = pDestCity->getX();

	mov	ecx, DWORD PTR [edi+96]
	mov	DWORD PTR _kTradeConnection$[esp+492], ecx

; 3672 : 	kTradeConnection.m_iDestY = pDestCity->getY();

	mov	edx, DWORD PTR [edi+108]
	mov	DWORD PTR _kTradeConnection$[esp+496], edx

; 3673 : 	kTradeConnection.m_eOriginOwner = pOriginCity->getOwner();

	mov	ecx, DWORD PTR [ebp+84]
	mov	DWORD PTR _kTradeConnection$[esp+500], ecx

; 3674 : 	kTradeConnection.m_eDestOwner = pDestCity->getOwner();

	mov	edx, DWORD PTR [edi+84]
	mov	DWORD PTR _kTradeConnection$[esp+504], edx

; 3675 : 	kTradeConnection.m_eDomain = eDomain;

	mov	DWORD PTR _kTradeConnection$[esp+508], ebx

; 3676 : 
; 3677 : 	if (pOriginCity->getOwner() != pDestCity->getOwner())

	mov	ebp, DWORD PTR [ebp+84]
	mov	DWORD PTR __$EHRec$[esp+488], eax
	cmp	ebp, DWORD PTR [edi+84]
	je	SHORT $LN1@lGetIntern@12

; 3678 : 	{
; 3679 : 		kTradeConnection.m_eConnectionType = TRADE_CONNECTION_INTERNATIONAL;

	mov	DWORD PTR _kTradeConnection$[esp+512], eax
$LN1@lGetIntern@12:

; 3680 : 	}
; 3681 : 
; 3682 : 	int iResult = pPlayerTrade->GetTradeConnectionValueTimes100(kTradeConnection, YIELD_SCIENCE, bOrigin);

	mov	eax, DWORD PTR _bOrigin$[esp+480]
	push	eax
	push	3
	lea	ecx, DWORD PTR _kTradeConnection$[esp+488]
	push	ecx
	mov	ecx, DWORD PTR _pPlayerTrade$[esp+492]
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100

; 3683 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger

; 3684 : 
; 3685 : 	return 1;	

	mov	eax, DWORD PTR _kTradeConnection$[esp+532]
	add	esp, 8
	pop	edi
	pop	esi
	lea	edx, DWORD PTR _kTradeConnection$[esp+528]
	pop	ebp
	mov	DWORD PTR __$EHRec$[esp+476], -1
	pop	ebx
	cmp	eax, edx
	je	SHORT $LN92@lGetIntern@12
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN92@lGetIntern@12:

; 3686 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+464]
	mov	eax, 1
	mov	DWORD PTR fs:0, ecx
	add	esp, 464				; 000001d0H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetInternationalTradeRouteScience@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _kTradeConnection$[ebp]
	jmp	??1TradeConnection@@QAE@XZ
__ehhandler$?lGetInternationalTradeRouteScience@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetInternationalTradeRouteScience@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetInternationalTradeRouteScience@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetInternationalTradeRouteScience
PUBLIC	?lGetTradeRoutesAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTradeRoutesAvailable
EXTRN	?GetTradeConnection@CvPlayerTrade@@QAEPAUTradeConnection@@PAVCvCity@@0@Z:PROC ; CvPlayerTrade::GetTradeConnection
EXTRN	?CanCreateTradeRoute@CvPlayerTrade@@QAE_NPAVCvCity@@0W4DomainTypes@@W4TradeConnectionType@@_N3@Z:PROC ; CvPlayerTrade::CanCreateTradeRoute
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?lGetTradeRoutesAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetTradeRoutesAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetTradeRoutesAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetTradeRoutesAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z$2
__ehfuncinfo$?lGetTradeRoutesAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?lGetTradeRoutesAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetTradeRoutesAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv1022 = -552						; size = 4
_pkInstance$268757 = -548				; size = 4
_eDomain$230475 = -544					; size = 4
_iToPressure$230514 = -540				; size = 4
tv651 = -536						; size = 4
tv649 = -536						; size = 4
_pConnection$230494 = -536				; size = 4
_iFromPressure$230516 = -532				; size = 4
_uiConnectionTypes$230484 = -528			; size = 4
_ui$230462 = -524					; size = 4
_iTurnsLeft$230493 = -520				; size = 4
_pPlayerTrade$ = -516					; size = 4
_eFromReligion$230515 = -512				; size = 4
_index$ = -508						; size = 4
_eToReligion$230513 = -504				; size = 4
_bCheckPath$230482 = -500				; size = 1
_iToDelta$230524 = -496					; size = 4
_iOriginCityLoop$ = -492				; size = 4
_iDestCityLoop$230469 = -488				; size = 4
$T268741 = -484						; size = 28
$T268740 = -484						; size = 28
_kConnection$230492 = -456				; size = 444
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetTradeRoutesAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetTradeRoutesAvailable, COMDAT

; 4256 : {

	push	-1
	push	__ehhandler$?lGetTradeRoutesAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 540				; 0000021cH
	push	ebx
	push	esi

; 4257 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+556]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$268757[esp+576], 0
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN158@lGetTradeR@4
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN158@lGetTradeR@4
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$268757[esp+564], eax
	test	eax, eax
	je	SHORT $LN158@lGetTradeR@4
	xor	bl, bl
$LN158@lGetTradeR@4:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN38@lGetTradeR@4
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN38@lGetTradeR@4:

; 4258 : 	lua_createtable(L, 0, 0);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 4259 : 	int index = 1;
; 4260 : 
; 4261 : 	//CvGameTrade* pTrade = GC.getGame().GetGameTrade();
; 4262 : 	CvPlayerTrade* pPlayerTrade = pkPlayer->GetTrade();

	mov	edi, DWORD PTR _pkInstance$268757[esp+576]
	add	esp, 12					; 0000000cH
	mov	ecx, edi
	mov	DWORD PTR _index$[esp+564], 1
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	DWORD PTR _pPlayerTrade$[esp+564], eax

; 4263 : 	// for each domain type
; 4264 : 	//  for each origin city
; 4265 : 	//    for each destination city
; 4266 : 	//      display if a connection can be made
; 4267 : 
; 4268 : 	int iOriginCityLoop;
; 4269 : 	CvCity* pOriginCity = NULL;
; 4270 : 	for (pOriginCity = pkPlayer->firstCity(&iOriginCityLoop); pOriginCity != NULL; pOriginCity = pkPlayer->nextCity(&iOriginCityLoop))

	push	0
	lea	eax, DWORD PTR _iOriginCityLoop$[esp+568]
	push	eax
	mov	ecx, edi
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	ebx, eax
	test	ebx, ebx
	je	$LN154@lGetTradeR@4
	push	ebp
	npad	3
$LL23@lGetTradeR@4:

; 4271 : 	{
; 4272 : 		PlayerTypes eOtherPlayer = NO_PLAYER;
; 4273 : 		for (uint ui = 0; ui < MAX_CIV_PLAYERS; ui++)

	xor	edi, edi
	mov	DWORD PTR _ui$230462[esp+568], 0
	mov	DWORD PTR tv1022[esp+568], edi
	npad	2
$LL164@lGetTradeR@4:

; 4274 : 		{
; 4275 : 			eOtherPlayer = (PlayerTypes)ui;
; 4276 : 
; 4277 : 			if (!GET_PLAYER(eOtherPlayer).isAlive())

	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	add	ecx, edi
	cmp	BYTE PTR [ecx+2256], 0
	je	$LN19@lGetTradeR@4

; 4278 : 			{
; 4279 : 				continue;
; 4280 : 			}
; 4281 : 
; 4282 : 			if (GET_PLAYER(eOtherPlayer).isBarbarian())

	call	?isBarbarian@CvPlayer@@QBE_NXZ		; CvPlayer::isBarbarian
	test	al, al
	jne	$LN19@lGetTradeR@4

; 4283 : 			{
; 4284 : 				continue;
; 4285 : 			}
; 4286 : 
; 4287 : #ifdef AUI_WARNING_FIXES
; 4288 : 			const CvPlayerTrade* pOtherPlayerTrade = GET_PLAYER(eOtherPlayer).GetTrade();
; 4289 : #endif
; 4290 : 
; 4291 : 			int iDestCityLoop;
; 4292 : 			CvCity* pDestCity = NULL;
; 4293 : 			for (pDestCity = GET_PLAYER(eOtherPlayer).firstCity(&iDestCityLoop); pDestCity != NULL; pDestCity = GET_PLAYER(eOtherPlayer).nextCity(&iDestCityLoop))

	mov	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	0
	lea	eax, DWORD PTR _iDestCityLoop$230469[esp+572]
	lea	ecx, DWORD PTR [edi+edx]
	push	eax
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	ebp, eax
	test	ebp, ebp
	je	$LN19@lGetTradeR@4
$LL15@lGetTradeR@4:

; 4294 : 			{
; 4295 : 				// if this is the same city
; 4296 : 				if (pOriginCity == pDestCity)

	cmp	ebx, ebp
	je	$LN14@lGetTradeR@4

; 4297 : 				{
; 4298 : 					continue;
; 4299 : 				}
; 4300 : 
; 4301 : 				DomainTypes eDomain = NO_DOMAIN;
; 4302 : 				for (eDomain = (DomainTypes)0; eDomain < NUM_DOMAIN_TYPES; eDomain = (DomainTypes)(eDomain + 1))

	xor	edi, edi
	mov	DWORD PTR _eDomain$230475[esp+568], edi
	npad	1
$LL11@lGetTradeR@4:

; 4303 : 				{
; 4304 : 					// if this isn't a valid trade domain, ignore
; 4305 : 					if (eDomain != DOMAIN_LAND && eDomain != DOMAIN_SEA)

	cmp	edi, 2
	je	SHORT $LN161@lGetTradeR@4
	test	edi, edi
	jne	$LN10@lGetTradeR@4
$LN161@lGetTradeR@4:

; 4306 : 					{
; 4307 : 						continue;
; 4308 : 					}
; 4309 : 
; 4310 : 					bool bCheckPath = true;

	mov	BYTE PTR _bCheckPath$230482[esp+568], 1

; 4311 : 					TradeConnectionType eConnection = NUM_TRADE_CONNECTION_TYPES;
; 4312 : 					for (uint uiConnectionTypes = 0; uiConnectionTypes < NUM_TRADE_CONNECTION_TYPES; uiConnectionTypes++)

	mov	DWORD PTR _uiConnectionTypes$230484[esp+568], 0
	npad	6
$LL162@lGetTradeR@4:

; 4313 : 					{
; 4314 : 						eConnection = (TradeConnectionType)uiConnectionTypes;
; 4315 : 				
; 4316 : 						bool bTradeAvailable = pPlayerTrade->CanCreateTradeRoute(pOriginCity, pDestCity, eDomain, eConnection, true, bCheckPath);

	mov	ecx, DWORD PTR _bCheckPath$230482[esp+568]
	mov	edx, DWORD PTR _uiConnectionTypes$230484[esp+568]
	push	ecx
	mov	ecx, DWORD PTR _pPlayerTrade$[esp+572]
	push	1
	push	edx
	push	edi
	push	ebp
	push	ebx
	call	?CanCreateTradeRoute@CvPlayerTrade@@QAE_NPAVCvCity@@0W4DomainTypes@@W4TradeConnectionType@@_N3@Z ; CvPlayerTrade::CanCreateTradeRoute

; 4317 : 						if (!bTradeAvailable)

	test	al, al
	je	$LN6@lGetTradeR@4

; 4318 : 						{
; 4319 : 							continue;
; 4320 : 						}
; 4321 : 
; 4322 : 						bCheckPath = false;	// Once a trade route is valid for a domain, all further connections can assume the path is valid.
; 4323 : 
; 4324 : 						lua_createtable(L, 0, 0);

	push	0
	push	0
	push	esi
	mov	BYTE PTR _bCheckPath$230482[esp+580], 0
	call	_lua_createtable

; 4325 : 						const int t = lua_gettop(L);

	push	esi
	call	_lua_gettop
	mov	edi, eax

; 4326 : 
; 4327 : 						TradeConnection kConnection;

	xor	eax, eax
	lea	ecx, DWORD PTR _kConnection$230492[esp+640]
	add	esp, 16					; 00000010H
	mov	DWORD PTR _kConnection$230492[esp+616], eax
	mov	DWORD PTR _kConnection$230492[esp+620], 40 ; 00000028H
	mov	DWORD PTR _kConnection$230492[esp+612], ecx

; 4328 : 						kConnection.m_iOriginX = pOriginCity->getX();

	mov	edx, DWORD PTR [ebx+96]

; 4329 : 						kConnection.m_iOriginY = pOriginCity->getY();
; 4330 : 						kConnection.m_iDestX = pDestCity->getX();

	mov	ecx, DWORD PTR [ebp+96]
	mov	DWORD PTR __$EHRec$[esp+576], eax
	mov	eax, DWORD PTR [ebx+108]
	mov	DWORD PTR _kConnection$230492[esp+572], edx

; 4331 : 						kConnection.m_iDestY = pDestCity->getY();

	mov	edx, DWORD PTR [ebp+108]
	mov	DWORD PTR _kConnection$230492[esp+576], eax

; 4332 : 						kConnection.m_eConnectionType = eConnection;

	mov	eax, DWORD PTR _uiConnectionTypes$230484[esp+568]
	mov	DWORD PTR _kConnection$230492[esp+580], ecx

; 4333 : 						kConnection.m_eDomain = eDomain;

	mov	ecx, DWORD PTR _eDomain$230475[esp+568]
	mov	DWORD PTR _kConnection$230492[esp+584], edx

; 4334 : 						kConnection.m_eOriginOwner = pOriginCity->getOwner();

	mov	edx, DWORD PTR [ebx+84]
	mov	DWORD PTR _kConnection$230492[esp+600], eax

; 4335 : 						kConnection.m_eDestOwner = pDestCity->getOwner();

	mov	eax, DWORD PTR [ebp+84]

; 4336 : 
; 4337 : 						int iTurnsLeft = -1;
; 4338 : 						TradeConnection* pConnection = pPlayerTrade->GetTradeConnection(pOriginCity, pDestCity);

	push	ebp
	mov	DWORD PTR _kConnection$230492[esp+600], ecx
	mov	ecx, DWORD PTR _pPlayerTrade$[esp+572]
	push	ebx
	mov	DWORD PTR _kConnection$230492[esp+596], edx
	mov	DWORD PTR _kConnection$230492[esp+600], eax
	mov	DWORD PTR _iTurnsLeft$230493[esp+576], -1
	call	?GetTradeConnection@CvPlayerTrade@@QAEPAUTradeConnection@@PAVCvCity@@0@Z ; CvPlayerTrade::GetTradeConnection
	mov	DWORD PTR _pConnection$230494[esp+568], eax

; 4339 : 						if (pConnection && pConnection->m_eDomain == eDomain)

	test	eax, eax
	je	SHORT $LN160@lGetTradeR@4
	mov	ecx, DWORD PTR [eax+28]
	cmp	ecx, DWORD PTR _eDomain$230475[esp+568]
	jne	SHORT $LN160@lGetTradeR@4

; 4340 : 						{
; 4341 : 							iTurnsLeft = pConnection->m_iTurnRouteComplete - GC.getGame().getGameTurn();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	mov	edx, DWORD PTR _pConnection$230494[esp+568]
	mov	ecx, DWORD PTR [edx+392]
	sub	ecx, eax
	mov	DWORD PTR _iTurnsLeft$230493[esp+568], ecx
$LN160@lGetTradeR@4:

; 4342 : 						}
; 4343 : 
; 4344 : 						lua_pushinteger(L, eDomain);

	mov	eax, DWORD PTR _eDomain$230475[esp+568]
	push	eax
	push	esi
	call	_lua_pushinteger

; 4345 : 						lua_setfield(L, t, "Domain");

	push	OFFSET $SG230496
	push	edi
	push	esi
	call	_lua_setfield

; 4346 : 						lua_pushinteger(L, pkPlayer->getCivilizationType());

	mov	ecx, DWORD PTR _pkInstance$268757[esp+588]
	add	esp, 20					; 00000014H
	call	?getCivilizationType@CvPlayer@@QBE?AW4CivilizationTypes@@XZ ; CvPlayer::getCivilizationType
	push	eax
	push	esi
	call	_lua_pushinteger

; 4347 : 						lua_setfield(L, t, "FromCivilizationType");

	push	OFFSET $SG230497
	push	edi
	push	esi
	call	_lua_setfield

; 4348 : 						lua_pushinteger(L , pkPlayer->GetID());

	mov	ecx, DWORD PTR _pkInstance$268757[esp+588]
	mov	eax, DWORD PTR [ecx+44]
	push	eax
	push	esi
	call	_lua_pushinteger

; 4349 : 						lua_setfield(L, t, "FromID");

	push	OFFSET $SG230498
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 40					; 00000028H

; 4350 : 						lua_pushstring(L, pOriginCity->getName());

	lea	edx, DWORD PTR $T268740[esp+568]
	push	edx
	mov	ecx, ebx
	call	?getName@CvCity@@QBE?BVCvString@@XZ	; CvCity::getName
	mov	ecx, eax
	mov	BYTE PTR __$EHRec$[esp+576], 1
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8
	lea	ecx, DWORD PTR $T268740[esp+568]
	mov	BYTE PTR __$EHRec$[esp+576], 0
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 4351 : 						lua_setfield(L, t, "FromCityName");

	push	OFFSET $SG230500
	push	edi
	push	esi
	call	_lua_setfield

; 4352 : 						CvLuaCity::Push(L, pOriginCity);

	push	ebx
	push	esi
	call	?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push

; 4353 : 						lua_setfield(L, t, "FromCity");

	push	OFFSET $SG230501
	push	edi
	push	esi
	call	_lua_setfield

; 4354 : 						lua_pushinteger(L, GET_PLAYER(eOtherPlayer).getCivilizationType());

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	ecx, DWORD PTR tv1022[esp+600]
	add	esp, 32					; 00000020H
	add	ecx, eax
	call	?getCivilizationType@CvPlayer@@QBE?AW4CivilizationTypes@@XZ ; CvPlayer::getCivilizationType
	push	eax
	push	esi
	call	_lua_pushinteger

; 4355 : 						lua_setfield(L, t, "ToCivilizationType");

	push	OFFSET $SG230502
	push	edi
	push	esi
	call	_lua_setfield

; 4356 : 						lua_pushinteger(L, eOtherPlayer);

	mov	edx, DWORD PTR _ui$230462[esp+588]
	push	edx
	push	esi
	call	_lua_pushinteger

; 4357 : 						lua_setfield(L, t, "ToID");

	push	OFFSET $SG230503
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 40					; 00000028H

; 4358 : 						lua_pushstring(L, pDestCity->getName());

	lea	eax, DWORD PTR $T268741[esp+568]
	push	eax
	mov	ecx, ebp
	call	?getName@CvCity@@QBE?BVCvString@@XZ	; CvCity::getName
	mov	BYTE PTR __$EHRec$[esp+576], 2
	mov	ecx, eax
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8
	lea	ecx, DWORD PTR $T268741[esp+568]
	mov	BYTE PTR __$EHRec$[esp+576], 0
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 4359 : 						lua_setfield(L, t, "ToCityName");

	push	OFFSET $SG230505
	push	edi
	push	esi
	call	_lua_setfield

; 4360 : 						CvLuaCity::Push(L, pDestCity);

	push	ebp
	push	esi
	call	?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push

; 4361 : 						lua_setfield(L, t, "ToCity");

	push	OFFSET $SG230506
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 32					; 00000020H

; 4362 : #ifdef AUI_WARNING_FIXES
; 4363 : 						lua_pushinteger(L, pPlayerTrade->GetTradeConnectionValueTimes100(kConnection, YIELD_GOLD, true));
; 4364 : 						lua_setfield(L, t, "FromGPT");
; 4365 : 						lua_pushinteger(L, pOtherPlayerTrade->GetTradeConnectionValueTimes100(kConnection, YIELD_GOLD, false));
; 4366 : 						lua_setfield(L, t, "ToGPT");
; 4367 : 						lua_pushinteger(L, pOtherPlayerTrade->GetTradeConnectionValueTimes100(kConnection, YIELD_FOOD, false));
; 4368 : 						lua_setfield(L, t, "ToFood");
; 4369 : 						lua_pushinteger(L, pOtherPlayerTrade->GetTradeConnectionValueTimes100(kConnection, YIELD_PRODUCTION, false));
; 4370 : 						lua_setfield(L, t, "ToProduction");
; 4371 : 						lua_pushinteger(L, pOtherPlayerTrade->GetTradeConnectionValueTimes100(kConnection, YIELD_SCIENCE, true));
; 4372 : 						lua_setfield(L, t, "FromScience");
; 4373 : 						lua_pushinteger(L, pOtherPlayerTrade->GetTradeConnectionValueTimes100(kConnection, YIELD_SCIENCE, false));
; 4374 : #else
; 4375 : 						lua_pushinteger(L, pkPlayer->GetTrade()->GetTradeConnectionValueTimes100(kConnection, YIELD_GOLD, true));

	push	1
	push	2
	lea	ecx, DWORD PTR _kConnection$230492[esp+576]
	push	ecx
	mov	ecx, DWORD PTR _pkInstance$268757[esp+580]
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	ecx, eax
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	push	eax
	push	esi
	call	_lua_pushinteger

; 4376 : 						lua_setfield(L, t, "FromGPT");

	push	OFFSET $SG230507
	push	edi
	push	esi
	call	_lua_setfield

; 4377 : 						lua_pushinteger(L, GET_PLAYER(eOtherPlayer).GetTrade()->GetTradeConnectionValueTimes100(kConnection, YIELD_GOLD, false));

	mov	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	eax, DWORD PTR tv1022[esp+588]
	add	esp, 20					; 00000014H
	push	0
	lea	ecx, DWORD PTR [eax+edx]
	push	2
	lea	edx, DWORD PTR _kConnection$230492[esp+576]
	push	edx
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	ecx, eax
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	push	eax
	push	esi
	call	_lua_pushinteger

; 4378 : 						lua_setfield(L, t, "ToGPT");

	push	OFFSET $SG230508
	push	edi
	push	esi
	call	_lua_setfield

; 4379 : 						lua_pushinteger(L, GET_PLAYER(eOtherPlayer).GetTrade()->GetTradeConnectionValueTimes100(kConnection, YIELD_FOOD, false));

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	ecx, DWORD PTR tv1022[esp+588]
	add	esp, 20					; 00000014H
	push	0
	push	0
	lea	edx, DWORD PTR _kConnection$230492[esp+576]
	add	ecx, eax
	push	edx
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	ecx, eax
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	push	eax
	push	esi
	call	_lua_pushinteger

; 4380 : 						lua_setfield(L, t, "ToFood");

	push	OFFSET $SG230509
	push	edi
	push	esi
	call	_lua_setfield

; 4381 : 						lua_pushinteger(L, GET_PLAYER(eOtherPlayer).GetTrade()->GetTradeConnectionValueTimes100(kConnection, YIELD_PRODUCTION, false));

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	ecx, DWORD PTR tv1022[esp+588]
	add	esp, 20					; 00000014H
	push	0
	push	1
	lea	edx, DWORD PTR _kConnection$230492[esp+576]
	add	ecx, eax
	push	edx
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	ecx, eax
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	push	eax
	push	esi
	call	_lua_pushinteger

; 4382 : 						lua_setfield(L, t, "ToProduction");

	push	OFFSET $SG230510
	push	edi
	push	esi
	call	_lua_setfield

; 4383 : 						lua_pushinteger(L,  GET_PLAYER(eOtherPlayer).GetTrade()->GetTradeConnectionValueTimes100(kConnection, YIELD_SCIENCE, true));

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	ecx, DWORD PTR tv1022[esp+588]
	add	esp, 20					; 00000014H
	push	1
	push	3
	lea	edx, DWORD PTR _kConnection$230492[esp+576]
	add	ecx, eax
	push	edx
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	ecx, eax
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	push	eax
	push	esi
	call	_lua_pushinteger

; 4384 : 						lua_setfield(L, t, "FromScience");

	push	OFFSET $SG230511
	push	edi
	push	esi
	call	_lua_setfield

; 4385 : 						lua_pushinteger(L, GET_PLAYER(eOtherPlayer).GetTrade()->GetTradeConnectionValueTimes100(kConnection, YIELD_SCIENCE, false));

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	ecx, DWORD PTR tv1022[esp+588]
	add	esp, 20					; 00000014H
	push	0
	push	3
	lea	edx, DWORD PTR _kConnection$230492[esp+576]
	add	ecx, eax
	push	edx
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	ecx, eax
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	push	eax
	push	esi
	call	_lua_pushinteger

; 4386 : #endif
; 4387 : 						lua_setfield(L, t, "ToScience");

	push	OFFSET $SG230512
	push	edi
	push	esi
	call	_lua_setfield

; 4388 : 
; 4389 : 						ReligionTypes eToReligion = NO_RELIGION;

	or	eax, -1

; 4390 : 						int iToPressure = 0;

	xor	ecx, ecx
	add	esp, 20					; 00000014H
	mov	DWORD PTR _eToReligion$230513[esp+568], eax

; 4391 : 						ReligionTypes eFromReligion = NO_RELIGION;

	mov	DWORD PTR _eFromReligion$230515[esp+568], eax
	mov	DWORD PTR _iToPressure$230514[esp+568], ecx

; 4392 : 						int iFromPressure = 0;

	mov	DWORD PTR _iFromPressure$230516[esp+568], ecx

; 4393 : 
; 4394 : 						pOriginCity->GetCityReligions()->WouldExertTradeRoutePressureToward(pDestCity, eToReligion, iToPressure);

	lea	eax, DWORD PTR _iToPressure$230514[esp+568]
	push	eax
	lea	ecx, DWORD PTR _eToReligion$230513[esp+572]
	push	ecx
	push	ebp
	mov	ecx, ebx
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?WouldExertTradeRoutePressureToward@CvCityReligions@@QAE_NPAVCvCity@@AAW4ReligionTypes@@AAH@Z ; CvCityReligions::WouldExertTradeRoutePressureToward

; 4395 : 						pDestCity->GetCityReligions()->WouldExertTradeRoutePressureToward(pOriginCity, eFromReligion, iFromPressure);

	lea	edx, DWORD PTR _iFromPressure$230516[esp+568]
	push	edx
	lea	eax, DWORD PTR _eFromReligion$230515[esp+572]
	push	eax
	push	ebx
	mov	ecx, ebp
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?WouldExertTradeRoutePressureToward@CvCityReligions@@QAE_NPAVCvCity@@AAW4ReligionTypes@@AAH@Z ; CvCityReligions::WouldExertTradeRoutePressureToward

; 4396 : 
; 4397 : 						if (iTurnsLeft < 0)

	cmp	DWORD PTR _iTurnsLeft$230493[esp+568], 0
	jge	SHORT $LN155@lGetTradeR@4

; 4398 : 						{
; 4399 : 							int iTradeReligionModifer = pkPlayer->GetPlayerTraits()->GetTradeReligionModifier();

	mov	ecx, DWORD PTR _pkInstance$268757[esp+568]
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	eax, DWORD PTR [eax+324]

; 4400 : 							if (iTradeReligionModifer != 0)

	test	eax, eax
	je	SHORT $LN155@lGetTradeR@4

; 4401 : 							{
; 4402 : 								iToPressure *= 100 + iTradeReligionModifer;

	lea	ecx, DWORD PTR [eax+100]
	imul	ecx, DWORD PTR _iToPressure$230514[esp+568]

; 4403 : 								iToPressure /= 100;

	mov	eax, 1374389535				; 51eb851fH
	imul	ecx
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	jmp	SHORT $LN1@lGetTradeR@4
$LN155@lGetTradeR@4:
	mov	eax, DWORD PTR _iToPressure$230514[esp+568]
$LN1@lGetTradeR@4:

; 4404 : 							}
; 4405 : 						}
; 4406 : 
; 4407 : 						// Internally pressure is now 10 times greater than what is shown to user
; 4408 : 						iToPressure /= GC.getRELIGION_MISSIONARY_PRESSURE_MULTIPLIER();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7900
	cdq
	idiv	ecx
	mov	DWORD PTR _iToPressure$230514[esp+568], eax

; 4409 : 						iFromPressure /= GC.getRELIGION_MISSIONARY_PRESSURE_MULTIPLIER();

	mov	eax, DWORD PTR _iFromPressure$230516[esp+568]
	cdq
	idiv	ecx

; 4410 : 
; 4411 : 						lua_pushinteger(L, eToReligion);

	mov	ecx, DWORD PTR _eToReligion$230513[esp+568]
	push	ecx
	push	esi
	mov	DWORD PTR _iFromPressure$230516[esp+576], eax
	call	_lua_pushinteger

; 4412 : 						lua_setfield(L, t, "ToReligion");

	push	OFFSET $SG230520
	push	edi
	push	esi
	call	_lua_setfield

; 4413 : 						lua_pushinteger(L, iToPressure);

	mov	edx, DWORD PTR _iToPressure$230514[esp+588]
	push	edx
	push	esi
	call	_lua_pushinteger

; 4414 : 						lua_setfield(L, t, "ToPressure");

	push	OFFSET $SG230521
	push	edi
	push	esi
	call	_lua_setfield

; 4415 : 						lua_pushinteger(L, eFromReligion);

	mov	eax, DWORD PTR _eFromReligion$230515[esp+608]
	push	eax
	push	esi
	call	_lua_pushinteger

; 4416 : 						lua_setfield(L, t, "FromReligion");

	push	OFFSET $SG230522
	push	edi
	push	esi
	call	_lua_setfield

; 4417 : 						lua_pushinteger(L, iFromPressure);

	mov	ecx, DWORD PTR _iFromPressure$230516[esp+628]
	push	ecx
	push	esi
	call	_lua_pushinteger
	add	esp, 68					; 00000044H

; 4418 : 						lua_setfield(L, t, "FromPressure");

	push	OFFSET $SG230523
	push	edi
	push	esi
	call	_lua_setfield

; 4419 : 
; 4420 : 						int iToDelta = pOriginCity->GetCityCulture()->GetBaseTourism() * pOriginCity->GetCityCulture()->GetTourismMultiplier(eOtherPlayer, true, true, false, true, true);

	mov	edx, DWORD PTR _ui$230462[esp+580]
	add	esp, 12					; 0000000cH
	push	1
	push	1
	push	0
	push	1
	push	1
	push	edx
	mov	ecx, ebx
	call	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ ; CvCity::GetCityCulture
	mov	ecx, eax
	call	?GetTourismMultiplier@CvCityCulture@@QBEHW4PlayerTypes@@_N1111@Z ; CvCityCulture::GetTourismMultiplier
	mov	ecx, ebx
	mov	DWORD PTR tv649[esp+568], eax
	call	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ ; CvCity::GetCityCulture
	mov	ecx, eax
	call	?GetBaseTourism@CvCityCulture@@QAEHXZ	; CvCityCulture::GetBaseTourism
	mov	ecx, DWORD PTR tv649[esp+568]

; 4421 : 						int iFromDelta = pDestCity->GetCityCulture()->GetBaseTourism() * pDestCity->GetCityCulture()->GetTourismMultiplier(pkPlayer->GetID(), true, true, false, true, true);

	mov	edx, DWORD PTR _pkInstance$268757[esp+568]
	imul	ecx, eax
	mov	eax, DWORD PTR [edx+44]
	push	1
	push	1
	push	0
	push	1
	push	1
	mov	DWORD PTR _iToDelta$230524[esp+588], ecx
	push	eax
	mov	ecx, ebp
	call	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ ; CvCity::GetCityCulture
	mov	ecx, eax
	call	?GetTourismMultiplier@CvCityCulture@@QBEHW4PlayerTypes@@_N1111@Z ; CvCityCulture::GetTourismMultiplier
	mov	ecx, ebp
	mov	DWORD PTR tv651[esp+568], eax
	call	?GetCityCulture@CvCity@@QBEPAVCvCityCulture@@XZ ; CvCity::GetCityCulture
	mov	ecx, eax
	call	?GetBaseTourism@CvCityCulture@@QAEHXZ	; CvCityCulture::GetBaseTourism
	mov	ecx, DWORD PTR tv651[esp+568]
	imul	ecx, eax

; 4422 : 						lua_pushinteger(L, iFromDelta);

	push	ecx
	push	esi
	call	_lua_pushinteger

; 4423 : 						lua_setfield(L, t, "FromTourism");

	push	OFFSET $SG230526
	push	edi
	push	esi
	call	_lua_setfield

; 4424 : 						lua_pushinteger(L, iToDelta);

	mov	eax, DWORD PTR _iToDelta$230524[esp+588]
	push	eax
	push	esi
	call	_lua_pushinteger

; 4425 : 						lua_setfield(L, t, "ToTourism");

	push	OFFSET $SG230527
	push	edi
	push	esi
	call	_lua_setfield

; 4426 : 
; 4427 : 						lua_pushinteger(L, iTurnsLeft);

	mov	ecx, DWORD PTR _iTurnsLeft$230493[esp+608]
	push	ecx
	push	esi
	call	_lua_pushinteger

; 4428 : 						lua_setfield(L, t, "TurnsLeft");

	push	OFFSET $SG230528
	push	edi
	push	esi
	call	_lua_setfield

; 4429 : 
; 4430 : 						lua_rawseti(L, -2, index++);

	mov	edi, DWORD PTR _index$[esp+628]
	push	edi
	push	-2					; fffffffeH
	push	esi
	call	_lua_rawseti

; 4431 : 
; 4432 : 
; 4433 : 					}

	mov	eax, DWORD PTR _kConnection$230492[esp+684]
	inc	edi
	lea	edx, DWORD PTR _kConnection$230492[esp+696]
	add	esp, 72					; 00000048H
	mov	DWORD PTR _index$[esp+568], edi
	mov	DWORD PTR __$EHRec$[esp+576], -1
	cmp	eax, edx
	je	SHORT $LN156@lGetTradeR@4
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN156@lGetTradeR@4:
	mov	edi, DWORD PTR _eDomain$230475[esp+568]
$LN6@lGetTradeR@4:

; 4311 : 					TradeConnectionType eConnection = NUM_TRADE_CONNECTION_TYPES;
; 4312 : 					for (uint uiConnectionTypes = 0; uiConnectionTypes < NUM_TRADE_CONNECTION_TYPES; uiConnectionTypes++)

	mov	eax, DWORD PTR _uiConnectionTypes$230484[esp+568]
	inc	eax
	mov	DWORD PTR _uiConnectionTypes$230484[esp+568], eax
	cmp	eax, 3
	jb	$LL162@lGetTradeR@4
$LN10@lGetTradeR@4:

; 4297 : 				{
; 4298 : 					continue;
; 4299 : 				}
; 4300 : 
; 4301 : 				DomainTypes eDomain = NO_DOMAIN;
; 4302 : 				for (eDomain = (DomainTypes)0; eDomain < NUM_DOMAIN_TYPES; eDomain = (DomainTypes)(eDomain + 1))

	inc	edi
	cmp	edi, 5
	mov	DWORD PTR _eDomain$230475[esp+568], edi
	jl	$LL11@lGetTradeR@4
	mov	edi, DWORD PTR tv1022[esp+568]
$LN14@lGetTradeR@4:

; 4283 : 			{
; 4284 : 				continue;
; 4285 : 			}
; 4286 : 
; 4287 : #ifdef AUI_WARNING_FIXES
; 4288 : 			const CvPlayerTrade* pOtherPlayerTrade = GET_PLAYER(eOtherPlayer).GetTrade();
; 4289 : #endif
; 4290 : 
; 4291 : 			int iDestCityLoop;
; 4292 : 			CvCity* pDestCity = NULL;
; 4293 : 			for (pDestCity = GET_PLAYER(eOtherPlayer).firstCity(&iDestCityLoop); pDestCity != NULL; pDestCity = GET_PLAYER(eOtherPlayer).nextCity(&iDestCityLoop))

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	0
	lea	edx, DWORD PTR _iDestCityLoop$230469[esp+572]
	lea	ecx, DWORD PTR [edi+eax]
	push	edx
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	ebp, eax
	test	ebp, ebp
	jne	$LL15@lGetTradeR@4
$LN19@lGetTradeR@4:

; 4271 : 	{
; 4272 : 		PlayerTypes eOtherPlayer = NO_PLAYER;
; 4273 : 		for (uint ui = 0; ui < MAX_CIV_PLAYERS; ui++)

	inc	DWORD PTR _ui$230462[esp+568]
	add	edi, 63236				; 0000f704H
	mov	DWORD PTR tv1022[esp+568], edi
	cmp	edi, 3983868				; 003cc9fcH
	jb	$LL164@lGetTradeR@4
	mov	ecx, DWORD PTR _pkInstance$268757[esp+568]
	push	0
	lea	eax, DWORD PTR _iOriginCityLoop$[esp+572]
	push	eax
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	ebx, eax
	test	ebx, ebx
	jne	$LL23@lGetTradeR@4
	pop	ebp
$LN154@lGetTradeR@4:

; 4434 : 				}
; 4435 : 			}
; 4436 : 		}
; 4437 : 	}
; 4438 : 
; 4439 : 	return 1;
; 4440 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+564]
	pop	edi
	pop	esi
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 552				; 00000228H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetTradeRoutesAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _kConnection$230492[ebp]
	jmp	??1TradeConnection@@QAE@XZ
__unwindfunclet$?lGetTradeRoutesAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR $T268740[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetTradeRoutesAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z$2:
	lea	ecx, DWORD PTR $T268741[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetTradeRoutesAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetTradeRoutesAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetTradeRoutesAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetTradeRoutesAvailable
PUBLIC	?lGetActiveQuestForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetActiveQuestForPlayer
; Function compile flags: /Ogtpy
;	COMDAT ?lGetActiveQuestForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetActiveQuestForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetActiveQuestForPlayer, COMDAT

; 6290 : 	return lIsMinorCivActiveQuestForPlayer(L);

	jmp	?lIsMinorCivActiveQuestForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsMinorCivActiveQuestForPlayer
?lGetActiveQuestForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetActiveQuestForPlayer
_TEXT	ENDS
PUBLIC	?lGetCurrentCultureBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCurrentCultureBonus
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCurrentCultureBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCurrentCultureBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetCurrentCultureBonus, COMDAT

; 6553 : 	return lGetMinorCivCurrentCultureBonus(L);

	jmp	?lGetMinorCivCurrentCultureBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivCurrentCultureBonus
?lGetCurrentCultureBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetCurrentCultureBonus
_TEXT	ENDS
PUBLIC	?lClearResearchQueue@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lClearResearchQueue
EXTRN	?clearResearchQueue@CvPlayer@@QAEXXZ:PROC	; CvPlayer::clearResearchQueue
; Function compile flags: /Ogtpy
;	COMDAT ?lClearResearchQueue@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lClearResearchQueue@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lClearResearchQueue, COMDAT

; 7365 : 	return BasicLuaMethod(L, &CvPlayerAI::clearResearchQueue);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?clearResearchQueue@CvPlayer@@QAEXXZ ; CvPlayer::clearResearchQueue
	push	eax
	call	?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaPlayer@@VCvPlayerAI@@@@KAHPAUlua_State@@P8CvPlayerAI@@AEXXZ@Z ; CvLuaMethodWrapper<CvLuaPlayer,CvPlayerAI>::BasicLuaMethod
	add	esp, 8

; 7366 : }

	ret	0
?lClearResearchQueue@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lClearResearchQueue
_TEXT	ENDS
PUBLIC	?lGetRecommendedWorkerPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetRecommendedWorkerPlots
EXTRN	?EvaluateBuilder@CvBuilderTaskingAI@@QAE_NPAVCvUnit@@PAUBuilderDirective@@I_N2@Z:PROC ; CvBuilderTaskingAI::EvaluateBuilder
EXTRN	?GetBuilderTaskingAI@CvPlayer@@QBEPAVCvBuilderTaskingAI@@XZ:PROC ; CvPlayer::GetBuilderTaskingAI
EXTRN	?UnwrapUnitPointer@CvGlobals@@QAEPAVCvUnit@@PAVICvUnit1@@@Z:PROC ; CvGlobals::UnwrapUnitPointer
EXTRN	?GetWorkRate@CvUnitEntry@@QBEHXZ:PROC		; CvUnitEntry::GetWorkRate
EXTRN	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z:PROC ; CvGlobals::getUnitInfo
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvdllinterfaces.h
xdata$x	SEGMENT
__unwindtable$?lGetRecommendedWorkerPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetRecommendedWorkerPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetRecommendedWorkerPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z$1
__ehfuncinfo$?lGetRecommendedWorkerPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?lGetRecommendedWorkerPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetRecommendedWorkerPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ui$234590 = -124					; size = 4
tv827 = -120						; size = 4
_pkInstance$269076 = -120				; size = 4
_iPositionIndex$ = -120					; size = 4
_bUseDirective$ = -116					; size = 4
_pUnit$234569 = -116					; size = 4
_selectedUnits$ = -112					; size = 4
_pDirectivePlots$ = -108				; size = 16
_aDirective$ = -92					; size = 80
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetRecommendedWorkerPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetRecommendedWorkerPlots, COMDAT

; 8692 : {

	push	-1
	push	__ehhandler$?lGetRecommendedWorkerPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 112				; 00000070H
	push	ebx
	push	ebp
	push	esi

; 8693 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+132]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$269076[esp+152], 0
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN141@lGetRecomm
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN141@lGetRecomm
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$269076[esp+140], eax
	test	eax, eax
	je	SHORT $LN141@lGetRecomm
	xor	bl, bl
$LN141@lGetRecomm:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN30@lGetRecomm
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN30@lGetRecomm:

; 8694 : 
; 8695 : 	CvUnit* pWorkerUnit = NULL;
; 8696 : 
; 8697 : 	//Get first selected worker.
; 8698 : 	CvEnumerator<ICvUnit1> selectedUnits(GC.GetEngineUserInterface()->GetSelectedUnits());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+112]
	call	edx
	mov	ebp, eax
	mov	DWORD PTR _selectedUnits$[esp+140], ebp
	mov	DWORD PTR __$EHRec$[esp+148], 0
	npad	4
$LL16@lGetRecomm:

; 8699 : 	while(selectedUnits.MoveNext())

	test	ebp, ebp
	je	$LN138@lGetRecomm
	mov	eax, DWORD PTR [ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ebp
	call	ecx
	test	al, al
	je	SHORT $LN138@lGetRecomm

; 8700 : 	{
; 8701 : 		auto_ptr<ICvUnit1> pUnit(selectedUnits.GetCurrent());

	lea	ecx, DWORD PTR _selectedUnits$[esp+140]
	call	?GetCurrent@?$CvEnumerator@VICvUnit1@@@@QAEPAVICvUnit1@@XZ ; CvEnumerator<ICvUnit1>::GetCurrent
	mov	edi, eax
	mov	DWORD PTR _pUnit$234569[esp+140], edi
	mov	BYTE PTR __$EHRec$[esp+148], 1

; 8702 : 		if(pUnit.get() != NULL)

	test	edi, edi
	je	SHORT $LN13@lGetRecomm

; 8703 : 		{
; 8704 : 			CvUnitEntry* pUnitEntry = GC.getUnitInfo(pUnit->GetUnitType());

	mov	edx, DWORD PTR [edi]
	mov	eax, DWORD PTR [edx+120]
	push	edi
	call	eax
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z ; CvGlobals::getUnitInfo

; 8705 : 			if(pUnitEntry && pUnitEntry->GetWorkRate() > 0)

	test	eax, eax
	je	SHORT $LN13@lGetRecomm
	mov	ecx, eax
	call	?GetWorkRate@CvUnitEntry@@QBEHXZ	; CvUnitEntry::GetWorkRate
	test	eax, eax
	jg	SHORT $LN134@lGetRecomm
$LN13@lGetRecomm:

; 8709 : 			}
; 8710 : 		}
; 8711 : 	}

	mov	BYTE PTR __$EHRec$[esp+148], 0
	test	edi, edi
	je	SHORT $LL16@lGetRecomm
	mov	ecx, DWORD PTR [edi]
	mov	edx, DWORD PTR [ecx+4]
	push	edi
	call	edx
	jmp	SHORT $LL16@lGetRecomm
$LN134@lGetRecomm:

; 8706 : 			{
; 8707 : 				pWorkerUnit = GC.UnwrapUnitPointer(pUnit.get());

	push	edi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?UnwrapUnitPointer@CvGlobals@@QAEPAVCvUnit@@PAVICvUnit1@@@Z ; CvGlobals::UnwrapUnitPointer
	mov	ebx, eax

; 8708 : 				break;

	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR [eax+4]
	push	edi
	mov	BYTE PTR __$EHRec$[esp+152], 0
	call	ecx

; 8712 : 
; 8713 : 	//Early out
; 8714 : 	if(pWorkerUnit == NULL)

	test	ebx, ebx
	jne	SHORT $LN12@lGetRecomm
$LN138@lGetRecomm:

; 8715 : 	{
; 8716 : 		return 0;

	mov	DWORD PTR __$EHRec$[esp+148], -1
	test	ebp, ebp
	je	SHORT $LN73@lGetRecomm
	mov	edx, DWORD PTR [ebp]
	mov	eax, DWORD PTR [edx+4]
	push	ebp
	call	eax
$LN73@lGetRecomm:
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx

; 8766 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+124]
	mov	DWORD PTR fs:0, ecx
	add	esp, 124				; 0000007cH
	ret	0
$LN12@lGetRecomm:

; 8717 : 	}
; 8718 : 
; 8719 : 	const size_t cuiMaxDirectives = 3;
; 8720 : 	const size_t cuiDirectiveSize = 4;
; 8721 : 	BuilderDirective aDirective[ cuiDirectiveSize ];

	mov	ecx, 3
	lea	eax, DWORD PTR _aDirective$[esp+148]
	npad	1
$LL77@lGetRecomm:
	or	edx, -1
	mov	WORD PTR [eax+4], dx
	or	edx, edx
	mov	WORD PTR [eax+6], dx
	or	edx, -1
	mov	DWORD PTR [eax-8], 6
	mov	DWORD PTR [eax-4], -1
	mov	DWORD PTR [eax], -1
	mov	WORD PTR [eax+8], dx
	add	eax, 20					; 00000014H
	sub	ecx, 1
	jns	SHORT $LL77@lGetRecomm

; 8722 : 	bool bUseDirective[cuiDirectiveSize];
; 8723 : 	CvPlot* pDirectivePlots[cuiDirectiveSize] = {0};
; 8724 : 
; 8725 : 	pkPlayer->GetBuilderTaskingAI()->EvaluateBuilder(pWorkerUnit, aDirective, cuiDirectiveSize, true);

	mov	ecx, DWORD PTR _pkInstance$269076[esp+140]
	xor	eax, eax
	push	eax
	push	1
	mov	DWORD PTR _pDirectivePlots$[esp+152], eax
	mov	DWORD PTR _pDirectivePlots$[esp+156], eax
	mov	DWORD PTR _pDirectivePlots$[esp+160], eax
	push	4
	lea	eax, DWORD PTR _aDirective$[esp+152]
	push	eax
	push	ebx
	mov	DWORD PTR _pDirectivePlots$[esp+160], 0
	call	?GetBuilderTaskingAI@CvPlayer@@QBEPAVCvBuilderTaskingAI@@XZ ; CvPlayer::GetBuilderTaskingAI
	mov	ecx, eax
	call	?EvaluateBuilder@CvBuilderTaskingAI@@QAE_NPAVCvUnit@@PAUBuilderDirective@@I_N2@Z ; CvBuilderTaskingAI::EvaluateBuilder

; 8726 : 
; 8727 : 	for(uint ui = 0; ui < cuiDirectiveSize; ui++)

	xor	ecx, ecx
	lea	eax, DWORD PTR _aDirective$[esp+140]
	mov	DWORD PTR _ui$234590[esp+140], ecx
	mov	DWORD PTR tv827[esp+140], eax
	npad	1
$LL11@lGetRecomm:

; 8728 : 	{
; 8729 : 		bUseDirective[ui] = false;
; 8730 : 
; 8731 : 		if(aDirective[ui].m_eDirective != BuilderDirective::NUM_DIRECTIVES)

	cmp	DWORD PTR [eax], 6
	mov	BYTE PTR _bUseDirective$[esp+ecx+140], 0
	je	$LN10@lGetRecomm

; 8732 : 		{
; 8733 : 			CvPlot* pPlot = GC.getMap().plot(aDirective[ui].m_sX, aDirective[ui].m_sY);

	movsx	ebx, WORD PTR [eax+14]
	movsx	eax, WORD PTR [eax+12]
	cmp	eax, -2147483647			; 80000001H
	je	$LN10@lGetRecomm
	cmp	ebx, -2147483647			; 80000001H
	je	$LN10@lGetRecomm
	mov	ebp, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	dl, BYTE PTR [ebp+4056]
	mov	ecx, DWORD PTR [ebp+4020]
	test	dl, dl
	je	SHORT $LN94@lGetRecomm
	test	eax, eax
	jge	SHORT $LN96@lGetRecomm
	cdq
	idiv	ecx
	mov	edi, edx
	add	edi, ecx
	jmp	SHORT $LN98@lGetRecomm
$LN96@lGetRecomm:
	cmp	eax, ecx
	jl	SHORT $LN94@lGetRecomm
	cdq
	idiv	ecx
	mov	edi, edx
	jmp	SHORT $LN98@lGetRecomm
$LN94@lGetRecomm:
	mov	edi, eax
$LN98@lGetRecomm:
	mov	al, BYTE PTR [ebp+4057]
	mov	ebp, DWORD PTR [ebp+4024]
	test	al, al
	je	SHORT $LN143@lGetRecomm
	test	ebx, ebx
	jge	SHORT $LN106@lGetRecomm
	mov	eax, ebx
	cdq
	idiv	ebp
	add	edx, ebp
	jmp	SHORT $LN108@lGetRecomm
$LN106@lGetRecomm:
	cmp	ebx, ebp
	jl	SHORT $LN143@lGetRecomm
	mov	eax, ebx
	cdq
	idiv	ebp
	jmp	SHORT $LN108@lGetRecomm
$LN143@lGetRecomm:
	mov	edx, ebx
$LN108@lGetRecomm:
	test	edi, edi
	jl	SHORT $LN10@lGetRecomm
	cmp	edi, ecx
	jge	SHORT $LN10@lGetRecomm
	test	edx, edx
	jl	SHORT $LN10@lGetRecomm
	cmp	edx, ebp
	jge	SHORT $LN10@lGetRecomm
	imul	ecx, edx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	add	ecx, edi
	imul	ecx, 484				; 000001e4H
	add	ecx, DWORD PTR [edx+4068]
	mov	edi, ecx

; 8734 : 			if(pPlot != NULL)

	je	SHORT $LN10@lGetRecomm

; 8735 : 			{
; 8736 : 				// Don't recommend plots that are already improved
; 8737 : 				if(aDirective[ui].m_eDirective != BuilderDirective::BUILD_IMPROVEMENT || pPlot->getImprovementType() == NO_IMPROVEMENT)

	mov	eax, DWORD PTR tv827[esp+140]
	cmp	DWORD PTR [eax], 1
	jne	SHORT $LN5@lGetRecomm
	call	?getImprovementType@CvPlot@@QBE?AW4ImprovementTypes@@XZ ; CvPlot::getImprovementType
	cmp	eax, -1
	jne	SHORT $LN10@lGetRecomm
$LN5@lGetRecomm:

; 8738 : 				{
; 8739 : 					pDirectivePlots[ui] = pPlot;

	mov	eax, DWORD PTR _ui$234590[esp+140]
	mov	DWORD PTR _pDirectivePlots$[esp+eax*4+140], edi

; 8740 : 					bUseDirective[ui] = true;

	mov	BYTE PTR _bUseDirective$[esp+eax+140], 1
$LN10@lGetRecomm:
	mov	ecx, DWORD PTR _ui$234590[esp+140]
	mov	eax, DWORD PTR tv827[esp+140]
	inc	ecx
	add	eax, 20					; 00000014H
	mov	DWORD PTR _ui$234590[esp+140], ecx
	mov	DWORD PTR tv827[esp+140], eax
	cmp	ecx, 4
	jb	$LL11@lGetRecomm

; 8741 : 				}
; 8742 : 			}
; 8743 : 		}
; 8744 : 	}
; 8745 : 
; 8746 : 	lua_createtable(L, cuiMaxDirectives, 0);

	push	0
	push	3
	push	esi
	call	_lua_createtable

; 8747 : 	int iPositionIndex = lua_gettop(L);

	push	esi
	call	_lua_gettop
	add	esp, 16					; 00000010H
	mov	DWORD PTR _iPositionIndex$[esp+140], eax

; 8748 : 	int i = 1;

	mov	ebp, 1

; 8749 : 
; 8750 : 	for(uint ui = 0; ui < cuiDirectiveSize && i < cuiMaxDirectives; ui++)

	xor	edi, edi
	lea	ebx, DWORD PTR _aDirective$[esp+144]
$LL4@lGetRecomm:
	cmp	ebp, 3
	jae	SHORT $LN2@lGetRecomm

; 8751 : 	{
; 8752 : 		if(bUseDirective[ui] == true)

	cmp	BYTE PTR _bUseDirective$[esp+edi+140], 1
	jne	SHORT $LN3@lGetRecomm

; 8753 : 		{
; 8754 : 			lua_createtable(L, 0, 2);

	push	2
	push	0
	push	esi
	call	_lua_createtable

; 8755 : 			CvLuaPlot::Push(L, pDirectivePlots[ui]);

	mov	ecx, DWORD PTR _pDirectivePlots$[esp+edi*4+152]
	push	ecx
	push	esi
	call	?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push

; 8756 : 			lua_setfield(L, -2, "plot");

	push	OFFSET $SG234606
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 8757 : 			lua_pushinteger(L, aDirective[ui].m_eBuild);

	mov	edx, DWORD PTR [ebx]
	push	edx
	push	esi
	call	_lua_pushinteger

; 8758 : 			lua_setfield(L, -2, "buildType");

	push	OFFSET $SG234607
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 8759 : 
; 8760 : 			lua_rawseti(L, iPositionIndex, i);

	mov	eax, DWORD PTR _iPositionIndex$[esp+192]
	push	ebp
	push	eax
	push	esi
	call	_lua_rawseti
	add	esp, 64					; 00000040H

; 8761 : 			i++;

	inc	ebp
$LN3@lGetRecomm:
	inc	edi
	add	ebx, 20					; 00000014H
	cmp	edi, 4
	jb	SHORT $LL4@lGetRecomm
$LN2@lGetRecomm:

; 8762 : 		}
; 8763 : 	}
; 8764 : 
; 8765 : 	return 1;

	mov	eax, DWORD PTR _selectedUnits$[esp+140]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	push	eax
	mov	DWORD PTR __$EHRec$[esp+152], -1
	call	edx

; 8766 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+140]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 124				; 0000007cH
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetRecommendedWorkerPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _selectedUnits$[ebp]
	jmp	??1?$CvEnumerator@VICvUnit1@@@@QAE@XZ
__unwindfunclet$?lGetRecommendedWorkerPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR _pUnit$234569[ebp]
	jmp	??1?$auto_ptr@VICvUnit1@@@std@@QAE@XZ	; std::auto_ptr<ICvUnit1>::~auto_ptr<ICvUnit1>
__ehhandler$?lGetRecommendedWorkerPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetRecommendedWorkerPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetRecommendedWorkerPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetRecommendedWorkerPlots
PUBLIC	??0?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ ; std::vector<CvString,std::allocator<CvString> >::vector<CvString,std::allocator<CvString> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??0?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ PROC ; std::vector<CvString,std::allocator<CvString> >::vector<CvString,std::allocator<CvString> >, COMDAT
; _this$ = ecx

; 470  : 		{	// construct empty vector

	mov	eax, ecx

; 471  : 		_Buy(0);

	xor	ecx, ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx

; 472  : 		}

	ret	0
??0?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ ENDP ; std::vector<CvString,std::allocator<CvString> >::vector<CvString,std::allocator<CvString> >
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator::operator++
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 474  : 			{	// preincrement

	push	esi
	mov	esi, ecx

; 475  : 			++(*(const_iterator *)this);

	call	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::const_iterator::_Inc

; 476  : 			return (*this);

	mov	eax, esi
	pop	esi

; 477  : 			}

	ret	0
??Eiterator@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??0?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QAE@XZ ; CvWeightedVector<CvPlot *,800,1>::CvWeightedVector<CvPlot *,800,1>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvweightedvector.h
;	COMDAT ??0?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QAE@XZ
_TEXT	SEGMENT
??0?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QAE@XZ PROC	; CvWeightedVector<CvPlot *,800,1>::CvWeightedVector<CvPlot *,800,1>, COMDAT
; _this$ = ecx

; 52   : 	CvWeightedVector(void)

	mov	eax, ecx
	lea	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [eax+4], 0
	mov	DWORD PTR [eax+8], 800			; 00000320H
	mov	DWORD PTR [eax], ecx

; 53   : 	{
; 54   : 	};

	ret	0
??0?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QAE@XZ ENDP	; CvWeightedVector<CvPlot *,800,1>::CvWeightedVector<CvPlot *,800,1>
_TEXT	ENDS
PUBLIC	??1?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QAE@XZ ; CvWeightedVector<CvPlot *,800,1>::~CvWeightedVector<CvPlot *,800,1>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QAE@XZ
_TEXT	SEGMENT
??1?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QAE@XZ PROC	; CvWeightedVector<CvPlot *,800,1>::~CvWeightedVector<CvPlot *,800,1>, COMDAT
; _this$ = ecx

; 59   : 	};

	mov	eax, DWORD PTR [ecx]
	add	ecx, 12					; 0000000cH
	cmp	eax, ecx
	je	SHORT $LN6@CvWeighted
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	pop	ecx
$LN6@CvWeighted:
	ret	0
??1?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QAE@XZ ENDP	; CvWeightedVector<CvPlot *,800,1>::~CvWeightedVector<CvPlot *,800,1>
_TEXT	ENDS
PUBLIC	??0?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ ; std::vector<Opinion,std::allocator<Opinion> >::vector<Opinion,std::allocator<Opinion> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??0?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ PROC ; std::vector<Opinion,std::allocator<Opinion> >::vector<Opinion,std::allocator<Opinion> >, COMDAT
; _this$ = ecx

; 470  : 		{	// construct empty vector

	mov	eax, ecx

; 471  : 		_Buy(0);

	xor	ecx, ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx

; 472  : 		}

	ret	0
??0?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ ENDP ; std::vector<Opinion,std::allocator<Opinion> >::vector<Opinion,std::allocator<Opinion> >
_TEXT	ENDS
PUBLIC	??1?$_Tree_ptr@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree_ptr<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::~_Tree_ptr<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Tree_ptr@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree_ptr@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_ptr<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::~_Tree_ptr<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >, COMDAT
; _this$ = ecx
	ret	0
??1?$_Tree_ptr@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_ptr<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::~_Tree_ptr<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >
_TEXT	ENDS
PUBLIC	?reserve@?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAEXI@Z ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::reserve
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ?reserve@?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAEXI@Z
_TEXT	SEGMENT
_uiResSize$ = 8						; size = 4
?reserve@?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAEXI@Z PROC ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::reserve, COMDAT
; _this$ = ecx

; 658  : 		GrowSizeToFit(uiResSize);

	jmp	?GrowSizeToFit@?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@IAEXI@Z ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::GrowSizeToFit
?reserve@?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAEXI@Z ENDP ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::reserve
_TEXT	ENDS
PUBLIC	?push_back@?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAEIABUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@Z ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::push_back
; Function compile flags: /Ogtpy
;	COMDAT ?push_back@?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAEIABUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@Z
_TEXT	SEGMENT
_element$ = 8						; size = 4
?push_back@?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAEIABUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@Z PROC ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::push_back, COMDAT
; _this$ = ecx

; 676  : 	unsigned int push_back(const T& element){

	push	esi
	mov	esi, ecx

; 677  : 		m_bIsResized = false;
; 678  : 		if( m_uiCurrSize == m_uiCurrMaxSize )

	mov	eax, DWORD PTR [esi+8]
	mov	BYTE PTR [esi+6412], 0
	cmp	DWORD PTR [esi+4], eax
	jne	SHORT $LN1@push_back

; 679  : 			GrowSize(m_uiCurrMaxSize);

	push	eax
	call	?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@IAEXI@Z ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::GrowSize
$LN1@push_back:

; 680  : 		new( (void*)&m_pData[m_uiCurrSize] )T(element);

	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [esi]
	lea	eax, DWORD PTR [ecx+eax*8]
	test	eax, eax
	je	SHORT $LN4@push_back
	mov	ecx, DWORD PTR _element$[esp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx
$LN4@push_back:

; 681  : 		return m_uiCurrSize++;

	mov	eax, DWORD PTR [esi+4]
	lea	edx, DWORD PTR [eax+1]
	mov	DWORD PTR [esi+4], edx
	pop	esi

; 682  : 	};

	ret	4
?push_back@?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@QAEIABUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@Z ENDP ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::push_back
_TEXT	ENDS
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::clear
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::clear, COMDAT
; _this$ = ecx

; 965  : 		{	// erase all

	push	esi
	mov	esi, ecx

; 966  : 
; 967  :  #if _HAS_ITERATOR_DEBUGGING
; 968  : 		this->_Orphan_ptr(*this, 0);
; 969  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 970  : 
; 971  : 		_Erase(_Root());

	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, esi
	call	?_Erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Erase

; 972  : 		_Root() = _Myhead, _Mysize = 0;

	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [eax+4], eax

; 973  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [eax], eax
	mov	esi, DWORD PTR [esi+4]
	mov	DWORD PTR [esi+8], esi
	pop	esi

; 974  : 		}

	ret	0
?clear@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::clear
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@W4PolicyTypes@@@std@@@std@@YAXPAW4PolicyTypes@@0AAV?$allocator@W4PolicyTypes@@@0@@Z ; std::_Destroy_range<std::allocator<enum PolicyTypes> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@W4PolicyTypes@@@std@@@std@@YAXPAW4PolicyTypes@@0AAV?$allocator@W4PolicyTypes@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@W4PolicyTypes@@@std@@@std@@YAXPAW4PolicyTypes@@0AAV?$allocator@W4PolicyTypes@@@0@@Z PROC ; std::_Destroy_range<std::allocator<enum PolicyTypes> >, COMDAT

; 225  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 226  : 	}

	ret	0
??$_Destroy_range@V?$allocator@W4PolicyTypes@@@std@@@std@@YAXPAW4PolicyTypes@@0AAV?$allocator@W4PolicyTypes@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<enum PolicyTypes> >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@VCvString@@@std@@@std@@YAXPAVCvString@@0AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<CvString> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Destroy_range@V?$allocator@VCvString@@@std@@@std@@YAXPAVCvString@@0AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@VCvString@@@std@@@std@@YAXPAVCvString@@0AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<CvString> >, COMDAT

; 232  : 	{	// destroy [_First, _Last), arbitrary type

	push	esi

; 233  : 	for (; _First != _Last; ++_First)

	mov	esi, DWORD PTR __First$[esp]
	push	edi
	mov	edi, DWORD PTR __Last$[esp+4]
	cmp	esi, edi
	je	SHORT $LN1@Destroy_ra
	npad	2
$LL3@Destroy_ra:

; 234  : 		_Al.destroy(_First);

	mov	ecx, esi
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	add	esi, 28					; 0000001cH
	cmp	esi, edi
	jne	SHORT $LL3@Destroy_ra
$LN1@Destroy_ra:
	pop	edi
	pop	esi

; 235  : 	}

	ret	0
??$_Destroy_range@V?$allocator@VCvString@@@std@@@std@@YAXPAVCvString@@0AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<CvString> >
_TEXT	ENDS
PUBLIC	??$_Uninit_fill_n@PAUOpinion@@IU1@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@IABU1@AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<Opinion *,unsigned int,Opinion,std::allocator<Opinion> >
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	SEGMENT
__catchsym$??$_Uninit_fill_n@PAUOpinion@@IU1@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@IABU1@AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_fill_n@PAUOpinion@@IU1@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@IABU1@AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0
__tryblocktable$??$_Uninit_fill_n@PAUOpinion@@IU1@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@IABU1@AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_fill_n@PAUOpinion@@IU1@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@IABU1@AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$5
__unwindtable$??$_Uninit_fill_n@PAUOpinion@@IU1@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@IABU1@AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Uninit_fill_n@PAUOpinion@@IU1@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@IABU1@AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$??$_Uninit_fill_n@PAUOpinion@@IU1@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@IABU1@AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Uninit_fill_n@PAUOpinion@@IU1@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@IABU1@AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_fill_n@PAUOpinion@@IU1@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@IABU1@AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
xdata$x	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUOpinion@@IU1@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@IABU1@AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T269773 = -24						; size = 4
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Vptr$269781 = 12					; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_fill_n@PAUOpinion@@IU1@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@IABU1@AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_fill_n<Opinion *,unsigned int,Opinion,std::allocator<Opinion> >, COMDAT

; 393  : 	{	// copy _Count *_Val to raw _First, using _Al, arbitrary type

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_fill_n@PAUOpinion@@IU1@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@IABU1@AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi

; 394  : 
; 395  :  #if _HAS_ITERATOR_DEBUGGING
; 396  : //	if (_Count < 0)
; 397  : //		_DEBUG_ERROR("negative count in uninitialized fill");
; 398  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 399  : 
; 400  : 	_FwdIt _Next = _First;

	mov	esi, DWORD PTR __First$[ebp]
	push	edi

; 401  : 
; 402  : 	_TRY_BEGIN

	mov	edi, DWORD PTR __Count$[ebp]
	xor	ebx, ebx
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR __Next$[ebp], esi
	mov	DWORD PTR __$EHRec$[ebp+12], ebx
	npad	1
$LL6@Uninit_fil:

; 403  : 	for (; 0 < _Count; --_Count, ++_First)

	cmp	edi, ebx
	jbe	SHORT $LN4@Uninit_fil

; 404  : 		_Al.construct(_First, _Val);

	mov	DWORD PTR __Vptr$269781[ebp], esi
	mov	DWORD PTR $T269773[ebp], esi
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	cmp	esi, ebx
	je	SHORT $LN18@Uninit_fil
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, esi
	call	DWORD PTR __imp_??0String@Localization@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	mov	DWORD PTR [esi+80], edx
$LN18@Uninit_fil:
	dec	edi
	add	esi, 84					; 00000054H
	mov	BYTE PTR __$EHRec$[ebp+12], bl
	mov	DWORD PTR __First$[ebp], esi
	jmp	SHORT $LL6@Uninit_fil
__catch$??$_Uninit_fill_n@PAUOpinion@@IU1@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@IABU1@AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0:

; 405  : 	_CATCH_ALL
; 406  : 	for (; _Next != _First; ++_Next)

	mov	esi, DWORD PTR __Next$[ebp]
	mov	edi, DWORD PTR __First$[ebp]
	cmp	esi, edi
	je	SHORT $LN1@Uninit_fil
	mov	ebx, DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LL3@Uninit_fil:

; 407  : 		_Al.destroy(_Next);

	mov	ecx, esi
	call	ebx
	add	esi, 84					; 00000054H
	cmp	esi, edi
	jne	SHORT $LL3@Uninit_fil
$LN1@Uninit_fil:

; 408  : 	_RERAISE;

	xor	ebx, ebx
	push	ebx
	push	ebx
	call	__CxxThrowException@8
$LN42@Uninit_fil:
$LN4@Uninit_fil:

; 409  : 	_CATCH_END
; 410  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN41@Uninit_fil:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninit_fill_n@PAUOpinion@@IU1@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@IABU1@AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2:
	mov	eax, DWORD PTR __Vptr$269781[ebp]
	push	eax
	mov	ecx, DWORD PTR $T269773[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Uninit_fill_n@PAUOpinion@@IU1@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@IABU1@AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z:
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_fill_n@PAUOpinion@@IU1@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@IABU1@AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_fill_n@PAUOpinion@@IU1@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@IABU1@AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_fill_n<Opinion *,unsigned int,Opinion,std::allocator<Opinion> >
PUBLIC	??$_Destroy_range@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@0AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<Opinion> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@0AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@0AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<Opinion> >, COMDAT

; 232  : 	{	// destroy [_First, _Last), arbitrary type

	push	esi

; 233  : 	for (; _First != _Last; ++_First)

	mov	esi, DWORD PTR __First$[esp]
	push	edi
	mov	edi, DWORD PTR __Last$[esp+4]
	cmp	esi, edi
	je	SHORT $LN1@Destroy_ra@2
	push	ebx
	mov	ebx, DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LL3@Destroy_ra@2:

; 234  : 		_Al.destroy(_First);

	mov	ecx, esi
	call	ebx
	add	esi, 84					; 00000054H
	cmp	esi, edi
	jne	SHORT $LL3@Destroy_ra@2
	pop	ebx
$LN1@Destroy_ra@2:
	pop	edi
	pop	esi

; 235  : 	}

	ret	0
??$_Destroy_range@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@0AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<Opinion> >
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<CvString *,CvString *,std::allocator<CvString> >
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__catchsym$??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0
__tryblocktable$??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$5
__unwindtable$??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
xdata$x	ENDS
;	COMDAT ??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T269894 = -24						; size = 4
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Vptr$269891 = 8					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_copy<CvString *,CvString *,std::allocator<CvString> >, COMDAT

; 124  : 	{	// copy [_First, _Last) to raw _Dest, using _Al, arbitrary type

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi

; 125  : 	_DEBUG_RANGE(_First, _Last);
; 126  : 	_DEBUG_POINTER(_Dest);
; 127  : 	_FwdIt _Next = _Dest;

	mov	esi, DWORD PTR __Dest$[ebp]
	push	edi

; 128  : 
; 129  : 	_TRY_BEGIN

	mov	edi, DWORD PTR __First$[ebp]
	xor	ebx, ebx
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR __Next$[ebp], esi
	mov	DWORD PTR __$EHRec$[ebp+12], ebx
	npad	1
$LL6@Uninit_cop@2:

; 130  : 	for (; _First != _Last; ++_Dest, ++_First)

	cmp	edi, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_cop@2

; 131  : 		_Al.construct(_Dest, *_First);

	mov	DWORD PTR __Vptr$269891[ebp], esi
	mov	DWORD PTR $T269894[ebp], esi
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	cmp	esi, ebx
	je	SHORT $LN18@Uninit_cop@2
	push	edi
	mov	ecx, esi
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
$LN18@Uninit_cop@2:
	add	esi, 28					; 0000001cH
	mov	BYTE PTR __$EHRec$[ebp+12], bl
	mov	DWORD PTR __Dest$[ebp], esi
	add	edi, 28					; 0000001cH
	jmp	SHORT $LL6@Uninit_cop@2
__catch$??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0:

; 132  : 	_CATCH_ALL
; 133  : 	for (; _Next != _Dest; ++_Next)

	mov	esi, DWORD PTR __Next$[ebp]
	mov	edi, DWORD PTR __Dest$[ebp]
	cmp	esi, edi
	je	SHORT $LN1@Uninit_cop@2
$LL3@Uninit_cop@2:

; 134  : 		_Al.destroy(_Next);

	mov	ecx, esi
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	add	esi, 28					; 0000001cH
	cmp	esi, edi
	jne	SHORT $LL3@Uninit_cop@2
$LN1@Uninit_cop@2:

; 135  : 	_RERAISE;

	xor	ebx, ebx
	push	ebx
	push	ebx
	call	__CxxThrowException@8
$LN42@Uninit_cop@2:
$LN4@Uninit_cop@2:

; 136  : 	_CATCH_END
; 137  : 	return (_Dest);
; 138  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	mov	eax, esi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN41@Uninit_cop@2:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2:
	mov	eax, DWORD PTR __Vptr$269891[ebp]
	push	eax
	mov	ecx, DWORD PTR $T269894[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z:
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<CvString *,CvString *,std::allocator<CvString> >
PUBLIC	??$_Unguarded_partition@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YA?AU?$pair@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@PAU12@@0@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z ; std::_Unguarded_partition<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$_Unguarded_partition@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YA?AU?$pair@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@PAU12@@0@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z
_TEXT	SEGMENT
__Tmp$270050 = -24					; size = 8
__Tmp$269982 = -16					; size = 8
__Tmp$270008 = -8					; size = 8
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
??$_Unguarded_partition@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YA?AU?$pair@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@PAU12@@0@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z PROC ; std::_Unguarded_partition<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>, COMDAT

; 3024 : 	{	// partition [_First, _Last), using operator<

	sub	esp, 24					; 00000018H
	push	ebx

; 3025 : 	_RanIt _Mid = _First + (_Last - _First) / 2;	// sort median to _Mid

	mov	ebx, DWORD PTR __First$[esp+24]
	push	ebp
	mov	ebp, DWORD PTR __Last$[esp+28]
	mov	eax, ebp
	sub	eax, ebx
	sar	eax, 3
	cdq
	push	esi
	sub	eax, edx
	push	edi
	sar	eax, 1
	lea	edi, DWORD PTR [ebx+eax*8]

; 3026 : 	std::_Median(_First, _Mid, _Last - 1);

	lea	eax, DWORD PTR [ebp-8]
	push	eax
	push	edi
	push	ebx
	call	??$_Median@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z ; std::_Median<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
	add	esp, 12					; 0000000cH

; 3027 : 	_RanIt _Pfirst = _Mid;

	mov	ecx, edi

; 3028 : 	_RanIt _Plast = _Pfirst + 1;

	lea	esi, DWORD PTR [edi+8]

; 3029 : 
; 3030 : 	while (_First < _Pfirst
; 3031 : 		&& !_DEBUG_LT(*(_Pfirst - 1), *_Pfirst)
; 3032 : 		&& !(*_Pfirst < *(_Pfirst - 1)))

	cmp	ebx, edi
	jae	SHORT $LN99@Unguarded_
$LL27@Unguarded_:
	mov	eax, DWORD PTR [ecx-4]
	mov	edx, DWORD PTR [ecx+4]
	cmp	edx, eax
	jl	SHORT $LN99@Unguarded_
	jg	SHORT $LN99@Unguarded_

; 3033 : 		--_Pfirst;

	sub	ecx, 8
	cmp	ebx, ecx
	jb	SHORT $LL27@Unguarded_
$LN99@Unguarded_:

; 3034 : 	while (_Plast < _Last
; 3035 : 		&& !_DEBUG_LT(*_Plast, *_Pfirst)
; 3036 : 		&& !(*_Pfirst < *_Plast))

	cmp	esi, ebp
	jae	SHORT $LN24@Unguarded_
	mov	edx, DWORD PTR [ecx+4]
	npad	1
$LL25@Unguarded_:
	mov	eax, DWORD PTR [esi+4]
	cmp	edx, eax
	jl	SHORT $LN24@Unguarded_
	jg	SHORT $LN24@Unguarded_

; 3037 : 		++_Plast;

	add	esi, 8
	cmp	esi, ebp
	jb	SHORT $LL25@Unguarded_
$LN24@Unguarded_:

; 3038 : 
; 3039 : 	_RanIt _Gfirst = _Plast;

	mov	eax, esi

; 3040 : 	_RanIt _Glast = _Pfirst;

	mov	ebx, ecx
$LL23@Unguarded_:

; 3041 : 
; 3042 : 	for (; ; )
; 3043 : 		{	// partition
; 3044 : 		for (; _Gfirst < _Last; ++_Gfirst)

	cmp	eax, DWORD PTR __Last$[esp+36]
	jae	SHORT $LN103@Unguarded_
	npad	6
$LL21@Unguarded_:

; 3045 : 			if (_DEBUG_LT(*_Pfirst, *_Gfirst))

	mov	edx, DWORD PTR [eax+4]
	mov	edi, DWORD PTR [ecx+4]
	cmp	edx, edi
	jl	SHORT $LN20@Unguarded_

; 3046 : 				;
; 3047 : 			else if (*_Gfirst < *_Pfirst)

	jg	SHORT $LN103@Unguarded_

; 3048 : 				break;
; 3049 : 			else
; 3050 : 				std::iter_swap(_Plast++, _Gfirst);

	mov	edx, esi
	add	esi, 8
	cmp	edx, eax
	je	SHORT $LN20@Unguarded_
	mov	ebp, DWORD PTR [edx+4]
	mov	edi, DWORD PTR [edx]
	mov	DWORD PTR __Tmp$269982[esp+44], ebp
	mov	ebp, DWORD PTR [eax]
	mov	DWORD PTR [edx], ebp
	mov	ebp, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ebp
	mov	edx, DWORD PTR __Tmp$269982[esp+44]
	mov	DWORD PTR [eax], edi
	mov	DWORD PTR [eax+4], edx
$LN20@Unguarded_:
	add	eax, 8
	cmp	eax, DWORD PTR __Last$[esp+36]
	jb	SHORT $LL21@Unguarded_
$LN103@Unguarded_:

; 3051 : 		for (; _First < _Glast; --_Glast)

	cmp	ebx, DWORD PTR __First$[esp+36]
	jbe	SHORT $LN115@Unguarded_
	lea	edx, DWORD PTR [ebx-8]
$LL14@Unguarded_:

; 3052 : 			if (_DEBUG_LT(*(_Glast - 1), *_Pfirst))

	mov	edi, DWORD PTR [edx+4]
	mov	ebp, DWORD PTR [ecx+4]
	cmp	ebp, edi
	jl	SHORT $LN13@Unguarded_

; 3053 : 				;
; 3054 : 			else if (*_Pfirst < *(_Glast - 1))

	jg	SHORT $LN111@Unguarded_

; 3055 : 				break;
; 3056 : 			else
; 3057 : 				std::iter_swap(--_Pfirst, _Glast - 1);

	sub	ecx, 8
	cmp	ecx, edx
	je	SHORT $LN13@Unguarded_
	mov	ebp, DWORD PTR [ecx+4]
	mov	edi, DWORD PTR [ecx]
	mov	DWORD PTR __Tmp$270008[esp+44], ebp
	mov	ebp, DWORD PTR [edx]
	mov	DWORD PTR [ecx], ebp
	mov	ebp, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], ebp
	mov	DWORD PTR [edx], edi
	mov	edi, DWORD PTR __Tmp$270008[esp+44]
	mov	DWORD PTR [edx+4], edi
$LN13@Unguarded_:
	sub	ebx, 8
	sub	edx, 8
	cmp	DWORD PTR __First$[esp+36], ebx
	jb	SHORT $LL14@Unguarded_
$LN111@Unguarded_:

; 3058 : 		if (_Glast == _First && _Gfirst == _Last)

	cmp	ebx, DWORD PTR __First$[esp+36]
$LN115@Unguarded_:
	jne	SHORT $LN6@Unguarded_
	cmp	eax, DWORD PTR __Last$[esp+36]
	je	$LN105@Unguarded_

; 3060 : 
; 3061 : 		if (_Glast == _First)
; 3062 : 			{	// no room at bottom, rotate pivot upward
; 3063 : 			if (_Plast != _Gfirst)

	cmp	esi, eax
	je	SHORT $LN64@Unguarded_

; 3064 : 				std::iter_swap(_Pfirst, _Plast);

	cmp	ecx, esi
	je	SHORT $LN64@Unguarded_
	mov	ebp, DWORD PTR [esi]
	mov	edx, DWORD PTR [ecx]
	mov	edi, DWORD PTR [ecx+4]
	mov	DWORD PTR [ecx], ebp
	mov	ebp, DWORD PTR [esi+4]
	mov	DWORD PTR [ecx+4], ebp
	mov	DWORD PTR [esi], edx
	mov	DWORD PTR [esi+4], edi
$LN64@Unguarded_:

; 3065 : 			++_Plast;
; 3066 : 			std::iter_swap(_Pfirst++, _Gfirst++);

	mov	edx, eax
	mov	edi, ecx
	add	esi, 8
	add	ecx, 8
	add	eax, 8
	cmp	edi, edx
	je	$LL23@Unguarded_
	mov	ebp, DWORD PTR [edi]
	mov	DWORD PTR __Tmp$270050[esp+40], ebp
	mov	ebp, DWORD PTR [edi+4]
	mov	DWORD PTR __Tmp$270050[esp+44], ebp
	mov	ebp, DWORD PTR [edx]
	mov	DWORD PTR [edi], ebp
	mov	ebp, DWORD PTR [edx+4]
	mov	DWORD PTR [edi+4], ebp
	mov	edi, DWORD PTR __Tmp$270050[esp+40]
	mov	DWORD PTR [edx], edi
	mov	edi, DWORD PTR __Tmp$270050[esp+44]
	mov	DWORD PTR [edx+4], edi
	jmp	$LL23@Unguarded_
$LN6@Unguarded_:

; 3067 : 			}
; 3068 : 		else if (_Gfirst == _Last)
; 3069 : 			{	// no room at top, rotate pivot downward
; 3070 : 			if (--_Glast != --_Pfirst)

	sub	ebx, 8
	cmp	eax, DWORD PTR __Last$[esp+36]
	jne	SHORT $LN3@Unguarded_
	sub	ecx, 8
	cmp	ebx, ecx
	je	SHORT $LN78@Unguarded_

; 3071 : 				std::iter_swap(_Glast, _Pfirst);

	mov	ebp, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ebx]
	mov	edi, DWORD PTR [ebx+4]
	mov	DWORD PTR [ebx], ebp
	mov	ebp, DWORD PTR [ecx+4]
	mov	DWORD PTR [ebx+4], ebp
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], edi
$LN78@Unguarded_:

; 3072 : 			std::iter_swap(_Pfirst, --_Plast);

	sub	esi, 8
	cmp	ecx, esi
	je	$LL23@Unguarded_
	mov	ebp, DWORD PTR [esi]
	mov	edx, DWORD PTR [ecx]
	mov	edi, DWORD PTR [ecx+4]
	mov	DWORD PTR [ecx], ebp
	mov	ebp, DWORD PTR [esi+4]
	mov	DWORD PTR [ecx+4], ebp
	mov	DWORD PTR [esi], edx
	mov	DWORD PTR [esi+4], edi

; 3073 : 			}
; 3074 : 		else

	jmp	$LL23@Unguarded_
$LN3@Unguarded_:

; 3075 : 			std::iter_swap(_Gfirst++, --_Glast);

	cmp	eax, ebx
	je	SHORT $LN92@Unguarded_
	mov	ebp, DWORD PTR [ebx]
	mov	edx, DWORD PTR [eax]
	mov	edi, DWORD PTR [eax+4]
	mov	DWORD PTR [eax], ebp
	mov	ebp, DWORD PTR [ebx+4]
	mov	DWORD PTR [eax+4], ebp
	mov	DWORD PTR [ebx], edx
	mov	DWORD PTR [ebx+4], edi
$LN92@Unguarded_:
	add	eax, 8

; 3076 : 		}

	jmp	$LL23@Unguarded_
$LN105@Unguarded_:

; 3059 : 			return (pair<_RanIt, _RanIt>(_Pfirst, _Plast));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp+36]
	pop	edi
	mov	DWORD PTR [eax+4], esi
	pop	esi
	pop	ebp
	mov	DWORD PTR [eax], ecx
	pop	ebx

; 3077 : 	}

	add	esp, 24					; 00000018H
	ret	0
??$_Unguarded_partition@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YA?AU?$pair@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@PAU12@@0@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z ENDP ; std::_Unguarded_partition<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
_TEXT	ENDS
PUBLIC	??$make_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z ; std::make_heap<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
; Function compile flags: /Ogtpy
;	COMDAT ??$make_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$make_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z PROC ; std::make_heap<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>, COMDAT

; 2178 : 	_DEBUG_RANGE(_First, _Last);
; 2179 : 	if (1 < _Last - _First)

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	ecx, DWORD PTR __First$[esp-4]
	mov	edx, eax
	sub	edx, ecx
	and	edx, -8					; fffffff8H
	cmp	edx, 8
	jle	SHORT $LN1@make_heap

; 2180 : 		_Make_heap(_CHECKED_BASE(_First), _CHECKED_BASE(_Last),
; 2181 : 			_Dist_type(_First), _Val_type(_First));

	push	0
	push	0
	push	eax
	push	ecx
	call	??$_Make_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0PAH0@Z ; std::_Make_heap<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,int,CvWeightedVector<CvPlot *,800,1>::WeightedElement>
	add	esp, 16					; 00000010H
$LN1@make_heap:

; 2182 : 	}

	ret	0
??$make_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z ENDP ; std::make_heap<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
_TEXT	ENDS
PUBLIC	??$_Insertion_sort@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z ; std::_Insertion_sort<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Insertion_sort@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Insertion_sort@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z PROC ; std::_Insertion_sort<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>, COMDAT

; 2993 : 	std::_Insertion_sort1(_First, _Last, _Val_type(_First));

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	ecx, DWORD PTR __First$[esp-4]
	push	0
	push	eax
	push	ecx
	call	??$_Insertion_sort1@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z ; std::_Insertion_sort1<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,CvWeightedVector<CvPlot *,800,1>::WeightedElement>
	add	esp, 12					; 0000000cH

; 2994 : 	}

	ret	0
??$_Insertion_sort@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z ENDP ; std::_Insertion_sort<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
_TEXT	ENDS
PUBLIC	??$unchecked_uninitialized_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@stdext@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@std@@@Z ; stdext::unchecked_uninitialized_copy<Opinion *,Opinion *,std::allocator<Opinion> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$unchecked_uninitialized_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@stdext@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@std@@@Z
_TEXT	SEGMENT
$T270154 = -4						; size = 1
__Cat$270158 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@stdext@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@std@@@Z PROC ; stdext::unchecked_uninitialized_copy<Opinion *,Opinion *,std::allocator<Opinion> >, COMDAT

; 819  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

	push	ecx

; 820  : 	return (_STD _Uninit_copy(_CHECKED_BASE(_First),
; 821  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 822  : 		_STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T270154[esp+4], 0
	mov	eax, DWORD PTR $T270154[esp+4]
	mov	ecx, DWORD PTR __Cat$270158[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<Opinion *,Opinion *,std::allocator<Opinion> >

; 823  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$unchecked_uninitialized_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@stdext@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@std@@@Z ENDP ; stdext::unchecked_uninitialized_copy<Opinion *,Opinion *,std::allocator<Opinion> >
_TEXT	ENDS
PUBLIC	??$_Insertion_sort1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@UOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0UOpinionEval@@PAUOpinion@@@Z ; std::_Insertion_sort1<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval,Opinion>
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	SEGMENT
__unwindtable$??$_Insertion_sort1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@UOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0UOpinionEval@@PAUOpinion@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Insertion_sort1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@UOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0UOpinionEval@@PAUOpinion@@@Z$0
__ehfuncinfo$??$_Insertion_sort1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@UOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0UOpinionEval@@PAUOpinion@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Insertion_sort1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@UOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0UOpinionEval@@PAUOpinion@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
xdata$x	ENDS
;	COMDAT ??$_Insertion_sort1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@UOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0UOpinionEval@@PAUOpinion@@@Z
_TEXT	SEGMENT
$T270235 = -104						; size = 1
$T270163 = -100						; size = 4
__Val$239983 = -96					; size = 84
__$EHRec$ = -12						; size = 12
__Cat$270239 = 8					; size = 1
$T270237 = 8						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Pred$ = 16						; size = 1
___formal$ = 20						; size = 4
??$_Insertion_sort1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@UOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0UOpinionEval@@PAUOpinion@@@Z PROC ; std::_Insertion_sort1<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval,Opinion>, COMDAT

; 3123 : 	{	// insertion sort [_First, _Last), using _Pred

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$??$_Insertion_sort1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@UOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0UOpinionEval@@PAUOpinion@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp

; 3124 : 	if (_First != _Last)

	mov	eax, DWORD PTR __First$[esp+8]
	mov	ecx, DWORD PTR __Last$[esp+8]
	sub	esp, 92					; 0000005cH
	cmp	eax, ecx
	je	$LN6@Insertion_@2
	push	edi

; 3125 : 		for (_BidIt _Next = _First; ++_Next != _Last; )

	lea	edi, DWORD PTR [eax+84]
	cmp	edi, ecx
	je	$LN87@Insertion_@2
	push	ebx
	mov	ebx, DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	push	ebp
	push	esi
	npad	3
$LL7@Insertion_@2:

; 3126 : 			{	// order next element
; 3127 : 			_BidIt _Next1 = _Next;
; 3128 : 			_Ty _Val = *_Next;

	push	edi
	lea	ecx, DWORD PTR __Val$239983[esp+124]
	mov	ebp, edi
	call	DWORD PTR __imp_??0String@Localization@@QAE@ABV01@@Z
	mov	eax, DWORD PTR [edi+80]
	mov	DWORD PTR __Val$239983[esp+200], eax

; 3129 : 
; 3130 : 			if (_DEBUG_LT_PRED(_Pred, _Val, *_First))

	mov	ecx, DWORD PTR __First$[esp+116]
	cmp	eax, DWORD PTR [ecx+80]
	mov	DWORD PTR __$EHRec$[esp+128], 0
	jge	SHORT $LN5@Insertion_@2

; 3131 : 				{	// found new earliest element, move to front
; 3132 : 				_STDEXT unchecked_copy_backward(_First, _Next, ++_Next1);

	mov	BYTE PTR $T270235[esp+120], 0
	mov	edx, DWORD PTR $T270235[esp+120]
	push	edx
	mov	edx, DWORD PTR __Cat$270239[esp+120]
	push	edx
	mov	edx, DWORD PTR $T270237[esp+124]
	push	edx
	lea	eax, DWORD PTR [edi+84]
	push	eax
	push	edi
	push	ecx
	lea	eax, DWORD PTR $T270163[esp+144]
	push	eax
	call	??$_Copy_backward_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@Urandom_access_iterator_tag@2@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::random_access_iterator_tag>

; 3133 : 				*_First = _Val;

	mov	ecx, DWORD PTR __First$[esp+144]
	add	esp, 28					; 0000001cH
	lea	edx, DWORD PTR __Val$239983[esp+120]
	push	edx
	mov	esi, ecx
	call	ebx
	mov	eax, DWORD PTR __Val$239983[esp+200]
	mov	DWORD PTR [esi+80], eax

; 3134 : 				}
; 3135 : 			else

	jmp	SHORT $LN77@Insertion_@2
$LN5@Insertion_@2:

; 3136 : 				{	// look for insertion point after first
; 3137 : 				for (_BidIt _First1 = _Next1;
; 3138 : 					_DEBUG_LT_PRED(_Pred, _Val, *--_First1);
; 3139 : 					_Next1 = _First1)

	cmp	eax, DWORD PTR [edi-4]
	lea	esi, DWORD PTR [edi-84]
	jge	SHORT $LN1@Insertion_@2
$LL3@Insertion_@2:

; 3140 : 					*_Next1 = *_First1;	// move hole down

	push	esi
	mov	ecx, ebp
	call	ebx
	mov	ecx, DWORD PTR [esi+80]
	mov	edx, DWORD PTR __Val$239983[esp+200]
	mov	DWORD PTR [ebp+80], ecx
	mov	ebp, esi
	sub	esi, 84					; 00000054H
	cmp	edx, DWORD PTR [esi+80]
	jl	SHORT $LL3@Insertion_@2
$LN1@Insertion_@2:

; 3141 : 				*_Next1 = _Val;	// insert element in hole

	lea	eax, DWORD PTR __Val$239983[esp+120]
	push	eax
	mov	ecx, ebp
	call	ebx
	mov	ecx, DWORD PTR __Val$239983[esp+200]
	mov	DWORD PTR [ebp+80], ecx
$LN77@Insertion_@2:

; 3142 : 				}
; 3143 : 			}

	lea	ecx, DWORD PTR __Val$239983[esp+120]
	mov	DWORD PTR __$EHRec$[esp+128], -1
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	add	edi, 84					; 00000054H
	cmp	edi, DWORD PTR __Last$[esp+116]
	jne	$LL7@Insertion_@2
	pop	esi
	pop	ebp
	pop	ebx
$LN87@Insertion_@2:
	pop	edi
$LN6@Insertion_@2:

; 3144 : 	}

	mov	ecx, DWORD PTR __$EHRec$[esp+104]
	mov	DWORD PTR fs:0, ecx
	add	esp, 104				; 00000068H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Insertion_sort1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@UOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0UOpinionEval@@PAUOpinion@@@Z$0:
	lea	ecx, DWORD PTR __Val$239983[ebp]
	jmp	??1Opinion@@QAE@XZ
__ehhandler$??$_Insertion_sort1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@UOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0UOpinionEval@@PAUOpinion@@@Z:
	mov	eax, OFFSET __ehfuncinfo$??$_Insertion_sort1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@UOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0UOpinionEval@@PAUOpinion@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Insertion_sort1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@UOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0UOpinionEval@@PAUOpinion@@@Z ENDP ; std::_Insertion_sort1<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval,Opinion>
PUBLIC	??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@0V12@@Z ; stdext::unchecked_copy<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
xdata$x	SEGMENT
__unwindtable$??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@0V12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@0V12@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@0V12@@Z$0
__ehfuncinfo$??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@0V12@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@0V12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	ENDS
;	COMDAT ??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@0V12@@Z
_TEXT	SEGMENT
$T270330 = -20						; size = 1
$T270333 = -20						; size = 4
$T270337 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Cat$270342 = 8					; size = 1
$T270332 = 8						; size = 1
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Dest$ = 20						; size = 20
??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@0V12@@Z PROC ; stdext::unchecked_copy<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion> >, COMDAT

; 3604 : 	{	// copy [_First, _Last) to [_Dest, ...)

	push	-1
	push	__ehhandler$??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@0V12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	ebx
	push	ebp
	push	esi

; 3605 : 		return (_STD _Copy_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3606 : 			_STD _Iter_random(_First, _Dest), _STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	xor	ebx, ebx
	push	edi
	mov	DWORD PTR $T270337[esp+36], ebx
	mov	ecx, DWORD PTR __Cat$270342[esp+32]
	mov	edx, DWORD PTR $T270332[esp+32]
	mov	ebp, DWORD PTR ___$ReturnUdt$[esp+32]
	mov	BYTE PTR $T270330[esp+36], bl
	mov	eax, DWORD PTR $T270330[esp+36]
	push	eax
	push	ecx
	push	edx
	sub	esp, 20					; 00000014H
	mov	eax, esp
	mov	DWORD PTR [eax], ebx
	mov	DWORD PTR [eax+4], ebx
	mov	DWORD PTR [eax+8], ebx
	mov	DWORD PTR [eax+12], ebx
	mov	ecx, DWORD PTR __Dest$[esp+80]
	mov	DWORD PTR [eax+16], ecx
	mov	edx, DWORD PTR __Last$[esp+64]
	mov	eax, DWORD PTR __First$[esp+64]
	mov	DWORD PTR $T270333[esp+68], esp
	push	edx
	push	eax
	mov	esi, 1
	push	ebp
	mov	DWORD PTR __$EHRec$[esp+88], esi
	call	??$_Copy_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V10@Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion>,std::forward_iterator_tag>
	add	esp, 44					; 0000002cH
	mov	DWORD PTR $T270337[esp+36], esi
	mov	esi, DWORD PTR __Dest$[esp+32]
	mov	BYTE PTR __$EHRec$[esp+44], bl
	cmp	esi, ebx
	je	SHORT $LN33@unchecked_@3
	cmp	esi, DWORD PTR __Dest$[esp+40]
	je	SHORT $LN15@unchecked_@3
	mov	edi, DWORD PTR __imp_??1String@Localization@@UAE@XZ
	npad	4
$LL17@unchecked_@3:
	mov	ecx, esi
	call	edi
	add	esi, 84					; 00000054H
	cmp	esi, DWORD PTR __Dest$[esp+40]
	jne	SHORT $LL17@unchecked_@3
	mov	esi, DWORD PTR __Dest$[esp+32]
$LN15@unchecked_@3:
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN33@unchecked_@3:

; 3607 : 	}

	mov	ecx, DWORD PTR __$EHRec$[esp+36]
	pop	edi
	pop	esi
	mov	eax, ebp
	pop	ebp
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	add	esp, 20					; 00000014H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@0V12@@Z$0:
	lea	ecx, DWORD PTR __Dest$[ebp-4]
	jmp	??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ ; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>
__unwindfunclet$??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@0V12@@Z$2:
	mov	eax, DWORD PTR $T270337[ebp]
	and	eax, 1
	je	$LN6@unchecked_@3
	and	DWORD PTR $T270337[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp-4]
	jmp	??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ ; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>
$LN6@unchecked_@3:
	ret	0
__ehhandler$??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@0V12@@Z:
	mov	eax, OFFSET __ehfuncinfo$??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@0V12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@0V12@@Z ENDP ; stdext::unchecked_copy<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion> >
PUBLIC	??$lower_bound@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinion@@UOpinionEval@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@0ABUOpinion@@UOpinionEval@@@Z ; std::lower_bound<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,Opinion,OpinionEval>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$lower_bound@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinion@@UOpinionEval@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@0ABUOpinion@@UOpinionEval@@@Z
_TEXT	SEGMENT
$T270407 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Val$ = 20						; size = 4
__Pred$ = 24						; size = 1
??$lower_bound@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinion@@UOpinionEval@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@0ABUOpinion@@UOpinionEval@@@Z PROC ; std::lower_bound<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,Opinion,OpinionEval>, COMDAT

; 2313 : 	{	// find first element not before _Val, using _Pred

	push	ecx

; 2314 : 	_ASSIGN_FROM_BASE(_First,

	mov	eax, DWORD PTR __Pred$[esp]
	mov	ecx, DWORD PTR __Val$[esp]
	mov	edx, DWORD PTR __Last$[esp]
	push	0
	push	eax
	mov	eax, DWORD PTR __First$[esp+8]
	push	ecx
	push	edx
	push	eax
	lea	ecx, DWORD PTR $T270407[esp+24]
	push	ecx
	call	??$_Lower_bound@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinion@@HUOpinionEval@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@0ABUOpinion@@UOpinionEval@@PAH@Z ; std::_Lower_bound<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,Opinion,int,OpinionEval>

; 2315 : 		_Lower_bound(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Val, _Pred, _Dist_type(_First)));
; 2316 : 	return _First;

	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+24]
	mov	DWORD PTR [eax], edx

; 2317 : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$lower_bound@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinion@@UOpinionEval@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@0ABUOpinion@@UOpinionEval@@@Z ENDP ; std::lower_bound<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,Opinion,OpinionEval>
_TEXT	ENDS
PUBLIC	??$upper_bound@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinion@@UOpinionEval@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@0ABUOpinion@@UOpinionEval@@@Z ; std::upper_bound<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,Opinion,OpinionEval>
; Function compile flags: /Ogtpy
;	COMDAT ??$upper_bound@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinion@@UOpinionEval@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@0ABUOpinion@@UOpinionEval@@@Z
_TEXT	SEGMENT
$T270414 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Val$ = 20						; size = 4
__Pred$ = 24						; size = 1
??$upper_bound@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinion@@UOpinionEval@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@0ABUOpinion@@UOpinionEval@@@Z PROC ; std::upper_bound<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,Opinion,OpinionEval>, COMDAT

; 2384 : 	{	// find first element that _Val is before, using _Pred

	push	ecx

; 2385 : 	_ASSIGN_FROM_BASE(_First,

	mov	eax, DWORD PTR __Pred$[esp]
	mov	ecx, DWORD PTR __Val$[esp]
	mov	edx, DWORD PTR __Last$[esp]
	push	0
	push	eax
	mov	eax, DWORD PTR __First$[esp+8]
	push	ecx
	push	edx
	push	eax
	lea	ecx, DWORD PTR $T270414[esp+24]
	push	ecx
	call	??$_Upper_bound@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinion@@HUOpinionEval@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@0ABUOpinion@@UOpinionEval@@PAH@Z ; std::_Upper_bound<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,Opinion,int,OpinionEval>

; 2386 : 		_Upper_bound(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Val, _Pred, _Dist_type(_First)));
; 2387 : 	return _First;

	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+24]
	mov	DWORD PTR [eax], edx

; 2388 : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$upper_bound@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinion@@UOpinionEval@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@0ABUOpinion@@UOpinionEval@@@Z ENDP ; std::upper_bound<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,Opinion,OpinionEval>
_TEXT	ENDS
PUBLIC	??$pop_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z ; std::pop_heap<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
; Function compile flags: /Ogtpy
;	COMDAT ??$pop_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$pop_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z PROC ; std::pop_heap<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>, COMDAT

; 2095 : 	_DEBUG_RANGE(_First, _Last);
; 2096 : 	_DEBUG_HEAP(_First, _Last);
; 2097 : 	if (1 < _Last - _First)

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	ecx, DWORD PTR __First$[esp-4]
	push	ebx
	mov	edx, eax
	push	esi
	sub	edx, ecx
	mov	esi, edx
	and	esi, -8					; fffffff8H
	cmp	esi, 8
	push	edi
	jle	SHORT $LN12@pop_heap

; 2098 : 		_Pop_heap_0(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Val_type(_First));

	mov	ebx, DWORD PTR [ecx]
	mov	esi, DWORD PTR [eax-8]
	mov	edi, DWORD PTR [eax-4]
	mov	DWORD PTR [eax-8], ebx
	mov	ebx, DWORD PTR [ecx+4]
	sub	esp, 8
	mov	DWORD PTR [eax-4], ebx
	mov	eax, esp
	add	edx, -8					; fffffff8H
	sar	edx, 3
	push	edx
	push	0
	push	ecx
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [eax+4], edi
	call	??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HHU12@@Z ; std::_Adjust_heap<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,int,CvWeightedVector<CvPlot *,800,1>::WeightedElement>
	add	esp, 20					; 00000014H
$LN12@pop_heap:

; 2099 : 	}

	pop	edi
	pop	esi
	pop	ebx
	ret	0
??$pop_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z ENDP ; std::pop_heap<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
_TEXT	ENDS
PUBLIC	??$_Merge@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V23@UOpinionEval@@Urandom_access_iterator_tag@3@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@PAUOpinion@@0V10@11UOpinionEval@@Urandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Merge<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Merge@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V23@UOpinionEval@@Urandom_access_iterator_tag@3@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@PAUOpinion@@0V10@11UOpinionEval@@Urandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First1$ = 12						; size = 4
$T270624 = 16						; size = 1
__Last1$ = 16						; size = 4
__Cat$270628 = 20					; size = 1
$T270626 = 20						; size = 1
__First2$ = 20						; size = 4
__Last2$ = 24						; size = 4
__Dest$ = 28						; size = 4
__Pred$ = 32						; size = 1
___formal$ = 36						; size = 1
___formal$ = 40						; size = 1
??$_Merge@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V23@UOpinionEval@@Urandom_access_iterator_tag@3@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@PAUOpinion@@0V10@11UOpinionEval@@Urandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Merge<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval,std::random_access_iterator_tag>, COMDAT

; 2594 : 	_DEBUG_ORDER_PRED(_First1, _Last1, _Pred);
; 2595 : 	_DEBUG_ORDER_PRED(_First2, _Last2, _Pred);
; 2596 : 	_DEBUG_POINTER(_Dest);
; 2597 : 	for (; _First1 != _Last1 && _First2 != _Last2; ++_Dest)

	mov	ecx, DWORD PTR __Dest$[esp-4]
	mov	eax, DWORD PTR __First2$[esp-4]
	push	ebx
	mov	ebx, DWORD PTR __Last1$[esp]
	push	ebp
	mov	ebp, DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	push	esi
	mov	esi, DWORD PTR __First1$[esp+8]
	push	edi
	cmp	esi, ebx
	je	SHORT $LN74@Merge@2
	npad	2
$LL10@Merge@2:
	cmp	eax, DWORD PTR __Last2$[esp+12]
	je	SHORT $LN74@Merge@2

; 2598 : 		if (_DEBUG_LT_PRED(_Pred, *_First2, *_First1))

	mov	edx, DWORD PTR [eax+80]
	cmp	edx, DWORD PTR [esi+80]
	jge	SHORT $LN2@Merge@2

; 2599 : 			*_Dest = *_First2, ++_First2;

	push	eax
	mov	edi, eax
	mov	ebx, ecx
	call	ebp
	mov	eax, DWORD PTR [edi+80]
	mov	DWORD PTR [ebx+80], eax
	mov	eax, DWORD PTR __First2$[esp+12]

; 2600 : 		else

	mov	ebx, DWORD PTR __Last1$[esp+12]
	add	eax, 84					; 00000054H
	mov	DWORD PTR __First2$[esp+12], eax
	jmp	SHORT $LN4@Merge@2
$LN2@Merge@2:

; 2601 : 			*_Dest = *_First1, ++_First1;

	push	esi
	mov	edi, ecx
	call	ebp
	mov	ecx, DWORD PTR [esi+80]
	mov	DWORD PTR [edi+80], ecx
	mov	eax, DWORD PTR __First2$[esp+12]
	add	esi, 84					; 00000054H
$LN4@Merge@2:
	mov	ecx, DWORD PTR __Dest$[esp+12]
	add	ecx, 84					; 00000054H
	mov	DWORD PTR __Dest$[esp+12], ecx
	cmp	esi, ebx
	jne	SHORT $LL10@Merge@2
$LN74@Merge@2:

; 2602 : 
; 2603 : 	_Dest = _STDEXT unchecked_copy(_First1, _Last1, _Dest);	// copy any tail

	mov	edi, ecx
	cmp	esi, ebx
	je	SHORT $LN48@Merge@2
$LL50@Merge@2:
	push	esi
	mov	ecx, edi
	call	ebp
	mov	edx, DWORD PTR [esi+80]
	mov	DWORD PTR [edi+80], edx
	add	esi, 84					; 00000054H
	add	edi, 84					; 00000054H
	cmp	esi, ebx
	jne	SHORT $LL50@Merge@2
	mov	eax, DWORD PTR __First2$[esp+12]
$LN48@Merge@2:

; 2604 : 	return (_STDEXT unchecked_copy(_First2, _Last2, _Dest));

	mov	edx, DWORD PTR __Cat$270628[esp+12]
	mov	esi, DWORD PTR ___$ReturnUdt$[esp+12]
	mov	BYTE PTR $T270624[esp+12], 0
	mov	ecx, DWORD PTR $T270624[esp+12]
	push	ecx
	mov	ecx, DWORD PTR $T270626[esp+16]
	push	edx
	mov	edx, DWORD PTR __Last2$[esp+20]
	push	ecx
	push	edi
	push	edx
	push	eax
	push	esi
	mov	DWORD PTR __Dest$[esp+40], edi
	call	??$_Copy_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@Urandom_access_iterator_tag@2@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::random_access_iterator_tag>
	add	esp, 28					; 0000001cH
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx

; 2605 : 	}

	ret	0
??$_Merge@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V23@UOpinionEval@@Urandom_access_iterator_tag@3@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@PAUOpinion@@0V10@11UOpinionEval@@Urandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Merge<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	??$_Merge_backward@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@PAUOpinion@@V12@UOpinionEval@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@0PAUOpinion@@10UOpinionEval@@U_Range_checked_iterator_tag@0@@Z ; std::_Merge_backward<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Merge_backward@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@PAUOpinion@@V12@UOpinionEval@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@0PAUOpinion@@10UOpinionEval@@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T270686 = -4						; size = 1
$T270662 = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
__First1$ = 12						; size = 4
__Cat$270690 = 16					; size = 1
$T270688 = 16						; size = 1
__Cat$270667 = 16					; size = 1
$T270664 = 16						; size = 1
__Last1$ = 16						; size = 4
__First2$ = 20						; size = 4
__Last2$ = 24						; size = 4
__Dest$ = 28						; size = 4
__Pred$ = 32						; size = 1
___formal$ = 36						; size = 1
??$_Merge_backward@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@PAUOpinion@@V12@UOpinionEval@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@0PAUOpinion@@10UOpinionEval@@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Merge_backward<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval>, COMDAT

; 2839 : 	{	// merge backwards to _Dest, using _Pred

	push	ecx

; 2840 : 	for (; ; )
; 2841 : 		if (_First1 == _Last1)

	mov	ecx, DWORD PTR __First1$[esp]
	mov	eax, DWORD PTR __Last1$[esp]
	push	ebx
	push	ebp
	push	esi
	mov	esi, DWORD PTR __Last2$[esp+12]
	push	edi
	cmp	ecx, eax
	je	SHORT $LN65@Merge_back
	mov	ebp, DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	npad	5
$LL8@Merge_back:

; 2843 : 		else if (_First2 == _Last2)

	cmp	DWORD PTR __First2$[esp+16], esi
	je	$LN66@Merge_back

; 2845 : 		else if (_DEBUG_LT_PRED(_Pred, *--_Last2, *--_Last1))

	mov	ecx, DWORD PTR [esi-4]
	sub	esi, 84					; 00000054H
	sub	eax, 84					; 00000054H
	mov	DWORD PTR __Last1$[esp+16], eax
	cmp	ecx, DWORD PTR [eax+80]

; 2846 : 			*--_Dest = *_Last1, ++_Last2;

	mov	ecx, DWORD PTR __Dest$[esp+16]
	jge	SHORT $LN2@Merge_back
	sub	ecx, 84					; 00000054H
	push	eax
	mov	edi, eax
	mov	DWORD PTR __Dest$[esp+20], ecx
	mov	ebx, ecx
	call	ebp
	mov	edx, DWORD PTR [edi+80]
	mov	DWORD PTR [ebx+80], edx

; 2847 : 		else

	mov	eax, DWORD PTR __Last1$[esp+16]
	add	esi, 84					; 00000054H
	jmp	SHORT $LN61@Merge_back
$LN2@Merge_back:

; 2848 : 			*--_Dest = *_Last2, ++_Last1;

	sub	ecx, 84					; 00000054H
	push	esi
	mov	DWORD PTR __Dest$[esp+20], ecx
	mov	edi, ecx
	call	ebp
	mov	eax, DWORD PTR [esi+80]
	mov	DWORD PTR [edi+80], eax
	mov	eax, DWORD PTR __Last1$[esp+16]
	add	eax, 84					; 00000054H
	mov	DWORD PTR __Last1$[esp+16], eax
$LN61@Merge_back:
	mov	ecx, DWORD PTR __First1$[esp+16]
	cmp	ecx, eax
	jne	SHORT $LL8@Merge_back
$LN65@Merge_back:

; 2842 : 			return (_STDEXT unchecked_copy_backward(_First2, _Last2, _Dest));

	mov	edx, DWORD PTR __Cat$270667[esp+16]
	mov	eax, DWORD PTR $T270664[esp+16]
	mov	BYTE PTR $T270662[esp+20], 0
	mov	ecx, DWORD PTR $T270662[esp+20]
	push	ecx
	mov	ecx, DWORD PTR __Dest$[esp+20]
	push	edx
	mov	edx, DWORD PTR __First2$[esp+24]
	push	eax
	push	ecx
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[esp+36]
	push	edx
	push	esi
	call	??$_Copy_backward_opt@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@Urandom_access_iterator_tag@3@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@PAUOpinion@@0V10@Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::random_access_iterator_tag>

; 2844 : 			return (_STDEXT unchecked_copy_backward(_First1, _Last1, _Dest));

	add	esp, 28					; 0000001cH
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx

; 2849 : 	}

	pop	ecx
	ret	0
$LN66@Merge_back:

; 2844 : 			return (_STDEXT unchecked_copy_backward(_First1, _Last1, _Dest));

	mov	esi, DWORD PTR ___$ReturnUdt$[esp+16]
	mov	BYTE PTR $T270686[esp+20], 0
	mov	edx, DWORD PTR $T270686[esp+20]
	push	edx
	mov	edx, DWORD PTR __Cat$270690[esp+20]
	push	edx
	mov	edx, DWORD PTR $T270688[esp+24]
	push	edx
	mov	edx, DWORD PTR __Dest$[esp+28]
	push	edx
	push	eax
	push	ecx
	push	esi
	call	??$_Copy_backward_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@Urandom_access_iterator_tag@2@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::random_access_iterator_tag>
	add	esp, 28					; 0000001cH
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx

; 2849 : 	}

	pop	ecx
	ret	0
??$_Merge_backward@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@PAUOpinion@@V12@UOpinionEval@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@0PAUOpinion@@10UOpinionEval@@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Merge_backward<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval>
_TEXT	ENDS
PUBLIC	??$unchecked_merge@PAUOpinion@@PAU1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@@stdext@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@PAUOpinion@@000V12@UOpinionEval@@@Z ; stdext::unchecked_merge<Opinion *,Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval>
; Function compile flags: /Ogtpy
;	COMDAT ??$unchecked_merge@PAUOpinion@@PAU1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@@stdext@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@PAUOpinion@@000V12@UOpinionEval@@@Z
_TEXT	SEGMENT
$T270784 = -4						; size = 1
$T270785 = 8						; size = 1
___$ReturnUdt$ = 8					; size = 4
__First1$ = 12						; size = 4
__Last1$ = 16						; size = 4
__First2$ = 20						; size = 4
__Last2$ = 24						; size = 4
__Dest$ = 28						; size = 4
__Pred$ = 32						; size = 1
??$unchecked_merge@PAUOpinion@@PAU1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@@stdext@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@PAUOpinion@@000V12@UOpinionEval@@@Z PROC ; stdext::unchecked_merge<Opinion *,Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval>, COMDAT

; 5157 : 	{	//  copy merging ranges, both using _Pred

	push	ecx

; 5158 : 		return _STD _Merge(_CHECKED_BASE(_First1), _CHECKED_BASE(_Last1), _CHECKED_BASE(_First2), _CHECKED_BASE(_Last2), _Dest, _Pred,
; 5159 : 			_STD _Iter_random(_First1, _First2,_Dest), _STD _Range_checked_iterator_tag());

	mov	ecx, DWORD PTR $T270785[esp]
	mov	edx, DWORD PTR __Pred$[esp]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[esp+4]
	mov	BYTE PTR $T270784[esp+8], 0
	mov	eax, DWORD PTR $T270784[esp+8]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+8]
	push	ecx
	mov	ecx, DWORD PTR __Last2$[esp+12]
	push	edx
	mov	edx, DWORD PTR __First2$[esp+16]
	push	eax
	mov	eax, DWORD PTR __Last1$[esp+20]
	push	ecx
	mov	ecx, DWORD PTR __First1$[esp+24]
	push	edx
	push	eax
	push	ecx
	push	esi
	call	??$_Merge@PAUOpinion@@PAU1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@Urandom_access_iterator_tag@3@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@PAUOpinion@@000V10@UOpinionEval@@Urandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Merge<Opinion *,Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval,std::random_access_iterator_tag>
	add	esp, 36					; 00000024H
	mov	eax, esi
	pop	esi

; 5160 : 	}

	pop	ecx
	ret	0
??$unchecked_merge@PAUOpinion@@PAU1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@@stdext@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@PAUOpinion@@000V12@UOpinionEval@@@Z ENDP ; stdext::unchecked_merge<Opinion *,Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval>
_TEXT	ENDS
PUBLIC	??$_Rotate@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00Urandom_access_iterator_tag@0@@Z ; std::_Rotate<std::_Vector_iterator<Opinion,std::allocator<Opinion> > >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Rotate@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00Urandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Rotate@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00Urandom_access_iterator_tag@0@@Z PROC ; std::_Rotate<std::_Vector_iterator<Opinion,std::allocator<Opinion> > >, COMDAT

; 1713 : 	_Rotate(_First, _Mid, _Last, _Dist_type(_First), _Val_type(_First));

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	ecx, DWORD PTR __Mid$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	push	0
	push	0
	push	eax
	push	ecx
	push	edx
	call	??$_Rotate@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00PAHPAUOpinion@@@Z ; std::_Rotate<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion>
	add	esp, 20					; 00000014H

; 1714 : 	}

	ret	0
??$_Rotate@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00Urandom_access_iterator_tag@0@@Z ENDP ; std::_Rotate<std::_Vector_iterator<Opinion,std::allocator<Opinion> > >
_TEXT	ENDS
PUBLIC	??$_Merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@000V10@UOpinionEval@@Uforward_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Merge<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion>,OpinionEval,std::forward_iterator_tag>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
xdata$x	SEGMENT
__unwindtable$??$_Merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@000V10@UOpinionEval@@Uforward_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@000V10@UOpinionEval@@Uforward_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$4
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@000V10@UOpinionEval@@Uforward_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0
__ehfuncinfo$??$_Merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@000V10@UOpinionEval@@Uforward_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@000V10@UOpinionEval@@Uforward_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
xdata$x	ENDS
;	COMDAT ??$_Merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@000V10@UOpinionEval@@Uforward_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T270810 = -40						; size = 4
$T270804 = -36						; size = 4
$T270802 = -36						; size = 4
$T270803 = -32						; size = 20
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__First1$ = 12						; size = 4
__Last1$ = 16						; size = 4
__First2$ = 20						; size = 4
__Last2$ = 24						; size = 4
__Dest$ = 28						; size = 20
__Pred$ = 48						; size = 1
___formal$ = 52						; size = 1
___formal$ = 56						; size = 1
??$_Merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@000V10@UOpinionEval@@Uforward_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Merge<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion>,OpinionEval,std::forward_iterator_tag>, COMDAT

; 2593 : 	{	//  copy merging ranges, both using _Pred

	push	-1
	push	__ehhandler$??$_Merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@000V10@UOpinionEval@@Uforward_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 28					; 0000001cH
	push	ebx
	push	ebp
	push	esi

; 2594 : 	_DEBUG_ORDER_PRED(_First1, _Last1, _Pred);
; 2595 : 	_DEBUG_ORDER_PRED(_First2, _Last2, _Pred);
; 2596 : 	_DEBUG_POINTER(_Dest);
; 2597 : 	for (; _First1 != _Last1 && _First2 != _Last2; ++_Dest)

	xor	ebx, ebx
	push	edi
	mov	DWORD PTR $T270810[esp+56], ebx
	mov	eax, DWORD PTR __First1$[esp+52]
	mov	DWORD PTR __$EHRec$[esp+64], 1
	cmp	eax, DWORD PTR __Last1$[esp+52]
	je	SHORT $LN3@Merge@3
	mov	ecx, DWORD PTR __First2$[esp+52]
$LL4@Merge@3:
	cmp	ecx, DWORD PTR __Last2$[esp+52]
	je	SHORT $LN3@Merge@3

; 2598 : 		if (_DEBUG_LT_PRED(_Pred, *_First2, *_First1))

	mov	edx, DWORD PTR [ecx+80]
	cmp	edx, DWORD PTR [eax+80]
	jge	SHORT $LN2@Merge@3

; 2599 : 			*_Dest = *_First2, ++_First2;

	push	ecx
	lea	ecx, DWORD PTR __Dest$[esp+56]
	call	??4?$_Temp_iterator@UOpinion@@@std@@QAEAAV01@ABUOpinion@@@Z ; std::_Temp_iterator<Opinion>::operator=
	mov	ecx, DWORD PTR __First2$[esp+52]

; 2600 : 		else

	mov	eax, DWORD PTR __First1$[esp+52]
	add	ecx, 84					; 00000054H
	mov	DWORD PTR __First2$[esp+52], ecx
	jmp	SHORT $LN52@Merge@3
$LN2@Merge@3:

; 2601 : 			*_Dest = *_First1, ++_First1;

	push	eax
	lea	ecx, DWORD PTR __Dest$[esp+56]
	call	??4?$_Temp_iterator@UOpinion@@@std@@QAEAAV01@ABUOpinion@@@Z ; std::_Temp_iterator<Opinion>::operator=
	mov	eax, DWORD PTR __First1$[esp+52]
	mov	ecx, DWORD PTR __First2$[esp+52]
	add	eax, 84					; 00000054H
	mov	DWORD PTR __First1$[esp+52], eax
$LN52@Merge@3:

; 2594 : 	_DEBUG_ORDER_PRED(_First1, _Last1, _Pred);
; 2595 : 	_DEBUG_ORDER_PRED(_First2, _Last2, _Pred);
; 2596 : 	_DEBUG_POINTER(_Dest);
; 2597 : 	for (; _First1 != _Last1 && _First2 != _Last2; ++_Dest)

	cmp	eax, DWORD PTR __Last1$[esp+52]
	jne	SHORT $LL4@Merge@3
$LN3@Merge@3:

; 2602 : 
; 2603 : 	_Dest = _STDEXT unchecked_copy(_First1, _Last1, _Dest);	// copy any tail

	sub	esp, 20					; 00000014H
	mov	eax, esp
	mov	DWORD PTR [eax], ebx
	mov	DWORD PTR [eax+4], ebx
	mov	DWORD PTR [eax+8], ebx
	mov	DWORD PTR [eax+12], ebx
	mov	ecx, DWORD PTR __Dest$[esp+88]
	mov	DWORD PTR [eax+16], ecx
	mov	edx, DWORD PTR __Last1$[esp+72]
	mov	eax, DWORD PTR __First1$[esp+72]
	mov	DWORD PTR $T270802[esp+76], esp
	push	edx
	push	eax
	lea	ecx, DWORD PTR $T270803[esp+84]
	push	ecx
	call	??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@0V12@@Z ; stdext::unchecked_copy<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion> >
	mov	esi, DWORD PTR $T270803[esp+88]
	mov	edx, DWORD PTR [eax+16]
	mov	edi, DWORD PTR __imp_??1String@Localization@@UAE@XZ
	add	esp, 32					; 00000020H
	mov	DWORD PTR __Dest$[esp+68], edx
	cmp	esi, ebx
	je	SHORT $LN74@Merge@3
	cmp	esi, DWORD PTR $T270803[esp+64]
	je	SHORT $LN60@Merge@3
	npad	3
$LL62@Merge@3:
	mov	ecx, esi
	call	edi
	add	esi, 84					; 00000054H
	cmp	esi, DWORD PTR $T270803[esp+64]
	jne	SHORT $LL62@Merge@3
	mov	esi, DWORD PTR $T270803[esp+56]
$LN60@Merge@3:
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN74@Merge@3:

; 2604 : 	return (_STDEXT unchecked_copy(_First2, _Last2, _Dest));

	mov	ebp, DWORD PTR ___$ReturnUdt$[esp+52]
	sub	esp, 20					; 00000014H
	mov	eax, esp
	mov	DWORD PTR [eax], ebx
	mov	DWORD PTR [eax+4], ebx
	mov	DWORD PTR [eax+8], ebx
	mov	DWORD PTR [eax+12], ebx
	mov	ecx, DWORD PTR __Dest$[esp+88]
	mov	DWORD PTR [eax+16], ecx
	mov	edx, DWORD PTR __Last2$[esp+72]
	mov	eax, DWORD PTR __First2$[esp+72]
	mov	DWORD PTR $T270804[esp+76], esp
	push	edx
	push	eax
	push	ebp
	call	??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@0V12@@Z ; stdext::unchecked_copy<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion> >
	add	esp, 32					; 00000020H
	mov	esi, DWORD PTR __Dest$[esp+52]
	mov	DWORD PTR $T270810[esp+56], 1
	mov	BYTE PTR __$EHRec$[esp+64], bl
	cmp	esi, ebx
	je	SHORT $LN101@Merge@3
	cmp	esi, DWORD PTR __Dest$[esp+60]
	je	SHORT $LN80@Merge@3
$LL82@Merge@3:
	mov	ecx, esi
	call	edi
	add	esi, 84					; 00000054H
	cmp	esi, DWORD PTR __Dest$[esp+60]
	jne	SHORT $LL82@Merge@3
	mov	esi, DWORD PTR __Dest$[esp+52]
$LN80@Merge@3:
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN101@Merge@3:

; 2605 : 	}

	mov	ecx, DWORD PTR __$EHRec$[esp+56]
	pop	edi
	pop	esi
	mov	eax, ebp
	pop	ebp
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@000V10@UOpinionEval@@Uforward_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0:
	lea	ecx, DWORD PTR __Dest$[ebp-4]
	jmp	??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ ; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>
__unwindfunclet$??$_Merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@000V10@UOpinionEval@@Uforward_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$4:
	mov	eax, DWORD PTR $T270810[ebp]
	and	eax, 1
	je	$LN13@Merge@3
	and	DWORD PTR $T270810[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp-4]
	jmp	??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ ; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>
$LN13@Merge@3:
	ret	0
__ehhandler$??$_Merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@000V10@UOpinionEval@@Uforward_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z:
	mov	eax, OFFSET __ehfuncinfo$??$_Merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@000V10@UOpinionEval@@Uforward_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@000V10@UOpinionEval@@Uforward_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Merge<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion>,OpinionEval,std::forward_iterator_tag>
PUBLIC	?lGetPotentialInternationalTradeRouteDestinations@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPotentialInternationalTradeRouteDestinations
EXTRN	?IsPreviousTradeRoute@CvPlayerTrade@@QAE_NPAVCvCity@@0W4DomainTypes@@W4TradeConnectionType@@@Z:PROC ; CvPlayerTrade::IsPreviousTradeRoute
EXTRN	?canMakeTradeRouteAt@CvUnit@@QBE_NPBVCvPlot@@HHW4TradeConnectionType@@@Z:PROC ; CvUnit::canMakeTradeRouteAt
EXTRN	?canMakeTradeRoute@CvUnit@@QBE_NPBVCvPlot@@@Z:PROC ; CvUnit::canMakeTradeRoute
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?lGetPotentialInternationalTradeRouteDestinations@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetPotentialInternationalTradeRouteDestinations@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetPotentialInternationalTradeRouteDestinations@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetPotentialInternationalTradeRouteDestinations@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetPotentialInternationalTradeRouteDestinations@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iToPressureAmount$229917 = -528			; size = 4
_pkInstance$271031 = -524				; size = 4
_pOriginCity$ = -520					; size = 4
_iFromPressureAmount$229919 = -516			; size = 4
_pkInstance$271016 = -512				; size = 4
_uiConnectionType$229905 = -508				; size = 4
_iOriginY$ = -508					; size = 4
_ui$229890 = -504					; size = 4
tv805 = -500						; size = 4
_eFromReligion$229918 = -496				; size = 4
_eToReligion$229916 = -492				; size = 4
_t2$229932 = -488					; size = 4
_index$ = -484						; size = 4
_pPlayerTrade$ = -480					; size = 4
_iLoopCityY$229904 = -476				; size = 4
_pkUnitPlot$ = -472					; size = 4
_iLoopCityX$229903 = -468				; size = 4
_iCityLoop$229898 = -464				; size = 4
_pOtherPlayerTrade$229897 = -460			; size = 4
_kTradeConnection$229888 = -456				; size = 444
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetPotentialInternationalTradeRouteDestinations@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetPotentialInternationalTradeRouteDestinations, COMDAT

; 3276 : {

	push	-1
	push	__ehhandler$?lGetPotentialInternationalTradeRouteDestinations@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 516				; 00000204H
	push	ebx
	push	ebp
	push	esi

; 3277 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+536]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$271016[esp+556], 0
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN130@lGetPotent@3
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN130@lGetPotent@3
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$271016[esp+544], eax
	test	eax, eax
	je	SHORT $LN130@lGetPotent@3
	xor	bl, bl
$LN130@lGetPotent@3:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN30@lGetPotent@3
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN30@lGetPotent@3:

; 3278 : 	CvUnit* pkUnit = CvLuaUnit::GetInstance(L, 2, false);

	push	esi
	call	_lua_gettop
	push	2
	xor	ebx, ebx
	push	esi
	mov	edi, eax
	mov	DWORD PTR _pkInstance$271031[esp+556], ebx
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN34@lGetPotent@3
	push	OFFSET $SG237816
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN34@lGetPotent@3
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$271031[esp+544], eax
	mov	ebx, eax
$LN34@lGetPotent@3:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8

; 3279 : 	CvPlot* pkUnitPlot = pkUnit->plot();

	mov	ecx, ebx
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot

; 3280 : 
; 3281 : 	CvPlayerTrade* pPlayerTrade = pkPlayer->GetTrade();

	mov	ecx, DWORD PTR _pkInstance$271016[esp+544]
	mov	edi, eax
	mov	DWORD PTR _pkUnitPlot$[esp+544], edi
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade

; 3282 : 
; 3283 : 	int iOriginX = pkUnitPlot->getX();

	movsx	ebp, WORD PTR [edi]
	mov	DWORD PTR _pPlayerTrade$[esp+544], eax

; 3284 : 	int iOriginY = pkUnitPlot->getY();

	movsx	eax, WORD PTR [edi+2]
	mov	DWORD PTR _iOriginY$[esp+544], eax

; 3285 : 	CvCity* pOriginCity = pkUnitPlot->getPlotCity();

	mov	eax, DWORD PTR [edi+104]
	test	eax, eax
	jl	SHORT $LN43@lGetPotent@3
	cmp	eax, 64					; 00000040H
	jge	SHORT $LN43@lGetPotent@3
	mov	ecx, DWORD PTR [edi+108]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	ecx
	mov	ecx, eax
	call	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z	; CvPlayer::getCity
	mov	DWORD PTR _pOriginCity$[esp+544], eax
	jmp	SHORT $LN44@lGetPotent@3
$LN43@lGetPotent@3:
	mov	DWORD PTR _pOriginCity$[esp+544], 0
$LN44@lGetPotent@3:

; 3286 : 
; 3287 : 	lua_createtable(L, 0, 0);

	push	0
	push	0
	push	esi
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 3288 : 	int index = 1;
; 3289 : 
; 3290 : 	if (pkUnit->canMakeTradeRoute(pkUnitPlot))

	push	edi
	mov	ecx, ebx
	mov	DWORD PTR _index$[esp+548], 1
	call	?canMakeTradeRoute@CvUnit@@QBE_NPBVCvPlot@@@Z ; CvUnit::canMakeTradeRoute
	test	al, al
	je	$LN127@lGetPotent@3

; 3291 : 	{
; 3292 : 		TradeConnection kTradeConnection;

	xor	edi, edi
	lea	edx, DWORD PTR _kTradeConnection$229888[esp+600]
	mov	DWORD PTR _kTradeConnection$229888[esp+592], edi
	mov	DWORD PTR _kTradeConnection$229888[esp+596], 40 ; 00000028H
	mov	DWORD PTR _kTradeConnection$229888[esp+588], edx

; 3293 : 		kTradeConnection.m_eOriginOwner = pkPlayer->GetID();

	mov	eax, DWORD PTR _pkInstance$271016[esp+544]
	mov	ecx, DWORD PTR [eax+44]

; 3294 : 		kTradeConnection.m_iOriginX = iOriginX;
; 3295 : 		kTradeConnection.m_iOriginY = iOriginY;

	mov	edx, DWORD PTR _iOriginY$[esp+544]
	mov	DWORD PTR _kTradeConnection$229888[esp+564], ecx

; 3296 : 		kTradeConnection.m_eDomain = pkUnit->getDomainType();

	mov	ecx, ebx
	mov	DWORD PTR __$EHRec$[esp+552], edi
	mov	DWORD PTR _kTradeConnection$229888[esp+548], ebp
	mov	DWORD PTR _kTradeConnection$229888[esp+552], edx
	call	?getDomainType@CvUnit@@QBE?AW4DomainTypes@@XZ ; CvUnit::getDomainType
	mov	DWORD PTR _kTradeConnection$229888[esp+572], eax

; 3297 : 
; 3298 : 		PlayerTypes ePlayer = NO_PLAYER;
; 3299 : 		for (uint ui = 0; ui < MAX_CIV_PLAYERS; ui++)

	mov	DWORD PTR _ui$229890[esp+544], edi
	mov	DWORD PTR tv805[esp+544], edi
	npad	11
$LL16@lGetPotent@3:

; 3300 : 		{
; 3301 : 			ePlayer = (PlayerTypes)ui;
; 3302 : 
; 3303 : 			if (!GET_PLAYER(ePlayer).isAlive())

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	cmp	BYTE PTR [edi+eax+2256], 0
	lea	ecx, DWORD PTR [edi+eax]
	je	$LN15@lGetPotent@3

; 3304 : 			{
; 3305 : 				continue;
; 3306 : 			}
; 3307 : 
; 3308 : 			if (GET_PLAYER(ePlayer).isBarbarian())

	call	?isBarbarian@CvPlayer@@QBE_NXZ		; CvPlayer::isBarbarian
	test	al, al
	jne	$LN15@lGetPotent@3

; 3309 : 			{
; 3310 : 				continue;
; 3311 : 			}
; 3312 : 
; 3313 : 			CvPlayerTrade* pOtherPlayerTrade = GET_PLAYER(ePlayer).GetTrade();

	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	add	ecx, edi
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade

; 3314 : 
; 3315 : 			int iCityLoop;
; 3316 : 			CvCity* pLoopCity = NULL;
; 3317 : 			for(pLoopCity = GET_PLAYER(ePlayer).firstCity(&iCityLoop); pLoopCity != NULL; pLoopCity = GET_PLAYER(ePlayer).nextCity(&iCityLoop))

	mov	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _pOtherPlayerTrade$229897[esp+544], eax
	push	0
	lea	eax, DWORD PTR _iCityLoop$229898[esp+548]
	lea	ecx, DWORD PTR [edi+edx]
	push	eax
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	ebx, eax
	test	ebx, ebx
	je	$LN15@lGetPotent@3
$LL132@lGetPotent@3:

; 3318 : 			{
; 3319 : 				int iLoopCityX = pLoopCity->getX();

	mov	edi, DWORD PTR [ebx+96]

; 3320 : 				int iLoopCityY = pLoopCity->getY();

	mov	ecx, DWORD PTR [ebx+108]

; 3321 : 
; 3322 : 				for (uint uiConnectionType = 0; uiConnectionType < NUM_TRADE_CONNECTION_TYPES; uiConnectionType++)

	xor	ebp, ebp
	mov	DWORD PTR _iLoopCityX$229903[esp+544], edi
	mov	DWORD PTR _iLoopCityY$229904[esp+544], ecx
	mov	DWORD PTR _uiConnectionType$229905[esp+544], ebp
	npad	9
$LL133@lGetPotent@3:

; 3323 : 				{
; 3324 : 					TradeConnectionType eConnectionType = (TradeConnectionType)uiConnectionType;
; 3325 : 					if (pkUnit->canMakeTradeRouteAt(pkUnitPlot, iLoopCityX, iLoopCityY, eConnectionType))

	mov	edx, DWORD PTR _iLoopCityY$229904[esp+544]
	mov	eax, DWORD PTR _pkUnitPlot$[esp+544]
	mov	ecx, DWORD PTR _pkInstance$271031[esp+544]
	push	ebp
	push	edx
	push	edi
	push	eax
	call	?canMakeTradeRouteAt@CvUnit@@QBE_NPBVCvPlot@@HHW4TradeConnectionType@@@Z ; CvUnit::canMakeTradeRouteAt
	test	al, al
	je	$LN7@lGetPotent@3

; 3326 : 					{
; 3327 : 						kTradeConnection.m_iDestX = iLoopCityX;
; 3328 : 						kTradeConnection.m_iDestY = iLoopCityY;

	mov	ecx, DWORD PTR _iLoopCityY$229904[esp+544]

; 3329 : 						kTradeConnection.m_eDestOwner = ePlayer;

	mov	edx, DWORD PTR _ui$229890[esp+544]

; 3330 : 						kTradeConnection.m_eConnectionType = eConnectionType;
; 3331 : 
; 3332 : 						lua_createtable(L, 0, 0);

	push	0
	push	0
	push	esi
	mov	DWORD PTR _kTradeConnection$229888[esp+568], edi
	mov	DWORD PTR _kTradeConnection$229888[esp+572], ecx
	mov	DWORD PTR _kTradeConnection$229888[esp+580], edx
	mov	DWORD PTR _kTradeConnection$229888[esp+588], ebp
	call	_lua_createtable

; 3333 : 						const int t = lua_gettop(L);

	push	esi
	call	_lua_gettop
	mov	edi, eax

; 3334 : 						lua_pushinteger(L, pLoopCity->getX());

	mov	eax, DWORD PTR [ebx+96]
	push	eax
	push	esi
	call	_lua_pushinteger

; 3335 : 						lua_setfield(L, t, "X");

	push	OFFSET $SG229913
	push	edi
	push	esi
	call	_lua_setfield

; 3336 : 						lua_pushinteger(L, pLoopCity->getY());

	mov	eax, DWORD PTR [ebx+108]
	push	eax
	push	esi
	call	_lua_pushinteger

; 3337 : 						lua_setfield(L, t, "Y");

	push	OFFSET $SG229914
	push	edi
	push	esi
	call	_lua_setfield

; 3338 : 						lua_pushinteger(L, uiConnectionType);

	push	ebp
	push	esi
	call	_lua_pushinteger
	add	esp, 64					; 00000040H

; 3339 : 						lua_setfield(L, t, "TradeConnectionType");

	push	OFFSET $SG229915
	push	edi
	push	esi
	call	_lua_setfield

; 3340 : 						
; 3341 : 						ReligionTypes eToReligion = NO_RELIGION;

	or	eax, -1

; 3342 : 						int iToPressureAmount = 0;

	xor	ecx, ecx
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _eToReligion$229916[esp+544], eax

; 3343 : 						ReligionTypes eFromReligion = NO_RELIGION;

	mov	DWORD PTR _eFromReligion$229918[esp+544], eax
	mov	DWORD PTR _iToPressureAmount$229917[esp+544], ecx

; 3344 : 						int iFromPressureAmount = 0;

	mov	DWORD PTR _iFromPressureAmount$229919[esp+544], ecx

; 3345 : 
; 3346 : 						pOriginCity->GetCityReligions()->WouldExertTradeRoutePressureToward(pLoopCity, eToReligion, iToPressureAmount);

	lea	eax, DWORD PTR _iToPressureAmount$229917[esp+544]
	push	eax
	lea	ecx, DWORD PTR _eToReligion$229916[esp+548]
	push	ecx
	mov	ecx, DWORD PTR _pOriginCity$[esp+552]
	push	ebx
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?WouldExertTradeRoutePressureToward@CvCityReligions@@QAE_NPAVCvCity@@AAW4ReligionTypes@@AAH@Z ; CvCityReligions::WouldExertTradeRoutePressureToward

; 3347 : 						pLoopCity->GetCityReligions()->WouldExertTradeRoutePressureToward(pOriginCity, eFromReligion, iFromPressureAmount);

	mov	ecx, DWORD PTR _pOriginCity$[esp+544]
	lea	edx, DWORD PTR _iFromPressureAmount$229919[esp+544]
	push	edx
	lea	eax, DWORD PTR _eFromReligion$229918[esp+548]
	push	eax
	push	ecx
	mov	ecx, ebx
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?WouldExertTradeRoutePressureToward@CvCityReligions@@QAE_NPAVCvCity@@AAW4ReligionTypes@@AAH@Z ; CvCityReligions::WouldExertTradeRoutePressureToward

; 3348 : 
; 3349 : 						int iTradeReligionModifer = pkPlayer->GetPlayerTraits()->GetTradeReligionModifier();

	mov	ecx, DWORD PTR _pkInstance$271016[esp+544]
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	eax, DWORD PTR [eax+324]

; 3350 : 						if (iTradeReligionModifer != 0)

	test	eax, eax
	je	SHORT $LN128@lGetPotent@3

; 3351 : 						{
; 3352 : 							iToPressureAmount *= 100 + iTradeReligionModifer;

	lea	ecx, DWORD PTR [eax+100]
	imul	ecx, DWORD PTR _iToPressureAmount$229917[esp+544]

; 3353 : 							iToPressureAmount /= 100;

	mov	eax, 1374389535				; 51eb851fH
	imul	ecx
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	jmp	SHORT $LN4@lGetPotent@3
$LN128@lGetPotent@3:
	mov	eax, DWORD PTR _iToPressureAmount$229917[esp+544]
$LN4@lGetPotent@3:

; 3354 : 						}
; 3355 : 
; 3356 : 						// Internally pressure is now 10 times greater than what is shown to user
; 3357 : 						iToPressureAmount /= GC.getRELIGION_MISSIONARY_PRESSURE_MULTIPLIER();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7900
	cdq
	idiv	ecx
	mov	DWORD PTR _iToPressureAmount$229917[esp+544], eax

; 3358 : 						iFromPressureAmount /= GC.getRELIGION_MISSIONARY_PRESSURE_MULTIPLIER();

	mov	eax, DWORD PTR _iFromPressureAmount$229919[esp+544]
	cdq
	idiv	ecx

; 3359 : 
; 3360 : 						lua_pushinteger(L, eToReligion);

	mov	edx, DWORD PTR _eToReligion$229916[esp+544]
	push	edx
	push	esi
	mov	DWORD PTR _iFromPressureAmount$229919[esp+552], eax
	call	_lua_pushinteger

; 3361 : 						lua_setfield(L, t, "ToReligion");

	push	OFFSET $SG229922
	push	edi
	push	esi
	call	_lua_setfield

; 3362 : 						lua_pushinteger(L, iToPressureAmount);

	mov	eax, DWORD PTR _iToPressureAmount$229917[esp+564]
	push	eax
	push	esi
	call	_lua_pushinteger

; 3363 : 						lua_setfield(L, t, "ToPressureAmount");

	push	OFFSET $SG229923
	push	edi
	push	esi
	call	_lua_setfield

; 3364 : 						lua_pushinteger(L, eFromReligion);

	mov	ecx, DWORD PTR _eFromReligion$229918[esp+584]
	push	ecx
	push	esi
	call	_lua_pushinteger

; 3365 : 						lua_setfield(L, t, "FromReligion");

	push	OFFSET $SG229924
	push	edi
	push	esi
	call	_lua_setfield

; 3366 : 						lua_pushinteger(L, iFromPressureAmount);

	mov	edx, DWORD PTR _iFromPressureAmount$229919[esp+604]
	push	edx
	push	esi
	call	_lua_pushinteger
	add	esp, 68					; 00000044H

; 3367 : 						lua_setfield(L, t, "FromPressureAmount");

	push	OFFSET $SG229925
	push	edi
	push	esi
	call	_lua_setfield

; 3368 : 
; 3369 : 						lua_pushboolean(L, pPlayerTrade->IsPreviousTradeRoute(pOriginCity, pLoopCity, pkUnit->getDomainType(), eConnectionType));

	mov	ecx, DWORD PTR _pkInstance$271031[esp+556]
	add	esp, 12					; 0000000cH
	push	ebp
	call	?getDomainType@CvUnit@@QBE?AW4DomainTypes@@XZ ; CvUnit::getDomainType
	mov	ecx, DWORD PTR _pPlayerTrade$[esp+548]
	push	eax
	mov	eax, DWORD PTR _pOriginCity$[esp+552]
	push	ebx
	push	eax
	call	?IsPreviousTradeRoute@CvPlayerTrade@@QAE_NPAVCvCity@@0W4DomainTypes@@W4TradeConnectionType@@@Z ; CvPlayerTrade::IsPreviousTradeRoute
	movzx	ecx, al
	push	ecx
	push	esi
	call	_lua_pushboolean

; 3370 : 						lua_setfield(L, t, "OldTradeRoute");

	push	OFFSET $SG229926
	push	edi
	push	esi
	call	_lua_setfield

; 3371 : 
; 3372 : 						int iInnerIndex = 1;
; 3373 : 						lua_createtable(L, 0, 0);

	push	0
	push	0
	push	esi
	call	_lua_createtable
	add	esp, 32					; 00000020H

; 3374 : 						for (uint uiYield = 0; uiYield < NUM_YIELD_TYPES; uiYield++)

	xor	ebp, ebp
$LL3@lGetPotent@3:

; 3375 : 						{
; 3376 : 							lua_createtable(L, 0, 0);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 3377 : 							const int t2 = lua_gettop(L);

	push	esi
	call	_lua_gettop

; 3378 : 							lua_pushinteger(L, pPlayerTrade->GetTradeConnectionValueTimes100(kTradeConnection, (YieldTypes)uiYield, true));

	mov	ecx, DWORD PTR _pPlayerTrade$[esp+560]
	add	esp, 16					; 00000010H
	push	1
	push	ebp
	lea	edx, DWORD PTR _kTradeConnection$229888[esp+552]
	push	edx
	mov	DWORD PTR _t2$229932[esp+556], eax
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	push	eax
	push	esi
	call	_lua_pushinteger

; 3379 : 							lua_setfield(L, t2, "Mine");

	mov	eax, DWORD PTR _t2$229932[esp+552]
	push	OFFSET $SG229934
	push	eax
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 3380 : 							lua_pushinteger(L, pOtherPlayerTrade->GetTradeConnectionValueTimes100(kTradeConnection, (YieldTypes)uiYield, false));

	push	0
	push	ebp
	lea	ecx, DWORD PTR _kTradeConnection$229888[esp+552]
	push	ecx
	mov	ecx, DWORD PTR _pOtherPlayerTrade$229897[esp+556]
	call	?GetTradeConnectionValueTimes100@CvPlayerTrade@@QAEHABUTradeConnection@@W4YieldTypes@@_N@Z ; CvPlayerTrade::GetTradeConnectionValueTimes100
	push	eax
	push	esi
	call	_lua_pushinteger

; 3381 : 							lua_setfield(L, t2, "Theirs");

	mov	edx, DWORD PTR _t2$229932[esp+552]
	push	OFFSET $SG229936
	push	edx
	push	esi
	call	_lua_setfield

; 3382 : 							lua_rawseti(L, -2, iInnerIndex++);

	inc	ebp
	push	ebp
	push	-2					; fffffffeH
	push	esi
	call	_lua_rawseti
	add	esp, 32					; 00000020H
	cmp	ebp, 6
	jb	SHORT $LL3@lGetPotent@3

; 3383 : 						}
; 3384 : 						lua_setfield(L, t, "Yields");

	push	OFFSET $SG229937
	push	edi
	push	esi
	call	_lua_setfield

; 3385 : 						lua_rawseti(L, -2, index++);

	mov	edi, DWORD PTR _index$[esp+556]
	push	edi
	push	-2					; fffffffeH
	push	esi
	call	_lua_rawseti
	mov	ebp, DWORD PTR _uiConnectionType$229905[esp+568]
	add	esp, 24					; 00000018H
	inc	edi
	mov	DWORD PTR _index$[esp+544], edi
	mov	edi, DWORD PTR _iLoopCityX$229903[esp+544]
$LN7@lGetPotent@3:
	inc	ebp
	mov	DWORD PTR _uiConnectionType$229905[esp+544], ebp
	cmp	ebp, 3
	jb	$LL133@lGetPotent@3
	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	ecx, DWORD PTR tv805[esp+544]
	push	0
	lea	edx, DWORD PTR _iCityLoop$229898[esp+548]
	add	ecx, eax
	push	edx
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	ebx, eax
	test	ebx, ebx
	jne	$LL132@lGetPotent@3

; 3314 : 
; 3315 : 			int iCityLoop;
; 3316 : 			CvCity* pLoopCity = NULL;
; 3317 : 			for(pLoopCity = GET_PLAYER(ePlayer).firstCity(&iCityLoop); pLoopCity != NULL; pLoopCity = GET_PLAYER(ePlayer).nextCity(&iCityLoop))

	mov	edi, DWORD PTR tv805[esp+544]
$LN15@lGetPotent@3:

; 3297 : 
; 3298 : 		PlayerTypes ePlayer = NO_PLAYER;
; 3299 : 		for (uint ui = 0; ui < MAX_CIV_PLAYERS; ui++)

	inc	DWORD PTR _ui$229890[esp+544]
	add	edi, 63236				; 0000f704H
	mov	DWORD PTR tv805[esp+544], edi
	cmp	edi, 3983868				; 003cc9fcH
	jb	$LL16@lGetPotent@3

; 3386 : 					}
; 3387 : 				}
; 3388 : 			}
; 3389 : 		}
; 3390 : 	}

	mov	eax, DWORD PTR _kTradeConnection$229888[esp+588]
	lea	ecx, DWORD PTR _kTradeConnection$229888[esp+600]
	mov	DWORD PTR __$EHRec$[esp+552], -1
	cmp	eax, ecx
	je	SHORT $LN127@lGetPotent@3
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN127@lGetPotent@3:

; 3391 : 
; 3392 : 	return 1;
; 3393 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+544]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 528				; 00000210H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetPotentialInternationalTradeRouteDestinations@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _kTradeConnection$229888[ebp]
	jmp	??1TradeConnection@@QAE@XZ
__ehhandler$?lGetPotentialInternationalTradeRouteDestinations@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetPotentialInternationalTradeRouteDestinations@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetPotentialInternationalTradeRouteDestinations@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetPotentialInternationalTradeRouteDestinations
PUBLIC	?push_back@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QAEIABQAVCvPlot@@H@Z ; CvWeightedVector<CvPlot *,800,1>::push_back
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvweightedvector.h
;	COMDAT ?push_back@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QAEIABQAVCvPlot@@H@Z
_TEXT	SEGMENT
_element$ = 8						; size = 4
_iWeight$ = 12						; size = 4
?push_back@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QAEIABQAVCvPlot@@H@Z PROC ; CvWeightedVector<CvPlot *,800,1>::push_back, COMDAT
; _this$ = ecx

; 104  : //		FAssertMsg(iWeight >= 0, "Weight should not be negative.");
; 105  : 
; 106  : 		WeightedElement weightedElem;
; 107  : 		weightedElem.m_Element = element;

	mov	eax, DWORD PTR _element$[esp-4]
	push	esi
	mov	esi, ecx
	push	edi
	mov	edi, DWORD PTR [eax]

; 108  : 		weightedElem.m_iWeight = iWeight;
; 109  : 
; 110  : 		return m_pItems.push_back(weightedElem);

	mov	eax, DWORD PTR [esi+8]
	mov	BYTE PTR [esi+6412], 0
	cmp	DWORD PTR [esi+4], eax
	jne	SHORT $LN5@push_back@2
	push	eax
	call	?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@IAEXI@Z ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::GrowSize
$LN5@push_back@2:
	mov	ecx, DWORD PTR [esi+4]
	mov	edx, DWORD PTR [esi]
	lea	eax, DWORD PTR [edx+ecx*8]
	test	eax, eax
	je	SHORT $LN8@push_back@2
	mov	ecx, DWORD PTR _iWeight$[esp+4]
	mov	DWORD PTR [eax], edi
	mov	DWORD PTR [eax+4], ecx
$LN8@push_back@2:
	mov	eax, DWORD PTR [esi+4]
	lea	edx, DWORD PTR [eax+1]
	pop	edi
	mov	DWORD PTR [esi+4], edx
	pop	esi

; 111  : 	};

	ret	8
?push_back@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QAEIABQAVCvPlot@@H@Z ENDP ; CvWeightedVector<CvPlot *,800,1>::push_back
_TEXT	ENDS
PUBLIC	?reserve@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QAEXI@Z ; CvWeightedVector<CvPlot *,800,1>::reserve
; Function compile flags: /Ogtpy
;	COMDAT ?reserve@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QAEXI@Z
_TEXT	SEGMENT
_uiNewSize$ = 8						; size = 4
?reserve@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QAEXI@Z PROC ; CvWeightedVector<CvPlot *,800,1>::reserve, COMDAT
; _this$ = ecx

; 128  : 		m_pItems.reserve(uiNewSize);

	jmp	?GrowSizeToFit@?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@IAEXI@Z ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::GrowSizeToFit
?reserve@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QAEXI@Z ENDP ; CvWeightedVector<CvPlot *,800,1>::reserve
_TEXT	ENDS
PUBLIC	??1?$_Tree_val@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::~_Tree_val<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Tree_val@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree_val@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_val<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::~_Tree_val<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >, COMDAT
; _this$ = ecx
	ret	0
??1?$_Tree_val@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::~_Tree_val<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@0@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::erase
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@0@Z
_TEXT	SEGMENT
$T271301 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@0@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::erase, COMDAT
; _this$ = ecx

; 934  : 		{	// erase [_First, _Last)

	push	ecx

; 935  : 		if (_First == begin() && _Last == end())

	mov	edx, DWORD PTR __Last$[esp]
	push	esi
	mov	esi, ecx
	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR __First$[esp+4]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN101@erase@2
	cmp	edx, eax
	jne	SHORT $LN101@erase@2

; 936  : 			{	// erase all
; 937  : 			clear();

	mov	eax, DWORD PTR [eax+4]
	push	eax
	mov	ecx, esi
	call	?_Erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Erase
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [eax+4], eax
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [eax], eax
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [eax+8], eax

; 938  : 			return (begin());

	mov	ecx, DWORD PTR [esi+4]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+4]
	mov	DWORD PTR [eax], edx
	pop	esi

; 945  : 			}
; 946  : 		}

	pop	ecx
	ret	12					; 0000000cH
$LN101@erase@2:

; 939  : 			}
; 940  : 		else
; 941  : 			{	// partial erase, one at a time
; 942  : 			while (_First != _Last)

	cmp	ecx, edx
	je	SHORT $LN1@erase@2
	npad	2
$LL2@erase@2:

; 943  : 				erase(_First++);

	cmp	BYTE PTR [ecx+21], 0
	mov	edx, ecx
	jne	SHORT $LN65@erase@2
	mov	eax, DWORD PTR [ecx+8]
	cmp	BYTE PTR [eax+21], 0
	jne	SHORT $LN103@erase@2
	mov	ecx, eax
	mov	eax, DWORD PTR [ecx]
	cmp	BYTE PTR [eax+21], 0
	jne	SHORT $LN79@erase@2
	npad	5
$LL80@erase@2:
	mov	ecx, eax
	mov	eax, DWORD PTR [ecx]
	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LL80@erase@2
$LN79@erase@2:
	mov	DWORD PTR __First$[esp+4], ecx
	jmp	SHORT $LN65@erase@2
$LN103@erase@2:
	mov	eax, DWORD PTR [ecx+4]
	cmp	BYTE PTR [eax+21], 0
	jne	SHORT $LN63@erase@2
	npad	7
$LL64@erase@2:
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN63@erase@2
	mov	ecx, eax
	mov	DWORD PTR __First$[esp+4], ecx
	mov	eax, DWORD PTR [eax+4]
	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LL64@erase@2
$LN63@erase@2:
	mov	DWORD PTR __First$[esp+4], eax
$LN65@erase@2:
	push	edx
	lea	eax, DWORD PTR $T271301[esp+12]
	push	eax
	mov	ecx, esi
	call	?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::erase
	mov	ecx, DWORD PTR __First$[esp+4]
	cmp	ecx, DWORD PTR __Last$[esp+4]
	jne	SHORT $LL2@erase@2
$LN1@erase@2:

; 944  : 			return (_Make_iter(_First));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp+4]
	mov	DWORD PTR [eax], ecx
	pop	esi

; 945  : 			}
; 946  : 		}

	pop	ecx
	ret	12					; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::erase
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@IAEXPAW4PolicyTypes@@0@Z ; std::vector<enum PolicyTypes,std::allocator<enum PolicyTypes> >::_Destroy
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Destroy@?$vector@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@IAEXPAW4PolicyTypes@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@IAEXPAW4PolicyTypes@@0@Z PROC ; std::vector<enum PolicyTypes,std::allocator<enum PolicyTypes> >::_Destroy, COMDAT
; _this$ = ecx

; 1119 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1120 : 		}

	ret	8
?_Destroy@?$vector@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@IAEXPAW4PolicyTypes@@0@Z ENDP ; std::vector<enum PolicyTypes,std::allocator<enum PolicyTypes> >::_Destroy
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@VCvString@@@std@@@std@@YAXPAVCvString@@0AAV?$allocator@VCvString@@@0@@Z ; std::_Destroy_range<std::allocator<CvString> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@VCvString@@@std@@@std@@YAXPAVCvString@@0AAV?$allocator@VCvString@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@VCvString@@@std@@@std@@YAXPAVCvString@@0AAV?$allocator@VCvString@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CvString> >, COMDAT

; 224  : 	{	// destroy [_First, _Last)

	push	esi

; 225  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));

	mov	esi, DWORD PTR __First$[esp]
	push	edi
	mov	edi, DWORD PTR __Last$[esp+4]
	cmp	esi, edi
	je	SHORT $LN5@Destroy_ra@3
	npad	2
$LL7@Destroy_ra@3:
	mov	ecx, esi
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	add	esi, 28					; 0000001cH
	cmp	esi, edi
	jne	SHORT $LL7@Destroy_ra@3
$LN5@Destroy_ra@3:
	pop	edi
	pop	esi

; 226  : 	}

	ret	0
??$_Destroy_range@V?$allocator@VCvString@@@std@@@std@@YAXPAVCvString@@0AAV?$allocator@VCvString@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CvString> >
_TEXT	ENDS
PUBLIC	??$unchecked_uninitialized_fill_n@PAUOpinion@@IU1@V?$allocator@UOpinion@@@std@@@stdext@@YAXPAUOpinion@@IABU1@AAV?$allocator@UOpinion@@@std@@@Z ; stdext::unchecked_uninitialized_fill_n<Opinion *,unsigned int,Opinion,std::allocator<Opinion> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$unchecked_uninitialized_fill_n@PAUOpinion@@IU1@V?$allocator@UOpinion@@@std@@@stdext@@YAXPAUOpinion@@IABU1@AAV?$allocator@UOpinion@@@std@@@Z
_TEXT	SEGMENT
$T271678 = -4						; size = 1
__Cat$271683 = -4					; size = 1
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_fill_n@PAUOpinion@@IU1@V?$allocator@UOpinion@@@std@@@stdext@@YAXPAUOpinion@@IABU1@AAV?$allocator@UOpinion@@@std@@@Z PROC ; stdext::unchecked_uninitialized_fill_n<Opinion *,unsigned int,Opinion,std::allocator<Opinion> >, COMDAT

; 940  : 	{	// copy _Count *_Val to raw _First, using _Al

	push	ecx

; 941  : 	_STD _Uninit_fill_n(_First, _Count, _Val, _Al,
; 942  : 		_STD _Ptr_cat(_First, _First), _STD _Range_checked_iterator_tag());

	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T271678[esp+4], 0
	mov	eax, DWORD PTR $T271678[esp+4]
	mov	ecx, DWORD PTR __Cat$271683[esp+4]
	push	eax
	mov	eax, DWORD PTR __Val$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Count$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_fill_n@PAUOpinion@@IU1@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@IABU1@AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<Opinion *,unsigned int,Opinion,std::allocator<Opinion> >

; 943  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$unchecked_uninitialized_fill_n@PAUOpinion@@IU1@V?$allocator@UOpinion@@@std@@@stdext@@YAXPAUOpinion@@IABU1@AAV?$allocator@UOpinion@@@std@@@Z ENDP ; stdext::unchecked_uninitialized_fill_n<Opinion *,unsigned int,Opinion,std::allocator<Opinion> >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@0AAV?$allocator@UOpinion@@@0@@Z ; std::_Destroy_range<std::allocator<Opinion> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@0AAV?$allocator@UOpinion@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@0AAV?$allocator@UOpinion@@@0@@Z PROC ; std::_Destroy_range<std::allocator<Opinion> >, COMDAT

; 224  : 	{	// destroy [_First, _Last)

	push	esi

; 225  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));

	mov	esi, DWORD PTR __First$[esp]
	push	edi
	mov	edi, DWORD PTR __Last$[esp+4]
	cmp	esi, edi
	je	SHORT $LN5@Destroy_ra@4
	push	ebx
	mov	ebx, DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LL7@Destroy_ra@4:
	mov	ecx, esi
	call	ebx
	add	esi, 84					; 00000054H
	cmp	esi, edi
	jne	SHORT $LL7@Destroy_ra@4
	pop	ebx
$LN5@Destroy_ra@4:
	pop	edi
	pop	esi

; 226  : 	}

	ret	0
??$_Destroy_range@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@0AAV?$allocator@UOpinion@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<Opinion> >
_TEXT	ENDS
PUBLIC	??$unchecked_uninitialized_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@stdext@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@std@@@Z ; stdext::unchecked_uninitialized_copy<CvString *,CvString *,std::allocator<CvString> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$unchecked_uninitialized_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@stdext@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@std@@@Z
_TEXT	SEGMENT
$T271742 = -4						; size = 1
__Cat$271747 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@stdext@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@std@@@Z PROC ; stdext::unchecked_uninitialized_copy<CvString *,CvString *,std::allocator<CvString> >, COMDAT

; 819  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

	push	ecx

; 820  : 	return (_STD _Uninit_copy(_CHECKED_BASE(_First),
; 821  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 822  : 		_STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T271742[esp+4], 0
	mov	eax, DWORD PTR $T271742[esp+4]
	mov	ecx, DWORD PTR __Cat$271747[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<CvString *,CvString *,std::allocator<CvString> >

; 823  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$unchecked_uninitialized_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@stdext@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@std@@@Z ENDP ; stdext::unchecked_uninitialized_copy<CvString *,CvString *,std::allocator<CvString> >
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@U_Undefined_move_tag@3@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_move<Opinion *,Opinion *,std::allocator<Opinion>,std::_Undefined_move_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Uninit_move@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@U_Undefined_move_tag@3@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T271760 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$271764 = 16					; size = 1
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_move@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@U_Undefined_move_tag@3@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_move<Opinion *,Opinion *,std::allocator<Opinion>,std::_Undefined_move_tag>, COMDAT

; 206  : 	{	// move defaults to copy if there is not a more effecient way

	push	ecx

; 207  : 	return (_STDEXT unchecked_uninitialized_copy(_First, _Last, _Dest, _Al));

	mov	ecx, DWORD PTR __Cat$271764[esp]
	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T271760[esp+4], 0
	mov	eax, DWORD PTR $T271760[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<Opinion *,Opinion *,std::allocator<Opinion> >

; 208  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$_Uninit_move@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@U_Undefined_move_tag@3@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_move<Opinion *,Opinion *,std::allocator<Opinion>,std::_Undefined_move_tag>
_TEXT	ENDS
PUBLIC	??$_Insertion_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0UOpinionEval@@@Z ; std::_Insertion_sort<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$_Insertion_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0UOpinionEval@@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Pred$ = 16						; size = 1
??$_Insertion_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0UOpinionEval@@@Z PROC ; std::_Insertion_sort<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval>, COMDAT

; 3150 : 	std::_Insertion_sort1(_First, _Last, _Pred, _Val_type(_First));

	mov	eax, DWORD PTR __Pred$[esp-4]
	mov	ecx, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	push	0
	push	eax
	push	ecx
	push	edx
	call	??$_Insertion_sort1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@UOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0UOpinionEval@@PAUOpinion@@@Z ; std::_Insertion_sort1<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval,Opinion>
	add	esp, 16					; 00000010H

; 3151 : 	}

	ret	0
??$_Insertion_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0UOpinionEval@@@Z ENDP ; std::_Insertion_sort<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval>
_TEXT	ENDS
PUBLIC	??$_Sort_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z ; std::_Sort_heap<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Sort_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Sort_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z PROC ; std::_Sort_heap<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>, COMDAT

; 2215 : 	_DEBUG_RANGE(_First, _Last);
; 2216 : 	_DEBUG_HEAP(_First, _Last);
; 2217 : 	for (; 1 < _Last - _First; --_Last)

	mov	ecx, DWORD PTR __Last$[esp-4]
	push	ebx
	push	esi
	push	edi
	mov	edi, DWORD PTR __First$[esp+8]
	mov	eax, ecx
	sub	eax, edi
	sar	eax, 3
	cmp	eax, 1
	jle	SHORT $LN1@Sort_heap
	mov	ebx, 8
	sub	ebx, edi

; 2218 : 		std::pop_heap(_First, _Last);

	cmp	eax, 1
	lea	esi, DWORD PTR [ecx-8]
	jle	SHORT $LN2@Sort_heap
$LN24@Sort_heap:
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [esi+4]
	mov	DWORD PTR [esi], eax
	mov	eax, DWORD PTR [edi+4]
	sub	esp, 8
	mov	DWORD PTR [esi+4], eax
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	lea	ecx, DWORD PTR [ebx+esi-8]
	sar	ecx, 3
	push	ecx
	push	0
	push	edi
	mov	DWORD PTR [eax+4], edx
	call	??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HHU12@@Z ; std::_Adjust_heap<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,int,CvWeightedVector<CvPlot *,800,1>::WeightedElement>
	add	esp, 20					; 00000014H
$LN2@Sort_heap:
	sub	esi, 8
	lea	eax, DWORD PTR [ebx+esi]
	sar	eax, 3
	cmp	eax, 1
	jg	SHORT $LN24@Sort_heap
$LN1@Sort_heap:

; 2219 : 	}

	pop	edi
	pop	esi
	pop	ebx
	ret	0
??$_Sort_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z ENDP ; std::_Sort_heap<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
_TEXT	ENDS
PUBLIC	??$unchecked_merge@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V23@UOpinionEval@@@stdext@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@PAUOpinion@@0V12@11UOpinionEval@@@Z ; stdext::unchecked_merge<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval>
; Function compile flags: /Ogtpy
;	COMDAT ??$unchecked_merge@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V23@UOpinionEval@@@stdext@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@PAUOpinion@@0V12@11UOpinionEval@@@Z
_TEXT	SEGMENT
$T271838 = -4						; size = 1
$T271839 = 8						; size = 1
___$ReturnUdt$ = 8					; size = 4
__First1$ = 12						; size = 4
__Last1$ = 16						; size = 4
__First2$ = 20						; size = 4
__Last2$ = 24						; size = 4
__Dest$ = 28						; size = 4
__Pred$ = 32						; size = 1
??$unchecked_merge@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V23@UOpinionEval@@@stdext@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@PAUOpinion@@0V12@11UOpinionEval@@@Z PROC ; stdext::unchecked_merge<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval>, COMDAT

; 5157 : 	{	//  copy merging ranges, both using _Pred

	push	ecx

; 5158 : 		return _STD _Merge(_CHECKED_BASE(_First1), _CHECKED_BASE(_Last1), _CHECKED_BASE(_First2), _CHECKED_BASE(_Last2), _Dest, _Pred,
; 5159 : 			_STD _Iter_random(_First1, _First2,_Dest), _STD _Range_checked_iterator_tag());

	mov	ecx, DWORD PTR $T271839[esp]
	mov	edx, DWORD PTR __Pred$[esp]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[esp+4]
	mov	BYTE PTR $T271838[esp+8], 0
	mov	eax, DWORD PTR $T271838[esp+8]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+8]
	push	ecx
	mov	ecx, DWORD PTR __Last2$[esp+12]
	push	edx
	mov	edx, DWORD PTR __First2$[esp+16]
	push	eax
	mov	eax, DWORD PTR __Last1$[esp+20]
	push	ecx
	mov	ecx, DWORD PTR __First1$[esp+24]
	push	edx
	push	eax
	push	ecx
	push	esi
	call	??$_Merge@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V23@UOpinionEval@@Urandom_access_iterator_tag@3@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@PAUOpinion@@0V10@11UOpinionEval@@Urandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Merge<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval,std::random_access_iterator_tag>
	add	esp, 36					; 00000024H
	mov	eax, esi
	pop	esi

; 5160 : 	}

	pop	ecx
	ret	0
??$unchecked_merge@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V23@UOpinionEval@@@stdext@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@PAUOpinion@@0V12@11UOpinionEval@@@Z ENDP ; stdext::unchecked_merge<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval>
_TEXT	ENDS
PUBLIC	??$_Unchecked_merge_backward@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@PAUOpinion@@V12@UOpinionEval@@@stdext@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@0PAUOpinion@@10UOpinionEval@@@Z ; stdext::_Unchecked_merge_backward<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Unchecked_merge_backward@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@PAUOpinion@@V12@UOpinionEval@@@stdext@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@0PAUOpinion@@10UOpinionEval@@@Z
_TEXT	SEGMENT
$T271847 = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
__First1$ = 12						; size = 4
__Last1$ = 16						; size = 4
__First2$ = 20						; size = 4
__Last2$ = 24						; size = 4
__Dest$ = 28						; size = 4
__Pred$ = 32						; size = 1
??$_Unchecked_merge_backward@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@PAUOpinion@@V12@UOpinionEval@@@stdext@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@0PAUOpinion@@10UOpinionEval@@@Z PROC ; stdext::_Unchecked_merge_backward<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval>, COMDAT

; 5227 : 	{

	push	ecx

; 5228 : 		return _STD _Merge_backward(_First1, _Last1, _First2, _Last2, _Dest, _Pred, _STD _Range_checked_iterator_tag());

	mov	ecx, DWORD PTR __Pred$[esp]
	mov	edx, DWORD PTR __Dest$[esp]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[esp+4]
	mov	BYTE PTR $T271847[esp+8], 0
	mov	eax, DWORD PTR $T271847[esp+8]
	push	eax
	mov	eax, DWORD PTR __Last2$[esp+8]
	push	ecx
	mov	ecx, DWORD PTR __First2$[esp+12]
	push	edx
	mov	edx, DWORD PTR __Last1$[esp+16]
	push	eax
	mov	eax, DWORD PTR __First1$[esp+20]
	push	ecx
	push	edx
	push	eax
	push	esi
	call	??$_Merge_backward@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@PAUOpinion@@V12@UOpinionEval@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@0PAUOpinion@@10UOpinionEval@@U_Range_checked_iterator_tag@0@@Z ; std::_Merge_backward<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval>
	add	esp, 32					; 00000020H
	mov	eax, esi
	pop	esi

; 5229 : 	}

	pop	ecx
	ret	0
??$_Unchecked_merge_backward@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@PAUOpinion@@V12@UOpinionEval@@@stdext@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@0PAUOpinion@@10UOpinionEval@@@Z ENDP ; stdext::_Unchecked_merge_backward<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval>
_TEXT	ENDS
PUBLIC	??$_Chunked_merge@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinionEval@@@std@@YAXPAUOpinion@@0V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@HHUOpinionEval@@U_Range_checked_iterator_tag@0@@Z ; std::_Chunked_merge<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,OpinionEval>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Chunked_merge@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinionEval@@@std@@YAXPAUOpinion@@0V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@HHUOpinionEval@@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T271897 = -8						; size = 1
$T271851 = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Chunk$ = 20						; size = 4
$T271921 = 24						; size = 1
__Cat$271925 = 24					; size = 1
$T271923 = 24						; size = 1
$T271898 = 24						; size = 1
$T271853 = 24						; size = 4
$T271852 = 24						; size = 4
__Count$ = 24						; size = 4
__Pred$ = 28						; size = 1
___formal$ = 32						; size = 1
??$_Chunked_merge@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinionEval@@@std@@YAXPAUOpinion@@0V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@HHUOpinionEval@@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Chunked_merge<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,OpinionEval>, COMDAT

; 3435 : 	for (_Diff _Chunk2 = _Chunk * 2; _Chunk2 <= _Count; _Count -= _Chunk2)

	mov	eax, DWORD PTR __Count$[esp-4]
	mov	edx, DWORD PTR __Dest$[esp-4]
	mov	ecx, DWORD PTR __First$[esp-4]
	sub	esp, 8
	push	ebp
	mov	ebp, DWORD PTR __Chunk$[esp+8]
	push	edi
	lea	edi, DWORD PTR [ebp+ebp]
	cmp	edi, eax
	jg	SHORT $LN3@Chunked_me@3
	push	ebx
	imul	ebp, 84					; 00000054H
	push	esi
$LL43@Chunked_me@3:

; 3436 : 		{	// copy merging pairs of adjacent chunks
; 3437 : 		_BidIt _Mid1 = _First;
; 3438 : 		std::advance(_Mid1, _Chunk);
; 3439 : 		_BidIt _Mid2 = _Mid1;
; 3440 : 		std::advance(_Mid2, _Chunk);
; 3441 : 
; 3442 : 		_Dest = _STDEXT unchecked_merge(_First, _Mid1, _Mid1, _Mid2, _Dest, _Pred);

	mov	BYTE PTR $T271897[esp+24], 0
	mov	ebx, DWORD PTR $T271897[esp+24]
	push	ebx
	mov	ebx, DWORD PTR $T271898[esp+24]
	push	ebx
	mov	ebx, DWORD PTR __Pred$[esp+28]
	push	ebx
	lea	eax, DWORD PTR [ecx+ebp]
	push	edx
	lea	esi, DWORD PTR [eax+ebp]
	push	esi
	push	eax
	push	eax
	push	ecx
	lea	eax, DWORD PTR $T271851[esp+56]
	push	eax
	call	??$_Merge@PAUOpinion@@PAU1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@Urandom_access_iterator_tag@3@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@PAUOpinion@@000V10@UOpinionEval@@Urandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Merge<Opinion *,Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval,std::random_access_iterator_tag>
	mov	eax, DWORD PTR __Count$[esp+56]
	mov	edx, DWORD PTR $T271851[esp+60]
	sub	eax, edi
	add	esp, 36					; 00000024H
	cmp	eax, edi
	mov	DWORD PTR __Dest$[esp+20], edx

; 3443 : 		_First = _Mid2;

	mov	ecx, esi
	mov	DWORD PTR __Count$[esp+20], eax
	jge	SHORT $LL43@Chunked_me@3
	mov	ebp, DWORD PTR __Chunk$[esp+20]
	pop	esi
	pop	ebx
$LN3@Chunked_me@3:

; 3444 : 		}
; 3445 : 
; 3446 : 	if (_Count <= _Chunk)
; 3447 : 		_STDEXT unchecked_copy(_First, _Last, _Dest);	// copy partial last chunk

	mov	BYTE PTR $T271921[esp+12], 0
	cmp	eax, ebp
	mov	eax, DWORD PTR $T271921[esp+12]
	push	eax
	mov	eax, DWORD PTR __Cat$271925[esp+16]
	push	eax
	jg	SHORT $LN2@Chunked_me@3
	mov	eax, DWORD PTR $T271923[esp+20]
	push	eax
	push	edx
	mov	edx, DWORD PTR __Last$[esp+28]
	push	edx
	push	ecx
	lea	eax, DWORD PTR $T271852[esp+36]
	push	eax
	call	??$_Copy_opt@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@Urandom_access_iterator_tag@3@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@PAUOpinion@@0V10@Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::random_access_iterator_tag>
	add	esp, 28					; 0000001cH
	pop	edi
	pop	ebp

; 3454 : 		}
; 3455 : 	}

	add	esp, 8
	ret	0
$LN2@Chunked_me@3:

; 3448 : 	else
; 3449 : 		{	// copy merging whole and partial last chunk
; 3450 : 		_BidIt _Mid1 = _First;
; 3451 : 		std::advance(_Mid1, _Chunk);
; 3452 : 
; 3453 : 		_STDEXT unchecked_merge(_First, _Mid1, _Mid1, _Last, _Dest, _Pred);

	mov	eax, DWORD PTR __Pred$[esp+20]
	imul	ebp, 84					; 00000054H
	push	eax
	push	edx
	mov	edx, DWORD PTR __Last$[esp+28]
	push	edx
	add	ebp, ecx
	push	ebp
	push	ebp
	push	ecx
	lea	eax, DWORD PTR $T271853[esp+44]
	push	eax
	call	??$_Merge@PAUOpinion@@PAU1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@Urandom_access_iterator_tag@3@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@PAUOpinion@@000V10@UOpinionEval@@Urandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Merge<Opinion *,Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval,std::random_access_iterator_tag>
	add	esp, 36					; 00000024H
	pop	edi
	pop	ebp

; 3454 : 		}
; 3455 : 	}

	add	esp, 8
	ret	0
??$_Chunked_merge@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinionEval@@@std@@YAXPAUOpinion@@0V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@HHUOpinionEval@@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Chunked_merge<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,OpinionEval>
_TEXT	ENDS
PUBLIC	??$rotate@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00@Z ; std::rotate<std::_Vector_iterator<Opinion,std::allocator<Opinion> > >
; Function compile flags: /Ogtpy
;	COMDAT ??$rotate@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
??$rotate@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00@Z PROC ; std::rotate<std::_Vector_iterator<Opinion,std::allocator<Opinion> > >, COMDAT

; 1719 : 	if (_First != _Mid && _Mid != _Last)

	mov	edx, DWORD PTR __First$[esp-4]
	mov	eax, DWORD PTR __Mid$[esp-4]
	cmp	edx, eax
	je	SHORT $LN14@rotate
	mov	ecx, DWORD PTR __Last$[esp-4]
	cmp	eax, ecx
	je	SHORT $LN14@rotate

; 1720 : 		_Rotate(_CHECKED_BASE(_First), _CHECKED_BASE(_Mid), _CHECKED_BASE(_Last), _Iter_cat(_First));

	push	0
	push	0
	push	ecx
	push	eax
	push	edx
	call	??$_Rotate@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00PAHPAUOpinion@@@Z ; std::_Rotate<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion>
	add	esp, 20					; 00000014H
$LN14@rotate:

; 1721 : 	}

	ret	0
??$rotate@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00@Z ENDP ; std::rotate<std::_Vector_iterator<Opinion,std::allocator<Opinion> > >
_TEXT	ENDS
PUBLIC	??$unchecked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@000V12@UOpinionEval@@@Z ; stdext::unchecked_merge<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion>,OpinionEval>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
xdata$x	SEGMENT
__unwindtable$??$unchecked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@000V12@UOpinionEval@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$unchecked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@000V12@UOpinionEval@@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??$unchecked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@000V12@UOpinionEval@@@Z$0
__ehfuncinfo$??$unchecked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@000V12@UOpinionEval@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$unchecked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@000V12@UOpinionEval@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
xdata$x	ENDS
;	COMDAT ??$unchecked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@000V12@UOpinionEval@@@Z
_TEXT	SEGMENT
$T272015 = -20						; size = 1
$T272017 = -20						; size = 4
$T272021 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__First1$ = 12						; size = 4
__Last1$ = 16						; size = 4
__First2$ = 20						; size = 4
__Last2$ = 24						; size = 4
__Dest$ = 28						; size = 20
$T272016 = 48						; size = 1
__Pred$ = 48						; size = 1
??$unchecked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@000V12@UOpinionEval@@@Z PROC ; stdext::unchecked_merge<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion>,OpinionEval>, COMDAT

; 5157 : 	{	//  copy merging ranges, both using _Pred

	push	-1
	push	__ehhandler$??$unchecked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@000V12@UOpinionEval@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	ebx
	push	ebp
	push	esi

; 5158 : 		return _STD _Merge(_CHECKED_BASE(_First1), _CHECKED_BASE(_Last1), _CHECKED_BASE(_First2), _CHECKED_BASE(_Last2), _Dest, _Pred,
; 5159 : 			_STD _Iter_random(_First1, _First2,_Dest), _STD _Range_checked_iterator_tag());

	xor	ebx, ebx
	push	edi
	mov	DWORD PTR $T272021[esp+36], ebx
	mov	ecx, DWORD PTR $T272016[esp+32]
	mov	edx, DWORD PTR __Pred$[esp+32]
	mov	ebp, DWORD PTR ___$ReturnUdt$[esp+32]
	mov	BYTE PTR $T272015[esp+36], bl
	mov	eax, DWORD PTR $T272015[esp+36]
	push	eax
	push	ecx
	push	edx
	sub	esp, 20					; 00000014H
	mov	eax, esp
	mov	DWORD PTR [eax], ebx
	mov	DWORD PTR [eax+4], ebx
	mov	DWORD PTR [eax+8], ebx
	mov	DWORD PTR [eax+12], ebx
	mov	ecx, DWORD PTR __Dest$[esp+80]
	mov	DWORD PTR [eax+16], ecx
	mov	edx, DWORD PTR __Last2$[esp+64]
	mov	eax, DWORD PTR __First2$[esp+64]
	mov	ecx, DWORD PTR __Last1$[esp+64]
	mov	DWORD PTR $T272017[esp+68], esp
	push	edx
	mov	edx, DWORD PTR __First1$[esp+68]
	push	eax
	push	ecx
	push	edx
	mov	esi, 1
	push	ebp
	mov	DWORD PTR __$EHRec$[esp+96], esi
	call	??$_Merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@Uforward_iterator_tag@2@@std@@YA?AV?$_Temp_iterator@UOpinion@@@0@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@000V10@UOpinionEval@@Uforward_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Merge<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion>,OpinionEval,std::forward_iterator_tag>
	add	esp, 52					; 00000034H
	mov	DWORD PTR $T272021[esp+36], esi
	mov	esi, DWORD PTR __Dest$[esp+32]
	mov	BYTE PTR __$EHRec$[esp+44], bl
	cmp	esi, ebx
	je	SHORT $LN31@unchecked_@4
	cmp	esi, DWORD PTR __Dest$[esp+40]
	je	SHORT $LN13@unchecked_@4
	mov	edi, DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LL15@unchecked_@4:
	mov	ecx, esi
	call	edi
	add	esi, 84					; 00000054H
	cmp	esi, DWORD PTR __Dest$[esp+40]
	jne	SHORT $LL15@unchecked_@4
	mov	esi, DWORD PTR __Dest$[esp+32]
$LN13@unchecked_@4:
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN31@unchecked_@4:

; 5160 : 	}

	mov	ecx, DWORD PTR __$EHRec$[esp+36]
	pop	edi
	pop	esi
	mov	eax, ebp
	pop	ebp
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	add	esp, 20					; 00000014H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$unchecked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@000V12@UOpinionEval@@@Z$0:
	lea	ecx, DWORD PTR __Dest$[ebp-4]
	jmp	??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ ; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>
__unwindfunclet$??$unchecked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@000V12@UOpinionEval@@@Z$2:
	mov	eax, DWORD PTR $T272021[ebp]
	and	eax, 1
	je	$LN6@unchecked_@4
	and	DWORD PTR $T272021[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp-4]
	jmp	??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ ; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>
$LN6@unchecked_@4:
	ret	0
__ehhandler$??$unchecked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@000V12@UOpinionEval@@@Z:
	mov	eax, OFFSET __ehfuncinfo$??$unchecked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@000V12@UOpinionEval@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$unchecked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@000V12@UOpinionEval@@@Z ENDP ; stdext::unchecked_merge<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion>,OpinionEval>
PUBLIC	?_Destroy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXPAVCvString@@0@Z ; std::vector<CvString,std::allocator<CvString> >::_Destroy
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Destroy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXPAVCvString@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXPAVCvString@@0@Z PROC ; std::vector<CvString,std::allocator<CvString> >::_Destroy, COMDAT
; _this$ = ecx

; 1118 : 		{	// destroy [_First, _Last) using allocator

	push	esi

; 1119 : 		_Destroy_range(_First, _Last, this->_Alval);

	mov	esi, DWORD PTR __First$[esp]
	push	edi
	mov	edi, DWORD PTR __Last$[esp+4]
	cmp	esi, edi
	je	SHORT $LN7@Destroy
	npad	2
$LL9@Destroy:
	mov	ecx, esi
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	add	esi, 28					; 0000001cH
	cmp	esi, edi
	jne	SHORT $LL9@Destroy
$LN7@Destroy:
	pop	edi
	pop	esi

; 1120 : 		}

	ret	8
?_Destroy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXPAVCvString@@0@Z ENDP ; std::vector<CvString,std::allocator<CvString> >::_Destroy
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXXZ ; std::vector<CvString,std::allocator<CvString> >::_Tidy
; Function compile flags: /Ogtpy
;	COMDAT ?_Tidy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXXZ PROC ; std::vector<CvString,std::allocator<CvString> >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	ebx
	mov	ebx, ecx
	push	esi

; 1124 : 		if (_Myfirst != 0)

	mov	esi, DWORD PTR [ebx+4]
	test	esi, esi
	je	SHORT $LN25@Tidy
	push	edi

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);

	mov	edi, DWORD PTR [ebx+8]
	cmp	esi, edi
	je	SHORT $LN10@Tidy
$LL12@Tidy:
	mov	ecx, esi
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	add	esi, 28					; 0000001cH
	cmp	esi, edi
	jne	SHORT $LL12@Tidy
$LN10@Tidy:

; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	mov	eax, DWORD PTR [ebx+4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	pop	edi
$LN25@Tidy:
	pop	esi

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	DWORD PTR [ebx+4], 0
	mov	DWORD PTR [ebx+8], 0
	mov	DWORD PTR [ebx+12], 0
	pop	ebx

; 1135 : 		}

	ret	0
?_Tidy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXXZ ENDP ; std::vector<CvString,std::allocator<CvString> >::_Tidy
_TEXT	ENDS
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Tidy
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T272277 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1420 : 		{	// free all storage

	push	ecx
	push	esi
	mov	esi, ecx

; 1421 : 		erase(begin(), end());

	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [eax]
	push	eax
	push	ecx
	lea	eax, DWORD PTR $T272277[esp+16]
	push	eax
	mov	ecx, esi
	call	?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@0@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::erase

; 1422 : 		this->_Alptr.destroy(&_Left(_Myhead));
; 1423 : 		this->_Alptr.destroy(&_Parent(_Myhead));
; 1424 : 		this->_Alptr.destroy(&_Right(_Myhead));
; 1425 : 		this->_Alnod.deallocate(_Myhead, 1);

	mov	ecx, DWORD PTR [esi+4]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1426 : 		_Myhead = 0, _Mysize = 0;

	xor	eax, eax
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	pop	esi

; 1427 : 		}

	pop	ecx
	ret	0
?_Tidy@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::_Tidy
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@IAEXXZ ; std::vector<enum PolicyTypes,std::allocator<enum PolicyTypes> >::_Tidy
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Tidy@?$vector@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@IAEXXZ PROC ; std::vector<enum PolicyTypes,std::allocator<enum PolicyTypes> >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	esi
	mov	esi, ecx

; 1124 : 		if (_Myfirst != 0)

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN4@Tidy@2

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);
; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@Tidy@2:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 1135 : 		}

	ret	0
?_Tidy@?$vector@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@IAEXXZ ENDP ; std::vector<enum PolicyTypes,std::allocator<enum PolicyTypes> >::_Tidy
_TEXT	ENDS
PUBLIC	?_Ufill@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEPAUOpinion@@PAU3@IABU3@@Z ; std::vector<Opinion,std::allocator<Opinion> >::_Ufill
; Function compile flags: /Ogtpy
;	COMDAT ?_Ufill@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEPAUOpinion@@PAU3@IABU3@@Z
_TEXT	SEGMENT
$T272357 = -4						; size = 1
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Cat$272360 = 16					; size = 1
__Val$ = 16						; size = 4
?_Ufill@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEPAUOpinion@@PAU3@IABU3@@Z PROC ; std::vector<Opinion,std::allocator<Opinion> >::_Ufill, COMDAT
; _this$ = ecx

; 1253 : 		{	// copy initializing _Count * _Val, using allocator

	push	ecx

; 1254 : 		_STDEXT unchecked_uninitialized_fill_n(_Ptr, _Count, _Val, this->_Alval);

	mov	edx, DWORD PTR __Cat$272360[esp]
	push	esi
	mov	esi, DWORD PTR __Count$[esp+4]
	push	edi
	mov	edi, DWORD PTR __Ptr$[esp+8]
	mov	BYTE PTR $T272357[esp+12], 0
	mov	eax, DWORD PTR $T272357[esp+12]
	push	eax
	mov	eax, DWORD PTR __Val$[esp+12]
	push	edx
	push	ecx
	push	eax
	push	esi
	push	edi
	call	??$_Uninit_fill_n@PAUOpinion@@IU1@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@IABU1@AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<Opinion *,unsigned int,Opinion,std::allocator<Opinion> >

; 1255 : 		return (_Ptr + _Count);

	mov	eax, esi
	imul	eax, 84					; 00000054H
	add	esp, 24					; 00000018H
	add	eax, edi
	pop	edi
	pop	esi

; 1256 : 		}

	pop	ecx
	ret	12					; 0000000cH
?_Ufill@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEPAUOpinion@@PAU3@IABU3@@Z ENDP ; std::vector<Opinion,std::allocator<Opinion> >::_Ufill
_TEXT	ENDS
PUBLIC	?erase@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE?AV?$_Vector_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@V?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@0@Z ; std::vector<CvString,std::allocator<CvString> >::erase
; Function compile flags: /Ogtpy
;	COMDAT ?erase@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE?AV?$_Vector_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@V?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Last_arg$ = 16					; size = 4
?erase@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE?AV?$_Vector_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@V?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@0@Z PROC ; std::vector<CvString,std::allocator<CvString> >::erase, COMDAT
; _this$ = ecx

; 1029 : 		iterator _First = _Make_iter(_First_arg);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	push	ebp
	push	esi
	mov	esi, DWORD PTR __First_arg$[esp+4]
	push	edi

; 1030 : 		iterator _Last = _Make_iter(_Last_arg);
; 1031 : 
; 1032 : 		if (_First != _Last)

	mov	edi, DWORD PTR __Last_arg$[esp+8]
	mov	ebp, ecx
	mov	DWORD PTR [eax], esi
	cmp	esi, edi
	je	SHORT $LN1@erase@3
	push	ebx

; 1033 : 			{	// worth doing, copy down over hole
; 1034 : 
; 1035 :  #if _HAS_ITERATOR_DEBUGGING
; 1036 : 			if (_Last < _First || _First._Mycont != this
; 1037 : 				|| _First._Myptr < _Myfirst || _Mylast < _Last._Myptr)
; 1038 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1039 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1040 : 				_VEC_ITER_BASE(_First));
; 1041 : 			_Orphan_range(_First._Myptr, _Mylast);
; 1042 : 
; 1043 :  #else /* _HAS_ITERATOR_DEBUGGING */
; 1044 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1045 : 				_VEC_ITER_BASE(_First));

	mov	ebx, DWORD PTR [ebp+8]
	cmp	edi, ebx
	je	SHORT $LN26@erase@3
	npad	1
$LL28@erase@3:
	push	edi
	mov	ecx, esi
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	add	edi, 28					; 0000001cH
	add	esi, 28					; 0000001cH
	cmp	edi, ebx
	jne	SHORT $LL28@erase@3
$LN26@erase@3:

; 1046 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1047 : 
; 1048 : 			_Destroy(_Ptr, _Mylast);

	mov	ebx, DWORD PTR [ebp+8]
	mov	edi, esi
	cmp	esi, ebx
	je	SHORT $LN39@erase@3
	npad	4
$LL41@erase@3:
	mov	ecx, edi
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	add	edi, 28					; 0000001cH
	cmp	edi, ebx
	jne	SHORT $LL41@erase@3
$LN39@erase@3:

; 1049 : 			_Mylast = _Ptr;
; 1050 : 			}
; 1051 : #if _HAS_ITERATOR_DEBUGGING
; 1052 :         return (iterator(_First._Myptr, this));
; 1053 : #else
; 1054 : 		return (_First);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp+12]
	mov	DWORD PTR [ebp+8], esi
	pop	ebx
$LN1@erase@3:
	pop	edi
	pop	esi
	pop	ebp

; 1055 : #endif
; 1056 : 		}

	ret	12					; 0000000cH
?erase@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE?AV?$_Vector_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@V?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@0@Z ENDP ; std::vector<CvString,std::allocator<CvString> >::erase
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXPAUOpinion@@0@Z ; std::vector<Opinion,std::allocator<Opinion> >::_Destroy
; Function compile flags: /Ogtpy
;	COMDAT ?_Destroy@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXPAUOpinion@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXPAUOpinion@@0@Z PROC ; std::vector<Opinion,std::allocator<Opinion> >::_Destroy, COMDAT
; _this$ = ecx

; 1118 : 		{	// destroy [_First, _Last) using allocator

	push	esi

; 1119 : 		_Destroy_range(_First, _Last, this->_Alval);

	mov	esi, DWORD PTR __First$[esp]
	push	edi
	mov	edi, DWORD PTR __Last$[esp+4]
	cmp	esi, edi
	je	SHORT $LN7@Destroy@2
	push	ebx
	mov	ebx, DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LL9@Destroy@2:
	mov	ecx, esi
	call	ebx
	add	esi, 84					; 00000054H
	cmp	esi, edi
	jne	SHORT $LL9@Destroy@2
	pop	ebx
$LN7@Destroy@2:
	pop	edi
	pop	esi

; 1120 : 		}

	ret	8
?_Destroy@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXPAUOpinion@@0@Z ENDP ; std::vector<Opinion,std::allocator<Opinion> >::_Destroy
_TEXT	ENDS
PUBLIC	??$_Ucopy@PAVCvString@@@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEPAVCvString@@PAV2@00@Z ; std::vector<CvString,std::allocator<CvString> >::_Ucopy<CvString *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Ucopy@PAVCvString@@@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEPAVCvString@@PAV2@00@Z
_TEXT	SEGMENT
$T272643 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$272647 = 16					; size = 1
__Ptr$ = 16						; size = 4
??$_Ucopy@PAVCvString@@@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEPAVCvString@@PAV2@00@Z PROC ; std::vector<CvString,std::allocator<CvString> >::_Ucopy<CvString *>, COMDAT
; _this$ = ecx

; 1138 : 		pointer _Ucopy(_Iter _First, _Iter _Last, pointer _Ptr)

	push	ecx

; 1139 : 		{	// copy initializing [_First, _Last), using allocator
; 1140 : 		return (_STDEXT unchecked_uninitialized_copy(_First, _Last,
; 1141 : 			_Ptr, this->_Alval));

	mov	edx, DWORD PTR __Cat$272647[esp]
	mov	BYTE PTR $T272643[esp+4], 0
	mov	eax, DWORD PTR $T272643[esp+4]
	push	eax
	mov	eax, DWORD PTR __Ptr$[esp+4]
	push	edx
	mov	edx, DWORD PTR __First$[esp+8]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAVCvString@@PAV1@V?$allocator@VCvString@@@std@@@std@@YAPAVCvString@@PAV1@00AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<CvString *,CvString *,std::allocator<CvString> >

; 1142 : 		}

	add	esp, 28					; 0000001cH
	ret	12					; 0000000cH
??$_Ucopy@PAVCvString@@@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEPAVCvString@@PAV2@00@Z ENDP ; std::vector<CvString,std::allocator<CvString> >::_Ucopy<CvString *>
_TEXT	ENDS
PUBLIC	??$_Unchecked_uninitialized_move@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@stdext@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@std@@@Z ; stdext::_Unchecked_uninitialized_move<Opinion *,Opinion *,std::allocator<Opinion> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$_Unchecked_uninitialized_move@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@stdext@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@std@@@Z
_TEXT	SEGMENT
$T272679 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$272683 = 16					; size = 1
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Unchecked_uninitialized_move@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@stdext@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@std@@@Z PROC ; stdext::_Unchecked_uninitialized_move<Opinion *,Opinion *,std::allocator<Opinion> >, COMDAT

; 861  : 	{	// move [_First, _Last) to raw _Dest, using _Al

	push	ecx

; 862  : 	return (_STD _Uninit_move(_CHECKED_BASE(_First),
; 863  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 864  : 		_STD _Move_cat(_Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Cat$272683[esp]
	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T272679[esp+4], 0
	mov	eax, DWORD PTR $T272679[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<Opinion *,Opinion *,std::allocator<Opinion> >

; 865  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$_Unchecked_uninitialized_move@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@stdext@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@std@@@Z ENDP ; stdext::_Unchecked_uninitialized_move<Opinion *,Opinion *,std::allocator<Opinion> >
_TEXT	ENDS
PUBLIC	??$sort_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z ; std::sort_heap<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$sort_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$sort_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z PROC ; std::sort_heap<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>, COMDAT

; 2224 : 	_DEBUG_HEAP(_First, _Last);
; 2225 : 	_Sort_heap(_CHECKED_BASE(_First), _CHECKED_BASE(_Last));

	jmp	??$_Sort_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z ; std::_Sort_heap<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
??$sort_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z ENDP ; std::sort_heap<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
_TEXT	ENDS
PUBLIC	??$_Unchecked_chunked_merge@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinionEval@@@stdext@@YAXPAUOpinion@@0V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HHUOpinionEval@@@Z ; stdext::_Unchecked_chunked_merge<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,OpinionEval>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Unchecked_chunked_merge@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinionEval@@@stdext@@YAXPAUOpinion@@0V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HHUOpinionEval@@@Z
_TEXT	SEGMENT
$T272695 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Chunk$ = 20						; size = 4
__Count$ = 24						; size = 4
__Pred$ = 28						; size = 1
??$_Unchecked_chunked_merge@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinionEval@@@stdext@@YAXPAUOpinion@@0V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HHUOpinionEval@@@Z PROC ; stdext::_Unchecked_chunked_merge<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,OpinionEval>, COMDAT

; 5285 : 	{

	push	ecx

; 5286 : 		_STD _Chunked_merge(_First, _Last, _Dest, _Chunk, _Count, _Pred, _STD _Range_checked_iterator_tag());

	mov	ecx, DWORD PTR __Pred$[esp]
	mov	edx, DWORD PTR __Count$[esp]
	mov	BYTE PTR $T272695[esp+4], 0
	mov	eax, DWORD PTR $T272695[esp+4]
	push	eax
	mov	eax, DWORD PTR __Chunk$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Dest$[esp+8]
	push	edx
	mov	edx, DWORD PTR __Last$[esp+12]
	push	eax
	mov	eax, DWORD PTR __First$[esp+16]
	push	ecx
	push	edx
	push	eax
	call	??$_Chunked_merge@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinionEval@@@std@@YAXPAUOpinion@@0V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@HHUOpinionEval@@U_Range_checked_iterator_tag@0@@Z ; std::_Chunked_merge<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,OpinionEval>

; 5287 : 	}

	add	esp, 32					; 00000020H
	ret	0
??$_Unchecked_chunked_merge@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinionEval@@@stdext@@YAXPAUOpinion@@0V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HHUOpinionEval@@@Z ENDP ; stdext::_Unchecked_chunked_merge<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,OpinionEval>
_TEXT	ENDS
PUBLIC	??$_Buffered_rotate@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@00HHAAV?$_Temp_iterator@UOpinion@@@0@@Z ; std::_Buffered_rotate<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Buffered_rotate@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@00HHAAV?$_Temp_iterator@UOpinion@@@0@@Z
_TEXT	SEGMENT
$T272703 = -20						; size = 20
$T272700 = -20						; size = 20
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Mid$ = 16						; size = 4
__Last$ = 20						; size = 4
$T272838 = 24						; size = 1
__Cat$272842 = 24					; size = 1
$T272840 = 24						; size = 1
$T272804 = 24						; size = 1
__Cat$272808 = 24					; size = 1
$T272806 = 24						; size = 1
$T272768 = 24						; size = 1
__Cat$272772 = 24					; size = 1
$T272770 = 24						; size = 1
$T272735 = 24						; size = 1
__Cat$272739 = 24					; size = 1
$T272737 = 24						; size = 1
$T272704 = 24						; size = 4
$T272702 = 24						; size = 4
$T272701 = 24						; size = 4
$T272699 = 24						; size = 4
__Count1$ = 24						; size = 4
__Count2$ = 28						; size = 4
__Tempbuf$ = 32						; size = 4
??$_Buffered_rotate@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@00HHAAV?$_Temp_iterator@UOpinion@@@0@@Z PROC ; std::_Buffered_rotate<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion>, COMDAT

; 2683 : 	{	// rotate [_First, _Last) using temp buffer

	sub	esp, 20					; 00000014H
	push	ebx

; 2684 : 	if (_Count1 <= _Count2 && _Count1 <= _Tempbuf._Maxlen())

	mov	ebx, DWORD PTR __Count1$[esp+20]
	push	esi
	mov	esi, DWORD PTR __Tempbuf$[esp+24]
	push	edi
	mov	edi, DWORD PTR __Count2$[esp+28]
	cmp	ebx, edi
	jg	$LN4@Buffered_r
	mov	ecx, esi
	call	?_Maxlen@?$_Temp_iterator@UOpinion@@@std@@QAEHXZ ; std::_Temp_iterator<Opinion>::_Maxlen
	cmp	ebx, eax
	jg	$LN4@Buffered_r

; 2685 : 		{	// buffer left partition, then copy parts
; 2686 : 		_STDEXT unchecked_copy(_First, _Mid, _Tempbuf._Init());

	mov	eax, DWORD PTR [esi+16]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [eax+4], ecx
	sub	esp, 20					; 00000014H
	mov	eax, esp
	xor	ebx, ebx
	mov	DWORD PTR [eax], ebx
	mov	DWORD PTR [eax+4], ebx
	mov	DWORD PTR [eax+8], ebx
	mov	DWORD PTR [eax+12], ebx
	mov	edx, DWORD PTR [esi+16]
	mov	DWORD PTR [eax+16], edx
	mov	eax, DWORD PTR __Mid$[esp+48]
	mov	ecx, DWORD PTR __First$[esp+48]
	mov	DWORD PTR $T272699[esp+48], esp
	push	eax
	push	ecx
	lea	edx, DWORD PTR $T272700[esp+60]
	push	edx
	call	??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@0V12@@Z ; stdext::unchecked_copy<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion> >
	add	esp, 32					; 00000020H
	lea	ecx, DWORD PTR $T272700[esp+32]
	call	??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ ; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>

; 2687 : 		_STDEXT unchecked_copy(_Mid, _Last, _First);

	mov	BYTE PTR $T272735[esp+28], bl
	mov	eax, DWORD PTR $T272735[esp+28]
	mov	ecx, DWORD PTR __Cat$272739[esp+28]
	mov	edx, DWORD PTR $T272737[esp+28]
	push	eax
	mov	eax, DWORD PTR __First$[esp+32]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+36]
	push	edx
	mov	edx, DWORD PTR __Mid$[esp+40]
	push	eax
	push	ecx
	push	edx
	lea	eax, DWORD PTR $T272701[esp+52]
	push	eax
	call	??$_Copy_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@Urandom_access_iterator_tag@2@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::random_access_iterator_tag>

; 2688 : 		return (_STDEXT unchecked_copy_backward(_Tempbuf._First(), _Tempbuf._Last(),
; 2689 : 			_Last));

	mov	esi, DWORD PTR [esi+16]
	mov	BYTE PTR $T272768[esp+56], bl
	mov	ecx, DWORD PTR $T272768[esp+56]
	mov	edx, DWORD PTR __Cat$272772[esp+56]
	mov	eax, DWORD PTR $T272770[esp+56]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+60]
	push	edx
	mov	edx, DWORD PTR [esi+4]
	push	eax
	mov	eax, DWORD PTR [esi]
	mov	esi, DWORD PTR ___$ReturnUdt$[esp+68]
	push	ecx
	push	edx
	push	eax
	push	esi
	call	??$_Copy_backward_opt@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@Urandom_access_iterator_tag@3@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@PAUOpinion@@0V10@Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::random_access_iterator_tag>
	add	esp, 56					; 00000038H
	mov	eax, esi

; 2702 : 		}
; 2703 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 20					; 00000014H
	ret	0
$LN4@Buffered_r:

; 2690 : 		}
; 2691 : 	else if (_Count2 <= _Tempbuf._Maxlen())

	mov	ecx, esi
	call	?_Maxlen@?$_Temp_iterator@UOpinion@@@std@@QAEHXZ ; std::_Temp_iterator<Opinion>::_Maxlen
	cmp	edi, eax
	jg	$LN2@Buffered_r

; 2692 : 		{	// buffer right partition, then copy parts
; 2693 : 		_STDEXT unchecked_copy(_Mid, _Last, _Tempbuf._Init());

	mov	eax, DWORD PTR [esi+16]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [eax+4], ecx
	sub	esp, 20					; 00000014H
	mov	eax, esp
	xor	ebx, ebx
	mov	DWORD PTR [eax], ebx
	mov	DWORD PTR [eax+4], ebx
	mov	DWORD PTR [eax+8], ebx
	mov	DWORD PTR [eax+12], ebx
	mov	edx, DWORD PTR [esi+16]
	mov	DWORD PTR [eax+16], edx
	mov	eax, DWORD PTR __Last$[esp+48]
	mov	ecx, DWORD PTR __Mid$[esp+48]
	mov	DWORD PTR $T272702[esp+48], esp
	push	eax
	push	ecx
	lea	edx, DWORD PTR $T272703[esp+60]
	push	edx
	call	??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@0V12@@Z ; stdext::unchecked_copy<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion> >
	add	esp, 32					; 00000020H
	lea	ecx, DWORD PTR $T272703[esp+32]
	call	??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ ; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>

; 2694 : 		_STDEXT unchecked_copy_backward(_First, _Mid, _Last);

	mov	BYTE PTR $T272804[esp+28], bl
	mov	eax, DWORD PTR $T272804[esp+28]
	mov	ecx, DWORD PTR __Cat$272808[esp+28]
	mov	edx, DWORD PTR $T272806[esp+28]
	push	eax
	mov	eax, DWORD PTR __Last$[esp+32]
	push	ecx
	mov	ecx, DWORD PTR __Mid$[esp+36]
	push	edx
	mov	edx, DWORD PTR __First$[esp+40]
	push	eax
	push	ecx
	push	edx
	lea	eax, DWORD PTR $T272704[esp+52]
	push	eax
	call	??$_Copy_backward_opt@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@Urandom_access_iterator_tag@2@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::random_access_iterator_tag>

; 2695 : 		return (_STDEXT unchecked_copy(_Tempbuf._First(), _Tempbuf._Last(), _First));

	mov	esi, DWORD PTR [esi+16]
	mov	BYTE PTR $T272838[esp+56], bl
	mov	ecx, DWORD PTR $T272838[esp+56]
	mov	edx, DWORD PTR __Cat$272842[esp+56]
	mov	eax, DWORD PTR $T272840[esp+56]
	push	ecx
	mov	ecx, DWORD PTR __First$[esp+60]
	push	edx
	mov	edx, DWORD PTR [esi+4]
	push	eax
	mov	eax, DWORD PTR [esi]
	mov	esi, DWORD PTR ___$ReturnUdt$[esp+68]
	push	ecx
	push	edx
	push	eax
	push	esi
	call	??$_Copy_opt@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@Urandom_access_iterator_tag@3@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@PAUOpinion@@0V10@Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::random_access_iterator_tag>
	add	esp, 56					; 00000038H
	mov	eax, esi

; 2702 : 		}
; 2703 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 20					; 00000014H
	ret	0
$LN2@Buffered_r:

; 2696 : 		}
; 2697 : 	else
; 2698 : 		{	// buffer too small, rotate in place
; 2699 : 		std::rotate(_First, _Mid, _Last);

	mov	eax, DWORD PTR __First$[esp+28]
	mov	ecx, DWORD PTR __Mid$[esp+28]
	cmp	eax, ecx
	je	SHORT $LN68@Buffered_r
	mov	edx, DWORD PTR __Last$[esp+28]
	cmp	ecx, edx
	je	SHORT $LN68@Buffered_r
	xor	ebx, ebx
	push	ebx
	push	ebx
	push	edx
	push	ecx
	push	eax
	call	??$_Rotate@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00PAHPAUOpinion@@@Z ; std::_Rotate<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion>
	mov	eax, DWORD PTR __First$[esp+48]
	add	esp, 20					; 00000014H
$LN68@Buffered_r:

; 2700 : 		std::advance(_First, _Count2);

	imul	edi, 84					; 00000054H
	add	edi, eax

; 2701 : 		return (_First);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp+28]
	mov	DWORD PTR [eax], edi

; 2702 : 		}
; 2703 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 20					; 00000014H
	ret	0
??$_Buffered_rotate@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@00HHAAV?$_Temp_iterator@UOpinion@@@0@@Z ENDP ; std::_Buffered_rotate<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion>
_TEXT	ENDS
PUBLIC	??$_Chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V?$_Temp_iterator@UOpinion@@@0@HHUOpinionEval@@U_Range_checked_iterator_tag@0@@Z ; std::_Chunked_merge<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion>,int,OpinionEval>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
xdata$x	SEGMENT
__unwindtable$??$_Chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V?$_Temp_iterator@UOpinion@@@0@HHUOpinionEval@@U_Range_checked_iterator_tag@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V?$_Temp_iterator@UOpinion@@@0@HHUOpinionEval@@U_Range_checked_iterator_tag@0@@Z$0
__ehfuncinfo$??$_Chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V?$_Temp_iterator@UOpinion@@@0@HHUOpinionEval@@U_Range_checked_iterator_tag@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V?$_Temp_iterator@UOpinion@@@0@HHUOpinionEval@@U_Range_checked_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
xdata$x	ENDS
;	COMDAT ??$_Chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V?$_Temp_iterator@UOpinion@@@0@HHUOpinionEval@@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T272948 = -36						; size = 4
$T272953 = -32						; size = 20
$T272951 = -32						; size = 20
$T272949 = -32						; size = 20
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 20
__Chunk$ = 36						; size = 4
$T272952 = 40						; size = 4
$T272950 = 40						; size = 4
__Count$ = 40						; size = 4
__Pred$ = 44						; size = 1
___formal$ = 48						; size = 1
??$_Chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V?$_Temp_iterator@UOpinion@@@0@HHUOpinionEval@@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Chunked_merge<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion>,int,OpinionEval>, COMDAT

; 3434 : 	{	// copy merging chunks, using _Pred

	push	-1
	push	__ehhandler$??$_Chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V?$_Temp_iterator@UOpinion@@@0@HHUOpinionEval@@U_Range_checked_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 24					; 00000018H
	push	ebx
	push	ebp
	push	esi
	push	edi

; 3435 : 	for (_Diff _Chunk2 = _Chunk * 2; _Chunk2 <= _Count; _Count -= _Chunk2)

	mov	ecx, DWORD PTR __Chunk$[esp+48]
	mov	edi, DWORD PTR __First$[esp+48]
	xor	ebp, ebp
	lea	eax, DWORD PTR [ecx+ecx]
	cmp	eax, DWORD PTR __Count$[esp+48]
	mov	DWORD PTR __$EHRec$[esp+60], ebp
	jg	$LN3@Chunked_me@4
	mov	ebx, ecx
	imul	ebx, 84					; 00000054H
	npad	4
$LL5@Chunked_me@4:

; 3436 : 		{	// copy merging pairs of adjacent chunks
; 3437 : 		_BidIt _Mid1 = _First;
; 3438 : 		std::advance(_Mid1, _Chunk);
; 3439 : 		_BidIt _Mid2 = _Mid1;
; 3440 : 		std::advance(_Mid2, _Chunk);
; 3441 : 
; 3442 : 		_Dest = _STDEXT unchecked_merge(_First, _Mid1, _Mid1, _Mid2, _Dest, _Pred);

	mov	eax, DWORD PTR __Pred$[esp+48]
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, esp
	lea	ecx, DWORD PTR [ebx+edi]
	mov	DWORD PTR $T272948[esp+76], esp
	lea	edi, DWORD PTR [ebx+ecx]
	push	edi
	mov	DWORD PTR [eax], ebp
	mov	DWORD PTR [eax+4], ebp
	mov	DWORD PTR [eax+8], ebp
	mov	DWORD PTR [eax+12], ebp
	mov	edx, DWORD PTR __Dest$[esp+92]
	push	ecx
	push	ecx
	mov	DWORD PTR [eax+16], edx
	mov	eax, DWORD PTR __First$[esp+84]
	push	eax
	lea	ecx, DWORD PTR $T272949[esp+92]
	push	ecx
	call	??$unchecked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@000V12@UOpinionEval@@@Z ; stdext::unchecked_merge<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion>,OpinionEval>
	mov	esi, DWORD PTR $T272949[esp+96]
	mov	edx, DWORD PTR [eax+16]
	add	esp, 44					; 0000002cH
	mov	DWORD PTR __Dest$[esp+64], edx
	cmp	esi, ebp
	je	SHORT $LN55@Chunked_me@4
	cmp	esi, DWORD PTR $T272949[esp+60]
	je	SHORT $LN41@Chunked_me@4
$LL43@Chunked_me@4:
	mov	ecx, esi
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	add	esi, 84					; 00000054H
	cmp	esi, DWORD PTR $T272949[esp+60]
	jne	SHORT $LL43@Chunked_me@4
	mov	esi, DWORD PTR $T272949[esp+52]
$LN41@Chunked_me@4:
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN55@Chunked_me@4:
	mov	eax, DWORD PTR __Chunk$[esp+48]
	mov	ecx, DWORD PTR __Count$[esp+48]
	add	eax, eax
	sub	ecx, eax
	cmp	ecx, eax

; 3443 : 		_First = _Mid2;

	mov	DWORD PTR __First$[esp+48], edi
	mov	DWORD PTR __Count$[esp+48], ecx
	jge	$LL5@Chunked_me@4

; 3435 : 	for (_Diff _Chunk2 = _Chunk * 2; _Chunk2 <= _Count; _Count -= _Chunk2)

	mov	ecx, DWORD PTR __Chunk$[esp+48]
$LN3@Chunked_me@4:

; 3444 : 		}
; 3445 : 
; 3446 : 	if (_Count <= _Chunk)

	cmp	DWORD PTR __Count$[esp+48], ecx
	jg	SHORT $LN2@Chunked_me@4

; 3447 : 		_STDEXT unchecked_copy(_First, _Last, _Dest);	// copy partial last chunk

	sub	esp, 20					; 00000014H
	mov	eax, esp
	mov	DWORD PTR [eax], ebp
	mov	DWORD PTR [eax+4], ebp
	mov	DWORD PTR [eax+8], ebp
	mov	DWORD PTR [eax+12], ebp
	mov	ecx, DWORD PTR __Dest$[esp+84]
	mov	DWORD PTR [eax+16], ecx
	mov	edx, DWORD PTR __Last$[esp+68]
	mov	eax, DWORD PTR __First$[esp+68]
	mov	DWORD PTR $T272950[esp+68], esp
	push	edx
	push	eax
	lea	ecx, DWORD PTR $T272951[esp+80]
	push	ecx
	call	??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@0V12@@Z ; stdext::unchecked_copy<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion> >
	mov	esi, DWORD PTR $T272951[esp+84]
	add	esp, 32					; 00000020H
	cmp	esi, ebp
	je	$LN105@Chunked_me@4
	cmp	esi, DWORD PTR $T272951[esp+60]
	je	SHORT $LN91@Chunked_me@4
$LL63@Chunked_me@4:
	mov	ecx, esi
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	add	esi, 84					; 00000054H
	cmp	esi, DWORD PTR $T272951[esp+60]
	jne	SHORT $LL63@Chunked_me@4

; 3448 : 	else

	jmp	SHORT $LN135@Chunked_me@4
$LN2@Chunked_me@4:

; 3449 : 		{	// copy merging whole and partial last chunk
; 3450 : 		_BidIt _Mid1 = _First;
; 3451 : 		std::advance(_Mid1, _Chunk);
; 3452 : 
; 3453 : 		_STDEXT unchecked_merge(_First, _Mid1, _Mid1, _Last, _Dest, _Pred);

	mov	edx, DWORD PTR __Pred$[esp+48]
	imul	ecx, 84					; 00000054H
	push	edx
	sub	esp, 20					; 00000014H
	mov	eax, esp
	mov	DWORD PTR [eax], ebp
	mov	DWORD PTR [eax+4], ebp
	mov	DWORD PTR [eax+8], ebp
	mov	DWORD PTR [eax+12], ebp
	mov	edx, DWORD PTR __Dest$[esp+88]
	mov	DWORD PTR [eax+16], edx
	mov	eax, DWORD PTR __Last$[esp+72]
	mov	DWORD PTR $T272952[esp+72], esp
	push	eax
	add	ecx, edi
	push	ecx
	push	ecx
	mov	ecx, DWORD PTR __First$[esp+84]
	push	ecx
	lea	edx, DWORD PTR $T272953[esp+92]
	push	edx
	call	??$unchecked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V12@V?$_Temp_iterator@UOpinion@@@2@UOpinionEval@@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@000V12@UOpinionEval@@@Z ; stdext::unchecked_merge<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion>,OpinionEval>
	mov	esi, DWORD PTR $T272953[esp+96]
	add	esp, 44					; 0000002cH
	cmp	esi, ebp
	je	SHORT $LN105@Chunked_me@4
	cmp	esi, DWORD PTR $T272953[esp+60]
	je	SHORT $LN91@Chunked_me@4
$LL93@Chunked_me@4:
	mov	ecx, esi
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	add	esi, 84					; 00000054H
	cmp	esi, DWORD PTR $T272953[esp+60]
	jne	SHORT $LL93@Chunked_me@4
$LN135@Chunked_me@4:
	mov	esi, DWORD PTR $T272953[esp+52]
$LN91@Chunked_me@4:
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN105@Chunked_me@4:

; 3454 : 		}
; 3455 : 	}

	mov	esi, DWORD PTR __Dest$[esp+48]
	mov	DWORD PTR __$EHRec$[esp+60], -1
	cmp	esi, ebp
	je	SHORT $LN121@Chunked_me@4
	cmp	esi, DWORD PTR __Dest$[esp+56]
	je	SHORT $LN107@Chunked_me@4
	npad	5
$LL109@Chunked_me@4:
	mov	ecx, esi
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	add	esi, 84					; 00000054H
	cmp	esi, DWORD PTR __Dest$[esp+56]
	jne	SHORT $LL109@Chunked_me@4
	mov	esi, DWORD PTR __Dest$[esp+48]
$LN107@Chunked_me@4:
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN121@Chunked_me@4:
	mov	ecx, DWORD PTR __$EHRec$[esp+52]
	pop	edi
	pop	esi
	pop	ebp
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	add	esp, 36					; 00000024H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V?$_Temp_iterator@UOpinion@@@0@HHUOpinionEval@@U_Range_checked_iterator_tag@0@@Z$0:
	lea	ecx, DWORD PTR __Dest$[ebp-4]
	jmp	??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ ; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>
__ehhandler$??$_Chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V?$_Temp_iterator@UOpinion@@@0@HHUOpinionEval@@U_Range_checked_iterator_tag@0@@Z:
	mov	eax, OFFSET __ehfuncinfo$??$_Chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V?$_Temp_iterator@UOpinion@@@0@HHUOpinionEval@@U_Range_checked_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V?$_Temp_iterator@UOpinion@@@0@HHUOpinionEval@@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Chunked_merge<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion>,int,OpinionEval>
PUBLIC	??1?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ ; std::vector<CvString,std::allocator<CvString> >::~vector<CvString,std::allocator<CvString> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??1?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ PROC ; std::vector<CvString,std::allocator<CvString> >::~vector<CvString,std::allocator<CvString> >, COMDAT
; _this$ = ecx

; 559  : 		_Tidy();

	jmp	?_Tidy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXXZ ; std::vector<CvString,std::allocator<CvString> >::_Tidy
??1?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ ENDP ; std::vector<CvString,std::allocator<CvString> >::~vector<CvString,std::allocator<CvString> >
_TEXT	ENDS
PUBLIC	??1?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::~_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T273343 = -4						; size = 4
??1?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::~_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >, COMDAT
; _this$ = ecx

; 539  : 		{	// destroy tree

	push	ecx
	push	esi
	mov	esi, ecx

; 540  : 		_Tidy();

	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [eax]
	push	eax
	push	ecx
	lea	eax, DWORD PTR $T273343[esp+16]
	push	eax
	mov	ecx, esi
	call	?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@0@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::erase
	mov	ecx, DWORD PTR [esi+4]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	xor	eax, eax
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	pop	esi

; 541  : 		}

	pop	ecx
	ret	0
??1?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::~_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >
_TEXT	ENDS
PUBLIC	??1?$vector@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QAE@XZ ; std::vector<enum PolicyTypes,std::allocator<enum PolicyTypes> >::~vector<enum PolicyTypes,std::allocator<enum PolicyTypes> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??1?$vector@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QAE@XZ PROC ; std::vector<enum PolicyTypes,std::allocator<enum PolicyTypes> >::~vector<enum PolicyTypes,std::allocator<enum PolicyTypes> >, COMDAT
; _this$ = ecx

; 558  : 		{	// destroy the object

	push	esi
	mov	esi, ecx

; 559  : 		_Tidy();

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN6@vector@2
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@vector@2:
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 560  : 		}

	ret	0
??1?$vector@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@QAE@XZ ENDP ; std::vector<enum PolicyTypes,std::allocator<enum PolicyTypes> >::~vector<enum PolicyTypes,std::allocator<enum PolicyTypes> >
_TEXT	ENDS
PUBLIC	?clear@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAEXXZ ; std::vector<CvString,std::allocator<CvString> >::clear
; Function compile flags: /Ogtpy
;	COMDAT ?clear@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T273389 = -4						; size = 4
?clear@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAEXXZ PROC ; std::vector<CvString,std::allocator<CvString> >::clear, COMDAT
; _this$ = ecx

; 1059 : 		{	// erase all

	push	ecx

; 1060 : 		erase(begin(), end());

	mov	eax, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR [ecx+4]
	push	eax
	push	edx
	lea	eax, DWORD PTR $T273389[esp+12]
	push	eax
	call	?erase@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE?AV?$_Vector_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@V?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@0@Z ; std::vector<CvString,std::allocator<CvString> >::erase

; 1061 : 		}

	pop	ecx
	ret	0
?clear@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAEXXZ ENDP ; std::vector<CvString,std::allocator<CvString> >::clear
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXXZ ; std::vector<Opinion,std::allocator<Opinion> >::_Tidy
; Function compile flags: /Ogtpy
;	COMDAT ?_Tidy@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXXZ PROC ; std::vector<Opinion,std::allocator<Opinion> >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	ebx
	push	ebp
	mov	ebx, ecx
	push	esi

; 1124 : 		if (_Myfirst != 0)

	mov	esi, DWORD PTR [ebx+4]
	xor	ebp, ebp
	cmp	esi, ebp
	je	SHORT $LN25@Tidy@3
	push	edi

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);

	mov	edi, DWORD PTR [ebx+8]
	cmp	esi, edi
	je	SHORT $LN10@Tidy@3
	mov	ebp, DWORD PTR __imp_??1String@Localization@@UAE@XZ
	npad	4
$LL12@Tidy@3:
	mov	ecx, esi
	call	ebp
	add	esi, 84					; 00000054H
	cmp	esi, edi
	jne	SHORT $LL12@Tidy@3
	xor	ebp, ebp
$LN10@Tidy@3:

; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	mov	eax, DWORD PTR [ebx+4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	pop	edi
$LN25@Tidy@3:
	pop	esi

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	DWORD PTR [ebx+4], ebp
	mov	DWORD PTR [ebx+8], ebp
	mov	DWORD PTR [ebx+12], ebp
	pop	ebp
	pop	ebx

; 1135 : 		}

	ret	0
?_Tidy@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXXZ ENDP ; std::vector<Opinion,std::allocator<Opinion> >::_Tidy
_TEXT	ENDS
PUBLIC	??$_Umove@PAUOpinion@@@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEPAUOpinion@@PAU2@00@Z ; std::vector<Opinion,std::allocator<Opinion> >::_Umove<Opinion *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Umove@PAUOpinion@@@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEPAUOpinion@@PAU2@00@Z
_TEXT	SEGMENT
$T273576 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$273580 = 16					; size = 1
__Ptr$ = 16						; size = 4
??$_Umove@PAUOpinion@@@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEPAUOpinion@@PAU2@00@Z PROC ; std::vector<Opinion,std::allocator<Opinion> >::_Umove<Opinion *>, COMDAT
; _this$ = ecx

; 1145 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

	push	ecx

; 1146 : 		{	// move initializing [_First, _Last), using allocator
; 1147 : 		return (_STDEXT _Unchecked_uninitialized_move(_First, _Last,
; 1148 : 			_Ptr, this->_Alval));

	mov	edx, DWORD PTR __Cat$273580[esp]
	mov	BYTE PTR $T273576[esp+4], 0
	mov	eax, DWORD PTR $T273576[esp+4]
	push	eax
	mov	eax, DWORD PTR __Ptr$[esp+4]
	push	edx
	mov	edx, DWORD PTR __First$[esp+8]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<Opinion *,Opinion *,std::allocator<Opinion> >

; 1149 : 		}

	add	esp, 28					; 0000001cH
	ret	12					; 0000000cH
??$_Umove@PAUOpinion@@@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEPAUOpinion@@PAU2@00@Z ENDP ; std::vector<Opinion,std::allocator<Opinion> >::_Umove<Opinion *>
_TEXT	ENDS
PUBLIC	??$_Sort@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0H@Z ; std::_Sort<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,int>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$_Sort@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0H@Z
_TEXT	SEGMENT
__Mid$239198 = -8					; size = 8
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ideal$ = 16						; size = 4
??$_Sort@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0H@Z PROC ; std::_Sort<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,int>, COMDAT

; 3082 : 	{	// order [_First, _Last), using operator<

	sub	esp, 8
	push	ebx

; 3083 : 	_Diff _Count;
; 3084 : 	for (; _ISORT_MAX < (_Count = _Last - _First) && 0 < _Ideal; )

	mov	ebx, DWORD PTR __First$[esp+8]
	push	ebp
	push	esi
	push	edi
	mov	edi, DWORD PTR __Last$[esp+20]
	mov	eax, edi
	sub	eax, ebx
	sar	eax, 3
	cmp	eax, 32					; 00000020H
	jle	SHORT $LN25@Sort
	mov	esi, DWORD PTR __Ideal$[esp+20]
	npad	1
$LL7@Sort:
	test	esi, esi
	jle	SHORT $LN6@Sort

; 3085 : 		{	// divide and conquer by quicksort
; 3086 : 		pair<_RanIt, _RanIt> _Mid =
; 3087 : 			std::_Unguarded_partition(_First, _Last);

	push	edi
	lea	eax, DWORD PTR __Mid$239198[esp+28]
	push	ebx
	push	eax
	call	??$_Unguarded_partition@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YA?AU?$pair@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@PAU12@@0@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z ; std::_Unguarded_partition<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>

; 3088 : 		_Ideal /= 2, _Ideal += _Ideal / 2;	// allow 1.5 log2(N) divisions
; 3089 : 
; 3090 : 		if (_Mid.first - _First < _Last - _Mid.second)

	mov	ebp, DWORD PTR __Mid$239198[esp+40]
	mov	eax, esi
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	esi, eax
	cdq
	sub	eax, edx
	sar	eax, 1
	add	esi, eax
	mov	eax, DWORD PTR __Mid$239198[esp+36]
	mov	ecx, edi
	mov	edx, eax
	sub	ecx, ebp
	sub	edx, ebx
	add	esp, 12					; 0000000cH
	and	ecx, -8					; fffffff8H
	and	edx, -8					; fffffff8H
	cmp	edx, ecx

; 3091 : 			{	// loop on second half
; 3092 : 			std::_Sort(_First, _Mid.first, _Ideal);

	push	esi
	jge	SHORT $LN5@Sort
	push	eax
	push	ebx
	call	??$_Sort@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0H@Z ; std::_Sort<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,int>

; 3093 : 			_First = _Mid.second;

	mov	ebx, ebp

; 3094 : 			}
; 3095 : 		else

	jmp	SHORT $LN26@Sort
$LN5@Sort:

; 3096 : 			{	// loop on first half
; 3097 : 			std::_Sort(_Mid.second, _Last, _Ideal);

	push	edi
	push	ebp
	call	??$_Sort@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0H@Z ; std::_Sort<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,int>

; 3098 : 			_Last = _Mid.first;

	mov	edi, DWORD PTR __Mid$239198[esp+36]
$LN26@Sort:
	mov	eax, edi
	sub	eax, ebx
	sar	eax, 3
	add	esp, 12					; 0000000cH
	cmp	eax, 32					; 00000020H
	jg	SHORT $LL7@Sort
$LN25@Sort:

; 3106 : 		}
; 3107 : 	else if (1 < _Count)

	cmp	eax, 1
	jle	SHORT $LN19@Sort

; 3108 : 		std::_Insertion_sort(_First, _Last);	// small

	push	0
	push	edi
	push	ebx
	call	??$_Insertion_sort1@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@00@Z ; std::_Insertion_sort1<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,CvWeightedVector<CvPlot *,800,1>::WeightedElement>
	add	esp, 12					; 0000000cH
$LN19@Sort:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 3109 : 	}

	add	esp, 8
	ret	0
$LN6@Sort:

; 3099 : 			}
; 3100 : 		}
; 3101 : 
; 3102 : 	if (_ISORT_MAX < _Count)

	cmp	eax, 32					; 00000020H
	jle	SHORT $LN25@Sort

; 3103 : 		{	// heap sort if too many divisions
; 3104 : 		std::make_heap(_First, _Last);

	mov	eax, edi
	sub	eax, ebx
	and	eax, -8					; fffffff8H
	cmp	eax, 8
	jle	SHORT $LN10@Sort
	push	0
	push	0
	push	edi
	push	ebx
	call	??$_Make_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0PAH0@Z ; std::_Make_heap<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,int,CvWeightedVector<CvPlot *,800,1>::WeightedElement>
	add	esp, 16					; 00000010H
$LN10@Sort:

; 3105 : 		std::sort_heap(_First, _Last);

	push	edi
	push	ebx
	call	??$_Sort_heap@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z ; std::_Sort_heap<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 3109 : 	}

	add	esp, 8
	ret	0
??$_Sort@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0H@Z ENDP ; std::_Sort<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,int>
_TEXT	ENDS
PUBLIC	??$_Buffered_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00HHAAV?$_Temp_iterator@UOpinion@@@0@UOpinionEval@@@Z ; std::_Buffered_merge<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion,OpinionEval>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Buffered_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00HHAAV?$_Temp_iterator@UOpinion@@@0@UOpinionEval@@@Z
_TEXT	SEGMENT
tv477 = -24						; size = 4
$T273882 = -24						; size = 4
$T273792 = -24						; size = 4
$T273624 = -20						; size = 20
$T273621 = -20						; size = 20
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
$T273723 = 20						; size = 1
__Midn$239820 = 20					; size = 4
$T273625 = 20						; size = 4
$T273623 = 20						; size = 4
$T273622 = 20						; size = 4
$T273620 = 20						; size = 4
__Count1$ = 20						; size = 4
__Count2$ = 24						; size = 4
__Tempbuf$ = 28						; size = 4
__Pred$ = 32						; size = 1
??$_Buffered_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00HHAAV?$_Temp_iterator@UOpinion@@@0@UOpinionEval@@@Z PROC ; std::_Buffered_merge<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion,OpinionEval>, COMDAT

; 2889 : 	{	// merge [_First, _Mid) with [_Mid, _Last), using _Pred

	sub	esp, 24					; 00000018H
	push	ebx

; 2890 : 	if (_Count1 + _Count2 == 2)

	mov	ebx, DWORD PTR __Count1$[esp+24]
	push	ebp
	push	esi
	push	edi
	mov	edi, DWORD PTR __Count2$[esp+36]
	lea	eax, DWORD PTR [ebx+edi]
	cmp	eax, 2
	jne	SHORT $LN9@Buffered_m

; 2891 : 		{	// order two one-element partitions
; 2892 : 		if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First))

	mov	eax, DWORD PTR __Mid$[esp+36]
	mov	edx, DWORD PTR [eax+80]
	mov	ecx, DWORD PTR __First$[esp+36]
	cmp	edx, DWORD PTR [ecx+80]
	jge	$LN3@Buffered_m

; 2893 : 			std::iter_swap(_First, _Mid);

	push	eax
	push	ecx
	call	??$swap@UOpinion@@@std@@YAXAAUOpinion@@0@Z ; std::swap<Opinion>
	add	esp, 8

; 2933 : 		}
; 2934 : 	}

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 24					; 00000018H
	ret	0
$LN9@Buffered_m:

; 2894 : 		}
; 2895 : 	else if (_Count1 <= _Count2 && _Count1 <= _Tempbuf._Maxlen())

	cmp	ebx, edi
	mov	esi, DWORD PTR __Tempbuf$[esp+36]
	jg	$LN6@Buffered_m
	mov	ecx, esi
	call	?_Maxlen@?$_Temp_iterator@UOpinion@@@std@@QAEHXZ ; std::_Temp_iterator<Opinion>::_Maxlen
	cmp	ebx, eax
	jg	SHORT $LN6@Buffered_m

; 2896 : 		{	// buffer left partition, then merge
; 2897 : 		_STDEXT unchecked_copy(_First, _Mid, _Tempbuf._Init());

	mov	eax, DWORD PTR [esi+16]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [eax+4], ecx
	sub	esp, 20					; 00000014H
	mov	eax, esp
	xor	ebx, ebx
	mov	DWORD PTR [eax], ebx
	mov	DWORD PTR [eax+4], ebx
	mov	DWORD PTR [eax+8], ebx
	mov	DWORD PTR [eax+12], ebx
	mov	edx, DWORD PTR [esi+16]
	mov	DWORD PTR [eax+16], edx
	mov	eax, DWORD PTR __Mid$[esp+56]
	mov	ecx, DWORD PTR __First$[esp+56]
	mov	DWORD PTR $T273620[esp+56], esp
	push	eax
	push	ecx
	lea	edx, DWORD PTR $T273621[esp+68]
	push	edx
	call	??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@0V12@@Z ; stdext::unchecked_copy<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion> >
	add	esp, 32					; 00000020H
	lea	ecx, DWORD PTR $T273621[esp+40]
	call	??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ ; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>

; 2898 : 		_STDEXT unchecked_merge(_Tempbuf._First(), _Tempbuf._Last(),
; 2899 : 			_Mid, _Last, _First, _Pred);

	mov	eax, DWORD PTR __Pred$[esp+36]
	mov	ecx, DWORD PTR __First$[esp+36]
	mov	edx, DWORD PTR __Last$[esp+36]
	mov	esi, DWORD PTR [esi+16]
	push	eax
	mov	eax, DWORD PTR __Mid$[esp+40]
	push	ecx
	mov	ecx, DWORD PTR [esi+4]
	push	edx
	mov	edx, DWORD PTR [esi]
	push	eax
	push	ecx
	push	edx
	lea	eax, DWORD PTR $T273622[esp+60]
	push	eax
	call	??$unchecked_merge@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V23@UOpinionEval@@@stdext@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@PAUOpinion@@0V12@11UOpinionEval@@@Z ; stdext::unchecked_merge<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval>
	add	esp, 28					; 0000001cH

; 2933 : 		}
; 2934 : 	}

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 24					; 00000018H
	ret	0
$LN6@Buffered_m:

; 2900 : 		}
; 2901 : 	else if (_Count2 <= _Tempbuf._Maxlen())

	mov	ecx, esi
	call	?_Maxlen@?$_Temp_iterator@UOpinion@@@std@@QAEHXZ ; std::_Temp_iterator<Opinion>::_Maxlen
	cmp	edi, eax
	jg	$LN4@Buffered_m

; 2902 : 		{	// buffer right partition, then merge
; 2903 : 		_STDEXT unchecked_copy(_Mid, _Last, _Tempbuf._Init());

	mov	eax, DWORD PTR [esi+16]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [eax+4], ecx
	sub	esp, 20					; 00000014H
	mov	eax, esp
	xor	ebx, ebx
	mov	DWORD PTR [eax], ebx
	mov	DWORD PTR [eax+4], ebx
	mov	DWORD PTR [eax+8], ebx
	mov	DWORD PTR [eax+12], ebx
	mov	edx, DWORD PTR [esi+16]
	mov	DWORD PTR [eax+16], edx
	mov	eax, DWORD PTR __Last$[esp+56]
	mov	ecx, DWORD PTR __Mid$[esp+56]
	mov	DWORD PTR $T273623[esp+56], esp
	push	eax
	push	ecx
	lea	edx, DWORD PTR $T273624[esp+68]
	push	edx
	call	??$unchecked_copy@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@@stdext@@YA?AV?$_Temp_iterator@UOpinion@@@std@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@0V12@@Z ; stdext::unchecked_copy<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion> >
	add	esp, 32					; 00000020H
	lea	ecx, DWORD PTR $T273624[esp+40]
	call	??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ ; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>

; 2904 : 		_STDEXT _Unchecked_merge_backward(_First, _Mid, _Tempbuf._First(), _Tempbuf._Last(),
; 2905 : 			_Last, _Pred);

	mov	ecx, DWORD PTR __Pred$[esp+36]
	mov	esi, DWORD PTR [esi+16]
	mov	edx, DWORD PTR __Last$[esp+36]
	mov	BYTE PTR $T273723[esp+36], bl
	mov	eax, DWORD PTR $T273723[esp+36]
	push	eax
	mov	eax, DWORD PTR [esi+4]
	push	ecx
	mov	ecx, DWORD PTR [esi]
	push	edx
	mov	edx, DWORD PTR __Mid$[esp+48]
	push	eax
	mov	eax, DWORD PTR __First$[esp+52]
	push	ecx
	push	edx
	push	eax
	lea	ecx, DWORD PTR $T273625[esp+64]
	push	ecx
	call	??$_Merge_backward@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@PAUOpinion@@V12@UOpinionEval@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@0PAUOpinion@@10UOpinionEval@@U_Range_checked_iterator_tag@0@@Z ; std::_Merge_backward<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval>
	add	esp, 32					; 00000020H

; 2933 : 		}
; 2934 : 	}

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 24					; 00000018H
	ret	0
$LN4@Buffered_m:

; 2906 : 		}
; 2907 : 	else
; 2908 : 		{	// buffer too small, divide and conquer
; 2909 : 		_BidIt _Firstn, _Lastn;
; 2910 : 		_Diff _Count1n, _Count2n;
; 2911 : 		if (_Count2 < _Count1)

	cmp	edi, ebx

; 2912 : 			{	// left larger, cut it in half and partition right to match
; 2913 : 			_Count1n = _Count1 / 2, _Count2n = 0;
; 2914 : 			_Firstn = _First;
; 2915 : 			std::advance(_Firstn, _Count1n);
; 2916 : 			_Lastn = lower_bound(_Mid, _Last, *_Firstn, _Pred);

	push	0
	jge	SHORT $LN2@Buffered_m
	mov	esi, DWORD PTR __Mid$[esp+40]
	mov	eax, ebx
	cdq
	sub	eax, edx
	mov	edx, DWORD PTR __Pred$[esp+40]
	mov	ebx, eax
	mov	eax, DWORD PTR __Last$[esp+40]
	sar	ebx, 1
	mov	ebp, ebx
	imul	ebp, 84					; 00000054H
	add	ebp, DWORD PTR __First$[esp+40]
	push	edx
	push	ebp
	push	eax
	lea	ecx, DWORD PTR $T273792[esp+56]
	push	esi
	push	ecx
	call	??$_Lower_bound@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinion@@HUOpinionEval@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@0ABUOpinion@@UOpinionEval@@PAH@Z ; std::_Lower_bound<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,Opinion,int,OpinionEval>
	mov	edi, DWORD PTR [eax]

; 2917 : 			_Distance(_Mid, _Lastn, _Count2n);

	mov	ecx, edi
	sub	ecx, esi
	mov	eax, 818089009				; 30c30c31H
	imul	ecx
	sar	edx, 4
	mov	esi, edx
	shr	esi, 31					; 0000001fH
	add	esp, 24					; 00000018H
	add	esi, edx

; 2918 : 			}
; 2919 : 		else

	jmp	SHORT $LN116@Buffered_m
$LN2@Buffered_m:

; 2920 : 			{	// right larger, cut it in half and partition left to match
; 2921 : 			_Count1n = 0, _Count2n = _Count2 / 2;
; 2922 : 			_Lastn = _Mid;
; 2923 : 			std::advance(_Lastn, _Count2n);
; 2924 : 			_Firstn = upper_bound(_First, _Mid, *_Lastn, _Pred);

	mov	ebx, DWORD PTR __First$[esp+40]
	mov	eax, edi
	cdq
	sub	eax, edx
	mov	edx, DWORD PTR __Pred$[esp+40]
	mov	esi, eax
	mov	eax, DWORD PTR __Mid$[esp+40]
	sar	esi, 1
	mov	edi, esi
	imul	edi, 84					; 00000054H
	push	edx
	add	edi, eax
	push	edi
	push	eax
	lea	eax, DWORD PTR $T273882[esp+56]
	push	ebx
	push	eax
	call	??$_Upper_bound@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinion@@HUOpinionEval@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@0ABUOpinion@@UOpinionEval@@PAH@Z ; std::_Upper_bound<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,Opinion,int,OpinionEval>
	mov	ebp, DWORD PTR [eax]

; 2925 : 			_Distance(_First, _Firstn, _Count1n);

	mov	ecx, ebp
	sub	ecx, ebx
	mov	eax, 818089009				; 30c30c31H
	imul	ecx
	sar	edx, 4
	mov	ebx, edx
	shr	ebx, 31					; 0000001fH
	add	esp, 24					; 00000018H
	add	ebx, edx
$LN116@Buffered_m:

; 2926 : 			}
; 2927 : 		_BidIt _Midn = _Buffered_rotate(_Firstn, _Mid, _Lastn,
; 2928 : 			_Count1 - _Count1n, _Count2n, _Tempbuf);	// rearrange middle

	mov	ecx, DWORD PTR __Tempbuf$[esp+36]
	mov	eax, DWORD PTR __Count1$[esp+36]
	mov	edx, DWORD PTR __Mid$[esp+36]
	push	ecx
	push	esi
	sub	eax, ebx
	push	eax
	push	edi
	push	edx
	mov	DWORD PTR tv477[esp+60], eax
	lea	eax, DWORD PTR __Midn$239820[esp+56]
	push	ebp
	push	eax
	call	??$_Buffered_rotate@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@@std@@YA?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@V10@00HHAAV?$_Temp_iterator@UOpinion@@@0@@Z ; std::_Buffered_rotate<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion>

; 2929 : 		_Buffered_merge(_First, _Firstn, _Midn,
; 2930 : 			_Count1n, _Count2n, _Tempbuf, _Pred);	// merge each new part

	mov	ecx, DWORD PTR __Pred$[esp+64]
	mov	edx, DWORD PTR __Tempbuf$[esp+64]
	mov	eax, DWORD PTR __First$[esp+64]
	push	ecx
	push	edx
	push	esi
	push	ebx
	mov	ebx, DWORD PTR __Midn$239820[esp+80]
	push	ebx
	push	ebp
	push	eax
	call	??$_Buffered_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00HHAAV?$_Temp_iterator@UOpinion@@@0@UOpinionEval@@@Z ; std::_Buffered_merge<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion,OpinionEval>

; 2931 : 		_Buffered_merge(_Midn, _Lastn, _Last,
; 2932 : 			_Count1 - _Count1n, _Count2 - _Count2n, _Tempbuf, _Pred);

	mov	ecx, DWORD PTR __Pred$[esp+92]
	mov	edx, DWORD PTR __Tempbuf$[esp+92]
	mov	eax, DWORD PTR __Count2$[esp+92]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+96]
	push	edx
	sub	eax, esi
	push	eax
	mov	eax, DWORD PTR tv477[esp+108]
	push	eax
	push	ecx
	push	edi
	push	ebx
	call	??$_Buffered_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00HHAAV?$_Temp_iterator@UOpinion@@@0@UOpinionEval@@@Z ; std::_Buffered_merge<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion,OpinionEval>
	add	esp, 84					; 00000054H
$LN3@Buffered_m:

; 2933 : 		}
; 2934 : 	}

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 24					; 00000018H
	ret	0
??$_Buffered_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00HHAAV?$_Temp_iterator@UOpinion@@@0@UOpinionEval@@@Z ENDP ; std::_Buffered_merge<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion,OpinionEval>
_TEXT	ENDS
PUBLIC	??$_Unchecked_chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@stdext@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@0V?$_Temp_iterator@UOpinion@@@2@HHUOpinionEval@@@Z ; stdext::_Unchecked_chunked_merge<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion>,int,OpinionEval>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
xdata$x	SEGMENT
__unwindtable$??$_Unchecked_chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@stdext@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@0V?$_Temp_iterator@UOpinion@@@2@HHUOpinionEval@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Unchecked_chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@stdext@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@0V?$_Temp_iterator@UOpinion@@@2@HHUOpinionEval@@@Z$0
__ehfuncinfo$??$_Unchecked_chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@stdext@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@0V?$_Temp_iterator@UOpinion@@@2@HHUOpinionEval@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Unchecked_chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@stdext@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@0V?$_Temp_iterator@UOpinion@@@2@HHUOpinionEval@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
xdata$x	ENDS
;	COMDAT ??$_Unchecked_chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@stdext@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@0V?$_Temp_iterator@UOpinion@@@2@HHUOpinionEval@@@Z
_TEXT	SEGMENT
$T273929 = -16						; size = 1
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 20
__Chunk$ = 36						; size = 4
$T273930 = 40						; size = 4
__Count$ = 40						; size = 4
__Pred$ = 44						; size = 1
??$_Unchecked_chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@stdext@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@0V?$_Temp_iterator@UOpinion@@@2@HHUOpinionEval@@@Z PROC ; stdext::_Unchecked_chunked_merge<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion>,int,OpinionEval>, COMDAT

; 5285 : 	{

	push	-1
	push	__ehhandler$??$_Unchecked_chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@stdext@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@0V?$_Temp_iterator@UOpinion@@@2@HHUOpinionEval@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	ebx
	push	esi
	push	edi

; 5286 : 		_STD _Chunked_merge(_First, _Last, _Dest, _Chunk, _Count, _Pred, _STD _Range_checked_iterator_tag());

	mov	ecx, DWORD PTR __Pred$[esp+24]
	mov	edx, DWORD PTR __Count$[esp+24]
	xor	ebx, ebx
	mov	BYTE PTR $T273929[esp+28], bl
	mov	eax, DWORD PTR $T273929[esp+28]
	push	eax
	mov	eax, DWORD PTR __Chunk$[esp+28]
	push	ecx
	push	edx
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, esp
	mov	DWORD PTR [eax], ebx
	mov	DWORD PTR [eax+4], ebx
	mov	DWORD PTR [eax+8], ebx
	mov	DWORD PTR [eax+12], ebx
	mov	ecx, DWORD PTR __Dest$[esp+76]
	mov	DWORD PTR [eax+16], ecx
	mov	edx, DWORD PTR __Last$[esp+60]
	mov	eax, DWORD PTR __First$[esp+60]
	mov	DWORD PTR $T273930[esp+60], esp
	push	edx
	push	eax
	mov	DWORD PTR __$EHRec$[esp+80], ebx
	call	??$_Chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0V?$_Temp_iterator@UOpinion@@@0@HHUOpinionEval@@U_Range_checked_iterator_tag@0@@Z ; std::_Chunked_merge<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion>,int,OpinionEval>

; 5287 : 	}

	mov	esi, DWORD PTR __Dest$[esp+68]
	add	esp, 44					; 0000002cH
	mov	DWORD PTR __$EHRec$[esp+36], -1
	cmp	esi, ebx
	je	SHORT $LN23@Unchecked_
	cmp	esi, DWORD PTR __Dest$[esp+32]
	je	SHORT $LN9@Unchecked_
	mov	edi, DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LL11@Unchecked_:
	mov	ecx, esi
	call	edi
	add	esi, 84					; 00000054H
	cmp	esi, DWORD PTR __Dest$[esp+32]
	jne	SHORT $LL11@Unchecked_
	mov	esi, DWORD PTR __Dest$[esp+24]
$LN9@Unchecked_:
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN23@Unchecked_:
	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	add	esp, 16					; 00000010H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Unchecked_chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@stdext@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@0V?$_Temp_iterator@UOpinion@@@2@HHUOpinionEval@@@Z$0:
	lea	ecx, DWORD PTR __Dest$[ebp-4]
	jmp	??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ ; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>
__ehhandler$??$_Unchecked_chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@stdext@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@0V?$_Temp_iterator@UOpinion@@@2@HHUOpinionEval@@@Z:
	mov	eax, OFFSET __ehfuncinfo$??$_Unchecked_chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@stdext@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@0V?$_Temp_iterator@UOpinion@@@2@HHUOpinionEval@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Unchecked_chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@stdext@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@0V?$_Temp_iterator@UOpinion@@@2@HHUOpinionEval@@@Z ENDP ; stdext::_Unchecked_chunked_merge<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion>,int,OpinionEval>
PUBLIC	?lGetAvailableTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAvailableTenets
EXTRN	?GetAvailableTenets@CvPlayerPolicies@@QAE?AV?$vector@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@W4PolicyBranchTypes@@H@Z:PROC ; CvPlayerPolicies::GetAvailableTenets
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
;	COMDAT ?lGetAvailableTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iLevel$ = -20						; size = 4
_availableTenets$231252 = -16				; size = 16
_L$ = 8							; size = 4
?lGetAvailableTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetAvailableTenets, COMDAT

; 5120 : {

	sub	esp, 20					; 00000014H
	push	ebx
	push	ebp
	push	esi

; 5121 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+28]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN10@lGetAvaila@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN10@lGetAvaila@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN10@lGetAvaila@2
	xor	bl, bl
$LN10@lGetAvaila@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN17@lGetAvaila@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN17@lGetAvaila@2:

; 5122 : 	const int iLevel = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 5123 : 
; 5124 : 	lua_createtable(L, 0, 0);

	push	0
	push	0
	push	esi
	mov	DWORD PTR _iLevel$[esp+56], eax
	call	_lua_createtable

; 5125 : 	const int t = lua_gettop(L);

	push	esi
	call	_lua_gettop
	add	esp, 24					; 00000018H

; 5126 : 	int idx = 1;
; 5127 : 
; 5128 : 	PolicyBranchTypes eBranch = pkPlayer->GetPlayerPolicies()->GetLateGamePolicyTree();

	mov	ecx, edi
	mov	ebp, eax
	mov	ebx, 1
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetLateGamePolicyTree@CvPlayerPolicies@@QBE?AW4PolicyBranchTypes@@XZ ; CvPlayerPolicies::GetLateGamePolicyTree

; 5129 : 	if (eBranch != NO_POLICY_BRANCH_TYPE)

	cmp	eax, -1
	je	SHORT $LN53@lGetAvaila@2

; 5130 : 	{
; 5131 : 		std::vector<PolicyTypes> availableTenets = pkPlayer->GetPlayerPolicies()->GetAvailableTenets(eBranch, iLevel);

	mov	ecx, DWORD PTR _iLevel$[esp+36]
	push	ecx
	push	eax
	lea	edx, DWORD PTR _availableTenets$231252[esp+44]
	push	edx
	mov	ecx, edi
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetAvailableTenets@CvPlayerPolicies@@QAE?AV?$vector@W4PolicyTypes@@V?$allocator@W4PolicyTypes@@@std@@@std@@W4PolicyBranchTypes@@H@Z ; CvPlayerPolicies::GetAvailableTenets

; 5132 : 		for(std::vector<PolicyTypes>::iterator it = availableTenets.begin();

	mov	edi, DWORD PTR _availableTenets$231252[esp+40]

; 5133 : 			it!= availableTenets.end(); ++it)

	cmp	edi, DWORD PTR _availableTenets$231252[esp+44]
	je	SHORT $LN1@lGetAvaila@2
	npad	6
$LL27@lGetAvaila@2:

; 5134 : 		{
; 5135 : 			const PolicyTypes ePolicy = (*it);
; 5136 : 			lua_pushinteger(L, ePolicy);

	mov	eax, DWORD PTR [edi]
	push	eax
	push	esi
	call	_lua_pushinteger

; 5137 : 			lua_rawseti(L, t, idx++);

	push	ebx
	push	ebp
	push	esi
	call	_lua_rawseti
	add	edi, 4
	add	esp, 20					; 00000014H
	inc	ebx
	cmp	edi, DWORD PTR _availableTenets$231252[esp+44]
	jne	SHORT $LL27@lGetAvaila@2

; 5133 : 			it!= availableTenets.end(); ++it)

	mov	edi, DWORD PTR _availableTenets$231252[esp+40]
$LN1@lGetAvaila@2:

; 5138 : 		}
; 5139 : 	}

	test	edi, edi
	je	SHORT $LN52@lGetAvaila@2
	push	edi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN52@lGetAvaila@2:
	pop	edi
	pop	esi
	pop	ebp

; 5140 : 
; 5141 : 	return 1;

	mov	eax, 1
	pop	ebx

; 5142 : }

	add	esp, 20					; 00000014H
	ret	0
$LN53@lGetAvaila@2:
	pop	edi
	pop	esi
	pop	ebp

; 5140 : 
; 5141 : 	return 1;

	mov	eax, ebx
	pop	ebx

; 5142 : }

	add	esp, 20					; 00000014H
	ret	0
?lGetAvailableTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetAvailableTenets
_TEXT	ENDS
PUBLIC	??1?$map@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@@std@@QAE@XZ ; std::map<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> > >::~map<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> > >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$map@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
$T274205 = -4						; size = 4
??1?$map@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@@std@@QAE@XZ PROC ; std::map<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> > >::~map<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> > >, COMDAT
; _this$ = ecx
	push	ecx
	push	esi
	mov	esi, ecx
	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [eax]
	push	eax
	push	ecx
	lea	eax, DWORD PTR $T274205[esp+16]
	push	eax
	mov	ecx, esi
	call	?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@0@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::erase
	mov	ecx, DWORD PTR [esi+4]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	xor	eax, eax
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	pop	esi
	pop	ecx
	ret	0
??1?$map@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@@std@@QAE@XZ ENDP ; std::map<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> > >::~map<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> > >
_TEXT	ENDS
PUBLIC	??4?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAEAAV01@ABV01@@Z ; std::vector<CvString,std::allocator<CvString> >::operator=
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??4?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
tv309 = 8						; size = 4
$T274280 = 8						; size = 4
__Right$ = 8						; size = 4
??4?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAEAAV01@ABV01@@Z PROC ; std::vector<CvString,std::allocator<CvString> >::operator=, COMDAT
; _this$ = ecx

; 563  : 		{	// assign _Right

	push	esi
	push	edi

; 564  : 		if (this != &_Right)

	mov	edi, DWORD PTR __Right$[esp+4]
	mov	esi, ecx
	cmp	esi, edi
	je	$LN47@operator@5

; 565  : 			{	// worth doing
; 566  : 
; 567  :  #if _HAS_ITERATOR_DEBUGGING
; 568  : 			this->_Orphan_all();
; 569  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 570  : 
; 571  : 			if (_Right.size() == 0)

	mov	eax, DWORD PTR [edi+4]
	mov	ecx, DWORD PTR [edi+8]
	sub	ecx, eax
	mov	eax, -1840700269			; 92492493H
	imul	ecx
	add	edx, ecx
	push	ebp
	sar	edx, 4
	mov	ebp, edx
	shr	ebp, 31					; 0000001fH
	add	ebp, edx
	jne	SHORT $LN8@operator@5

; 572  : 				clear();	// new sequence empty, erase existing sequence

	mov	eax, DWORD PTR [esi+8]
	mov	ecx, DWORD PTR [esi+4]
	push	eax
	push	ecx
	lea	eax, DWORD PTR $T274280[esp+16]
	push	eax
	mov	ecx, esi
	call	?erase@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE?AV?$_Vector_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@V?$_Vector_const_iterator@VCvString@@V?$allocator@VCvString@@@std@@@2@0@Z ; std::vector<CvString,std::allocator<CvString> >::erase
	pop	ebp
	pop	edi

; 596  : 				}
; 597  : 			}
; 598  : 		return (*this);

	mov	eax, esi
	pop	esi

; 599  : 		}

	ret	4
$LN8@operator@5:

; 573  : 			else if (_Right.size() <= size())

	mov	ecx, DWORD PTR [esi+8]
	push	ebx
	mov	ebx, DWORD PTR [esi+4]
	sub	ecx, ebx
	mov	eax, -1840700269			; 92492493H
	imul	ecx
	add	edx, ecx
	sar	edx, 4
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	cmp	ebp, ecx
	ja	SHORT $LN6@operator@5

; 574  : 				{	// enough elements, copy new and destroy old
; 575  : 				pointer _Ptr = _STDEXT unchecked_copy(_Right._Myfirst, _Right._Mylast,
; 576  : 					_Myfirst);	// copy new

	mov	eax, DWORD PTR [edi+8]
	push	ebx
	push	eax
	mov	eax, DWORD PTR [edi+4]
	push	eax
	call	??$unchecked_copy@PAVCvString@@PAV1@@stdext@@YAPAVCvString@@PAV1@00@Z ; stdext::unchecked_copy<CvString *,CvString *>

; 577  : 				_Destroy(_Ptr, _Mylast);	// destroy old

	mov	ecx, DWORD PTR [esi+8]
	add	esp, 12					; 0000000cH
	push	ecx
	push	eax
	mov	ecx, esi
	call	?_Destroy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXPAVCvString@@0@Z ; std::vector<CvString,std::allocator<CvString> >::_Destroy

; 578  : 				_Mylast = _Myfirst + _Right.size();

	mov	ecx, DWORD PTR [edi+8]
	sub	ecx, DWORD PTR [edi+4]
	mov	eax, -1840700269			; 92492493H
	imul	ecx
	add	edx, ecx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	lea	edx, DWORD PTR [eax*8]
	sub	edx, eax
	mov	eax, DWORD PTR [esi+4]
	pop	ebx
	pop	ebp
	lea	ecx, DWORD PTR [eax+edx*4]
	pop	edi
	mov	DWORD PTR [esi+8], ecx

; 596  : 				}
; 597  : 			}
; 598  : 		return (*this);

	mov	eax, esi
	pop	esi

; 599  : 		}

	ret	4
$LN6@operator@5:

; 579  : 				}
; 580  : 			else if (_Right.size() <= capacity())

	test	ebx, ebx
	jne	SHORT $LN38@operator@5
	xor	eax, eax
	jmp	SHORT $LN39@operator@5
$LN38@operator@5:
	mov	edx, DWORD PTR [esi+12]
	sub	edx, ebx
	mov	DWORD PTR tv309[esp+12], edx
	mov	eax, -1840700269			; 92492493H
	imul	edx
	add	edx, DWORD PTR tv309[esp+12]
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
$LN39@operator@5:
	cmp	ebp, eax
	ja	SHORT $LN4@operator@5

; 581  : 				{	// enough room, copy and construct new
; 582  : 				pointer _Ptr = _Right._Myfirst + size();

	mov	eax, DWORD PTR [edi+4]
	lea	edx, DWORD PTR [ecx*8]
	sub	edx, ecx
	lea	ebp, DWORD PTR [eax+edx*4]

; 583  : 				_STDEXT unchecked_copy(_Right._Myfirst, _Ptr, _Myfirst);

	push	ebx
	push	ebp
	push	eax
	call	??$unchecked_copy@PAVCvString@@PAV1@@stdext@@YAPAVCvString@@PAV1@00@Z ; stdext::unchecked_copy<CvString *,CvString *>

; 584  : 				_Mylast = _Ucopy(_Ptr, _Right._Mylast, _Mylast);

	mov	eax, DWORD PTR [esi+8]
	mov	ecx, DWORD PTR [edi+8]
	add	esp, 12					; 0000000cH
	push	eax
	push	ecx
	push	ebp
	mov	ecx, esi
	call	??$_Ucopy@PAVCvString@@@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEPAVCvString@@PAV2@00@Z ; std::vector<CvString,std::allocator<CvString> >::_Ucopy<CvString *>
	pop	ebx
	pop	ebp
	mov	DWORD PTR [esi+8], eax
	pop	edi

; 596  : 				}
; 597  : 			}
; 598  : 		return (*this);

	mov	eax, esi
	pop	esi

; 599  : 		}

	ret	4
$LN4@operator@5:

; 585  : 				}
; 586  : 			else
; 587  : 				{	// not enough room, allocate new array and construct new
; 588  : 				if (_Myfirst != 0)

	test	ebx, ebx
	je	SHORT $LN42@operator@5

; 589  : 					{	// discard old array
; 590  : 					_Destroy(_Myfirst, _Mylast);

	mov	eax, DWORD PTR [esi+8]
	push	eax
	push	ebx
	mov	ecx, esi
	call	?_Destroy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXPAVCvString@@0@Z ; std::vector<CvString,std::allocator<CvString> >::_Destroy

; 591  : 					this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	mov	edx, DWORD PTR [esi+4]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN42@operator@5:

; 592  : 					}
; 593  : 				if (_Buy(_Right.size()))

	mov	ecx, DWORD PTR [edi+8]
	sub	ecx, DWORD PTR [edi+4]
	mov	eax, -1840700269			; 92492493H
	imul	ecx
	add	edx, ecx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	push	eax
	mov	ecx, esi
	call	?_Buy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAE_NI@Z ; std::vector<CvString,std::allocator<CvString> >::_Buy
	test	al, al
	je	SHORT $LN46@operator@5

; 594  : 					_Mylast = _Ucopy(_Right._Myfirst, _Right._Mylast,
; 595  : 						_Myfirst);

	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [edi+8]
	mov	edx, DWORD PTR [edi+4]
	push	eax
	push	ecx
	push	edx
	mov	ecx, esi
	call	??$_Ucopy@PAVCvString@@@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEPAVCvString@@PAV2@00@Z ; std::vector<CvString,std::allocator<CvString> >::_Ucopy<CvString *>
	mov	DWORD PTR [esi+8], eax
$LN46@operator@5:
	pop	ebx
	pop	ebp
$LN47@operator@5:
	pop	edi

; 596  : 				}
; 597  : 			}
; 598  : 		return (*this);

	mov	eax, esi
	pop	esi

; 599  : 		}

	ret	4
??4?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAEAAV01@ABV01@@Z ENDP ; std::vector<CvString,std::allocator<CvString> >::operator=
_TEXT	ENDS
PUBLIC	??1?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ ; std::vector<Opinion,std::allocator<Opinion> >::~vector<Opinion,std::allocator<Opinion> >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ PROC ; std::vector<Opinion,std::allocator<Opinion> >::~vector<Opinion,std::allocator<Opinion> >, COMDAT
; _this$ = ecx

; 559  : 		_Tidy();

	jmp	?_Tidy@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXXZ ; std::vector<Opinion,std::allocator<Opinion> >::_Tidy
??1?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ ENDP ; std::vector<Opinion,std::allocator<Opinion> >::~vector<Opinion,std::allocator<Opinion> >
_TEXT	ENDS
PUBLIC	?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::_Insert_n
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	SEGMENT
__catchsym$?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z$11 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z$2
__catchsym$?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z$10 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z$0
__ehfuncinfo$?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z$10
	DD	03H
	DD	03H
	DD	04H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z$11
__unwindtable$?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z$4
	DD	02H
	DD	00H
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z$5
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z
_TEXT	SEGMENT
__Tmp$237466 = -100					; size = 84
__$EHRec$ = -16						; size = 16
__Tmp$237456 = 0					; size = 84
__Ncopied$237443 = 84					; size = 4
_this$ = 88						; size = 4
__Whereoff$237442 = 92					; size = 4
__Newvec$237441 = 96					; size = 4
__Cat$274541 = 108					; size = 1
__Cat$274459 = 108					; size = 1
__Where$ = 108						; size = 4
tv562 = 112						; size = 4
__Count$ = 112						; size = 4
$T274537 = 116						; size = 1
$T274456 = 116						; size = 1
__Val$ = 116						; size = 4
?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z PROC ; std::vector<Opinion,std::allocator<Opinion> >::_Insert_n, COMDAT
; _this$ = ecx

; 1153 : 		{	// insert _Count * _Val at _Where

	push	ebp
	lea	ebp, DWORD PTR [esp-100]
	sub	esp, 100				; 00000064H
	push	-1
	push	__ehhandler$?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	mov	esi, ecx

; 1154 : 
; 1155 :  #if _HAS_ITERATOR_DEBUGGING
; 1156 : 		if (_Where._Mycont != this
; 1157 : 			|| _Where._Myptr < _Myfirst || _Mylast < _Where._Myptr)
; 1158 : 			_DEBUG_ERROR("vector insert iterator outside range");
; 1159 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1160 : 
; 1161 : 		size_type _Capacity = capacity();

	mov	eax, DWORD PTR [esi+4]
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], esi
	test	eax, eax
	jne	SHORT $LN31@Insert_n
	xor	ebx, ebx
	jmp	SHORT $LN32@Insert_n
$LN31@Insert_n:
	mov	ecx, DWORD PTR [esi+12]
	sub	ecx, eax
	mov	eax, 818089009				; 30c30c31H
	imul	ecx
	sar	edx, 4
	mov	ebx, edx
	shr	ebx, 31					; 0000001fH
	add	ebx, edx
$LN32@Insert_n:

; 1162 : 
; 1163 : 		if (_Count == 0)

	mov	edi, DWORD PTR __Count$[ebp]
	test	edi, edi
	je	$LN1@Insert_n

; 1164 : 			;
; 1165 : 		else if (max_size() - size() < _Count)

	mov	ecx, DWORD PTR [esi+8]
	mov	edx, ecx
	sub	edx, DWORD PTR [esi+4]
	mov	eax, 818089009				; 30c30c31H
	imul	edx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	edx, 51130563				; 030c30c3H
	sub	edx, eax
	cmp	edx, edi
	jae	SHORT $LN12@Insert_n

; 1166 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@KAXXZ ; std::vector<Opinion,std::allocator<Opinion> >::_Xlen
$LN107@Insert_n:
$LN12@Insert_n:

; 1167 : 		else if (_Capacity < size() + _Count)

	lea	edx, DWORD PTR [eax+edi]
	cmp	ebx, edx
	jae	$LN10@Insert_n

; 1168 : 			{	// not enough room, reallocate
; 1169 : 			_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1170 : 				? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	mov	eax, ebx
	shr	eax, 1
	mov	ecx, 51130563				; 030c30c3H
	sub	ecx, eax
	cmp	ecx, ebx
	jae	SHORT $LN17@Insert_n
	xor	ebx, ebx
	jmp	SHORT $LN18@Insert_n
$LN17@Insert_n:
	add	ebx, eax
$LN18@Insert_n:

; 1171 : 			if (_Capacity < size() + _Count)

	cmp	ebx, edx
	jae	SHORT $LN9@Insert_n

; 1172 : 				_Capacity = size() + _Count;

	mov	ebx, edx
$LN9@Insert_n:

; 1173 : 			pointer _Newvec = this->_Alval.allocate(_Capacity);

	push	0
	push	ebx
	call	??$_Allocate@UOpinion@@@std@@YAPAUOpinion@@IPAU1@@Z ; std::_Allocate<Opinion>

; 1174 : 			size_type _Whereoff = _VEC_ITER_BASE(_Where) - _Myfirst;

	mov	edx, DWORD PTR __Where$[ebp]
	sub	edx, DWORD PTR [esi+4]
	mov	ecx, eax
	mov	eax, 818089009				; 30c30c31H
	imul	edx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	DWORD PTR __Whereoff$237442[ebp], eax

; 1175 : 			int _Ncopied = 0;
; 1176 : 
; 1177 : 			_TRY_BEGIN
; 1178 : 			_Ufill(_Newvec + _Whereoff, _Count, _Val);	// add new stuff

	imul	eax, 84					; 00000054H
	xor	edx, edx
	add	esp, 8
	mov	DWORD PTR __Ncopied$237443[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+12], edx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	add	eax, ecx
	push	edi
	mov	DWORD PTR __Newvec$237441[ebp], ecx
	push	eax
	mov	ecx, esi
	call	?_Ufill@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEPAUOpinion@@PAU3@IABU3@@Z ; std::vector<Opinion,std::allocator<Opinion> >::_Ufill

; 1179 : 			++_Ncopied;
; 1180 : 			_Umove(this->_Myfirst, _VEC_ITER_BASE(_Where),
; 1181 : 				_Newvec);	// move prefix

	mov	edx, DWORD PTR __Cat$274459[ebp]
	mov	eax, DWORD PTR [esi+4]
	mov	BYTE PTR $T274456[ebp], 0
	mov	ecx, DWORD PTR $T274456[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Newvec$237441[ebp]
	push	edx
	mov	edx, DWORD PTR __Where$[ebp]
	push	esi
	push	ecx
	push	edx
	push	eax
	mov	DWORD PTR __Ncopied$237443[ebp], 1
	call	??$_Uninit_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<Opinion *,Opinion *,std::allocator<Opinion> >

; 1182 : 			++_Ncopied;
; 1183 : 			_Umove(_VEC_ITER_BASE(_Where), this->_Mylast,
; 1184 : 				_Newvec + (_Whereoff + _Count));	// move suffix

	mov	eax, DWORD PTR __Whereoff$237442[ebp]
	mov	ecx, DWORD PTR [esi+8]
	add	eax, edi
	imul	eax, 84					; 00000054H
	add	eax, DWORD PTR __Newvec$237441[ebp]
	add	esp, 24					; 00000018H
	mov	BYTE PTR $T274537[ebp], 0
	mov	edx, DWORD PTR $T274537[ebp]
	push	edx
	mov	edx, DWORD PTR __Cat$274541[ebp]
	push	edx
	push	esi
	push	eax
	mov	eax, DWORD PTR __Where$[ebp]
	push	ecx
	push	eax
	mov	DWORD PTR __Ncopied$237443[ebp], 2
	call	??$_Uninit_copy@PAUOpinion@@PAU1@V?$allocator@UOpinion@@@std@@@std@@YAPAUOpinion@@PAU1@00AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<Opinion *,Opinion *,std::allocator<Opinion> >

; 1192 : 			_CATCH_END
; 1193 : 
; 1194 : 			_Count += size();

	mov	ecx, DWORD PTR [esi+4]
	mov	edx, DWORD PTR [esi+8]
	sub	edx, ecx
	mov	eax, 818089009				; 30c30c31H
	imul	edx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	add	esp, 24					; 00000018H
	add	edi, eax
	mov	DWORD PTR __$EHRec$[ebp+12], -1

; 1195 : 			if (_Myfirst != 0)

	test	ecx, ecx
	je	SHORT $LN83@Insert_n

; 1196 : 				{	// destroy and deallocate old array
; 1197 : 				_Destroy(_Myfirst, _Mylast);

	mov	edx, DWORD PTR [esi+8]
	push	edx
	push	ecx
	mov	ecx, esi
	call	?_Destroy@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXPAUOpinion@@0@Z ; std::vector<Opinion,std::allocator<Opinion> >::_Destroy

; 1198 : 				this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	mov	eax, DWORD PTR [esi+4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN83@Insert_n:

; 1199 : 				}
; 1200 : 
; 1201 :  #if _HAS_ITERATOR_DEBUGGING
; 1202 : 			this->_Orphan_all();
; 1203 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1204 : 
; 1205 : 			_Myend = _Newvec + _Capacity;

	mov	eax, DWORD PTR __Newvec$237441[ebp]
	imul	ebx, 84					; 00000054H

; 1206 : 			_Mylast = _Newvec + _Count;

	imul	edi, 84					; 00000054H
	add	ebx, eax
	add	edi, eax
	mov	DWORD PTR [esi+12], ebx
	mov	DWORD PTR [esi+8], edi

; 1207 : 			_Myfirst = _Newvec;

	mov	DWORD PTR [esi+4], eax
	jmp	$LN1@Insert_n
__catch$?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z$0:

; 1185 : 			_CATCH_ALL
; 1186 : 			if (1 < _Ncopied)

	mov	ebx, DWORD PTR __Ncopied$237443[ebp]
	cmp	ebx, 1

; 1187 : 				_Destroy(_Newvec, _Newvec + _Whereoff);

	mov	esi, DWORD PTR __Whereoff$237442[ebp]
	mov	edi, DWORD PTR __Newvec$237441[ebp]
	jle	SHORT $LN7@Insert_n
	mov	ecx, esi
	imul	ecx, 84					; 00000054H
	add	ecx, edi
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	push	edi
	call	?_Destroy@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXPAUOpinion@@0@Z ; std::vector<Opinion,std::allocator<Opinion> >::_Destroy
$LN7@Insert_n:

; 1188 : 			if (0 < _Ncopied)

	test	ebx, ebx
	jle	SHORT $LN6@Insert_n

; 1189 : 				_Destroy(_Newvec + _Whereoff, _Newvec + _Whereoff + _Count);

	mov	edx, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [esi+edx]
	imul	esi, 84					; 00000054H
	imul	eax, 84					; 00000054H
	add	eax, edi
	push	eax
	add	esi, edi
	push	esi
	call	?_Destroy@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXPAUOpinion@@0@Z ; std::vector<Opinion,std::allocator<Opinion> >::_Destroy
$LN6@Insert_n:

; 1190 : 			this->_Alval.deallocate(_Newvec, _Capacity);

	push	edi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1191 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN108@Insert_n:
$LN10@Insert_n:

; 1208 : 			}
; 1209 : 		else if ((size_type)(_Mylast - _VEC_ITER_BASE(_Where)) < _Count)

	sub	ecx, DWORD PTR __Where$[ebp]

; 1210 : 			{	// new stuff spills off end
; 1211 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	ebx, DWORD PTR __Val$[ebp]
	mov	eax, 818089009				; 30c30c31H
	imul	ecx
	sar	edx, 4
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	push	ebx
	cmp	ecx, edi
	jae	$LN3@Insert_n
	lea	ecx, DWORD PTR __Tmp$237456[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@ABV01@@Z
	mov	edx, DWORD PTR [ebx+80]
	mov	DWORD PTR __Tmp$237456[ebp+80], edx

; 1212 : 
; 1213 : 			_Umove(_VEC_ITER_BASE(_Where), _Mylast,
; 1214 : 				_VEC_ITER_BASE(_Where) + _Count);	// copy suffix

	mov	eax, DWORD PTR __Where$[ebp]
	mov	edx, DWORD PTR [esi+8]
	mov	ebx, edi
	imul	ebx, 84					; 00000054H
	lea	ecx, DWORD PTR [ebx+eax]
	push	ecx
	push	edx
	push	eax
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[ebp+12], 2
	call	??$_Umove@PAUOpinion@@@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEPAUOpinion@@PAU2@00@Z ; std::vector<Opinion,std::allocator<Opinion> >::_Umove<Opinion *>

; 1215 : 
; 1216 : 			_TRY_BEGIN
; 1217 : 			_Ufill(_Mylast, _Count - (_Mylast - _VEC_ITER_BASE(_Where)),
; 1218 : 				_Tmp);	// insert new stuff off end

	mov	ecx, DWORD PTR [esi+8]
	mov	edx, ecx
	sub	edx, DWORD PTR __Where$[ebp]
	lea	eax, DWORD PTR __Tmp$237456[ebp]
	push	eax
	mov	eax, 818089009				; 30c30c31H
	imul	edx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	sub	edi, eax
	push	edi
	push	ecx
	mov	ecx, esi
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	call	?_Ufill@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEPAUOpinion@@PAU3@IABU3@@Z ; std::vector<Opinion,std::allocator<Opinion> >::_Ufill

; 1222 : 			_CATCH_END
; 1223 : 
; 1224 : 			_Mylast += _Count;

	add	DWORD PTR [esi+8], ebx
	mov	esi, DWORD PTR [esi+8]

; 1225 : 
; 1226 :  #if _HAS_ITERATOR_DEBUGGING
; 1227 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1228 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1229 : 
; 1230 : 			std::fill(_VEC_ITER_BASE(_Where), _Mylast - _Count,
; 1231 : 				_Tmp);	// insert up to old end

	mov	edx, DWORD PTR __Where$[ebp]
	lea	ecx, DWORD PTR __Tmp$237456[ebp]
	push	ecx
	sub	esi, ebx
	push	esi
	push	edx
	mov	DWORD PTR __$EHRec$[ebp+12], 2
	call	??$_Fill@PAUOpinion@@U1@@std@@YAXPAUOpinion@@0ABU1@@Z ; std::_Fill<Opinion *,Opinion>
	add	esp, 12					; 0000000cH

; 1232 : 			}

	lea	ecx, DWORD PTR __Tmp$237456[ebp]

; 1233 : 		else

	jmp	SHORT $LN106@Insert_n
__catch$?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z$2:

; 1219 : 			_CATCH_ALL
; 1220 : 			_Destroy(_VEC_ITER_BASE(_Where) + _Count, _Mylast + _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	imul	eax, 84					; 00000054H
	mov	edx, DWORD PTR [ecx+8]
	add	edx, eax
	push	edx
	mov	edx, DWORD PTR __Where$[ebp]
	add	eax, edx
	push	eax
	call	?_Destroy@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXPAUOpinion@@0@Z ; std::vector<Opinion,std::allocator<Opinion> >::_Destroy

; 1221 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN109@Insert_n:
$LN3@Insert_n:

; 1234 : 			{	// new stuff can all be assigned
; 1235 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	lea	ecx, DWORD PTR __Tmp$237466[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@ABV01@@Z
	mov	eax, DWORD PTR [ebx+80]
	mov	DWORD PTR __Tmp$237466[ebp+80], eax

; 1236 : 
; 1237 : 			pointer _Oldend = _Mylast;
; 1238 : 			_Mylast = _Umove(_Oldend - _Count, _Oldend,
; 1239 : 				_Mylast);	// copy suffix

	imul	edi, 84					; 00000054H
	mov	ebx, DWORD PTR [esi+8]
	push	ebx
	mov	eax, ebx
	sub	eax, edi
	push	ebx
	push	eax
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[ebp+12], 5
	mov	DWORD PTR tv562[ebp], eax
	call	??$_Umove@PAUOpinion@@@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEPAUOpinion@@PAU2@00@Z ; std::vector<Opinion,std::allocator<Opinion> >::_Umove<Opinion *>

; 1240 : 
; 1241 :  #if _HAS_ITERATOR_DEBUGGING
; 1242 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1243 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1244 : 
; 1245 : 			_STDEXT _Unchecked_move_backward(_VEC_ITER_BASE(_Where), _Oldend - _Count,
; 1246 : 				_Oldend);	// copy hole

	mov	ecx, DWORD PTR tv562[ebp]
	mov	edx, DWORD PTR __Where$[ebp]
	push	ebx
	push	ecx
	push	edx
	mov	DWORD PTR [esi+8], eax
	call	??$_Unchecked_move_backward@PAUOpinion@@PAU1@@stdext@@YAPAUOpinion@@PAU1@00@Z ; stdext::_Unchecked_move_backward<Opinion *,Opinion *>

; 1247 : 			std::fill(_VEC_ITER_BASE(_Where), _VEC_ITER_BASE(_Where) + _Count,
; 1248 : 				_Tmp);	// insert into hole

	lea	eax, DWORD PTR __Tmp$237466[ebp]
	push	eax
	mov	eax, DWORD PTR __Where$[ebp]
	add	edi, eax
	push	edi
	push	eax
	call	??$_Fill@PAUOpinion@@U1@@std@@YAXPAUOpinion@@0ABU1@@Z ; std::_Fill<Opinion *,Opinion>
	add	esp, 24					; 00000018H

; 1249 : 			}

	lea	ecx, DWORD PTR __Tmp$237466[ebp]
$LN106@Insert_n:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN1@Insert_n:

; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	add	ebp, 100				; 00000064H
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN105@Insert_n:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z$4:
	lea	ecx, DWORD PTR __Tmp$237456[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z$5:
	lea	ecx, DWORD PTR __Tmp$237466[ebp]
	jmp	??1Opinion@@QAE@XZ
__ehhandler$?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z ENDP ; std::vector<Opinion,std::allocator<Opinion> >::_Insert_n
PUBLIC	??$sort@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z ; std::sort<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$sort@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$sort@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z PROC ; std::sort<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>, COMDAT

; 3114 : 	_DEBUG_RANGE(_First, _Last);
; 3115 : 	std::_Sort(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Last - _First);

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	ecx, DWORD PTR __First$[esp-4]
	mov	edx, eax
	sub	edx, ecx
	sar	edx, 3
	push	edx
	push	eax
	push	ecx
	call	??$_Sort@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0H@Z ; std::_Sort<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,int>
	add	esp, 12					; 0000000cH

; 3116 : 	}

	ret	0
??$sort@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0@Z ENDP ; std::sort<CvWeightedVector<CvPlot *,800,1>::WeightedElement *>
_TEXT	ENDS
PUBLIC	??$_Buffered_merge_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0HAAV?$_Temp_iterator@UOpinion@@@0@UOpinionEval@@@Z ; std::_Buffered_merge_sort<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion,OpinionEval>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Buffered_merge_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0HAAV?$_Temp_iterator@UOpinion@@@0@UOpinionEval@@@Z
_TEXT	SEGMENT
$T274604 = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
$T274679 = 16						; size = 1
__Count$ = 16						; size = 4
__Tempbuf$ = 20						; size = 4
__Pred$ = 24						; size = 1
??$_Buffered_merge_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0HAAV?$_Temp_iterator@UOpinion@@@0@UOpinionEval@@@Z PROC ; std::_Buffered_merge_sort<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion,OpinionEval>, COMDAT

; 3502 : 	{	// sort using temp buffer for merges, using _Pred

	push	ecx

; 3503 : 	_BidIt _Mid = _First;

	mov	eax, DWORD PTR __First$[esp]
	push	ebx
	push	ebp
	push	esi
	push	edi

; 3504 : 	for (_Diff _Nleft = _Count; _ISORT_MAX <= _Nleft; _Nleft -= _ISORT_MAX)

	mov	edi, DWORD PTR __Count$[esp+16]
	xor	ebx, ebx
	cmp	edi, 32					; 00000020H
	jl	SHORT $LN4@Buffered_m@2
	mov	ebp, edi
	shr	ebp, 5
	npad	7
$LL6@Buffered_m@2:

; 3505 : 		{	// sort chunks
; 3506 : 		_BidIt _Midn = _Mid;
; 3507 : 		std::advance(_Midn, (int)_ISORT_MAX);
; 3508 : 
; 3509 : 		std::_Insertion_sort(_Mid, _Midn, _Pred);

	mov	ecx, DWORD PTR __Pred$[esp+16]
	push	ebx
	push	ecx
	lea	esi, DWORD PTR [eax+2688]
	push	esi
	push	eax
	call	??$_Insertion_sort1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@UOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0UOpinionEval@@PAUOpinion@@@Z ; std::_Insertion_sort1<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval,Opinion>
	add	esp, 16					; 00000010H
	sub	ebp, 1

; 3510 : 		_Mid = _Midn;

	mov	eax, esi
	jne	SHORT $LL6@Buffered_m@2
$LN4@Buffered_m@2:

; 3511 : 		}
; 3512 : 	std::_Insertion_sort(_Mid, _Last, _Pred);	// sort partial last chunk

	mov	edx, DWORD PTR __Pred$[esp+16]
	mov	ecx, DWORD PTR __Last$[esp+16]
	push	ebx
	push	edx
	push	ecx
	push	eax
	call	??$_Insertion_sort1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@UOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0UOpinionEval@@PAUOpinion@@@Z ; std::_Insertion_sort1<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval,Opinion>

; 3513 : 
; 3514 : 	for (_Diff _Chunk = _ISORT_MAX; _Chunk < _Count; _Chunk *= 2)

	mov	esi, 32					; 00000020H
	add	esp, 16					; 00000010H
	cmp	edi, esi
	jle	SHORT $LN1@Buffered_m@2
	mov	ebp, DWORD PTR __Tempbuf$[esp+16]
	npad	2
$LL3@Buffered_m@2:

; 3515 : 		{	// merge adjacent pairs of chunks to and from temp buffer
; 3516 : 		_STDEXT _Unchecked_chunked_merge(_First, _Last, _Tempbuf._Init(),
; 3517 : 			_Chunk, _Count, _Pred);

	mov	edx, DWORD PTR __Pred$[esp+16]
	mov	eax, DWORD PTR [ebp+16]
	mov	ecx, DWORD PTR [eax]
	push	edx
	mov	DWORD PTR [eax+4], ecx
	push	edi
	push	esi
	sub	esp, 20					; 00000014H
	mov	eax, esp
	mov	DWORD PTR [eax], ebx
	mov	DWORD PTR [eax+4], ebx
	mov	DWORD PTR [eax+8], ebx
	mov	DWORD PTR [eax+12], ebx
	mov	edx, DWORD PTR [ebp+16]
	mov	DWORD PTR [eax+16], edx
	mov	eax, DWORD PTR __Last$[esp+48]
	mov	ecx, DWORD PTR __First$[esp+48]
	mov	DWORD PTR $T274604[esp+52], esp
	push	eax
	push	ecx
	call	??$_Unchecked_chunked_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@V?$_Temp_iterator@UOpinion@@@2@HUOpinionEval@@@stdext@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@0V?$_Temp_iterator@UOpinion@@@2@HHUOpinionEval@@@Z ; stdext::_Unchecked_chunked_merge<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,std::_Temp_iterator<Opinion>,int,OpinionEval>

; 3518 : 		_STDEXT _Unchecked_chunked_merge(_Tempbuf._First(), _Tempbuf._Last(), _First,
; 3519 : 			_Chunk *= 2, _Count, _Pred);

	mov	ecx, DWORD PTR __Pred$[esp+56]
	mov	eax, DWORD PTR [ebp+16]
	mov	BYTE PTR $T274679[esp+56], bl
	mov	edx, DWORD PTR $T274679[esp+56]
	push	edx
	mov	edx, DWORD PTR __First$[esp+60]
	push	ecx
	mov	ecx, DWORD PTR [eax+4]
	push	edi
	add	esi, esi
	push	esi
	push	edx
	mov	edx, DWORD PTR [eax]
	push	ecx
	push	edx
	call	??$_Chunked_merge@PAUOpinion@@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinionEval@@@std@@YAXPAUOpinion@@0V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@HHUOpinionEval@@U_Range_checked_iterator_tag@0@@Z ; std::_Chunked_merge<Opinion *,std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,OpinionEval>
	add	esi, esi
	add	esp, 68					; 00000044H
	cmp	esi, edi
	jl	SHORT $LL3@Buffered_m@2
$LN1@Buffered_m@2:

; 3520 : 		}
; 3521 : 	}

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	pop	ecx
	ret	0
??$_Buffered_merge_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0HAAV?$_Temp_iterator@UOpinion@@@0@UOpinionEval@@@Z ENDP ; std::_Buffered_merge_sort<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion,OpinionEval>
_TEXT	ENDS
PUBLIC	?lGetInternationalTradeRoutePlotToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRoutePlotToolTip
EXTRN	?GetPlotToolTips@CvPlayerTrade@@QAE?AV?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@PAVCvPlot@@@Z:PROC ; CvPlayerTrade::GetPlotToolTips
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$?lGetInternationalTradeRoutePlotToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetInternationalTradeRoutePlotToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetInternationalTradeRoutePlotToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z$1
__ehfuncinfo$?lGetInternationalTradeRoutePlotToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?lGetInternationalTradeRoutePlotToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetInternationalTradeRoutePlotToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bFail$274703 = -49					; size = 1
_stack_size$274717 = -48				; size = 4
_t$229844 = -48						; size = 4
_astrToolTips$ = -44					; size = 16
$T274688 = -28						; size = 16
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetInternationalTradeRoutePlotToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetInternationalTradeRoutePlotToolTip, COMDAT

; 3214 : {

	push	-1
	push	__ehhandler$?lGetInternationalTradeRoutePlotToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 40					; 00000028H
	push	ebx
	push	ebp
	push	esi

; 3215 : 	lua_createtable(L, 0, 0);

	mov	esi, DWORD PTR _L$[esp+60]
	push	edi
	xor	ebx, ebx
	push	ebx
	push	ebx
	push	esi
	call	_lua_createtable

; 3216 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	BYTE PTR _bFail$274703[esp+92], 1
	xor	ebp, ebp
	call	_lua_type
	add	esp, 24					; 00000018H
	cmp	eax, 5
	jne	SHORT $LN104@lGetIntern@13
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN104@lGetIntern@13
	push	-1
	push	esi
	call	_lua_touserdata
	mov	ebp, eax
	add	esp, 8
	cmp	ebp, ebx
	je	SHORT $LN104@lGetIntern@13
	mov	BYTE PTR _bFail$274703[esp+68], bl
$LN104@lGetIntern@13:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	cmp	BYTE PTR _bFail$274703[esp+68], bl
	je	SHORT $LN17@lGetIntern@13
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN17@lGetIntern@13:

; 3217 : 	CvPlot* pPlot = CvLuaPlot::GetInstance(L, 2, false);

	push	esi
	call	_lua_gettop
	push	2
	push	esi
	mov	DWORD PTR _stack_size$274717[esp+80], eax
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN21@lGetIntern@13
	push	OFFSET $SG237776
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN21@lGetIntern@13
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	edi, eax
$LN21@lGetIntern@13:
	mov	eax, DWORD PTR _stack_size$274717[esp+68]
	push	eax
	push	esi
	call	_lua_settop
	add	esp, 8

; 3218 : 	std::vector<CvString> astrToolTips;

	mov	DWORD PTR _astrToolTips$[esp+72], ebx
	mov	DWORD PTR _astrToolTips$[esp+76], ebx
	mov	DWORD PTR _astrToolTips$[esp+80], ebx

; 3219 : 	astrToolTips = pkPlayer->GetTrade()->GetPlotToolTips(pPlot);

	push	edi
	lea	ecx, DWORD PTR $T274688[esp+72]
	push	ecx
	mov	ecx, ebp
	mov	DWORD PTR __$EHRec$[esp+84], ebx
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	ecx, eax
	call	?GetPlotToolTips@CvPlayerTrade@@QAE?AV?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@PAVCvPlot@@@Z ; CvPlayerTrade::GetPlotToolTips
	push	eax
	lea	ecx, DWORD PTR _astrToolTips$[esp+72]
	mov	BYTE PTR __$EHRec$[esp+80], 1
	call	??4?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAEAAV01@ABV01@@Z ; std::vector<CvString,std::allocator<CvString> >::operator=
	lea	ecx, DWORD PTR $T274688[esp+68]
	mov	BYTE PTR __$EHRec$[esp+76], 0
	call	?_Tidy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXXZ ; std::vector<CvString,std::allocator<CvString> >::_Tidy

; 3220 : 
; 3221 : 	int index = 1;
; 3222 : 	for (int i = astrToolTips.size(); i > 0; i--)

	mov	ecx, DWORD PTR _astrToolTips$[esp+76]
	mov	ebx, DWORD PTR _astrToolTips$[esp+72]
	sub	ecx, ebx
	mov	eax, -1840700269			; 92492493H
	imul	ecx
	add	edx, ecx
	sar	edx, 4
	mov	edi, edx
	shr	edi, 31					; 0000001fH
	add	edi, edx
	mov	ebp, 1
	test	edi, edi
	jle	SHORT $LN1@lGetIntern@13
	lea	edx, DWORD PTR [edi*8]
	sub	edx, edi
	lea	ebx, DWORD PTR [ebx+edx*4-28]
	npad	4
$LL3@lGetIntern@13:

; 3223 : 	{
; 3224 : 		lua_createtable(L, 0, 0);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 3225 : 		const int t = lua_gettop(L);

	push	esi
	call	_lua_gettop
	add	esp, 16					; 00000010H

; 3226 : 		lua_pushstring(L, astrToolTips[i - 1]);

	mov	ecx, ebx
	mov	DWORD PTR _t$229844[esp+68], eax
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring

; 3227 : 		lua_setfield(L, t, "String");

	mov	eax, DWORD PTR _t$229844[esp+76]
	push	OFFSET $SG229845
	push	eax
	push	esi
	call	_lua_setfield

; 3228 : 		lua_rawseti(L, -2, index++);

	push	ebp
	push	-2					; fffffffeH
	push	esi
	call	_lua_rawseti
	dec	edi
	add	esp, 32					; 00000020H
	inc	ebp
	sub	ebx, 28					; 0000001cH
	test	edi, edi
	jg	SHORT $LL3@lGetIntern@13

; 3220 : 
; 3221 : 	int index = 1;
; 3222 : 	for (int i = astrToolTips.size(); i > 0; i--)

	mov	ebx, DWORD PTR _astrToolTips$[esp+72]
$LN1@lGetIntern@13:

; 3229 : 	}
; 3230 : 
; 3231 : 	return 1;

	mov	DWORD PTR __$EHRec$[esp+76], -1
	test	ebx, ebx
	je	SHORT $LN103@lGetIntern@13
	mov	edi, DWORD PTR _astrToolTips$[esp+76]
	mov	esi, ebx
	cmp	ebx, edi
	je	SHORT $LN82@lGetIntern@13
$LL84@lGetIntern@13:
	mov	ecx, esi
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	add	esi, 28					; 0000001cH
	cmp	esi, edi
	jne	SHORT $LL84@lGetIntern@13
$LN82@lGetIntern@13:
	push	ebx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN103@lGetIntern@13:

; 3232 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+68]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 52					; 00000034H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetInternationalTradeRoutePlotToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _astrToolTips$[ebp]
	jmp	??1?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ ; std::vector<CvString,std::allocator<CvString> >::~vector<CvString,std::allocator<CvString> >
__unwindfunclet$?lGetInternationalTradeRoutePlotToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR $T274688[ebp]
	jmp	??1?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ ; std::vector<CvString,std::allocator<CvString> >::~vector<CvString,std::allocator<CvString> >
__ehhandler$?lGetInternationalTradeRoutePlotToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetInternationalTradeRoutePlotToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetInternationalTradeRoutePlotToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetInternationalTradeRoutePlotToolTip
PUBLIC	?lGetInternationalTradeRoutePlotMouseoverToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRoutePlotMouseoverToolTip
EXTRN	?GetPlotMouseoverToolTips@CvPlayerTrade@@QAE?AV?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@PAVCvPlot@@@Z:PROC ; CvPlayerTrade::GetPlotMouseoverToolTips
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$?lGetInternationalTradeRoutePlotMouseoverToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetInternationalTradeRoutePlotMouseoverToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetInternationalTradeRoutePlotMouseoverToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z$1
__ehfuncinfo$?lGetInternationalTradeRoutePlotMouseoverToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?lGetInternationalTradeRoutePlotMouseoverToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetInternationalTradeRoutePlotMouseoverToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bFail$275068 = -49					; size = 1
_stack_size$275082 = -48				; size = 4
_t$229863 = -48						; size = 4
_astrToolTips$ = -44					; size = 16
$T275053 = -28						; size = 16
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetInternationalTradeRoutePlotMouseoverToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetInternationalTradeRoutePlotMouseoverToolTip, COMDAT

; 3236 : {

	push	-1
	push	__ehhandler$?lGetInternationalTradeRoutePlotMouseoverToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 40					; 00000028H
	push	ebx
	push	ebp
	push	esi

; 3237 : 	lua_createtable(L, 0, 0);

	mov	esi, DWORD PTR _L$[esp+60]
	push	edi
	xor	ebx, ebx
	push	ebx
	push	ebx
	push	esi
	call	_lua_createtable

; 3238 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	BYTE PTR _bFail$275068[esp+92], 1
	xor	ebp, ebp
	call	_lua_type
	add	esp, 24					; 00000018H
	cmp	eax, 5
	jne	SHORT $LN104@lGetIntern@14
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN104@lGetIntern@14
	push	-1
	push	esi
	call	_lua_touserdata
	mov	ebp, eax
	add	esp, 8
	cmp	ebp, ebx
	je	SHORT $LN104@lGetIntern@14
	mov	BYTE PTR _bFail$275068[esp+68], bl
$LN104@lGetIntern@14:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	cmp	BYTE PTR _bFail$275068[esp+68], bl
	je	SHORT $LN17@lGetIntern@14
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN17@lGetIntern@14:

; 3239 : 	CvPlot* pPlot = CvLuaPlot::GetInstance(L, 2, false);

	push	esi
	call	_lua_gettop
	push	2
	push	esi
	mov	DWORD PTR _stack_size$275082[esp+80], eax
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN21@lGetIntern@14
	push	OFFSET $SG237776
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN21@lGetIntern@14
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	edi, eax
$LN21@lGetIntern@14:
	mov	eax, DWORD PTR _stack_size$275082[esp+68]
	push	eax
	push	esi
	call	_lua_settop
	add	esp, 8

; 3240 : 	std::vector<CvString> astrToolTips;

	mov	DWORD PTR _astrToolTips$[esp+72], ebx
	mov	DWORD PTR _astrToolTips$[esp+76], ebx
	mov	DWORD PTR _astrToolTips$[esp+80], ebx

; 3241 : 	astrToolTips = pkPlayer->GetTrade()->GetPlotMouseoverToolTips(pPlot);

	push	edi
	lea	ecx, DWORD PTR $T275053[esp+72]
	push	ecx
	mov	ecx, ebp
	mov	DWORD PTR __$EHRec$[esp+84], ebx
	call	?GetTrade@CvPlayer@@QBEPAVCvPlayerTrade@@XZ ; CvPlayer::GetTrade
	mov	ecx, eax
	call	?GetPlotMouseoverToolTips@CvPlayerTrade@@QAE?AV?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@PAVCvPlot@@@Z ; CvPlayerTrade::GetPlotMouseoverToolTips
	push	eax
	lea	ecx, DWORD PTR _astrToolTips$[esp+72]
	mov	BYTE PTR __$EHRec$[esp+80], 1
	call	??4?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAEAAV01@ABV01@@Z ; std::vector<CvString,std::allocator<CvString> >::operator=
	lea	ecx, DWORD PTR $T275053[esp+68]
	mov	BYTE PTR __$EHRec$[esp+76], 0
	call	?_Tidy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXXZ ; std::vector<CvString,std::allocator<CvString> >::_Tidy

; 3242 : 
; 3243 : 	int index = 1;
; 3244 : 	for (int i = astrToolTips.size(); i > 0; i--)

	mov	ecx, DWORD PTR _astrToolTips$[esp+76]
	mov	ebx, DWORD PTR _astrToolTips$[esp+72]
	sub	ecx, ebx
	mov	eax, -1840700269			; 92492493H
	imul	ecx
	add	edx, ecx
	sar	edx, 4
	mov	edi, edx
	shr	edi, 31					; 0000001fH
	add	edi, edx
	mov	ebp, 1
	test	edi, edi
	jle	SHORT $LN1@lGetIntern@14
	lea	edx, DWORD PTR [edi*8]
	sub	edx, edi
	lea	ebx, DWORD PTR [ebx+edx*4-28]
	npad	4
$LL3@lGetIntern@14:

; 3245 : 	{
; 3246 : 		lua_createtable(L, 0, 0);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 3247 : 		const int t = lua_gettop(L);

	push	esi
	call	_lua_gettop
	add	esp, 16					; 00000010H

; 3248 : 		lua_pushstring(L, astrToolTips[i - 1]);

	mov	ecx, ebx
	mov	DWORD PTR _t$229863[esp+68], eax
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring

; 3249 : 		lua_setfield(L, t, "String");

	mov	eax, DWORD PTR _t$229863[esp+76]
	push	OFFSET $SG229864
	push	eax
	push	esi
	call	_lua_setfield

; 3250 : 		lua_rawseti(L, -2, index++);

	push	ebp
	push	-2					; fffffffeH
	push	esi
	call	_lua_rawseti
	dec	edi
	add	esp, 32					; 00000020H
	inc	ebp
	sub	ebx, 28					; 0000001cH
	test	edi, edi
	jg	SHORT $LL3@lGetIntern@14

; 3242 : 
; 3243 : 	int index = 1;
; 3244 : 	for (int i = astrToolTips.size(); i > 0; i--)

	mov	ebx, DWORD PTR _astrToolTips$[esp+72]
$LN1@lGetIntern@14:

; 3251 : 	}
; 3252 : 
; 3253 : 	return 1;	

	mov	DWORD PTR __$EHRec$[esp+76], -1
	test	ebx, ebx
	je	SHORT $LN103@lGetIntern@14
	mov	edi, DWORD PTR _astrToolTips$[esp+76]
	mov	esi, ebx
	cmp	ebx, edi
	je	SHORT $LN82@lGetIntern@14
$LL84@lGetIntern@14:
	mov	ecx, esi
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	add	esi, 28					; 0000001cH
	cmp	esi, edi
	jne	SHORT $LL84@lGetIntern@14
$LN82@lGetIntern@14:
	push	ebx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN103@lGetIntern@14:

; 3254 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+68]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 52					; 00000034H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetInternationalTradeRoutePlotMouseoverToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _astrToolTips$[ebp]
	jmp	??1?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ ; std::vector<CvString,std::allocator<CvString> >::~vector<CvString,std::allocator<CvString> >
__unwindfunclet$?lGetInternationalTradeRoutePlotMouseoverToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR $T275053[ebp]
	jmp	??1?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ ; std::vector<CvString,std::allocator<CvString> >::~vector<CvString,std::allocator<CvString> >
__ehhandler$?lGetInternationalTradeRoutePlotMouseoverToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetInternationalTradeRoutePlotMouseoverToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetInternationalTradeRoutePlotMouseoverToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetInternationalTradeRoutePlotMouseoverToolTip
PUBLIC	?lGetReplayData@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetReplayData
EXTRN	?getReplayDataHistory@CvPlayer@@QBE?AV?$map@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@@std@@I@Z:PROC ; CvPlayer::getReplayDataHistory
EXTRN	?getReplayDataSetName@CvPlayer@@QBEPBDI@Z:PROC	; CvPlayer::getReplayDataSetName
EXTRN	?getNumReplayDataSets@CvPlayer@@QBEIXZ:PROC	; CvPlayer::getNumReplayDataSets
; Function compile flags: /Ogtpy
;	COMDAT ?lGetReplayData@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_numDataSets$ = -20					; size = 4
$T275820 = -16						; size = 4
_data$233733 = -12					; size = 12
_L$ = 8							; size = 4
?lGetReplayData@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetReplayData, COMDAT

; 7594 : {

	sub	esp, 20					; 00000014H
	push	ebx
	push	ebp
	push	esi
	push	edi

; 7595 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	edi, DWORD PTR _L$[esp+32]
	push	edi
	call	_lua_gettop
	push	1
	push	edi
	mov	esi, eax
	mov	bl, 1
	xor	ebp, ebp
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN12@lGetReplay
	push	OFFSET $SG237728
	push	1
	push	edi
	call	_lua_getfield
	push	-1
	push	edi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN12@lGetReplay
	push	-1
	push	edi
	call	_lua_touserdata
	mov	ebp, eax
	add	esp, 8
	test	ebp, ebp
	je	SHORT $LN12@lGetReplay
	xor	bl, bl
$LN12@lGetReplay:
	push	esi
	push	edi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN19@lGetReplay
	push	OFFSET $SG237734
	push	edi
	call	_luaL_error
	push	OFFSET $SG237742
	push	edi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN19@lGetReplay:

; 7596 : 
; 7597 : 	const unsigned int numDataSets = pkPlayer->getNumReplayDataSets();

	mov	ecx, ebp
	call	?getNumReplayDataSets@CvPlayer@@QBEIXZ	; CvPlayer::getNumReplayDataSets
	mov	esi, eax

; 7598 : 
; 7599 : 	lua_createtable(L, 0, numDataSets);

	push	esi
	push	0
	push	edi
	mov	DWORD PTR _numDataSets$[esp+48], esi
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 7600 : 	for(unsigned int uiDataSet = 0; uiDataSet < numDataSets; ++uiDataSet)

	xor	ebx, ebx
	test	esi, esi
	jbe	$LN130@lGetReplay
$LL6@lGetReplay:

; 7601 : 	{
; 7602 : 		lua_pushstring(L, pkPlayer->getReplayDataSetName(uiDataSet));

	push	ebx
	mov	ecx, ebp
	call	?getReplayDataSetName@CvPlayer@@QBEPBDI@Z ; CvPlayer::getReplayDataSetName
	push	eax
	push	edi
	call	_lua_pushstring
	add	esp, 8

; 7603 : 
; 7604 : 		CvPlayer::TurnData data = pkPlayer->getReplayDataHistory(uiDataSet);

	push	ebx
	lea	eax, DWORD PTR _data$233733[esp+40]
	push	eax
	mov	ecx, ebp
	call	?getReplayDataHistory@CvPlayer@@QBE?AV?$map@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@@std@@I@Z ; CvPlayer::getReplayDataHistory

; 7605 : 
; 7606 : 		lua_createtable(L, data.size() - 1, 1);

	mov	ecx, DWORD PTR _data$233733[esp+44]
	push	1
	dec	ecx
	push	ecx
	push	edi
	call	_lua_createtable

; 7607 : 
; 7608 : 		for(CvPlayer::TurnData::iterator it = data.begin(); it != data.end(); ++it)

	mov	eax, DWORD PTR _data$233733[esp+52]
	mov	esi, DWORD PTR [eax]
	add	esp, 12					; 0000000cH
	cmp	esi, eax
	je	SHORT $LN1@lGetReplay
	npad	5
$LL39@lGetReplay:

; 7609 : 		{
; 7610 : 			lua_pushinteger(L, (*it).second);

	mov	edx, DWORD PTR [esi+16]
	push	edx
	push	edi
	call	_lua_pushinteger

; 7611 : 			lua_rawseti(L, -2, (*it).first);

	mov	eax, DWORD PTR [esi+12]
	push	eax
	push	-2					; fffffffeH
	push	edi
	call	_lua_rawseti
	add	esp, 20					; 00000014H
	cmp	BYTE PTR [esi+21], 0
	jne	SHORT $LN128@lGetReplay
	mov	eax, DWORD PTR [esi+8]
	cmp	BYTE PTR [eax+21], 0
	jne	SHORT $LN125@lGetReplay
	mov	esi, eax
	mov	eax, DWORD PTR [esi]
	cmp	BYTE PTR [eax+21], 0
	jne	SHORT $LN128@lGetReplay

; 7607 : 
; 7608 : 		for(CvPlayer::TurnData::iterator it = data.begin(); it != data.end(); ++it)

$LL54@lGetReplay:
	mov	esi, eax
	mov	eax, DWORD PTR [esi]
	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LL54@lGetReplay
	jmp	SHORT $LN128@lGetReplay
$LN125@lGetReplay:
	mov	eax, DWORD PTR [esi+4]
	cmp	BYTE PTR [eax+21], 0
	jne	SHORT $LN37@lGetReplay
$LL38@lGetReplay:
	cmp	esi, DWORD PTR [eax+8]
	jne	SHORT $LN37@lGetReplay
	mov	esi, eax
	mov	eax, DWORD PTR [eax+4]
	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LL38@lGetReplay
$LN37@lGetReplay:
	mov	esi, eax
$LN128@lGetReplay:
	cmp	esi, DWORD PTR _data$233733[esp+40]
	jne	SHORT $LL39@lGetReplay
$LN1@lGetReplay:

; 7612 : 		}
; 7613 : 
; 7614 : 		lua_rawset(L, -3);

	push	-3					; fffffffdH
	push	edi
	call	_lua_rawset

; 7615 : 	}

	mov	eax, DWORD PTR _data$233733[esp+48]
	mov	ecx, DWORD PTR [eax]
	add	esp, 8
	push	eax
	push	ecx
	lea	ecx, DWORD PTR $T275820[esp+44]
	push	ecx
	lea	ecx, DWORD PTR _data$233733[esp+48]
	call	?erase@?$_Tree@V?$_Tmap_traits@IHU?$less@I@std@@V?$allocator@U?$pair@$$CBIH@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@0@Z ; std::_Tree<std::_Tmap_traits<unsigned int,int,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,int> >,0> >::erase
	mov	edx, DWORD PTR _data$233733[esp+40]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	xor	eax, eax
	inc	ebx
	add	esp, 4
	mov	DWORD PTR _data$233733[esp+40], eax
	mov	DWORD PTR _data$233733[esp+44], eax
	cmp	ebx, DWORD PTR _numDataSets$[esp+36]
	jb	$LL6@lGetReplay
$LN130@lGetReplay:
	pop	edi
	pop	esi
	pop	ebp

; 7616 : 
; 7617 : 	return 1;

	mov	eax, 1
	pop	ebx

; 7618 : }

	add	esp, 20					; 00000014H
	ret	0
?lGetReplayData@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetReplayData
_TEXT	ENDS
PUBLIC	?SortItems@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QAEXXZ ; CvWeightedVector<CvPlot *,800,1>::SortItems
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvweightedvector.h
;	COMDAT ?SortItems@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QAEXXZ
_TEXT	SEGMENT
?SortItems@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QAEXXZ PROC ; CvWeightedVector<CvPlot *,800,1>::SortItems, COMDAT
; _this$ = ecx

; 140  : 		std::sort(m_pItems.begin(), m_pItems.end());

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	lea	ecx, DWORD PTR [eax+ecx*8]
	mov	edx, ecx
	sub	edx, eax
	sar	edx, 3
	push	edx
	push	ecx
	push	eax
	call	??$_Sort@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0H@Z ; std::_Sort<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,int>
	add	esp, 12					; 0000000cH

; 141  : 	}

	ret	0
?SortItems@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QAEXXZ ENDP ; CvWeightedVector<CvPlot *,800,1>::SortItems
_TEXT	ENDS
PUBLIC	?insert@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@V?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@ABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::insert
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?insert@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@V?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@ABUOpinion@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Val$ = 16						; size = 4
?insert@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@V?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@ABUOpinion@@@Z PROC ; std::vector<Opinion,std::allocator<Opinion> >::insert, COMDAT
; _this$ = ecx

; 875  : 		{	// insert _Val at _Where

	push	ebx

; 876  : 		size_type _Off = size() == 0 ? 0 : _Where - begin();

	mov	ebx, DWORD PTR __Where$[esp]
	push	esi
	push	edi
	mov	edi, ecx
	mov	esi, DWORD PTR [edi+4]
	mov	ecx, DWORD PTR [edi+8]
	sub	ecx, esi
	mov	eax, 818089009				; 30c30c31H
	imul	ecx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	jne	SHORT $LN3@insert
	xor	esi, esi
	jmp	SHORT $LN4@insert
$LN3@insert:
	mov	ecx, ebx
	sub	ecx, esi
	mov	eax, 818089009				; 30c30c31H
	imul	ecx
	sar	edx, 4
	mov	esi, edx
	shr	esi, 31					; 0000001fH
	add	esi, edx
$LN4@insert:

; 877  : 		_Insert_n(_Where, (size_type)1, _Val);

	mov	ecx, DWORD PTR __Val$[esp+8]
	push	ecx
	push	1
	push	ebx
	mov	ecx, edi
	call	?_Insert_n@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@IAEXV?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@IABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::_Insert_n

; 878  : 		return (begin() + _Off);

	imul	esi, 84					; 00000054H
	add	esi, DWORD PTR [edi+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+8]
	pop	edi
	mov	DWORD PTR [eax], esi
	pop	esi
	pop	ebx

; 879  : 		}

	ret	12					; 0000000cH
?insert@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@V?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@ABUOpinion@@@Z ENDP ; std::vector<Opinion,std::allocator<Opinion> >::insert
_TEXT	ENDS
PUBLIC	??$_Stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0HAAV?$_Temp_iterator@UOpinion@@@0@UOpinionEval@@@Z ; std::_Stable_sort<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion,OpinionEval>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$_Stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0HAAV?$_Temp_iterator@UOpinion@@@0@UOpinionEval@@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Count$ = 16						; size = 4
__Tempbuf$ = 20						; size = 4
__Pred$ = 24						; size = 1
??$_Stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0HAAV?$_Temp_iterator@UOpinion@@@0@UOpinionEval@@@Z PROC ; std::_Stable_sort<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion,OpinionEval>, COMDAT

; 3529 : 	{	// sort preserving order of equivalents, using _Pred

	push	ebx

; 3530 : 	if (_Count <= _ISORT_MAX)

	mov	ebx, DWORD PTR __Count$[esp]
	cmp	ebx, 32					; 00000020H
	jg	SHORT $LN4@Stable_sor

; 3531 : 		std::_Insertion_sort(_First, _Last, _Pred);	// small

	mov	eax, DWORD PTR __Pred$[esp]
	mov	ecx, DWORD PTR __Last$[esp]
	mov	edx, DWORD PTR __First$[esp]
	push	0
	push	eax
	push	ecx
	push	edx
	call	??$_Insertion_sort1@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@UOpinion@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0UOpinionEval@@PAUOpinion@@@Z ; std::_Insertion_sort1<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval,Opinion>
	add	esp, 16					; 00000010H
	pop	ebx

; 3552 : 		}
; 3553 : 	}

	ret	0
$LN4@Stable_sor:

; 3532 : 	else
; 3533 : 		{	// sort halves and merge
; 3534 : 		_Diff _Count2 = (_Count + 1) / 2;

	lea	eax, DWORD PTR [ebx+1]
	push	ebp

; 3535 : 		_BidIt _Mid = _First;
; 3536 : 		std::advance(_Mid, _Count2);
; 3537 : 
; 3538 : 		if (_Count2 <= _Tempbuf._Maxlen())

	mov	ebp, DWORD PTR __Tempbuf$[esp+4]
	cdq
	push	esi
	sub	eax, edx
	mov	esi, eax
	push	edi
	sar	esi, 1
	mov	edi, esi
	imul	edi, 84					; 00000054H
	add	edi, DWORD PTR __First$[esp+12]
	mov	ecx, ebp
	call	?_Maxlen@?$_Temp_iterator@UOpinion@@@std@@QAEHXZ ; std::_Temp_iterator<Opinion>::_Maxlen
	cmp	esi, eax
	jg	SHORT $LN2@Stable_sor

; 3539 : 			{	// temp buffer big enough, sort each half using buffer
; 3540 : 			_Buffered_merge_sort(_First, _Mid, _Count2, _Tempbuf, _Pred);

	mov	eax, DWORD PTR __Pred$[esp+12]
	mov	ecx, DWORD PTR __First$[esp+12]
	push	eax
	push	ebp
	push	esi
	push	edi
	push	ecx
	call	??$_Buffered_merge_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0HAAV?$_Temp_iterator@UOpinion@@@0@UOpinionEval@@@Z ; std::_Buffered_merge_sort<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion,OpinionEval>

; 3541 : 			_Buffered_merge_sort(_Mid, _Last, _Count - _Count2,
; 3542 : 				_Tempbuf, _Pred);

	mov	edx, DWORD PTR __Pred$[esp+32]
	mov	eax, DWORD PTR __Last$[esp+32]
	push	edx
	push	ebp
	sub	ebx, esi
	push	ebx
	push	eax
	push	edi
	call	??$_Buffered_merge_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0HAAV?$_Temp_iterator@UOpinion@@@0@UOpinionEval@@@Z ; std::_Buffered_merge_sort<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion,OpinionEval>

; 3543 : 			}
; 3544 : 		else

	jmp	SHORT $LN21@Stable_sor
$LN2@Stable_sor:

; 3545 : 			{	// temp buffer not big enough, divide and conquer
; 3546 : 			_Stable_sort(_First, _Mid, _Count2, _Tempbuf, _Pred);

	mov	ecx, DWORD PTR __Pred$[esp+12]
	mov	edx, DWORD PTR __First$[esp+12]
	push	ecx
	push	ebp
	push	esi
	push	edi
	push	edx
	call	??$_Stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0HAAV?$_Temp_iterator@UOpinion@@@0@UOpinionEval@@@Z ; std::_Stable_sort<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion,OpinionEval>

; 3547 : 			_Stable_sort(_Mid, _Last, _Count - _Count2, _Tempbuf, _Pred);

	mov	eax, DWORD PTR __Pred$[esp+32]
	mov	ecx, DWORD PTR __Last$[esp+32]
	push	eax
	push	ebp
	sub	ebx, esi
	push	ebx
	push	ecx
	push	edi
	call	??$_Stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0HAAV?$_Temp_iterator@UOpinion@@@0@UOpinionEval@@@Z ; std::_Stable_sort<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion,OpinionEval>
$LN21@Stable_sor:

; 3548 : 			}
; 3549 : 
; 3550 : 		_Buffered_merge(_First, _Mid, _Last,
; 3551 : 			_Count2, _Count - _Count2, _Tempbuf, _Pred);	// merge halves

	mov	edx, DWORD PTR __Pred$[esp+52]
	mov	eax, DWORD PTR __Last$[esp+52]
	mov	ecx, DWORD PTR __First$[esp+52]
	add	esp, 40					; 00000028H
	push	edx
	push	ebp
	push	ebx
	push	esi
	push	eax
	push	edi
	push	ecx
	call	??$_Buffered_merge@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@00HHAAV?$_Temp_iterator@UOpinion@@@0@UOpinionEval@@@Z ; std::_Buffered_merge<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion,OpinionEval>
	add	esp, 28					; 0000001cH
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 3552 : 		}
; 3553 : 	}

	ret	0
??$_Stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0HAAV?$_Temp_iterator@UOpinion@@@0@UOpinionEval@@@Z ENDP ; std::_Stable_sort<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion,OpinionEval>
_TEXT	ENDS
PUBLIC	?lGetRecommendedFoundCityPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetRecommendedFoundCityPlots
EXTRN	?GeneratePath@CvUnit@@QBE_NPBVCvPlot@@H_NPAH@Z:PROC ; CvUnit::GeneratePath
EXTRN	?isVisibleEnemyUnit@CvPlot@@QBE_NW4PlayerTypes@@@Z:PROC ; CvPlot::isVisibleEnemyUnit
EXTRN	?getArea@CvCity@@QBEHXZ:PROC			; CvCity::getArea
EXTRN	?getTeam@CvUnit@@QBE?AW4TeamTypes@@XZ:PROC	; CvUnit::getTeam
EXTRN	?isFound@CvUnit@@QBE_NXZ:PROC			; CvUnit::isFound
EXTRN	__chkstk:PROC
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvdllinterfaces.h
xdata$x	SEGMENT
__unwindtable$?lGetRecommendedFoundCityPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetRecommendedFoundCityPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetRecommendedFoundCityPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetRecommendedFoundCityPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z$2
__ehfuncinfo$?lGetRecommendedFoundCityPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?lGetRecommendedFoundCityPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetRecommendedFoundCityPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iFailLimit$ = -6492					; size = 4
_iEndSearchX$ = -6492					; size = 4
_pkInstance$275996 = -6488				; size = 4
_kMap$ = -6484						; size = 4
_iEndSearchY$ = -6480					; size = 4
_selectedUnits$ = -6476					; size = 4
_iBeginSearchY$ = -6472					; size = 4
_iEvalDistance$ = -6468					; size = 4
_pUnit$234636 = -6468					; size = 4
_iSettlerY$ = -6464					; size = 4
_pkUnit$234638 = -6460					; size = 4
_iSettlerX$ = -6456					; size = 4
_eUnitTeam$ = -6452					; size = 4
_iDistanceDropoffMod$ = -6448				; size = 4
_iPathTurns$ = -6444					; size = 4
_aPlots$ = -6440					; size = 12
_aBestPlots$ = -6428					; size = 6416
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetRecommendedFoundCityPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC ; CvLuaPlayer::lGetRecommendedFoundCityPlots, COMDAT

; 8772 : {

	push	-1
	mov	eax, DWORD PTR fs:0
	push	__ehhandler$?lGetRecommendedFoundCityPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z
	push	eax
	mov	eax, 6480				; 00001950H
	mov	DWORD PTR fs:0, esp
	call	__chkstk
	push	ebx
	push	ebp
	push	esi

; 8773 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+6500]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$275996[esp+6520], 0
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN232@lGetRecomm@2
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN232@lGetRecomm@2
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$275996[esp+6508], eax
	test	eax, eax
	je	SHORT $LN232@lGetRecomm@2
	xor	bl, bl
$LN232@lGetRecomm@2:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN44@lGetRecomm@2
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN44@lGetRecomm@2:

; 8774 : 
; 8775 : 	CvUnit* pFoundingUnit = NULL;
; 8776 : 
; 8777 : 	//Get first selected unit that can found cities.
; 8778 : 	CvEnumerator<ICvUnit1> selectedUnits(GC.GetEngineUserInterface()->GetSelectedUnits());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+112]
	call	edx
	mov	esi, eax
	mov	DWORD PTR _selectedUnits$[esp+6508], esi
	mov	DWORD PTR __$EHRec$[esp+6516], 0
$LL29@lGetRecomm@2:

; 8779 : 	while(selectedUnits.MoveNext())

	test	esi, esi
	je	$LN228@lGetRecomm@2
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+8]
	push	esi
	call	ecx
	test	al, al
	je	$LN228@lGetRecomm@2

; 8780 : 	{
; 8781 : 		auto_ptr<ICvUnit1> pUnit(selectedUnits.GetCurrent());

	lea	ecx, DWORD PTR _selectedUnits$[esp+6508]
	call	?GetCurrent@?$CvEnumerator@VICvUnit1@@@@QAEPAVICvUnit1@@XZ ; CvEnumerator<ICvUnit1>::GetCurrent
	mov	edi, eax
	mov	DWORD PTR _pUnit$234636[esp+6508], edi
	mov	BYTE PTR __$EHRec$[esp+6516], 1

; 8782 : 		if(pUnit.get() != NULL)

	test	edi, edi
	je	SHORT $LN240@lGetRecomm@2

; 8783 : 		{
; 8784 : 			CvUnit* pkUnit = GC.UnwrapUnitPointer(pUnit.get());

	push	edi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?UnwrapUnitPointer@CvGlobals@@QAEPAVCvUnit@@PAVICvUnit1@@@Z ; CvGlobals::UnwrapUnitPointer
	mov	ebp, eax
	mov	DWORD PTR _pkUnit$234638[esp+6508], ebp

; 8785 : 			if(pkUnit != NULL && pkUnit->isFound())

	test	ebp, ebp
	je	SHORT $LN240@lGetRecomm@2
	mov	ecx, ebp
	call	?isFound@CvUnit@@QBE_NXZ		; CvUnit::isFound
	test	al, al
	jne	SHORT $LN221@lGetRecomm@2
$LN240@lGetRecomm@2:

; 8789 : 			}
; 8790 : 		}
; 8791 : 	}

	mov	BYTE PTR __$EHRec$[esp+6516], 0
	test	edi, edi
	je	SHORT $LL29@lGetRecomm@2
	mov	edx, DWORD PTR [edi]
	mov	eax, DWORD PTR [edx+4]
	push	edi
	call	eax
	jmp	SHORT $LL29@lGetRecomm@2
$LN221@lGetRecomm@2:

; 8786 : 			{
; 8787 : 				pFoundingUnit = pkUnit;
; 8788 : 				break;

	mov	ecx, DWORD PTR [edi]
	mov	edx, DWORD PTR [ecx+4]
	push	edi
	mov	BYTE PTR __$EHRec$[esp+6520], 0
	call	edx

; 8795 : 
; 8796 : 	int iSettlerDistance;
; 8797 : 	int iDistanceDropoff;
; 8798 : 	int iSettlerX, iSettlerY;
; 8799 : 	int iPathTurns;
; 8800 : 	int iValue;
; 8801 : 	int iDanger;
; 8802 : 
; 8803 : 	// Get coordinates for settler's plot
; 8804 : 	iSettlerX = pFoundingUnit->getX();
; 8805 : 	iSettlerY = pFoundingUnit->getY();
; 8806 : 
; 8807 : 	int iEvalDistance = GC.getSETTLER_EVALUATION_DISTANCE();

	mov	edi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7252
	mov	ecx, DWORD PTR [ebp+88]

; 8808 : 	int iDistanceDropoffMod = GC.getSETTLER_DISTANCE_DROPOFF_MODIFIER();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7256
	mov	eax, DWORD PTR [ebp+76]

; 8809 : #ifndef AUI_HEXSPACE_DX_LOOPS
; 8810 : 	int iBeginSearchX = iSettlerX - iEvalDistance;
; 8811 : 	int iBeginSearchY = iSettlerY - iEvalDistance;
; 8812 : 	int iEndSearchX   = iSettlerX + iEvalDistance;
; 8813 : 	int iEndSearchY   = iSettlerY + iEvalDistance;
; 8814 : 
; 8815 : 	CvMap& kMap = GC.getMap();

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR _iDistanceDropoffMod$[esp+6508], edx
	mov	edx, ecx
	mov	DWORD PTR _iSettlerY$[esp+6508], ecx
	add	ecx, edi
	mov	ebx, eax
	mov	DWORD PTR _iSettlerX$[esp+6508], eax
	sub	edx, edi
	add	eax, edi
	mov	DWORD PTR _iEndSearchY$[esp+6508], ecx

; 8816 : #endif
; 8817 : 
; 8818 : 	TeamTypes eUnitTeam = pFoundingUnit->getTeam();

	mov	ecx, ebp
	mov	DWORD PTR _iEvalDistance$[esp+6508], edi
	sub	ebx, edi
	mov	DWORD PTR _iBeginSearchY$[esp+6508], edx
	mov	DWORD PTR _iEndSearchX$[esp+6508], eax
	mov	DWORD PTR _kMap$[esp+6508], esi
	call	?getTeam@CvUnit@@QBE?AW4TeamTypes@@XZ	; CvUnit::getTeam

; 8819 : 
; 8820 : 	CvCity* pCapital = pkPlayer->getCapitalCity();

	mov	ecx, DWORD PTR _pkInstance$275996[esp+6508]
	mov	DWORD PTR _eUnitTeam$[esp+6508], eax
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity

; 8821 : 	int iCapArea = NULL;
; 8822 : 	if(pCapital)

	test	eax, eax
	je	SHORT $LN24@lGetRecomm@2

; 8823 : 	{
; 8824 : 		iCapArea = pCapital->getArea();

	mov	ecx, eax
	call	?getArea@CvCity@@QBEHXZ			; CvCity::getArea
$LN24@lGetRecomm@2:

; 8825 : 	}
; 8826 : 
; 8827 : 	WeightedPlotVector aBestPlots;

	lea	edx, DWORD PTR _aBestPlots$[esp+6520]
	mov	DWORD PTR _aBestPlots$[esp+6512], 0
	mov	DWORD PTR _aBestPlots$[esp+6516], 800	; 00000320H
	mov	DWORD PTR _aBestPlots$[esp+6508], edx

; 8828 : 	aBestPlots.reserve((iEvalDistance+1) * 2);

	lea	eax, DWORD PTR [edi+edi+2]
	push	eax
	lea	ecx, DWORD PTR _aBestPlots$[esp+6512]
	mov	BYTE PTR __$EHRec$[esp+6520], 2
	call	?GrowSizeToFit@?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@IAEXI@Z ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::GrowSizeToFit

; 8829 : 
; 8830 : #ifdef AUI_HEXSPACE_DX_LOOPS
; 8831 : 	int iMaxDX, iDX;
; 8832 : 	CvPlot* pPlot;
; 8833 : 	for (int iDY = -iEvalDistance; iDY <= iEvalDistance; iDY++)
; 8834 : 	{
; 8835 : 		iMaxDX = iEvalDistance - MAX(0, iDY);
; 8836 : 		for (iDX = -iEvalDistance - MIN(0, iDY); iDX <= iMaxDX; iDX++) // MIN() and MAX() stuff is to reduce loops (hexspace!)
; 8837 : 		{
; 8838 : 			// No need for range check because loops are set up properly
; 8839 : 			pPlot = plotXY(iSettlerX, iSettlerY, iDX, iDY);
; 8840 : #else
; 8841 : 	for(int iPlotX = iBeginSearchX; iPlotX != iEndSearchX; iPlotX++)

	cmp	ebx, DWORD PTR _iEndSearchX$[esp+6508]
	je	$LN231@lGetRecomm@2
	npad	9
$LL237@lGetRecomm@2:

; 8842 : 	{
; 8843 : 		for(int iPlotY = iBeginSearchY; iPlotY != iEndSearchY; iPlotY++)

	mov	ebp, DWORD PTR _iBeginSearchY$[esp+6508]
	mov	ecx, ebp
	cmp	ecx, DWORD PTR _iEndSearchY$[esp+6508]
	je	$LN22@lGetRecomm@2
$LL20@lGetRecomm@2:

; 8844 : 		{
; 8845 : 			CvPlot* pPlot = kMap.plot(iPlotX, iPlotY);

	cmp	ebx, -2147483647			; 80000001H
	je	$LN19@lGetRecomm@2
	cmp	ebp, -2147483647			; 80000001H
	je	$LN19@lGetRecomm@2
	mov	al, BYTE PTR [esi+4056]
	mov	ecx, DWORD PTR [esi+4020]
	test	al, al
	je	SHORT $LN125@lGetRecomm@2
	test	ebx, ebx
	jge	SHORT $LN127@lGetRecomm@2
	mov	eax, ebx
	cdq
	idiv	ecx
	mov	edi, edx
	add	edi, ecx
	jmp	SHORT $LN129@lGetRecomm@2
$LN228@lGetRecomm@2:

; 8792 : 
; 8793 : 	if(pFoundingUnit == NULL)
; 8794 : 		return 0;

	mov	DWORD PTR __$EHRec$[esp+6516], -1
	test	esi, esi
	je	SHORT $LN83@lGetRecomm@2
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+4]
	push	esi
	call	ecx
$LN83@lGetRecomm@2:
	xor	eax, eax
	jmp	$LN30@lGetRecomm@2

; 8844 : 		{
; 8845 : 			CvPlot* pPlot = kMap.plot(iPlotX, iPlotY);

$LN127@lGetRecomm@2:
	cmp	ebx, ecx
	jl	SHORT $LN125@lGetRecomm@2
	mov	eax, ebx
	cdq
	idiv	ecx
	mov	edi, edx
	jmp	SHORT $LN129@lGetRecomm@2
$LN125@lGetRecomm@2:
	mov	edi, ebx
$LN129@lGetRecomm@2:
	mov	al, BYTE PTR [esi+4057]
	mov	esi, DWORD PTR [esi+4024]
	test	al, al
	je	SHORT $LN235@lGetRecomm@2
	test	ebp, ebp
	jge	SHORT $LN137@lGetRecomm@2
	mov	eax, ebp
	cdq
	idiv	esi
	add	edx, esi
	jmp	SHORT $LN139@lGetRecomm@2
$LN137@lGetRecomm@2:
	cmp	ebp, esi
	jl	SHORT $LN235@lGetRecomm@2
	mov	eax, ebp
	cdq
	idiv	esi
	jmp	SHORT $LN139@lGetRecomm@2
$LN235@lGetRecomm@2:
	mov	edx, ebp
$LN139@lGetRecomm@2:
	test	edi, edi
	jl	$LN236@lGetRecomm@2
	cmp	edi, ecx
	jge	$LN236@lGetRecomm@2
	test	edx, edx
	jl	$LN236@lGetRecomm@2
	cmp	edx, esi
	jge	$LN236@lGetRecomm@2
	imul	ecx, edx
	mov	edx, DWORD PTR _kMap$[esp+6508]
	add	ecx, edi
	imul	ecx, 484				; 000001e4H
	add	ecx, DWORD PTR [edx+4068]
	mov	edi, ecx

; 8846 : #endif
; 8847 : 			if(!pPlot)

	je	$LN236@lGetRecomm@2

; 8848 : 			{
; 8849 : 				continue;
; 8850 : 			}
; 8851 : 
; 8852 : 			//if (!pPlot->isVisible(pUnit->getTeam(), false /*bDebug*/))
; 8853 : 			if(!pPlot->isRevealed(eUnitTeam))

	mov	ecx, DWORD PTR _eUnitTeam$[esp+6508]
	mov	eax, ecx
	shr	eax, 5
	mov	edx, eax
	shl	edx, 5
	sub	ecx, edx
	mov	edx, 1
	shl	edx, cl
	test	edx, DWORD PTR [edi+eax*4+8]
	je	$LN236@lGetRecomm@2

; 8854 : 			{
; 8855 : 				continue;
; 8856 : 			}
; 8857 : 
; 8858 : 			// Can't actually found here!
; 8859 : #ifdef AUI_HEXSPACE_DX_LOOPS
; 8860 : 			if (!pkPlayer->canFound(pPlot->getX(), pPlot->getY()))
; 8861 : #else
; 8862 : 			if(!pkPlayer->canFound(iPlotX, iPlotY))

	mov	esi, DWORD PTR _pkInstance$275996[esp+6508]
	push	0
	push	ebp
	push	ebx
	mov	ecx, esi
	call	?canFound@CvPlayer@@QBE_NHH_N@Z		; CvPlayer::canFound
	test	al, al
	je	$LN236@lGetRecomm@2

; 8863 : #endif
; 8864 : 			{
; 8865 : 				continue;
; 8866 : 			}
; 8867 : 
; 8868 : 			//// This operation is just for settling on the same continent as the capital
; 8869 : 			//if(pCapital && pPlot->getArea() != iCapArea)
; 8870 : 			//{
; 8871 : 			//	continue;
; 8872 : 			//}
; 8873 : 
; 8874 : 			// Do we have to check if this is a safe place to go?
; 8875 : 			if(!pPlot->isVisibleEnemyUnit(pkPlayer->GetID()))

	mov	eax, DWORD PTR [esi+44]
	push	eax
	mov	ecx, edi
	call	?isVisibleEnemyUnit@CvPlot@@QBE_NW4PlayerTypes@@@Z ; CvPlot::isVisibleEnemyUnit
	test	al, al
	jne	$LN236@lGetRecomm@2

; 8876 : 			{
; 8877 : #ifdef AUI_HEXSPACE_DX_LOOPS
; 8878 : 				iSettlerDistance = hexDistance(iDX, iDY);
; 8879 : #else
; 8880 : 				iSettlerDistance = plotDistance(iPlotX, iPlotY, iSettlerX, iSettlerY);

	mov	eax, DWORD PTR _iSettlerY$[esp+6508]
	mov	ecx, DWORD PTR _iSettlerX$[esp+6508]
	push	eax
	push	ecx
	push	ebp
	push	ebx
	call	?plotDistance@@YAHHHHH@Z		; plotDistance

; 8881 : #endif
; 8882 : 
; 8883 : 				//iValue = pPlot->getFoundValue(pkPlayer->GetID());
; 8884 : #ifdef AUI_HEXSPACE_DX_LOOPS
; 8885 : 				iValue = pkPlayer->AI_foundValue(pPlot->getX(), pPlot->getY(), -1, false);
; 8886 : #else
; 8887 : 				iValue = pkPlayer->AI_foundValue(iPlotX, iPlotY, -1, false);
; 8888 : #endif
; 8889 : 
; 8890 : 				iDistanceDropoff = (iDistanceDropoffMod * iSettlerDistance) / iEvalDistance;

	imul	eax, DWORD PTR _iDistanceDropoffMod$[esp+6524]
	cdq
	idiv	DWORD PTR _iEvalDistance$[esp+6524]
	mov	ecx, DWORD PTR _pkInstance$275996[esp+6524]
	mov	edx, DWORD PTR [ecx]
	add	esp, 16					; 00000010H
	push	0
	push	-1
	push	ebp
	push	ebx
	mov	esi, eax
	mov	eax, DWORD PTR [edx+48]
	call	eax
	mov	ecx, eax

; 8891 : 				iValue = iValue * (100 - iDistanceDropoff) / 100;

	mov	edx, 100				; 00000064H
	sub	edx, esi
	imul	ecx, edx
	mov	eax, 1374389535				; 51eb851fH
	imul	ecx

; 8892 : 				iDanger = pkPlayer->GetPlotDanger(*pPlot);

	mov	ecx, DWORD PTR _pkInstance$275996[esp+6508]
	sar	edx, 5
	mov	esi, edx
	shr	esi, 31					; 0000001fH
	push	edi
	add	esi, edx
	call	?GetPlotDanger@CvPlayer@@QBEHAAVCvPlot@@@Z ; CvPlayer::GetPlotDanger

; 8893 : 				if(iDanger < 1000)

	cmp	eax, 1000				; 000003e8H
	jge	SHORT $LN236@lGetRecomm@2

; 8894 : 				{
; 8895 : 					iValue = ((1000 - iDanger) * iValue) / 1000;

	mov	ecx, 1000				; 000003e8H
	sub	ecx, eax
	imul	ecx, esi
	mov	eax, 274877907				; 10624dd3H
	imul	ecx

; 8896 : 
; 8897 : 					aBestPlots.push_back(pPlot, iValue);

	mov	eax, DWORD PTR _aBestPlots$[esp+6516]
	sar	edx, 6
	mov	esi, edx
	shr	esi, 31					; 0000001fH
	add	esi, edx
	mov	BYTE PTR _aBestPlots$[esp+12920], 0
	cmp	DWORD PTR _aBestPlots$[esp+6512], eax
	jne	SHORT $LN165@lGetRecomm@2
	push	eax
	lea	ecx, DWORD PTR _aBestPlots$[esp+6512]
	call	?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@$0DCA@$00$0A@$0A@@@IAEXI@Z ; FStaticVector<CvWeightedVector<CvPlot *,800,1>::WeightedElement,800,1,0,0>::GrowSize
$LN165@lGetRecomm@2:
	mov	eax, DWORD PTR _aBestPlots$[esp+6508]
	mov	ecx, DWORD PTR _aBestPlots$[esp+6512]
	lea	eax, DWORD PTR [eax+ecx*8]
	test	eax, eax
	je	SHORT $LN168@lGetRecomm@2
	mov	DWORD PTR [eax], edi
	mov	DWORD PTR [eax+4], esi
$LN168@lGetRecomm@2:
	inc	DWORD PTR _aBestPlots$[esp+6512]
$LN236@lGetRecomm@2:
	mov	esi, DWORD PTR _kMap$[esp+6508]
$LN19@lGetRecomm@2:

; 8842 : 	{
; 8843 : 		for(int iPlotY = iBeginSearchY; iPlotY != iEndSearchY; iPlotY++)

	inc	ebp
	cmp	ebp, DWORD PTR _iEndSearchY$[esp+6508]
	jne	$LL20@lGetRecomm@2
$LN22@lGetRecomm@2:

; 8829 : 
; 8830 : #ifdef AUI_HEXSPACE_DX_LOOPS
; 8831 : 	int iMaxDX, iDX;
; 8832 : 	CvPlot* pPlot;
; 8833 : 	for (int iDY = -iEvalDistance; iDY <= iEvalDistance; iDY++)
; 8834 : 	{
; 8835 : 		iMaxDX = iEvalDistance - MAX(0, iDY);
; 8836 : 		for (iDX = -iEvalDistance - MIN(0, iDY); iDX <= iMaxDX; iDX++) // MIN() and MAX() stuff is to reduce loops (hexspace!)
; 8837 : 		{
; 8838 : 			// No need for range check because loops are set up properly
; 8839 : 			pPlot = plotXY(iSettlerX, iSettlerY, iDX, iDY);
; 8840 : #else
; 8841 : 	for(int iPlotX = iBeginSearchX; iPlotX != iEndSearchX; iPlotX++)

	inc	ebx
	cmp	ebx, DWORD PTR _iEndSearchX$[esp+6508]
	jne	$LL237@lGetRecomm@2
$LN231@lGetRecomm@2:

; 8898 : 				}
; 8899 : 			}
; 8900 : 		}
; 8901 : 	}
; 8902 : 
; 8903 : 	int iReturnSize = 0;
; 8904 : 	int iFailLimit = 20;		// Paths can be really slow to create, bail if we fail too many times.
; 8905 : 	#define MAX_RECCOMEND_RETURN 3
; 8906 : 	CvPlot* aPlots[MAX_RECCOMEND_RETURN];
; 8907 : 
; 8908 : 	uint uiListSize;
; 8909 : 	if ((uiListSize = aBestPlots.size()) > 0)

	mov	eax, DWORD PTR _aBestPlots$[esp+6512]
	xor	ebx, ebx
	mov	DWORD PTR _iFailLimit$[esp+6508], 20	; 00000014H
	mov	esi, eax
	test	eax, eax
	jbe	SHORT $LN238@lGetRecomm@2

; 8910 : 	{
; 8911 : 		aBestPlots.SortItems();	// highest score will be first.

	mov	ecx, DWORD PTR _aBestPlots$[esp+6508]
	lea	eax, DWORD PTR [ecx+eax*8]
	mov	edx, eax
	sub	edx, ecx
	sar	edx, 3
	push	edx
	push	eax
	push	ecx
	call	??$_Sort@PAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@0H@Z ; std::_Sort<CvWeightedVector<CvPlot *,800,1>::WeightedElement *,int>
	add	esp, 12					; 0000000cH

; 8912 : 		for (uint i = 0; i < uiListSize; ++i )	

	xor	ebp, ebp
	test	esi, esi
	jbe	SHORT $LN238@lGetRecomm@2
$LL11@lGetRecomm@2:

; 8913 : 		{
; 8914 : #ifdef AUI_HEXSPACE_DX_LOOPS
; 8915 : 			pPlot = aBestPlots.GetElement(i);
; 8916 : #else
; 8917 : 			CvPlot* pPlot = aBestPlots.GetElement(i);

	mov	eax, DWORD PTR _aBestPlots$[esp+6508]
	mov	edi, DWORD PTR [eax+ebp*8]

; 8918 : #endif
; 8919 : 			bool bCanFindPath = pFoundingUnit->GeneratePath(pPlot, MOVE_TERRITORY_NO_UNEXPLORED, true, &iPathTurns);

	lea	ecx, DWORD PTR _iPathTurns$[esp+6508]
	push	ecx
	mov	ecx, DWORD PTR _pkUnit$234638[esp+6512]
	push	1
	push	1
	push	edi
	call	?GeneratePath@CvUnit@@QBE_NPBVCvPlot@@H_NPAH@Z ; CvUnit::GeneratePath

; 8920 : 			if(bCanFindPath)

	test	al, al
	je	SHORT $LN8@lGetRecomm@2

; 8921 : 			{
; 8922 : 				aPlots[iReturnSize] = pPlot;

	mov	DWORD PTR _aPlots$[esp+ebx*4+6508], edi

; 8923 : 				++iReturnSize;

	inc	ebx

; 8924 : 				if (iReturnSize == MAX_RECCOMEND_RETURN)

	cmp	ebx, 3

; 8925 : 					break;
; 8926 : 			}
; 8927 : 			else

	jmp	SHORT $LN242@lGetRecomm@2
$LN8@lGetRecomm@2:

; 8928 : 			{
; 8929 : 				if (iFailLimit-- == 0)

	mov	eax, DWORD PTR _iFailLimit$[esp+6508]
	mov	edx, eax
	dec	eax
	mov	DWORD PTR _iFailLimit$[esp+6508], eax
	test	edx, edx
$LN242@lGetRecomm@2:
	je	SHORT $LN238@lGetRecomm@2
	inc	ebp
	cmp	ebp, esi
	jb	SHORT $LL11@lGetRecomm@2
$LN238@lGetRecomm@2:

; 8930 : 					break;
; 8931 : 			}
; 8932 : 		}
; 8933 : 	}
; 8934 : 
; 8935 : 	lua_createtable(L, iReturnSize, 0);

	mov	esi, DWORD PTR _L$[esp+6504]
	push	0
	push	ebx
	push	esi
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 8936 : 	if (iReturnSize > 0)

	test	ebx, ebx
	jle	SHORT $LN239@lGetRecomm@2

; 8937 : 	{
; 8938 : 		int iPositionIndex = lua_gettop(L);

	push	esi
	call	_lua_gettop
	add	esp, 4

; 8939 : 		for(int i = 0; i < iReturnSize; i++)

	xor	edi, edi
	mov	ebp, eax
	test	ebx, ebx
	jle	SHORT $LN239@lGetRecomm@2
	npad	11
$LL3@lGetRecomm@2:

; 8940 : 		{
; 8941 : 			CvLuaPlot::Push(L, aPlots[i]);

	mov	eax, DWORD PTR _aPlots$[esp+edi*4+6508]
	mov	esi, DWORD PTR _L$[esp+6504]
	push	eax
	push	esi
	call	?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push

; 8942 : 			lua_rawseti(L, iPositionIndex, i + 1);

	inc	edi
	push	edi
	push	ebp
	push	esi
	call	_lua_rawseti
	add	esp, 20					; 00000014H
	cmp	edi, ebx
	jl	SHORT $LL3@lGetRecomm@2
$LN239@lGetRecomm@2:

; 8943 : 		}
; 8944 : 	}
; 8945 : 
; 8946 : 	return 1;

	mov	eax, DWORD PTR _aBestPlots$[esp+6508]
	lea	ecx, DWORD PTR _aBestPlots$[esp+6520]
	mov	BYTE PTR __$EHRec$[esp+6516], 0
	cmp	eax, ecx
	je	SHORT $LN196@lGetRecomm@2
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN196@lGetRecomm@2:
	mov	eax, DWORD PTR _selectedUnits$[esp+6508]
	mov	edx, DWORD PTR [eax]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __$EHRec$[esp+6520], -1
	call	eax
	mov	eax, 1
$LN30@lGetRecomm@2:

; 8947 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+6508]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 6492				; 0000195cH
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetRecommendedFoundCityPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _selectedUnits$[ebp]
	jmp	??1?$CvEnumerator@VICvUnit1@@@@QAE@XZ
__unwindfunclet$?lGetRecommendedFoundCityPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR _pUnit$234636[ebp]
	jmp	??1?$auto_ptr@VICvUnit1@@@std@@QAE@XZ	; std::auto_ptr<ICvUnit1>::~auto_ptr<ICvUnit1>
__unwindfunclet$?lGetRecommendedFoundCityPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z$2:
	lea	ecx, DWORD PTR _aBestPlots$[ebp]
	jmp	??1?$CvWeightedVector@PAVCvPlot@@$0DCA@$00@@QAE@XZ ; CvWeightedVector<CvPlot *,800,1>::~CvWeightedVector<CvPlot *,800,1>
__ehhandler$?lGetRecommendedFoundCityPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetRecommendedFoundCityPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetRecommendedFoundCityPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP ; CvLuaPlayer::lGetRecommendedFoundCityPlots
PUBLIC	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z
_TEXT	SEGMENT
$T276527 = -4						; size = 1
__Cat$276531 = 8					; size = 1
$T276498 = 8						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z PROC ; std::vector<Opinion,std::allocator<Opinion> >::push_back, COMDAT
; _this$ = ecx

; 809  : 		{	// insert element at end

	push	ecx
	push	ebx
	push	esi
	mov	esi, ecx

; 810  : 		if (size() < capacity())

	mov	ebx, DWORD PTR [esi+4]
	push	edi
	test	ebx, ebx
	jne	SHORT $LN9@push_back@3
	xor	ecx, ecx
	jmp	SHORT $LN10@push_back@3
$LN9@push_back@3:
	mov	ecx, DWORD PTR [esi+12]
	sub	ecx, ebx
	mov	eax, 818089009				; 30c30c31H
	imul	ecx
	sar	edx, 4
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
$LN10@push_back@3:
	mov	edi, DWORD PTR [esi+8]
	mov	edx, edi
	sub	edx, ebx
	mov	eax, 818089009				; 30c30c31H
	imul	edx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cmp	eax, ecx
	jae	SHORT $LN2@push_back@3

; 811  : 
; 812  :  #if _HAS_ITERATOR_DEBUGGING
; 813  : 			{ // room at end, construct it there
; 814  : 			_Orphan_range(_Mylast, _Mylast);
; 815  : 			_Mylast = _Ufill(_Mylast, 1, _Val);
; 816  : 			}
; 817  : 
; 818  :  #else /* _HAS_ITERATOR_DEBUGGING */
; 819  : 			_Mylast = _Ufill(_Mylast, 1, _Val);

	mov	edx, DWORD PTR __Cat$276531[esp+12]
	mov	eax, DWORD PTR __Val$[esp+12]
	mov	BYTE PTR $T276527[esp+16], 0
	mov	ecx, DWORD PTR $T276527[esp+16]
	push	ecx
	push	edx
	push	esi
	push	eax
	push	1
	push	edi
	call	??$_Uninit_fill_n@PAUOpinion@@IU1@V?$allocator@UOpinion@@@std@@@std@@YAXPAUOpinion@@IABU1@AAV?$allocator@UOpinion@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<Opinion *,unsigned int,Opinion,std::allocator<Opinion> >
	add	esp, 24					; 00000018H
	add	edi, 84					; 00000054H
	mov	DWORD PTR [esi+8], edi
	pop	edi
	pop	esi
	pop	ebx

; 824  : 		}

	pop	ecx
	ret	4
$LN2@push_back@3:

; 820  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 821  : 
; 822  : 		else
; 823  : 			insert(end(), _Val);

	mov	ecx, DWORD PTR __Val$[esp+12]
	push	ecx
	push	edi
	lea	edx, DWORD PTR $T276498[esp+20]
	push	edx
	mov	ecx, esi
	call	?insert@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE?AV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@V?$_Vector_const_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@2@ABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::insert
	pop	edi
	pop	esi
	pop	ebx

; 824  : 		}

	pop	ecx
	ret	4
?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ENDP ; std::vector<Opinion,std::allocator<Opinion> >::push_back
_TEXT	ENDS
PUBLIC	??$_Stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0PAHPAUOpinion@@UOpinionEval@@@Z ; std::_Stable_sort<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion,OpinionEval>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
xdata$x	SEGMENT
__unwindtable$??$_Stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0PAHPAUOpinion@@UOpinionEval@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0PAHPAUOpinion@@UOpinionEval@@@Z$0
__ehfuncinfo$??$_Stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0PAHPAUOpinion@@UOpinionEval@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0PAHPAUOpinion@@UOpinionEval@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
xdata$x	ENDS
;	COMDAT ??$_Stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0PAHPAUOpinion@@UOpinionEval@@@Z
_TEXT	SEGMENT
__Tempbuf$ = -32					; size = 20
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
__Pred$ = 24						; size = 1
??$_Stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0PAHPAUOpinion@@UOpinionEval@@@Z PROC ; std::_Stable_sort<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion,OpinionEval>, COMDAT

; 3560 : 	{	// sort preserving order of equivalents, using _Pred

	push	-1
	push	__ehhandler$??$_Stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0PAHPAUOpinion@@UOpinionEval@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 20					; 00000014H
	push	ebx
	push	esi

; 3561 : 	_Diff _Count = 0;
; 3562 : 	_Distance(_First, _Last, _Count);

	mov	esi, DWORD PTR __Last$[esp+36]
	push	edi
	mov	edi, DWORD PTR __First$[esp+40]
	mov	ecx, esi
	sub	ecx, edi
	mov	eax, 818089009				; 30c30c31H
	imul	ecx
	sar	edx, 4
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx

; 3563 : 	_Temp_iterator<_Ty> _Tempbuf((_Count + 1) / 2);

	lea	eax, DWORD PTR [ecx+1]
	cdq
	sub	eax, edx
	sar	eax, 1
	xor	ebx, ebx
	mov	DWORD PTR __Tempbuf$[esp+56], eax
	lea	eax, DWORD PTR __Tempbuf$[esp+44]
	mov	DWORD PTR __Tempbuf$[esp+44], ebx
	mov	DWORD PTR __Tempbuf$[esp+48], ebx
	mov	DWORD PTR __Tempbuf$[esp+52], ebx
	mov	DWORD PTR __Tempbuf$[esp+60], eax

; 3564 : 	_Stable_sort(_First, _Last, _Count, _Tempbuf, _Pred);

	mov	edx, DWORD PTR __Pred$[esp+40]
	push	edx
	push	eax
	push	ecx
	push	esi
	push	edi
	mov	DWORD PTR __$EHRec$[esp+72], ebx
	call	??$_Stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0HAAV?$_Temp_iterator@UOpinion@@@0@UOpinionEval@@@Z ; std::_Stable_sort<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion,OpinionEval>

; 3565 : 	}

	mov	esi, DWORD PTR __Tempbuf$[esp+64]
	add	esp, 20					; 00000014H
	mov	DWORD PTR __$EHRec$[esp+52], -1
	cmp	esi, ebx
	je	SHORT $LN30@Stable_sor@2
	cmp	esi, DWORD PTR __Tempbuf$[esp+52]
	je	SHORT $LN16@Stable_sor@2
	mov	edi, DWORD PTR __imp_??1String@Localization@@UAE@XZ
	npad	5
$LL18@Stable_sor@2:
	mov	ecx, esi
	call	edi
	add	esi, 84					; 00000054H
	cmp	esi, DWORD PTR __Tempbuf$[esp+52]
	jne	SHORT $LL18@Stable_sor@2
	mov	esi, DWORD PTR __Tempbuf$[esp+44]
$LN16@Stable_sor@2:
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN30@Stable_sor@2:
	mov	ecx, DWORD PTR __$EHRec$[esp+44]
	pop	edi
	pop	esi
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 32					; 00000020H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0PAHPAUOpinion@@UOpinionEval@@@Z$0:
	lea	ecx, DWORD PTR __Tempbuf$[ebp]
	jmp	??1?$_Temp_iterator@UOpinion@@@std@@QAE@XZ ; std::_Temp_iterator<Opinion>::~_Temp_iterator<Opinion>
__ehhandler$??$_Stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0PAHPAUOpinion@@UOpinionEval@@@Z:
	mov	eax, OFFSET __ehfuncinfo$??$_Stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0PAHPAUOpinion@@UOpinionEval@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0PAHPAUOpinion@@UOpinionEval@@@Z ENDP ; std::_Stable_sort<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion,OpinionEval>
PUBLIC	??$stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0UOpinionEval@@@Z ; std::stable_sort<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval>
; Function compile flags: /Ogtpy
;	COMDAT ??$stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0UOpinionEval@@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Pred$ = 16						; size = 1
??$stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0UOpinionEval@@@Z PROC ; std::stable_sort<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval>, COMDAT

; 3571 : 	_DEBUG_RANGE(_First, _Last);
; 3572 : 	_DEBUG_POINTER(_Pred);
; 3573 : 	if (_First != _Last)

	mov	eax, DWORD PTR __First$[esp-4]
	mov	ecx, DWORD PTR __Last$[esp-4]
	cmp	eax, ecx
	je	SHORT $LN1@stable_sor

; 3574 : 		{
; 3575 : 		_Stable_sort(_CHECKED_BASE(_First), _CHECKED_BASE(_Last),
; 3576 : 			_Dist_type(_First), _Val_type(_First), _Pred);

	mov	edx, DWORD PTR __Pred$[esp-4]
	push	edx
	push	0
	push	0
	push	ecx
	push	eax
	call	??$_Stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0PAHPAUOpinion@@UOpinionEval@@@Z ; std::_Stable_sort<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion,OpinionEval>
	add	esp, 20					; 00000014H
$LN1@stable_sor:

; 3577 : 		}
; 3578 : 	}

	ret	0
??$stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0UOpinionEval@@@Z ENDP ; std::stable_sort<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,OpinionEval>
_TEXT	ENDS
PUBLIC	?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetOpinionTable
EXTRN	__imp_?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IABV12@@Z:PROC
EXTRN	__imp_?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z:PROC
EXTRN	__imp_?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIABV12@I@Z:PROC
EXTRN	__imp_?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IIPBD@Z:PROC
EXTRN	__imp_?rfind@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIABV12@I@Z:PROC
EXTRN	__imp_?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB:DWORD
EXTRN	__imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z:PROC
EXTRN	?GetScenarioModifier3@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetScenarioModifier3
EXTRN	?GetScenarioModifier2@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetScenarioModifier2
EXTRN	?GetScenarioModifier1@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetScenarioModifier1
EXTRN	?GetSupportedMyHostingScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetSupportedMyHostingScore
EXTRN	?GetFoiledMyProposalScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetFoiledMyProposalScore
EXTRN	?GetSupportedMyProposalScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetSupportedMyProposalScore
EXTRN	?GetDislikedTheirProposalScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetDislikedTheirProposalScore
EXTRN	?GetLikedTheirProposalScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetLikedTheirProposalScore
EXTRN	?GetPaidTributeToScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetPaidTributeToScore
EXTRN	?GetGaveAssistanceToScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetGaveAssistanceToScore
EXTRN	?GetCapitalCapturedByScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetCapitalCapturedByScore
EXTRN	?GetNukedByScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetNukedByScore
EXTRN	?GetRecentAssistScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetRecentAssistScore
EXTRN	?GetCommonFoeScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetCommonFoeScore
EXTRN	?GetRecentTradeScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetRecentTradeScore
EXTRN	?GetRecklessExpanderScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetRecklessExpanderScore
EXTRN	?GetDenouncedEnemyScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetDenouncedEnemyScore
EXTRN	?GetDenouncedFriendScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetDenouncedFriendScore
EXTRN	?GetDenouncedThemScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetDenouncedThemScore
EXTRN	?GetDenouncedUsScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetDenouncedUsScore
EXTRN	?GetFriendDeclaredWarOnUsScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetFriendDeclaredWarOnUsScore
EXTRN	?GetWeDeclaredWarOnFriendScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetWeDeclaredWarOnFriendScore
EXTRN	?GetFriendDenouncedUsScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetFriendDenouncedUsScore
EXTRN	?GetWeDenouncedFriendScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetWeDenouncedFriendScore
EXTRN	?GetFriendDenouncementScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetFriendDenouncementScore
EXTRN	?GetDOFWithAnyEnemyScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetDOFWithAnyEnemyScore
EXTRN	?GetDOFWithAnyFriendScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetDOFWithAnyFriendScore
EXTRN	?GetDOFAcceptedScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetDOFAcceptedScore
EXTRN	?GetAngryAboutSidedWithProtectedMinorScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetAngryAboutSidedWithProtectedMinorScore
EXTRN	?GetAngryAboutProtectedMinorBulliedScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetAngryAboutProtectedMinorBulliedScore
EXTRN	?GetAngryAboutProtectedMinorAttackedScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetAngryAboutProtectedMinorAttackedScore
EXTRN	?GetAngryAboutProtectedMinorKilledScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetAngryAboutProtectedMinorKilledScore
EXTRN	?GetBrokenCoopWarPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetBrokenCoopWarPromiseScore
EXTRN	?GetIgnoredSpyPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetIgnoredSpyPromiseScore
EXTRN	?GetBrokenSpyPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetBrokenSpyPromiseScore
EXTRN	?GetIgnoredNoDiggingPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetIgnoredNoDiggingPromiseScore
EXTRN	?GetBrokenNoDiggingPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetBrokenNoDiggingPromiseScore
EXTRN	?GetIgnoredNoConvertPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetIgnoredNoConvertPromiseScore
EXTRN	?GetBrokenNoConvertPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetBrokenNoConvertPromiseScore
EXTRN	?GetIgnoredBullyCityStatePromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetIgnoredBullyCityStatePromiseScore
EXTRN	?GetBrokenBullyCityStatePromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetBrokenBullyCityStatePromiseScore
EXTRN	?GetIgnoredAttackCityStatePromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetIgnoredAttackCityStatePromiseScore
EXTRN	?GetBrokenAttackCityStatePromiseWithAnybodyScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetBrokenAttackCityStatePromiseWithAnybodyScore
EXTRN	?GetBrokenAttackCityStatePromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetBrokenAttackCityStatePromiseScore
EXTRN	?GetIgnoredBorderPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetIgnoredBorderPromiseScore
EXTRN	?GetBrokenBorderPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetBrokenBorderPromiseScore
EXTRN	?GetIgnoredExpansionPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetIgnoredExpansionPromiseScore
EXTRN	?GetBrokenExpansionPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetBrokenExpansionPromiseScore
EXTRN	?GetIgnoredMilitaryPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetIgnoredMilitaryPromiseScore
EXTRN	?GetBrokenMilitaryPromiseWithAnybodyScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetBrokenMilitaryPromiseWithAnybodyScore
EXTRN	?GetBrokenMilitaryPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetBrokenMilitaryPromiseScore
EXTRN	?GetTimesIntrigueSharedScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetTimesIntrigueSharedScore
EXTRN	?GetTimesRobbedScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetTimesRobbedScore
EXTRN	?GetDifferentLatePoliciesScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetDifferentLatePoliciesScore
EXTRN	?getPolicyBranchInfo@CvGlobals@@QAEPAVCvPolicyBranchEntry@@W4PolicyBranchTypes@@@Z:PROC ; CvGlobals::getPolicyBranchInfo
EXTRN	?GetSameLatePoliciesScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetSameLatePoliciesScore
EXTRN	?GetHasAdoptedMyReligionScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetHasAdoptedMyReligionScore
EXTRN	?GetHasAdoptedHisReligionScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetHasAdoptedHisReligionScore
EXTRN	?GetReligiousConversionPointsScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetReligiousConversionPointsScore
EXTRN	?GetTimesCultureBombedScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetTimesCultureBombedScore
EXTRN	?GetDemandEverMadeScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetDemandEverMadeScore
EXTRN	?GetStopSpyingRequestScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetStopSpyingRequestScore
EXTRN	?GetNoSetterRequestScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetNoSetterRequestScore
EXTRN	?GetForgaveForSpyingScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetForgaveForSpyingScore
EXTRN	?GetEmbassyScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetEmbassyScore
EXTRN	?GetLiberatedCitiesScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetLiberatedCitiesScore
EXTRN	?GetResurrectedScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetResurrectedScore
EXTRN	?GetLandmarksBuiltForMeScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetLandmarksBuiltForMeScore
EXTRN	?GetCiviliansReturnedToMeScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetCiviliansReturnedToMeScore
EXTRN	__imp_??4String@Localization@@QAEAAV01@PBD@Z:PROC
EXTRN	?GetWarmongerHate@CvDiplomacyAI@@QBEHXZ:PROC	; CvDiplomacyAI::GetWarmongerHate
EXTRN	?GetWarmongerThreatScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetWarmongerThreatScore
EXTRN	?GetMinorCivDisputeLevelScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetMinorCivDisputeLevelScore
EXTRN	?GetWonderDisputeLevelScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetWonderDisputeLevelScore
EXTRN	?GetLandDisputeLevelScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::GetLandDisputeLevelScore
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__ehfuncinfo$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 019930522H
	DD	0a9H
	DD	FLAT:__unwindtable$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$4
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$6
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$7
	DD	07H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$8
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$9
	DD	09H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$10
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$11
	DD	0bH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$12
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$13
	DD	0dH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$14
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$15
	DD	0fH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$16
	DD	010H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$17
	DD	010H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$18
	DD	010H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$19
	DD	010H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$20
	DD	010H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$21
	DD	010H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$22
	DD	010H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$23
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$24
	DD	018H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$25
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$26
	DD	01aH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$27
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$28
	DD	01cH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$29
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$30
	DD	01eH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$31
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$32
	DD	020H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$33
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$34
	DD	022H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$35
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$36
	DD	024H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$37
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$38
	DD	026H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$39
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$40
	DD	028H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$41
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$42
	DD	02aH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$43
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$44
	DD	02cH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$45
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$46
	DD	02eH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$47
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$48
	DD	030H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$49
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$50
	DD	032H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$51
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$52
	DD	034H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$53
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$54
	DD	036H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$55
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$56
	DD	038H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$57
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$58
	DD	03aH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$59
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$60
	DD	03cH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$61
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$62
	DD	03eH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$63
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$64
	DD	040H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$65
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$66
	DD	042H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$67
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$68
	DD	044H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$69
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$70
	DD	046H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$71
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$72
	DD	048H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$73
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$74
	DD	04aH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$75
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$76
	DD	04cH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$77
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$78
	DD	04eH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$79
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$80
	DD	050H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$81
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$82
	DD	052H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$83
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$84
	DD	054H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$85
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$86
	DD	056H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$87
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$88
	DD	058H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$89
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$90
	DD	05aH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$91
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$92
	DD	05cH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$93
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$94
	DD	05eH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$95
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$96
	DD	060H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$97
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$98
	DD	062H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$99
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$100
	DD	064H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$101
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$102
	DD	066H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$103
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$104
	DD	068H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$105
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$106
	DD	06aH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$107
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$108
	DD	06cH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$109
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$110
	DD	06eH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$111
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$112
	DD	070H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$113
	DD	070H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$114
	DD	070H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$115
	DD	070H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$116
	DD	070H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$117
	DD	070H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$118
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$119
	DD	077H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$120
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$121
	DD	079H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$122
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$123
	DD	07bH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$124
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$125
	DD	07dH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$126
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$127
	DD	07fH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$128
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$129
	DD	081H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$130
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$131
	DD	083H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$132
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$133
	DD	085H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$134
	DD	085H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$135
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$136
	DD	088H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$137
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$138
	DD	08aH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$139
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$140
	DD	08cH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$141
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$142
	DD	08eH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$143
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$144
	DD	090H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$145
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$146
	DD	092H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$147
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$148
	DD	094H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$149
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$150
	DD	096H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$151
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$152
	DD	098H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$153
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$154
	DD	09aH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$155
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$156
	DD	09cH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$157
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$158
	DD	09eH
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$159
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$160
	DD	0a0H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$161
	DD	0a1H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$162
	DD	0a2H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$163
	DD	0a3H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$164
	DD	0a4H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$165
	DD	0a5H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$166
	DD	0a6H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$167
	DD	0a7H
	DD	FLAT:__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$168
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
xdata$x	ENDS
;	COMDAT ?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iValue$ = -500						; size = 4
_pDiploAI$ = -496					; size = 4
_eWithPlayer$ = -492					; size = 4
_aOpinions$ = -488					; size = 16
$T276748 = -472						; size = 80
$T276747 = -472						; size = 80
$T276746 = -472						; size = 80
$T276745 = -472						; size = 80
$T276744 = -472						; size = 80
$T276743 = -472						; size = 80
$T276742 = -472						; size = 80
$T276741 = -472						; size = 80
$T276740 = -472						; size = 80
$T276739 = -472						; size = 80
$T276738 = -472						; size = 80
$T276737 = -472						; size = 80
$T276736 = -472						; size = 80
$T276735 = -472						; size = 80
$T276734 = -472						; size = 80
$T276733 = -472						; size = 80
$T276732 = -472						; size = 80
$T276731 = -472						; size = 80
$T276730 = -472						; size = 80
$T276729 = -472						; size = 80
$T276728 = -472						; size = 80
_kOpinion$235951 = -472					; size = 84
$T276727 = -472						; size = 80
$T276726 = -472						; size = 80
$T276725 = -472						; size = 80
$T276724 = -472						; size = 80
$T276723 = -472						; size = 80
_kOpinion$235930 = -472					; size = 84
_kOpinion$235926 = -472					; size = 84
_kOpinion$235922 = -472					; size = 84
_kOpinion$235918 = -472					; size = 84
_kOpinion$235914 = -472					; size = 84
_kOpinion$235910 = -472					; size = 84
_kOpinion$235906 = -472					; size = 84
_kOpinion$235902 = -472					; size = 84
_kOpinion$235898 = -472					; size = 84
_kOpinion$235894 = -472					; size = 84
_kOpinion$235890 = -472					; size = 84
_kOpinion$235886 = -472					; size = 84
_kOpinion$235882 = -472					; size = 84
_kOpinion$235878 = -472					; size = 84
_kOpinion$235874 = -472					; size = 84
_kOpinion$235870 = -472					; size = 84
_kOpinion$235866 = -472					; size = 84
_kOpinion$235862 = -472					; size = 84
_kOpinion$235858 = -472					; size = 84
_kOpinion$235854 = -472					; size = 84
_kOpinion$235850 = -472					; size = 84
_kOpinion$235846 = -472					; size = 84
_kOpinion$235842 = -472					; size = 84
_kOpinion$235838 = -472					; size = 84
_kOpinion$235834 = -472					; size = 84
_kOpinion$235830 = -472					; size = 84
_kOpinion$235826 = -472					; size = 84
_kOpinion$235822 = -472					; size = 84
_kOpinion$235814 = -472					; size = 84
_kOpinion$235808 = -472					; size = 84
_kOpinion$235804 = -472					; size = 84
_kOpinion$235800 = -472					; size = 84
_kOpinion$235796 = -472					; size = 84
_kOpinion$235792 = -472					; size = 84
_kOpinion$235788 = -472					; size = 84
_kOpinion$235784 = -472					; size = 84
_kOpinion$235780 = -472					; size = 84
_kOpinion$235776 = -472					; size = 84
_kOpinion$235772 = -472					; size = 84
_kOpinion$235768 = -472					; size = 84
_kOpinion$235764 = -472					; size = 84
_kOpinion$235760 = -472					; size = 84
_kOpinion$235756 = -472					; size = 84
_kOpinion$235752 = -472					; size = 84
_kOpinion$235722 = -472					; size = 84
_kOpinion$235718 = -472					; size = 84
_kOpinion$235714 = -472					; size = 84
_kOpinion$235710 = -472					; size = 84
_kOpinion$235705 = -472					; size = 84
_kOpinion$235700 = -472					; size = 84
_kOpinion$235696 = -472					; size = 84
_kOpinion$235689 = -472					; size = 84
_kOpinion$236034 = -388					; size = 84
_kOpinion$236030 = -388					; size = 84
_kOpinion$236026 = -388					; size = 84
_kOpinion$236022 = -388					; size = 84
_kOpinion$236018 = -388					; size = 84
_kOpinion$236014 = -388					; size = 84
_kOpinion$236010 = -388					; size = 84
_kOpinion$236006 = -388					; size = 84
_kOpinion$236002 = -388					; size = 84
_kOpinion$235998 = -388					; size = 84
_kOpinion$235994 = -388					; size = 84
_kOpinion$235990 = -388					; size = 84
_kOpinion$235981 = -388					; size = 84
_kOpinion$235977 = -388					; size = 84
_kOpinion$235973 = -388					; size = 84
_kOpinion$235969 = -388					; size = 84
_kOpinion$235965 = -388					; size = 84
_kOpinion$235961 = -388					; size = 84
_kOpinion$235957 = -388					; size = 84
_kOpinion$235953 = -388					; size = 84
_str$235933 = -388					; size = 80
$T276722 = -388						; size = 80
$T276721 = -388						; size = 80
$T276720 = -388						; size = 80
$T276719 = -388						; size = 80
$T276718 = -388						; size = 80
$T276717 = -388						; size = 80
$T276716 = -388						; size = 80
$T276715 = -388						; size = 80
$T276714 = -388						; size = 80
$T276713 = -388						; size = 80
$T276712 = -388						; size = 80
$T276711 = -388						; size = 80
$T276710 = -388						; size = 80
$T276709 = -388						; size = 80
$T276708 = -388						; size = 80
$T276707 = -388						; size = 80
$T276706 = -388						; size = 80
$T276705 = -388						; size = 80
$T276704 = -388						; size = 80
$T276703 = -388						; size = 80
$T276702 = -388						; size = 80
$T276701 = -388						; size = 80
$T276700 = -388						; size = 80
$T276699 = -388						; size = 80
$T276698 = -388						; size = 80
$T276697 = -388						; size = 80
$T276696 = -388						; size = 80
$T276695 = -388						; size = 80
$T276692 = -388						; size = 80
$T276690 = -388						; size = 80
$T276689 = -388						; size = 80
$T276688 = -388						; size = 80
$T276687 = -388						; size = 80
$T276686 = -388						; size = 80
$T276685 = -388						; size = 80
$T276684 = -388						; size = 80
$T276683 = -388						; size = 80
$T276682 = -388						; size = 80
$T276681 = -388						; size = 80
$T276680 = -388						; size = 80
$T276679 = -388						; size = 80
$T276678 = -388						; size = 80
$T276677 = -388						; size = 80
$T276676 = -388						; size = 80
$T276675 = -388						; size = 80
$T276674 = -388						; size = 80
$T276673 = -388						; size = 80
$T276672 = -388						; size = 80
$T276671 = -388						; size = 80
$T276670 = -388						; size = 80
$T276669 = -388						; size = 80
$T276668 = -388						; size = 80
$T276667 = -388						; size = 80
$T276666 = -388						; size = 80
$T276665 = -388						; size = 80
$T276664 = -388						; size = 80
$T276663 = -388						; size = 80
$T276662 = -388						; size = 80
tv3486 = -304						; size = 4
_pkInstance$276934 = -304				; size = 4
tv3047 = -300						; size = 4
$T276749 = -300						; size = 1
_stack_size$276932 = -300				; size = 4
_eTheirBranch$235817 = -296				; size = 4
_iVisibleApproach$ = -296				; size = 4
_strOutput$ = -292					; size = 28
_str$235723 = -264					; size = 28
_strEndColor$ = -236					; size = 28
_strColorSuffix$ = -208					; size = 28
_strNeutralColor$ = -180				; size = 28
_strColorPrefix$ = -152					; size = 28
_strFullPositiveColor$ = -124				; size = 28
_strFullNegativeColor$ = -96				; size = 28
_strPartialPositiveColor$ = -68				; size = 28
_strPartialNegativeColor$ = -40				; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::lGetOpinionTable, COMDAT

; 9859 : {

	push	-1
	push	__ehhandler$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 488				; 000001e8H
	push	ebx
	push	ebp
	push	esi

; 9860 : 	CvPlayerAI* pkPlayer = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+508]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	xor	edi, edi
	push	esi
	mov	DWORD PTR _stack_size$276932[esp+528], eax
	mov	bl, 1
	xor	ebp, ebp
	mov	DWORD PTR _pkInstance$276934[esp+528], edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN285@lGetOpinio
	push	OFFSET $SG237728
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN285@lGetOpinio
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	mov	DWORD PTR _pkInstance$276934[esp+516], edi
	cmp	edi, ebp
	je	SHORT $LN285@lGetOpinio
	xor	bl, bl
$LN285@lGetOpinio:
	mov	eax, DWORD PTR _stack_size$276932[esp+516]
	push	eax
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN292@lGetOpinio
	push	OFFSET $SG237734
	push	esi
	call	_luaL_error
	push	OFFSET $SG237742
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN292@lGetOpinio:

; 9861 : 	PlayerTypes eWithPlayer = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	mov	esi, eax
	add	esp, 8

; 9862 : 	CvDiplomacyAI* pDiploAI = pkPlayer->GetDiplomacyAI();

	mov	ecx, edi
	mov	DWORD PTR _eWithPlayer$[esp+516], esi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	DWORD PTR _pDiploAI$[esp+516], eax

; 9863 : 
; 9864 : 
; 9865 : 	std::vector<Opinion> aOpinions;

	mov	DWORD PTR _aOpinions$[esp+520], ebp
	mov	DWORD PTR _aOpinions$[esp+524], ebp
	mov	DWORD PTR _aOpinions$[esp+528], ebp

; 9866 : 	int iValue;
; 9867 : 
; 9868 : 	int iVisibleApproach = GET_PLAYER(eWithPlayer).GetDiplomacyAI()->GetApproachTowardsUsGuess(pkPlayer->GetID());

	imul	esi, 63236				; 0000f704H
	mov	eax, DWORD PTR [edi+44]
	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	add	ecx, esi
	push	eax
	mov	DWORD PTR __$EHRec$[esp+528], ebp
	mov	DWORD PTR tv3047[esp+520], esi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetApproachTowardsUsGuess@CvDiplomacyAI@@QAE?AW4MajorCivApproachTypes@@W4PlayerTypes@@@Z ; CvDiplomacyAI::GetApproachTowardsUsGuess

; 9869 : 	if (GET_TEAM(pkPlayer->getTeam()).isAtWar(GET_PLAYER(eWithPlayer).getTeam()))

	mov	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	esi, DWORD PTR [esi+edx+44]
	mov	DWORD PTR _iVisibleApproach$[esp+516], eax
	mov	eax, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	cmp	esi, 63					; 0000003fH
	ja	SHORT $LN343@lGetOpinio
	mov	ecx, DWORD PTR [eax+4]
	mov	esi, DWORD PTR [ecx+esi*4]
	jmp	SHORT $LN344@lGetOpinio
$LN343@lGetOpinio:
	or	esi, -1
$LN344@lGetOpinio:
	mov	edi, DWORD PTR [edi+44]
	cmp	edi, 63					; 0000003fH
	ja	SHORT $LN352@lGetOpinio
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [edx+edi*4]
	jmp	SHORT $LN353@lGetOpinio
$LN352@lGetOpinio:
	or	eax, -1
$LN353@lGetOpinio:
	imul	eax, 2984				; 00000ba8H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	push	esi
	mov	ecx, eax
	call	?isAtWar@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isAtWar
	mov	ebp, DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	edi, DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	mov	esi, DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	ebx, DWORD PTR __imp_??0String@Localization@@QAE@XZ
	test	al, al
	je	SHORT $LN111@lGetOpinio

; 9870 : 	{
; 9871 : 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235689[esp+516]
	call	ebx

; 9872 : 		kOpinion.m_iValue = 99999;
; 9873 : 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_AT_WAR");

	lea	eax, DWORD PTR $T276662[esp+516]
	push	OFFSET $SG235691
	push	eax
	mov	BYTE PTR __$EHRec$[esp+532], 1
	mov	DWORD PTR _kOpinion$235689[esp+604], 99999 ; 0001869fH
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235689[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 2
	call	ebp
	lea	ecx, DWORD PTR $T276662[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 1
	call	esi

; 9874 : 		aOpinions.push_back(kOpinion);

	lea	ecx, DWORD PTR _kOpinion$235689[esp+516]
	push	ecx

; 9875 : 	}
; 9876 : 	else

	jmp	$LN906@lGetOpinio
$LN111@lGetOpinio:

; 9877 : 	{
; 9878 : 		if (GET_PLAYER(eWithPlayer).GetDiplomacyAI()->GetNumWarsFought(pkPlayer->GetID()) > 0)

	mov	edx, DWORD PTR _pkInstance$276934[esp+516]
	mov	eax, DWORD PTR [edx+44]
	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	edx, DWORD PTR tv3047[esp+516]
	add	ecx, edx
	push	eax
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetNumWarsFought@CvDiplomacyAI@@QBEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetNumWarsFought
	test	eax, eax
	jle	$LN106@lGetOpinio

; 9879 : 		{
; 9880 : 			if (iVisibleApproach == MAJOR_CIV_APPROACH_FRIENDLY || iVisibleApproach == MAJOR_CIV_APPROACH_NEUTRAL)

	mov	eax, DWORD PTR _iVisibleApproach$[esp+516]
	cmp	eax, 5
	je	SHORT $LN107@lGetOpinio
	cmp	eax, 6
	je	SHORT $LN107@lGetOpinio

; 9887 : 			else
; 9888 : 			{
; 9889 : 				Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235700[esp+516]
	call	ebx

; 9890 : 				kOpinion.m_iValue = 0;
; 9891 : 				kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_PAST_WAR_BAD");

	lea	eax, DWORD PTR $T276664[esp+516]
	push	OFFSET $SG235702
	push	eax
	mov	BYTE PTR __$EHRec$[esp+532], 5
	mov	DWORD PTR _kOpinion$235700[esp+604], 0
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235700[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 6
	call	ebp
	lea	ecx, DWORD PTR $T276664[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 5
	call	esi

; 9892 : 				aOpinions.push_back(kOpinion);

	lea	ecx, DWORD PTR _kOpinion$235700[esp+516]
	push	ecx

; 9893 : 			}

	jmp	SHORT $LN906@lGetOpinio
$LN107@lGetOpinio:

; 9881 : 			{
; 9882 : 				Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235696[esp+516]
	call	ebx

; 9883 : 				kOpinion.m_iValue = 0;
; 9884 : 				kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_PAST_WAR_NEUTRAL");

	lea	edx, DWORD PTR $T276663[esp+516]
	push	OFFSET $SG235698
	push	edx
	mov	BYTE PTR __$EHRec$[esp+532], 3
	mov	DWORD PTR _kOpinion$235696[esp+604], 0
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235696[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 4
	call	ebp
	lea	ecx, DWORD PTR $T276663[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 3
	call	esi

; 9885 : 				aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235696[esp+516]
	push	eax
$LN906@lGetOpinio:
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 9886 : 			}

	lea	ecx, DWORD PTR _kOpinion$235696[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN106@lGetOpinio:

; 9894 : 		}
; 9895 : 	}
; 9896 : 
; 9897 : 	if (iVisibleApproach != MAJOR_CIV_APPROACH_FRIENDLY) 

	cmp	DWORD PTR _iVisibleApproach$[esp+516], 5
	je	$LN902@lGetOpinio

; 9898 : 	{
; 9899 : 		// land dispute
; 9900 : 		iValue = pDiploAI->GetLandDisputeLevelScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[esp+516]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[esp+520]
	call	?GetLandDisputeLevelScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetLandDisputeLevelScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 9901 : 		if (iValue < 0)

	test	eax, eax
	jge	SHORT $LN104@lGetOpinio

; 9902 : 		{
; 9903 : 			Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235705[esp+516]
	call	ebx

; 9904 : 			kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[esp+516]

; 9905 : 			kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_NO_LAND_DISPUTE");

	lea	eax, DWORD PTR $T276665[esp+516]
	push	OFFSET $SG235707
	push	eax
	mov	BYTE PTR __$EHRec$[esp+532], 7
	mov	DWORD PTR _kOpinion$235705[esp+604], edx
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235705[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 8
	call	ebp
	mov	BYTE PTR __$EHRec$[esp+524], 7

; 9906 : 			aOpinions.push_back(kOpinion);
; 9907 : 		}

	jmp	SHORT $LN907@lGetOpinio
$LN104@lGetOpinio:

; 9908 : 		else if (iValue > 0)

	cmp	DWORD PTR _iValue$[esp+516], 0
	jle	SHORT $LN102@lGetOpinio

; 9909 : 		{
; 9910 : 			Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235710[esp+516]
	call	ebx

; 9911 : 			kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[esp+516]

; 9912 : 			kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_LAND_DISPUTE");

	lea	eax, DWORD PTR $T276666[esp+516]
	push	OFFSET $SG235712
	push	eax
	mov	BYTE PTR __$EHRec$[esp+532], 9
	mov	DWORD PTR _kOpinion$235710[esp+604], edx
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235710[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 10		; 0000000aH
	call	ebp
	mov	BYTE PTR __$EHRec$[esp+524], 9
$LN907@lGetOpinio:
	lea	ecx, DWORD PTR $T276666[esp+516]
	call	esi

; 9913 : 			aOpinions.push_back(kOpinion);

	lea	ecx, DWORD PTR _kOpinion$235710[esp+516]
	push	ecx
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 9914 : 		}

	lea	ecx, DWORD PTR _kOpinion$235710[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN102@lGetOpinio:

; 9915 : 
; 9916 : 		// wonder dispute
; 9917 : 		iValue = pDiploAI->GetWonderDisputeLevelScore(eWithPlayer);

	mov	edx, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	edx
	call	?GetWonderDisputeLevelScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetWonderDisputeLevelScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 9918 : 		if (iValue != 0)

	test	eax, eax
	je	SHORT $LN101@lGetOpinio

; 9919 : 		{
; 9920 : 			Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235714[esp+516]
	call	ebx

; 9921 : 			kOpinion.m_iValue = iValue;

	mov	eax, DWORD PTR _iValue$[esp+516]

; 9922 : 			kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_WONDER_DISPUTE");

	lea	ecx, DWORD PTR $T276667[esp+516]
	push	OFFSET $SG235716
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+532], 11		; 0000000bH
	mov	DWORD PTR _kOpinion$235714[esp+604], eax
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235714[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 12		; 0000000cH
	call	ebp
	lea	ecx, DWORD PTR $T276667[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 11		; 0000000bH
	call	esi

; 9923 : 			aOpinions.push_back(kOpinion);

	lea	edx, DWORD PTR _kOpinion$235714[esp+516]
	push	edx
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 9924 : 		}

	lea	ecx, DWORD PTR _kOpinion$235714[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN101@lGetOpinio:

; 9925 : 
; 9926 : 		// minor civ dispute
; 9927 : 		iValue = pDiploAI->GetMinorCivDisputeLevelScore(eWithPlayer);

	mov	eax, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	eax
	call	?GetMinorCivDisputeLevelScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetMinorCivDisputeLevelScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 9928 : 		if (iValue != 0)

	test	eax, eax
	je	SHORT $LN100@lGetOpinio

; 9929 : 		{
; 9930 : 			Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235718[esp+516]
	call	ebx

; 9931 : 			kOpinion.m_iValue = iValue;

	mov	ecx, DWORD PTR _iValue$[esp+516]

; 9932 : 			kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_MINOR_CIV_DISPUTE");

	lea	edx, DWORD PTR $T276668[esp+516]
	push	OFFSET $SG235720
	push	edx
	mov	BYTE PTR __$EHRec$[esp+532], 13		; 0000000dH
	mov	DWORD PTR _kOpinion$235718[esp+604], ecx
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235718[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 14		; 0000000eH
	call	ebp
	lea	ecx, DWORD PTR $T276668[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 13		; 0000000dH
	call	esi

; 9933 : 			aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235718[esp+516]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 9934 : 		}

	lea	ecx, DWORD PTR _kOpinion$235718[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN100@lGetOpinio:

; 9935 : 
; 9936 : 		// warmonger dispute
; 9937 : 		iValue = pDiploAI->GetWarmongerThreatScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[esp+516]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[esp+520]
	call	?GetWarmongerThreatScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetWarmongerThreatScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 9938 : 		if (iValue != 0)

	test	eax, eax
	je	$LN902@lGetOpinio

; 9939 : 		{
; 9940 : 			Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235722[esp+516]
	call	ebx

; 9941 : 			kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[esp+516]

; 9942 : 			CvString str;

	lea	ecx, DWORD PTR _str$235723[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 15		; 0000000fH
	mov	DWORD PTR _kOpinion$235722[esp+596], edx
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 9943 : 			
; 9944 : 			if (pDiploAI->GetWarmongerThreat(eWithPlayer) == THREAT_CRITICAL)

	mov	eax, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	eax
	mov	BYTE PTR __$EHRec$[esp+528], 16		; 00000010H
	call	?GetWarmongerThreat@CvDiplomacyAI@@QBE?AW4ThreatTypes@@W4PlayerTypes@@@Z ; CvDiplomacyAI::GetWarmongerThreat
	cmp	eax, 4
	jne	SHORT $LN98@lGetOpinio

; 9945 : 			{
; 9946 : 				str = Localization::Lookup("TXT_KEY_DIPLO_WARMONGER_THREAT_CRITICAL").toUTF8();

	lea	ecx, DWORD PTR $T276669[esp+516]
	push	OFFSET $SG235726
	push	ecx
	call	edi
	add	esp, 8
	mov	ecx, eax
	mov	BYTE PTR __$EHRec$[esp+524], 17		; 00000011H
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	lea	ecx, DWORD PTR _str$235723[esp+516]
	test	eax, eax
	je	SHORT $LN414@lGetOpinio
	push	eax
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	$LN413@lGetOpinio
$LN414@lGetOpinio:
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	jmp	$LN413@lGetOpinio
$LN98@lGetOpinio:

; 9947 : 			}
; 9948 : 			else if (pDiploAI->GetWarmongerThreat(eWithPlayer) == THREAT_SEVERE)

	mov	edx, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	edx
	call	?GetWarmongerThreat@CvDiplomacyAI@@QBE?AW4ThreatTypes@@W4PlayerTypes@@@Z ; CvDiplomacyAI::GetWarmongerThreat
	cmp	eax, 3
	jne	SHORT $LN96@lGetOpinio

; 9949 : 			{
; 9950 : 				str = Localization::Lookup("TXT_KEY_DIPLO_WARMONGER_THREAT_SEVERE").toUTF8();

	lea	eax, DWORD PTR $T276670[esp+516]
	push	OFFSET $SG235730
	push	eax
	call	edi
	add	esp, 8
	mov	BYTE PTR __$EHRec$[esp+524], 18		; 00000012H
	jmp	SHORT $LN908@lGetOpinio
$LN96@lGetOpinio:

; 9951 : 			}
; 9952 : 			else if (pDiploAI->GetWarmongerThreat(eWithPlayer) == THREAT_MAJOR)

	mov	ecx, DWORD PTR _eWithPlayer$[esp+516]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[esp+520]
	call	?GetWarmongerThreat@CvDiplomacyAI@@QBE?AW4ThreatTypes@@W4PlayerTypes@@@Z ; CvDiplomacyAI::GetWarmongerThreat
	cmp	eax, 2
	jne	SHORT $LN94@lGetOpinio

; 9953 : 			{
; 9954 : 				str = Localization::Lookup("TXT_KEY_DIPLO_WARMONGER_THREAT_MAJOR").toUTF8();

	lea	edx, DWORD PTR $T276671[esp+516]
	push	OFFSET $SG235734
	push	edx
	call	edi
	add	esp, 8
	mov	BYTE PTR __$EHRec$[esp+524], 19		; 00000013H

; 9955 : 			}
; 9956 : 			else 

	jmp	SHORT $LN908@lGetOpinio
$LN94@lGetOpinio:

; 9957 : 			{
; 9958 : 				str = Localization::Lookup("TXT_KEY_DIPLO_WARMONGER_THREAT_MINOR").toUTF8();

	lea	eax, DWORD PTR $T276672[esp+516]
	push	OFFSET $SG235737
	push	eax
	call	edi
	add	esp, 8
	mov	BYTE PTR __$EHRec$[esp+524], 20		; 00000014H
$LN908@lGetOpinio:
	mov	ecx, eax
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _str$235723[esp+520]
	call	??4CvString@@QAEAAV0@PBD@Z		; CvString::operator=
$LN413@lGetOpinio:
	lea	ecx, DWORD PTR $T276672[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 16		; 00000010H
	call	esi

; 9959 : 			}
; 9960 : 
; 9961 : 			if (pDiploAI->GetWarmongerHate() >= 7)

	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	call	?GetWarmongerHate@CvDiplomacyAI@@QBEHXZ	; CvDiplomacyAI::GetWarmongerHate
	cmp	eax, 7
	jl	SHORT $LN92@lGetOpinio

; 9962 : 			{
; 9963 : 				str += " ";

	push	OFFSET $SG235739
	lea	ecx, DWORD PTR _str$235723[esp+520]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 9964 : 				str += Localization::Lookup("TXT_KEY_WARMONGER_HATE_HIGH").toUTF8();

	lea	ecx, DWORD PTR $T276673[esp+516]
	push	OFFSET $SG235741
	push	ecx
	call	edi
	add	esp, 8
	mov	BYTE PTR __$EHRec$[esp+524], 21		; 00000015H
	jmp	SHORT $LN909@lGetOpinio
$LN92@lGetOpinio:

; 9965 : 			}
; 9966 : 			else if (pDiploAI->GetWarmongerHate() >= 5)

	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	call	?GetWarmongerHate@CvDiplomacyAI@@QBEHXZ	; CvDiplomacyAI::GetWarmongerHate
	cmp	eax, 5

; 9967 : 			{
; 9968 : 				str += " ";

	lea	ecx, DWORD PTR _str$235723[esp+516]
	jl	SHORT $LN90@lGetOpinio
	push	OFFSET $SG235744
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 9969 : 				str += Localization::Lookup("TXT_KEY_WARMONGER_HATE_MID").toUTF8();

	lea	edx, DWORD PTR $T276674[esp+516]
	push	OFFSET $SG235746
	push	edx
	call	edi
	add	esp, 8
	mov	BYTE PTR __$EHRec$[esp+524], 22		; 00000016H

; 9970 : 			}
; 9971 : 			else 

	jmp	SHORT $LN909@lGetOpinio
$LN90@lGetOpinio:

; 9972 : 			{
; 9973 : 				str += " ";

	push	OFFSET $SG235748
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 9974 : 				str += Localization::Lookup("TXT_KEY_WARMONGER_HATE_LOW").toUTF8();

	lea	eax, DWORD PTR $T276675[esp+516]
	push	OFFSET $SG235750
	push	eax
	call	edi
	add	esp, 8
	mov	BYTE PTR __$EHRec$[esp+524], 23		; 00000017H
$LN909@lGetOpinio:
	mov	ecx, eax
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _str$235723[esp+520]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
	lea	ecx, DWORD PTR $T276675[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 16		; 00000010H
	call	esi

; 9975 : 			}
; 9976 : 
; 9977 : 			kOpinion.m_str = str;

	lea	ecx, DWORD PTR _str$235723[esp+516]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235722[esp+520]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@PBD@Z

; 9978 : 
; 9979 : 			aOpinions.push_back(kOpinion);

	lea	ecx, DWORD PTR _kOpinion$235722[esp+516]
	push	ecx
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 9980 : 		}

	lea	ecx, DWORD PTR _str$235723[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 15		; 0000000fH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR _kOpinion$235722[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN902@lGetOpinio:

; 9981 : 	}
; 9982 : 
; 9983 : 	if (iVisibleApproach == MAJOR_CIV_APPROACH_AFRAID)

	cmp	DWORD PTR _iVisibleApproach$[esp+516], 4
	jne	SHORT $LN88@lGetOpinio

; 9984 : 	{
; 9985 : 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235752[esp+516]
	call	ebx

; 9986 : 		kOpinion.m_iValue = 0;
; 9987 : 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_AFRAID");

	lea	edx, DWORD PTR $T276676[esp+516]
	push	OFFSET $SG235754
	push	edx
	mov	BYTE PTR __$EHRec$[esp+532], 24		; 00000018H
	mov	DWORD PTR _kOpinion$235752[esp+604], 0
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235752[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 25		; 00000019H
	call	ebp
	lea	ecx, DWORD PTR $T276676[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 24		; 00000018H
	call	esi

; 9988 : 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235752[esp+516]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 9989 : 	}

	lea	ecx, DWORD PTR _kOpinion$235752[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN88@lGetOpinio:

; 9990 : 
; 9991 : 	iValue = pDiploAI->GetCiviliansReturnedToMeScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[esp+516]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[esp+520]
	call	?GetCiviliansReturnedToMeScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetCiviliansReturnedToMeScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 9992 : 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN87@lGetOpinio

; 9993 : 	{
; 9994 : 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235756[esp+516]
	call	ebx

; 9995 : 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[esp+516]

; 9996 : 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_CIVILIANS_RETURNED");

	lea	eax, DWORD PTR $T276677[esp+516]
	push	OFFSET $SG235758
	push	eax
	mov	BYTE PTR __$EHRec$[esp+532], 26		; 0000001aH
	mov	DWORD PTR _kOpinion$235756[esp+604], edx
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235756[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 27		; 0000001bH
	call	ebp
	lea	ecx, DWORD PTR $T276677[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 26		; 0000001aH
	call	esi

; 9997 : 		aOpinions.push_back(kOpinion);

	lea	ecx, DWORD PTR _kOpinion$235756[esp+516]
	push	ecx
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 9998 : 	}

	lea	ecx, DWORD PTR _kOpinion$235756[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN87@lGetOpinio:

; 9999 : 	
; 10000: 	iValue = pDiploAI->GetLandmarksBuiltForMeScore(eWithPlayer);

	mov	edx, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	edx
	call	?GetLandmarksBuiltForMeScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetLandmarksBuiltForMeScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10001: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN86@lGetOpinio

; 10002: 	{
; 10003: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235760[esp+516]
	call	ebx

; 10004: 		kOpinion.m_iValue = iValue;

	mov	eax, DWORD PTR _iValue$[esp+516]

; 10005: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_LANDMARKS_BUILT");

	lea	ecx, DWORD PTR $T276678[esp+516]
	push	OFFSET $SG235762
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+532], 28		; 0000001cH
	mov	DWORD PTR _kOpinion$235760[esp+604], eax
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235760[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 29		; 0000001dH
	call	ebp
	lea	ecx, DWORD PTR $T276678[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 28		; 0000001cH
	call	esi

; 10006: 		aOpinions.push_back(kOpinion);

	lea	edx, DWORD PTR _kOpinion$235760[esp+516]
	push	edx
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10007: 	}

	lea	ecx, DWORD PTR _kOpinion$235760[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN86@lGetOpinio:

; 10008: 
; 10009: 	iValue = pDiploAI->GetResurrectedScore(eWithPlayer);

	mov	eax, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	eax
	call	?GetResurrectedScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetResurrectedScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10010: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN85@lGetOpinio

; 10011: 	{
; 10012: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235764[esp+516]
	call	ebx

; 10013: 		kOpinion.m_iValue = iValue;

	mov	ecx, DWORD PTR _iValue$[esp+516]

; 10014: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_RESURRECTED");

	lea	edx, DWORD PTR $T276679[esp+516]
	push	OFFSET $SG235766
	push	edx
	mov	BYTE PTR __$EHRec$[esp+532], 30		; 0000001eH
	mov	DWORD PTR _kOpinion$235764[esp+604], ecx
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235764[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 31		; 0000001fH
	call	ebp
	lea	ecx, DWORD PTR $T276679[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 30		; 0000001eH
	call	esi

; 10015: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235764[esp+516]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10016: 	}

	lea	ecx, DWORD PTR _kOpinion$235764[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN85@lGetOpinio:

; 10017: 
; 10018: 	iValue = pDiploAI->GetLiberatedCitiesScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[esp+516]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[esp+520]
	call	?GetLiberatedCitiesScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetLiberatedCitiesScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10019: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN84@lGetOpinio

; 10020: 	{
; 10021: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235768[esp+516]
	call	ebx

; 10022: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[esp+516]

; 10023: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_CITIES_LIBERATED");

	lea	eax, DWORD PTR $T276680[esp+516]
	push	OFFSET $SG235770
	push	eax
	mov	BYTE PTR __$EHRec$[esp+532], 32		; 00000020H
	mov	DWORD PTR _kOpinion$235768[esp+604], edx
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235768[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 33		; 00000021H
	call	ebp
	lea	ecx, DWORD PTR $T276680[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 32		; 00000020H
	call	esi

; 10024: 		aOpinions.push_back(kOpinion);

	lea	ecx, DWORD PTR _kOpinion$235768[esp+516]
	push	ecx
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10025: 	}

	lea	ecx, DWORD PTR _kOpinion$235768[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN84@lGetOpinio:

; 10026: 
; 10027: 	iValue = pDiploAI->GetEmbassyScore(eWithPlayer);

	mov	edx, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	edx
	call	?GetEmbassyScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetEmbassyScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10028: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN83@lGetOpinio

; 10029: 	{
; 10030: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235772[esp+516]
	call	ebx

; 10031: 		kOpinion.m_iValue = iValue;

	mov	eax, DWORD PTR _iValue$[esp+516]

; 10032: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_HAS_EMBASSY");

	lea	ecx, DWORD PTR $T276681[esp+516]
	push	OFFSET $SG235774
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+532], 34		; 00000022H
	mov	DWORD PTR _kOpinion$235772[esp+604], eax
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235772[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 35		; 00000023H
	call	ebp
	lea	ecx, DWORD PTR $T276681[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 34		; 00000022H
	call	esi

; 10033: 		aOpinions.push_back(kOpinion);

	lea	edx, DWORD PTR _kOpinion$235772[esp+516]
	push	edx
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10034: 	}

	lea	ecx, DWORD PTR _kOpinion$235772[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN83@lGetOpinio:

; 10035: 
; 10036: 	iValue = pDiploAI->GetForgaveForSpyingScore(eWithPlayer);

	mov	eax, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	eax
	call	?GetForgaveForSpyingScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetForgaveForSpyingScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10037: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN82@lGetOpinio

; 10038: 	{
; 10039: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235776[esp+516]
	call	ebx

; 10040: 		kOpinion.m_iValue = iValue;

	mov	ecx, DWORD PTR _iValue$[esp+516]

; 10041: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_FORGAVE_FOR_SPYING");

	lea	edx, DWORD PTR $T276682[esp+516]
	push	OFFSET $SG235778
	push	edx
	mov	BYTE PTR __$EHRec$[esp+532], 36		; 00000024H
	mov	DWORD PTR _kOpinion$235776[esp+604], ecx
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235776[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 37		; 00000025H
	call	ebp
	lea	ecx, DWORD PTR $T276682[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 36		; 00000024H
	call	esi

; 10042: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235776[esp+516]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10043: 	}

	lea	ecx, DWORD PTR _kOpinion$235776[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN82@lGetOpinio:

; 10044: 	
; 10045: 	iValue = pDiploAI->GetNoSetterRequestScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[esp+516]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[esp+520]
	call	?GetNoSetterRequestScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetNoSetterRequestScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10046: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN81@lGetOpinio

; 10047: 	{
; 10048: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235780[esp+516]
	call	ebx

; 10049: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[esp+516]

; 10050: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_NO_SETTLE_ASKED");

	lea	eax, DWORD PTR $T276683[esp+516]
	push	OFFSET $SG235782
	push	eax
	mov	BYTE PTR __$EHRec$[esp+532], 38		; 00000026H
	mov	DWORD PTR _kOpinion$235780[esp+604], edx
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235780[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 39		; 00000027H
	call	ebp
	lea	ecx, DWORD PTR $T276683[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 38		; 00000026H
	call	esi

; 10051: 		aOpinions.push_back(kOpinion);

	lea	ecx, DWORD PTR _kOpinion$235780[esp+516]
	push	ecx
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10052: 	}

	lea	ecx, DWORD PTR _kOpinion$235780[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN81@lGetOpinio:

; 10053: 
; 10054: 	iValue = pDiploAI->GetStopSpyingRequestScore(eWithPlayer);

	mov	edx, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	edx
	call	?GetStopSpyingRequestScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetStopSpyingRequestScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10055: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN80@lGetOpinio

; 10056: 	{
; 10057: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235784[esp+516]
	call	ebx

; 10058: 		kOpinion.m_iValue = iValue;

	mov	eax, DWORD PTR _iValue$[esp+516]

; 10059: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_STOP_SPYING_ASKED");

	lea	ecx, DWORD PTR $T276684[esp+516]
	push	OFFSET $SG235786
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+532], 40		; 00000028H
	mov	DWORD PTR _kOpinion$235784[esp+604], eax
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235784[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 41		; 00000029H
	call	ebp
	lea	ecx, DWORD PTR $T276684[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 40		; 00000028H
	call	esi

; 10060: 		aOpinions.push_back(kOpinion);

	lea	edx, DWORD PTR _kOpinion$235784[esp+516]
	push	edx
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10061: 	}

	lea	ecx, DWORD PTR _kOpinion$235784[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN80@lGetOpinio:

; 10062: 
; 10063: 	iValue = pDiploAI->GetDemandEverMadeScore(eWithPlayer);

	mov	eax, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	eax
	call	?GetDemandEverMadeScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetDemandEverMadeScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10064: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN79@lGetOpinio

; 10065: 	{
; 10066: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235788[esp+516]
	call	ebx

; 10067: 		kOpinion.m_iValue = iValue;

	mov	ecx, DWORD PTR _iValue$[esp+516]

; 10068: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_TRADE_DEMAND");

	lea	edx, DWORD PTR $T276685[esp+516]
	push	OFFSET $SG235790
	push	edx
	mov	BYTE PTR __$EHRec$[esp+532], 42		; 0000002aH
	mov	DWORD PTR _kOpinion$235788[esp+604], ecx
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235788[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 43		; 0000002bH
	call	ebp
	lea	ecx, DWORD PTR $T276685[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 42		; 0000002aH
	call	esi

; 10069: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235788[esp+516]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10070: 	}

	lea	ecx, DWORD PTR _kOpinion$235788[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN79@lGetOpinio:

; 10071: 
; 10072: 	iValue = pDiploAI->GetTimesCultureBombedScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[esp+516]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[esp+520]
	call	?GetTimesCultureBombedScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetTimesCultureBombedScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10073: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN78@lGetOpinio

; 10074: 	{
; 10075: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235792[esp+516]
	call	ebx

; 10076: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[esp+516]

; 10077: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_CULTURE_BOMB");

	lea	eax, DWORD PTR $T276686[esp+516]
	push	OFFSET $SG235794
	push	eax
	mov	BYTE PTR __$EHRec$[esp+532], 44		; 0000002cH
	mov	DWORD PTR _kOpinion$235792[esp+604], edx
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235792[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 45		; 0000002dH
	call	ebp
	lea	ecx, DWORD PTR $T276686[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 44		; 0000002cH
	call	esi

; 10078: 		aOpinions.push_back(kOpinion);

	lea	ecx, DWORD PTR _kOpinion$235792[esp+516]
	push	ecx
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10079: 	}

	lea	ecx, DWORD PTR _kOpinion$235792[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN78@lGetOpinio:

; 10080: 
; 10081: 	iValue = pDiploAI->GetReligiousConversionPointsScore(eWithPlayer);

	mov	edx, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	edx
	call	?GetReligiousConversionPointsScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetReligiousConversionPointsScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10082: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN77@lGetOpinio

; 10083: 	{
; 10084: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235796[esp+516]
	call	ebx

; 10085: 		kOpinion.m_iValue = iValue;

	mov	eax, DWORD PTR _iValue$[esp+516]

; 10086: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_RELIGIOUS_CONVERSIONS");

	lea	ecx, DWORD PTR $T276687[esp+516]
	push	OFFSET $SG235798
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+532], 46		; 0000002eH
	mov	DWORD PTR _kOpinion$235796[esp+604], eax
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235796[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 47		; 0000002fH
	call	ebp
	lea	ecx, DWORD PTR $T276687[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 46		; 0000002eH
	call	esi

; 10087: 		aOpinions.push_back(kOpinion);

	lea	edx, DWORD PTR _kOpinion$235796[esp+516]
	push	edx
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10088: 	}

	lea	ecx, DWORD PTR _kOpinion$235796[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN77@lGetOpinio:

; 10089: 
; 10090: 	iValue = pDiploAI->GetHasAdoptedHisReligionScore(eWithPlayer);

	mov	eax, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	eax
	call	?GetHasAdoptedHisReligionScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetHasAdoptedHisReligionScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10091: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN76@lGetOpinio

; 10092: 	{
; 10093: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235800[esp+516]
	call	ebx

; 10094: 		kOpinion.m_iValue = iValue;

	mov	ecx, DWORD PTR _iValue$[esp+516]

; 10095: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_ADOPTING_MY_RELIGION");

	lea	edx, DWORD PTR $T276688[esp+516]
	push	OFFSET $SG235802
	push	edx
	mov	BYTE PTR __$EHRec$[esp+532], 48		; 00000030H
	mov	DWORD PTR _kOpinion$235800[esp+604], ecx
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235800[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 49		; 00000031H
	call	ebp
	lea	ecx, DWORD PTR $T276688[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 48		; 00000030H
	call	esi

; 10096: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235800[esp+516]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10097: 	}

	lea	ecx, DWORD PTR _kOpinion$235800[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN76@lGetOpinio:

; 10098: 
; 10099: 	iValue = pDiploAI->GetHasAdoptedMyReligionScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[esp+516]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[esp+520]
	call	?GetHasAdoptedMyReligionScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetHasAdoptedMyReligionScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10100: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN75@lGetOpinio

; 10101: 	{
; 10102: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235804[esp+516]
	call	ebx

; 10103: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[esp+516]

; 10104: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_ADOPTING_HIS_RELIGION");

	lea	eax, DWORD PTR $T276689[esp+516]
	push	OFFSET $SG235806
	push	eax
	mov	BYTE PTR __$EHRec$[esp+532], 50		; 00000032H
	mov	DWORD PTR _kOpinion$235804[esp+604], edx
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235804[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 51		; 00000033H
	call	ebp
	lea	ecx, DWORD PTR $T276689[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 50		; 00000032H
	call	esi

; 10105: 		aOpinions.push_back(kOpinion);

	lea	ecx, DWORD PTR _kOpinion$235804[esp+516]
	push	ecx
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10106: 	}

	lea	ecx, DWORD PTR _kOpinion$235804[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN75@lGetOpinio:

; 10107: 	
; 10108: 	iValue = pDiploAI->GetSameLatePoliciesScore(eWithPlayer);

	mov	edx, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	edx
	call	?GetSameLatePoliciesScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetSameLatePoliciesScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10109: 	if (iValue != 0)

	test	eax, eax
	je	$LN74@lGetOpinio

; 10110: 	{
; 10111: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235808[esp+516]
	call	ebx

; 10112: 		kOpinion.m_iValue = iValue;

	mov	eax, DWORD PTR _iValue$[esp+516]

; 10113: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_SAME_LATE_POLICY_TREES");

	lea	ecx, DWORD PTR $T276690[esp+516]
	push	OFFSET $SG235810
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+532], 52		; 00000034H
	mov	DWORD PTR _kOpinion$235808[esp+604], eax
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235808[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 53		; 00000035H
	call	ebp
	lea	ecx, DWORD PTR $T276690[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 52		; 00000034H
	call	esi

; 10114: 		PolicyBranchTypes eBranch = pkPlayer->GetPlayerPolicies()->GetLateGamePolicyTree();

	mov	ecx, DWORD PTR _pkInstance$276934[esp+516]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetLateGamePolicyTree@CvPlayerPolicies@@QBE?AW4PolicyBranchTypes@@XZ ; CvPlayerPolicies::GetLateGamePolicyTree

; 10115: 		kOpinion.m_str << GC.getPolicyBranchInfo(eBranch)->GetDescription();

	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getPolicyBranchInfo@CvGlobals@@QAEPAVCvPolicyBranchEntry@@W4PolicyBranchTypes@@@Z ; CvGlobals::getPolicyBranchInfo
	lea	ecx, DWORD PTR [eax+36]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235808[esp+520]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NPBD@Z

; 10116: 		aOpinions.push_back(kOpinion);

	lea	edx, DWORD PTR _kOpinion$235808[esp+516]
	push	edx
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10117: 	}

	lea	ecx, DWORD PTR _kOpinion$235808[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN74@lGetOpinio:

; 10118: 
; 10119: 	iValue = pDiploAI->GetDifferentLatePoliciesScore(eWithPlayer);

	mov	eax, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	eax
	call	?GetDifferentLatePoliciesScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetDifferentLatePoliciesScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10120: 	if (iValue != 0)

	test	eax, eax
	je	$LN73@lGetOpinio

; 10121: 	{
; 10122: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235814[esp+516]
	call	ebx

; 10123: 		kOpinion.m_iValue = iValue;

	mov	ecx, DWORD PTR _iValue$[esp+516]

; 10124: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_DIFFERENT_LATE_POLICY_TREES");

	lea	edx, DWORD PTR $T276692[esp+516]
	push	OFFSET $SG235816
	push	edx
	mov	BYTE PTR __$EHRec$[esp+532], 54		; 00000036H
	mov	DWORD PTR _kOpinion$235814[esp+604], ecx
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235814[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 55		; 00000037H
	call	ebp
	lea	ecx, DWORD PTR $T276692[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 54		; 00000036H
	call	esi

; 10125: 		PolicyBranchTypes eTheirBranch = pkPlayer->GetPlayerPolicies()->GetLateGamePolicyTree();

	mov	ecx, DWORD PTR _pkInstance$276934[esp+516]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetLateGamePolicyTree@CvPlayerPolicies@@QBE?AW4PolicyBranchTypes@@XZ ; CvPlayerPolicies::GetLateGamePolicyTree

; 10126: 		PolicyBranchTypes eMyBranch = GET_PLAYER(eWithPlayer).GetPlayerPolicies()->GetLateGamePolicyTree();

	mov	ecx, DWORD PTR tv3047[esp+516]
	mov	DWORD PTR _eTheirBranch$235817[esp+516], eax
	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	add	ecx, eax
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetLateGamePolicyTree@CvPlayerPolicies@@QBE?AW4PolicyBranchTypes@@XZ ; CvPlayerPolicies::GetLateGamePolicyTree

; 10127: 		kOpinion.m_str << GC.getPolicyBranchInfo(eMyBranch)->GetDescription();

	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getPolicyBranchInfo@CvGlobals@@QAEPAVCvPolicyBranchEntry@@W4PolicyBranchTypes@@@Z ; CvGlobals::getPolicyBranchInfo
	lea	ecx, DWORD PTR [eax+36]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235814[esp+520]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NPBD@Z

; 10128: 		kOpinion.m_str << GC.getPolicyBranchInfo(eTheirBranch)->GetDescription();

	mov	edx, DWORD PTR _eTheirBranch$235817[esp+516]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getPolicyBranchInfo@CvGlobals@@QAEPAVCvPolicyBranchEntry@@W4PolicyBranchTypes@@@Z ; CvGlobals::getPolicyBranchInfo
	lea	ecx, DWORD PTR [eax+36]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235814[esp+520]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NPBD@Z

; 10129: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235814[esp+516]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10130: 	}

	lea	ecx, DWORD PTR _kOpinion$235814[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN73@lGetOpinio:

; 10131: 
; 10132: 	iValue = pDiploAI->GetTimesRobbedScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[esp+516]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[esp+520]
	call	?GetTimesRobbedScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetTimesRobbedScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10133: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN72@lGetOpinio

; 10134: 	{
; 10135: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235822[esp+516]
	call	ebx

; 10136: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[esp+516]

; 10137: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_CAUGHT_STEALING");

	lea	eax, DWORD PTR $T276695[esp+516]
	push	OFFSET $SG235824
	push	eax
	mov	BYTE PTR __$EHRec$[esp+532], 56		; 00000038H
	mov	DWORD PTR _kOpinion$235822[esp+604], edx
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235822[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 57		; 00000039H
	call	ebp
	lea	ecx, DWORD PTR $T276695[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 56		; 00000038H
	call	esi

; 10138: 		aOpinions.push_back(kOpinion);

	lea	ecx, DWORD PTR _kOpinion$235822[esp+516]
	push	ecx
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10139: 	}

	lea	ecx, DWORD PTR _kOpinion$235822[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN72@lGetOpinio:

; 10140: 
; 10141: 	iValue = pDiploAI->GetTimesIntrigueSharedScore(eWithPlayer);

	mov	edx, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	edx
	call	?GetTimesIntrigueSharedScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetTimesIntrigueSharedScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10142: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN71@lGetOpinio

; 10143: 	{
; 10144: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235826[esp+516]
	call	ebx

; 10145: 		kOpinion.m_iValue = iValue;

	mov	eax, DWORD PTR _iValue$[esp+516]

; 10146: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_SHARED_INTRIGUE");

	lea	ecx, DWORD PTR $T276696[esp+516]
	push	OFFSET $SG235828
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+532], 58		; 0000003aH
	mov	DWORD PTR _kOpinion$235826[esp+604], eax
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235826[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 59		; 0000003bH
	call	ebp
	lea	ecx, DWORD PTR $T276696[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 58		; 0000003aH
	call	esi

; 10147: 		aOpinions.push_back(kOpinion);

	lea	edx, DWORD PTR _kOpinion$235826[esp+516]
	push	edx
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10148: 	}

	lea	ecx, DWORD PTR _kOpinion$235826[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN71@lGetOpinio:

; 10149: 
; 10150: 	iValue = pDiploAI->GetBrokenMilitaryPromiseScore(eWithPlayer);

	mov	eax, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	eax
	call	?GetBrokenMilitaryPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetBrokenMilitaryPromiseScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10151: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN70@lGetOpinio

; 10152: 	{
; 10153: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235830[esp+516]
	call	ebx

; 10154: 		kOpinion.m_iValue = iValue;

	mov	ecx, DWORD PTR _iValue$[esp+516]

; 10155: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_MILITARY_PROMISE");

	lea	edx, DWORD PTR $T276697[esp+516]
	push	OFFSET $SG235832
	push	edx
	mov	BYTE PTR __$EHRec$[esp+532], 60		; 0000003cH
	mov	DWORD PTR _kOpinion$235830[esp+604], ecx
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235830[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 61		; 0000003dH
	call	ebp
	lea	ecx, DWORD PTR $T276697[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 60		; 0000003cH
	call	esi

; 10156: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235830[esp+516]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10157: 	}

	lea	ecx, DWORD PTR _kOpinion$235830[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN70@lGetOpinio:

; 10158: 
; 10159: 	iValue = pDiploAI->GetBrokenMilitaryPromiseWithAnybodyScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[esp+516]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[esp+520]
	call	?GetBrokenMilitaryPromiseWithAnybodyScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetBrokenMilitaryPromiseWithAnybodyScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10160: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN69@lGetOpinio

; 10161: 	{
; 10162: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235834[esp+516]
	call	ebx

; 10163: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[esp+516]

; 10164: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_MILITARY_PROMISE_BROKEN_WITH_OTHERS");

	lea	eax, DWORD PTR $T276698[esp+516]
	push	OFFSET $SG235836
	push	eax
	mov	BYTE PTR __$EHRec$[esp+532], 62		; 0000003eH
	mov	DWORD PTR _kOpinion$235834[esp+604], edx
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235834[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 63		; 0000003fH
	call	ebp
	lea	ecx, DWORD PTR $T276698[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 62		; 0000003eH
	call	esi

; 10165: 		aOpinions.push_back(kOpinion);

	lea	ecx, DWORD PTR _kOpinion$235834[esp+516]
	push	ecx
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10166: 	}

	lea	ecx, DWORD PTR _kOpinion$235834[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN69@lGetOpinio:

; 10167: 
; 10168: 	iValue = pDiploAI->GetIgnoredMilitaryPromiseScore(eWithPlayer);

	mov	edx, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	edx
	call	?GetIgnoredMilitaryPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetIgnoredMilitaryPromiseScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10169: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN68@lGetOpinio

; 10170: 	{
; 10171: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235838[esp+516]
	call	ebx

; 10172: 		kOpinion.m_iValue = iValue;

	mov	eax, DWORD PTR _iValue$[esp+516]

; 10173: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_MILITARY_PROMISE_IGNORED");

	lea	ecx, DWORD PTR $T276699[esp+516]
	push	OFFSET $SG235840
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+532], 64		; 00000040H
	mov	DWORD PTR _kOpinion$235838[esp+604], eax
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235838[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 65		; 00000041H
	call	ebp
	lea	ecx, DWORD PTR $T276699[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 64		; 00000040H
	call	esi

; 10174: 		aOpinions.push_back(kOpinion);

	lea	edx, DWORD PTR _kOpinion$235838[esp+516]
	push	edx
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10175: 	}

	lea	ecx, DWORD PTR _kOpinion$235838[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN68@lGetOpinio:

; 10176: 	
; 10177: 	iValue = pDiploAI->GetBrokenExpansionPromiseScore(eWithPlayer);

	mov	eax, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	eax
	call	?GetBrokenExpansionPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetBrokenExpansionPromiseScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10178: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN67@lGetOpinio

; 10179: 	{
; 10180: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235842[esp+516]
	call	ebx

; 10181: 		kOpinion.m_iValue = iValue;

	mov	ecx, DWORD PTR _iValue$[esp+516]

; 10182: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_EXPANSION_PROMISE");

	lea	edx, DWORD PTR $T276700[esp+516]
	push	OFFSET $SG235844
	push	edx
	mov	BYTE PTR __$EHRec$[esp+532], 66		; 00000042H
	mov	DWORD PTR _kOpinion$235842[esp+604], ecx
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235842[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 67		; 00000043H
	call	ebp
	lea	ecx, DWORD PTR $T276700[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 66		; 00000042H
	call	esi

; 10183: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235842[esp+516]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10184: 	}

	lea	ecx, DWORD PTR _kOpinion$235842[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN67@lGetOpinio:

; 10185: 
; 10186: 	iValue = pDiploAI->GetIgnoredExpansionPromiseScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[esp+516]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[esp+520]
	call	?GetIgnoredExpansionPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetIgnoredExpansionPromiseScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10187: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN66@lGetOpinio

; 10188: 	{
; 10189: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235846[esp+516]
	call	ebx

; 10190: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[esp+516]

; 10191: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_EXPANSION_PROMISE_IGNORED");

	lea	eax, DWORD PTR $T276701[esp+516]
	push	OFFSET $SG235848
	push	eax
	mov	BYTE PTR __$EHRec$[esp+532], 68		; 00000044H
	mov	DWORD PTR _kOpinion$235846[esp+604], edx
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235846[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 69		; 00000045H
	call	ebp
	lea	ecx, DWORD PTR $T276701[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 68		; 00000044H
	call	esi

; 10192: 		aOpinions.push_back(kOpinion);

	lea	ecx, DWORD PTR _kOpinion$235846[esp+516]
	push	ecx
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10193: 	}

	lea	ecx, DWORD PTR _kOpinion$235846[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN66@lGetOpinio:

; 10194: 
; 10195: 	iValue = pDiploAI->GetBrokenBorderPromiseScore(eWithPlayer);

	mov	edx, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	edx
	call	?GetBrokenBorderPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetBrokenBorderPromiseScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10196: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN65@lGetOpinio

; 10197: 	{
; 10198: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235850[esp+516]
	call	ebx

; 10199: 		kOpinion.m_iValue = iValue;

	mov	eax, DWORD PTR _iValue$[esp+516]

; 10200: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_BORDER_PROMISE");

	lea	ecx, DWORD PTR $T276702[esp+516]
	push	OFFSET $SG235852
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+532], 70		; 00000046H
	mov	DWORD PTR _kOpinion$235850[esp+604], eax
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235850[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 71		; 00000047H
	call	ebp
	lea	ecx, DWORD PTR $T276702[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 70		; 00000046H
	call	esi

; 10201: 		aOpinions.push_back(kOpinion);

	lea	edx, DWORD PTR _kOpinion$235850[esp+516]
	push	edx
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10202: 	}

	lea	ecx, DWORD PTR _kOpinion$235850[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN65@lGetOpinio:

; 10203: 
; 10204: 	iValue = pDiploAI->GetIgnoredBorderPromiseScore(eWithPlayer);

	mov	eax, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	eax
	call	?GetIgnoredBorderPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetIgnoredBorderPromiseScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10205: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN64@lGetOpinio

; 10206: 	{
; 10207: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235854[esp+516]
	call	ebx

; 10208: 		kOpinion.m_iValue = iValue;

	mov	ecx, DWORD PTR _iValue$[esp+516]

; 10209: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_BORDER_PROMISE_IGNORED");

	lea	edx, DWORD PTR $T276703[esp+516]
	push	OFFSET $SG235856
	push	edx
	mov	BYTE PTR __$EHRec$[esp+532], 72		; 00000048H
	mov	DWORD PTR _kOpinion$235854[esp+604], ecx
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235854[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 73		; 00000049H
	call	ebp
	lea	ecx, DWORD PTR $T276703[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 72		; 00000048H
	call	esi

; 10210: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235854[esp+516]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10211: 	}

	lea	ecx, DWORD PTR _kOpinion$235854[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN64@lGetOpinio:

; 10212: 
; 10213: 	iValue = pDiploAI->GetBrokenAttackCityStatePromiseScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[esp+516]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[esp+520]
	call	?GetBrokenAttackCityStatePromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetBrokenAttackCityStatePromiseScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10214: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN63@lGetOpinio

; 10215: 	{
; 10216: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235858[esp+516]
	call	ebx

; 10217: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[esp+516]

; 10218: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_CITY_STATE_PROMISE");

	lea	eax, DWORD PTR $T276704[esp+516]
	push	OFFSET $SG235860
	push	eax
	mov	BYTE PTR __$EHRec$[esp+532], 74		; 0000004aH
	mov	DWORD PTR _kOpinion$235858[esp+604], edx
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235858[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 75		; 0000004bH
	call	ebp
	lea	ecx, DWORD PTR $T276704[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 74		; 0000004aH
	call	esi

; 10219: 		aOpinions.push_back(kOpinion);

	lea	ecx, DWORD PTR _kOpinion$235858[esp+516]
	push	ecx
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10220: 	}

	lea	ecx, DWORD PTR _kOpinion$235858[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN63@lGetOpinio:

; 10221: 
; 10222: 	iValue = pDiploAI->GetBrokenAttackCityStatePromiseWithAnybodyScore(eWithPlayer);

	mov	edx, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	edx
	call	?GetBrokenAttackCityStatePromiseWithAnybodyScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetBrokenAttackCityStatePromiseWithAnybodyScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10223: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN62@lGetOpinio

; 10224: 	{
; 10225: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235862[esp+516]
	call	ebx

; 10226: 		kOpinion.m_iValue = iValue;

	mov	eax, DWORD PTR _iValue$[esp+516]

; 10227: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_CITY_STATE_PROMISE_BROKEN_WITH_OTHERS");

	lea	ecx, DWORD PTR $T276705[esp+516]
	push	OFFSET $SG235864
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+532], 76		; 0000004cH
	mov	DWORD PTR _kOpinion$235862[esp+604], eax
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235862[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 77		; 0000004dH
	call	ebp
	lea	ecx, DWORD PTR $T276705[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 76		; 0000004cH
	call	esi

; 10228: 		aOpinions.push_back(kOpinion);

	lea	edx, DWORD PTR _kOpinion$235862[esp+516]
	push	edx
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10229: 	}

	lea	ecx, DWORD PTR _kOpinion$235862[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN62@lGetOpinio:

; 10230: 
; 10231: 	iValue = pDiploAI->GetIgnoredAttackCityStatePromiseScore(eWithPlayer);

	mov	eax, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	eax
	call	?GetIgnoredAttackCityStatePromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetIgnoredAttackCityStatePromiseScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10232: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN61@lGetOpinio

; 10233: 	{
; 10234: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235866[esp+516]
	call	ebx

; 10235: 		kOpinion.m_iValue = iValue;

	mov	ecx, DWORD PTR _iValue$[esp+516]

; 10236: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_CITY_STATE_PROMISE_IGNORED");

	lea	edx, DWORD PTR $T276706[esp+516]
	push	OFFSET $SG235868
	push	edx
	mov	BYTE PTR __$EHRec$[esp+532], 78		; 0000004eH
	mov	DWORD PTR _kOpinion$235866[esp+604], ecx
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235866[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 79		; 0000004fH
	call	ebp
	lea	ecx, DWORD PTR $T276706[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 78		; 0000004eH
	call	esi

; 10237: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235866[esp+516]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10238: 	}

	lea	ecx, DWORD PTR _kOpinion$235866[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN61@lGetOpinio:

; 10239: 	
; 10240: 	iValue = pDiploAI->GetBrokenBullyCityStatePromiseScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[esp+516]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[esp+520]
	call	?GetBrokenBullyCityStatePromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetBrokenBullyCityStatePromiseScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10241: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN60@lGetOpinio

; 10242: 	{
; 10243: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235870[esp+516]
	call	ebx

; 10244: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[esp+516]

; 10245: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_BULLY_CITY_STATE_PROMISE_BROKEN");

	lea	eax, DWORD PTR $T276707[esp+516]
	push	OFFSET $SG235872
	push	eax
	mov	BYTE PTR __$EHRec$[esp+532], 80		; 00000050H
	mov	DWORD PTR _kOpinion$235870[esp+604], edx
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235870[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 81		; 00000051H
	call	ebp
	lea	ecx, DWORD PTR $T276707[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 80		; 00000050H
	call	esi

; 10246: 		aOpinions.push_back(kOpinion);

	lea	ecx, DWORD PTR _kOpinion$235870[esp+516]
	push	ecx
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10247: 	}

	lea	ecx, DWORD PTR _kOpinion$235870[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN60@lGetOpinio:

; 10248: 
; 10249: 	iValue = pDiploAI->GetIgnoredBullyCityStatePromiseScore(eWithPlayer);

	mov	edx, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	edx
	call	?GetIgnoredBullyCityStatePromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetIgnoredBullyCityStatePromiseScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10250: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN59@lGetOpinio

; 10251: 	{
; 10252: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235874[esp+516]
	call	ebx

; 10253: 		kOpinion.m_iValue = iValue;

	mov	eax, DWORD PTR _iValue$[esp+516]

; 10254: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_BULLY_CITY_STATE_PROMISE_IGNORED");

	lea	ecx, DWORD PTR $T276708[esp+516]
	push	OFFSET $SG235876
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+532], 82		; 00000052H
	mov	DWORD PTR _kOpinion$235874[esp+604], eax
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235874[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 83		; 00000053H
	call	ebp
	lea	ecx, DWORD PTR $T276708[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 82		; 00000052H
	call	esi

; 10255: 		aOpinions.push_back(kOpinion);

	lea	edx, DWORD PTR _kOpinion$235874[esp+516]
	push	edx
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10256: 	}

	lea	ecx, DWORD PTR _kOpinion$235874[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN59@lGetOpinio:

; 10257: 
; 10258: 	iValue = pDiploAI->GetBrokenNoConvertPromiseScore(eWithPlayer);

	mov	eax, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	eax
	call	?GetBrokenNoConvertPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetBrokenNoConvertPromiseScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10259: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN58@lGetOpinio

; 10260: 	{
; 10261: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235878[esp+516]
	call	ebx

; 10262: 		kOpinion.m_iValue = iValue;

	mov	ecx, DWORD PTR _iValue$[esp+516]

; 10263: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_NO_CONVERT_PROMISE_BROKEN");

	lea	edx, DWORD PTR $T276709[esp+516]
	push	OFFSET $SG235880
	push	edx
	mov	BYTE PTR __$EHRec$[esp+532], 84		; 00000054H
	mov	DWORD PTR _kOpinion$235878[esp+604], ecx
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235878[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 85		; 00000055H
	call	ebp
	lea	ecx, DWORD PTR $T276709[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 84		; 00000054H
	call	esi

; 10264: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235878[esp+516]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10265: 	}

	lea	ecx, DWORD PTR _kOpinion$235878[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN58@lGetOpinio:

; 10266: 
; 10267: 	iValue = pDiploAI->GetIgnoredNoConvertPromiseScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[esp+516]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[esp+520]
	call	?GetIgnoredNoConvertPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetIgnoredNoConvertPromiseScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10268: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN57@lGetOpinio

; 10269: 	{
; 10270: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235882[esp+516]
	call	ebx

; 10271: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[esp+516]

; 10272: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_NO_CONVERT_PROMISE_IGNORED");

	lea	eax, DWORD PTR $T276710[esp+516]
	push	OFFSET $SG235884
	push	eax
	mov	BYTE PTR __$EHRec$[esp+532], 86		; 00000056H
	mov	DWORD PTR _kOpinion$235882[esp+604], edx
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235882[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 87		; 00000057H
	call	ebp
	lea	ecx, DWORD PTR $T276710[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 86		; 00000056H
	call	esi

; 10273: 		aOpinions.push_back(kOpinion);

	lea	ecx, DWORD PTR _kOpinion$235882[esp+516]
	push	ecx
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10274: 	}

	lea	ecx, DWORD PTR _kOpinion$235882[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN57@lGetOpinio:

; 10275: 
; 10276: 	iValue = pDiploAI->GetBrokenNoDiggingPromiseScore(eWithPlayer);

	mov	edx, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	edx
	call	?GetBrokenNoDiggingPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetBrokenNoDiggingPromiseScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10277: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN56@lGetOpinio

; 10278: 	{
; 10279: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235886[esp+516]
	call	ebx

; 10280: 		kOpinion.m_iValue = iValue;

	mov	eax, DWORD PTR _iValue$[esp+516]

; 10281: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_NO_DIG_PROMISE_BROKEN");

	lea	ecx, DWORD PTR $T276711[esp+516]
	push	OFFSET $SG235888
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+532], 88		; 00000058H
	mov	DWORD PTR _kOpinion$235886[esp+604], eax
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235886[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 89		; 00000059H
	call	ebp
	lea	ecx, DWORD PTR $T276711[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 88		; 00000058H
	call	esi

; 10282: 		aOpinions.push_back(kOpinion);

	lea	edx, DWORD PTR _kOpinion$235886[esp+516]
	push	edx
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10283: 	}

	lea	ecx, DWORD PTR _kOpinion$235886[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN56@lGetOpinio:

; 10284: 
; 10285: 	iValue = pDiploAI->GetIgnoredNoDiggingPromiseScore(eWithPlayer);

	mov	eax, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	eax
	call	?GetIgnoredNoDiggingPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetIgnoredNoDiggingPromiseScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10286: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN55@lGetOpinio

; 10287: 	{
; 10288: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235890[esp+516]
	call	ebx

; 10289: 		kOpinion.m_iValue = iValue;

	mov	ecx, DWORD PTR _iValue$[esp+516]

; 10290: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_NO_DIG_PROMISE_IGNORED");

	lea	edx, DWORD PTR $T276712[esp+516]
	push	OFFSET $SG235892
	push	edx
	mov	BYTE PTR __$EHRec$[esp+532], 90		; 0000005aH
	mov	DWORD PTR _kOpinion$235890[esp+604], ecx
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235890[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 91		; 0000005bH
	call	ebp
	lea	ecx, DWORD PTR $T276712[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 90		; 0000005aH
	call	esi

; 10291: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235890[esp+516]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10292: 	}

	lea	ecx, DWORD PTR _kOpinion$235890[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN55@lGetOpinio:

; 10293: 
; 10294: 	iValue = pDiploAI->GetBrokenSpyPromiseScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[esp+516]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[esp+520]
	call	?GetBrokenSpyPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetBrokenSpyPromiseScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10295: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN54@lGetOpinio

; 10296: 	{
; 10297: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235894[esp+516]
	call	ebx

; 10298: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[esp+516]

; 10299: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_SPY_PROMISE_BROKEN");

	lea	eax, DWORD PTR $T276713[esp+516]
	push	OFFSET $SG235896
	push	eax
	mov	BYTE PTR __$EHRec$[esp+532], 92		; 0000005cH
	mov	DWORD PTR _kOpinion$235894[esp+604], edx
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235894[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 93		; 0000005dH
	call	ebp
	lea	ecx, DWORD PTR $T276713[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 92		; 0000005cH
	call	esi

; 10300: 		aOpinions.push_back(kOpinion);

	lea	ecx, DWORD PTR _kOpinion$235894[esp+516]
	push	ecx
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10301: 	}

	lea	ecx, DWORD PTR _kOpinion$235894[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN54@lGetOpinio:

; 10302: 
; 10303: 	iValue = pDiploAI->GetIgnoredSpyPromiseScore(eWithPlayer);

	mov	edx, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	edx
	call	?GetIgnoredSpyPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetIgnoredSpyPromiseScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10304: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN53@lGetOpinio

; 10305: 	{
; 10306: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235898[esp+516]
	call	ebx

; 10307: 		kOpinion.m_iValue = iValue;

	mov	eax, DWORD PTR _iValue$[esp+516]

; 10308: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_SPY_PROMISE_IGNORED");

	lea	ecx, DWORD PTR $T276714[esp+516]
	push	OFFSET $SG235900
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+532], 94		; 0000005eH
	mov	DWORD PTR _kOpinion$235898[esp+604], eax
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235898[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 95		; 0000005fH
	call	ebp
	lea	ecx, DWORD PTR $T276714[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 94		; 0000005eH
	call	esi

; 10309: 		aOpinions.push_back(kOpinion);

	lea	edx, DWORD PTR _kOpinion$235898[esp+516]
	push	edx
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10310: 	}

	lea	ecx, DWORD PTR _kOpinion$235898[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN53@lGetOpinio:

; 10311: 
; 10312: 	iValue = pDiploAI->GetBrokenCoopWarPromiseScore(eWithPlayer);

	mov	eax, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	eax
	call	?GetBrokenCoopWarPromiseScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetBrokenCoopWarPromiseScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10313: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN52@lGetOpinio

; 10314: 	{
; 10315: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235902[esp+516]
	call	ebx

; 10316: 		kOpinion.m_iValue = iValue;

	mov	ecx, DWORD PTR _iValue$[esp+516]

; 10317: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_COOP_WAR_PROMISE");

	lea	edx, DWORD PTR $T276715[esp+516]
	push	OFFSET $SG235904
	push	edx
	mov	BYTE PTR __$EHRec$[esp+532], 96		; 00000060H
	mov	DWORD PTR _kOpinion$235902[esp+604], ecx
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235902[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 97		; 00000061H
	call	ebp
	lea	ecx, DWORD PTR $T276715[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 96		; 00000060H
	call	esi

; 10318: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235902[esp+516]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10319: 	}

	lea	ecx, DWORD PTR _kOpinion$235902[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN52@lGetOpinio:

; 10320: 
; 10321: 	iValue = pDiploAI->GetAngryAboutProtectedMinorKilledScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[esp+516]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[esp+520]
	call	?GetAngryAboutProtectedMinorKilledScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetAngryAboutProtectedMinorKilledScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10322: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN51@lGetOpinio

; 10323: 	{
; 10324: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235906[esp+516]
	call	ebx

; 10325: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[esp+516]

; 10326: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_PROTECTED_MINORS_KILLED");

	lea	eax, DWORD PTR $T276716[esp+516]
	push	OFFSET $SG235908
	push	eax
	mov	BYTE PTR __$EHRec$[esp+532], 98		; 00000062H
	mov	DWORD PTR _kOpinion$235906[esp+604], edx
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235906[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 99		; 00000063H
	call	ebp
	lea	ecx, DWORD PTR $T276716[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 98		; 00000062H
	call	esi

; 10327: 		aOpinions.push_back(kOpinion);

	lea	ecx, DWORD PTR _kOpinion$235906[esp+516]
	push	ecx
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10328: 	}

	lea	ecx, DWORD PTR _kOpinion$235906[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN51@lGetOpinio:

; 10329: 
; 10330: 	iValue = pDiploAI->GetAngryAboutProtectedMinorAttackedScore(eWithPlayer);

	mov	edx, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	edx
	call	?GetAngryAboutProtectedMinorAttackedScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetAngryAboutProtectedMinorAttackedScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10331: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN50@lGetOpinio

; 10332: 	{
; 10333: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235910[esp+516]
	call	ebx

; 10334: 		kOpinion.m_iValue = iValue;

	mov	eax, DWORD PTR _iValue$[esp+516]

; 10335: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_PROTECTED_MINORS_ATTACKED");

	lea	ecx, DWORD PTR $T276717[esp+516]
	push	OFFSET $SG235912
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+532], 100	; 00000064H
	mov	DWORD PTR _kOpinion$235910[esp+604], eax
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235910[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 101	; 00000065H
	call	ebp
	lea	ecx, DWORD PTR $T276717[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 100	; 00000064H
	call	esi

; 10336: 		aOpinions.push_back(kOpinion);

	lea	edx, DWORD PTR _kOpinion$235910[esp+516]
	push	edx
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10337: 	}

	lea	ecx, DWORD PTR _kOpinion$235910[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN50@lGetOpinio:

; 10338: 
; 10339: 	iValue = pDiploAI->GetAngryAboutProtectedMinorBulliedScore(eWithPlayer);

	mov	eax, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	eax
	call	?GetAngryAboutProtectedMinorBulliedScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetAngryAboutProtectedMinorBulliedScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10340: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN49@lGetOpinio

; 10341: 	{
; 10342: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235914[esp+516]
	call	ebx

; 10343: 		kOpinion.m_iValue = iValue;

	mov	ecx, DWORD PTR _iValue$[esp+516]

; 10344: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_PROTECTED_MINORS_BULLIED");

	lea	edx, DWORD PTR $T276718[esp+516]
	push	OFFSET $SG235916
	push	edx
	mov	BYTE PTR __$EHRec$[esp+532], 102	; 00000066H
	mov	DWORD PTR _kOpinion$235914[esp+604], ecx
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235914[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 103	; 00000067H
	call	ebp
	lea	ecx, DWORD PTR $T276718[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 102	; 00000066H
	call	esi

; 10345: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235914[esp+516]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10346: 	}

	lea	ecx, DWORD PTR _kOpinion$235914[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN49@lGetOpinio:

; 10347: 
; 10348: 	iValue = pDiploAI->GetAngryAboutSidedWithProtectedMinorScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[esp+516]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[esp+520]
	call	?GetAngryAboutSidedWithProtectedMinorScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetAngryAboutSidedWithProtectedMinorScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10349: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN48@lGetOpinio

; 10350: 	{
; 10351: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235918[esp+516]
	call	ebx

; 10352: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[esp+516]

; 10353: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_SIDED_WITH_MINOR");

	lea	eax, DWORD PTR $T276719[esp+516]
	push	OFFSET $SG235920
	push	eax
	mov	BYTE PTR __$EHRec$[esp+532], 104	; 00000068H
	mov	DWORD PTR _kOpinion$235918[esp+604], edx
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235918[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 105	; 00000069H
	call	ebp
	lea	ecx, DWORD PTR $T276719[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 104	; 00000068H
	call	esi

; 10354: 		aOpinions.push_back(kOpinion);

	lea	ecx, DWORD PTR _kOpinion$235918[esp+516]
	push	ecx
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10355: 	}

	lea	ecx, DWORD PTR _kOpinion$235918[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN48@lGetOpinio:

; 10356: 
; 10357: 	iValue = pDiploAI->GetDOFAcceptedScore(eWithPlayer);

	mov	edx, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	edx
	call	?GetDOFAcceptedScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetDOFAcceptedScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10358: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN47@lGetOpinio

; 10359: 	{
; 10360: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235922[esp+516]
	call	ebx

; 10361: 		kOpinion.m_iValue = iValue;

	mov	eax, DWORD PTR _iValue$[esp+516]

; 10362: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_DOF");

	lea	ecx, DWORD PTR $T276720[esp+516]
	push	OFFSET $SG235924
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+532], 106	; 0000006aH
	mov	DWORD PTR _kOpinion$235922[esp+604], eax
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235922[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 107	; 0000006bH
	call	ebp
	lea	ecx, DWORD PTR $T276720[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 106	; 0000006aH
	call	esi

; 10363: 		aOpinions.push_back(kOpinion);

	lea	edx, DWORD PTR _kOpinion$235922[esp+516]
	push	edx
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10364: 	}

	lea	ecx, DWORD PTR _kOpinion$235922[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN47@lGetOpinio:

; 10365: 
; 10366: 	iValue = pDiploAI->GetDOFWithAnyFriendScore(eWithPlayer);

	mov	eax, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	eax
	call	?GetDOFWithAnyFriendScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetDOFWithAnyFriendScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10367: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN46@lGetOpinio

; 10368: 	{
; 10369: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235926[esp+516]
	call	ebx

; 10370: 		kOpinion.m_iValue = iValue;

	mov	ecx, DWORD PTR _iValue$[esp+516]

; 10371: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_MUTUAL_DOF");

	lea	edx, DWORD PTR $T276721[esp+516]
	push	OFFSET $SG235928
	push	edx
	mov	BYTE PTR __$EHRec$[esp+532], 108	; 0000006cH
	mov	DWORD PTR _kOpinion$235926[esp+604], ecx
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235926[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 109	; 0000006dH
	call	ebp
	lea	ecx, DWORD PTR $T276721[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 108	; 0000006cH
	call	esi

; 10372: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235926[esp+516]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10373: 	}

	lea	ecx, DWORD PTR _kOpinion$235926[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN46@lGetOpinio:

; 10374: 
; 10375: 	iValue = pDiploAI->GetDOFWithAnyEnemyScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[esp+516]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[esp+520]
	call	?GetDOFWithAnyEnemyScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetDOFWithAnyEnemyScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10376: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN45@lGetOpinio

; 10377: 	{
; 10378: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235930[esp+516]
	call	ebx

; 10379: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[esp+516]

; 10380: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_HUMAN_DOF_WITH_ENEMY");

	lea	eax, DWORD PTR $T276722[esp+516]
	push	OFFSET $SG235932
	push	eax
	mov	BYTE PTR __$EHRec$[esp+532], 110	; 0000006eH
	mov	DWORD PTR _kOpinion$235930[esp+604], edx
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235930[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 111	; 0000006fH
	call	ebp
	lea	ecx, DWORD PTR $T276722[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 110	; 0000006eH
	call	esi

; 10381: 		aOpinions.push_back(kOpinion);

	lea	ecx, DWORD PTR _kOpinion$235930[esp+516]
	push	ecx
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10382: 	}

	lea	ecx, DWORD PTR _kOpinion$235930[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN45@lGetOpinio:

; 10383: 
; 10384: 	// TRAITOR BEGIN
; 10385: 	{
; 10386: 		iValue = 0;
; 10387: 		Localization::String str;

	lea	ecx, DWORD PTR _str$235933[esp+516]
	mov	DWORD PTR _iValue$[esp+516], 0
	call	ebx

; 10388: 		int iTempValue;
; 10389: 
; 10390: 		iTempValue = pDiploAI->GetFriendDenouncementScore(eWithPlayer);

	mov	edx, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	edx
	mov	BYTE PTR __$EHRec$[esp+528], 112	; 00000070H
	call	?GetFriendDenouncementScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetFriendDenouncementScore

; 10391: 		if (iTempValue > iValue)

	test	eax, eax
	jle	SHORT $LN44@lGetOpinio

; 10392: 		{
; 10393: 			iValue = iTempValue;

	mov	DWORD PTR _iValue$[esp+516], eax

; 10394: 			str = Localization::Lookup("TXT_KEY_DIPLO_DENOUNCED_BY_PEOPLE_WE_TRUST_MORE");

	lea	eax, DWORD PTR $T276723[esp+516]
	push	OFFSET $SG235937
	push	eax
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _str$235933[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 113	; 00000071H
	call	ebp
	lea	ecx, DWORD PTR $T276723[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 112	; 00000070H
	call	esi
$LN44@lGetOpinio:

; 10395: 		}
; 10396: 
; 10397: 		iTempValue = pDiploAI->GetWeDenouncedFriendScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[esp+516]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[esp+520]
	call	?GetWeDenouncedFriendScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetWeDenouncedFriendScore

; 10398: 		if (iTempValue > iValue)

	cmp	eax, DWORD PTR _iValue$[esp+516]
	jle	SHORT $LN43@lGetOpinio

; 10399: 		{
; 10400: 			iValue = iTempValue;
; 10401: 			str = Localization::Lookup("TXT_KEY_DIPLO_HUMAN_DENOUNCED_FRIENDS");

	lea	edx, DWORD PTR $T276724[esp+516]
	push	OFFSET $SG235940
	push	edx
	mov	DWORD PTR _iValue$[esp+524], eax
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _str$235933[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 114	; 00000072H
	call	ebp
	lea	ecx, DWORD PTR $T276724[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 112	; 00000070H
	call	esi
$LN43@lGetOpinio:

; 10402: 		}
; 10403: 
; 10404: 		iTempValue = pDiploAI->GetFriendDenouncedUsScore(eWithPlayer);

	mov	eax, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	eax
	call	?GetFriendDenouncedUsScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetFriendDenouncedUsScore

; 10405: 		if (iTempValue > iValue)

	cmp	eax, DWORD PTR _iValue$[esp+516]
	jle	SHORT $LN42@lGetOpinio

; 10406: 		{
; 10407: 			iValue = iTempValue;
; 10408: 			str = Localization::Lookup("TXT_KEY_DIPLO_HUMAN_FRIEND_DENOUNCED");

	lea	ecx, DWORD PTR $T276725[esp+516]
	push	OFFSET $SG235943
	push	ecx
	mov	DWORD PTR _iValue$[esp+524], eax
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _str$235933[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 115	; 00000073H
	call	ebp
	lea	ecx, DWORD PTR $T276725[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 112	; 00000070H
	call	esi
$LN42@lGetOpinio:

; 10409: 		}
; 10410: 
; 10411: 		iTempValue = pDiploAI->GetWeDeclaredWarOnFriendScore(eWithPlayer);

	mov	edx, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	edx
	call	?GetWeDeclaredWarOnFriendScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetWeDeclaredWarOnFriendScore

; 10412: 		if (iTempValue > iValue)

	cmp	eax, DWORD PTR _iValue$[esp+516]
	jle	SHORT $LN41@lGetOpinio

; 10413: 		{
; 10414: 			iValue = iTempValue;

	mov	DWORD PTR _iValue$[esp+516], eax

; 10415: 			str = Localization::Lookup("TXT_KEY_DIPLO_HUMAN_DECLARED_WAR_ON_FRIENDS");

	lea	eax, DWORD PTR $T276726[esp+516]
	push	OFFSET $SG235946
	push	eax
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _str$235933[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 116	; 00000074H
	call	ebp
	lea	ecx, DWORD PTR $T276726[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 112	; 00000070H
	call	esi
$LN41@lGetOpinio:

; 10416: 		}
; 10417: 
; 10418: 		iTempValue = pDiploAI->GetFriendDeclaredWarOnUsScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[esp+516]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[esp+520]
	call	?GetFriendDeclaredWarOnUsScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetFriendDeclaredWarOnUsScore

; 10419: 		if (iTempValue > iValue)

	cmp	eax, DWORD PTR _iValue$[esp+516]
	jle	SHORT $LN40@lGetOpinio

; 10420: 		{
; 10421: 			iValue = iTempValue;
; 10422: 			str = Localization::Lookup("TXT_KEY_DIPLO_HUMAN_FRIEND_DECLARED_WAR");

	lea	edx, DWORD PTR $T276727[esp+516]
	push	OFFSET $SG235949
	push	edx
	mov	DWORD PTR _iValue$[esp+524], eax
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _str$235933[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 117	; 00000075H
	call	ebp
	lea	ecx, DWORD PTR $T276727[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 112	; 00000070H
	call	esi
$LN40@lGetOpinio:

; 10423: 		}
; 10424: 
; 10425: 		if (iValue != 0)

	cmp	DWORD PTR _iValue$[esp+516], 0
	je	SHORT $LN39@lGetOpinio

; 10426: 		{
; 10427: 			Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235951[esp+516]
	call	ebx

; 10428: 			kOpinion.m_iValue = iValue;

	mov	eax, DWORD PTR _iValue$[esp+516]

; 10429: 			kOpinion.m_str = str;

	lea	ecx, DWORD PTR _str$235933[esp+516]
	push	ecx
	lea	ecx, DWORD PTR _kOpinion$235951[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 118	; 00000076H
	mov	DWORD PTR _kOpinion$235951[esp+600], eax
	call	ebp

; 10430: 			aOpinions.push_back(kOpinion);

	lea	edx, DWORD PTR _kOpinion$235951[esp+516]
	push	edx
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10431: 		}

	lea	ecx, DWORD PTR _kOpinion$235951[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 112	; 00000070H
	call	esi
$LN39@lGetOpinio:

; 10432: 	}

	lea	ecx, DWORD PTR _str$235933[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi

; 10433: 	// TRAITOR END
; 10434: 
; 10435: 	//iValue = pDiploAI->GetRequestsRefusedScore(eWithPlayer);
; 10436: 	//if (iValue != 0)
; 10437: 	//{
; 10438: 	//	Opinion kOpinion;
; 10439: 	//	kOpinion.m_iValue = iValue;
; 10440: 	//	kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_REFUSED_REQUESTS");
; 10441: 	//	aOpinions.push_back(kOpinion);
; 10442: 	//}
; 10443: 
; 10444: 	iValue = pDiploAI->GetDenouncedUsScore(eWithPlayer);

	mov	eax, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	eax
	call	?GetDenouncedUsScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetDenouncedUsScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10445: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN38@lGetOpinio

; 10446: 	{
; 10447: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235953[esp+516]
	call	ebx

; 10448: 		kOpinion.m_iValue = iValue;

	mov	ecx, DWORD PTR _iValue$[esp+516]

; 10449: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_DENOUNCED_BY_US");

	lea	edx, DWORD PTR $T276728[esp+516]
	push	OFFSET $SG235955
	push	edx
	mov	BYTE PTR __$EHRec$[esp+532], 119	; 00000077H
	mov	DWORD PTR _kOpinion$235953[esp+604], ecx
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235953[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 120	; 00000078H
	call	ebp
	lea	ecx, DWORD PTR $T276728[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 119	; 00000077H
	call	esi

; 10450: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235953[esp+516]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10451: 	}

	lea	ecx, DWORD PTR _kOpinion$235953[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN38@lGetOpinio:

; 10452: 
; 10453: 	iValue = pDiploAI->GetDenouncedThemScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[esp+516]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[esp+520]
	call	?GetDenouncedThemScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetDenouncedThemScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10454: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN37@lGetOpinio

; 10455: 	{
; 10456: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235957[esp+516]
	call	ebx

; 10457: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[esp+516]

; 10458: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_DENOUNCED_BY_THEM");

	lea	eax, DWORD PTR $T276729[esp+516]
	push	OFFSET $SG235959
	push	eax
	mov	BYTE PTR __$EHRec$[esp+532], 121	; 00000079H
	mov	DWORD PTR _kOpinion$235957[esp+604], edx
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235957[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 122	; 0000007aH
	call	ebp
	lea	ecx, DWORD PTR $T276729[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 121	; 00000079H
	call	esi

; 10459: 		aOpinions.push_back(kOpinion);

	lea	ecx, DWORD PTR _kOpinion$235957[esp+516]
	push	ecx
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10460: 	}

	lea	ecx, DWORD PTR _kOpinion$235957[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN37@lGetOpinio:

; 10461: 
; 10462: 	iValue = pDiploAI->GetDenouncedFriendScore(eWithPlayer);

	mov	edx, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	edx
	call	?GetDenouncedFriendScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetDenouncedFriendScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10463: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN36@lGetOpinio

; 10464: 	{
; 10465: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235961[esp+516]
	call	ebx

; 10466: 		kOpinion.m_iValue = iValue;

	mov	eax, DWORD PTR _iValue$[esp+516]

; 10467: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_HUMAN_DENOUNCED_FRIEND");

	lea	ecx, DWORD PTR $T276730[esp+516]
	push	OFFSET $SG235963
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+532], 123	; 0000007bH
	mov	DWORD PTR _kOpinion$235961[esp+604], eax
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235961[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 124	; 0000007cH
	call	ebp
	lea	ecx, DWORD PTR $T276730[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 123	; 0000007bH
	call	esi

; 10468: 		aOpinions.push_back(kOpinion);

	lea	edx, DWORD PTR _kOpinion$235961[esp+516]
	push	edx
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10469: 	}

	lea	ecx, DWORD PTR _kOpinion$235961[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN36@lGetOpinio:

; 10470: 
; 10471: 	iValue = pDiploAI->GetDenouncedEnemyScore(eWithPlayer);

	mov	eax, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	eax
	call	?GetDenouncedEnemyScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetDenouncedEnemyScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10472: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN35@lGetOpinio

; 10473: 	{
; 10474: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235965[esp+516]
	call	ebx

; 10475: 		kOpinion.m_iValue = iValue;

	mov	ecx, DWORD PTR _iValue$[esp+516]

; 10476: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_MUTUAL_ENEMY");

	lea	edx, DWORD PTR $T276731[esp+516]
	push	OFFSET $SG235967
	push	edx
	mov	BYTE PTR __$EHRec$[esp+532], 125	; 0000007dH
	mov	DWORD PTR _kOpinion$235965[esp+604], ecx
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235965[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 126	; 0000007eH
	call	ebp
	lea	ecx, DWORD PTR $T276731[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 125	; 0000007dH
	call	esi

; 10477: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235965[esp+516]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10478: 	}

	lea	ecx, DWORD PTR _kOpinion$235965[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN35@lGetOpinio:

; 10479: 
; 10480: 	iValue = pDiploAI->GetRecklessExpanderScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[esp+516]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[esp+520]
	call	?GetRecklessExpanderScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetRecklessExpanderScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10481: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN34@lGetOpinio

; 10482: 	{
; 10483: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235969[esp+516]
	call	ebx

; 10484: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[esp+516]

; 10485: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_RECKLESS_EXPANDER");

	lea	eax, DWORD PTR $T276732[esp+516]
	push	OFFSET $SG235971
	push	eax
	mov	BYTE PTR __$EHRec$[esp+532], 127	; 0000007fH
	mov	DWORD PTR _kOpinion$235969[esp+604], edx
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235969[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 128	; 00000080H
	call	ebp
	lea	ecx, DWORD PTR $T276732[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 127	; 0000007fH
	call	esi

; 10486: 		aOpinions.push_back(kOpinion);

	lea	ecx, DWORD PTR _kOpinion$235969[esp+516]
	push	ecx
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10487: 	}

	lea	ecx, DWORD PTR _kOpinion$235969[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN34@lGetOpinio:

; 10488: 
; 10489: 	iValue = pDiploAI->GetRecentTradeScore(eWithPlayer);

	mov	edx, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	edx
	call	?GetRecentTradeScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetRecentTradeScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10490: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN33@lGetOpinio

; 10491: 	{
; 10492: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235973[esp+516]
	call	ebx

; 10493: 		kOpinion.m_iValue = iValue;

	mov	eax, DWORD PTR _iValue$[esp+516]

; 10494: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_TRADE_PARTNER");

	lea	ecx, DWORD PTR $T276733[esp+516]
	push	OFFSET $SG235975
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+532], 129	; 00000081H
	mov	DWORD PTR _kOpinion$235973[esp+604], eax
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235973[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 130	; 00000082H
	call	ebp
	lea	ecx, DWORD PTR $T276733[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 129	; 00000081H
	call	esi

; 10495: 		aOpinions.push_back(kOpinion);

	lea	edx, DWORD PTR _kOpinion$235973[esp+516]
	push	edx
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10496: 	}

	lea	ecx, DWORD PTR _kOpinion$235973[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN33@lGetOpinio:

; 10497: 
; 10498: 	iValue = pDiploAI->GetCommonFoeScore(eWithPlayer);

	mov	eax, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	eax
	call	?GetCommonFoeScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetCommonFoeScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10499: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN32@lGetOpinio

; 10500: 	{
; 10501: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235977[esp+516]
	call	ebx

; 10502: 		kOpinion.m_iValue = iValue;

	mov	ecx, DWORD PTR _iValue$[esp+516]

; 10503: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_COMMON_FOE");

	lea	edx, DWORD PTR $T276734[esp+516]
	push	OFFSET $SG235979
	push	edx
	mov	BYTE PTR __$EHRec$[esp+532], 131	; 00000083H
	mov	DWORD PTR _kOpinion$235977[esp+604], ecx
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235977[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 132	; 00000084H
	call	ebp
	lea	ecx, DWORD PTR $T276734[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 131	; 00000083H
	call	esi

; 10504: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235977[esp+516]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10505: 	}

	lea	ecx, DWORD PTR _kOpinion$235977[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN32@lGetOpinio:

; 10506: 
; 10507: 	iValue = pDiploAI->GetRecentAssistScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[esp+516]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[esp+520]
	call	?GetRecentAssistScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetRecentAssistScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10508: 	if (iValue != 0)

	test	eax, eax
	je	$LN31@lGetOpinio

; 10509: 	{
; 10510: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235981[esp+516]
	call	ebx

; 10511: 		kOpinion.m_iValue = iValue;

	mov	eax, DWORD PTR _iValue$[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 133	; 00000085H
	mov	DWORD PTR _kOpinion$235981[esp+596], eax

; 10512: 		if (iValue > 0)

	test	eax, eax
	jle	SHORT $LN30@lGetOpinio

; 10513: 		{
; 10514: 			kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_REFUSED_REQUESTS");

	lea	edx, DWORD PTR $T276735[esp+516]
	push	OFFSET $SG235984
	push	edx
	call	edi
	add	esp, 8
	mov	BYTE PTR __$EHRec$[esp+524], 134	; 00000086H
	jmp	SHORT $LN910@lGetOpinio
$LN30@lGetOpinio:

; 10515: 		}
; 10516: 		else if (iValue < 0)

	cmp	DWORD PTR _iValue$[esp+516], 0
	jge	SHORT $LN28@lGetOpinio

; 10517: 		{
; 10518: 			kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_ASSISTANCE_TO_THEM");

	lea	eax, DWORD PTR $T276736[esp+516]
	push	OFFSET $SG235988
	push	eax
	call	edi
	add	esp, 8
	mov	BYTE PTR __$EHRec$[esp+524], 135	; 00000087H
$LN910@lGetOpinio:
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235981[esp+520]
	call	ebp
	lea	ecx, DWORD PTR $T276736[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 133	; 00000085H
	call	esi
$LN28@lGetOpinio:

; 10519: 		}
; 10520: 		aOpinions.push_back(kOpinion);

	lea	ecx, DWORD PTR _kOpinion$235981[esp+516]
	push	ecx
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10521: 	}

	lea	ecx, DWORD PTR _kOpinion$235981[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN31@lGetOpinio:

; 10522: 
; 10523: 	iValue = pDiploAI->GetNukedByScore(eWithPlayer);

	mov	edx, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	edx
	call	?GetNukedByScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetNukedByScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10524: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN27@lGetOpinio

; 10525: 	{
; 10526: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235990[esp+516]
	call	ebx

; 10527: 		kOpinion.m_iValue = iValue;

	mov	eax, DWORD PTR _iValue$[esp+516]

; 10528: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_NUKED");

	lea	ecx, DWORD PTR $T276737[esp+516]
	push	OFFSET $SG235992
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+532], 136	; 00000088H
	mov	DWORD PTR _kOpinion$235990[esp+604], eax
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235990[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 137	; 00000089H
	call	ebp
	lea	ecx, DWORD PTR $T276737[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 136	; 00000088H
	call	esi

; 10529: 		aOpinions.push_back(kOpinion);

	lea	edx, DWORD PTR _kOpinion$235990[esp+516]
	push	edx
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10530: 	}

	lea	ecx, DWORD PTR _kOpinion$235990[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN27@lGetOpinio:

; 10531: 
; 10532: 	iValue = pDiploAI->GetCapitalCapturedByScore(eWithPlayer);

	mov	eax, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	eax
	call	?GetCapitalCapturedByScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetCapitalCapturedByScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10533: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN26@lGetOpinio

; 10534: 	{
; 10535: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235994[esp+516]
	call	ebx

; 10536: 		kOpinion.m_iValue = iValue;

	mov	ecx, DWORD PTR _iValue$[esp+516]

; 10537: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_CAPTURED_CAPITAL");

	lea	edx, DWORD PTR $T276738[esp+516]
	push	OFFSET $SG235996
	push	edx
	mov	BYTE PTR __$EHRec$[esp+532], 138	; 0000008aH
	mov	DWORD PTR _kOpinion$235994[esp+604], ecx
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235994[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 139	; 0000008bH
	call	ebp
	lea	ecx, DWORD PTR $T276738[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 138	; 0000008aH
	call	esi

; 10538: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$235994[esp+516]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10539: 	}

	lea	ecx, DWORD PTR _kOpinion$235994[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN26@lGetOpinio:

; 10540: 
; 10541: 	iValue = pDiploAI->GetGaveAssistanceToScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[esp+516]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[esp+520]
	call	?GetGaveAssistanceToScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetGaveAssistanceToScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10542: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN25@lGetOpinio

; 10543: 	{
; 10544: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$235998[esp+516]
	call	ebx

; 10545: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[esp+516]

; 10546: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_ASSISTANCE_FROM_THEM");

	lea	eax, DWORD PTR $T276739[esp+516]
	push	OFFSET $SG236000
	push	eax
	mov	BYTE PTR __$EHRec$[esp+532], 140	; 0000008cH
	mov	DWORD PTR _kOpinion$235998[esp+604], edx
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$235998[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 141	; 0000008dH
	call	ebp
	lea	ecx, DWORD PTR $T276739[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 140	; 0000008cH
	call	esi

; 10547: 		aOpinions.push_back(kOpinion);

	lea	ecx, DWORD PTR _kOpinion$235998[esp+516]
	push	ecx
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10548: 	}

	lea	ecx, DWORD PTR _kOpinion$235998[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN25@lGetOpinio:

; 10549: 
; 10550: 	iValue = pDiploAI->GetPaidTributeToScore(eWithPlayer);

	mov	edx, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	edx
	call	?GetPaidTributeToScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetPaidTributeToScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10551: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN24@lGetOpinio

; 10552: 	{
; 10553: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$236002[esp+516]
	call	ebx

; 10554: 		kOpinion.m_iValue = iValue;

	mov	eax, DWORD PTR _iValue$[esp+516]

; 10555: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_PAID_TRIBUTE");

	lea	ecx, DWORD PTR $T276740[esp+516]
	push	OFFSET $SG236004
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+532], 142	; 0000008eH
	mov	DWORD PTR _kOpinion$236002[esp+604], eax
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$236002[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 143	; 0000008fH
	call	ebp
	lea	ecx, DWORD PTR $T276740[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 142	; 0000008eH
	call	esi

; 10556: 		aOpinions.push_back(kOpinion);

	lea	edx, DWORD PTR _kOpinion$236002[esp+516]
	push	edx
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10557: 	}

	lea	ecx, DWORD PTR _kOpinion$236002[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN24@lGetOpinio:

; 10558: 
; 10559: 	iValue = pDiploAI->GetLikedTheirProposalScore(eWithPlayer);

	mov	eax, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	eax
	call	?GetLikedTheirProposalScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetLikedTheirProposalScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10560: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN23@lGetOpinio

; 10561: 	{
; 10562: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$236006[esp+516]
	call	ebx

; 10563: 		kOpinion.m_iValue = iValue;

	mov	ecx, DWORD PTR _iValue$[esp+516]

; 10564: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_LIKED_OUR_PROPOSAL");

	lea	edx, DWORD PTR $T276741[esp+516]
	push	OFFSET $SG236008
	push	edx
	mov	BYTE PTR __$EHRec$[esp+532], 144	; 00000090H
	mov	DWORD PTR _kOpinion$236006[esp+604], ecx
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$236006[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 145	; 00000091H
	call	ebp
	lea	ecx, DWORD PTR $T276741[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 144	; 00000090H
	call	esi

; 10565: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$236006[esp+516]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10566: 	}

	lea	ecx, DWORD PTR _kOpinion$236006[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN23@lGetOpinio:

; 10567: 	
; 10568: 	iValue = pDiploAI->GetDislikedTheirProposalScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[esp+516]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[esp+520]
	call	?GetDislikedTheirProposalScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetDislikedTheirProposalScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10569: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN22@lGetOpinio

; 10570: 	{
; 10571: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$236010[esp+516]
	call	ebx

; 10572: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[esp+516]

; 10573: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_DISLIKED_OUR_PROPOSAL");

	lea	eax, DWORD PTR $T276742[esp+516]
	push	OFFSET $SG236012
	push	eax
	mov	BYTE PTR __$EHRec$[esp+532], 146	; 00000092H
	mov	DWORD PTR _kOpinion$236010[esp+604], edx
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$236010[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 147	; 00000093H
	call	ebp
	lea	ecx, DWORD PTR $T276742[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 146	; 00000092H
	call	esi

; 10574: 		aOpinions.push_back(kOpinion);

	lea	ecx, DWORD PTR _kOpinion$236010[esp+516]
	push	ecx
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10575: 	}

	lea	ecx, DWORD PTR _kOpinion$236010[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN22@lGetOpinio:

; 10576: 
; 10577: 	iValue = pDiploAI->GetSupportedMyProposalScore(eWithPlayer);

	mov	edx, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	edx
	call	?GetSupportedMyProposalScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetSupportedMyProposalScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10578: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN21@lGetOpinio

; 10579: 	{
; 10580: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$236014[esp+516]
	call	ebx

; 10581: 		kOpinion.m_iValue = iValue;

	mov	eax, DWORD PTR _iValue$[esp+516]

; 10582: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_SUPPORTED_THEIR_PROPOSAL");

	lea	ecx, DWORD PTR $T276743[esp+516]
	push	OFFSET $SG236016
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+532], 148	; 00000094H
	mov	DWORD PTR _kOpinion$236014[esp+604], eax
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$236014[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 149	; 00000095H
	call	ebp
	lea	ecx, DWORD PTR $T276743[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 148	; 00000094H
	call	esi

; 10583: 		aOpinions.push_back(kOpinion);

	lea	edx, DWORD PTR _kOpinion$236014[esp+516]
	push	edx
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10584: 	}

	lea	ecx, DWORD PTR _kOpinion$236014[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN21@lGetOpinio:

; 10585: 
; 10586: 	iValue = pDiploAI->GetFoiledMyProposalScore(eWithPlayer);

	mov	eax, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	eax
	call	?GetFoiledMyProposalScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetFoiledMyProposalScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10587: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN20@lGetOpinio

; 10588: 	{
; 10589: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$236018[esp+516]
	call	ebx

; 10590: 		kOpinion.m_iValue = iValue;

	mov	ecx, DWORD PTR _iValue$[esp+516]

; 10591: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_FOILED_THEIR_PROPOSAL");

	lea	edx, DWORD PTR $T276744[esp+516]
	push	OFFSET $SG236020
	push	edx
	mov	BYTE PTR __$EHRec$[esp+532], 150	; 00000096H
	mov	DWORD PTR _kOpinion$236018[esp+604], ecx
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$236018[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 151	; 00000097H
	call	ebp
	lea	ecx, DWORD PTR $T276744[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 150	; 00000096H
	call	esi

; 10592: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$236018[esp+516]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10593: 	}

	lea	ecx, DWORD PTR _kOpinion$236018[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN20@lGetOpinio:

; 10594: 
; 10595: 	iValue = pDiploAI->GetSupportedMyHostingScore(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[esp+516]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[esp+520]
	call	?GetSupportedMyHostingScore@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetSupportedMyHostingScore
	mov	DWORD PTR _iValue$[esp+516], eax

; 10596: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN19@lGetOpinio

; 10597: 	{
; 10598: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$236022[esp+516]
	call	ebx

; 10599: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[esp+516]

; 10600: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_DIPLO_SUPPORTED_THEIR_HOSTING");

	lea	eax, DWORD PTR $T276745[esp+516]
	push	OFFSET $SG236024
	push	eax
	mov	BYTE PTR __$EHRec$[esp+532], 152	; 00000098H
	mov	DWORD PTR _kOpinion$236022[esp+604], edx
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$236022[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 153	; 00000099H
	call	ebp
	lea	ecx, DWORD PTR $T276745[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 152	; 00000098H
	call	esi

; 10601: 		aOpinions.push_back(kOpinion);

	lea	ecx, DWORD PTR _kOpinion$236022[esp+516]
	push	ecx
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10602: 	}

	lea	ecx, DWORD PTR _kOpinion$236022[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN19@lGetOpinio:

; 10603: 
; 10604: 	iValue = pDiploAI->GetScenarioModifier1(eWithPlayer);

	mov	edx, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	edx
	call	?GetScenarioModifier1@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetScenarioModifier1
	mov	DWORD PTR _iValue$[esp+516], eax

; 10605: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN18@lGetOpinio

; 10606: 	{
; 10607: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$236026[esp+516]
	call	ebx

; 10608: 		kOpinion.m_iValue = iValue;

	mov	eax, DWORD PTR _iValue$[esp+516]

; 10609: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_SPECIFIC_DIPLO_STRING_1");

	lea	ecx, DWORD PTR $T276746[esp+516]
	push	OFFSET $SG236028
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+532], 154	; 0000009aH
	mov	DWORD PTR _kOpinion$236026[esp+604], eax
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$236026[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 155	; 0000009bH
	call	ebp
	lea	ecx, DWORD PTR $T276746[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 154	; 0000009aH
	call	esi

; 10610: 		aOpinions.push_back(kOpinion);

	lea	edx, DWORD PTR _kOpinion$236026[esp+516]
	push	edx
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10611: 	}

	lea	ecx, DWORD PTR _kOpinion$236026[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN18@lGetOpinio:

; 10612: 
; 10613: 	iValue = pDiploAI->GetScenarioModifier2(eWithPlayer);

	mov	eax, DWORD PTR _eWithPlayer$[esp+516]
	mov	ecx, DWORD PTR _pDiploAI$[esp+516]
	push	eax
	call	?GetScenarioModifier2@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetScenarioModifier2
	mov	DWORD PTR _iValue$[esp+516], eax

; 10614: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN17@lGetOpinio

; 10615: 	{
; 10616: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$236030[esp+516]
	call	ebx

; 10617: 		kOpinion.m_iValue = iValue;

	mov	ecx, DWORD PTR _iValue$[esp+516]

; 10618: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_SPECIFIC_DIPLO_STRING_2");

	lea	edx, DWORD PTR $T276747[esp+516]
	push	OFFSET $SG236032
	push	edx
	mov	BYTE PTR __$EHRec$[esp+532], 156	; 0000009cH
	mov	DWORD PTR _kOpinion$236030[esp+604], ecx
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$236030[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 157	; 0000009dH
	call	ebp
	lea	ecx, DWORD PTR $T276747[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 156	; 0000009cH
	call	esi

; 10619: 		aOpinions.push_back(kOpinion);

	lea	eax, DWORD PTR _kOpinion$236030[esp+516]
	push	eax
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10620: 	}

	lea	ecx, DWORD PTR _kOpinion$236030[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN17@lGetOpinio:

; 10621: 
; 10622: 	iValue = pDiploAI->GetScenarioModifier3(eWithPlayer);

	mov	ecx, DWORD PTR _eWithPlayer$[esp+516]
	push	ecx
	mov	ecx, DWORD PTR _pDiploAI$[esp+520]
	call	?GetScenarioModifier3@CvDiplomacyAI@@QAEHW4PlayerTypes@@@Z ; CvDiplomacyAI::GetScenarioModifier3
	mov	DWORD PTR _iValue$[esp+516], eax

; 10623: 	if (iValue != 0)

	test	eax, eax
	je	SHORT $LN16@lGetOpinio

; 10624: 	{
; 10625: 		Opinion kOpinion;

	lea	ecx, DWORD PTR _kOpinion$236034[esp+516]
	call	ebx

; 10626: 		kOpinion.m_iValue = iValue;

	mov	edx, DWORD PTR _iValue$[esp+516]

; 10627: 		kOpinion.m_str = Localization::Lookup("TXT_KEY_SPECIFIC_DIPLO_STRING_3");

	lea	eax, DWORD PTR $T276748[esp+516]
	push	OFFSET $SG236036
	mov	bl, 158					; 0000009eH
	push	eax
	mov	BYTE PTR __$EHRec$[esp+532], bl
	mov	DWORD PTR _kOpinion$236034[esp+604], edx
	call	edi
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _kOpinion$236034[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 159	; 0000009fH
	call	ebp
	lea	ecx, DWORD PTR $T276748[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], bl
	call	esi

; 10628: 		aOpinions.push_back(kOpinion);

	lea	ecx, DWORD PTR _kOpinion$236034[esp+516]
	push	ecx
	lea	ecx, DWORD PTR _aOpinions$[esp+520]
	call	?push_back@?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAEXABUOpinion@@@Z ; std::vector<Opinion,std::allocator<Opinion> >::push_back

; 10629: 	}

	lea	ecx, DWORD PTR _kOpinion$236034[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	esi
$LN16@lGetOpinio:

; 10630: 
; 10631: 	std::stable_sort(aOpinions.begin(), aOpinions.end(), OpinionEval());

	mov	ebx, DWORD PTR _aOpinions$[esp+524]
	mov	edi, DWORD PTR _aOpinions$[esp+520]
	mov	BYTE PTR $T276749[esp+516], 0
	cmp	edi, ebx
	je	SHORT $LN903@lGetOpinio
	mov	edx, DWORD PTR $T276749[esp+516]
	push	edx
	push	0
	push	0
	push	ebx
	push	edi
	call	??$_Stable_sort@V?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@HUOpinion@@UOpinionEval@@@std@@YAXV?$_Vector_iterator@UOpinion@@V?$allocator@UOpinion@@@std@@@0@0PAHPAUOpinion@@UOpinionEval@@@Z ; std::_Stable_sort<std::_Vector_iterator<Opinion,std::allocator<Opinion> >,int,Opinion,OpinionEval>
	add	esp, 20					; 00000014H
$LN903@lGetOpinio:

; 10632: 
; 10633: 	lua_createtable(L, 0, 0);

	mov	eax, DWORD PTR _L$[esp+512]
	push	0
	push	0
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 10634: 	int index = 1;
; 10635: 	std::string strOutput;

	lea	ecx, DWORD PTR _strOutput$[esp+516]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 10636: 	const char* strEmpty = "";
; 10637: 	std::string strEndColor = "[ENDCOLOR]";

	push	OFFSET $SG236199
	lea	ecx, DWORD PTR _strEndColor$[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 160	; 000000a0H
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z

; 10638: 	size_t EndColorFound;
; 10639: 	std::string strColorPrefix = "[COLOR_";

	push	OFFSET $SG236202
	lea	ecx, DWORD PTR _strColorPrefix$[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 161	; 000000a1H
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z

; 10640: 	size_t BeginColorPrefixFound;
; 10641: 	std::string strColorSuffix = "]";

	push	OFFSET $SG236205
	lea	ecx, DWORD PTR _strColorSuffix$[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 162	; 000000a2H
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z

; 10642: 	size_t BeginColorSuffixFound;
; 10643: 	std::string strFullPositiveColor = "[COLOR_POSITIVE_TEXT]";

	push	OFFSET $SG236208
	lea	ecx, DWORD PTR _strFullPositiveColor$[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 163	; 000000a3H
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z

; 10644: 	std::string strPartialPositiveColor = "[COLOR_FADING_POSITIVE_TEXT]";

	push	OFFSET $SG236210
	lea	ecx, DWORD PTR _strPartialPositiveColor$[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 164	; 000000a4H
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z

; 10645: 	std::string strNeutralColor = "[COLOR_GREY]";

	push	OFFSET $SG236212
	lea	ecx, DWORD PTR _strNeutralColor$[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 165	; 000000a5H
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z

; 10646: 	std::string strPartialNegativeColor = "[COLOR_FADING_NEGATIVE_TEXT]";

	push	OFFSET $SG236214
	lea	ecx, DWORD PTR _strPartialNegativeColor$[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 166	; 000000a6H
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z

; 10647: 	std::string strFullNegativeColor = "[COLOR_NEGATIVE_TEXT]";

	push	OFFSET $SG236216
	lea	ecx, DWORD PTR _strFullNegativeColor$[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], 167	; 000000a7H
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z

; 10648: 
; 10649: 	for (uint ui = 0; ui < aOpinions.size(); ui++)

	mov	ecx, ebx
	sub	ecx, edi
	mov	eax, 818089009				; 30c30c31H
	imul	ecx
	sar	edx, 4
	mov	edi, edx
	shr	edi, 31					; 0000001fH
	xor	ebp, ebp
	add	edi, edx
	mov	BYTE PTR __$EHRec$[esp+524], 168	; 000000a8H
	je	$LN904@lGetOpinio
	mov	ecx, DWORD PTR _aOpinions$[esp+520]
	add	ecx, 80					; 00000050H
	mov	DWORD PTR tv3486[esp+516], ecx
$LL15@lGetOpinio:

; 10650: 	{
; 10651: 		strOutput = aOpinions[ui].m_str.toUTF8();

	mov	ecx, DWORD PTR tv3486[esp+516]
	add	ecx, -80				; ffffffb0H
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strOutput$[esp+520]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 10652: 
; 10653: 		EndColorFound = strOutput.rfind(strEndColor);

	mov	edx, DWORD PTR __imp_?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR _strEndColor$[esp+520]
	push	ecx
	lea	ecx, DWORD PTR _strOutput$[esp+524]
	call	DWORD PTR __imp_?rfind@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIABV12@I@Z

; 10654: 		if (EndColorFound != string::npos)

	mov	edx, DWORD PTR __imp_?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
	cmp	eax, DWORD PTR [edx]
	je	SHORT $LN12@lGetOpinio

; 10655: 		{
; 10656: 			strOutput.replace(EndColorFound, strEndColor.length(), strEmpty);

	mov	ecx, DWORD PTR _strEndColor$[esp+536]
	push	OFFSET $SG236197
	push	ecx
	push	eax
	lea	ecx, DWORD PTR _strOutput$[esp+528]
	call	DWORD PTR __imp_?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IIPBD@Z
$LN12@lGetOpinio:

; 10657: 		}
; 10658: 
; 10659: 		BeginColorPrefixFound = strOutput.find(strColorPrefix);

	push	0
	lea	edx, DWORD PTR _strColorPrefix$[esp+520]
	push	edx
	lea	ecx, DWORD PTR _strOutput$[esp+524]
	call	DWORD PTR __imp_?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIABV12@I@Z
	mov	ebx, eax

; 10660: 		if (BeginColorPrefixFound != string::npos)

	mov	eax, DWORD PTR __imp_?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
	cmp	ebx, DWORD PTR [eax]
	je	SHORT $LN10@lGetOpinio

; 10661: 		{
; 10662: 			BeginColorSuffixFound = strOutput.find(strColorSuffix);

	push	0
	lea	ecx, DWORD PTR _strColorSuffix$[esp+520]
	push	ecx
	lea	ecx, DWORD PTR _strOutput$[esp+524]
	call	DWORD PTR __imp_?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIABV12@I@Z

; 10663: 			if (BeginColorSuffixFound != string::npos)

	mov	edx, DWORD PTR __imp_?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
	cmp	eax, DWORD PTR [edx]
	je	SHORT $LN10@lGetOpinio

; 10664: 			{
; 10665: 				strOutput.erase(BeginColorPrefixFound, (BeginColorSuffixFound - BeginColorPrefixFound) + 1);

	sub	eax, ebx
	inc	eax
	push	eax
	push	ebx
	lea	ecx, DWORD PTR _strOutput$[esp+524]
	call	DWORD PTR __imp_?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
$LN10@lGetOpinio:

; 10666: 			}
; 10667: 		}
; 10668: 
; 10669: 		if (aOpinions[ui].m_iValue > 10)

	mov	eax, DWORD PTR tv3486[esp+516]
	mov	eax, DWORD PTR [eax]
	cmp	eax, 10					; 0000000aH
	jle	SHORT $LN9@lGetOpinio

; 10670: 		{
; 10671: 			strOutput.insert(0, strFullNegativeColor);

	lea	ecx, DWORD PTR _strFullNegativeColor$[esp+516]
	push	ecx
	jmp	SHORT $LN911@lGetOpinio
$LN9@lGetOpinio:

; 10672: 		}
; 10673: 		else if (aOpinions[ui].m_iValue > 0)

	test	eax, eax
	jle	SHORT $LN912@lGetOpinio

; 10674: 		{
; 10675: 			strOutput.insert(0, strPartialNegativeColor);

	lea	edx, DWORD PTR _strPartialNegativeColor$[esp+516]
	jmp	SHORT $LN913@lGetOpinio
$LN912@lGetOpinio:

; 10676: 		}
; 10677: 		else if (aOpinions[ui].m_iValue == 0)

	jne	SHORT $LN5@lGetOpinio

; 10678: 		{
; 10679: 			strOutput.insert(0, strNeutralColor);

	lea	eax, DWORD PTR _strNeutralColor$[esp+516]
	push	eax
	jmp	SHORT $LN911@lGetOpinio
$LN5@lGetOpinio:

; 10680: 		}
; 10681: 		else if (aOpinions[ui].m_iValue >= -10)

	cmp	eax, -10				; fffffff6H
	jl	SHORT $LN900@lGetOpinio

; 10682: 		{
; 10683: 			strOutput.insert(0, strPartialPositiveColor);

	lea	ecx, DWORD PTR _strPartialPositiveColor$[esp+516]
	push	ecx
	jmp	SHORT $LN911@lGetOpinio
$LN900@lGetOpinio:

; 10684: 		}
; 10685: 		else if (aOpinions[ui].m_iValue < -10)
; 10686: 		{
; 10687: 			strOutput.insert(0, strFullPositiveColor);

	lea	edx, DWORD PTR _strFullPositiveColor$[esp+516]
$LN913@lGetOpinio:
	push	edx
$LN911@lGetOpinio:
	push	0
	lea	ecx, DWORD PTR _strOutput$[esp+524]
	call	DWORD PTR __imp_?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IABV12@@Z

; 10688: 		}
; 10689: 		strOutput += strEndColor;

	lea	eax, DWORD PTR _strEndColor$[esp+516]
	push	eax
	lea	ecx, DWORD PTR _strOutput$[esp+520]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z

; 10690: 
; 10691: 		lua_pushstring(L, strOutput.c_str());

	lea	ecx, DWORD PTR _strOutput$[esp+516]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	ebx, DWORD PTR _L$[esp+512]
	push	eax
	push	ebx
	call	_lua_pushstring

; 10692: 		lua_rawseti(L, -2, index);

	inc	ebp
	push	ebp
	push	-2					; fffffffeH
	push	ebx
	call	_lua_rawseti
	add	DWORD PTR tv3486[esp+536], 84		; 00000054H
	add	esp, 20					; 00000014H
	cmp	ebp, edi
	jb	$LL15@lGetOpinio

; 10648: 
; 10649: 	for (uint ui = 0; ui < aOpinions.size(); ui++)

	mov	ebx, DWORD PTR _aOpinions$[esp+524]
$LN904@lGetOpinio:

; 10693: 		index++;
; 10694: 	}
; 10695: 
; 10696: 	return 1;

	lea	ecx, DWORD PTR _strFullNegativeColor$[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 167	; 000000a7H
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR _strPartialNegativeColor$[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 166	; 000000a6H
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR _strNeutralColor$[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 165	; 000000a5H
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR _strPartialPositiveColor$[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 164	; 000000a4H
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR _strFullPositiveColor$[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 163	; 000000a3H
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR _strColorSuffix$[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 162	; 000000a2H
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR _strColorPrefix$[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 161	; 000000a1H
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR _strEndColor$[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 160	; 000000a0H
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR _strOutput$[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ebp, DWORD PTR _aOpinions$[esp+520]
	mov	DWORD PTR __$EHRec$[esp+524], -1
	test	ebp, ebp
	je	SHORT $LN901@lGetOpinio
	mov	edi, ebp
	cmp	ebp, ebx
	je	SHORT $LN879@lGetOpinio
$LL881@lGetOpinio:
	mov	ecx, edi
	call	esi
	add	edi, 84					; 00000054H
	cmp	edi, ebx
	jne	SHORT $LL881@lGetOpinio
$LN879@lGetOpinio:
	push	ebp
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN901@lGetOpinio:

; 10697: }

	mov	ecx, DWORD PTR __$EHRec$[esp+516]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 500				; 000001f4H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _aOpinions$[ebp]
	jmp	??1?$vector@UOpinion@@V?$allocator@UOpinion@@@std@@@std@@QAE@XZ ; std::vector<Opinion,std::allocator<Opinion> >::~vector<Opinion,std::allocator<Opinion> >
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR _kOpinion$235689[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$2:
	lea	ecx, DWORD PTR $T276662[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$5:
	lea	ecx, DWORD PTR _kOpinion$235700[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$6:
	lea	ecx, DWORD PTR $T276664[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$3:
	lea	ecx, DWORD PTR _kOpinion$235696[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$4:
	lea	ecx, DWORD PTR $T276663[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$7:
	lea	ecx, DWORD PTR _kOpinion$235705[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$8:
	lea	ecx, DWORD PTR $T276665[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$9:
	lea	ecx, DWORD PTR _kOpinion$235710[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$10:
	lea	ecx, DWORD PTR $T276666[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$11:
	lea	ecx, DWORD PTR _kOpinion$235714[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$12:
	lea	ecx, DWORD PTR $T276667[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$13:
	lea	ecx, DWORD PTR _kOpinion$235718[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$14:
	lea	ecx, DWORD PTR $T276668[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$15:
	lea	ecx, DWORD PTR _kOpinion$235722[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$16:
	lea	ecx, DWORD PTR _str$235723[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$17:
	lea	ecx, DWORD PTR $T276669[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$18:
	lea	ecx, DWORD PTR $T276670[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$19:
	lea	ecx, DWORD PTR $T276671[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$20:
	lea	ecx, DWORD PTR $T276672[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$21:
	lea	ecx, DWORD PTR $T276673[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$22:
	lea	ecx, DWORD PTR $T276674[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$23:
	lea	ecx, DWORD PTR $T276675[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$24:
	lea	ecx, DWORD PTR _kOpinion$235752[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$25:
	lea	ecx, DWORD PTR $T276676[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$26:
	lea	ecx, DWORD PTR _kOpinion$235756[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$27:
	lea	ecx, DWORD PTR $T276677[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$28:
	lea	ecx, DWORD PTR _kOpinion$235760[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$29:
	lea	ecx, DWORD PTR $T276678[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$30:
	lea	ecx, DWORD PTR _kOpinion$235764[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$31:
	lea	ecx, DWORD PTR $T276679[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$32:
	lea	ecx, DWORD PTR _kOpinion$235768[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$33:
	lea	ecx, DWORD PTR $T276680[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$34:
	lea	ecx, DWORD PTR _kOpinion$235772[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$35:
	lea	ecx, DWORD PTR $T276681[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$36:
	lea	ecx, DWORD PTR _kOpinion$235776[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$37:
	lea	ecx, DWORD PTR $T276682[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$38:
	lea	ecx, DWORD PTR _kOpinion$235780[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$39:
	lea	ecx, DWORD PTR $T276683[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$40:
	lea	ecx, DWORD PTR _kOpinion$235784[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$41:
	lea	ecx, DWORD PTR $T276684[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$42:
	lea	ecx, DWORD PTR _kOpinion$235788[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$43:
	lea	ecx, DWORD PTR $T276685[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$44:
	lea	ecx, DWORD PTR _kOpinion$235792[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$45:
	lea	ecx, DWORD PTR $T276686[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$46:
	lea	ecx, DWORD PTR _kOpinion$235796[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$47:
	lea	ecx, DWORD PTR $T276687[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$48:
	lea	ecx, DWORD PTR _kOpinion$235800[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$49:
	lea	ecx, DWORD PTR $T276688[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$50:
	lea	ecx, DWORD PTR _kOpinion$235804[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$51:
	lea	ecx, DWORD PTR $T276689[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$52:
	lea	ecx, DWORD PTR _kOpinion$235808[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$53:
	lea	ecx, DWORD PTR $T276690[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$54:
	lea	ecx, DWORD PTR _kOpinion$235814[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$55:
	lea	ecx, DWORD PTR $T276692[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$56:
	lea	ecx, DWORD PTR _kOpinion$235822[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$57:
	lea	ecx, DWORD PTR $T276695[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$58:
	lea	ecx, DWORD PTR _kOpinion$235826[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$59:
	lea	ecx, DWORD PTR $T276696[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$60:
	lea	ecx, DWORD PTR _kOpinion$235830[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$61:
	lea	ecx, DWORD PTR $T276697[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$62:
	lea	ecx, DWORD PTR _kOpinion$235834[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$63:
	lea	ecx, DWORD PTR $T276698[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$64:
	lea	ecx, DWORD PTR _kOpinion$235838[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$65:
	lea	ecx, DWORD PTR $T276699[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$66:
	lea	ecx, DWORD PTR _kOpinion$235842[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$67:
	lea	ecx, DWORD PTR $T276700[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$68:
	lea	ecx, DWORD PTR _kOpinion$235846[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$69:
	lea	ecx, DWORD PTR $T276701[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$70:
	lea	ecx, DWORD PTR _kOpinion$235850[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$71:
	lea	ecx, DWORD PTR $T276702[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$72:
	lea	ecx, DWORD PTR _kOpinion$235854[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$73:
	lea	ecx, DWORD PTR $T276703[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$74:
	lea	ecx, DWORD PTR _kOpinion$235858[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$75:
	lea	ecx, DWORD PTR $T276704[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$76:
	lea	ecx, DWORD PTR _kOpinion$235862[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$77:
	lea	ecx, DWORD PTR $T276705[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$78:
	lea	ecx, DWORD PTR _kOpinion$235866[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$79:
	lea	ecx, DWORD PTR $T276706[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$80:
	lea	ecx, DWORD PTR _kOpinion$235870[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$81:
	lea	ecx, DWORD PTR $T276707[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$82:
	lea	ecx, DWORD PTR _kOpinion$235874[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$83:
	lea	ecx, DWORD PTR $T276708[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$84:
	lea	ecx, DWORD PTR _kOpinion$235878[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$85:
	lea	ecx, DWORD PTR $T276709[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$86:
	lea	ecx, DWORD PTR _kOpinion$235882[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$87:
	lea	ecx, DWORD PTR $T276710[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$88:
	lea	ecx, DWORD PTR _kOpinion$235886[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$89:
	lea	ecx, DWORD PTR $T276711[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$90:
	lea	ecx, DWORD PTR _kOpinion$235890[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$91:
	lea	ecx, DWORD PTR $T276712[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$92:
	lea	ecx, DWORD PTR _kOpinion$235894[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$93:
	lea	ecx, DWORD PTR $T276713[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$94:
	lea	ecx, DWORD PTR _kOpinion$235898[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$95:
	lea	ecx, DWORD PTR $T276714[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$96:
	lea	ecx, DWORD PTR _kOpinion$235902[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$97:
	lea	ecx, DWORD PTR $T276715[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$98:
	lea	ecx, DWORD PTR _kOpinion$235906[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$99:
	lea	ecx, DWORD PTR $T276716[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$100:
	lea	ecx, DWORD PTR _kOpinion$235910[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$101:
	lea	ecx, DWORD PTR $T276717[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$102:
	lea	ecx, DWORD PTR _kOpinion$235914[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$103:
	lea	ecx, DWORD PTR $T276718[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$104:
	lea	ecx, DWORD PTR _kOpinion$235918[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$105:
	lea	ecx, DWORD PTR $T276719[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$106:
	lea	ecx, DWORD PTR _kOpinion$235922[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$107:
	lea	ecx, DWORD PTR $T276720[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$108:
	lea	ecx, DWORD PTR _kOpinion$235926[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$109:
	lea	ecx, DWORD PTR $T276721[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$110:
	lea	ecx, DWORD PTR _kOpinion$235930[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$111:
	lea	ecx, DWORD PTR $T276722[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$112:
	lea	ecx, DWORD PTR _str$235933[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$113:
	lea	ecx, DWORD PTR $T276723[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$114:
	lea	ecx, DWORD PTR $T276724[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$115:
	lea	ecx, DWORD PTR $T276725[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$116:
	lea	ecx, DWORD PTR $T276726[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$117:
	lea	ecx, DWORD PTR $T276727[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$118:
	lea	ecx, DWORD PTR _kOpinion$235951[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$119:
	lea	ecx, DWORD PTR _kOpinion$235953[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$120:
	lea	ecx, DWORD PTR $T276728[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$121:
	lea	ecx, DWORD PTR _kOpinion$235957[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$122:
	lea	ecx, DWORD PTR $T276729[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$123:
	lea	ecx, DWORD PTR _kOpinion$235961[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$124:
	lea	ecx, DWORD PTR $T276730[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$125:
	lea	ecx, DWORD PTR _kOpinion$235965[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$126:
	lea	ecx, DWORD PTR $T276731[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$127:
	lea	ecx, DWORD PTR _kOpinion$235969[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$128:
	lea	ecx, DWORD PTR $T276732[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$129:
	lea	ecx, DWORD PTR _kOpinion$235973[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$130:
	lea	ecx, DWORD PTR $T276733[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$131:
	lea	ecx, DWORD PTR _kOpinion$235977[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$132:
	lea	ecx, DWORD PTR $T276734[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$133:
	lea	ecx, DWORD PTR _kOpinion$235981[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$134:
	lea	ecx, DWORD PTR $T276735[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$135:
	lea	ecx, DWORD PTR $T276736[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$136:
	lea	ecx, DWORD PTR _kOpinion$235990[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$137:
	lea	ecx, DWORD PTR $T276737[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$138:
	lea	ecx, DWORD PTR _kOpinion$235994[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$139:
	lea	ecx, DWORD PTR $T276738[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$140:
	lea	ecx, DWORD PTR _kOpinion$235998[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$141:
	lea	ecx, DWORD PTR $T276739[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$142:
	lea	ecx, DWORD PTR _kOpinion$236002[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$143:
	lea	ecx, DWORD PTR $T276740[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$144:
	lea	ecx, DWORD PTR _kOpinion$236006[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$145:
	lea	ecx, DWORD PTR $T276741[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$146:
	lea	ecx, DWORD PTR _kOpinion$236010[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$147:
	lea	ecx, DWORD PTR $T276742[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$148:
	lea	ecx, DWORD PTR _kOpinion$236014[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$149:
	lea	ecx, DWORD PTR $T276743[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$150:
	lea	ecx, DWORD PTR _kOpinion$236018[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$151:
	lea	ecx, DWORD PTR $T276744[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$152:
	lea	ecx, DWORD PTR _kOpinion$236022[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$153:
	lea	ecx, DWORD PTR $T276745[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$154:
	lea	ecx, DWORD PTR _kOpinion$236026[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$155:
	lea	ecx, DWORD PTR $T276746[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$156:
	lea	ecx, DWORD PTR _kOpinion$236030[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$157:
	lea	ecx, DWORD PTR $T276747[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$158:
	lea	ecx, DWORD PTR _kOpinion$236034[ebp]
	jmp	??1Opinion@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$159:
	lea	ecx, DWORD PTR $T276748[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$160:
	lea	ecx, DWORD PTR _strOutput$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$161:
	lea	ecx, DWORD PTR _strEndColor$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$162:
	lea	ecx, DWORD PTR _strColorPrefix$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$163:
	lea	ecx, DWORD PTR _strColorSuffix$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$164:
	lea	ecx, DWORD PTR _strFullPositiveColor$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$165:
	lea	ecx, DWORD PTR _strPartialPositiveColor$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$166:
	lea	ecx, DWORD PTR _strNeutralColor$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$167:
	lea	ecx, DWORD PTR _strPartialNegativeColor$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z$168:
	lea	ecx, DWORD PTR _strFullNegativeColor$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::lGetOpinionTable
PUBLIC	?PushMethods@CvLuaPlayer@@SAXPAUlua_State@@H@Z	; CvLuaPlayer::PushMethods
; Function compile flags: /Ogtpy
;	COMDAT ?PushMethods@CvLuaPlayer@@SAXPAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
?PushMethods@CvLuaPlayer@@SAXPAUlua_State@@H@Z PROC	; CvLuaPlayer::PushMethods, COMDAT

; 46   : {

	push	esi

; 47   : 	Method(InitCity);

	mov	esi, DWORD PTR _L$[esp]
	push	edi
	push	0
	push	OFFSET ?lInitCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lInitCity
	push	esi
	call	_lua_pushcclosure
	mov	edi, DWORD PTR _t$[esp+16]
	push	OFFSET $SG226963
	push	edi
	push	esi
	call	_lua_setfield

; 48   : 	Method(AcquireCity);

	push	0
	push	OFFSET ?lAcquireCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lAcquireCity
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG226964
	push	edi
	push	esi
	call	_lua_setfield

; 49   : 	Method(KillCities);

	push	0
	push	OFFSET ?lKillCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lKillCities
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG226965
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 50   : 
; 51   : 	Method(GetNewCityName);

	push	0
	push	OFFSET ?lGetNewCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNewCityName
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG226966
	push	edi
	push	esi
	call	_lua_setfield

; 52   : 
; 53   : 	Method(InitUnit);

	push	0
	push	OFFSET ?lInitUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lInitUnit
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG226967
	push	edi
	push	esi
	call	_lua_setfield

; 54   : 	Method(InitUnitWithNameOffset);

	push	0
	push	OFFSET ?lInitUnitWithNameOffset@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lInitUnitWithNameOffset
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG226968
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 55   : 	Method(DisbandUnit);

	push	0
	push	OFFSET ?lDisbandUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lDisbandUnit
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG226969
	push	edi
	push	esi
	call	_lua_setfield

; 56   : 	Method(AddFreeUnit);

	push	0
	push	OFFSET ?lAddFreeUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lAddFreeUnit
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG226970
	push	edi
	push	esi
	call	_lua_setfield

; 57   : 
; 58   : 	Method(ChooseTech);

	push	0
	push	OFFSET ?lChooseTech@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChooseTech
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG226971
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 59   : 
; 60   : 	Method(KillUnits);

	push	0
	push	OFFSET ?lKillUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lKillUnits
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG226972
	push	edi
	push	esi
	call	_lua_setfield

; 61   : 	Method(IsHuman);

	push	0
	push	OFFSET ?lIsHuman@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsHuman
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG226973
	push	edi
	push	esi
	call	_lua_setfield

; 62   : 	Method(IsBarbarian);

	push	0
	push	OFFSET ?lIsBarbarian@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsBarbarian
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG226974
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 63   : 	Method(GetName);

	push	0
	push	OFFSET ?lGetName@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetName
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG226975
	push	edi
	push	esi
	call	_lua_setfield

; 64   : 	Method(GetNameKey);

	push	0
	push	OFFSET ?lGetNameKey@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNameKey
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG226976
	push	edi
	push	esi
	call	_lua_setfield

; 65   : 	Method(GetNickName);

	push	0
	push	OFFSET ?lGetNickName@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNickName
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG226977
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 66   : 	Method(GetCivilizationDescription);

	push	0
	push	OFFSET ?lGetCivilizationDescription@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCivilizationDescription
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG226978
	push	edi
	push	esi
	call	_lua_setfield

; 67   : 	Method(GetCivilizationDescriptionKey);

	push	0
	push	OFFSET ?lGetCivilizationDescriptionKey@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCivilizationDescriptionKey
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG226979
	push	edi
	push	esi
	call	_lua_setfield

; 68   : 	Method(GetCivilizationShortDescription);

	push	0
	push	OFFSET ?lGetCivilizationShortDescription@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCivilizationShortDescription
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG226980
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 69   : 	Method(GetCivilizationShortDescriptionKey);

	push	0
	push	OFFSET ?lGetCivilizationShortDescriptionKey@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCivilizationShortDescriptionKey
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG226981
	push	edi
	push	esi
	call	_lua_setfield

; 70   : 	Method(GetCivilizationAdjective);

	push	0
	push	OFFSET ?lGetCivilizationAdjective@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCivilizationAdjective
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG226982
	push	edi
	push	esi
	call	_lua_setfield

; 71   : 	Method(GetCivilizationAdjectiveKey);

	push	0
	push	OFFSET ?lGetCivilizationAdjectiveKey@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCivilizationAdjectiveKey
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG226983
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 72   : 	Method(IsWhiteFlag);

	push	0
	push	OFFSET ?lIsWhiteFlag@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsWhiteFlag
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG226984
	push	edi
	push	esi
	call	_lua_setfield

; 73   : 	Method(GetStateReligionName);

	push	0
	push	OFFSET ?lGetStateReligionName@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetStateReligionName
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG226985
	push	edi
	push	esi
	call	_lua_setfield

; 74   : 	Method(GetStateReligionKey);

	push	0
	push	OFFSET ?lGetStateReligionKey@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetStateReligionKey
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG226986
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 75   : 	Method(GetWorstEnemyName);

	push	0
	push	OFFSET ?lGetWorstEnemyName@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetWorstEnemyName
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG226987
	push	edi
	push	esi
	call	_lua_setfield

; 76   : 	Method(GetArtStyleType);

	push	0
	push	OFFSET ?lGetArtStyleType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetArtStyleType
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG226988
	push	edi
	push	esi
	call	_lua_setfield

; 77   : 
; 78   : 	Method(CountCityFeatures);

	push	0
	push	OFFSET ?lCountCityFeatures@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCountCityFeatures
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG226989
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 79   : 	Method(CountNumBuildings);

	push	0
	push	OFFSET ?lCountNumBuildings@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCountNumBuildings
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG226990
	push	edi
	push	esi
	call	_lua_setfield

; 80   : 
; 81   : 	Method(GetNumWorldWonders);

	push	0
	push	OFFSET ?lGetNumWorldWonders@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumWorldWonders
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG226991
	push	edi
	push	esi
	call	_lua_setfield

; 82   : 	Method(ChangeNumWorldWonders);

	push	0
	push	OFFSET ?lChangeNumWorldWonders@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNumWorldWonders
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG226992
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 83   : 	Method(GetNumWondersBeatenTo);

	push	0
	push	OFFSET ?lGetNumWondersBeatenTo@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumWondersBeatenTo
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG226993
	push	edi
	push	esi
	call	_lua_setfield

; 84   : 	Method(SetNumWondersBeatenTo);

	push	0
	push	OFFSET ?lSetNumWondersBeatenTo@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetNumWondersBeatenTo
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG226994
	push	edi
	push	esi
	call	_lua_setfield

; 85   : 
; 86   : 	Method(IsCapitalConnectedToCity);

	push	0
	push	OFFSET ?lIsCapitalConnectedToCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsCapitalConnectedToCity
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG226995
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 87   : 
; 88   : 	Method(IsTurnActive);

	push	0
	push	OFFSET ?lIsTurnActive@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsTurnActive
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG226996
	push	edi
	push	esi
	call	_lua_setfield

; 89   : 	Method(IsSimultaneousTurns);

	push	0
	push	OFFSET ?lIsSimultaneousTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsSimultaneousTurns
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG226997
	push	edi
	push	esi
	call	_lua_setfield

; 90   : 
; 91   : 	Method(FindNewCapital);

	push	0
	push	OFFSET ?lFindNewCapital@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lFindNewCapital
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG226998
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 92   : 	Method(CanRaze);

	push	0
	push	OFFSET ?lCanRaze@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanRaze
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG226999
	push	edi
	push	esi
	call	_lua_setfield

; 93   : 	Method(Raze);

	push	0
	push	OFFSET ?lRaze@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lRaze
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227000
	push	edi
	push	esi
	call	_lua_setfield

; 94   : 	Method(Disband);

	push	0
	push	OFFSET ?lDisband@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lDisband
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227001
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 95   : 
; 96   : 	Method(CanReceiveGoody);

	push	0
	push	OFFSET ?lCanReceiveGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanReceiveGoody
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227002
	push	edi
	push	esi
	call	_lua_setfield

; 97   : 	Method(ReceiveGoody);

	push	0
	push	OFFSET ?lReceiveGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lReceiveGoody
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227003
	push	edi
	push	esi
	call	_lua_setfield

; 98   : 	Method(DoGoody);

	push	0
	push	OFFSET ?lDoGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lDoGoody
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227004
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 99   : 	Method(CanGetGoody);

	push	0
	push	OFFSET ?lCanGetGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanGetGoody
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227005
	push	edi
	push	esi
	call	_lua_setfield

; 100  : 
; 101  : 	Method(CanFound);

	push	0
	push	OFFSET ?lCanFound@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanFound
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227006
	push	edi
	push	esi
	call	_lua_setfield

; 102  : 	Method(Found);

	push	0
	push	OFFSET ?lFound@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lFound
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227007
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 103  : 
; 104  : 	Method(CanTrain);

	push	0
	push	OFFSET ?lCanTrain@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanTrain
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227008
	push	edi
	push	esi
	call	_lua_setfield

; 105  : 	Method(CanConstruct);

	push	0
	push	OFFSET ?lCanConstruct@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanConstruct
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227009
	push	edi
	push	esi
	call	_lua_setfield

; 106  : 	Method(CanCreate);

	push	0
	push	OFFSET ?lCanCreate@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanCreate
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227010
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 107  : 	Method(CanPrepare);

	push	0
	push	OFFSET ?lCanPrepare@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanPrepare
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227011
	push	edi
	push	esi
	call	_lua_setfield

; 108  : 	Method(CanMaintain);

	push	0
	push	OFFSET ?lCanMaintain@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanMaintain
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227012
	push	edi
	push	esi
	call	_lua_setfield

; 109  : 
; 110  : 	Method(IsCanPurchaseAnyCity);

	push	0
	push	OFFSET ?lIsCanPurchaseAnyCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsCanPurchaseAnyCity
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227013
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 111  : 	Method(GetFaithPurchaseType);

	push	0
	push	OFFSET ?lGetFaithPurchaseType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFaithPurchaseType
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227014
	push	edi
	push	esi
	call	_lua_setfield

; 112  : 	Method(SetFaithPurchaseType);

	push	0
	push	OFFSET ?lSetFaithPurchaseType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetFaithPurchaseType
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227015
	push	edi
	push	esi
	call	_lua_setfield

; 113  : 	Method(GetFaithPurchaseIndex);

	push	0
	push	OFFSET ?lGetFaithPurchaseIndex@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFaithPurchaseIndex
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227016
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 114  : 	Method(SetFaithPurchaseIndex);

	push	0
	push	OFFSET ?lSetFaithPurchaseIndex@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetFaithPurchaseIndex
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227017
	push	edi
	push	esi
	call	_lua_setfield

; 115  : 
; 116  : 	Method(IsProductionMaxedUnitClass);

	push	0
	push	OFFSET ?lIsProductionMaxedUnitClass@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsProductionMaxedUnitClass
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227018
	push	edi
	push	esi
	call	_lua_setfield

; 117  : 	Method(IsProductionMaxedBuildingClass);

	push	0
	push	OFFSET ?lIsProductionMaxedBuildingClass@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsProductionMaxedBuildingClass
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227019
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 118  : 	Method(IsProductionMaxedProject);

	push	0
	push	OFFSET ?lIsProductionMaxedProject@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsProductionMaxedProject
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227020
	push	edi
	push	esi
	call	_lua_setfield

; 119  : 	Method(GetUnitProductionNeeded);

	push	0
	push	OFFSET ?lGetUnitProductionNeeded@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnitProductionNeeded
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227021
	push	edi
	push	esi
	call	_lua_setfield

; 120  : 	Method(GetBuildingProductionNeeded);

	push	0
	push	OFFSET ?lGetBuildingProductionNeeded@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBuildingProductionNeeded
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227022
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 121  : 	Method(GetProjectProductionNeeded);

	push	0
	push	OFFSET ?lGetProjectProductionNeeded@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetProjectProductionNeeded
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227023
	push	edi
	push	esi
	call	_lua_setfield

; 122  : 
; 123  : 	Method(HasReadyUnit);

	push	0
	push	OFFSET ?lHasReadyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasReadyUnit
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227024
	push	edi
	push	esi
	call	_lua_setfield

; 124  : 	Method(GetFirstReadyUnit);

	push	0
	push	OFFSET ?lGetFirstReadyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFirstReadyUnit
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227025
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 125  : 	Method(GetFirstReadyUnitPlot);

	push	0
	push	OFFSET ?lGetFirstReadyUnitPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFirstReadyUnitPlot
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227026
	push	edi
	push	esi
	call	_lua_setfield

; 126  : 
; 127  : 	Method(HasBusyUnit);

	push	0
	push	OFFSET ?lHasBusyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasBusyUnit
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227027
	push	edi
	push	esi
	call	_lua_setfield

; 128  : 	Method(HasBusyMovingUnit);

	push	0
	push	OFFSET ?lHasBusyMovingUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasBusyMovingUnit
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227028
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 129  : 
; 130  : 	Method(GetBuildingClassPrereqBuilding);

	push	0
	push	OFFSET ?lGetBuildingClassPrereqBuilding@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBuildingClassPrereqBuilding
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227029
	push	edi
	push	esi
	call	_lua_setfield

; 131  : 
; 132  : 	Method(RemoveBuildingClass);

	push	0
	push	OFFSET ?lRemoveBuildingClass@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lRemoveBuildingClass
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227030
	push	edi
	push	esi
	call	_lua_setfield

; 133  : 
; 134  : 	Method(CanBuild);

	push	0
	push	OFFSET ?lCanBuild@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanBuild
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227031
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 135  : 	Method(IsBuildBlockedByFeature);

	push	0
	push	OFFSET ?lIsBuildBlockedByFeature@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsBuildBlockedByFeature
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227032
	push	edi
	push	esi
	call	_lua_setfield

; 136  : 	Method(GetBestRoute);

	push	0
	push	OFFSET ?lGetBestRoute@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBestRoute
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227033
	push	edi
	push	esi
	call	_lua_setfield

; 137  : 	Method(GetImprovementUpgradeRate);

	push	0
	push	OFFSET ?lGetImprovementUpgradeRate@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetImprovementUpgradeRate
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227034
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 138  : 
; 139  : 	Method(CalculateTotalYield);

	push	0
	push	OFFSET ?lCalculateTotalYield@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCalculateTotalYield
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227035
	push	edi
	push	esi
	call	_lua_setfield

; 140  : 
; 141  : 	Method(CalculateUnitCost);

	push	0
	push	OFFSET ?lCalculateUnitCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCalculateUnitCost
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227036
	push	edi
	push	esi
	call	_lua_setfield

; 142  : 	Method(CalculateUnitSupply);

	push	0
	push	OFFSET ?lCalculateUnitSupply@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCalculateUnitSupply
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227037
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 143  : 
; 144  : 	Method(GetNumMaintenanceFreeUnits);

	push	0
	push	OFFSET ?lGetNumMaintenanceFreeUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumMaintenanceFreeUnits
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227038
	push	edi
	push	esi
	call	_lua_setfield

; 145  : 
; 146  : 	Method(GetBuildingGoldMaintenance);

	push	0
	push	OFFSET ?lGetBuildingGoldMaintenance@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBuildingGoldMaintenance
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227039
	push	edi
	push	esi
	call	_lua_setfield

; 147  : 	Method(SetBaseBuildingGoldMaintenance);

	push	0
	push	OFFSET ?lSetBaseBuildingGoldMaintenance@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetBaseBuildingGoldMaintenance
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227040
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 148  : 	Method(ChangeBaseBuildingGoldMaintenance);

	push	0
	push	OFFSET ?lChangeBaseBuildingGoldMaintenance@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeBaseBuildingGoldMaintenance
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227041
	push	edi
	push	esi
	call	_lua_setfield

; 149  : 
; 150  : 	Method(GetImprovementGoldMaintenance);

	push	0
	push	OFFSET ?lGetImprovementGoldMaintenance@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetImprovementGoldMaintenance
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227042
	push	edi
	push	esi
	call	_lua_setfield

; 151  : 	Method(CalculateGoldRate);

	push	0
	push	OFFSET ?lCalculateGoldRate@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCalculateGoldRate
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227043
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 152  : 	Method(CalculateGoldRateTimes100);

	push	0
	push	OFFSET ?lCalculateGoldRateTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCalculateGoldRateTimes100
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227044
	push	edi
	push	esi
	call	_lua_setfield

; 153  : 	Method(CalculateGrossGoldTimes100);

	push	0
	push	OFFSET ?lCalculateGrossGoldTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCalculateGrossGoldTimes100
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227045
	push	edi
	push	esi
	call	_lua_setfield

; 154  : 	Method(CalculateInflatedCosts);

	push	0
	push	OFFSET ?lCalculateInflatedCosts@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCalculateInflatedCosts
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227046
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 155  : 	Method(CalculateResearchModifier);

	push	0
	push	OFFSET ?lCalculateResearchModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCalculateResearchModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227047
	push	edi
	push	esi
	call	_lua_setfield

; 156  : 	Method(IsResearch);

	push	0
	push	OFFSET ?lIsResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsResearch
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227048
	push	edi
	push	esi
	call	_lua_setfield

; 157  : 	Method(CanEverResearch);

	push	0
	push	OFFSET ?lCanEverResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanEverResearch
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227049
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 158  : 	Method(CanResearch);

	push	0
	push	OFFSET ?lCanResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanResearch
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227050
	push	edi
	push	esi
	call	_lua_setfield

; 159  : 	Method(CanResearchForFree);

	push	0
	push	OFFSET ?lCanResearchForFree@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanResearchForFree
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227051
	push	edi
	push	esi
	call	_lua_setfield

; 160  : 	Method(GetCurrentResearch);

	push	0
	push	OFFSET ?lGetCurrentResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCurrentResearch
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227052
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 161  : 	Method(IsCurrentResearchRepeat);

	push	0
	push	OFFSET ?lIsCurrentResearchRepeat@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsCurrentResearchRepeat
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227053
	push	edi
	push	esi
	call	_lua_setfield

; 162  : 	Method(IsNoResearchAvailable);

	push	0
	push	OFFSET ?lIsNoResearchAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsNoResearchAvailable
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227054
	push	edi
	push	esi
	call	_lua_setfield

; 163  : 	Method(GetResearchTurnsLeft);

	push	0
	push	OFFSET ?lGetResearchTurnsLeft@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetResearchTurnsLeft
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227055
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 164  : 	Method(GetResearchCost);

	push	0
	push	OFFSET ?lGetResearchCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetResearchCost
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227056
	push	edi
	push	esi
	call	_lua_setfield

; 165  : 	Method(GetResearchProgress);

	push	0
	push	OFFSET ?lGetResearchProgress@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetResearchProgress
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227057
	push	edi
	push	esi
	call	_lua_setfield

; 166  : 
; 167  : 	Method(UnitsRequiredForGoldenAge);

	push	0
	push	OFFSET ?lUnitsRequiredForGoldenAge@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lUnitsRequiredForGoldenAge
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227058
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 168  : 	Method(UnitsGoldenAgeCapable);

	push	0
	push	OFFSET ?lUnitsGoldenAgeCapable@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lUnitsGoldenAgeCapable
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227059
	push	edi
	push	esi
	call	_lua_setfield

; 169  : 	Method(UnitsGoldenAgeReady);

	push	0
	push	OFFSET ?lUnitsGoldenAgeReady@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lUnitsGoldenAgeReady
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227060
	push	edi
	push	esi
	call	_lua_setfield

; 170  : 	Method(GreatGeneralThreshold);

	push	0
	push	OFFSET ?lGreatGeneralThreshold@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGreatGeneralThreshold
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227061
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 171  : 	Method(GreatAdmiralThreshold);

	push	0
	push	OFFSET ?lGreatAdmiralThreshold@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGreatAdmiralThreshold
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227062
	push	edi
	push	esi
	call	_lua_setfield

; 172  : 	Method(SpecialistYield);

	push	0
	push	OFFSET ?lSpecialistYield@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSpecialistYield
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227063
	push	edi
	push	esi
	call	_lua_setfield

; 173  : 	Method(SetGreatGeneralCombatBonus);

	push	0
	push	OFFSET ?lSetGreatGeneralCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetGreatGeneralCombatBonus
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227064
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 174  : 	Method(GetGreatGeneralCombatBonus);

	push	0
	push	OFFSET ?lGetGreatGeneralCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatGeneralCombatBonus
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227065
	push	edi
	push	esi
	call	_lua_setfield

; 175  : 
; 176  : 	Method(GetStartingPlot);

	push	0
	push	OFFSET ?lGetStartingPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetStartingPlot
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227066
	push	edi
	push	esi
	call	_lua_setfield

; 177  : 	Method(SetStartingPlot);

	push	0
	push	OFFSET ?lSetStartingPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetStartingPlot
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227067
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 178  : 	Method(GetTotalPopulation);

	push	0
	push	OFFSET ?lGetTotalPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTotalPopulation
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227068
	push	edi
	push	esi
	call	_lua_setfield

; 179  : 	Method(GetAveragePopulation);

	push	0
	push	OFFSET ?lGetAveragePopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAveragePopulation
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227069
	push	edi
	push	esi
	call	_lua_setfield

; 180  : 	Method(GetRealPopulation);

	push	0
	push	OFFSET ?lGetRealPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetRealPopulation
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227070
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 181  : 
; 182  : 	Method(GetNewCityExtraPopulation);

	push	0
	push	OFFSET ?lGetNewCityExtraPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNewCityExtraPopulation
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227071
	push	edi
	push	esi
	call	_lua_setfield

; 183  : 	Method(ChangeNewCityExtraPopulation);

	push	0
	push	OFFSET ?lChangeNewCityExtraPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNewCityExtraPopulation
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227072
	push	edi
	push	esi
	call	_lua_setfield

; 184  : 
; 185  : 	Method(GetTotalLand);

	push	0
	push	OFFSET ?lGetTotalLand@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTotalLand
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227073
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 186  : 	Method(GetTotalLandScored);

	push	0
	push	OFFSET ?lGetTotalLandScored@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTotalLandScored
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227074
	push	edi
	push	esi
	call	_lua_setfield

; 187  : 
; 188  : 	Method(GetGold);

	push	0
	push	OFFSET ?lGetGold@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGold
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227075
	push	edi
	push	esi
	call	_lua_setfield

; 189  : 	Method(SetGold);

	push	0
	push	OFFSET ?lSetGold@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetGold
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227076
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 190  : 	Method(ChangeGold);

	push	0
	push	OFFSET ?lChangeGold@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeGold
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227077
	push	edi
	push	esi
	call	_lua_setfield

; 191  : 	Method(CalculateGrossGold);

	push	0
	push	OFFSET ?lCalculateGrossGold@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCalculateGrossGold
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227078
	push	edi
	push	esi
	call	_lua_setfield

; 192  : 	Method(GetLifetimeGrossGold);

	push	0
	push	OFFSET ?lGetLifetimeGrossGold@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetLifetimeGrossGold
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227079
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 193  : 	Method(GetGoldFromCitiesTimes100);

	push	0
	push	OFFSET ?lGetGoldFromCitiesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldFromCitiesTimes100
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227080
	push	edi
	push	esi
	call	_lua_setfield

; 194  : 	Method(GetGoldFromCitiesMinusTradeRoutesTimes100);

	push	0
	push	OFFSET ?lGetGoldFromCitiesMinusTradeRoutesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldFromCitiesMinusTradeRoutesTimes100
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227081
	push	edi
	push	esi
	call	_lua_setfield

; 195  : 	Method(GetGoldPerTurnFromDiplomacy);

	push	0
	push	OFFSET ?lGetGoldPerTurnFromDiplomacy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldPerTurnFromDiplomacy
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227082
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 196  : 	Method(GetCityConnectionRouteGoldTimes100);

	push	0
	push	OFFSET ?lGetCityConnectionRouteGoldTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCityConnectionRouteGoldTimes100
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227083
	push	edi
	push	esi
	call	_lua_setfield

; 197  : 	Method(GetCityConnectionGold);

	push	0
	push	OFFSET ?lGetCityConnectionGold@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCityConnectionGold
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227084
	push	edi
	push	esi
	call	_lua_setfield

; 198  : 	Method(GetCityConnectionGoldTimes100);

	push	0
	push	OFFSET ?lGetCityConnectionGoldTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCityConnectionGoldTimes100
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227085
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 199  : 	Method(GetGoldPerTurnFromReligion);

	push	0
	push	OFFSET ?lGetGoldPerTurnFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldPerTurnFromReligion
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227086
	push	edi
	push	esi
	call	_lua_setfield

; 200  : 	Method(GetGoldPerTurnFromTradeRoutes);

	push	0
	push	OFFSET ?lGetGoldPerTurnFromTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldPerTurnFromTradeRoutes
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227087
	push	edi
	push	esi
	call	_lua_setfield

; 201  : 	Method(GetGoldPerTurnFromTradeRoutesTimes100);

	push	0
	push	OFFSET ?lGetGoldPerTurnFromTradeRoutesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldPerTurnFromTradeRoutesTimes100
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227088
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 202  : 	Method(GetGoldPerTurnFromTraits);

	push	0
	push	OFFSET ?lGetGoldPerTurnFromTraits@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldPerTurnFromTraits
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227089
	push	edi
	push	esi
	call	_lua_setfield

; 203  : 
; 204  : 	// Culture
; 205  : 
; 206  : #ifdef AUI_PLAYER_FIX_JONS_CULTURE_IS_T100
; 207  : 	Method(GetTotalJONSCulturePerTurnTimes100);

	push	0
	push	OFFSET ?lGetTotalJONSCulturePerTurnTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTotalJONSCulturePerTurnTimes100
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227090
	push	edi
	push	esi
	call	_lua_setfield

; 208  : 
; 209  : 	Method(GetJONSCulturePerTurnFromCitiesTimes100);

	push	0
	push	OFFSET ?lGetJONSCulturePerTurnFromCitiesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetJONSCulturePerTurnFromCitiesTimes100
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227091
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 210  : 
; 211  : 	Method(GetJONSCulturePerTurnFromExcessHappinessTimes100);

	push	0
	push	OFFSET ?lGetJONSCulturePerTurnFromExcessHappinessTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetJONSCulturePerTurnFromExcessHappinessTimes100
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227092
	push	edi
	push	esi
	call	_lua_setfield

; 212  : 	Method(GetCulturePerTurnFromReligionTimes100);

	push	0
	push	OFFSET ?lGetCulturePerTurnFromReligionTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCulturePerTurnFromReligionTimes100
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227093
	push	edi
	push	esi
	call	_lua_setfield

; 213  : 	Method(GetCulturePerTurnFromBonusTurnsTimes100);

	push	0
	push	OFFSET ?lGetCulturePerTurnFromBonusTurnsTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCulturePerTurnFromBonusTurnsTimes100
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227094
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 214  : 
; 215  : 	Method(GetJONSCultureTimes100);

	push	0
	push	OFFSET ?lGetJONSCultureTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetJONSCultureTimes100
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227095
	push	edi
	push	esi
	call	_lua_setfield

; 216  : 	Method(SetJONSCultureTimes100);

	push	0
	push	OFFSET ?lSetJONSCultureTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetJONSCultureTimes100
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227096
	push	edi
	push	esi
	call	_lua_setfield

; 217  : 	Method(ChangeJONSCultureTimes100);

	push	0
	push	OFFSET ?lChangeJONSCultureTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeJONSCultureTimes100
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227097
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 218  : 
; 219  : 	Method(GetJONSCultureEverGeneratedTimes100);

	push	0
	push	OFFSET ?lGetJONSCultureEverGeneratedTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetJONSCultureEverGeneratedTimes100
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227098
	push	edi
	push	esi
	call	_lua_setfield

; 220  : #endif
; 221  : 
; 222  : 	Method(GetTotalJONSCulturePerTurn);

	push	0
	push	OFFSET ?lGetTotalJONSCulturePerTurn@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTotalJONSCulturePerTurn
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227099
	push	edi
	push	esi
	call	_lua_setfield

; 223  : 
; 224  : 	Method(GetJONSCulturePerTurnFromCities);

	push	0
	push	OFFSET ?lGetJONSCulturePerTurnFromCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetJONSCulturePerTurnFromCities
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227100
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 225  : 
; 226  : 	Method(GetJONSCulturePerTurnFromExcessHappiness);

	push	0
	push	OFFSET ?lGetJONSCulturePerTurnFromExcessHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetJONSCulturePerTurnFromExcessHappiness
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227101
	push	edi
	push	esi
	call	_lua_setfield

; 227  : 	Method(GetJONSCulturePerTurnFromTraits);

	push	0
	push	OFFSET ?lGetJONSCulturePerTurnFromTraits@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetJONSCulturePerTurnFromTraits
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227102
	push	edi
	push	esi
	call	_lua_setfield

; 228  : 
; 229  : 	Method(GetCultureWonderMultiplier);

	push	0
	push	OFFSET ?lGetCultureWonderMultiplier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCultureWonderMultiplier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227103
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 230  : 
; 231  : 	Method(GetJONSCulturePerTurnForFree);

	push	0
	push	OFFSET ?lGetJONSCulturePerTurnForFree@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetJONSCulturePerTurnForFree
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227104
	push	edi
	push	esi
	call	_lua_setfield

; 232  : 	Method(ChangeJONSCulturePerTurnForFree);

	push	0
	push	OFFSET ?lChangeJONSCulturePerTurnForFree@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeJONSCulturePerTurnForFree
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227105
	push	edi
	push	esi
	call	_lua_setfield

; 233  : 
; 234  : 	Method(GetJONSCulturePerTurnFromMinorCivs);

	push	0
	push	OFFSET ?lGetJONSCulturePerTurnFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetJONSCulturePerTurnFromMinorCivs
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227106
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 235  : 	Method(ChangeJONSCulturePerTurnFromMinorCivs);

	push	0
	push	OFFSET ?lChangeJONSCulturePerTurnFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeJONSCulturePerTurnFromMinorCivs
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227107
	push	edi
	push	esi
	call	_lua_setfield

; 236  : 	Method(GetCulturePerTurnFromMinorCivs);

	push	0
	push	OFFSET ?lGetCulturePerTurnFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCulturePerTurnFromMinorCivs
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227108
	push	edi
	push	esi
	call	_lua_setfield

; 237  : 	Method(GetCulturePerTurnFromMinor);

	push	0
	push	OFFSET ?lGetCulturePerTurnFromMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCulturePerTurnFromMinor
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227109
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 238  : 
; 239  : 	Method(GetCulturePerTurnFromReligion);

	push	0
	push	OFFSET ?lGetCulturePerTurnFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCulturePerTurnFromReligion
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227110
	push	edi
	push	esi
	call	_lua_setfield

; 240  : 	Method(GetCulturePerTurnFromBonusTurns);

	push	0
	push	OFFSET ?lGetCulturePerTurnFromBonusTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCulturePerTurnFromBonusTurns
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227111
	push	edi
	push	esi
	call	_lua_setfield

; 241  : 	Method(GetCultureCityModifier);

	push	0
	push	OFFSET ?lGetCultureCityModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCultureCityModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227112
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 242  : 
; 243  : 	Method(GetJONSCulture);

	push	0
	push	OFFSET ?lGetJONSCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetJONSCulture
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227113
	push	edi
	push	esi
	call	_lua_setfield

; 244  : 	Method(SetJONSCulture);

	push	0
	push	OFFSET ?lSetJONSCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetJONSCulture
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227114
	push	edi
	push	esi
	call	_lua_setfield

; 245  : 	Method(ChangeJONSCulture);

	push	0
	push	OFFSET ?lChangeJONSCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeJONSCulture
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227115
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 246  : 
; 247  : 	Method(GetJONSCultureEverGenerated);

	push	0
	push	OFFSET ?lGetJONSCultureEverGenerated@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetJONSCultureEverGenerated
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227116
	push	edi
	push	esi
	call	_lua_setfield

; 248  : 
; 249  : 	Method(GetLastTurnLifetimeCulture);

	push	0
	push	OFFSET ?lGetLastTurnLifetimeCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetLastTurnLifetimeCulture
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227117
	push	edi
	push	esi
	call	_lua_setfield

; 250  : 	Method(GetInfluenceOn);

	push	0
	push	OFFSET ?lGetInfluenceOn@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInfluenceOn
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227118
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 251  : 	Method(GetLastTurnInfluenceOn);

	push	0
	push	OFFSET ?lGetLastTurnInfluenceOn@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetLastTurnInfluenceOn
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227119
	push	edi
	push	esi
	call	_lua_setfield

; 252  : 	Method(GetInfluencePerTurn);

	push	0
	push	OFFSET ?lGetInfluencePerTurn@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInfluencePerTurn
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227120
	push	edi
	push	esi
	call	_lua_setfield

; 253  : 	Method(GetInfluenceLevel);

	push	0
	push	OFFSET ?lGetInfluenceLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInfluenceLevel
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227121
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 254  : 	Method(GetInfluenceTrend);

	push	0
	push	OFFSET ?lGetInfluenceTrend@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInfluenceTrend
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227122
	push	edi
	push	esi
	call	_lua_setfield

; 255  : 	Method(GetTurnsToInfluential);

	push	0
	push	OFFSET ?lGetTurnsToInfluential@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTurnsToInfluential
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227123
	push	edi
	push	esi
	call	_lua_setfield

; 256  : 	Method(GetNumCivsInfluentialOn);

	push	0
	push	OFFSET ?lGetNumCivsInfluentialOn@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumCivsInfluentialOn
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227124
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 257  : 	Method(GetNumCivsToBeInfluentialOn);

	push	0
	push	OFFSET ?lGetNumCivsToBeInfluentialOn@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumCivsToBeInfluentialOn
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227125
	push	edi
	push	esi
	call	_lua_setfield

; 258  : 	Method(GetInfluenceTradeRouteScienceBonus);

	push	0
	push	OFFSET ?lGetInfluenceTradeRouteScienceBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInfluenceTradeRouteScienceBonus
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227126
	push	edi
	push	esi
	call	_lua_setfield

; 259  : 	Method(GetInfluenceCityStateSpyRankBonus);

	push	0
	push	OFFSET ?lGetInfluenceCityStateSpyRankBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInfluenceCityStateSpyRankBonus
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227127
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 260  : 	Method(GetInfluenceMajorCivSpyRankBonus);

	push	0
	push	OFFSET ?lGetInfluenceMajorCivSpyRankBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInfluenceMajorCivSpyRankBonus
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227128
	push	edi
	push	esi
	call	_lua_setfield

; 261  : 	Method(GetInfluenceSpyRankTooltip);

	push	0
	push	OFFSET ?lGetInfluenceSpyRankTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInfluenceSpyRankTooltip
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227129
	push	edi
	push	esi
	call	_lua_setfield

; 262  : 	Method(GetTourism);

	push	0
	push	OFFSET ?lGetTourism@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTourism
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227130
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 263  : 	Method(GetTourismModifierWith);

	push	0
	push	OFFSET ?lGetTourismModifierWith@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTourismModifierWith
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227131
	push	edi
	push	esi
	call	_lua_setfield

; 264  : 	Method(GetTourismModifierWithTooltip);

	push	0
	push	OFFSET ?lGetTourismModifierWithTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTourismModifierWithTooltip
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227132
	push	edi
	push	esi
	call	_lua_setfield

; 265  : 	Method(GetPublicOpinionType);

	push	0
	push	OFFSET ?lGetPublicOpinionType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPublicOpinionType
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227133
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 266  : 	Method(GetPublicOpinionPreferredIdeology);

	push	0
	push	OFFSET ?lGetPublicOpinionPreferredIdeology@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPublicOpinionPreferredIdeology
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227134
	push	edi
	push	esi
	call	_lua_setfield

; 267  : 	Method(GetPublicOpinionTooltip);

	push	0
	push	OFFSET ?lGetPublicOpinionTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPublicOpinionTooltip
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227135
	push	edi
	push	esi
	call	_lua_setfield

; 268  : 	Method(GetPublicOpinionUnhappiness);

	push	0
	push	OFFSET ?lGetPublicOpinionUnhappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPublicOpinionUnhappiness
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227136
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 269  : 	Method(GetPublicOpinionUnhappinessTooltip);

	push	0
	push	OFFSET ?lGetPublicOpinionUnhappinessTooltip@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPublicOpinionUnhappinessTooltip
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227137
	push	edi
	push	esi
	call	_lua_setfield

; 270  : 
; 271  : 	Method(HasAvailableGreatWorkSlot);

	push	0
	push	OFFSET ?lHasAvailableGreatWorkSlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasAvailableGreatWorkSlot
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227138
	push	edi
	push	esi
	call	_lua_setfield

; 272  : 	Method(GetCityOfClosestGreatWorkSlot);

	push	0
	push	OFFSET ?lGetCityOfClosestGreatWorkSlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCityOfClosestGreatWorkSlot
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227139
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 273  : 	Method(GetBuildingOfClosestGreatWorkSlot);

	push	0
	push	OFFSET ?lGetBuildingOfClosestGreatWorkSlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBuildingOfClosestGreatWorkSlot
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227140
	push	edi
	push	esi
	call	_lua_setfield

; 274  : 	Method(GetNextDigCompletePlot);

	push	0
	push	OFFSET ?lGetNextDigCompletePlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNextDigCompletePlot
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227141
	push	edi
	push	esi
	call	_lua_setfield

; 275  : 	Method(GetWrittenArtifactCulture);

	push	0
	push	OFFSET ?lGetWrittenArtifactCulture@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetWrittenArtifactCulture
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227142
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 276  : 	Method(GetNumGreatWorks);

	push	0
	push	OFFSET ?lGetNumGreatWorks@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumGreatWorks
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227143
	push	edi
	push	esi
	call	_lua_setfield

; 277  : 	Method(GetNumGreatWorkSlots);

	push	0
	push	OFFSET ?lGetNumGreatWorkSlots@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumGreatWorkSlots
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227144
	push	edi
	push	esi
	call	_lua_setfield

; 278  : 
; 279  : 	// Faith
; 280  : 
; 281  : 	Method(GetFaith);

	push	0
	push	OFFSET ?lGetFaith@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFaith
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227145
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 282  : 	Method(SetFaith);

	push	0
	push	OFFSET ?lSetFaith@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetFaith
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227146
	push	edi
	push	esi
	call	_lua_setfield

; 283  : 	Method(ChangeFaith);

	push	0
	push	OFFSET ?lChangeFaith@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeFaith
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227147
	push	edi
	push	esi
	call	_lua_setfield

; 284  : 	Method(GetTotalFaithPerTurn);

	push	0
	push	OFFSET ?lGetTotalFaithPerTurn@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTotalFaithPerTurn
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227148
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 285  : 	Method(GetFaithPerTurnFromCities);

	push	0
	push	OFFSET ?lGetFaithPerTurnFromCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFaithPerTurnFromCities
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227149
	push	edi
	push	esi
	call	_lua_setfield

; 286  : 	Method(GetFaithPerTurnFromMinorCivs);

	push	0
	push	OFFSET ?lGetFaithPerTurnFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFaithPerTurnFromMinorCivs
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227150
	push	edi
	push	esi
	call	_lua_setfield

; 287  : 	Method(GetFaithPerTurnFromReligion);

	push	0
	push	OFFSET ?lGetFaithPerTurnFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFaithPerTurnFromReligion
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227151
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 288  : #ifdef NQ_BELIEF_TOGGLE_ALLOW_FAITH_GIFTS_TO_MINORS
; 289  : 	Method(CanFaithGiftMinors);

	push	0
	push	OFFSET ?lCanFaithGiftMinors@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanFaithGiftMinors
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227152
	push	edi
	push	esi
	call	_lua_setfield

; 290  : #endif
; 291  : 	Method(HasCreatedPantheon);

	push	0
	push	OFFSET ?lHasCreatedPantheon@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasCreatedPantheon
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227153
	push	edi
	push	esi
	call	_lua_setfield

; 292  : 	Method(GetBeliefInPantheon);

	push	0
	push	OFFSET ?lGetBeliefInPantheon@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBeliefInPantheon
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227154
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 293  : 	Method(HasCreatedReligion);

	push	0
	push	OFFSET ?lHasCreatedReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasCreatedReligion
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227155
	push	edi
	push	esi
	call	_lua_setfield

; 294  : 	Method(CanCreatePantheon);

	push	0
	push	OFFSET ?lCanCreatePantheon@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanCreatePantheon
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227156
	push	edi
	push	esi
	call	_lua_setfield

; 295  : 	Method(GetReligionCreatedByPlayer);

	push	0
	push	OFFSET ?lGetReligionCreatedByPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetReligionCreatedByPlayer
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227157
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 296  : 	Method(GetFoundedReligionEnemyCityCombatMod);

	push	0
	push	OFFSET ?lGetFoundedReligionEnemyCityCombatMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFoundedReligionEnemyCityCombatMod
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227158
	push	edi
	push	esi
	call	_lua_setfield

; 297  : 	Method(GetFoundedReligionFriendlyCityCombatMod);

	push	0
	push	OFFSET ?lGetFoundedReligionFriendlyCityCombatMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFoundedReligionFriendlyCityCombatMod
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227159
	push	edi
	push	esi
	call	_lua_setfield

; 298  : 	Method(GetMinimumFaithNextGreatProphet);

	push	0
	push	OFFSET ?lGetMinimumFaithNextGreatProphet@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinimumFaithNextGreatProphet
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227160
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 299  : 	Method(HasReligionInMostCities);

	push	0
	push	OFFSET ?lHasReligionInMostCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasReligionInMostCities
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227161
	push	edi
	push	esi
	call	_lua_setfield

; 300  : 	Method(DoesUnitPassFaithPurchaseCheck);

	push	0
	push	OFFSET ?lDoesUnitPassFaithPurchaseCheck@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lDoesUnitPassFaithPurchaseCheck
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227162
	push	edi
	push	esi
	call	_lua_setfield

; 301  : 
; 302  : 	// Happiness
; 303  : 
; 304  : 	Method(GetHappiness);

	push	0
	push	OFFSET ?lGetHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappiness
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227163
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 305  : 	Method(SetHappiness);

	push	0
	push	OFFSET ?lSetHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetHappiness
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227164
	push	edi
	push	esi
	call	_lua_setfield

; 306  : 
; 307  : 	Method(GetExcessHappiness);

	push	0
	push	OFFSET ?lGetExcessHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetExcessHappiness
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227165
	push	edi
	push	esi
	call	_lua_setfield

; 308  : 	Method(IsEmpireUnhappy);

	push	0
	push	OFFSET ?lIsEmpireUnhappy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsEmpireUnhappy
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227166
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 309  : 	Method(IsEmpireVeryUnhappy);

	push	0
	push	OFFSET ?lIsEmpireVeryUnhappy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsEmpireVeryUnhappy
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227167
	push	edi
	push	esi
	call	_lua_setfield

; 310  : 	Method(IsEmpireSuperUnhappy);

	push	0
	push	OFFSET ?lIsEmpireSuperUnhappy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsEmpireSuperUnhappy
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227168
	push	edi
	push	esi
	call	_lua_setfield

; 311  : 
; 312  : 	Method(GetHappinessFromPolicies);

	push	0
	push	OFFSET ?lGetHappinessFromPolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromPolicies
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227169
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 313  : 	Method(GetHappinessFromCities);

	push	0
	push	OFFSET ?lGetHappinessFromCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromCities
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227170
	push	edi
	push	esi
	call	_lua_setfield

; 314  : 	Method(GetHappinessFromBuildings);

	push	0
	push	OFFSET ?lGetHappinessFromBuildings@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromBuildings
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227171
	push	edi
	push	esi
	call	_lua_setfield

; 315  : 
; 316  : 	Method(GetExtraHappinessPerCity);

	push	0
	push	OFFSET ?lGetExtraHappinessPerCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetExtraHappinessPerCity
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227172
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 317  : 	Method(ChangeExtraHappinessPerCity);

	push	0
	push	OFFSET ?lChangeExtraHappinessPerCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeExtraHappinessPerCity
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227173
	push	edi
	push	esi
	call	_lua_setfield

; 318  : 
; 319  : 	Method(GetHappinessFromResources);

	push	0
	push	OFFSET ?lGetHappinessFromResources@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromResources
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227174
	push	edi
	push	esi
	call	_lua_setfield

; 320  : 	Method(GetHappinessFromResourceVariety);

	push	0
	push	OFFSET ?lGetHappinessFromResourceVariety@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromResourceVariety
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227175
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 321  : 	Method(GetExtraHappinessPerLuxury);

	push	0
	push	OFFSET ?lGetExtraHappinessPerLuxury@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetExtraHappinessPerLuxury
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227176
	push	edi
	push	esi
	call	_lua_setfield

; 322  : 	Method(GetHappinessFromReligion);

	push	0
	push	OFFSET ?lGetHappinessFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromReligion
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227177
	push	edi
	push	esi
	call	_lua_setfield

; 323  : 	Method(GetHappinessFromNaturalWonders);

	push	0
	push	OFFSET ?lGetHappinessFromNaturalWonders@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromNaturalWonders
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227178
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 324  : 	Method(GetHappinessFromLeagues);

	push	0
	push	OFFSET ?lGetHappinessFromLeagues@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromLeagues
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227179
	push	edi
	push	esi
	call	_lua_setfield

; 325  : 
; 326  : 	Method(GetUnhappiness);

	push	0
	push	OFFSET ?lGetUnhappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappiness
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227180
	push	edi
	push	esi
	call	_lua_setfield

; 327  : 	Method(GetUnhappinessForecast);

	push	0
	push	OFFSET ?lGetUnhappinessForecast@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappinessForecast
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227181
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 328  : 
; 329  : 	Method(GetUnhappinessFromCityForUI);

	push	0
	push	OFFSET ?lGetUnhappinessFromCityForUI@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappinessFromCityForUI
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227182
	push	edi
	push	esi
	call	_lua_setfield

; 330  : 
; 331  : 	Method(GetUnhappinessFromCityCount);

	push	0
	push	OFFSET ?lGetUnhappinessFromCityCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappinessFromCityCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227183
	push	edi
	push	esi
	call	_lua_setfield

; 332  : 	Method(GetUnhappinessFromCapturedCityCount);

	push	0
	push	OFFSET ?lGetUnhappinessFromCapturedCityCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappinessFromCapturedCityCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227184
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 333  : 	Method(GetUnhappinessFromCityPopulation);

	push	0
	push	OFFSET ?lGetUnhappinessFromCityPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappinessFromCityPopulation
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227185
	push	edi
	push	esi
	call	_lua_setfield

; 334  : 	Method(GetUnhappinessFromCitySpecialists);

	push	0
	push	OFFSET ?lGetUnhappinessFromCitySpecialists@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappinessFromCitySpecialists
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227186
	push	edi
	push	esi
	call	_lua_setfield

; 335  : 	Method(GetUnhappinessFromOccupiedCities);

	push	0
	push	OFFSET ?lGetUnhappinessFromOccupiedCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappinessFromOccupiedCities
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227187
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 336  : 	Method(GetUnhappinessFromPuppetCityPopulation);

	push	0
	push	OFFSET ?lGetUnhappinessFromPuppetCityPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappinessFromPuppetCityPopulation
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227188
	push	edi
	push	esi
	call	_lua_setfield

; 337  : 	Method(GetUnhappinessFromPublicOpinion);

	push	0
	push	OFFSET ?lGetUnhappinessFromPublicOpinion@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappinessFromPublicOpinion
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227189
	push	edi
	push	esi
	call	_lua_setfield

; 338  : 	Method(GetUnhappinessFromUnits);

	push	0
	push	OFFSET ?lGetUnhappinessFromUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappinessFromUnits
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227190
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 339  : 	Method(ChangeUnhappinessFromUnits);

	push	0
	push	OFFSET ?lChangeUnhappinessFromUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeUnhappinessFromUnits
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227191
	push	edi
	push	esi
	call	_lua_setfield

; 340  : 
; 341  : 	Method(GetUnhappinessMod);

	push	0
	push	OFFSET ?lGetUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnhappinessMod
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227192
	push	edi
	push	esi
	call	_lua_setfield

; 342  : 	Method(GetCityCountUnhappinessMod);

	push	0
	push	OFFSET ?lGetCityCountUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCityCountUnhappinessMod
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227193
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 343  : 	Method(GetOccupiedPopulationUnhappinessMod);

	push	0
	push	OFFSET ?lGetOccupiedPopulationUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetOccupiedPopulationUnhappinessMod
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227194
	push	edi
	push	esi
	call	_lua_setfield

; 344  : 	Method(GetCapitalUnhappinessMod);

	push	0
	push	OFFSET ?lGetCapitalUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCapitalUnhappinessMod
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227195
	push	edi
	push	esi
	call	_lua_setfield

; 345  : 	Method(GetTraitCityUnhappinessMod);

	push	0
	push	OFFSET ?lGetTraitCityUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTraitCityUnhappinessMod
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227196
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 346  : 	Method(GetTraitPopUnhappinessMod);

	push	0
	push	OFFSET ?lGetTraitPopUnhappinessMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTraitPopUnhappinessMod
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227197
	push	edi
	push	esi
	call	_lua_setfield

; 347  : 	Method(IsHalfSpecialistUnhappiness);

	push	0
	push	OFFSET ?lIsHalfSpecialistUnhappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsHalfSpecialistUnhappiness
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227198
	push	edi
	push	esi
	call	_lua_setfield

; 348  : 
; 349  : 	Method(GetHappinessPerGarrisonedUnit);

	push	0
	push	OFFSET ?lGetHappinessPerGarrisonedUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessPerGarrisonedUnit
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227199
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 350  : 	Method(SetHappinessPerGarrisonedUnit);

	push	0
	push	OFFSET ?lSetHappinessPerGarrisonedUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetHappinessPerGarrisonedUnit
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227200
	push	edi
	push	esi
	call	_lua_setfield

; 351  : 	Method(ChangeHappinessPerGarrisonedUnit);

	push	0
	push	OFFSET ?lChangeHappinessPerGarrisonedUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeHappinessPerGarrisonedUnit
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227201
	push	edi
	push	esi
	call	_lua_setfield

; 352  : 
; 353  : 	Method(GetHappinessFromTradeRoutes);

	push	0
	push	OFFSET ?lGetHappinessFromTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromTradeRoutes
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227202
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 354  : 	Method(GetHappinessPerTradeRoute);

	push	0
	push	OFFSET ?lGetHappinessPerTradeRoute@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessPerTradeRoute
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227203
	push	edi
	push	esi
	call	_lua_setfield

; 355  : 	Method(SetHappinessPerTradeRoute);

	push	0
	push	OFFSET ?lSetHappinessPerTradeRoute@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetHappinessPerTradeRoute
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227204
	push	edi
	push	esi
	call	_lua_setfield

; 356  : 	Method(ChangeHappinessPerTradeRoute);

	push	0
	push	OFFSET ?lChangeHappinessPerTradeRoute@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeHappinessPerTradeRoute
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227205
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 357  : 
; 358  : 	Method(GetCityConnectionTradeRouteGoldModifier);

	push	0
	push	OFFSET ?lGetCityConnectionTradeRouteGoldModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCityConnectionTradeRouteGoldModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227206
	push	edi
	push	esi
	call	_lua_setfield

; 359  : 
; 360  : 	Method(GetHappinessFromMinorCivs);

	push	0
	push	OFFSET ?lGetHappinessFromMinorCivs@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromMinorCivs
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227207
	push	edi
	push	esi
	call	_lua_setfield

; 361  : 	Method(GetHappinessFromMinor);

	push	0
	push	OFFSET ?lGetHappinessFromMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromMinor
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227208
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 362  : 
; 363  : 	// END Happiness
; 364  : 
; 365  : 	Method(GetBarbarianCombatBonus);

	push	0
	push	OFFSET ?lGetBarbarianCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBarbarianCombatBonus
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227209
	push	edi
	push	esi
	call	_lua_setfield

; 366  : 	Method(SetBarbarianCombatBonus);

	push	0
	push	OFFSET ?lSetBarbarianCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetBarbarianCombatBonus
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227210
	push	edi
	push	esi
	call	_lua_setfield

; 367  : 	Method(ChangeBarbarianCombatBonus);

	push	0
	push	OFFSET ?lChangeBarbarianCombatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeBarbarianCombatBonus
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227211
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 368  : 	Method(GetCombatBonusVsHigherTech);

	push	0
	push	OFFSET ?lGetCombatBonusVsHigherTech@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCombatBonusVsHigherTech
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227212
	push	edi
	push	esi
	call	_lua_setfield

; 369  : 	Method(GetCombatBonusVsLargerCiv);

	push	0
	push	OFFSET ?lGetCombatBonusVsLargerCiv@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCombatBonusVsLargerCiv
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227213
	push	edi
	push	esi
	call	_lua_setfield

; 370  : #ifdef NQ_COMBAT_BONUS_VS_SMALLER_CIV_FROM_POLICIES
; 371  : 	Method(GetCombatBonusVsSmallerCiv);

	push	0
	push	OFFSET ?lGetCombatBonusVsSmallerCiv@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCombatBonusVsSmallerCiv
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227214
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 372  : #endif
; 373  : 
; 374  : 	Method(GetGarrisonedCityRangeStrikeModifier);

	push	0
	push	OFFSET ?lGetGarrisonedCityRangeStrikeModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGarrisonedCityRangeStrikeModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227215
	push	edi
	push	esi
	call	_lua_setfield

; 375  : 	Method(ChangeGarrisonedCityRangeStrikeModifier);

	push	0
	push	OFFSET ?lChangeGarrisonedCityRangeStrikeModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeGarrisonedCityRangeStrikeModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227216
	push	edi
	push	esi
	call	_lua_setfield

; 376  : 
; 377  : 	Method(IsAlwaysSeeBarbCamps);

	push	0
	push	OFFSET ?lIsAlwaysSeeBarbCamps@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAlwaysSeeBarbCamps
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227217
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 378  : 	Method(SetAlwaysSeeBarbCampsCount);

	push	0
	push	OFFSET ?lSetAlwaysSeeBarbCampsCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetAlwaysSeeBarbCampsCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227218
	push	edi
	push	esi
	call	_lua_setfield

; 379  : 	Method(ChangeAlwaysSeeBarbCampsCount);

	push	0
	push	OFFSET ?lChangeAlwaysSeeBarbCampsCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeAlwaysSeeBarbCampsCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227219
	push	edi
	push	esi
	call	_lua_setfield

; 380  : 
; 381  : 	Method(IsPolicyBlocked);

	push	0
	push	OFFSET ?lIsPolicyBlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPolicyBlocked
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227220
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 382  : 	Method(IsPolicyBranchBlocked);

	push	0
	push	OFFSET ?lIsPolicyBranchBlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPolicyBranchBlocked
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227221
	push	edi
	push	esi
	call	_lua_setfield

; 383  : 	Method(IsPolicyBranchUnlocked);

	push	0
	push	OFFSET ?lIsPolicyBranchUnlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPolicyBranchUnlocked
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227222
	push	edi
	push	esi
	call	_lua_setfield

; 384  : 	Method(SetPolicyBranchUnlocked);

	push	0
	push	OFFSET ?lSetPolicyBranchUnlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetPolicyBranchUnlocked
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227223
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 385  : 	Method(GetNumPolicyBranchesUnlocked);

	push	0
	push	OFFSET ?lGetNumPolicyBranchesUnlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumPolicyBranchesUnlocked
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227224
	push	edi
	push	esi
	call	_lua_setfield

; 386  : 	Method(GetPolicyBranchChosen);

	push	0
	push	OFFSET ?lGetPolicyBranchChosen@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyBranchChosen
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227225
	push	edi
	push	esi
	call	_lua_setfield

; 387  : 	Method(GetNumPolicyBranchesAllowed);

	push	0
	push	OFFSET ?lGetNumPolicyBranchesAllowed@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumPolicyBranchesAllowed
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227226
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 388  : 	Method(GetNumPolicies);

	push	0
	push	OFFSET ?lGetNumPolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumPolicies
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227227
	push	edi
	push	esi
	call	_lua_setfield

; 389  : 	Method(GetNumPoliciesInBranch);

	push	0
	push	OFFSET ?lGetNumPoliciesInBranch@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumPoliciesInBranch
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227228
	push	edi
	push	esi
	call	_lua_setfield

; 390  : 	Method(HasPolicy);

	push	0
	push	OFFSET ?lHasPolicy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasPolicy
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227229
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 391  : 	Method(SetHasPolicy);

	push	0
	push	OFFSET ?lSetHasPolicy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetHasPolicy
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227230
	push	edi
	push	esi
	call	_lua_setfield

; 392  : 	Method(GetNextPolicyCost);

	push	0
	push	OFFSET ?lGetNextPolicyCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNextPolicyCost
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227231
	push	edi
	push	esi
	call	_lua_setfield

; 393  : 	Method(CanAdoptPolicy);

	push	0
	push	OFFSET ?lCanAdoptPolicy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanAdoptPolicy
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227232
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 394  : 	Method(DoAdoptPolicy);

	push	0
	push	OFFSET ?lDoAdoptPolicy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lDoAdoptPolicy
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227233
	push	edi
	push	esi
	call	_lua_setfield

; 395  : 	Method(CanUnlockPolicyBranch);

	push	0
	push	OFFSET ?lCanUnlockPolicyBranch@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanUnlockPolicyBranch
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227234
	push	edi
	push	esi
	call	_lua_setfield

; 396  : 	Method(GetDominantPolicyBranchForTitle);

	push	0
	push	OFFSET ?lGetDominantPolicyBranchForTitle@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetDominantPolicyBranchForTitle
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227235
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 397  : 	Method(GetLateGamePolicyTree);

	push	0
	push	OFFSET ?lGetLateGamePolicyTree@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetLateGamePolicyTree
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227236
	push	edi
	push	esi
	call	_lua_setfield

; 398  : 	Method(GetBranchPicked1);

	push	0
	push	OFFSET ?lGetBranchPicked1@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBranchPicked1
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227237
	push	edi
	push	esi
	call	_lua_setfield

; 399  : 	Method(GetBranchPicked2);

	push	0
	push	OFFSET ?lGetBranchPicked2@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBranchPicked2
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227238
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 400  : 	Method(GetBranchPicked3);

	push	0
	push	OFFSET ?lGetBranchPicked3@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBranchPicked3
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227239
	push	edi
	push	esi
	call	_lua_setfield

; 401  : 
; 402  : 	Method(GetPolicyCatchSpiesModifier);

	push	0
	push	OFFSET ?lGetPolicyCatchSpiesModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyCatchSpiesModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227240
	push	edi
	push	esi
	call	_lua_setfield

; 403  : 
; 404  : 	Method(GetNumPolicyBranchesFinished);

	push	0
	push	OFFSET ?lGetNumPolicyBranchesFinished@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumPolicyBranchesFinished
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227241
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 405  : 	Method(IsPolicyBranchFinished);

	push	0
	push	OFFSET ?lIsPolicyBranchFinished@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPolicyBranchFinished
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227242
	push	edi
	push	esi
	call	_lua_setfield

; 406  : 
; 407  : 	Method(GetAvailableTenets);

	push	0
	push	OFFSET ?lGetAvailableTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAvailableTenets
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227243
	push	edi
	push	esi
	call	_lua_setfield

; 408  : 	Method(GetTenet);

	push	0
	push	OFFSET ?lGetTenet@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTenet
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227244
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 409  : 
; 410  : 	Method(IsAnarchy);

	push	0
	push	OFFSET ?lIsAnarchy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAnarchy
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227245
	push	edi
	push	esi
	call	_lua_setfield

; 411  : 	Method(GetAnarchyNumTurns);

	push	0
	push	OFFSET ?lGetAnarchyNumTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAnarchyNumTurns
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227246
	push	edi
	push	esi
	call	_lua_setfield

; 412  : 	Method(SetAnarchyNumTurns);

	push	0
	push	OFFSET ?lSetAnarchyNumTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetAnarchyNumTurns
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227247
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 413  : 	Method(ChangeAnarchyNumTurns);

	push	0
	push	OFFSET ?lChangeAnarchyNumTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeAnarchyNumTurns
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227248
	push	edi
	push	esi
	call	_lua_setfield

; 414  : 
; 415  : 	Method(GetAdvancedStartPoints);

	push	0
	push	OFFSET ?lGetAdvancedStartPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAdvancedStartPoints
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227249
	push	edi
	push	esi
	call	_lua_setfield

; 416  : 	Method(SetAdvancedStartPoints);

	push	0
	push	OFFSET ?lSetAdvancedStartPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetAdvancedStartPoints
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227250
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 417  : 	Method(ChangeAdvancedStartPoints);

	push	0
	push	OFFSET ?lChangeAdvancedStartPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeAdvancedStartPoints
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227251
	push	edi
	push	esi
	call	_lua_setfield

; 418  : 	Method(GetAdvancedStartUnitCost);

	push	0
	push	OFFSET ?lGetAdvancedStartUnitCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAdvancedStartUnitCost
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227252
	push	edi
	push	esi
	call	_lua_setfield

; 419  : 	Method(GetAdvancedStartCityCost);

	push	0
	push	OFFSET ?lGetAdvancedStartCityCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAdvancedStartCityCost
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227253
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 420  : 	Method(GetAdvancedStartPopCost);

	push	0
	push	OFFSET ?lGetAdvancedStartPopCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAdvancedStartPopCost
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227254
	push	edi
	push	esi
	call	_lua_setfield

; 421  : 	Method(GetAdvancedStartBuildingCost);

	push	0
	push	OFFSET ?lGetAdvancedStartBuildingCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAdvancedStartBuildingCost
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227255
	push	edi
	push	esi
	call	_lua_setfield

; 422  : 	Method(GetAdvancedStartImprovementCost);

	push	0
	push	OFFSET ?lGetAdvancedStartImprovementCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAdvancedStartImprovementCost
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227256
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 423  : 	Method(GetAdvancedStartRouteCost);

	push	0
	push	OFFSET ?lGetAdvancedStartRouteCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAdvancedStartRouteCost
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227257
	push	edi
	push	esi
	call	_lua_setfield

; 424  : 	Method(GetAdvancedStartTechCost);

	push	0
	push	OFFSET ?lGetAdvancedStartTechCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAdvancedStartTechCost
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227258
	push	edi
	push	esi
	call	_lua_setfield

; 425  : 	Method(GetAdvancedStartVisibilityCost);

	push	0
	push	OFFSET ?lGetAdvancedStartVisibilityCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAdvancedStartVisibilityCost
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227259
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 426  : 
; 427  : 	Method(GetAttackBonusTurns);

	push	0
	push	OFFSET ?lGetAttackBonusTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAttackBonusTurns
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227260
	push	edi
	push	esi
	call	_lua_setfield

; 428  : 	Method(GetCultureBonusTurns);

	push	0
	push	OFFSET ?lGetCultureBonusTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCultureBonusTurns
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227261
	push	edi
	push	esi
	call	_lua_setfield

; 429  : 	Method(GetTourismBonusTurns);

	push	0
	push	OFFSET ?lGetTourismBonusTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTourismBonusTurns
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227262
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 430  : 
; 431  : 	Method(GetGoldenAgeProgressThreshold);

	push	0
	push	OFFSET ?lGetGoldenAgeProgressThreshold@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldenAgeProgressThreshold
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227263
	push	edi
	push	esi
	call	_lua_setfield

; 432  : 	Method(GetGoldenAgeProgressMeter);

	push	0
	push	OFFSET ?lGetGoldenAgeProgressMeter@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldenAgeProgressMeter
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227264
	push	edi
	push	esi
	call	_lua_setfield

; 433  : 	Method(SetGoldenAgeProgressMeter);

	push	0
	push	OFFSET ?lSetGoldenAgeProgressMeter@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetGoldenAgeProgressMeter
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227265
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 434  : 	Method(ChangeGoldenAgeProgressMeter);

	push	0
	push	OFFSET ?lChangeGoldenAgeProgressMeter@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeGoldenAgeProgressMeter
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227266
	push	edi
	push	esi
	call	_lua_setfield

; 435  : 	Method(GetNumGoldenAges);

	push	0
	push	OFFSET ?lGetNumGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumGoldenAges
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227267
	push	edi
	push	esi
	call	_lua_setfield

; 436  : 	Method(SetNumGoldenAges);

	push	0
	push	OFFSET ?lSetNumGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetNumGoldenAges
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227268
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 437  : 	Method(ChangeNumGoldenAges);

	push	0
	push	OFFSET ?lChangeNumGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNumGoldenAges
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227269
	push	edi
	push	esi
	call	_lua_setfield

; 438  : 	Method(GetGoldenAgeTurns);

	push	0
	push	OFFSET ?lGetGoldenAgeTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldenAgeTurns
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227270
	push	edi
	push	esi
	call	_lua_setfield

; 439  : 	Method(GetGoldenAgeLength);

	push	0
	push	OFFSET ?lGetGoldenAgeLength@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldenAgeLength
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227271
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 440  : 	Method(IsGoldenAge);

	push	0
	push	OFFSET ?lIsGoldenAge@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsGoldenAge
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227272
	push	edi
	push	esi
	call	_lua_setfield

; 441  : 	Method(ChangeGoldenAgeTurns);

	push	0
	push	OFFSET ?lChangeGoldenAgeTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeGoldenAgeTurns
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227273
	push	edi
	push	esi
	call	_lua_setfield

; 442  : 	Method(GetNumUnitGoldenAges);

	push	0
	push	OFFSET ?lGetNumUnitGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumUnitGoldenAges
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227274
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 443  : 	Method(ChangeNumUnitGoldenAges);

	push	0
	push	OFFSET ?lChangeNumUnitGoldenAges@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNumUnitGoldenAges
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227275
	push	edi
	push	esi
	call	_lua_setfield

; 444  : 	Method(GetStrikeTurns);

	push	0
	push	OFFSET ?lGetStrikeTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetStrikeTurns
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227276
	push	edi
	push	esi
	call	_lua_setfield

; 445  : 	Method(GetGoldenAgeModifier);

	push	0
	push	OFFSET ?lGetGoldenAgeModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldenAgeModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227277
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 446  :     Method(GetGoldenAgeTourismModifier);

	push	0
	push	OFFSET ?lGetGoldenAgeTourismModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldenAgeTourismModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227278
	push	edi
	push	esi
	call	_lua_setfield

; 447  :     Method(GetGoldenAgeGreatWriterRateModifier);

	push	0
	push	OFFSET ?lGetGoldenAgeGreatWriterRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldenAgeGreatWriterRateModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227279
	push	edi
	push	esi
	call	_lua_setfield

; 448  :     Method(GetGoldenAgeGreatArtistRateModifier);

	push	0
	push	OFFSET ?lGetGoldenAgeGreatArtistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldenAgeGreatArtistRateModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227280
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 449  :     Method(GetGoldenAgeGreatMusicianRateModifier);

	push	0
	push	OFFSET ?lGetGoldenAgeGreatMusicianRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldenAgeGreatMusicianRateModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227281
	push	edi
	push	esi
	call	_lua_setfield

; 450  : 
; 451  : 	Method(GetHurryModifier);

	push	0
	push	OFFSET ?lGetHurryModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHurryModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227282
	push	edi
	push	esi
	call	_lua_setfield

; 452  : 
; 453  : 	Method(CreateGreatGeneral);

	push	0
	push	OFFSET ?lCreateGreatGeneral@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCreateGreatGeneral
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227283
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 454  : 	Method(GetGreatPeopleCreated);

	push	0
	push	OFFSET ?lGetGreatPeopleCreated@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatPeopleCreated
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227284
	push	edi
	push	esi
	call	_lua_setfield

; 455  : 	Method(GetGreatGeneralsCreated);

	push	0
	push	OFFSET ?lGetGreatGeneralsCreated@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatGeneralsCreated
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227285
	push	edi
	push	esi
	call	_lua_setfield

; 456  : 	Method(GetGreatPeopleThresholdModifier);

	push	0
	push	OFFSET ?lGetGreatPeopleThresholdModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatPeopleThresholdModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227286
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 457  : 	Method(GetGreatGeneralsThresholdModifier);

	push	0
	push	OFFSET ?lGetGreatGeneralsThresholdModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatGeneralsThresholdModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227287
	push	edi
	push	esi
	call	_lua_setfield

; 458  : 	Method(GetGreatAdmiralsThresholdModifier);

	push	0
	push	OFFSET ?lGetGreatAdmiralsThresholdModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatAdmiralsThresholdModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227288
	push	edi
	push	esi
	call	_lua_setfield

; 459  : 	Method(GetGreatPeopleRateModifier);

	push	0
	push	OFFSET ?lGetGreatPeopleRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatPeopleRateModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227289
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 460  : 	Method(GetGreatGeneralRateModifier);

	push	0
	push	OFFSET ?lGetGreatGeneralRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatGeneralRateModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227290
	push	edi
	push	esi
	call	_lua_setfield

; 461  : 	Method(GetDomesticGreatGeneralRateModifier);

	push	0
	push	OFFSET ?lGetDomesticGreatGeneralRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetDomesticGreatGeneralRateModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227291
	push	edi
	push	esi
	call	_lua_setfield

; 462  : 	Method(GetGreatWriterRateModifier);

	push	0
	push	OFFSET ?lGetGreatWriterRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatWriterRateModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227292
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 463  : 	Method(GetGreatArtistRateModifier);

	push	0
	push	OFFSET ?lGetGreatArtistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatArtistRateModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227293
	push	edi
	push	esi
	call	_lua_setfield

; 464  : 	Method(GetGreatMusicianRateModifier);

	push	0
	push	OFFSET ?lGetGreatMusicianRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatMusicianRateModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227294
	push	edi
	push	esi
	call	_lua_setfield

; 465  : 	Method(GetGreatScientistRateModifier);

	push	0
	push	OFFSET ?lGetGreatScientistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatScientistRateModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227295
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 466  : 	Method(GetGreatMerchantRateModifier);

	push	0
	push	OFFSET ?lGetGreatMerchantRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatMerchantRateModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227296
	push	edi
	push	esi
	call	_lua_setfield

; 467  : 	Method(GetGreatEngineerRateModifier);

	push	0
	push	OFFSET ?lGetGreatEngineerRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatEngineerRateModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227297
	push	edi
	push	esi
	call	_lua_setfield

; 468  : 
; 469  : 	Method(GetPolicyGreatPeopleRateModifier);

	push	0
	push	OFFSET ?lGetPolicyGreatPeopleRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyGreatPeopleRateModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227298
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 470  : 	Method(GetPolicyGreatWriterRateModifier);

	push	0
	push	OFFSET ?lGetPolicyGreatWriterRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyGreatWriterRateModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227299
	push	edi
	push	esi
	call	_lua_setfield

; 471  : 	Method(GetPolicyGreatArtistRateModifier);

	push	0
	push	OFFSET ?lGetPolicyGreatArtistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyGreatArtistRateModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227300
	push	edi
	push	esi
	call	_lua_setfield

; 472  : 	Method(GetPolicyGreatMusicianRateModifier);

	push	0
	push	OFFSET ?lGetPolicyGreatMusicianRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyGreatMusicianRateModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227301
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 473  : 	Method(GetPolicyGreatScientistRateModifier);

	push	0
	push	OFFSET ?lGetPolicyGreatScientistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyGreatScientistRateModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227302
	push	edi
	push	esi
	call	_lua_setfield

; 474  : 	Method(GetPolicyGreatMerchantRateModifier);

	push	0
	push	OFFSET ?lGetPolicyGreatMerchantRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyGreatMerchantRateModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227303
	push	edi
	push	esi
	call	_lua_setfield

; 475  : 	Method(GetPolicyGreatEngineerRateModifier);

	push	0
	push	OFFSET ?lGetPolicyGreatEngineerRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyGreatEngineerRateModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227304
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 476  : 
; 477  : 	Method(GetProductionModifier);

	push	0
	push	OFFSET ?lGetProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetProductionModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227305
	push	edi
	push	esi
	call	_lua_setfield

; 478  : 	Method(GetUnitProductionModifier);

	push	0
	push	OFFSET ?lGetUnitProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnitProductionModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227306
	push	edi
	push	esi
	call	_lua_setfield

; 479  : 	Method(GetBuildingProductionModifier);

	push	0
	push	OFFSET ?lGetBuildingProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBuildingProductionModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227307
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 480  : 	Method(GetProjectProductionModifier);

	push	0
	push	OFFSET ?lGetProjectProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetProjectProductionModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227308
	push	edi
	push	esi
	call	_lua_setfield

; 481  : 	Method(GetSpecialistProductionModifier);

	push	0
	push	OFFSET ?lGetSpecialistProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetSpecialistProductionModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227309
	push	edi
	push	esi
	call	_lua_setfield

; 482  : 	Method(GetMaxGlobalBuildingProductionModifier);

	push	0
	push	OFFSET ?lGetMaxGlobalBuildingProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMaxGlobalBuildingProductionModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227310
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 483  : 	Method(GetMaxTeamBuildingProductionModifier);

	push	0
	push	OFFSET ?lGetMaxTeamBuildingProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMaxTeamBuildingProductionModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227311
	push	edi
	push	esi
	call	_lua_setfield

; 484  : 	Method(GetMaxPlayerBuildingProductionModifier);

	push	0
	push	OFFSET ?lGetMaxPlayerBuildingProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMaxPlayerBuildingProductionModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227312
	push	edi
	push	esi
	call	_lua_setfield

; 485  : 	Method(GetFreeExperience);

	push	0
	push	OFFSET ?lGetFreeExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFreeExperience
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227313
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 486  : 	Method(GetFeatureProductionModifier);

	push	0
	push	OFFSET ?lGetFeatureProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFeatureProductionModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227314
	push	edi
	push	esi
	call	_lua_setfield

; 487  : 	Method(GetWorkerSpeedModifier);

	push	0
	push	OFFSET ?lGetWorkerSpeedModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetWorkerSpeedModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227315
	push	edi
	push	esi
	call	_lua_setfield

; 488  : 	Method(GetImprovementUpgradeRateModifier);

	push	0
	push	OFFSET ?lGetImprovementUpgradeRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetImprovementUpgradeRateModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227316
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 489  : 	Method(GetMilitaryProductionModifier);

	push	0
	push	OFFSET ?lGetMilitaryProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMilitaryProductionModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227317
	push	edi
	push	esi
	call	_lua_setfield

; 490  : 	Method(GetSpaceProductionModifier);

	push	0
	push	OFFSET ?lGetSpaceProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetSpaceProductionModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227318
	push	edi
	push	esi
	call	_lua_setfield

; 491  : 	Method(GetSettlerProductionModifier);

	push	0
	push	OFFSET ?lGetSettlerProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetSettlerProductionModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227319
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 492  : 	Method(GetCapitalSettlerProductionModifier);

	push	0
	push	OFFSET ?lGetCapitalSettlerProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCapitalSettlerProductionModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227320
	push	edi
	push	esi
	call	_lua_setfield

; 493  : 	Method(GetWonderProductionModifier);

	push	0
	push	OFFSET ?lGetWonderProductionModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetWonderProductionModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227321
	push	edi
	push	esi
	call	_lua_setfield

; 494  : 
; 495  : 	Method(GetUnitProductionMaintenanceMod);

	push	0
	push	OFFSET ?lGetUnitProductionMaintenanceMod@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnitProductionMaintenanceMod
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227322
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 496  : 	Method(GetNumUnitsSupplied);

	push	0
	push	OFFSET ?lGetNumUnitsSupplied@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumUnitsSupplied
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227323
	push	edi
	push	esi
	call	_lua_setfield

; 497  : 	Method(GetNumUnitsSuppliedByHandicap);

	push	0
	push	OFFSET ?lGetNumUnitsSuppliedByHandicap@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumUnitsSuppliedByHandicap
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227324
	push	edi
	push	esi
	call	_lua_setfield

; 498  : 	Method(GetNumUnitsSuppliedByCities);

	push	0
	push	OFFSET ?lGetNumUnitsSuppliedByCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumUnitsSuppliedByCities
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227325
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 499  : 	Method(GetNumUnitsSuppliedByPopulation);

	push	0
	push	OFFSET ?lGetNumUnitsSuppliedByPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumUnitsSuppliedByPopulation
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227326
	push	edi
	push	esi
	call	_lua_setfield

; 500  : 	Method(GetNumUnitsOutOfSupply);

	push	0
	push	OFFSET ?lGetNumUnitsOutOfSupply@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumUnitsOutOfSupply
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227327
	push	edi
	push	esi
	call	_lua_setfield

; 501  : 
; 502  : 	Method(GetCityDefenseModifier);

	push	0
	push	OFFSET ?lGetCityDefenseModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCityDefenseModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227328
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 503  : 	Method(GetNumNukeUnits);

	push	0
	push	OFFSET ?lGetNumNukeUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumNukeUnits
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227329
	push	edi
	push	esi
	call	_lua_setfield

; 504  : 	Method(GetNumOutsideUnits);

	push	0
	push	OFFSET ?lGetNumOutsideUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumOutsideUnits
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227330
	push	edi
	push	esi
	call	_lua_setfield

; 505  : 
; 506  : 	Method(GetGoldPerUnit);

	push	0
	push	OFFSET ?lGetGoldPerUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldPerUnit
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227331
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 507  : 	Method(ChangeGoldPerUnitTimes100);

	push	0
	push	OFFSET ?lChangeGoldPerUnitTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeGoldPerUnitTimes100
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227332
	push	edi
	push	esi
	call	_lua_setfield

; 508  : 	Method(GetGoldPerMilitaryUnit);

	push	0
	push	OFFSET ?lGetGoldPerMilitaryUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGoldPerMilitaryUnit
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227333
	push	edi
	push	esi
	call	_lua_setfield

; 509  : 	Method(GetExtraUnitCost);

	push	0
	push	OFFSET ?lGetExtraUnitCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetExtraUnitCost
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227334
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 510  : 	Method(GetNumMilitaryUnits);

	push	0
	push	OFFSET ?lGetNumMilitaryUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumMilitaryUnits
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227335
	push	edi
	push	esi
	call	_lua_setfield

; 511  : 	Method(GetHappyPerMilitaryUnit);

	push	0
	push	OFFSET ?lGetHappyPerMilitaryUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappyPerMilitaryUnit
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227336
	push	edi
	push	esi
	call	_lua_setfield

; 512  : 	Method(IsMilitaryFoodProduction);

	push	0
	push	OFFSET ?lIsMilitaryFoodProduction@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsMilitaryFoodProduction
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227337
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 513  : 	Method(GetHighestUnitLevel);

	push	0
	push	OFFSET ?lGetHighestUnitLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHighestUnitLevel
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227338
	push	edi
	push	esi
	call	_lua_setfield

; 514  : 
; 515  : 	Method(GetConscriptCount);

	push	0
	push	OFFSET ?lGetConscriptCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetConscriptCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227339
	push	edi
	push	esi
	call	_lua_setfield

; 516  : 	Method(SetConscriptCount);

	push	0
	push	OFFSET ?lSetConscriptCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetConscriptCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227340
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 517  : 	Method(ChangeConscriptCount);

	push	0
	push	OFFSET ?lChangeConscriptCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeConscriptCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227341
	push	edi
	push	esi
	call	_lua_setfield

; 518  : 
; 519  : 	Method(GetMaxConscript);

	push	0
	push	OFFSET ?lGetMaxConscript@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMaxConscript
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227342
	push	edi
	push	esi
	call	_lua_setfield

; 520  : 	Method(GetOverflowResearch);

	push	0
	push	OFFSET ?lGetOverflowResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetOverflowResearch
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227343
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 521  : 	Method(GetExpInBorderModifier);

	push	0
	push	OFFSET ?lGetExpInBorderModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetExpInBorderModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227344
	push	edi
	push	esi
	call	_lua_setfield

; 522  : 
; 523  : 	Method(GetLevelExperienceModifier);

	push	0
	push	OFFSET ?lGetLevelExperienceModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetLevelExperienceModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227345
	push	edi
	push	esi
	call	_lua_setfield

; 524  : 
; 525  : 	Method(GetCultureBombTimer);

	push	0
	push	OFFSET ?lGetCultureBombTimer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCultureBombTimer
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227346
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 526  : 	Method(GetConversionTimer);

	push	0
	push	OFFSET ?lGetConversionTimer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetConversionTimer
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227347
	push	edi
	push	esi
	call	_lua_setfield

; 527  : 
; 528  : 	Method(GetCapitalCity);

	push	0
	push	OFFSET ?lGetCapitalCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCapitalCity
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227348
	push	edi
	push	esi
	call	_lua_setfield

; 529  : 	Method(IsHasLostCapital);

	push	0
	push	OFFSET ?lIsHasLostCapital@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsHasLostCapital
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227349
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 530  : 	Method(GetCitiesLost);

	push	0
	push	OFFSET ?lGetCitiesLost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCitiesLost
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227350
	push	edi
	push	esi
	call	_lua_setfield

; 531  : 
; 532  : 	Method(GetPower);

	push	0
	push	OFFSET ?lGetPower@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPower
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227351
	push	edi
	push	esi
	call	_lua_setfield

; 533  : 	Method(GetMilitaryMight);

	push	0
	push	OFFSET ?lGetMilitaryMight@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMilitaryMight
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227352
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 534  : 	Method(GetTotalTimePlayed);

	push	0
	push	OFFSET ?lGetTotalTimePlayed@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTotalTimePlayed
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227353
	push	edi
	push	esi
	call	_lua_setfield

; 535  : 
; 536  : 	Method(GetScore);

	push	0
	push	OFFSET ?lGetScore@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScore
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227354
	push	edi
	push	esi
	call	_lua_setfield

; 537  : 	Method(GetScoreFromCities);

	push	0
	push	OFFSET ?lGetScoreFromCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromCities
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227355
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 538  : 	Method(GetScoreFromPopulation);

	push	0
	push	OFFSET ?lGetScoreFromPopulation@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromPopulation
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227356
	push	edi
	push	esi
	call	_lua_setfield

; 539  : 	Method(GetScoreFromLand);

	push	0
	push	OFFSET ?lGetScoreFromLand@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromLand
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227357
	push	edi
	push	esi
	call	_lua_setfield

; 540  : 	Method(GetScoreFromWonders);

	push	0
	push	OFFSET ?lGetScoreFromWonders@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromWonders
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227358
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 541  : 	Method(GetScoreFromTechs);

	push	0
	push	OFFSET ?lGetScoreFromTechs@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromTechs
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227359
	push	edi
	push	esi
	call	_lua_setfield

; 542  : 	Method(GetScoreFromFutureTech);

	push	0
	push	OFFSET ?lGetScoreFromFutureTech@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromFutureTech
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227360
	push	edi
	push	esi
	call	_lua_setfield

; 543  : 	Method(ChangeScoreFromFutureTech);

	push	0
	push	OFFSET ?lChangeScoreFromFutureTech@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeScoreFromFutureTech
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227361
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 544  : 	Method(GetScoreFromPolicies);

	push	0
	push	OFFSET ?lGetScoreFromPolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromPolicies
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227362
	push	edi
	push	esi
	call	_lua_setfield

; 545  : 	Method(GetScoreFromGreatWorks);

	push	0
	push	OFFSET ?lGetScoreFromGreatWorks@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromGreatWorks
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227363
	push	edi
	push	esi
	call	_lua_setfield

; 546  : 	Method(GetScoreFromReligion);

	push	0
	push	OFFSET ?lGetScoreFromReligion@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromReligion
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227364
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 547  : 	Method(GetScoreFromScenario1);

	push	0
	push	OFFSET ?lGetScoreFromScenario1@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromScenario1
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227365
	push	edi
	push	esi
	call	_lua_setfield

; 548  : 	Method(ChangeScoreFromScenario1);

	push	0
	push	OFFSET ?lChangeScoreFromScenario1@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeScoreFromScenario1
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227366
	push	edi
	push	esi
	call	_lua_setfield

; 549  : 	Method(GetScoreFromScenario2);

	push	0
	push	OFFSET ?lGetScoreFromScenario2@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromScenario2
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227367
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 550  : 	Method(ChangeScoreFromScenario2);

	push	0
	push	OFFSET ?lChangeScoreFromScenario2@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeScoreFromScenario2
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227368
	push	edi
	push	esi
	call	_lua_setfield

; 551  : 	Method(GetScoreFromScenario3);

	push	0
	push	OFFSET ?lGetScoreFromScenario3@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromScenario3
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227369
	push	edi
	push	esi
	call	_lua_setfield

; 552  : 	Method(ChangeScoreFromScenario3);

	push	0
	push	OFFSET ?lChangeScoreFromScenario3@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeScoreFromScenario3
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227370
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 553  : 	Method(GetScoreFromScenario4);

	push	0
	push	OFFSET ?lGetScoreFromScenario4@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreFromScenario4
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227371
	push	edi
	push	esi
	call	_lua_setfield

; 554  : 	Method(ChangeScoreFromScenario4);

	push	0
	push	OFFSET ?lChangeScoreFromScenario4@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeScoreFromScenario4
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227372
	push	edi
	push	esi
	call	_lua_setfield

; 555  : 
; 556  : 	Method(IsGoldenAgeCultureBonusDisabled);

	push	0
	push	OFFSET ?lIsGoldenAgeCultureBonusDisabled@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsGoldenAgeCultureBonusDisabled
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227373
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 557  : 
; 558  : 	Method(IsMinorCiv);

	push	0
	push	OFFSET ?lIsMinorCiv@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsMinorCiv
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227374
	push	edi
	push	esi
	call	_lua_setfield

; 559  : 	Method(GetMinorCivType);

	push	0
	push	OFFSET ?lGetMinorCivType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivType
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227375
	push	edi
	push	esi
	call	_lua_setfield

; 560  : 	Method(GetMinorCivTrait);

	push	0
	push	OFFSET ?lGetMinorCivTrait@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivTrait
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227376
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 561  : 	Method(GetPersonality);

	push	0
	push	OFFSET ?lGetPersonality@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPersonality
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227377
	push	edi
	push	esi
	call	_lua_setfield

; 562  : 	Method(IsMinorCivHasUniqueUnit);

	push	0
	push	OFFSET ?lIsMinorCivHasUniqueUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsMinorCivHasUniqueUnit
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227378
	push	edi
	push	esi
	call	_lua_setfield

; 563  : 	Method(GetMinorCivUniqueUnit);

	push	0
	push	OFFSET ?lGetMinorCivUniqueUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivUniqueUnit
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227379
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 564  : 	Method(SetMinorCivUniqueUnit);

	push	0
	push	OFFSET ?lSetMinorCivUniqueUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetMinorCivUniqueUnit
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227380
	push	edi
	push	esi
	call	_lua_setfield

; 565  : 	Method(GetAlly);

	push	0
	push	OFFSET ?lGetAlly@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAlly
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227381
	push	edi
	push	esi
	call	_lua_setfield

; 566  : 	Method(GetAlliedTurns);

	push	0
	push	OFFSET ?lGetAlliedTurns@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAlliedTurns
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227382
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 567  : 	Method(IsFriends);

	push	0
	push	OFFSET ?lIsFriends@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsFriends
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227383
	push	edi
	push	esi
	call	_lua_setfield

; 568  : 	Method(IsAllies);

	push	0
	push	OFFSET ?lIsAllies@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAllies
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227384
	push	edi
	push	esi
	call	_lua_setfield

; 569  : 	Method(IsPlayerHasOpenBorders);

	push	0
	push	OFFSET ?lIsPlayerHasOpenBorders@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerHasOpenBorders
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227385
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 570  : 	Method(IsPlayerHasOpenBordersAutomatically);

	push	0
	push	OFFSET ?lIsPlayerHasOpenBordersAutomatically@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerHasOpenBordersAutomatically
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227386
	push	edi
	push	esi
	call	_lua_setfield

; 571  : 	Method(GetFriendshipChangePerTurnTimes100);

	push	0
	push	OFFSET ?lGetFriendshipChangePerTurnTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFriendshipChangePerTurnTimes100
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227387
	push	edi
	push	esi
	call	_lua_setfield

; 572  : 	Method(GetMinorCivFriendshipWithMajor);

	push	0
	push	OFFSET ?lGetMinorCivFriendshipWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivFriendshipWithMajor
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227388
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 573  : #ifdef NQ_SHOW_BASE_INFLUENCE_WHILE_AT_WAR_IN_CS_TOOLTIP
; 574  : 	Method(GetMinorCivBaseFriendshipWithMajor);

	push	0
	push	OFFSET ?lGetMinorCivBaseFriendshipWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivBaseFriendshipWithMajor
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227389
	push	edi
	push	esi
	call	_lua_setfield

; 575  : #endif
; 576  : 	Method(ChangeMinorCivFriendshipWithMajor);

	push	0
	push	OFFSET ?lChangeMinorCivFriendshipWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeMinorCivFriendshipWithMajor
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227390
	push	edi
	push	esi
	call	_lua_setfield

; 577  : 	Method(GetMinorCivFriendshipAnchorWithMajor);

	push	0
	push	OFFSET ?lGetMinorCivFriendshipAnchorWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivFriendshipAnchorWithMajor
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227391
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 578  : 	Method(GetMinorCivFriendshipLevelWithMajor);

	push	0
	push	OFFSET ?lGetMinorCivFriendshipLevelWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivFriendshipLevelWithMajor
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227392
	push	edi
	push	esi
	call	_lua_setfield

; 579  : 	Method(GetActiveQuestForPlayer);

	push	0
	push	OFFSET ?lGetActiveQuestForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetActiveQuestForPlayer
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227393
	push	edi
	push	esi
	call	_lua_setfield

; 580  : 	Method(IsMinorCivActiveQuestForPlayer);

	push	0
	push	OFFSET ?lIsMinorCivActiveQuestForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsMinorCivActiveQuestForPlayer
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227394
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 581  : 	Method(GetMinorCivNumActiveQuestsForPlayer);

	push	0
	push	OFFSET ?lGetMinorCivNumActiveQuestsForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivNumActiveQuestsForPlayer
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227395
	push	edi
	push	esi
	call	_lua_setfield

; 582  : 	Method(IsMinorCivDisplayedQuestForPlayer);

	push	0
	push	OFFSET ?lIsMinorCivDisplayedQuestForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsMinorCivDisplayedQuestForPlayer
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227396
	push	edi
	push	esi
	call	_lua_setfield

; 583  : 	Method(GetMinorCivNumDisplayedQuestsForPlayer);

	push	0
	push	OFFSET ?lGetMinorCivNumDisplayedQuestsForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivNumDisplayedQuestsForPlayer
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227397
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 584  : 	Method(GetQuestData1);

	push	0
	push	OFFSET ?lGetQuestData1@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetQuestData1
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227398
	push	edi
	push	esi
	call	_lua_setfield

; 585  : 	Method(GetQuestData2);

	push	0
	push	OFFSET ?lGetQuestData2@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetQuestData2
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227399
	push	edi
	push	esi
	call	_lua_setfield

; 586  : 	Method(GetQuestTurnsRemaining);

	push	0
	push	OFFSET ?lGetQuestTurnsRemaining@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetQuestTurnsRemaining
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227400
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 587  : 	Method(IsMinorCivContestLeader);

	push	0
	push	OFFSET ?lIsMinorCivContestLeader@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsMinorCivContestLeader
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227401
	push	edi
	push	esi
	call	_lua_setfield

; 588  : 	Method(GetMinorCivContestValueForLeader);

	push	0
	push	OFFSET ?lGetMinorCivContestValueForLeader@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivContestValueForLeader
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227402
	push	edi
	push	esi
	call	_lua_setfield

; 589  : 	Method(GetMinorCivContestValueForPlayer);

	push	0
	push	OFFSET ?lGetMinorCivContestValueForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivContestValueForPlayer
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227403
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 590  : 	Method(IsMinorCivUnitSpawningDisabled);

	push	0
	push	OFFSET ?lIsMinorCivUnitSpawningDisabled@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsMinorCivUnitSpawningDisabled
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227404
	push	edi
	push	esi
	call	_lua_setfield

; 591  : 	Method(IsMinorCivRouteEstablishedWithMajor);

	push	0
	push	OFFSET ?lIsMinorCivRouteEstablishedWithMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsMinorCivRouteEstablishedWithMajor
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227405
	push	edi
	push	esi
	call	_lua_setfield

; 592  : 	Method(IsMinorWarQuestWithMajorActive);

	push	0
	push	OFFSET ?lIsMinorWarQuestWithMajorActive@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsMinorWarQuestWithMajorActive
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227406
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 593  : 	Method(GetMinorWarQuestWithMajorRemainingCount);

	push	0
	push	OFFSET ?lGetMinorWarQuestWithMajorRemainingCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorWarQuestWithMajorRemainingCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227407
	push	edi
	push	esi
	call	_lua_setfield

; 594  : 	Method(IsProxyWarActiveForMajor);

	push	0
	push	OFFSET ?lIsProxyWarActiveForMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsProxyWarActiveForMajor
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227408
	push	edi
	push	esi
	call	_lua_setfield

; 595  : 	Method(IsThreateningBarbariansEventActiveForPlayer);

	push	0
	push	OFFSET ?lIsThreateningBarbariansEventActiveForPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsThreateningBarbariansEventActiveForPlayer
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227409
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 596  : 	Method(GetTurnsSinceThreatenedByBarbarians);

	push	0
	push	OFFSET ?lGetTurnsSinceThreatenedByBarbarians@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTurnsSinceThreatenedByBarbarians
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227410
	push	edi
	push	esi
	call	_lua_setfield

; 597  : 	Method(GetTurnsSinceThreatenedAnnouncement);

	push	0
	push	OFFSET ?lGetTurnsSinceThreatenedAnnouncement@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTurnsSinceThreatenedAnnouncement
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227411
	push	edi
	push	esi
	call	_lua_setfield

; 598  : 	Method(GetFriendshipFromGoldGift);

	push	0
	push	OFFSET ?lGetFriendshipFromGoldGift@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFriendshipFromGoldGift
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227412
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 599  : #ifdef NQ_BELIEF_TOGGLE_ALLOW_FAITH_GIFTS_TO_MINORS
; 600  : 	Method(GetFriendshipFromFaithGift);

	push	0
	push	OFFSET ?lGetFriendshipFromFaithGift@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFriendshipFromFaithGift
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227413
	push	edi
	push	esi
	call	_lua_setfield

; 601  : 	Method(IsSameReligionAsMajor);

	push	0
	push	OFFSET ?lIsSameReligionAsMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsSameReligionAsMajor
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227414
	push	edi
	push	esi
	call	_lua_setfield

; 602  : #endif
; 603  : 	Method(GetFriendshipNeededForNextLevel);

	push	0
	push	OFFSET ?lGetFriendshipNeededForNextLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFriendshipNeededForNextLevel
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227415
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 604  : 	Method(GetMinorCivFavoriteMajor);

	push	0
	push	OFFSET ?lGetMinorCivFavoriteMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivFavoriteMajor
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227416
	push	edi
	push	esi
	call	_lua_setfield

; 605  : 	Method(GetMinorCivScienceFriendshipBonus);

	push	0
	push	OFFSET ?lGetMinorCivScienceFriendshipBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivScienceFriendshipBonus
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227417
	push	edi
	push	esi
	call	_lua_setfield

; 606  : 	Method(GetMinorCivCultureFriendshipBonus); // DEPRECATED

	push	0
	push	OFFSET ?lGetMinorCivCultureFriendshipBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivCultureFriendshipBonus
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227418
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 607  : 	Method(GetMinorCivCurrentCultureFlatBonus);

	push	0
	push	OFFSET ?lGetMinorCivCurrentCultureFlatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivCurrentCultureFlatBonus
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227419
	push	edi
	push	esi
	call	_lua_setfield

; 608  : 	Method(GetMinorCivCurrentCulturePerBuildingBonus);

	push	0
	push	OFFSET ?lGetMinorCivCurrentCulturePerBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivCurrentCulturePerBuildingBonus
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227420
	push	edi
	push	esi
	call	_lua_setfield

; 609  : 	Method(GetCurrentCultureBonus); // DEPRECATED

	push	0
	push	OFFSET ?lGetCurrentCultureBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCurrentCultureBonus
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227421
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 610  : 	Method(GetMinorCivCurrentCultureBonus);

	push	0
	push	OFFSET ?lGetMinorCivCurrentCultureBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivCurrentCultureBonus
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227422
	push	edi
	push	esi
	call	_lua_setfield

; 611  : 	Method(GetMinorCivHappinessFriendshipBonus); // DEPRECATED

	push	0
	push	OFFSET ?lGetMinorCivHappinessFriendshipBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivHappinessFriendshipBonus
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227423
	push	edi
	push	esi
	call	_lua_setfield

; 612  : 	Method(GetMinorCivCurrentHappinessFlatBonus);

	push	0
	push	OFFSET ?lGetMinorCivCurrentHappinessFlatBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivCurrentHappinessFlatBonus
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227424
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 613  : 	Method(GetMinorCivCurrentHappinessPerLuxuryBonus);

	push	0
	push	OFFSET ?lGetMinorCivCurrentHappinessPerLuxuryBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivCurrentHappinessPerLuxuryBonus
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227425
	push	edi
	push	esi
	call	_lua_setfield

; 614  : 	Method(GetMinorCivCurrentHappinessBonus);

	push	0
	push	OFFSET ?lGetMinorCivCurrentHappinessBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivCurrentHappinessBonus
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227426
	push	edi
	push	esi
	call	_lua_setfield

; 615  : 	Method(GetMinorCivCurrentFaithBonus);

	push	0
	push	OFFSET ?lGetMinorCivCurrentFaithBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivCurrentFaithBonus
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227427
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 616  : 	Method(GetCurrentCapitalFoodBonus);

	push	0
	push	OFFSET ?lGetCurrentCapitalFoodBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCurrentCapitalFoodBonus
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227428
	push	edi
	push	esi
	call	_lua_setfield

; 617  : 	Method(GetCurrentOtherCityFoodBonus);

	push	0
	push	OFFSET ?lGetCurrentOtherCityFoodBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCurrentOtherCityFoodBonus
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227429
	push	edi
	push	esi
	call	_lua_setfield

; 618  : 	Method(GetCurrentSpawnEstimate);

	push	0
	push	OFFSET ?lGetCurrentSpawnEstimate@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCurrentSpawnEstimate
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227430
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 619  : 	Method(GetCurrentScienceFriendshipBonusTimes100);

	push	0
	push	OFFSET ?lGetCurrentScienceFriendshipBonusTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCurrentScienceFriendshipBonusTimes100
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227431
	push	edi
	push	esi
	call	_lua_setfield

; 620  : 	Method(IsPeaceBlocked);

	push	0
	push	OFFSET ?lIsPeaceBlocked@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPeaceBlocked
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227432
	push	edi
	push	esi
	call	_lua_setfield

; 621  : #ifdef NQ_PEACE_BLOCKED_IF_INFLUENCE_TOO_LOW
; 622  : 	Method(IsInfluenceTooLowForPeace);

	push	0
	push	OFFSET ?lIsInfluenceTooLowForPeace@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsInfluenceTooLowForPeace
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227433
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 623  : #endif
; 624  : 	Method(IsMinorPermanentWar);

	push	0
	push	OFFSET ?lIsMinorPermanentWar@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsMinorPermanentWar
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227434
	push	edi
	push	esi
	call	_lua_setfield

; 625  : 	Method(GetNumMinorCivsMet);

	push	0
	push	OFFSET ?lGetNumMinorCivsMet@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumMinorCivsMet
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227435
	push	edi
	push	esi
	call	_lua_setfield

; 626  : 	Method(DoMinorLiberationByMajor);

	push	0
	push	OFFSET ?lDoMinorLiberationByMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lDoMinorLiberationByMajor
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227436
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 627  : 	Method(IsProtectedByMajor);

	push	0
	push	OFFSET ?lIsProtectedByMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsProtectedByMajor
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227437
	push	edi
	push	esi
	call	_lua_setfield

; 628  : 	Method(CanMajorProtect);

	push	0
	push	OFFSET ?lCanMajorProtect@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanMajorProtect
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227438
	push	edi
	push	esi
	call	_lua_setfield

; 629  : 	Method(CanMajorStartProtection);

	push	0
	push	OFFSET ?lCanMajorStartProtection@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanMajorStartProtection
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227439
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 630  : 	Method(CanMajorWithdrawProtection);

	push	0
	push	OFFSET ?lCanMajorWithdrawProtection@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanMajorWithdrawProtection
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227440
	push	edi
	push	esi
	call	_lua_setfield

; 631  : 	Method(GetTurnLastPledgedProtectionByMajor);

	push	0
	push	OFFSET ?lGetTurnLastPledgedProtectionByMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTurnLastPledgedProtectionByMajor
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227441
	push	edi
	push	esi
	call	_lua_setfield

; 632  : 	Method(GetTurnLastPledgeBrokenByMajor);

	push	0
	push	OFFSET ?lGetTurnLastPledgeBrokenByMajor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTurnLastPledgeBrokenByMajor
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227442
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 633  : 	Method(GetMinorCivBullyGoldAmount);

	push	0
	push	OFFSET ?lGetMinorCivBullyGoldAmount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivBullyGoldAmount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227443
	push	edi
	push	esi
	call	_lua_setfield

; 634  : 	Method(CanMajorBullyGold);

	push	0
	push	OFFSET ?lCanMajorBullyGold@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanMajorBullyGold
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227444
	push	edi
	push	esi
	call	_lua_setfield

; 635  : 	Method(GetMajorBullyGoldDetails);

	push	0
	push	OFFSET ?lGetMajorBullyGoldDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMajorBullyGoldDetails
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227445
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 636  : 	Method(CanMajorBullyUnit);

	push	0
	push	OFFSET ?lCanMajorBullyUnit@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanMajorBullyUnit
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227446
	push	edi
	push	esi
	call	_lua_setfield

; 637  : 	Method(GetMajorBullyUnitDetails);

	push	0
	push	OFFSET ?lGetMajorBullyUnitDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMajorBullyUnitDetails
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227447
	push	edi
	push	esi
	call	_lua_setfield

; 638  : 	Method(CanMajorBuyout);

	push	0
	push	OFFSET ?lCanMajorBuyout@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanMajorBuyout
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227448
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 639  : 	Method(GetBuyoutCost);

	push	0
	push	OFFSET ?lGetBuyoutCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBuyoutCost
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227449
	push	edi
	push	esi
	call	_lua_setfield

; 640  : 	Method(CanMajorGiftTileImprovement);

	push	0
	push	OFFSET ?lCanMajorGiftTileImprovement@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanMajorGiftTileImprovement
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227450
	push	edi
	push	esi
	call	_lua_setfield

; 641  : 	Method(CanMajorGiftTileImprovementAtPlot);

	push	0
	push	OFFSET ?lCanMajorGiftTileImprovementAtPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanMajorGiftTileImprovementAtPlot
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227451
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 642  : 	Method(GetGiftTileImprovementCost);

	push	0
	push	OFFSET ?lGetGiftTileImprovementCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGiftTileImprovementCost
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227452
	push	edi
	push	esi
	call	_lua_setfield

; 643  : 	Method(AddMinorCivQuestIfAble);

	push	0
	push	OFFSET ?lAddMinorCivQuestIfAble@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lAddMinorCivQuestIfAble
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227453
	push	edi
	push	esi
	call	_lua_setfield

; 644  : 	Method(GetFriendshipFromUnitGift);

	push	0
	push	OFFSET ?lGetFriendshipFromUnitGift@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFriendshipFromUnitGift
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227454
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 645  : 
; 646  : 	Method(IsAlive);

	push	0
	push	OFFSET ?lIsAlive@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAlive
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227455
	push	edi
	push	esi
	call	_lua_setfield

; 647  : 	Method(IsEverAlive);

	push	0
	push	OFFSET ?lIsEverAlive@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsEverAlive
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227456
	push	edi
	push	esi
	call	_lua_setfield

; 648  : 	Method(IsExtendedGame);

	push	0
	push	OFFSET ?lIsExtendedGame@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsExtendedGame
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227457
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 649  : 	Method(IsFoundedFirstCity);

	push	0
	push	OFFSET ?lIsFoundedFirstCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsFoundedFirstCity
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227458
	push	edi
	push	esi
	call	_lua_setfield

; 650  : 
; 651  : 	Method(GetEndTurnBlockingType);

	push	0
	push	OFFSET ?lGetEndTurnBlockingType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetEndTurnBlockingType
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227459
	push	edi
	push	esi
	call	_lua_setfield

; 652  : 	Method(GetEndTurnBlockingNotificationIndex);

	push	0
	push	OFFSET ?lGetEndTurnBlockingNotificationIndex@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetEndTurnBlockingNotificationIndex
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227460
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 653  : 	Method(HasReceivedNetTurnComplete);

	push	0
	push	OFFSET ?lHasReceivedNetTurnComplete@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasReceivedNetTurnComplete
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227461
	push	edi
	push	esi
	call	_lua_setfield

; 654  : 	Method(IsStrike);

	push	0
	push	OFFSET ?lIsStrike@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsStrike
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227462
	push	edi
	push	esi
	call	_lua_setfield

; 655  : 
; 656  : 	Method(GetID);

	push	0
	push	OFFSET ?lGetID@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetID
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227463
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 657  : 	Method(GetHandicapType);

	push	0
	push	OFFSET ?lGetHandicapType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHandicapType
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227464
	push	edi
	push	esi
	call	_lua_setfield

; 658  : 	Method(GetCivilizationType);

	push	0
	push	OFFSET ?lGetCivilizationType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCivilizationType
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227465
	push	edi
	push	esi
	call	_lua_setfield

; 659  : 	Method(GetLeaderType);

	push	0
	push	OFFSET ?lGetLeaderType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetLeaderType
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227466
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 660  : 	Method(GetPersonalityType);

	push	0
	push	OFFSET ?lGetPersonalityType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPersonalityType
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227467
	push	edi
	push	esi
	call	_lua_setfield

; 661  : 	Method(SetPersonalityType);

	push	0
	push	OFFSET ?lSetPersonalityType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetPersonalityType
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227468
	push	edi
	push	esi
	call	_lua_setfield

; 662  : 	Method(GetCurrentEra);

	push	0
	push	OFFSET ?lGetCurrentEra@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCurrentEra
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227469
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 663  : 
; 664  : 	Method(GetTeam);

	push	0
	push	OFFSET ?lGetTeam@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTeam
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227470
	push	edi
	push	esi
	call	_lua_setfield

; 665  : 
; 666  : 	Method(GetPlayerColor);

	push	0
	push	OFFSET ?lGetPlayerColor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPlayerColor
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227471
	push	edi
	push	esi
	call	_lua_setfield

; 667  : 	Method(GetPlayerColors);

	push	0
	push	OFFSET ?lGetPlayerColors@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPlayerColors
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227472
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 668  : 
; 669  : 	Method(GetSeaPlotYield);

	push	0
	push	OFFSET ?lGetSeaPlotYield@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetSeaPlotYield
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227473
	push	edi
	push	esi
	call	_lua_setfield

; 670  : 	Method(GetYieldRateModifier);

	push	0
	push	OFFSET ?lGetYieldRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetYieldRateModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227474
	push	edi
	push	esi
	call	_lua_setfield

; 671  : 	Method(GetCapitalYieldRateModifier);

	push	0
	push	OFFSET ?lGetCapitalYieldRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCapitalYieldRateModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227475
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 672  : 	Method(GetExtraYieldThreshold);

	push	0
	push	OFFSET ?lGetExtraYieldThreshold@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetExtraYieldThreshold
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227476
	push	edi
	push	esi
	call	_lua_setfield

; 673  : 
; 674  : 	// Science
; 675  : 
; 676  : 	Method(GetScience);

	push	0
	push	OFFSET ?lGetScience@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScience
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227477
	push	edi
	push	esi
	call	_lua_setfield

; 677  : 	Method(GetScienceTimes100);

	push	0
	push	OFFSET ?lGetScienceTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScienceTimes100
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227478
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 678  : 
; 679  : 	Method(GetScienceFromCitiesTimes100);

	push	0
	push	OFFSET ?lGetScienceFromCitiesTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScienceFromCitiesTimes100
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227479
	push	edi
	push	esi
	call	_lua_setfield

; 680  : 	Method(GetScienceFromOtherPlayersTimes100);

	push	0
	push	OFFSET ?lGetScienceFromOtherPlayersTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScienceFromOtherPlayersTimes100
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227480
	push	edi
	push	esi
	call	_lua_setfield

; 681  : 	Method(GetScienceFromHappinessTimes100);

	push	0
	push	OFFSET ?lGetScienceFromHappinessTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScienceFromHappinessTimes100
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227481
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 682  : #ifdef NQ_GOLD_TO_SCIENCE_FROM_POLICIES
; 683  : 	Method(GetScienceFromGoldTimes100);

	push	0
	push	OFFSET ?lGetScienceFromGoldTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScienceFromGoldTimes100
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227482
	push	edi
	push	esi
	call	_lua_setfield

; 684  : #endif
; 685  : #ifdef NQ_MINOR_FRIENDSHIP_GAIN_BULLY_GOLD_SUCCESS_FROM_POLICIES
; 686  : 	Method(GetMinorFriendshipGainBullyGoldSuccess);

	push	0
	push	OFFSET ?lGetMinorFriendshipGainBullyGoldSuccess@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorFriendshipGainBullyGoldSuccess
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227483
	push	edi
	push	esi
	call	_lua_setfield

; 687  : #endif
; 688  : 	Method(GetScienceFromResearchAgreementsTimes100);

	push	0
	push	OFFSET ?lGetScienceFromResearchAgreementsTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScienceFromResearchAgreementsTimes100
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227484
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 689  : 	Method(GetScienceFromBudgetDeficitTimes100);

	push	0
	push	OFFSET ?lGetScienceFromBudgetDeficitTimes100@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScienceFromBudgetDeficitTimes100
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227485
	push	edi
	push	esi
	call	_lua_setfield

; 690  : 
; 691  : 	// END Science
; 692  : 
; 693  : 	Method(GetProximityToPlayer);

	push	0
	push	OFFSET ?lGetProximityToPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetProximityToPlayer
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227486
	push	edi
	push	esi
	call	_lua_setfield

; 694  : 	Method(DoUpdateProximityToPlayer);

	push	0
	push	OFFSET ?lDoUpdateProximityToPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lDoUpdateProximityToPlayer
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227487
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 695  : 
; 696  : 	Method(GetIncomingUnitType);

	push	0
	push	OFFSET ?lGetIncomingUnitType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetIncomingUnitType
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227488
	push	edi
	push	esi
	call	_lua_setfield

; 697  : 	Method(GetIncomingUnitCountdown);

	push	0
	push	OFFSET ?lGetIncomingUnitCountdown@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetIncomingUnitCountdown
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227489
	push	edi
	push	esi
	call	_lua_setfield

; 698  : 
; 699  : 	Method(IsOption);

	push	0
	push	OFFSET ?lIsOption@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsOption
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227490
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 700  : 	Method(SetOption);

	push	0
	push	OFFSET ?lSetOption@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetOption
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227491
	push	edi
	push	esi
	call	_lua_setfield

; 701  : 	Method(IsPlayable);

	push	0
	push	OFFSET ?lIsPlayable@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayable
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227492
	push	edi
	push	esi
	call	_lua_setfield

; 702  : 	Method(SetPlayable);

	push	0
	push	OFFSET ?lSetPlayable@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetPlayable
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227493
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 703  : 
; 704  : 	Method(GetNumResourceUsed);

	push	0
	push	OFFSET ?lGetNumResourceUsed@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumResourceUsed
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227494
	push	edi
	push	esi
	call	_lua_setfield

; 705  : 	Method(GetNumResourceTotal);

	push	0
	push	OFFSET ?lGetNumResourceTotal@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumResourceTotal
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227495
	push	edi
	push	esi
	call	_lua_setfield

; 706  : 	Method(ChangeNumResourceTotal);

	push	0
	push	OFFSET ?lChangeNumResourceTotal@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNumResourceTotal
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227496
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 707  : 	Method(GetNumResourceAvailable);

	push	0
	push	OFFSET ?lGetNumResourceAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumResourceAvailable
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227497
	push	edi
	push	esi
	call	_lua_setfield

; 708  : 
; 709  : 	Method(GetResourceExport);

	push	0
	push	OFFSET ?lGetResourceExport@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetResourceExport
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227498
	push	edi
	push	esi
	call	_lua_setfield

; 710  : 	Method(GetResourceImport);

	push	0
	push	OFFSET ?lGetResourceImport@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetResourceImport
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227499
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 711  : 	Method(GetResourceFromMinors);

	push	0
	push	OFFSET ?lGetResourceFromMinors@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetResourceFromMinors
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227500
	push	edi
	push	esi
	call	_lua_setfield

; 712  : 
; 713  : 	Method(GetImprovementCount);

	push	0
	push	OFFSET ?lGetImprovementCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetImprovementCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227501
	push	edi
	push	esi
	call	_lua_setfield

; 714  : 
; 715  : 	Method(IsBuildingFree);

	push	0
	push	OFFSET ?lIsBuildingFree@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsBuildingFree
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227502
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 716  : 	Method(GetUnitClassCount);

	push	0
	push	OFFSET ?lGetUnitClassCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnitClassCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227503
	push	edi
	push	esi
	call	_lua_setfield

; 717  : 	Method(IsUnitClassMaxedOut);

	push	0
	push	OFFSET ?lIsUnitClassMaxedOut@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsUnitClassMaxedOut
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227504
	push	edi
	push	esi
	call	_lua_setfield

; 718  : 	Method(GetUnitClassMaking);

	push	0
	push	OFFSET ?lGetUnitClassMaking@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnitClassMaking
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227505
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 719  : 	Method(GetUnitClassCountPlusMaking);

	push	0
	push	OFFSET ?lGetUnitClassCountPlusMaking@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnitClassCountPlusMaking
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227506
	push	edi
	push	esi
	call	_lua_setfield

; 720  : 
; 721  : 	Method(GetBuildingClassCount);

	push	0
	push	OFFSET ?lGetBuildingClassCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBuildingClassCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227507
	push	edi
	push	esi
	call	_lua_setfield

; 722  : 	Method(IsBuildingClassMaxedOut);

	push	0
	push	OFFSET ?lIsBuildingClassMaxedOut@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsBuildingClassMaxedOut
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227508
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 723  : 	Method(GetBuildingClassMaking);

	push	0
	push	OFFSET ?lGetBuildingClassMaking@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBuildingClassMaking
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227509
	push	edi
	push	esi
	call	_lua_setfield

; 724  : 	Method(GetBuildingClassCountPlusMaking);

	push	0
	push	OFFSET ?lGetBuildingClassCountPlusMaking@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBuildingClassCountPlusMaking
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227510
	push	edi
	push	esi
	call	_lua_setfield

; 725  : 	Method(GetHurryCount);

	push	0
	push	OFFSET ?lGetHurryCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHurryCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227511
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 726  : 	Method(IsHasAccessToHurry);

	push	0
	push	OFFSET ?lIsHasAccessToHurry@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsHasAccessToHurry
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227512
	push	edi
	push	esi
	call	_lua_setfield

; 727  : 	Method(IsCanHurry);

	push	0
	push	OFFSET ?lIsCanHurry@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsCanHurry
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227513
	push	edi
	push	esi
	call	_lua_setfield

; 728  : 	Method(GetHurryGoldCost);

	push	0
	push	OFFSET ?lGetHurryGoldCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHurryGoldCost
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227514
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 729  : 
; 730  : 	//Method(IsSpecialistValid);
; 731  : 	Method(IsResearchingTech);

	push	0
	push	OFFSET ?lIsResearchingTech@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsResearchingTech
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227515
	push	edi
	push	esi
	call	_lua_setfield

; 732  : 	Method(SetResearchingTech);

	push	0
	push	OFFSET ?lSetResearchingTech@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetResearchingTech
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227516
	push	edi
	push	esi
	call	_lua_setfield

; 733  : 
; 734  : 	Method(GetCombatExperience);

	push	0
	push	OFFSET ?lGetCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCombatExperience
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227517
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 735  : 	Method(ChangeCombatExperience);

	push	0
	push	OFFSET ?lChangeCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeCombatExperience
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227518
	push	edi
	push	esi
	call	_lua_setfield

; 736  : 	Method(SetCombatExperience);

	push	0
	push	OFFSET ?lSetCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetCombatExperience
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227519
	push	edi
	push	esi
	call	_lua_setfield

; 737  : 	Method(GetLifetimeCombatExperience);

	push	0
	push	OFFSET ?lGetLifetimeCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetLifetimeCombatExperience
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227520
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 738  : 	Method(GetNavalCombatExperience);

	push	0
	push	OFFSET ?lGetNavalCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNavalCombatExperience
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227521
	push	edi
	push	esi
	call	_lua_setfield

; 739  : 	Method(ChangeNavalCombatExperience);

	push	0
	push	OFFSET ?lChangeNavalCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNavalCombatExperience
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227522
	push	edi
	push	esi
	call	_lua_setfield

; 740  : 	Method(SetNavalCombatExperience);

	push	0
	push	OFFSET ?lSetNavalCombatExperience@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetNavalCombatExperience
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227523
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 741  : 
; 742  : 	Method(GetSpecialistExtraYield);

	push	0
	push	OFFSET ?lGetSpecialistExtraYield@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetSpecialistExtraYield
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227524
	push	edi
	push	esi
	call	_lua_setfield

; 743  : 
; 744  : 	Method(FindPathLength);

	push	0
	push	OFFSET ?lFindPathLength@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lFindPathLength
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227525
	push	edi
	push	esi
	call	_lua_setfield

; 745  : 
; 746  : 	Method(GetQueuePosition);

	push	0
	push	OFFSET ?lGetQueuePosition@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetQueuePosition
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227526
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 747  : 	Method(ClearResearchQueue);

	push	0
	push	OFFSET ?lClearResearchQueue@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lClearResearchQueue
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227527
	push	edi
	push	esi
	call	_lua_setfield

; 748  : 	Method(PushResearch);

	push	0
	push	OFFSET ?lPushResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lPushResearch
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227528
	push	edi
	push	esi
	call	_lua_setfield

; 749  : 	Method(PopResearch);

	push	0
	push	OFFSET ?lPopResearch@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lPopResearch
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227529
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 750  : 	Method(GetLengthResearchQueue);

	push	0
	push	OFFSET ?lGetLengthResearchQueue@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetLengthResearchQueue
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227530
	push	edi
	push	esi
	call	_lua_setfield

; 751  : 	Method(AddCityName);

	push	0
	push	OFFSET ?lAddCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lAddCityName
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227531
	push	edi
	push	esi
	call	_lua_setfield

; 752  : 	Method(GetNumCityNames);

	push	0
	push	OFFSET ?lGetNumCityNames@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumCityNames
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227532
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 753  : 	Method(GetCityName);

	push	0
	push	OFFSET ?lGetCityName@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCityName
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227533
	push	edi
	push	esi
	call	_lua_setfield

; 754  : 
; 755  : 	Method(Cities);

	push	0
	push	OFFSET ?lCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCities
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227534
	push	edi
	push	esi
	call	_lua_setfield

; 756  : 	Method(GetNumCities);

	push	0
	push	OFFSET ?lGetNumCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumCities
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227535
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 757  : 	Method(GetCityByID);

	push	0
	push	OFFSET ?lGetCityByID@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCityByID
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227536
	push	edi
	push	esi
	call	_lua_setfield

; 758  : 
; 759  : 	Method(Units);

	push	0
	push	OFFSET ?lUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lUnits
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227537
	push	edi
	push	esi
	call	_lua_setfield

; 760  : 	Method(GetNumUnits);

	push	0
	push	OFFSET ?lGetNumUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumUnits
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227538
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 761  : 	Method(GetUnitByID);

	push	0
	push	OFFSET ?lGetUnitByID@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnitByID
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227539
	push	edi
	push	esi
	call	_lua_setfield

; 762  : 
; 763  : 	Method(AI_updateFoundValues);

	push	0
	push	OFFSET ?lAI_updateFoundValues@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lAI_updateFoundValues
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227540
	push	edi
	push	esi
	call	_lua_setfield

; 764  : 	Method(AI_foundValue);

	push	0
	push	OFFSET ?lAI_foundValue@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lAI_foundValue
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227541
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 765  : 
; 766  : 	Method(GetScoreHistory);

	push	0
	push	OFFSET ?lGetScoreHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScoreHistory
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227542
	push	edi
	push	esi
	call	_lua_setfield

; 767  : 	Method(GetEconomyHistory);

	push	0
	push	OFFSET ?lGetEconomyHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetEconomyHistory
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227543
	push	edi
	push	esi
	call	_lua_setfield

; 768  : 	Method(GetIndustryHistory);

	push	0
	push	OFFSET ?lGetIndustryHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetIndustryHistory
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227544
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 769  : 	Method(GetAgricultureHistory);

	push	0
	push	OFFSET ?lGetAgricultureHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAgricultureHistory
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227545
	push	edi
	push	esi
	call	_lua_setfield

; 770  : 	Method(GetPowerHistory);

	push	0
	push	OFFSET ?lGetPowerHistory@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPowerHistory
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227546
	push	edi
	push	esi
	call	_lua_setfield

; 771  : 
; 772  : 	Method(GetReplayData);

	push	0
	push	OFFSET ?lGetReplayData@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetReplayData
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227547
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 773  : 	Method(SetReplayDataValue);

	push	0
	push	OFFSET ?lSetReplayDataValue@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetReplayDataValue
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227548
	push	edi
	push	esi
	call	_lua_setfield

; 774  : 
; 775  : 	Method(GetScriptData);

	push	0
	push	OFFSET ?lGetScriptData@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetScriptData
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227549
	push	edi
	push	esi
	call	_lua_setfield

; 776  : 	Method(SetScriptData);

	push	0
	push	OFFSET ?lSetScriptData@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetScriptData
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227550
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 777  : 
; 778  : 	Method(GetNumPlots);

	push	0
	push	OFFSET ?lGetNumPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumPlots
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227551
	push	edi
	push	esi
	call	_lua_setfield

; 779  : 
; 780  : 	Method(GetNumPlotsBought);

	push	0
	push	OFFSET ?lGetNumPlotsBought@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumPlotsBought
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227552
	push	edi
	push	esi
	call	_lua_setfield

; 781  : 	Method(SetNumPlotsBought);

	push	0
	push	OFFSET ?lSetNumPlotsBought@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetNumPlotsBought
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227553
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 782  : 	Method(ChangeNumPlotsBought);

	push	0
	push	OFFSET ?lChangeNumPlotsBought@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNumPlotsBought
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227554
	push	edi
	push	esi
	call	_lua_setfield

; 783  : 
; 784  : 	Method(GetBuyPlotCost);

	push	0
	push	OFFSET ?lGetBuyPlotCost@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetBuyPlotCost
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227555
	push	edi
	push	esi
	call	_lua_setfield

; 785  : 	Method(GetPlotDanger);

	push	0
	push	OFFSET ?lGetPlotDanger@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPlotDanger
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227556
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 786  : 
; 787  : 	Method(DoBeginDiploWithHuman);

	push	0
	push	OFFSET ?lDoBeginDiploWithHuman@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lDoBeginDiploWithHuman
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227557
	push	edi
	push	esi
	call	_lua_setfield

; 788  : 	Method(DoTradeScreenOpened);

	push	0
	push	OFFSET ?lDoTradeScreenOpened@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lDoTradeScreenOpened
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227558
	push	edi
	push	esi
	call	_lua_setfield

; 789  : 	Method(DoTradeScreenClosed);

	push	0
	push	OFFSET ?lDoTradeScreenClosed@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lDoTradeScreenClosed
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227559
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 790  : 	Method(GetMajorCivApproach);

	push	0
	push	OFFSET ?lGetMajorCivApproach@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMajorCivApproach
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227560
	push	edi
	push	esi
	call	_lua_setfield

; 791  : 	Method(GetApproachTowardsUsGuess);

	push	0
	push	OFFSET ?lGetApproachTowardsUsGuess@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetApproachTowardsUsGuess
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227561
	push	edi
	push	esi
	call	_lua_setfield

; 792  : 	Method(IsWillAcceptPeaceWithPlayer);

	push	0
	push	OFFSET ?lIsWillAcceptPeaceWithPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsWillAcceptPeaceWithPlayer
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227562
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 793  : 	Method(IsProtectingMinor);

	push	0
	push	OFFSET ?lIsProtectingMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsProtectingMinor
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227563
	push	edi
	push	esi
	call	_lua_setfield

; 794  : 	Method(IsDontSettleMessageTooSoon);

	push	0
	push	OFFSET ?lIsDontSettleMessageTooSoon@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsDontSettleMessageTooSoon
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227564
	push	edi
	push	esi
	call	_lua_setfield

; 795  : 	Method(IsStopSpyingMessageTooSoon);

	push	0
	push	OFFSET ?lIsStopSpyingMessageTooSoon@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsStopSpyingMessageTooSoon
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227565
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 796  : 	Method(IsAskedToStopConverting);

	push	0
	push	OFFSET ?lIsAskedToStopConverting@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAskedToStopConverting
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227566
	push	edi
	push	esi
	call	_lua_setfield

; 797  : 	Method(IsAskedToStopDigging);

	push	0
	push	OFFSET ?lIsAskedToStopDigging@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAskedToStopDigging
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227567
	push	edi
	push	esi
	call	_lua_setfield

; 798  : 	Method(IsDoFMessageTooSoon);

	push	0
	push	OFFSET ?lIsDoFMessageTooSoon@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsDoFMessageTooSoon
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227568
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 799  : 	Method(IsDoF);

	push	0
	push	OFFSET ?lIsDoF@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsDoF
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227569
	push	edi
	push	esi
	call	_lua_setfield

; 800  : 	Method(GetDoFCounter);

	push	0
	push	OFFSET ?lGetDoFCounter@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetDoFCounter
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227570
	push	edi
	push	esi
	call	_lua_setfield

; 801  : 	Method(IsPlayerDoFwithAnyFriend);

	push	0
	push	OFFSET ?lIsPlayerDoFwithAnyFriend@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerDoFwithAnyFriend
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227571
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 802  : 	Method(IsPlayerDoFwithAnyEnemy);

	push	0
	push	OFFSET ?lIsPlayerDoFwithAnyEnemy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerDoFwithAnyEnemy
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227572
	push	edi
	push	esi
	call	_lua_setfield

; 803  : 	Method(IsPlayerDenouncedFriend);

	push	0
	push	OFFSET ?lIsPlayerDenouncedFriend@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerDenouncedFriend
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227573
	push	edi
	push	esi
	call	_lua_setfield

; 804  : 	Method(IsPlayerDenouncedEnemy);

	push	0
	push	OFFSET ?lIsPlayerDenouncedEnemy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerDenouncedEnemy
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227574
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 805  : 	Method(IsUntrustworthyFriend);

	push	0
	push	OFFSET ?lIsUntrustworthyFriend@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsUntrustworthyFriend
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227575
	push	edi
	push	esi
	call	_lua_setfield

; 806  : 	Method(GetNumFriendsDenouncedBy);

	push	0
	push	OFFSET ?lGetNumFriendsDenouncedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumFriendsDenouncedBy
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227576
	push	edi
	push	esi
	call	_lua_setfield

; 807  : 	Method(IsFriendDenouncedUs);

	push	0
	push	OFFSET ?lIsFriendDenouncedUs@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsFriendDenouncedUs
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227577
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 808  : 	Method(GetWeDenouncedFriendCount);

	push	0
	push	OFFSET ?lGetWeDenouncedFriendCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetWeDenouncedFriendCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227578
	push	edi
	push	esi
	call	_lua_setfield

; 809  : 	Method(IsFriendDeclaredWarOnUs);

	push	0
	push	OFFSET ?lIsFriendDeclaredWarOnUs@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsFriendDeclaredWarOnUs
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227579
	push	edi
	push	esi
	call	_lua_setfield

; 810  : 	Method(GetWeDeclaredWarOnFriendCount);

	push	0
	push	OFFSET ?lGetWeDeclaredWarOnFriendCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetWeDeclaredWarOnFriendCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227580
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 811  : 	//Method(IsWorkingAgainstPlayerAccepted);
; 812  : 	Method(GetCoopWarAcceptedState);

	push	0
	push	OFFSET ?lGetCoopWarAcceptedState@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCoopWarAcceptedState
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227581
	push	edi
	push	esi
	call	_lua_setfield

; 813  : 	Method(GetNumWarsFought);

	push	0
	push	OFFSET ?lGetNumWarsFought@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumWarsFought
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227582
	push	edi
	push	esi
	call	_lua_setfield

; 814  : 
; 815  : 	Method(GetLandDisputeLevel);

	push	0
	push	OFFSET ?lGetLandDisputeLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetLandDisputeLevel
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227583
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 816  : 	Method(GetVictoryDisputeLevel);

	push	0
	push	OFFSET ?lGetVictoryDisputeLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetVictoryDisputeLevel
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227584
	push	edi
	push	esi
	call	_lua_setfield

; 817  : 	Method(GetWonderDisputeLevel);

	push	0
	push	OFFSET ?lGetWonderDisputeLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetWonderDisputeLevel
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227585
	push	edi
	push	esi
	call	_lua_setfield

; 818  : 	Method(GetMinorCivDisputeLevel);

	push	0
	push	OFFSET ?lGetMinorCivDisputeLevel@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMinorCivDisputeLevel
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227586
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 819  : 	Method(GetWarmongerThreat);

	push	0
	push	OFFSET ?lGetWarmongerThreat@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetWarmongerThreat
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227587
	push	edi
	push	esi
	call	_lua_setfield

; 820  : 	Method(IsPlayerNoSettleRequestEverAsked);

	push	0
	push	OFFSET ?lIsPlayerNoSettleRequestEverAsked@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerNoSettleRequestEverAsked
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227588
	push	edi
	push	esi
	call	_lua_setfield

; 821  : 	Method(IsPlayerStopSpyingRequestEverAsked);

	push	0
	push	OFFSET ?lIsPlayerStopSpyingRequestEverAsked@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerStopSpyingRequestEverAsked
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227589
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 822  : 	Method(IsDemandEverMade);

	push	0
	push	OFFSET ?lIsDemandEverMade@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsDemandEverMade
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227590
	push	edi
	push	esi
	call	_lua_setfield

; 823  : 	Method(GetNumCiviliansReturnedToMe);

	push	0
	push	OFFSET ?lGetNumCiviliansReturnedToMe@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumCiviliansReturnedToMe
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227591
	push	edi
	push	esi
	call	_lua_setfield

; 824  : 	Method(GetNumLandmarksBuiltForMe);

	push	0
	push	OFFSET ?lGetNumLandmarksBuiltForMe@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumLandmarksBuiltForMe
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227592
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 825  : 	Method(GetNumTimesCultureBombed);

	push	0
	push	OFFSET ?lGetNumTimesCultureBombed@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumTimesCultureBombed
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227593
	push	edi
	push	esi
	call	_lua_setfield

; 826  : 	Method(GetNegativeReligiousConversionPoints);

	push	0
	push	OFFSET ?lGetNegativeReligiousConversionPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNegativeReligiousConversionPoints
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227594
	push	edi
	push	esi
	call	_lua_setfield

; 827  : 	Method(GetNegativeArchaeologyPoints);

	push	0
	push	OFFSET ?lGetNegativeArchaeologyPoints@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNegativeArchaeologyPoints
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227595
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 828  : 	Method(HasOthersReligionInMostCities);

	push	0
	push	OFFSET ?lHasOthersReligionInMostCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasOthersReligionInMostCities
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227596
	push	edi
	push	esi
	call	_lua_setfield

; 829  : 	Method(IsPlayerBrokenMilitaryPromise);

	push	0
	push	OFFSET ?lIsPlayerBrokenMilitaryPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerBrokenMilitaryPromise
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227597
	push	edi
	push	esi
	call	_lua_setfield

; 830  : 	Method(IsPlayerIgnoredMilitaryPromise);

	push	0
	push	OFFSET ?lIsPlayerIgnoredMilitaryPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerIgnoredMilitaryPromise
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227598
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 831  : 	Method(IsPlayerBrokenExpansionPromise);

	push	0
	push	OFFSET ?lIsPlayerBrokenExpansionPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerBrokenExpansionPromise
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227599
	push	edi
	push	esi
	call	_lua_setfield

; 832  : 	Method(IsPlayerIgnoredExpansionPromise);

	push	0
	push	OFFSET ?lIsPlayerIgnoredExpansionPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerIgnoredExpansionPromise
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227600
	push	edi
	push	esi
	call	_lua_setfield

; 833  : 	Method(IsPlayerBrokenBorderPromise);

	push	0
	push	OFFSET ?lIsPlayerBrokenBorderPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerBrokenBorderPromise
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227601
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 834  : 	Method(IsPlayerIgnoredBorderPromise);

	push	0
	push	OFFSET ?lIsPlayerIgnoredBorderPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerIgnoredBorderPromise
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227602
	push	edi
	push	esi
	call	_lua_setfield

; 835  : 	Method(IsPlayerBrokenAttackCityStatePromise);

	push	0
	push	OFFSET ?lIsPlayerBrokenAttackCityStatePromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerBrokenAttackCityStatePromise
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227603
	push	edi
	push	esi
	call	_lua_setfield

; 836  : 	Method(IsPlayerIgnoredAttackCityStatePromise);

	push	0
	push	OFFSET ?lIsPlayerIgnoredAttackCityStatePromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerIgnoredAttackCityStatePromise
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227604
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 837  : 	Method(IsPlayerBrokenBullyCityStatePromise);

	push	0
	push	OFFSET ?lIsPlayerBrokenBullyCityStatePromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerBrokenBullyCityStatePromise
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227605
	push	edi
	push	esi
	call	_lua_setfield

; 838  : 	Method(IsPlayerIgnoredBullyCityStatePromise);

	push	0
	push	OFFSET ?lIsPlayerIgnoredBullyCityStatePromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerIgnoredBullyCityStatePromise
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227606
	push	edi
	push	esi
	call	_lua_setfield

; 839  : 	Method(IsPlayerBrokenSpyPromise);

	push	0
	push	OFFSET ?lIsPlayerBrokenSpyPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerBrokenSpyPromise
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227607
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 840  : 	Method(IsPlayerIgnoredSpyPromise);

	push	0
	push	OFFSET ?lIsPlayerIgnoredSpyPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerIgnoredSpyPromise
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227608
	push	edi
	push	esi
	call	_lua_setfield

; 841  : 	Method(IsPlayerForgivenForSpying);

	push	0
	push	OFFSET ?lIsPlayerForgivenForSpying@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerForgivenForSpying
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227609
	push	edi
	push	esi
	call	_lua_setfield

; 842  : 	Method(IsPlayerBrokenNoConvertPromise);

	push	0
	push	OFFSET ?lIsPlayerBrokenNoConvertPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerBrokenNoConvertPromise
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227610
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 843  : 	Method(IsPlayerIgnoredNoConvertPromise);

	push	0
	push	OFFSET ?lIsPlayerIgnoredNoConvertPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerIgnoredNoConvertPromise
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227611
	push	edi
	push	esi
	call	_lua_setfield

; 844  : 	Method(IsPlayerBrokenNoDiggingPromise);

	push	0
	push	OFFSET ?lIsPlayerBrokenNoDiggingPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerBrokenNoDiggingPromise
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227612
	push	edi
	push	esi
	call	_lua_setfield

; 845  : 	Method(IsPlayerIgnoredNoDiggingPromise);

	push	0
	push	OFFSET ?lIsPlayerIgnoredNoDiggingPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerIgnoredNoDiggingPromise
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227613
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 846  : 	Method(IsPlayerBrokenCoopWarPromise);

	push	0
	push	OFFSET ?lIsPlayerBrokenCoopWarPromise@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerBrokenCoopWarPromise
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227614
	push	edi
	push	esi
	call	_lua_setfield

; 847  : 	Method(GetOtherPlayerNumProtectedMinorsKilled);

	push	0
	push	OFFSET ?lGetOtherPlayerNumProtectedMinorsKilled@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetOtherPlayerNumProtectedMinorsKilled
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227615
	push	edi
	push	esi
	call	_lua_setfield

; 848  : 	Method(GetOtherPlayerNumProtectedMinorsAttacked);

	push	0
	push	OFFSET ?lGetOtherPlayerNumProtectedMinorsAttacked@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetOtherPlayerNumProtectedMinorsAttacked
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227616
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 849  : 	Method(GetTurnsSincePlayerBulliedProtectedMinor);

	push	0
	push	OFFSET ?lGetTurnsSincePlayerBulliedProtectedMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTurnsSincePlayerBulliedProtectedMinor
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227617
	push	edi
	push	esi
	call	_lua_setfield

; 850  : 	Method(IsHasPlayerBulliedProtectedMinor);

	push	0
	push	OFFSET ?lIsHasPlayerBulliedProtectedMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsHasPlayerBulliedProtectedMinor
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227618
	push	edi
	push	esi
	call	_lua_setfield

; 851  : 	Method(IsDenouncedPlayer);

	push	0
	push	OFFSET ?lIsDenouncedPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsDenouncedPlayer
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227619
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 852  : 	Method(GetDenouncedPlayerCounter);

	push	0
	push	OFFSET ?lGetDenouncedPlayerCounter@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetDenouncedPlayerCounter
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227620
	push	edi
	push	esi
	call	_lua_setfield

; 853  : 	Method(IsDenouncingPlayer);

	push	0
	push	OFFSET ?lIsDenouncingPlayer@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsDenouncingPlayer
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227621
	push	edi
	push	esi
	call	_lua_setfield

; 854  : 	Method(IsPlayerRecklessExpander);

	push	0
	push	OFFSET ?lIsPlayerRecklessExpander@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsPlayerRecklessExpander
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227622
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 855  : 	Method(GetRecentTradeValue);

	push	0
	push	OFFSET ?lGetRecentTradeValue@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetRecentTradeValue
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227623
	push	edi
	push	esi
	call	_lua_setfield

; 856  : 	Method(GetCommonFoeValue);

	push	0
	push	OFFSET ?lGetCommonFoeValue@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCommonFoeValue
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227624
	push	edi
	push	esi
	call	_lua_setfield

; 857  : 	Method(GetRecentAssistValue);

	push	0
	push	OFFSET ?lGetRecentAssistValue@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetRecentAssistValue
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227625
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 858  : 	Method(IsGaveAssistanceTo);

	push	0
	push	OFFSET ?lIsGaveAssistanceTo@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsGaveAssistanceTo
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227626
	push	edi
	push	esi
	call	_lua_setfield

; 859  : 	Method(IsHasPaidTributeTo);

	push	0
	push	OFFSET ?lIsHasPaidTributeTo@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsHasPaidTributeTo
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227627
	push	edi
	push	esi
	call	_lua_setfield

; 860  : 	Method(IsNukedBy);

	push	0
	push	OFFSET ?lIsNukedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsNukedBy
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227628
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 861  : 	Method(IsCapitalCapturedBy);

	push	0
	push	OFFSET ?lIsCapitalCapturedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsCapitalCapturedBy
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227629
	push	edi
	push	esi
	call	_lua_setfield

; 862  : 	Method(IsAngryAboutProtectedMinorKilled);

	push	0
	push	OFFSET ?lIsAngryAboutProtectedMinorKilled@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAngryAboutProtectedMinorKilled
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227630
	push	edi
	push	esi
	call	_lua_setfield

; 863  : 	Method(IsAngryAboutProtectedMinorAttacked);

	push	0
	push	OFFSET ?lIsAngryAboutProtectedMinorAttacked@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAngryAboutProtectedMinorAttacked
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227631
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 864  : 	Method(IsAngryAboutProtectedMinorBullied);

	push	0
	push	OFFSET ?lIsAngryAboutProtectedMinorBullied@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAngryAboutProtectedMinorBullied
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227632
	push	edi
	push	esi
	call	_lua_setfield

; 865  : 	Method(IsAngryAboutSidedWithTheirProtectedMinor);

	push	0
	push	OFFSET ?lIsAngryAboutSidedWithTheirProtectedMinor@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAngryAboutSidedWithTheirProtectedMinor
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227633
	push	edi
	push	esi
	call	_lua_setfield

; 866  : 	Method(GetNumTimesRobbedBy);

	push	0
	push	OFFSET ?lGetNumTimesRobbedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumTimesRobbedBy
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227634
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 867  : 	Method(GetNumTimesIntrigueSharedBy);

	push	0
	push	OFFSET ?lGetNumTimesIntrigueSharedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumTimesIntrigueSharedBy
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227635
	push	edi
	push	esi
	call	_lua_setfield

; 868  : 
; 869  : 	Method(DoForceDoF);

	push	0
	push	OFFSET ?lDoForceDoF@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lDoForceDoF
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227636
	push	edi
	push	esi
	call	_lua_setfield

; 870  : 	Method(DoForceDenounce);

	push	0
	push	OFFSET ?lDoForceDenounce@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lDoForceDenounce
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227637
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 871  : 
; 872  : 	Method(GetNumNotifications);

	push	0
	push	OFFSET ?lGetNumNotifications@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumNotifications
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227638
	push	edi
	push	esi
	call	_lua_setfield

; 873  : 	Method(GetNotificationStr);

	push	0
	push	OFFSET ?lGetNotificationStr@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNotificationStr
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227639
	push	edi
	push	esi
	call	_lua_setfield

; 874  : 	Method(GetNotificationSummaryStr);

	push	0
	push	OFFSET ?lGetNotificationSummaryStr@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNotificationSummaryStr
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227640
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 875  : 	Method(GetNotificationIndex);

	push	0
	push	OFFSET ?lGetNotificationIndex@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNotificationIndex
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227641
	push	edi
	push	esi
	call	_lua_setfield

; 876  : 	Method(GetNotificationTurn);

	push	0
	push	OFFSET ?lGetNotificationTurn@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNotificationTurn
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227642
	push	edi
	push	esi
	call	_lua_setfield

; 877  : 	Method(GetNotificationDismissed);

	push	0
	push	OFFSET ?lGetNotificationDismissed@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNotificationDismissed
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227643
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 878  : 	Method(AddNotification);

	push	0
	push	OFFSET ?lAddNotification@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lAddNotification
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227644
	push	edi
	push	esi
	call	_lua_setfield

; 879  : 
; 880  : 	Method(GetRecommendedWorkerPlots);

	push	0
	push	OFFSET ?lGetRecommendedWorkerPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetRecommendedWorkerPlots
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227645
	push	edi
	push	esi
	call	_lua_setfield

; 881  : 	Method(GetRecommendedFoundCityPlots);

	push	0
	push	OFFSET ?lGetRecommendedFoundCityPlots@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetRecommendedFoundCityPlots
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227646
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 882  : 	Method(GetUnimprovedAvailableLuxuryResource);

	push	0
	push	OFFSET ?lGetUnimprovedAvailableLuxuryResource@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnimprovedAvailableLuxuryResource
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227647
	push	edi
	push	esi
	call	_lua_setfield

; 883  : 	Method(IsAnyPlotImproved);

	push	0
	push	OFFSET ?lIsAnyPlotImproved@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAnyPlotImproved
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227648
	push	edi
	push	esi
	call	_lua_setfield

; 884  : 	Method(GetPlayerVisiblePlot);

	push	0
	push	OFFSET ?lGetPlayerVisiblePlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPlayerVisiblePlot
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227649
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 885  : 
; 886  : 	Method(GetEverPoppedGoody);

	push	0
	push	OFFSET ?lGetEverPoppedGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetEverPoppedGoody
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227650
	push	edi
	push	esi
	call	_lua_setfield

; 887  : 	Method(GetClosestGoodyPlot);

	push	0
	push	OFFSET ?lGetClosestGoodyPlot@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetClosestGoodyPlot
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227651
	push	edi
	push	esi
	call	_lua_setfield

; 888  : 	Method(IsAnyGoodyPlotAccessible);

	push	0
	push	OFFSET ?lIsAnyGoodyPlotAccessible@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAnyGoodyPlotAccessible
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227652
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 889  : 	Method(GetPlotHasOrder);

	push	0
	push	OFFSET ?lGetPlotHasOrder@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPlotHasOrder
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227653
	push	edi
	push	esi
	call	_lua_setfield

; 890  : 	Method(GetAnyUnitHasOrderToGoody);

	push	0
	push	OFFSET ?lGetAnyUnitHasOrderToGoody@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAnyUnitHasOrderToGoody
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227654
	push	edi
	push	esi
	call	_lua_setfield

; 891  : 	Method(GetEverTrainedBuilder);

	push	0
	push	OFFSET ?lGetEverTrainedBuilder@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetEverTrainedBuilder
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227655
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 892  : 
; 893  : 	Method(GetNumFreeTechs);

	push	0
	push	OFFSET ?lGetNumFreeTechs@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumFreeTechs
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227656
	push	edi
	push	esi
	call	_lua_setfield

; 894  : 	Method(SetNumFreeTechs);

	push	0
	push	OFFSET ?lSetNumFreeTechs@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetNumFreeTechs
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227657
	push	edi
	push	esi
	call	_lua_setfield

; 895  : 	Method(GetNumFreePolicies);

	push	0
	push	OFFSET ?lGetNumFreePolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumFreePolicies
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227658
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 896  : 	Method(SetNumFreePolicies);

	push	0
	push	OFFSET ?lSetNumFreePolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetNumFreePolicies
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227659
	push	edi
	push	esi
	call	_lua_setfield

; 897  : 	Method(ChangeNumFreePolicies);

	push	0
	push	OFFSET ?lChangeNumFreePolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNumFreePolicies
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227660
	push	edi
	push	esi
	call	_lua_setfield

; 898  : 	Method(GetNumFreeTenets);

	push	0
	push	OFFSET ?lGetNumFreeTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumFreeTenets
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227661
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 899  : 	Method(SetNumFreeTenets);

	push	0
	push	OFFSET ?lSetNumFreeTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetNumFreeTenets
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227662
	push	edi
	push	esi
	call	_lua_setfield

; 900  : 	Method(ChangeNumFreeTenets);

	push	0
	push	OFFSET ?lChangeNumFreeTenets@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNumFreeTenets
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227663
	push	edi
	push	esi
	call	_lua_setfield

; 901  : 	Method(GetNumFreeGreatPeople);

	push	0
	push	OFFSET ?lGetNumFreeGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumFreeGreatPeople
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227664
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 902  : 	Method(SetNumFreeGreatPeople);

	push	0
	push	OFFSET ?lSetNumFreeGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetNumFreeGreatPeople
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227665
	push	edi
	push	esi
	call	_lua_setfield

; 903  : 	Method(ChangeNumFreeGreatPeople);

	push	0
	push	OFFSET ?lChangeNumFreeGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNumFreeGreatPeople
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227666
	push	edi
	push	esi
	call	_lua_setfield

; 904  : 	Method(GetNumMayaBoosts);

	push	0
	push	OFFSET ?lGetNumMayaBoosts@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumMayaBoosts
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227667
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 905  : 	Method(SetNumMayaBoosts);

	push	0
	push	OFFSET ?lSetNumMayaBoosts@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetNumMayaBoosts
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227668
	push	edi
	push	esi
	call	_lua_setfield

; 906  : 	Method(ChangeNumMayaBoosts);

	push	0
	push	OFFSET ?lChangeNumMayaBoosts@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNumMayaBoosts
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227669
	push	edi
	push	esi
	call	_lua_setfield

; 907  : 	Method(GetNumFaithGreatPeople);

	push	0
	push	OFFSET ?lGetNumFaithGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumFaithGreatPeople
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227670
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 908  : 	Method(SetNumFaithGreatPeople);

	push	0
	push	OFFSET ?lSetNumFaithGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetNumFaithGreatPeople
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227671
	push	edi
	push	esi
	call	_lua_setfield

; 909  : 	Method(ChangeNumFaithGreatPeople);

	push	0
	push	OFFSET ?lChangeNumFaithGreatPeople@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeNumFaithGreatPeople
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227672
	push	edi
	push	esi
	call	_lua_setfield

; 910  : 	Method(GetUnitBaktun);

	push	0
	push	OFFSET ?lGetUnitBaktun@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetUnitBaktun
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227673
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 911  : 	Method(IsFreeMayaGreatPersonChoice);

	push	0
	push	OFFSET ?lIsFreeMayaGreatPersonChoice@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsFreeMayaGreatPersonChoice
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227674
	push	edi
	push	esi
	call	_lua_setfield

; 912  : 
; 913  : 	Method(GetTraitGoldenAgeCombatModifier);

	push	0
	push	OFFSET ?lGetTraitGoldenAgeCombatModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTraitGoldenAgeCombatModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227675
	push	edi
	push	esi
	call	_lua_setfield

; 914  : 	Method(GetTraitCityStateCombatModifier);

	push	0
	push	OFFSET ?lGetTraitCityStateCombatModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTraitCityStateCombatModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227676
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 915  : 	Method(GetTraitGreatGeneralExtraBonus);

	push	0
	push	OFFSET ?lGetTraitGreatGeneralExtraBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTraitGreatGeneralExtraBonus
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227677
	push	edi
	push	esi
	call	_lua_setfield

; 916  : 	Method(GetTraitGreatScientistRateModifier);

	push	0
	push	OFFSET ?lGetTraitGreatScientistRateModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTraitGreatScientistRateModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227678
	push	edi
	push	esi
	call	_lua_setfield

; 917  : 	Method(IsTraitBonusReligiousBelief);

	push	0
	push	OFFSET ?lIsTraitBonusReligiousBelief@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsTraitBonusReligiousBelief
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227679
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 918  : 	Method(GetHappinessFromLuxury);

	push	0
	push	OFFSET ?lGetHappinessFromLuxury@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetHappinessFromLuxury
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227680
	push	edi
	push	esi
	call	_lua_setfield

; 919  : 	Method(IsAbleToAnnexCityStates);

	push	0
	push	OFFSET ?lIsAbleToAnnexCityStates@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAbleToAnnexCityStates
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227681
	push	edi
	push	esi
	call	_lua_setfield

; 920  : #ifdef NQ_NUM_TURNS_BEFORE_MINOR_ALLIES_REFUSE_BRIBES_FROM_TRAIT
; 921  : 	Method(GetNumTurnsBeforeMinorAlliesRefuseBribes);

	push	0
	push	OFFSET ?lGetNumTurnsBeforeMinorAlliesRefuseBribes@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumTurnsBeforeMinorAlliesRefuseBribes
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227682
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 922  : #endif
; 923  : 	Method(IsUsingMayaCalendar);

	push	0
	push	OFFSET ?lIsUsingMayaCalendar@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsUsingMayaCalendar
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227683
	push	edi
	push	esi
	call	_lua_setfield

; 924  : 	Method(GetMayaCalendarString);

	push	0
	push	OFFSET ?lGetMayaCalendarString@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMayaCalendarString
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227684
	push	edi
	push	esi
	call	_lua_setfield

; 925  : 	Method(GetMayaCalendarLongString);

	push	0
	push	OFFSET ?lGetMayaCalendarLongString@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetMayaCalendarLongString
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227685
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 926  : 
; 927  : 	Method(GetExtraBuildingHappinessFromPolicies);

	push	0
	push	OFFSET ?lGetExtraBuildingHappinessFromPolicies@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetExtraBuildingHappinessFromPolicies
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227686
	push	edi
	push	esi
	call	_lua_setfield

; 928  : 
; 929  : 	Method(GetNextCity);

	push	0
	push	OFFSET ?lGetNextCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNextCity
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227687
	push	edi
	push	esi
	call	_lua_setfield

; 930  : 	Method(GetPrevCity);

	push	0
	push	OFFSET ?lGetPrevCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPrevCity
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227688
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 931  : 
; 932  : 	Method(GetFreePromotionCount);

	push	0
	push	OFFSET ?lGetFreePromotionCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetFreePromotionCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227689
	push	edi
	push	esi
	call	_lua_setfield

; 933  : 	Method(IsFreePromotion);

	push	0
	push	OFFSET ?lIsFreePromotion@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsFreePromotion
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227690
	push	edi
	push	esi
	call	_lua_setfield

; 934  : 	Method(ChangeFreePromotionCount);

	push	0
	push	OFFSET ?lChangeFreePromotionCount@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lChangeFreePromotionCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227691
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 935  : 
; 936  : 	Method(GetEmbarkedGraphicOverride);

	push	0
	push	OFFSET ?lGetEmbarkedGraphicOverride@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetEmbarkedGraphicOverride
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227692
	push	edi
	push	esi
	call	_lua_setfield

; 937  : 	Method(SetEmbarkedGraphicOverride);

	push	0
	push	OFFSET ?lSetEmbarkedGraphicOverride@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lSetEmbarkedGraphicOverride
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227693
	push	edi
	push	esi
	call	_lua_setfield

; 938  : 
; 939  : 	Method(AddTemporaryDominanceZone);

	push	0
	push	OFFSET ?lAddTemporaryDominanceZone@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lAddTemporaryDominanceZone
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227694
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 940  : 
; 941  : 	Method(GetNaturalWonderYieldModifier);

	push	0
	push	OFFSET ?lGetNaturalWonderYieldModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNaturalWonderYieldModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227695
	push	edi
	push	esi
	call	_lua_setfield

; 942  : 
; 943  : 	Method(GetPolicyBuildingClassYieldModifier);

	push	0
	push	OFFSET ?lGetPolicyBuildingClassYieldModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyBuildingClassYieldModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227696
	push	edi
	push	esi
	call	_lua_setfield

; 944  : 	Method(GetPolicyBuildingClassYieldChange);

	push	0
	push	OFFSET ?lGetPolicyBuildingClassYieldChange@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyBuildingClassYieldChange
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227697
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 945  : 	Method(GetPolicyEspionageModifier);

	push	0
	push	OFFSET ?lGetPolicyEspionageModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyEspionageModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227698
	push	edi
	push	esi
	call	_lua_setfield

; 946  : 	Method(GetPolicyEspionageCatchSpiesModifier);

	push	0
	push	OFFSET ?lGetPolicyEspionageCatchSpiesModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPolicyEspionageCatchSpiesModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227699
	push	edi
	push	esi
	call	_lua_setfield

; 947  : 
; 948  : 	Method(GetPlayerBuildingClassYieldChange);

	push	0
	push	OFFSET ?lGetPlayerBuildingClassYieldChange@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPlayerBuildingClassYieldChange
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227700
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 949  : 	Method(GetPlayerBuildingClassHappiness);

	push	0
	push	OFFSET ?lGetPlayerBuildingClassHappiness@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPlayerBuildingClassHappiness
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227701
	push	edi
	push	esi
	call	_lua_setfield

; 950  : 
; 951  : 	Method(WasResurrectedBy);

	push	0
	push	OFFSET ?lWasResurrectedBy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lWasResurrectedBy
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227702
	push	edi
	push	esi
	call	_lua_setfield

; 952  : 	Method(WasResurrectedThisTurnBy);

	push	0
	push	OFFSET ?lWasResurrectedThisTurnBy@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lWasResurrectedThisTurnBy
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227703
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 953  : 
; 954  : 	Method(GetOpinionTable);

	push	0
	push	OFFSET ?lGetOpinionTable@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetOpinionTable
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227704
	push	edi
	push	esi
	call	_lua_setfield

; 955  : 	Method(GetDealValue);

	push	0
	push	OFFSET ?lGetDealValue@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetDealValue
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227705
	push	edi
	push	esi
	call	_lua_setfield

; 956  : 	Method(GetDealMyValue);

	push	0
	push	OFFSET ?lGetDealMyValue@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetDealMyValue
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227706
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 957  : 	Method(GetDealTheyreValue);

	push	0
	push	OFFSET ?lGetDealTheyreValue@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetDealTheyreValue
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227707
	push	edi
	push	esi
	call	_lua_setfield

; 958  : 	Method(MayNotAnnex);

	push	0
	push	OFFSET ?lMayNotAnnex@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lMayNotAnnex
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227708
	push	edi
	push	esi
	call	_lua_setfield

; 959  : #ifdef NQ_ALLOW_PUPPET_PURCHASING_FROM_POLICIES
; 960  : 	Method(IsAllowPuppetPurchasing);

	push	0
	push	OFFSET ?lIsAllowPuppetPurchasing@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsAllowPuppetPurchasing
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227709
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 961  : #endif
; 962  : 
; 963  : 	Method(GetEspionageCityStatus);

	push	0
	push	OFFSET ?lGetEspionageCityStatus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetEspionageCityStatus
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227710
	push	edi
	push	esi
	call	_lua_setfield

; 964  : 	Method(GetNumSpies);

	push	0
	push	OFFSET ?lGetNumSpies@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumSpies
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227711
	push	edi
	push	esi
	call	_lua_setfield

; 965  : 	Method(GetNumUnassignedSpies);

	push	0
	push	OFFSET ?lGetNumUnassignedSpies@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumUnassignedSpies
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227712
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 966  : 	Method(GetEspionageSpies);

	push	0
	push	OFFSET ?lGetEspionageSpies@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetEspionageSpies
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227713
	push	edi
	push	esi
	call	_lua_setfield

; 967  : 	Method(HasSpyEstablishedSurveillance);

	push	0
	push	OFFSET ?lHasSpyEstablishedSurveillance@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasSpyEstablishedSurveillance
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227714
	push	edi
	push	esi
	call	_lua_setfield

; 968  : 	Method(IsSpyDiplomat);

	push	0
	push	OFFSET ?lIsSpyDiplomat@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsSpyDiplomat
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227715
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 969  : 	Method(IsSpySchmoozing);

	push	0
	push	OFFSET ?lIsSpySchmoozing@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsSpySchmoozing
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227716
	push	edi
	push	esi
	call	_lua_setfield

; 970  : 	Method(CanSpyStageCoup);

	push	0
	push	OFFSET ?lCanSpyStageCoup@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanSpyStageCoup
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227717
	push	edi
	push	esi
	call	_lua_setfield

; 971  : 	Method(GetAvailableSpyRelocationCities);

	push	0
	push	OFFSET ?lGetAvailableSpyRelocationCities@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetAvailableSpyRelocationCities
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227718
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 972  : 	Method(GetNumTechsToSteal);

	push	0
	push	OFFSET ?lGetNumTechsToSteal@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumTechsToSteal
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227719
	push	edi
	push	esi
	call	_lua_setfield

; 973  : 	Method(GetIntrigueMessages);

	push	0
	push	OFFSET ?lGetIntrigueMessages@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetIntrigueMessages
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227720
	push	edi
	push	esi
	call	_lua_setfield

; 974  : 	Method(HasRecentIntrigueAbout);

	push	0
	push	OFFSET ?lHasRecentIntrigueAbout@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasRecentIntrigueAbout
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227721
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 975  : 	Method(GetRecentIntrigueInfo);

	push	0
	push	OFFSET ?lGetRecentIntrigueInfo@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetRecentIntrigueInfo
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227722
	push	edi
	push	esi
	call	_lua_setfield

; 976  : 	Method(GetCoupChanceOfSuccess);

	push	0
	push	OFFSET ?lGetCoupChanceOfSuccess@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCoupChanceOfSuccess
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227723
	push	edi
	push	esi
	call	_lua_setfield

; 977  : 	Method(IsMyDiplomatVisitingThem);

	push	0
	push	OFFSET ?lIsMyDiplomatVisitingThem@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsMyDiplomatVisitingThem
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227724
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 978  : 	Method(IsOtherDiplomatVisitingMe);

	push	0
	push	OFFSET ?lIsOtherDiplomatVisitingMe@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsOtherDiplomatVisitingMe
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227725
	push	edi
	push	esi
	call	_lua_setfield

; 979  : 
; 980  : 	Method(GetTradeRouteRange);

	push	0
	push	OFFSET ?lGetTradeRouteRange@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTradeRouteRange
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227726
	push	edi
	push	esi
	call	_lua_setfield

; 981  : 	Method(GetInternationalTradeRoutePlotToolTip);

	push	0
	push	OFFSET ?lGetInternationalTradeRoutePlotToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRoutePlotToolTip
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227727
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 982  : 	Method(GetInternationalTradeRoutePlotMouseoverToolTip);

	push	0
	push	OFFSET ?lGetInternationalTradeRoutePlotMouseoverToolTip@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRoutePlotMouseoverToolTip
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227728
	push	edi
	push	esi
	call	_lua_setfield

; 983  : 	Method(GetNumInternationalTradeRoutesUsed);

	push	0
	push	OFFSET ?lGetNumInternationalTradeRoutesUsed@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumInternationalTradeRoutesUsed
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227729
	push	edi
	push	esi
	call	_lua_setfield

; 984  : 	Method(GetNumInternationalTradeRoutesAvailable);

	push	0
	push	OFFSET ?lGetNumInternationalTradeRoutesAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumInternationalTradeRoutesAvailable
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227730
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 985  : 	Method(GetPotentialInternationalTradeRouteDestinations);

	push	0
	push	OFFSET ?lGetPotentialInternationalTradeRouteDestinations@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPotentialInternationalTradeRouteDestinations
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227731
	push	edi
	push	esi
	call	_lua_setfield

; 986  : 	Method(GetInternationalTradeRouteBaseBonus);

	push	0
	push	OFFSET ?lGetInternationalTradeRouteBaseBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteBaseBonus
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227732
	push	edi
	push	esi
	call	_lua_setfield

; 987  : 	Method(GetInternationalTradeRouteGPTBonus);

	push	0
	push	OFFSET ?lGetInternationalTradeRouteGPTBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteGPTBonus
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227733
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 988  : 	Method(GetInternationalTradeRouteResourceBonus);

	push	0
	push	OFFSET ?lGetInternationalTradeRouteResourceBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteResourceBonus
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227734
	push	edi
	push	esi
	call	_lua_setfield

; 989  : 	Method(GetInternationalTradeRouteResourceTraitModifier);

	push	0
	push	OFFSET ?lGetInternationalTradeRouteResourceTraitModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteResourceTraitModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227735
	push	edi
	push	esi
	call	_lua_setfield

; 990  : 	Method(GetInternationalTradeRouteExclusiveBonus);

	push	0
	push	OFFSET ?lGetInternationalTradeRouteExclusiveBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteExclusiveBonus
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227736
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 991  : 	Method(GetInternationalTradeRouteYourBuildingBonus);

	push	0
	push	OFFSET ?lGetInternationalTradeRouteYourBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteYourBuildingBonus
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227737
	push	edi
	push	esi
	call	_lua_setfield

; 992  : 	Method(GetInternationalTradeRouteTheirBuildingBonus);

	push	0
	push	OFFSET ?lGetInternationalTradeRouteTheirBuildingBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteTheirBuildingBonus
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227738
	push	edi
	push	esi
	call	_lua_setfield

; 993  : 	Method(GetInternationalTradeRoutePolicyBonus);

	push	0
	push	OFFSET ?lGetInternationalTradeRoutePolicyBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRoutePolicyBonus
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227739
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 994  : 	Method(GetInternationalTradeRouteOtherTraitBonus);

	push	0
	push	OFFSET ?lGetInternationalTradeRouteOtherTraitBonus@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteOtherTraitBonus
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227740
	push	edi
	push	esi
	call	_lua_setfield

; 995  : 	Method(GetInternationalTradeRouteRiverModifier);

	push	0
	push	OFFSET ?lGetInternationalTradeRouteRiverModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteRiverModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227741
	push	edi
	push	esi
	call	_lua_setfield

; 996  : 	Method(GetInternationalTradeRouteDomainModifier);

	push	0
	push	OFFSET ?lGetInternationalTradeRouteDomainModifier@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteDomainModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227742
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 997  : 	Method(GetInternationalTradeRouteTotal);

	push	0
	push	OFFSET ?lGetInternationalTradeRouteTotal@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteTotal
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227743
	push	edi
	push	esi
	call	_lua_setfield

; 998  : 	Method(GetInternationalTradeRouteScience);

	push	0
	push	OFFSET ?lGetInternationalTradeRouteScience@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetInternationalTradeRouteScience
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227744
	push	edi
	push	esi
	call	_lua_setfield

; 999  : 	Method(GetPotentialTradeUnitNewHomeCity);

	push	0
	push	OFFSET ?lGetPotentialTradeUnitNewHomeCity@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPotentialTradeUnitNewHomeCity
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227745
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 1000 : 	Method(GetPotentialAdmiralNewPort);

	push	0
	push	OFFSET ?lGetPotentialAdmiralNewPort@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetPotentialAdmiralNewPort
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227746
	push	edi
	push	esi
	call	_lua_setfield

; 1001 : 	Method(GetNumAvailableTradeUnits);

	push	0
	push	OFFSET ?lGetNumAvailableTradeUnits@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumAvailableTradeUnits
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227747
	push	edi
	push	esi
	call	_lua_setfield

; 1002 : 	Method(GetTradeUnitType);

	push	0
	push	OFFSET ?lGetTradeUnitType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTradeUnitType
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227748
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 1003 : 	Method(GetTradeYourRoutesTTString);

	push	0
	push	OFFSET ?lGetTradeYourRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTradeYourRoutesTTString
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227749
	push	edi
	push	esi
	call	_lua_setfield

; 1004 : 	Method(GetTradeToYouRoutesTTString);

	push	0
	push	OFFSET ?lGetTradeToYouRoutesTTString@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTradeToYouRoutesTTString
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227750
	push	edi
	push	esi
	call	_lua_setfield

; 1005 : 	Method(GetTradeRoutes);

	push	0
	push	OFFSET ?lGetTradeRoutes@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTradeRoutes
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227751
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 1006 : 	Method(GetTradeRoutesAvailable);

	push	0
	push	OFFSET ?lGetTradeRoutesAvailable@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTradeRoutesAvailable
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227752
	push	edi
	push	esi
	call	_lua_setfield

; 1007 : 	Method(GetTradeRoutesToYou);

	push	0
	push	OFFSET ?lGetTradeRoutesToYou@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetTradeRoutesToYou
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227753
	push	edi
	push	esi
	call	_lua_setfield

; 1008 : 	Method(GetNumTechDifference);

	push	0
	push	OFFSET ?lGetNumTechDifference@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetNumTechDifference
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227754
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 1009 : 
; 1010 : 	// Culture functions. Not sure where they should go
; 1011 : 	Method(GetGreatWorks);

	push	0
	push	OFFSET ?lGetGreatWorks@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetGreatWorks
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227755
	push	edi
	push	esi
	call	_lua_setfield

; 1012 : 	Method(GetSwappableGreatWriting);

	push	0
	push	OFFSET ?lGetSwappableGreatWriting@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetSwappableGreatWriting
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227756
	push	edi
	push	esi
	call	_lua_setfield

; 1013 : 	Method(GetSwappableGreatArt);

	push	0
	push	OFFSET ?lGetSwappableGreatArt@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetSwappableGreatArt
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227757
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 1014 : 	Method(GetSwappableGreatArtifact);

	push	0
	push	OFFSET ?lGetSwappableGreatArtifact@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetSwappableGreatArtifact
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227758
	push	edi
	push	esi
	call	_lua_setfield

; 1015 : 	Method(GetSwappableGreatMusic);

	push	0
	push	OFFSET ?lGetSwappableGreatMusic@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetSwappableGreatMusic
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227759
	push	edi
	push	esi
	call	_lua_setfield

; 1016 : 	Method(GetOthersGreatWorks);

	push	0
	push	OFFSET ?lGetOthersGreatWorks@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetOthersGreatWorks
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227760
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 1017 : 
; 1018 : 	Method(CanCommitVote);

	push	0
	push	OFFSET ?lCanCommitVote@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lCanCommitVote
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227761
	push	edi
	push	esi
	call	_lua_setfield

; 1019 : 	Method(GetCommitVoteDetails);

	push	0
	push	OFFSET ?lGetCommitVoteDetails@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetCommitVoteDetails
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227762
	push	edi
	push	esi
	call	_lua_setfield

; 1020 : 
; 1021 : 	Method(IsConnected);

	push	0
	push	OFFSET ?lIsConnected@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsConnected
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227763
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 1022 : 	Method(IsObserver);

	push	0
	push	OFFSET ?lIsObserver@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lIsObserver
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227764
	push	edi
	push	esi
	call	_lua_setfield

; 1023 : 
; 1024 : 	Method(HasTurnTimerExpired);

	push	0
	push	OFFSET ?lHasTurnTimerExpired@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasTurnTimerExpired
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227765
	push	edi
	push	esi
	call	_lua_setfield

; 1025 : 
; 1026 : 	Method(HasUnitOfClassType);

	push	0
	push	OFFSET ?lHasUnitOfClassType@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lHasUnitOfClassType
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227766
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 1027 : 
; 1028 : 	Method(GetWarmongerPreviewString);

	push	0
	push	OFFSET ?lGetWarmongerPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetWarmongerPreviewString
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227767
	push	edi
	push	esi
	call	_lua_setfield

; 1029 : 	Method(GetLiberationPreviewString);

	push	0
	push	OFFSET ?lGetLiberationPreviewString@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::lGetLiberationPreviewString
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG227768
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 48					; 00000030H
	pop	edi
	pop	esi

; 1030 : 
; 1031 : }

	ret	0
?PushMethods@CvLuaPlayer@@SAXPAUlua_State@@H@Z ENDP	; CvLuaPlayer::PushMethods
_TEXT	ENDS
PUBLIC	?Push@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAXPAUlua_State@@PAVCvPlayerAI@@@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::Push
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluascopedinstance.h
;	COMDAT ?Push@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAXPAUlua_State@@PAVCvPlayerAI@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_pkType$ = 12						; size = 4
?Push@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAXPAUlua_State@@PAVCvPlayerAI@@@Z PROC ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::Push, COMDAT

; 39   : {

	push	edi

; 40   : 	//Pushing an instance involves more than just actually pushing a pointer into the
; 41   : 	//Lua stack.  There are some caching optimizations that are done as well as some
; 42   : 	//checks.
; 43   : 	//The first step is to load or create a global table <Typename> to store all member
; 44   : 	//methods and all pushed instances.  This conserves memory and offers faster pushing
; 45   : 	//speed.
; 46   : 	//If <Typename>.__instances[pkType] is not nil, return that value.
; 47   : 	//otherwise push a new instance and assign it to __instances.
; 48   : 
; 49   : 	//NOTE: Raw gets and sets are used as an optimization over using lua_[get,set]field
; 50   : 	if(pkType)

	mov	edi, DWORD PTR _pkType$[esp]
	test	edi, edi
	je	$LN4@Push@5
	push	ebx
	push	ebp
	push	esi

; 51   : 	{
; 52   : 		//const int t = lua_gettop(L);
; 53   : 
; 54   : 		lua_getglobal(L, Derived::GetTypeName());

	mov	esi, DWORD PTR _L$[esp+12]
	push	OFFSET $SG227774
	push	-10002					; ffffd8eeH
	push	esi
	call	_lua_getfield

; 55   : 		if(lua_isnil(L, -1))

	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	$LN11@Push@5

; 56   : 		{
; 57   : 			//Typename wasn't found, time to build it.
; 58   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	push	esi
	call	_lua_settop

; 59   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 60   : 
; 61   : 			//Create weak __instances table.
; 62   : 			lua_pushstring(L, "__instances");

	push	OFFSET $SG237705
	push	esi
	call	_lua_pushstring

; 63   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 64   : 
; 65   : 			//Create __instances.mt
; 66   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 67   : 			lua_pushstring(L, "__mode");

	push	OFFSET $SG237706
	push	esi
	call	_lua_pushstring

; 68   : 			lua_pushstring(L, "v");

	push	OFFSET $SG237707
	push	esi
	call	_lua_pushstring
	add	esp, 68					; 00000044H

; 69   : 			lua_rawset(L, -3);				// mt.__mode = "v";

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 70   : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_setmetatable

; 71   : 
; 72   : 			lua_rawset(L, -3);				//type.__instances = t;

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 73   : 
; 74   : 
; 75   : 			lua_pushvalue(L, -1);

	push	-1
	push	esi
	call	_lua_pushvalue

; 76   : 			lua_setglobal(L, Derived::GetTypeName());

	push	OFFSET $SG227774
	push	-10002					; ffffd8eeH
	push	esi
	call	_lua_setfield

; 77   : 
; 78   : 			Derived::PushMethods(L, lua_gettop(L));

	push	esi
	call	_lua_gettop
	push	eax
	push	esi
	call	?PushMethods@CvLuaPlayer@@SAXPAUlua_State@@H@Z ; CvLuaPlayer::PushMethods
	add	esp, 56					; 00000038H
$LN11@Push@5:

; 79   : 		}
; 80   : 		const int type_index = lua_gettop(L);

	push	esi
	call	_lua_gettop

; 81   : 
; 82   : 		lua_pushstring(L, "__instances");

	push	OFFSET $SG237709
	push	esi
	mov	ebx, eax
	call	_lua_pushstring

; 83   : 		lua_rawget(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_rawget

; 84   : 
; 85   : 		const int instances_index = lua_gettop(L);

	push	esi
	call	_lua_gettop

; 86   : 
; 87   : 		lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	mov	ebp, eax
	call	_lua_pushlightuserdata

; 88   : 
; 89   : 		lua_rawget(L, -2);					//retrieve type.__instances[pkType]

	push	-2					; fffffffeH
	push	esi
	call	_lua_rawget

; 90   : 
; 91   : 		if(lua_isnil(L, -1))

	push	-1
	push	esi
	call	_lua_type
	add	esp, 48					; 00000030H
	test	eax, eax
	jne	SHORT $LN2@Push@5

; 92   : 		{
; 93   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	push	esi
	call	_lua_settop

; 94   : 
; 95   : 			//Push new instance
; 96   : 			lua_createtable(L, 0, 1);

	push	1
	push	0
	push	esi
	call	_lua_createtable

; 97   : 			lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	call	_lua_pushlightuserdata

; 98   : 			lua_setfield(L, -2, "__instance");

	push	OFFSET $SG237712
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 99   : 
; 100  : 			lua_createtable(L, 0, 1);			// create mt

	push	1
	push	0
	push	esi
	call	_lua_createtable

; 101  : 			lua_pushstring(L, "__index");

	push	OFFSET $SG237713
	push	esi
	call	_lua_pushstring

; 102  : 			lua_pushvalue(L, type_index);

	push	ebx
	push	esi
	call	_lua_pushvalue
	add	esp, 68					; 00000044H

; 103  : 			lua_rawset(L, -3);					// mt.__index = Type

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 104  : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_setmetatable

; 105  : 
; 106  : 			//Assign it in instances
; 107  : 			lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	call	_lua_pushlightuserdata

; 108  : 			lua_pushvalue(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_pushvalue

; 109  : 			lua_rawset(L, instances_index);				//__instances[pkType] = t;

	push	ebp
	push	esi
	call	_lua_rawset
	add	esp, 40					; 00000028H
$LN2@Push@5:

; 110  : 		}
; 111  : 
; 112  : 		//VERIFY(instances_index > type_index);
; 113  : 		lua_remove(L, instances_index);

	push	ebp
	push	esi
	call	_lua_remove

; 114  : 		lua_remove(L, type_index);

	push	ebx
	push	esi
	call	_lua_remove
	add	esp, 16					; 00000010H
	pop	esi
	pop	ebp
	pop	ebx
	pop	edi

; 122  : 	}
; 123  : }

	ret	0
$LN4@Push@5:

; 115  : 
; 116  : 		//const int dt = lua_gettop(L);
; 117  : 		//VERIFY(dt == t + 1)
; 118  : 	}
; 119  : 	else
; 120  : 	{
; 121  : 		lua_pushnil(L);

	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushnil
	add	esp, 4
	pop	edi

; 122  : 	}
; 123  : }

	ret	0
?Push@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAXPAUlua_State@@PAVCvPlayerAI@@@Z ENDP ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::Push
_TEXT	ENDS
PUBLIC	?pRegister@CvLuaPlayer@@KAHPAUlua_State@@@Z	; CvLuaPlayer::pRegister
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaplayer.cpp
;	COMDAT ?pRegister@CvLuaPlayer@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?pRegister@CvLuaPlayer@@KAHPAUlua_State@@@Z PROC	; CvLuaPlayer::pRegister, COMDAT

; 1049 : {

	push	ebx
	push	esi

; 1050 : 	lua_getglobal(L, "Players");

	mov	esi, DWORD PTR _L$[esp+4]
	push	edi
	push	OFFSET $SG227778
	push	-10002					; ffffd8eeH
	push	esi
	call	_lua_getfield

; 1051 : 	if(lua_isnil(L, -1))

	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN4@pRegister

; 1052 : 	{
; 1053 : 		lua_pop(L, 1);

	push	-2					; fffffffeH
	push	esi
	call	_lua_settop

; 1054 : 		lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 1055 : 		lua_pushvalue(L, -1);

	push	-1
	push	esi
	call	_lua_pushvalue

; 1056 : 		lua_setglobal(L, "Players");

	push	OFFSET $SG227780
	push	-10002					; ffffd8eeH
	push	esi
	call	_lua_setfield
	add	esp, 40					; 00000028H
$LN4@pRegister:

; 1057 : 	}
; 1058 : 
; 1059 : 	for(int i = 0; i < MAX_PLAYERS; ++i)

	xor	ebx, ebx
	xor	edi, edi
$LL3@pRegister:

; 1060 : 	{
; 1061 : 		CvPlayerAI* pkPlayer = &(GET_PLAYER((PlayerTypes)i));

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	lea	ecx, DWORD PTR [edi+eax]

; 1062 : 		CvLuaPlayer::Push(L, pkPlayer);

	push	ecx
	push	esi
	call	?Push@?$CvLuaScopedInstance@VCvLuaPlayer@@VCvPlayerAI@@@@SAXPAUlua_State@@PAVCvPlayerAI@@@Z ; CvLuaScopedInstance<CvLuaPlayer,CvPlayerAI>::Push

; 1063 : 		lua_rawseti(L, -2, i);

	push	ebx
	push	-2					; fffffffeH
	push	esi
	call	_lua_rawseti
	add	edi, 63236				; 0000f704H
	add	esp, 20					; 00000014H
	inc	ebx
	cmp	edi, 4047104				; 003dc100H
	jl	SHORT $LL3@pRegister
	pop	edi
	pop	esi

; 1064 : 	}
; 1065 : 
; 1066 : 	return 0;

	xor	eax, eax
	pop	ebx

; 1067 : }

	ret	0
?pRegister@CvLuaPlayer@@KAHPAUlua_State@@@Z ENDP	; CvLuaPlayer::pRegister
_TEXT	ENDS
PUBLIC	?Register@CvLuaPlayer@@SAXPAUlua_State@@@Z	; CvLuaPlayer::Register
EXTRN	?CCallWithErrorHandling@Details@FLua@@YA_NPAUlua_State@@P6AH0@ZPAX@Z:PROC ; FLua::Details::CCallWithErrorHandling
; Function compile flags: /Ogtpy
;	COMDAT ?Register@CvLuaPlayer@@SAXPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?Register@CvLuaPlayer@@SAXPAUlua_State@@@Z PROC		; CvLuaPlayer::Register, COMDAT

; 42   : 	FLua::Details::CCallWithErrorHandling(L, pRegister);

	mov	eax, DWORD PTR _L$[esp-4]
	push	0
	push	OFFSET ?pRegister@CvLuaPlayer@@KAHPAUlua_State@@@Z ; CvLuaPlayer::pRegister
	push	eax
	call	?CCallWithErrorHandling@Details@FLua@@YA_NPAUlua_State@@P6AH0@ZPAX@Z ; FLua::Details::CCallWithErrorHandling
	add	esp, 12					; 0000000cH

; 43   : }

	ret	0
?Register@CvLuaPlayer@@SAXPAUlua_State@@@Z ENDP		; CvLuaPlayer::Register
_TEXT	ENDS
END
