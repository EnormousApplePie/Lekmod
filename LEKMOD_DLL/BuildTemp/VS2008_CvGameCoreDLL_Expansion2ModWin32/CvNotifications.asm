; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	s:\Github\Lekmod\LEKMOD_DLL\CvGameCoreDLL_Expansion2\CvNotifications.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?NO_QUEST_DATA@CvMinorCivQuest@@2HB		; CvMinorCivQuest::NO_QUEST_DATA
PUBLIC	?NO_TURN@CvMinorCivQuest@@2HB			; CvMinorCivQuest::NO_TURN
CONST	SEGMENT
$SG220740 DB	00H
$SG220741 DB	00H
CONST	ENDS
_DATA	SEGMENT
_V1_IndexToHash DD 0be9725c6H
	DD	05acfa6f7H
	DD	0489b80b6H
	DD	0252bfe28H
	DD	077014c62H
	DD	03a8582e9H
	DD	0c659d71eH
	DD	0ae971de0H
	DD	09e9f2be6H
	DD	0b9985c59H
	DD	070cb3d66H
	DD	0dc66fa17H
	DD	0cd412906H
	DD	0cd6f572eH
	DD	066532408H
	DD	0250f2e27H
	DD	05ed9c509H
	DD	09b741b7fH
	DD	07cacc6ffH
	DD	05fcf949dH
	DD	03b74383cH
	DD	05e2fd815H
	DD	083cd0016H
	DD	0ba039c65H
	DD	0f4a99b85H
	DD	0c6e3b719H
	DD	0871df8e9H
	DD	030c5b663H
	DD	05863844fH
	DD	0ff07247aH
	DD	0509909a6H
	DD	04171d8c8H
	DD	0f62e7eabH
	DD	08f31e937H
	DD	0f6ffc169H
	DD	0b6eb90d6H
	DD	07cd306acH
	DD	07e312f61H
	DD	0769821e9H
	DD	0a9e7cc17H
	DD	097818eeeH
	DD	04ea00b5dH
	DD	0f1fc86edH
	DD	0211d6f50H
	DD	08a2abcH
	DD	08366a830H
	DD	0a38ed029H
	DD	08f01d6c4H
	DD	0fe00b7c9H
	DD	06a5b7f95H
	DD	0ba59e179H
	DD	0c4e10b71H
	DD	05f186e9dH
	DD	0acdb3c04H
	DD	01e4417c5H
	DD	0ab4c3bb3H
	DD	0ada4a172H
	DD	0e4edf657H
	DD	0ce337a4H
	DD	05a5e7d9eH
	DD	0e940eb52H
	DD	03d493221H
	DD	04c4b3599H
	DD	07ee00dfdH
	DD	0e9c73f3fH
	DD	0e7ed7441H
	DD	019742e3H
	DD	0e626e70aH
	DD	0963ac73aH
	DD	0e58c1d5H
	DD	0a754d3d8H
	DD	0fc07f784H
	DD	081e90de0H
	DD	071fb054aH
	DD	03691c24H
	DD	0d50b2758H
	DD	0149e6e49H
	DD	0fcc63818H
	DD	09abf6534H
	DD	054c8467H
	DD	0520420c2H
	DD	0ac06951H
	DD	01e3e4861H
	DD	0a6713b03H
	DD	0e8eae770H
	DD	0b1b7c601H
	DD	0cb18d8d7H
	DD	0858304a4H
	DD	0fece1a13H
	DD	0b055c660H
	DD	017feefbeH
	DD	02eaecd2H
	DD	0b0d00659H
	DD	0aaa52ce6H
	DD	07f41a9f3H
	DD	024cc885cH
	DD	0f0330403H
	DD	0f9511ac5H
	DD	049a0f9a1H
	DD	09c447cb4H
	DD	0fca2ca86H
	DD	02e10be53H
	DD	07178c0fdH
	DD	0850d1593H
	DD	0de0ad70H
	DD	079f0f150H
	DD	0c51b3418H
	DD	0eb757cbaH
	DD	0c5c4f81aH
	DD	05b0be213H
	DD	05f0813cfH
	DD	02b7bdab6H
	DD	04e8a36a4H
	DD	07500ca03H
	DD	050b6287H
	DD	02d0e554cH
	DD	084b7e406H
	DD	097deeb2fH
	DD	01192a3f3H
	DD	09074bdeeH
	DD	0850e0773H
	DD	0f1f3e098H
	DD	07220655fH
	DD	0fa9bea56H
	DD	060356bc1H
	DD	0efb187cfH
	DD	0fd3eef59H
	DD	0be3968b6H
	DD	01567ebd1H
	DD	011f69bffH
	DD	098de2522H
	DD	07a509768H
	DD	06656e513H
	DD	0fe331e2bH
	DD	01538d3a8H
	DD	06110ac7aH
	DD	02a32bee8H
	DD	08a6293eH
	DD	0b6299d35H
	DD	0ab88859dH
	DD	0d1bc1a84H
	DD	0e58aa15fH
_DATA	ENDS
;	COMDAT ?NO_TURN@CvMinorCivQuest@@2HB
CONST	SEGMENT
?NO_TURN@CvMinorCivQuest@@2HB DD 0ffffffffH		; CvMinorCivQuest::NO_TURN
CONST	ENDS
;	COMDAT ?NO_QUEST_DATA@CvMinorCivQuest@@2HB
CONST	SEGMENT
?NO_QUEST_DATA@CvMinorCivQuest@@2HB DD 0ffffffffH	; CvMinorCivQuest::NO_QUEST_DATA
CONST	ENDS
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R2exception@std@@8
; File s:\msvs2008\vc\include\exception
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx

; 371  : 		{	// construct from message string

	push	esi
	lea	eax, DWORD PTR __Message$[esp]
	push	eax
	mov	esi, ecx
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	mov	DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@

; 372  : 		}

	mov	eax, esi
	pop	esi
	ret	4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
EXTRN	__imp_??1exception@std@@UAE@XZ:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx

; 380  : 		{	// destroy the object

	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@

; 381  : 		}

	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogtpy
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN6@scalar
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@scalar:
	mov	eax, esi
	pop	esi
	ret	4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 59   : 	return (_Where);

	mov	eax, DWORD PTR __Where$[esp-4]

; 60   : 	}

	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
; Function compile flags: /Ogtpy
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 64   : 	}

	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??_7logic_error@std@@6B@			; std::logic_error::`vftable'
PUBLIC	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
PUBLIC	??_R4logic_error@std@@6B@			; std::logic_error::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	??_R3logic_error@std@@8				; std::logic_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2logic_error@std@@8				; std::logic_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@logic_error@std@@8		; std::logic_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?what@logic_error@std@@UBEPBDXZ			; std::logic_error::what
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z:PROC
EXTRN	__imp_??0exception@std@@QAE@XZ:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_Elogic_error@std@@UAEPAXI@Z:PROC		; std::logic_error::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@logic_error@std@@8
; File s:\msvs2008\vc\include\stdexcept
rdata$r	SEGMENT
??_R1A@?0A@EA@logic_error@std@@8 DD FLAT:??_R0?AVlogic_error@std@@@8 ; std::logic_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2logic_error@std@@8
rdata$r	SEGMENT
??_R2logic_error@std@@8 DD FLAT:??_R1A@?0A@EA@logic_error@std@@8 ; std::logic_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3logic_error@std@@8
rdata$r	SEGMENT
??_R3logic_error@std@@8 DD 00H				; std::logic_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4logic_error@std@@6B@
rdata$r	SEGMENT
??_R4logic_error@std@@6B@ DD 00H			; std::logic_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	FLAT:??_R3logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT
??_7logic_error@std@@6B@ DD FLAT:??_R4logic_error@std@@6B@ ; std::logic_error::`vftable'
	DD	FLAT:??_Elogic_error@std@@UAEPAXI@Z
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0
__ehfuncinfo$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Message$ = 8						; size = 4
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::logic_error::logic_error, COMDAT
; _this$ = ecx

; 26   : 		{	// construct from message string

	push	-1
	push	__ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR _this$[esp+20], esi
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	mov	eax, DWORD PTR __Message$[esp+16]
	push	eax
	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR __$EHRec$[esp+32], 0
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z

; 27   : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	mov	eax, esi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:
	mov	eax, OFFSET __ehfuncinfo$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::logic_error::logic_error
PUBLIC	??1logic_error@std@@UAE@XZ			; std::logic_error::~logic_error
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT
??1logic_error@std@@UAE@XZ PROC				; std::logic_error::~logic_error, COMDAT
; _this$ = ecx

; 30   : 		{	// destroy the object

	push	esi
	mov	esi, ecx

; 31   : 		}

	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, esi
	pop	esi
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
??1logic_error@std@@UAE@XZ ENDP				; std::logic_error::~logic_error
_TEXT	ENDS
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@logic_error@std@@UBEPBDXZ PROC			; std::logic_error::what, COMDAT
; _this$ = ecx

; 35   : 		return (_Str.c_str());

	add	ecx, 12					; 0000000cH
	jmp	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
?what@logic_error@std@@UBEPBDXZ ENDP			; std::logic_error::what
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Glogic_error@std@@UAEPAXI@Z PROC			; std::logic_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, esi
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN6@scalar@2
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@scalar@2:
	mov	eax, esi
	pop	esi
	ret	4
??_Glogic_error@std@@UAEPAXI@Z ENDP			; std::logic_error::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_7length_error@std@@6B@			; std::length_error::`vftable'
PUBLIC	??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::length_error::length_error
PUBLIC	??_R4length_error@std@@6B@			; std::length_error::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVlength_error@std@@@8			; std::length_error `RTTI Type Descriptor'
PUBLIC	??_R3length_error@std@@8			; std::length_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2length_error@std@@8			; std::length_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@length_error@std@@8		; std::length_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_Elength_error@std@@UAEPAXI@Z:PROC		; std::length_error::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@length_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@length_error@std@@8 DD FLAT:??_R0?AVlength_error@std@@@8 ; std::length_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3length_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2length_error@std@@8
rdata$r	SEGMENT
??_R2length_error@std@@8 DD FLAT:??_R1A@?0A@EA@length_error@std@@8 ; std::length_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@logic_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3length_error@std@@8
rdata$r	SEGMENT
??_R3length_error@std@@8 DD 00H				; std::length_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2length_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT
??_R0?AVlength_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::length_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlength_error@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4length_error@std@@6B@
rdata$r	SEGMENT
??_R4length_error@std@@6B@ DD 00H			; std::length_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVlength_error@std@@@8
	DD	FLAT:??_R3length_error@std@@8
rdata$r	ENDS
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT
??_7length_error@std@@6B@ DD FLAT:??_R4length_error@std@@6B@ ; std::length_error::`vftable'
	DD	FLAT:??_Elength_error@std@@UAEPAXI@Z
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::length_error::length_error, COMDAT
; _this$ = ecx

; 105  : 		{	// construct from message string

	mov	eax, DWORD PTR __Message$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
	mov	DWORD PTR [esi], OFFSET ??_7length_error@std@@6B@

; 106  : 		}

	mov	eax, esi
	pop	esi
	ret	4
??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::length_error::length_error
_TEXT	ENDS
PUBLIC	??1length_error@std@@UAE@XZ			; std::length_error::~length_error
; Function compile flags: /Ogtpy
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT
??1length_error@std@@UAE@XZ PROC			; std::length_error::~length_error, COMDAT
; _this$ = ecx

; 109  : 		{	// destroy the object

	push	esi
	mov	esi, ecx

; 110  : 		}

	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, esi
	pop	esi
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
??1length_error@std@@UAE@XZ ENDP			; std::length_error::~length_error
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Glength_error@std@@UAEPAXI@Z PROC			; std::length_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, esi
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN8@scalar@3
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN8@scalar@3:
	mov	eax, esi
	pop	esi
	ret	4
??_Glength_error@std@@UAEPAXI@Z ENDP			; std::length_error::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?pointer@?$FObjectHandle@VCvUnit@@@@QAEPAVCvUnit@@XZ ; FObjectHandle<CvUnit>::pointer
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
;	COMDAT ?pointer@?$FObjectHandle@VCvUnit@@@@QAEPAVCvUnit@@XZ
_TEXT	SEGMENT
?pointer@?$FObjectHandle@VCvUnit@@@@QAEPAVCvUnit@@XZ PROC ; FObjectHandle<CvUnit>::pointer, COMDAT
; _this$ = ecx

; 78   : 		return m_target;

	mov	eax, DWORD PTR [ecx]

; 79   : 	}

	ret	0
?pointer@?$FObjectHandle@VCvUnit@@@@QAEPAVCvUnit@@XZ ENDP ; FObjectHandle<CvUnit>::pointer
_TEXT	ENDS
PUBLIC	??C?$FObjectHandle@VCvUnit@@@@QAEPAVCvUnit@@XZ	; FObjectHandle<CvUnit>::operator->
; Function compile flags: /Ogtpy
;	COMDAT ??C?$FObjectHandle@VCvUnit@@@@QAEPAVCvUnit@@XZ
_TEXT	SEGMENT
??C?$FObjectHandle@VCvUnit@@@@QAEPAVCvUnit@@XZ PROC	; FObjectHandle<CvUnit>::operator->, COMDAT
; _this$ = ecx

; 88   : 		return m_target;

	mov	eax, DWORD PTR [ecx]

; 89   : 	}

	ret	0
??C?$FObjectHandle@VCvUnit@@@@QAEPAVCvUnit@@XZ ENDP	; FObjectHandle<CvUnit>::operator->
_TEXT	ENDS
PUBLIC	??B?$FObjectHandle@VCvUnit@@@@QBE_NXZ		; FObjectHandle<CvUnit>::operator bool
; Function compile flags: /Ogtpy
;	COMDAT ??B?$FObjectHandle@VCvUnit@@@@QBE_NXZ
_TEXT	SEGMENT
??B?$FObjectHandle@VCvUnit@@@@QBE_NXZ PROC		; FObjectHandle<CvUnit>::operator bool, COMDAT
; _this$ = ecx

; 108  : 		return m_target != 0;

	xor	eax, eax
	cmp	DWORD PTR [ecx], eax
	setne	al

; 109  : 	}

	ret	0
??B?$FObjectHandle@VCvUnit@@@@QBE_NXZ ENDP		; FObjectHandle<CvUnit>::operator bool
_TEXT	ENDS
PUBLIC	??7?$FObjectHandle@VCvUnit@@@@QBE_NXZ		; FObjectHandle<CvUnit>::operator!
; Function compile flags: /Ogtpy
;	COMDAT ??7?$FObjectHandle@VCvUnit@@@@QBE_NXZ
_TEXT	SEGMENT
??7?$FObjectHandle@VCvUnit@@@@QBE_NXZ PROC		; FObjectHandle<CvUnit>::operator!, COMDAT
; _this$ = ecx

; 113  : 		return m_target == 0;

	xor	eax, eax
	cmp	DWORD PTR [ecx], eax
	sete	al

; 114  : 	}

	ret	0
??7?$FObjectHandle@VCvUnit@@@@QBE_NXZ ENDP		; FObjectHandle<CvUnit>::operator!
_TEXT	ENDS
PUBLIC	??A?$BaseVector@H$0A@@@QAEAAHI@Z		; BaseVector<int,0>::operator[]
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ??A?$BaseVector@H$0A@@@QAEAAHI@Z
_TEXT	SEGMENT
_ui$ = 8						; size = 4
??A?$BaseVector@H$0A@@@QAEAAHI@Z PROC			; BaseVector<int,0>::operator[], COMDAT
; _this$ = ecx

; 129  : 		FAssert(ui < m_uiCurrSize);
; 130  : 		return m_pData[ui];

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ui$[esp-4]
	lea	eax, DWORD PTR [eax+ecx*4]

; 131  : 	};

	ret	4
??A?$BaseVector@H$0A@@@QAEAAHI@Z ENDP			; BaseVector<int,0>::operator[]
_TEXT	ENDS
PUBLIC	?size@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QBEIXZ ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::size
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\vector
;	COMDAT ?size@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QBEIXZ PROC ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::size, COMDAT
; _this$ = ecx

; 725  : 		{	// return length of sequence

	push	esi

; 726  : 		return (_Mylast - _Myfirst);

	mov	esi, DWORD PTR [ecx+8]
	sub	esi, DWORD PTR [ecx+4]
	mov	eax, -1307163959			; b21642c9H
	imul	esi
	add	edx, esi
	sar	edx, 6
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	pop	esi

; 727  : 		}

	ret	0
?size@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QBEIXZ ENDP ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::size
_TEXT	ENDS
PUBLIC	??A?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QBEABUNotification@CvNotifications@@I@Z ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::operator[]
; Function compile flags: /Ogtpy
;	COMDAT ??A?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QBEABUNotification@CvNotifications@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QBEABUNotification@CvNotifications@@I@Z PROC ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::operator[], COMDAT
; _this$ = ecx

; 760  : 
; 761  :  #if _HAS_ITERATOR_DEBUGGING
; 762  : 		if (size() <= _Pos)
; 763  : 			{
; 764  : 			_DEBUG_ERROR("vector subscript out of range");
; 765  : 			_SCL_SECURE_OUT_OF_RANGE;
; 766  : 			}
; 767  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 768  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 769  : 
; 770  : 		return (*(_Myfirst + _Pos));

	mov	eax, DWORD PTR __Pos$[esp-4]
	imul	eax, 92					; 0000005cH
	add	eax, DWORD PTR [ecx+4]

; 771  : 		}

	ret	4
??A?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QBEABUNotification@CvNotifications@@I@Z ENDP ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::operator[]
_TEXT	ENDS
PUBLIC	??A?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAEAAUNotification@CvNotifications@@I@Z ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::operator[]
; Function compile flags: /Ogtpy
;	COMDAT ??A?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAEAAUNotification@CvNotifications@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAEAAUNotification@CvNotifications@@I@Z PROC ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::operator[], COMDAT
; _this$ = ecx

; 775  : 
; 776  :  #if _HAS_ITERATOR_DEBUGGING
; 777  : 		if (size() <= _Pos)
; 778  : 			{
; 779  : 			_DEBUG_ERROR("vector subscript out of range");
; 780  : 			_SCL_SECURE_OUT_OF_RANGE;
; 781  : 			}
; 782  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 783  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 784  : 
; 785  : 		return (*(_Myfirst + _Pos));

	mov	eax, DWORD PTR __Pos$[esp-4]
	imul	eax, 92					; 0000005cH
	add	eax, DWORD PTR [ecx+4]

; 786  : 		}

	ret	4
??A?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAEAAUNotification@CvNotifications@@I@Z ENDP ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::operator[]
_TEXT	ENDS
PUBLIC	??0?$auto_ptr@VICvPlot1@@@std@@QAE@PAVICvPlot1@@@Z ; std::auto_ptr<ICvPlot1>::auto_ptr<ICvPlot1>
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\memory
;	COMDAT ??0?$auto_ptr@VICvPlot1@@@std@@QAE@PAVICvPlot1@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$auto_ptr@VICvPlot1@@@std@@QAE@PAVICvPlot1@@@Z PROC	; std::auto_ptr<ICvPlot1>::auto_ptr<ICvPlot1>, COMDAT
; _this$ = ecx

; 661  : 		{	// construct from object pointer

	mov	eax, ecx
	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 662  : 		}

	ret	4
??0?$auto_ptr@VICvPlot1@@@std@@QAE@PAVICvPlot1@@@Z ENDP	; std::auto_ptr<ICvPlot1>::auto_ptr<ICvPlot1>
_TEXT	ENDS
PUBLIC	??0?$auto_ptr@VICvPlot1@@@std@@QAE@U?$auto_ptr_ref@VICvPlot1@@@1@@Z ; std::auto_ptr<ICvPlot1>::auto_ptr<ICvPlot1>
; Function compile flags: /Ogtpy
;	COMDAT ??0?$auto_ptr@VICvPlot1@@@std@@QAE@U?$auto_ptr_ref@VICvPlot1@@@1@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??0?$auto_ptr@VICvPlot1@@@std@@QAE@U?$auto_ptr_ref@VICvPlot1@@@1@@Z PROC ; std::auto_ptr<ICvPlot1>::auto_ptr<ICvPlot1>, COMDAT
; _this$ = ecx

; 669  : 	auto_ptr(auto_ptr_ref<_Ty> _Right) _THROW0()

	mov	eax, ecx

; 670  : 		{	// construct by assuming pointer from _Right auto_ptr_ref
; 671  : 		_Ty *_Ptr = _Right._Ref;
; 672  : 		_Right._Ref = 0;	// release old
; 673  : 		_Myptr = _Ptr;	// reset this

	mov	ecx, DWORD PTR __Right$[esp-4]
	mov	DWORD PTR [eax], ecx

; 674  : 		}

	ret	4
??0?$auto_ptr@VICvPlot1@@@std@@QAE@U?$auto_ptr_ref@VICvPlot1@@@1@@Z ENDP ; std::auto_ptr<ICvPlot1>::auto_ptr<ICvPlot1>
_TEXT	ENDS
PUBLIC	?get@?$auto_ptr@VICvPlot1@@@std@@QBEPAVICvPlot1@@XZ ; std::auto_ptr<ICvPlot1>::get
; Function compile flags: /Ogtpy
;	COMDAT ?get@?$auto_ptr@VICvPlot1@@@std@@QBEPAVICvPlot1@@XZ
_TEXT	SEGMENT
?get@?$auto_ptr@VICvPlot1@@@std@@QBEPAVICvPlot1@@XZ PROC ; std::auto_ptr<ICvPlot1>::get, COMDAT
; _this$ = ecx

; 750  : 		return (_Myptr);

	mov	eax, DWORD PTR [ecx]

; 751  : 		}

	ret	0
?get@?$auto_ptr@VICvPlot1@@@std@@QBEPAVICvPlot1@@XZ ENDP ; std::auto_ptr<ICvPlot1>::get
_TEXT	ENDS
PUBLIC	??0?$auto_ptr@VICvUnit1@@@std@@QAE@U?$auto_ptr_ref@VICvUnit1@@@1@@Z ; std::auto_ptr<ICvUnit1>::auto_ptr<ICvUnit1>
; Function compile flags: /Ogtpy
;	COMDAT ??0?$auto_ptr@VICvUnit1@@@std@@QAE@U?$auto_ptr_ref@VICvUnit1@@@1@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??0?$auto_ptr@VICvUnit1@@@std@@QAE@U?$auto_ptr_ref@VICvUnit1@@@1@@Z PROC ; std::auto_ptr<ICvUnit1>::auto_ptr<ICvUnit1>, COMDAT
; _this$ = ecx

; 669  : 	auto_ptr(auto_ptr_ref<_Ty> _Right) _THROW0()

	mov	eax, ecx

; 670  : 		{	// construct by assuming pointer from _Right auto_ptr_ref
; 671  : 		_Ty *_Ptr = _Right._Ref;
; 672  : 		_Right._Ref = 0;	// release old
; 673  : 		_Myptr = _Ptr;	// reset this

	mov	ecx, DWORD PTR __Right$[esp-4]
	mov	DWORD PTR [eax], ecx

; 674  : 		}

	ret	4
??0?$auto_ptr@VICvUnit1@@@std@@QAE@U?$auto_ptr_ref@VICvUnit1@@@1@@Z ENDP ; std::auto_ptr<ICvUnit1>::auto_ptr<ICvUnit1>
_TEXT	ENDS
PUBLIC	?get@?$auto_ptr@VICvUnit1@@@std@@QBEPAVICvUnit1@@XZ ; std::auto_ptr<ICvUnit1>::get
; Function compile flags: /Ogtpy
;	COMDAT ?get@?$auto_ptr@VICvUnit1@@@std@@QBEPAVICvUnit1@@XZ
_TEXT	SEGMENT
?get@?$auto_ptr@VICvUnit1@@@std@@QBEPAVICvUnit1@@XZ PROC ; std::auto_ptr<ICvUnit1>::get, COMDAT
; _this$ = ecx

; 750  : 		return (_Myptr);

	mov	eax, DWORD PTR [ecx]

; 751  : 		}

	ret	0
?get@?$auto_ptr@VICvUnit1@@@std@@QBEPAVICvUnit1@@XZ ENDP ; std::auto_ptr<ICvUnit1>::get
_TEXT	ENDS
PUBLIC	?size@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBEIXZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::size
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\vector
;	COMDAT ?size@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBEIXZ PROC ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::size, COMDAT
; _this$ = ecx

; 726  : 		return (_Mylast - _Myfirst);

	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2

; 727  : 		}

	ret	0
?size@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBEIXZ ENDP ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::size
_TEXT	ENDS
PUBLIC	?addTarget@?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@QAEXABV?$FObjectHandle@VCvUnit@@@@@Z ; DestructionNotification<FObjectHandle<CvUnit> >::addTarget
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
;	COMDAT ?addTarget@?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@QAEXABV?$FObjectHandle@VCvUnit@@@@@Z
_TEXT	SEGMENT
_target$ = 8						; size = 4
?addTarget@?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@QAEXABV?$FObjectHandle@VCvUnit@@@@@Z PROC ; DestructionNotification<FObjectHandle<CvUnit> >::addTarget, COMDAT
; _this$ = ecx

; 52   : #ifdef TRACK_DESTRUCTION_NOTIFICATION
; 53   : 		m_targets.insert(&target);
; 54   : #endif
; 55   : 	}

	ret	4
?addTarget@?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@QAEXABV?$FObjectHandle@VCvUnit@@@@@Z ENDP ; DestructionNotification<FObjectHandle<CvUnit> >::addTarget
_TEXT	ENDS
PUBLIC	?removeTarget@?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@QAEXABV?$FObjectHandle@VCvUnit@@@@@Z ; DestructionNotification<FObjectHandle<CvUnit> >::removeTarget
; Function compile flags: /Ogtpy
;	COMDAT ?removeTarget@?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@QAEXABV?$FObjectHandle@VCvUnit@@@@@Z
_TEXT	SEGMENT
_target$ = 8						; size = 4
?removeTarget@?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@QAEXABV?$FObjectHandle@VCvUnit@@@@@Z PROC ; DestructionNotification<FObjectHandle<CvUnit> >::removeTarget, COMDAT
; _this$ = ecx

; 63   : #ifdef TRACK_DESTRUCTION_NOTIFICATION
; 64   : 		m_targets.erase(&target);
; 65   : #endif
; 66   : 	}

	ret	4
?removeTarget@?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@QAEXABV?$FObjectHandle@VCvUnit@@@@@Z ENDP ; DestructionNotification<FObjectHandle<CvUnit> >::removeTarget
_TEXT	ENDS
PUBLIC	??1?$_Container_base_aux_alloc_empty@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_empty<std::allocator<CvNotifications::Notification> >::~_Container_base_aux_alloc_empty<std::allocator<CvNotifications::Notification> >
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\xutility
;	COMDAT ??1?$_Container_base_aux_alloc_empty@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAE@XZ
_TEXT	SEGMENT
??1?$_Container_base_aux_alloc_empty@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_empty<std::allocator<CvNotifications::Notification> >::~_Container_base_aux_alloc_empty<std::allocator<CvNotifications::Notification> >, COMDAT
; _this$ = ecx

; 627  : 	~_Container_base_aux_alloc_empty() { }

	ret	0
??1?$_Container_base_aux_alloc_empty@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<CvNotifications::Notification> >::~_Container_base_aux_alloc_empty<std::allocator<CvNotifications::Notification> >
_TEXT	ENDS
PUBLIC	??0?$allocator@UNotification@CvNotifications@@@std@@QAE@XZ ; std::allocator<CvNotifications::Notification>::allocator<CvNotifications::Notification>
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\xmemory
;	COMDAT ??0?$allocator@UNotification@CvNotifications@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@UNotification@CvNotifications@@@std@@QAE@XZ PROC ; std::allocator<CvNotifications::Notification>::allocator<CvNotifications::Notification>, COMDAT
; _this$ = ecx

; 119  : 	allocator() _THROW0()

	mov	eax, ecx

; 120  : 		{	// construct default allocator (do nothing)
; 121  : 		}

	ret	0
??0?$allocator@UNotification@CvNotifications@@@std@@QAE@XZ ENDP ; std::allocator<CvNotifications::Notification>::allocator<CvNotifications::Notification>
_TEXT	ENDS
PUBLIC	??1?$_Container_base_aux_alloc_empty@V?$allocator@W4BeliefTypes@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_empty<std::allocator<enum BeliefTypes> >::~_Container_base_aux_alloc_empty<std::allocator<enum BeliefTypes> >
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\xutility
;	COMDAT ??1?$_Container_base_aux_alloc_empty@V?$allocator@W4BeliefTypes@@@std@@@std@@IAE@XZ
_TEXT	SEGMENT
??1?$_Container_base_aux_alloc_empty@V?$allocator@W4BeliefTypes@@@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_empty<std::allocator<enum BeliefTypes> >::~_Container_base_aux_alloc_empty<std::allocator<enum BeliefTypes> >, COMDAT
; _this$ = ecx

; 627  : 	~_Container_base_aux_alloc_empty() { }

	ret	0
??1?$_Container_base_aux_alloc_empty@V?$allocator@W4BeliefTypes@@@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<enum BeliefTypes> >::~_Container_base_aux_alloc_empty<std::allocator<enum BeliefTypes> >
_TEXT	ENDS
PUBLIC	__TI3?AVlength_error@std@@
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Xlen@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@KAXXZ ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::_Xlen
PUBLIC	__CTA3?AVlength_error@std@@
PUBLIC	__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
PUBLIC	??0length_error@std@@QAE@ABV01@@Z		; std::length_error::length_error
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
PUBLIC	??0logic_error@std@@QAE@ABV01@@Z		; std::logic_error::logic_error
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
; File s:\msvs2008\vc\include\stdexcept
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlength_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0length_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT
__CTA3?AVlength_error@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT
__TI3?AVlength_error@std@@ DD 00H
	DD	FLAT:??1length_error@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVlength_error@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Xlen@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@KAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@KAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@KAXXZ$2
__ehfuncinfo$?_Xlen@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@KAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Xlen@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@KAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@KAXXZ
_TEXT	SEGMENT
$T223223 = -80						; size = 28
$T223222 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@KAXXZ PROC ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::_Xlen, COMDAT

; 1259 : 		{	// report a length_error

	push	-1
	push	__ehhandler$?_Xlen@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@KAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 68					; 00000044H

; 1260 : 		_THROW(length_error, "vector<T> too long");

	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T223223[esp+84]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T223222[esp+80]
	mov	DWORD PTR __$EHRec$[esp+88], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	lea	eax, DWORD PTR $T223223[esp+80]
	push	eax
	lea	ecx, DWORD PTR $T223222[esp+96]
	mov	BYTE PTR __$EHRec$[esp+92], 1
	mov	DWORD PTR $T223222[esp+84], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T223222[esp+84]
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+96], 0
	mov	DWORD PTR $T223222[esp+88], OFFSET ??_7length_error@std@@6B@
	call	__CxxThrowException@8
$LN13@Xlen:
$LN12@Xlen:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Xlen@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@KAXXZ$0:
	lea	ecx, DWORD PTR $T223223[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?_Xlen@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@KAXXZ$2:
	lea	ecx, DWORD PTR $T223222[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$?_Xlen@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@KAXXZ:
	mov	eax, OFFSET __ehfuncinfo$?_Xlen@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@KAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Xlen@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@KAXXZ ENDP ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::_Xlen
PUBLIC	??0?$_Container_base_aux_alloc_empty@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAE@V?$allocator@UNotification@CvNotifications@@@1@@Z ; std::_Container_base_aux_alloc_empty<std::allocator<CvNotifications::Notification> >::_Container_base_aux_alloc_empty<std::allocator<CvNotifications::Notification> >
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\xutility
;	COMDAT ??0?$_Container_base_aux_alloc_empty@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAE@V?$allocator@UNotification@CvNotifications@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??0?$_Container_base_aux_alloc_empty@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAE@V?$allocator@UNotification@CvNotifications@@@1@@Z PROC ; std::_Container_base_aux_alloc_empty<std::allocator<CvNotifications::Notification> >::_Container_base_aux_alloc_empty<std::allocator<CvNotifications::Notification> >, COMDAT
; _this$ = ecx

; 618  : 	explicit _Container_base_aux_alloc_empty(_Alloc) { }

	mov	eax, ecx
	ret	4
??0?$_Container_base_aux_alloc_empty@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAE@V?$allocator@UNotification@CvNotifications@@@1@@Z ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<CvNotifications::Notification> >::_Container_base_aux_alloc_empty<std::allocator<CvNotifications::Notification> >
_TEXT	ENDS
PUBLIC	??0?$allocator@UNotification@CvNotifications@@@std@@QAE@ABV01@@Z ; std::allocator<CvNotifications::Notification>::allocator<CvNotifications::Notification>
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\xmemory
;	COMDAT ??0?$allocator@UNotification@CvNotifications@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@UNotification@CvNotifications@@@std@@QAE@ABV01@@Z PROC ; std::allocator<CvNotifications::Notification>::allocator<CvNotifications::Notification>, COMDAT
; _this$ = ecx

; 123  : 	allocator(const allocator<_Ty>&) _THROW0()

	mov	eax, ecx

; 124  : 		{	// construct by copying (do nothing)
; 125  : 		}

	ret	4
??0?$allocator@UNotification@CvNotifications@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<CvNotifications::Notification>::allocator<CvNotifications::Notification>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@UNotification@CvNotifications@@@std@@QAEXPAUNotification@CvNotifications@@I@Z ; std::allocator<CvNotifications::Notification>::deallocate
; Function compile flags: /Ogtpy
;	COMDAT ?deallocate@?$allocator@UNotification@CvNotifications@@@std@@QAEXPAUNotification@CvNotifications@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@UNotification@CvNotifications@@@std@@QAEXPAUNotification@CvNotifications@@I@Z PROC ; std::allocator<CvNotifications::Notification>::deallocate, COMDAT
; _this$ = ecx

; 140  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 141  : 		}

	ret	8
?deallocate@?$allocator@UNotification@CvNotifications@@@std@@QAEXPAUNotification@CvNotifications@@I@Z ENDP ; std::allocator<CvNotifications::Notification>::deallocate
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@W4BeliefTypes@@@std@@QAEXPAW4BeliefTypes@@I@Z ; std::allocator<enum BeliefTypes>::deallocate
; Function compile flags: /Ogtpy
;	COMDAT ?deallocate@?$allocator@W4BeliefTypes@@@std@@QAEXPAW4BeliefTypes@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@W4BeliefTypes@@@std@@QAEXPAW4BeliefTypes@@I@Z PROC ; std::allocator<enum BeliefTypes>::deallocate, COMDAT
; _this$ = ecx

; 140  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 141  : 		}

	ret	8
?deallocate@?$allocator@W4BeliefTypes@@@std@@QAEXPAW4BeliefTypes@@I@Z ENDP ; std::allocator<enum BeliefTypes>::deallocate
_TEXT	ENDS
PUBLIC	?capacity@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QBEIXZ ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::capacity
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\vector
;	COMDAT ?capacity@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QBEIXZ PROC ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::capacity, COMDAT
; _this$ = ecx

; 635  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

	mov	eax, DWORD PTR [ecx+4]
	test	eax, eax
	jne	SHORT $LN3@capacity

; 636  : 		}

	ret	0
$LN3@capacity:

; 635  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

	mov	ecx, DWORD PTR [ecx+12]
	sub	ecx, eax
	mov	eax, -1307163959			; b21642c9H
	imul	ecx
	add	edx, ecx
	sar	edx, 6
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx

; 636  : 		}

	ret	0
?capacity@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QBEIXZ ENDP ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::capacity
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@UNotification@CvNotifications@@@std@@QBEIXZ ; std::allocator<CvNotifications::Notification>::max_size
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\xmemory
;	COMDAT ?max_size@?$allocator@UNotification@CvNotifications@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@UNotification@CvNotifications@@@std@@QBEIXZ PROC ; std::allocator<CvNotifications::Notification>::max_size, COMDAT
; _this$ = ecx

; 165  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 166  : 		return (0 < _Count ? _Count : 1);

	mov	eax, 46684427				; 02c8590bH

; 167  : 		}

	ret	0
?max_size@?$allocator@UNotification@CvNotifications@@@std@@QBEIXZ ENDP ; std::allocator<CvNotifications::Notification>::max_size
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAE@PAUNotification@CvNotifications@@@Z ; std::_Vector_const_iterator<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::_Vector_const_iterator<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAE@PAUNotification@CvNotifications@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAE@PAUNotification@CvNotifications@@@Z PROC ; std::_Vector_const_iterator<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::_Vector_const_iterator<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >, COMDAT
; _this$ = ecx

; 84   : 	explicit _Vector_const_iterator(_Tptr _Ptr)

	mov	eax, ecx

; 85   : 		{	// construct with pointer _Ptr
; 86   : 		_Myptr = _Ptr;

	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 87   : 		}

	ret	4
??0?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAE@PAUNotification@CvNotifications@@@Z ENDP ; std::_Vector_const_iterator<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::_Vector_const_iterator<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::operator==
; Function compile flags: /Ogtpy
;	COMDAT ??8?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::operator==, COMDAT
; _this$ = ecx

; 204  : 
; 205  :  #if _HAS_ITERATOR_DEBUGGING
; 206  : 		_Compat(_Right);
; 207  :  #else
; 208  : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));
; 209  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 210  : 
; 211  : 		return (_Myptr == _Right._Myptr);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	cl
	mov	al, cl

; 212  : 		}

	ret	4
??8?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::operator==
_TEXT	ENDS
PUBLIC	??Y?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::operator+=
; Function compile flags: /Ogtpy
;	COMDAT ??Y?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_const_iterator<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::operator+=, COMDAT
; _this$ = ecx

; 159  : 		{	// increment by integer

	mov	eax, ecx

; 160  : 		_SCL_SECURE_VALIDATE(this->_Has_container());
; 161  : 		_SCL_SECURE_VALIDATE_RANGE(
; 162  : 			_Myptr + _Off <= ((_Myvec *)(this->_Getmycont()))->_Mylast &&
; 163  : 			_Myptr + _Off >= ((_Myvec *)(this->_Getmycont()))->_Myfirst);
; 164  : 		_Myptr += _Off;

	mov	ecx, DWORD PTR __Off$[esp-4]
	imul	ecx, 92					; 0000005cH
	add	DWORD PTR [eax], ecx

; 165  : 		return (*this);
; 166  : 		}

	ret	4
??Y?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_const_iterator<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::operator+=
_TEXT	ENDS
PUBLIC	??$strcpy_s@$0CAA@@@YAHAAY0CAA@DPBD@Z		; strcpy_s<512>
EXTRN	__imp__strcpy_s:PROC
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\string.h
;	COMDAT ??$strcpy_s@$0CAA@@@YAHAAY0CAA@DPBD@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Source$ = 12						; size = 4
??$strcpy_s@$0CAA@@@YAHAAY0CAA@DPBD@Z PROC		; strcpy_s<512>, COMDAT

; 73   : __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_1(errno_t, strcpy_s, _Deref_post_z_ char, _Dest, _In_z_ const char *, _Source)

	mov	eax, DWORD PTR __Source$[esp-4]
	mov	ecx, DWORD PTR __Dest$[esp-4]
	push	eax
	push	512					; 00000200H
	push	ecx
	call	DWORD PTR __imp__strcpy_s
	add	esp, 12					; 0000000cH
	ret	0
??$strcpy_s@$0CAA@@@YAHAAY0CAA@DPBD@Z ENDP		; strcpy_s<512>
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??$_Allocate@UNotification@CvNotifications@@@std@@YAPAUNotification@CvNotifications@@IPAU12@@Z ; std::_Allocate<CvNotifications::Notification>
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
EXTRN	??2@YAPAXI@Z:PROC				; operator new
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
; File s:\msvs2008\vc\include\exception
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Allocate@UNotification@CvNotifications@@@std@@YAPAUNotification@CvNotifications@@IPAU12@@Z
_TEXT	SEGMENT
$T223282 = -12						; size = 12
$T223286 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@UNotification@CvNotifications@@@std@@YAPAUNotification@CvNotifications@@IPAU12@@Z PROC ; std::_Allocate<CvNotifications::Notification>, COMDAT

; 37   : 	if (_Count <= 0)

	mov	ecx, DWORD PTR __Count$[esp-4]
	sub	esp, 12					; 0000000cH
	test	ecx, ecx
	ja	SHORT $LN3@Allocate

; 38   : 		_Count = 0;

	xor	ecx, ecx
$LN1@Allocate:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	imul	ecx, 92					; 0000005cH
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 44   : 	}

	add	esp, 12					; 0000000cH
	ret	0
$LN3@Allocate:

; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	ecx
	cmp	eax, 92					; 0000005cH
	jae	SHORT $LN1@Allocate

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	lea	eax, DWORD PTR $T223286[esp+8]
	push	eax
	lea	ecx, DWORD PTR $T223282[esp+16]
	mov	DWORD PTR $T223286[esp+12], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T223282[esp+16]
	push	ecx
	mov	DWORD PTR $T223282[esp+20], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN9@Allocate:
$LN8@Allocate:
	int	3
??$_Allocate@UNotification@CvNotifications@@@std@@YAPAUNotification@CvNotifications@@IPAU12@@Z ENDP ; std::_Allocate<CvNotifications::Notification>
_TEXT	ENDS
PUBLIC	??0?$auto_ptr_ref@VICvPlot1@@@std@@QAE@PAVICvPlot1@@@Z ; std::auto_ptr_ref<ICvPlot1>::auto_ptr_ref<ICvPlot1>
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\memory
;	COMDAT ??0?$auto_ptr_ref@VICvPlot1@@@std@@QAE@PAVICvPlot1@@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??0?$auto_ptr_ref@VICvPlot1@@@std@@QAE@PAVICvPlot1@@@Z PROC ; std::auto_ptr_ref<ICvPlot1>::auto_ptr_ref<ICvPlot1>, COMDAT
; _this$ = ecx

; 647  : 		{	// construct from generic pointer to auto_ptr ptr

	mov	eax, ecx
	mov	ecx, DWORD PTR __Right$[esp-4]
	mov	DWORD PTR [eax], ecx

; 648  : 		}

	ret	4
??0?$auto_ptr_ref@VICvPlot1@@@std@@QAE@PAVICvPlot1@@@Z ENDP ; std::auto_ptr_ref<ICvPlot1>::auto_ptr_ref<ICvPlot1>
_TEXT	ENDS
PUBLIC	??0?$auto_ptr_ref@VICvUnit1@@@std@@QAE@PAVICvUnit1@@@Z ; std::auto_ptr_ref<ICvUnit1>::auto_ptr_ref<ICvUnit1>
; Function compile flags: /Ogtpy
;	COMDAT ??0?$auto_ptr_ref@VICvUnit1@@@std@@QAE@PAVICvUnit1@@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??0?$auto_ptr_ref@VICvUnit1@@@std@@QAE@PAVICvUnit1@@@Z PROC ; std::auto_ptr_ref<ICvUnit1>::auto_ptr_ref<ICvUnit1>, COMDAT
; _this$ = ecx

; 647  : 		{	// construct from generic pointer to auto_ptr ptr

	mov	eax, ecx
	mov	ecx, DWORD PTR __Right$[esp-4]
	mov	DWORD PTR [eax], ecx

; 648  : 		}

	ret	4
??0?$auto_ptr_ref@VICvUnit1@@@std@@QAE@PAVICvUnit1@@@Z ENDP ; std::auto_ptr_ref<ICvUnit1>::auto_ptr_ref<ICvUnit1>
_TEXT	ENDS
PUBLIC	??$_Iter_random@PAUNotification@CvNotifications@@PAU12@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUNotification@CvNotifications@@0@Z ; std::_Iter_random<CvNotifications::Notification *,CvNotifications::Notification *>
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\xutility
;	COMDAT ??$_Iter_random@PAUNotification@CvNotifications@@PAU12@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUNotification@CvNotifications@@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Iter_random@PAUNotification@CvNotifications@@PAU12@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUNotification@CvNotifications@@0@Z PROC ; std::_Iter_random<CvNotifications::Notification *,CvNotifications::Notification *>, COMDAT

; 994  : 	typename _Iter_random_helper<
; 995  : 		iterator_traits<_Iter1>::iterator_category, 
; 996  : 		iterator_traits<_Iter2>::iterator_category>::_Iter_random_cat _Cat;
; 997  : 	return (_Cat);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 998  : 	}

	ret	0
??$_Iter_random@PAUNotification@CvNotifications@@PAU12@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUNotification@CvNotifications@@0@Z ENDP ; std::_Iter_random<CvNotifications::Notification *,CvNotifications::Notification *>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAUNotification@CvNotifications@@PAU12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUNotification@CvNotifications@@0@Z ; std::_Ptr_cat<CvNotifications::Notification *,CvNotifications::Notification *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Ptr_cat@PAUNotification@CvNotifications@@PAU12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUNotification@CvNotifications@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAUNotification@CvNotifications@@PAU12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUNotification@CvNotifications@@0@Z PROC ; std::_Ptr_cat<CvNotifications::Notification *,CvNotifications::Notification *>, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@PAUNotification@CvNotifications@@PAU12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUNotification@CvNotifications@@0@Z ENDP ; std::_Ptr_cat<CvNotifications::Notification *,CvNotifications::Notification *>
_TEXT	ENDS
PUBLIC	??$_Move_cat@PAUNotification@CvNotifications@@@std@@YA?AU_Undefined_move_tag@0@ABQAUNotification@CvNotifications@@@Z ; std::_Move_cat<CvNotifications::Notification *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Move_cat@PAUNotification@CvNotifications@@@std@@YA?AU_Undefined_move_tag@0@ABQAUNotification@CvNotifications@@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
??$_Move_cat@PAUNotification@CvNotifications@@@std@@YA?AU_Undefined_move_tag@0@ABQAUNotification@CvNotifications@@@Z PROC ; std::_Move_cat<CvNotifications::Notification *>, COMDAT

; 1200 : 	{

	push	ecx

; 1201 : 		typename _Move_operation_category<typename iterator_traits<_Iter>::value_type>::_Move_cat _Cat;
; 1202 : 		return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1203 : 	}

	pop	ecx
	ret	0
??$_Move_cat@PAUNotification@CvNotifications@@@std@@YA?AU_Undefined_move_tag@0@ABQAUNotification@CvNotifications@@@Z ENDP ; std::_Move_cat<CvNotifications::Notification *>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAW4BeliefTypes@@PAW41@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAW4BeliefTypes@@0@Z ; std::_Ptr_cat<enum BeliefTypes *,enum BeliefTypes *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Ptr_cat@PAW4BeliefTypes@@PAW41@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAW4BeliefTypes@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAW4BeliefTypes@@PAW41@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAW4BeliefTypes@@0@Z PROC ; std::_Ptr_cat<enum BeliefTypes *,enum BeliefTypes *>, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@PAW4BeliefTypes@@PAW41@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAW4BeliefTypes@@0@Z ENDP ; std::_Ptr_cat<enum BeliefTypes *,enum BeliefTypes *>
_TEXT	ENDS
PUBLIC	??$_Destroy@W4BeliefTypes@@@std@@YAXPAW4BeliefTypes@@@Z ; std::_Destroy<enum BeliefTypes>
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\xmemory
;	COMDAT ??$_Destroy@W4BeliefTypes@@@std@@YAXPAW4BeliefTypes@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@W4BeliefTypes@@@std@@YAXPAW4BeliefTypes@@@Z PROC ; std::_Destroy<enum BeliefTypes>, COMDAT

; 59   : 	_DESTRUCTOR(_Ty, _Ptr);
; 60   : 	}

	ret	0
??$_Destroy@W4BeliefTypes@@@std@@YAXPAW4BeliefTypes@@@Z ENDP ; std::_Destroy<enum BeliefTypes>
_TEXT	ENDS
PUBLIC	?SafeStrlen@FStringA@@SAHPBD@Z			; FStringA::SafeStrlen
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\fireplace\include\fireworks\fstringa.inl
;	COMDAT ?SafeStrlen@FStringA@@SAHPBD@Z
_TEXT	SEGMENT
_lpsz$ = 8						; size = 4
?SafeStrlen@FStringA@@SAHPBD@Z PROC			; FStringA::SafeStrlen, COMDAT

; 1030 : 	return ( lpsz ? ( int )strlen( lpsz ) : 0 );

	mov	eax, DWORD PTR _lpsz$[esp-4]
	test	eax, eax
	je	SHORT $LN3@SafeStrlen
	lea	edx, DWORD PTR [eax+1]
	npad	5
$LL5@SafeStrlen:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL5@SafeStrlen
	sub	eax, edx

; 1031 : }

	ret	0
$LN3@SafeStrlen:

; 1030 : 	return ( lpsz ? ( int )strlen( lpsz ) : 0 );

	xor	eax, eax

; 1031 : }

	ret	0
?SafeStrlen@FStringA@@SAHPBD@Z ENDP			; FStringA::SafeStrlen
_TEXT	ENDS
EXTRN	__imp_??0exception@std@@QAE@ABV01@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0logic_error@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0logic_error@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0logic_error@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0logic_error@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0logic_error@std@@QAE@ABV01@@Z PROC			; std::logic_error::logic_error, COMDAT
; _this$ = ecx
	push	-1
	push	__ehhandler$??0logic_error@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi
	push	edi
	mov	edi, DWORD PTR ___that$[esp+20]
	mov	esi, ecx
	push	edi
	mov	DWORD PTR _this$[esp+28], esi
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	add	edi, 12					; 0000000cH
	push	edi
	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR __$EHRec$[esp+36], 0
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	pop	edi
	mov	eax, esi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0logic_error@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??0logic_error@std@@QAE@ABV01@@Z:
	mov	eax, OFFSET __ehfuncinfo$??0logic_error@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0logic_error@std@@QAE@ABV01@@Z ENDP			; std::logic_error::logic_error
PUBLIC	??0CvString@@QAE@XZ				; CvString::CvString
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
;	COMDAT ??0CvString@@QAE@XZ
_TEXT	SEGMENT
??0CvString@@QAE@XZ PROC				; CvString::CvString, COMDAT
; _this$ = ecx

; 23   : 	CvString() {}

	push	esi
	mov	esi, ecx
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, esi
	pop	esi
	ret	0
??0CvString@@QAE@XZ ENDP				; CvString::CvString
_TEXT	ENDS
PUBLIC	??1CvString@@QAE@XZ				; CvString::~CvString
; Function compile flags: /Ogtpy
;	COMDAT ??1CvString@@QAE@XZ
_TEXT	SEGMENT
??1CvString@@QAE@XZ PROC				; CvString::~CvString, COMDAT
; _this$ = ecx

; 28   : 	~CvString() {}

	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
??1CvString@@QAE@XZ ENDP				; CvString::~CvString
_TEXT	ENDS
PUBLIC	??BCvString@@QBEPBDXZ				; CvString::operator char const *
; Function compile flags: /Ogtpy
;	COMDAT ??BCvString@@QBEPBDXZ
_TEXT	SEGMENT
??BCvString@@QBEPBDXZ PROC				; CvString::operator char const *, COMDAT
; _this$ = ecx

; 31   : 	operator const char*() const 	{ return c_str(); }												

	jmp	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
??BCvString@@QBEPBDXZ ENDP				; CvString::operator char const *
_TEXT	ENDS
PUBLIC	??4CvString@@QAEAAV0@PBD@Z			; CvString::operator=
EXTRN	__imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ:PROC
EXTRN	__imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??4CvString@@QAEAAV0@PBD@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
??4CvString@@QAEAAV0@PBD@Z PROC				; CvString::operator=, COMDAT
; _this$ = ecx

; 37   : 	CvString& operator=( const char* s) { if (s) assign(s); else clear();	return *this; }	

	mov	eax, DWORD PTR _s$[esp-4]
	push	esi
	mov	esi, ecx
	test	eax, eax
	je	SHORT $LN2@operator
	push	eax
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	mov	eax, esi
	pop	esi
	ret	4
$LN2@operator:
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	mov	eax, esi
	pop	esi
	ret	4
??4CvString@@QAEAAV0@PBD@Z ENDP				; CvString::operator=
_TEXT	ENDS
PUBLIC	??0CvPopupInfo@@QAE@W4ButtonPopupTypes@@HHHH_N1@Z ; CvPopupInfo::CvPopupInfo
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstructs.h
;	COMDAT ??0CvPopupInfo@@QAE@W4ButtonPopupTypes@@HHHH_N1@Z
_TEXT	SEGMENT
_buttonPopupType$ = 8					; size = 4
_data1$ = 12						; size = 4
_data2$ = 16						; size = 4
_data3$ = 20						; size = 4
_flags$ = 24						; size = 4
_option1$ = 28						; size = 1
_option2$ = 32						; size = 1
??0CvPopupInfo@@QAE@W4ButtonPopupTypes@@HHHH_N1@Z PROC	; CvPopupInfo::CvPopupInfo, COMDAT
; _this$ = ecx

; 119  : 	{

	mov	edx, DWORD PTR _data2$[esp-4]
	mov	eax, ecx
	mov	ecx, DWORD PTR _data1$[esp-4]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR _data3$[esp-4]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR _flags$[esp-4]
	mov	DWORD PTR [eax+8], ecx
	mov	cl, BYTE PTR _option1$[esp-4]
	mov	DWORD PTR [eax+12], edx
	mov	dl, BYTE PTR _option2$[esp-4]
	mov	BYTE PTR [eax+16], cl
	mov	ecx, DWORD PTR _buttonPopupType$[esp-4]
	mov	BYTE PTR [eax+17], dl
	mov	DWORD PTR [eax+20], ecx

; 120  : 		//Nothing
; 121  : 		szText[0] = 0;

	mov	BYTE PTR [eax+24], 0

; 122  : 	}

	ret	28					; 0000001cH
??0CvPopupInfo@@QAE@W4ButtonPopupTypes@@HHHH_N1@Z ENDP	; CvPopupInfo::CvPopupInfo
_TEXT	ENDS
PUBLIC	??3ICvUnknown@@SGXPAX@Z				; ICvUnknown::operator delete
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvdllinterfaces.h
;	COMDAT ??3ICvUnknown@@SGXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
??3ICvUnknown@@SGXPAX@Z PROC				; ICvUnknown::operator delete, COMDAT

; 310  : 		if (p)

	mov	eax, DWORD PTR _p$[esp-4]
	test	eax, eax
	je	SHORT $LN1@operator@2

; 311  : 		{
; 312  : 			ICvUnknown* inst = (ICvUnknown*)(p);
; 313  : 			inst->Destroy();

	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _p$[esp-4], eax
	jmp	edx
$LN1@operator@2:

; 314  : 		}
; 315  : 	}

	ret	4
??3ICvUnknown@@SGXPAX@Z ENDP				; ICvUnknown::operator delete
_TEXT	ENDS
PUBLIC	?getMap@CvGlobals@@QAEAAVCvMap@@XZ		; CvGlobals::getMap
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
;	COMDAT ?getMap@CvGlobals@@QAEAAVCvMap@@XZ
_TEXT	SEGMENT
?getMap@CvGlobals@@QAEAAVCvMap@@XZ PROC			; CvGlobals::getMap, COMDAT
; _this$ = ecx

; 175  : 		return *m_map;    // inlined for perf reasons, do not use outside of dll

	mov	eax, DWORD PTR [ecx+52]

; 176  : 	}

	ret	0
?getMap@CvGlobals@@QAEAAVCvMap@@XZ ENDP			; CvGlobals::getMap
_TEXT	ENDS
PUBLIC	?getGame@CvGlobals@@QAEAAVCvGame@@XZ		; CvGlobals::getGame
; Function compile flags: /Ogtpy
;	COMDAT ?getGame@CvGlobals@@QAEAAVCvGame@@XZ
_TEXT	SEGMENT
?getGame@CvGlobals@@QAEAAVCvGame@@XZ PROC		; CvGlobals::getGame, COMDAT
; _this$ = ecx

; 183  : 		return *m_game;    // inlined for perf reasons, do not use outside of dll

	mov	eax, DWORD PTR [ecx+48]

; 184  : 	}

	ret	0
?getGame@CvGlobals@@QAEAAVCvGame@@XZ ENDP		; CvGlobals::getGame
_TEXT	ENDS
PUBLIC	?getDLLIFace@CvGlobals@@QAEPAVICvEngineUtility4@@XZ ; CvGlobals::getDLLIFace
; Function compile flags: /Ogtpy
;	COMDAT ?getDLLIFace@CvGlobals@@QAEPAVICvEngineUtility4@@XZ
_TEXT	SEGMENT
?getDLLIFace@CvGlobals@@QAEPAVICvEngineUtility4@@XZ PROC ; CvGlobals::getDLLIFace, COMDAT
; _this$ = ecx

; 7703 : 		return m_pDLL;

	mov	eax, DWORD PTR [ecx+8564]

; 7704 : 	}

	ret	0
?getDLLIFace@CvGlobals@@QAEPAVICvEngineUtility4@@XZ ENDP ; CvGlobals::getDLLIFace
_TEXT	ENDS
PUBLIC	?GetEngineUserInterface@CvGlobals@@QAEPAVICvUserInterface2@@XZ ; CvGlobals::GetEngineUserInterface
; Function compile flags: /Ogtpy
;	COMDAT ?GetEngineUserInterface@CvGlobals@@QAEPAVICvUserInterface2@@XZ
_TEXT	SEGMENT
?GetEngineUserInterface@CvGlobals@@QAEPAVICvUserInterface2@@XZ PROC ; CvGlobals::GetEngineUserInterface, COMDAT
; _this$ = ecx

; 7713 : 		return m_pEngineUI;

	mov	eax, DWORD PTR [ecx+8568]

; 7714 : 	}

	ret	0
?GetEngineUserInterface@CvGlobals@@QAEPAVICvUserInterface2@@XZ ENDP ; CvGlobals::GetEngineUserInterface
_TEXT	ENDS
PUBLIC	??4CvString@@QAEAAV0@ABV0@@Z			; CvString::operator=
EXTRN	__imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??4CvString@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4CvString@@QAEAAV0@ABV0@@Z PROC			; CvString::operator=, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR ___that$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	eax, esi
	pop	esi
	ret	4
??4CvString@@QAEAAV0@ABV0@@Z ENDP			; CvString::operator=
_TEXT	ENDS
PUBLIC	?getPlayer@CvPlayerAI@@SAAAV1@W4PlayerTypes@@@Z	; CvPlayerAI::getPlayer
EXTRN	?m_aPlayers@CvPlayerAI@@1PAV1@A:DWORD		; CvPlayerAI::m_aPlayers
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvplayerai.h
;	COMDAT ?getPlayer@CvPlayerAI@@SAAAV1@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_ePlayer$ = 8						; size = 4
?getPlayer@CvPlayerAI@@SAAAV1@W4PlayerTypes@@@Z PROC	; CvPlayerAI::getPlayer, COMDAT

; 28   : 		CvAssertMsg(ePlayer != NO_PLAYER, "Player is not assigned a valid value");
; 29   : 		CvAssertMsg(ePlayer < MAX_PLAYERS, "Player is not assigned a valid value");
; 30   : 		return m_aPlayers[ePlayer];

	mov	eax, DWORD PTR _ePlayer$[esp-4]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers

; 31   : 	}

	ret	0
?getPlayer@CvPlayerAI@@SAAAV1@W4PlayerTypes@@@Z ENDP	; CvPlayerAI::getPlayer
_TEXT	ENDS
PUBLIC	?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ		; CvPlot::getPlotCity
EXTRN	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z:PROC	; CvPlayer::getCity
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvplot.h
;	COMDAT ?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ
_TEXT	SEGMENT
?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ PROC		; CvPlot::getPlotCity, COMDAT
; _this$ = ecx

; 533  : 		if((m_plotCity.eOwner >= 0) && m_plotCity.eOwner < MAX_PLAYERS)

	mov	eax, DWORD PTR [ecx+104]
	test	eax, eax
	jl	SHORT $LN1@getPlotCit
	cmp	eax, 64					; 00000040H
	jge	SHORT $LN1@getPlotCit

; 534  : 			return (GET_PLAYER((PlayerTypes)m_plotCity.eOwner).getCity(m_plotCity.iID));

	mov	ecx, DWORD PTR [ecx+108]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	ecx
	mov	ecx, eax
	call	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z	; CvPlayer::getCity

; 537  : 	}

	ret	0
$LN1@getPlotCit:

; 535  : 
; 536  : 		return NULL;

	xor	eax, eax

; 537  : 	}

	ret	0
?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ ENDP		; CvPlot::getPlotCity
_TEXT	ENDS
PUBLIC	?coordRange@@YAHHH_N@Z				; coordRange
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvmap.h
;	COMDAT ?coordRange@@YAHHH_N@Z
_TEXT	SEGMENT
_iCoord$ = 8						; size = 4
_iRange$ = 12						; size = 4
_bWrap$ = 16						; size = 1
?coordRange@@YAHHH_N@Z PROC				; coordRange, COMDAT

; 88   : 	if(bWrap)

	cmp	BYTE PTR _bWrap$[esp-4], 0
	mov	eax, DWORD PTR _iCoord$[esp-4]
	je	SHORT $LN5@coordRange

; 89   : 	{
; 90   : 		if(iCoord < 0)
; 91   : 		{
; 92   : 			return (iRange + (iCoord % iRange));

	mov	ecx, DWORD PTR _iRange$[esp-4]
	test	eax, eax
	jge	SHORT $LN3@coordRange
	cdq
	idiv	ecx
	mov	eax, edx
	add	eax, ecx

; 97   : 		}
; 98   : 	}
; 99   : 
; 100  : 	return iCoord;
; 101  : }

	ret	0
$LN3@coordRange:

; 93   : 		}
; 94   : 		else if(iCoord >= iRange)

	cmp	eax, ecx
	jl	SHORT $LN5@coordRange

; 95   : 		{
; 96   : 			return (iCoord % iRange);

	cdq
	idiv	ecx
	mov	eax, edx
$LN5@coordRange:

; 97   : 		}
; 98   : 	}
; 99   : 
; 100  : 	return iCoord;
; 101  : }

	ret	0
?coordRange@@YAHHH_N@Z ENDP				; coordRange
_TEXT	ENDS
PUBLIC	?getGridWidth@CvMap@@QBEHXZ			; CvMap::getGridWidth
; Function compile flags: /Ogtpy
;	COMDAT ?getGridWidth@CvMap@@QBEHXZ
_TEXT	SEGMENT
?getGridWidth@CvMap@@QBEHXZ PROC			; CvMap::getGridWidth, COMDAT
; _this$ = ecx

; 198  : 		return m_iGridWidth;

	mov	eax, DWORD PTR [ecx+4020]

; 199  : 	}

	ret	0
?getGridWidth@CvMap@@QBEHXZ ENDP			; CvMap::getGridWidth
_TEXT	ENDS
PUBLIC	?getGridHeight@CvMap@@QBEHXZ			; CvMap::getGridHeight
; Function compile flags: /Ogtpy
;	COMDAT ?getGridHeight@CvMap@@QBEHXZ
_TEXT	SEGMENT
?getGridHeight@CvMap@@QBEHXZ PROC			; CvMap::getGridHeight, COMDAT
; _this$ = ecx

; 206  : 		return m_iGridHeight;

	mov	eax, DWORD PTR [ecx+4024]

; 207  : 	}

	ret	0
?getGridHeight@CvMap@@QBEHXZ ENDP			; CvMap::getGridHeight
_TEXT	ENDS
PUBLIC	?isWrapX@CvMap@@QBE_NXZ				; CvMap::isWrapX
; Function compile flags: /Ogtpy
;	COMDAT ?isWrapX@CvMap@@QBE_NXZ
_TEXT	SEGMENT
?isWrapX@CvMap@@QBE_NXZ PROC				; CvMap::isWrapX, COMDAT
; _this$ = ecx

; 228  : 		return m_bWrapX;

	mov	al, BYTE PTR [ecx+4056]

; 229  : 	}

	ret	0
?isWrapX@CvMap@@QBE_NXZ ENDP				; CvMap::isWrapX
_TEXT	ENDS
PUBLIC	?isWrapY@CvMap@@QBE_NXZ				; CvMap::isWrapY
; Function compile flags: /Ogtpy
;	COMDAT ?isWrapY@CvMap@@QBE_NXZ
_TEXT	SEGMENT
?isWrapY@CvMap@@QBE_NXZ PROC				; CvMap::isWrapY, COMDAT
; _this$ = ecx

; 233  : 		return m_bWrapY;

	mov	al, BYTE PTR [ecx+4057]

; 234  : 	}

	ret	0
?isWrapY@CvMap@@QBE_NXZ ENDP				; CvMap::isWrapY
_TEXT	ENDS
PUBLIC	?getTeam@CvTeam@@SAAAV1@W4TeamTypes@@@Z		; CvTeam::getTeam
EXTRN	?m_aTeams@CvTeam@@1PAV1@A:DWORD			; CvTeam::m_aTeams
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvteam.h
;	COMDAT ?getTeam@CvTeam@@SAAAV1@W4TeamTypes@@@Z
_TEXT	SEGMENT
_eTeam$ = 8						; size = 4
?getTeam@CvTeam@@SAAAV1@W4TeamTypes@@@Z PROC		; CvTeam::getTeam, COMDAT

; 29   : 		CvAssertMsg(eTeam != NO_TEAM, "eTeam is not assigned a valid value");
; 30   : 		CvAssertMsg(eTeam < MAX_TEAMS, "eTeam is not assigned a valid value");
; 31   : 		return m_aTeams[eTeam];

	mov	eax, DWORD PTR _eTeam$[esp-4]
	imul	eax, 2980				; 00000ba4H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams

; 32   : 	}

	ret	0
?getTeam@CvTeam@@SAAAV1@W4TeamTypes@@@Z ENDP		; CvTeam::getTeam
_TEXT	ENDS
PUBLIC	??0CvString@@QAE@ABV0@@Z			; CvString::CvString
; Function compile flags: /Ogtpy
;	COMDAT ??0CvString@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0CvString@@QAE@ABV0@@Z PROC				; CvString::CvString, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR ___that$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, esi
	pop	esi
	ret	4
??0CvString@@QAE@ABV0@@Z ENDP				; CvString::CvString
_TEXT	ENDS
PUBLIC	??A?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@QBEABW4TeamTypes@@I@Z ; std::vector<enum TeamTypes,std::allocator<enum TeamTypes> >::operator[]
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\vector
;	COMDAT ??A?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@QBEABW4TeamTypes@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@QBEABW4TeamTypes@@I@Z PROC ; std::vector<enum TeamTypes,std::allocator<enum TeamTypes> >::operator[], COMDAT
; _this$ = ecx

; 760  : 
; 761  :  #if _HAS_ITERATOR_DEBUGGING
; 762  : 		if (size() <= _Pos)
; 763  : 			{
; 764  : 			_DEBUG_ERROR("vector subscript out of range");
; 765  : 			_SCL_SECURE_OUT_OF_RANGE;
; 766  : 			}
; 767  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 768  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 769  : 
; 770  : 		return (*(_Myfirst + _Pos));

	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR __Pos$[esp-4]
	lea	eax, DWORD PTR [eax+ecx*4]

; 771  : 		}

	ret	4
??A?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@QBEABW4TeamTypes@@I@Z ENDP ; std::vector<enum TeamTypes,std::allocator<enum TeamTypes> >::operator[]
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0length_error@std@@QAE@ABV01@@Z PROC			; std::length_error::length_error, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR ___that$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	??0logic_error@std@@QAE@ABV01@@Z
	mov	DWORD PTR [esi], OFFSET ??_7length_error@std@@6B@
	mov	eax, esi
	pop	esi
	ret	4
??0length_error@std@@QAE@ABV01@@Z ENDP			; std::length_error::length_error
_TEXT	ENDS
PUBLIC	??$?6H@FDataStream@@QAEAAV0@ABH@Z		; FDataStream::operator<<<int>
EXTRN	?Write@FDataStream@@IAEXABH@Z:PROC		; FDataStream::Write
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\fireplace\include\fireworks\fdatastream.h
;	COMDAT ??$?6H@FDataStream@@QAEAAV0@ABH@Z
_TEXT	SEGMENT
_kData$ = 8						; size = 4
??$?6H@FDataStream@@QAEAAV0@ABH@Z PROC			; FDataStream::operator<<<int>, COMDAT
; _this$ = ecx

; 246  : 	// If the compiler produces an error here complaining about 
; 247  : 	// YouMustImplementASerializeOperatorForThisTypeError then
; 248  : 	// it could not find a specialization for the type supplied
; 249  : 	// in scope. If a specialization exists, be sure to include
; 250  : 	// the header (FStlContainerSerialization.h, for example), 
; 251  : 	// if not, implement :
; 252  : 	// FDataStream & operator<<(FDataStream &, YourCustomType &)
; 253  : 	Write( kData );

	mov	eax, DWORD PTR _kData$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 254  : 	return ( *this );

	mov	eax, esi
	pop	esi

; 255  : }

	ret	4
??$?6H@FDataStream@@QAEAAV0@ABH@Z ENDP			; FDataStream::operator<<<int>
_TEXT	ENDS
PUBLIC	??$?5H@FDataStream@@QAEAAV0@AAH@Z		; FDataStream::operator>><int>
EXTRN	?Read@FDataStream@@IAEXAAH@Z:PROC		; FDataStream::Read
; Function compile flags: /Ogtpy
;	COMDAT ??$?5H@FDataStream@@QAEAAV0@AAH@Z
_TEXT	SEGMENT
_kData$ = 8						; size = 4
??$?5H@FDataStream@@QAEAAV0@AAH@Z PROC			; FDataStream::operator>><int>, COMDAT
; _this$ = ecx

; 260  : 	// If the compiler produces an error here complaining about 
; 261  : 	// YouMustImplementASerializeOperatorForThisTypeError then
; 262  : 	// it could not find a specialization for the type supplied
; 263  : 	// in scope. If a specialization exists, be sure to include
; 264  : 	// the header (FStlContainerSerialization.h, for example), 
; 265  : 	// if not, implement :
; 266  : 	// FDataStream & operator>>(FDataStream &, YourCustomType &)
; 267  : 	Read( kData );

	mov	eax, DWORD PTR _kData$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 268  : 	return ( *this );

	mov	eax, esi
	pop	esi

; 269  : }

	ret	4
??$?5H@FDataStream@@QAEAAV0@AAH@Z ENDP			; FDataStream::operator>><int>
_TEXT	ENDS
PUBLIC	??B?$FAutoVariable@HVCvCity@@@@QBEABHXZ		; FAutoVariable<int,CvCity>::operator int const &
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\fireplace\include\fireworks\fautovariable.h
;	COMDAT ??B?$FAutoVariable@HVCvCity@@@@QBEABHXZ
_TEXT	SEGMENT
??B?$FAutoVariable@HVCvCity@@@@QBEABHXZ PROC		; FAutoVariable<int,CvCity>::operator int const &, COMDAT
; _this$ = ecx

; 194  : 	return m_value;

	lea	eax, DWORD PTR [ecx+4]

; 195  : }

	ret	0
??B?$FAutoVariable@HVCvCity@@@@QBEABHXZ ENDP		; FAutoVariable<int,CvCity>::operator int const &
_TEXT	ENDS
PUBLIC	??B?$FAutoVariable@W4PlayerTypes@@VCvPlayer@@@@QBEABW4PlayerTypes@@XZ ; FAutoVariable<enum PlayerTypes,CvPlayer>::operator enum PlayerTypes const &
; Function compile flags: /Ogtpy
;	COMDAT ??B?$FAutoVariable@W4PlayerTypes@@VCvPlayer@@@@QBEABW4PlayerTypes@@XZ
_TEXT	SEGMENT
??B?$FAutoVariable@W4PlayerTypes@@VCvPlayer@@@@QBEABW4PlayerTypes@@XZ PROC ; FAutoVariable<enum PlayerTypes,CvPlayer>::operator enum PlayerTypes const &, COMDAT
; _this$ = ecx

; 194  : 	return m_value;

	lea	eax, DWORD PTR [ecx+4]

; 195  : }

	ret	0
??B?$FAutoVariable@W4PlayerTypes@@VCvPlayer@@@@QBEABW4PlayerTypes@@XZ ENDP ; FAutoVariable<enum PlayerTypes,CvPlayer>::operator enum PlayerTypes const &
_TEXT	ENDS
PUBLIC	??B?$FAutoVariable@_NVCvPlayer@@@@QBEAB_NXZ	; FAutoVariable<bool,CvPlayer>::operator bool const &
; Function compile flags: /Ogtpy
;	COMDAT ??B?$FAutoVariable@_NVCvPlayer@@@@QBEAB_NXZ
_TEXT	SEGMENT
??B?$FAutoVariable@_NVCvPlayer@@@@QBEAB_NXZ PROC	; FAutoVariable<bool,CvPlayer>::operator bool const &, COMDAT
; _this$ = ecx

; 194  : 	return m_value;

	lea	eax, DWORD PTR [ecx+4]

; 195  : }

	ret	0
??B?$FAutoVariable@_NVCvPlayer@@@@QBEAB_NXZ ENDP	; FAutoVariable<bool,CvPlayer>::operator bool const &
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR ___that$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
	mov	eax, esi
	pop	esi
	ret	4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??$?5_N@FDataStream@@QAEAAV0@AA_N@Z		; FDataStream::operator>><bool>
EXTRN	?Read@FDataStream@@IAEXAA_N@Z:PROC		; FDataStream::Read
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\fireplace\include\fireworks\fdatastream.h
;	COMDAT ??$?5_N@FDataStream@@QAEAAV0@AA_N@Z
_TEXT	SEGMENT
_kData$ = 8						; size = 4
??$?5_N@FDataStream@@QAEAAV0@AA_N@Z PROC		; FDataStream::operator>><bool>, COMDAT
; _this$ = ecx

; 260  : 	// If the compiler produces an error here complaining about 
; 261  : 	// YouMustImplementASerializeOperatorForThisTypeError then
; 262  : 	// it could not find a specialization for the type supplied
; 263  : 	// in scope. If a specialization exists, be sure to include
; 264  : 	// the header (FStlContainerSerialization.h, for example), 
; 265  : 	// if not, implement :
; 266  : 	// FDataStream & operator>>(FDataStream &, YourCustomType &)
; 267  : 	Read( kData );

	mov	eax, DWORD PTR _kData$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 268  : 	return ( *this );

	mov	eax, esi
	pop	esi

; 269  : }

	ret	4
??$?5_N@FDataStream@@QAEAAV0@AA_N@Z ENDP		; FDataStream::operator>><bool>
_TEXT	ENDS
PUBLIC	??$?6_N@FDataStream@@QAEAAV0@AB_N@Z		; FDataStream::operator<<<bool>
EXTRN	?Write@FDataStream@@IAEXAB_N@Z:PROC		; FDataStream::Write
; Function compile flags: /Ogtpy
;	COMDAT ??$?6_N@FDataStream@@QAEAAV0@AB_N@Z
_TEXT	SEGMENT
_kData$ = 8						; size = 4
??$?6_N@FDataStream@@QAEAAV0@AB_N@Z PROC		; FDataStream::operator<<<bool>, COMDAT
; _this$ = ecx

; 246  : 	// If the compiler produces an error here complaining about 
; 247  : 	// YouMustImplementASerializeOperatorForThisTypeError then
; 248  : 	// it could not find a specialization for the type supplied
; 249  : 	// in scope. If a specialization exists, be sure to include
; 250  : 	// the header (FStlContainerSerialization.h, for example), 
; 251  : 	// if not, implement :
; 252  : 	// FDataStream & operator<<(FDataStream &, YourCustomType &)
; 253  : 	Write( kData );

	mov	eax, DWORD PTR _kData$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 254  : 	return ( *this );

	mov	eax, esi
	pop	esi

; 255  : }

	ret	4
??$?6_N@FDataStream@@QAEAAV0@AB_N@Z ENDP		; FDataStream::operator<<<bool>
_TEXT	ENDS
PUBLIC	??$?5VCvString@@@FDataStream@@QAEAAV0@AAVCvString@@@Z ; FDataStream::operator>><CvString>
EXTRN	?Read@FDataStream@@IAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; FDataStream::Read
; Function compile flags: /Ogtpy
;	COMDAT ??$?5VCvString@@@FDataStream@@QAEAAV0@AAVCvString@@@Z
_TEXT	SEGMENT
_kData$ = 8						; size = 4
??$?5VCvString@@@FDataStream@@QAEAAV0@AAVCvString@@@Z PROC ; FDataStream::operator>><CvString>, COMDAT
; _this$ = ecx

; 260  : 	// If the compiler produces an error here complaining about 
; 261  : 	// YouMustImplementASerializeOperatorForThisTypeError then
; 262  : 	// it could not find a specialization for the type supplied
; 263  : 	// in scope. If a specialization exists, be sure to include
; 264  : 	// the header (FStlContainerSerialization.h, for example), 
; 265  : 	// if not, implement :
; 266  : 	// FDataStream & operator>>(FDataStream &, YourCustomType &)
; 267  : 	Read( kData );

	mov	eax, DWORD PTR _kData$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	?Read@FDataStream@@IAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; FDataStream::Read

; 268  : 	return ( *this );

	mov	eax, esi
	pop	esi

; 269  : }

	ret	4
??$?5VCvString@@@FDataStream@@QAEAAV0@AAVCvString@@@Z ENDP ; FDataStream::operator>><CvString>
_TEXT	ENDS
PUBLIC	??$?6VCvString@@@FDataStream@@QAEAAV0@ABVCvString@@@Z ; FDataStream::operator<<<CvString>
EXTRN	?Write@FDataStream@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; FDataStream::Write
; Function compile flags: /Ogtpy
;	COMDAT ??$?6VCvString@@@FDataStream@@QAEAAV0@ABVCvString@@@Z
_TEXT	SEGMENT
_kData$ = 8						; size = 4
??$?6VCvString@@@FDataStream@@QAEAAV0@ABVCvString@@@Z PROC ; FDataStream::operator<<<CvString>, COMDAT
; _this$ = ecx

; 246  : 	// If the compiler produces an error here complaining about 
; 247  : 	// YouMustImplementASerializeOperatorForThisTypeError then
; 248  : 	// it could not find a specialization for the type supplied
; 249  : 	// in scope. If a specialization exists, be sure to include
; 250  : 	// the header (FStlContainerSerialization.h, for example), 
; 251  : 	// if not, implement :
; 252  : 	// FDataStream & operator<<(FDataStream &, YourCustomType &)
; 253  : 	Write( kData );

	mov	eax, DWORD PTR _kData$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	?Write@FDataStream@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; FDataStream::Write

; 254  : 	return ( *this );

	mov	eax, esi
	pop	esi

; 255  : }

	ret	4
??$?6VCvString@@@FDataStream@@QAEAAV0@ABVCvString@@@Z ENDP ; FDataStream::operator<<<CvString>
_TEXT	ENDS
PUBLIC	??$?5I@FDataStream@@QAEAAV0@AAI@Z		; FDataStream::operator>><unsigned int>
EXTRN	?Read@FDataStream@@IAEXAAI@Z:PROC		; FDataStream::Read
; Function compile flags: /Ogtpy
;	COMDAT ??$?5I@FDataStream@@QAEAAV0@AAI@Z
_TEXT	SEGMENT
_kData$ = 8						; size = 4
??$?5I@FDataStream@@QAEAAV0@AAI@Z PROC			; FDataStream::operator>><unsigned int>, COMDAT
; _this$ = ecx

; 260  : 	// If the compiler produces an error here complaining about 
; 261  : 	// YouMustImplementASerializeOperatorForThisTypeError then
; 262  : 	// it could not find a specialization for the type supplied
; 263  : 	// in scope. If a specialization exists, be sure to include
; 264  : 	// the header (FStlContainerSerialization.h, for example), 
; 265  : 	// if not, implement :
; 266  : 	// FDataStream & operator>>(FDataStream &, YourCustomType &)
; 267  : 	Read( kData );

	mov	eax, DWORD PTR _kData$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	?Read@FDataStream@@IAEXAAI@Z		; FDataStream::Read

; 268  : 	return ( *this );

	mov	eax, esi
	pop	esi

; 269  : }

	ret	4
??$?5I@FDataStream@@QAEAAV0@AAI@Z ENDP			; FDataStream::operator>><unsigned int>
_TEXT	ENDS
PUBLIC	??$?6I@FDataStream@@QAEAAV0@ABI@Z		; FDataStream::operator<<<unsigned int>
EXTRN	?Write@FDataStream@@IAEXABI@Z:PROC		; FDataStream::Write
; Function compile flags: /Ogtpy
;	COMDAT ??$?6I@FDataStream@@QAEAAV0@ABI@Z
_TEXT	SEGMENT
_kData$ = 8						; size = 4
??$?6I@FDataStream@@QAEAAV0@ABI@Z PROC			; FDataStream::operator<<<unsigned int>, COMDAT
; _this$ = ecx

; 246  : 	// If the compiler produces an error here complaining about 
; 247  : 	// YouMustImplementASerializeOperatorForThisTypeError then
; 248  : 	// it could not find a specialization for the type supplied
; 249  : 	// in scope. If a specialization exists, be sure to include
; 250  : 	// the header (FStlContainerSerialization.h, for example), 
; 251  : 	// if not, implement :
; 252  : 	// FDataStream & operator<<(FDataStream &, YourCustomType &)
; 253  : 	Write( kData );

	mov	eax, DWORD PTR _kData$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write

; 254  : 	return ( *this );

	mov	eax, esi
	pop	esi

; 255  : }

	ret	4
??$?6I@FDataStream@@QAEAAV0@ABI@Z ENDP			; FDataStream::operator<<<unsigned int>
_TEXT	ENDS
PUBLIC	??5@YAAAVFDataStream@@AAV0@AAUNotification@CvNotifications@@@Z ; operator>>
EXTRN	??5@YAAAVFDataStream@@AAV0@AAW4PlayerTypes@@@Z:PROC ; operator>>
EXTRN	??5@YAAAVFDataStream@@AAV0@AAW4NotificationTypes@@@Z:PROC ; operator>>
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvnotifications.cpp
;	COMDAT ??5@YAAAVFDataStream@@AAV0@AAUNotification@CvNotifications@@@Z
_TEXT	SEGMENT
_loadFrom$ = 8						; size = 4
_writeTo$ = 12						; size = 4
??5@YAAAVFDataStream@@AAV0@AAUNotification@CvNotifications@@@Z PROC ; operator>>, COMDAT

; 174  : {

	push	esi

; 175  : 	loadFrom >> writeTo.m_eNotificationType;

	mov	esi, DWORD PTR _writeTo$[esp]
	push	edi
	mov	edi, DWORD PTR _loadFrom$[esp+4]
	push	esi
	push	edi
	call	??5@YAAAVFDataStream@@AAV0@AAW4NotificationTypes@@@Z ; operator>>
	add	esp, 8

; 176  : 	loadFrom >> writeTo.m_strMessage;

	lea	eax, DWORD PTR [esi+8]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; FDataStream::Read

; 177  : 	loadFrom >> writeTo.m_strSummary;

	lea	ecx, DWORD PTR [esi+36]
	push	ecx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; FDataStream::Read

; 178  : 	loadFrom >> writeTo.m_iX;

	lea	edx, DWORD PTR [esi+64]
	push	edx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 179  : 	loadFrom >> writeTo.m_iY;

	lea	eax, DWORD PTR [esi+68]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 180  : 	loadFrom >> writeTo.m_iGameDataIndex;

	lea	ecx, DWORD PTR [esi+72]
	push	ecx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 181  : 	loadFrom >> writeTo.m_iExtraGameData;

	lea	edx, DWORD PTR [esi+76]
	push	edx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 182  : 	loadFrom >> writeTo.m_iTurn;

	lea	eax, DWORD PTR [esi+80]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 183  : 	loadFrom >> writeTo.m_iLookupIndex;

	lea	ecx, DWORD PTR [esi+84]
	push	ecx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 184  : 	loadFrom >> writeTo.m_bDismissed;

	lea	edx, DWORD PTR [esi+89]
	push	edx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 185  : 	loadFrom >> writeTo.m_ePlayerID;

	lea	eax, DWORD PTR [esi+4]
	push	eax
	push	edi
	call	??5@YAAAVFDataStream@@AAV0@AAW4PlayerTypes@@@Z ; operator>>
	add	esp, 8

; 186  : 	writeTo.m_bNeedsBroadcast = true; // all loads should re-broadcast their events
; 187  : 	writeTo.m_bWaitExtraTurn = false; // not saving this
; 188  : 
; 189  : 	return loadFrom;

	mov	eax, edi
	pop	edi
	mov	BYTE PTR [esi+88], 1
	mov	BYTE PTR [esi+90], 0
	pop	esi

; 190  : }

	ret	0
??5@YAAAVFDataStream@@AAV0@AAUNotification@CvNotifications@@@Z ENDP ; operator>>
_TEXT	ENDS
PUBLIC	??6@YAAAVFDataStream@@AAV0@ABUNotification@CvNotifications@@@Z ; operator<<
EXTRN	??6@YAAAVFDataStream@@AAV0@ABW4PlayerTypes@@@Z:PROC ; operator<<
EXTRN	??6@YAAAVFDataStream@@AAV0@ABW4NotificationTypes@@@Z:PROC ; operator<<
; Function compile flags: /Ogtpy
;	COMDAT ??6@YAAAVFDataStream@@AAV0@ABUNotification@CvNotifications@@@Z
_TEXT	SEGMENT
_saveTo$ = 8						; size = 4
_readFrom$ = 12						; size = 4
??6@YAAAVFDataStream@@AAV0@ABUNotification@CvNotifications@@@Z PROC ; operator<<, COMDAT

; 194  : {

	push	esi

; 195  : 	saveTo << readFrom.m_eNotificationType;

	mov	esi, DWORD PTR _saveTo$[esp]
	push	edi
	mov	edi, DWORD PTR _readFrom$[esp+4]
	push	edi
	push	esi
	call	??6@YAAAVFDataStream@@AAV0@ABW4NotificationTypes@@@Z ; operator<<
	add	esp, 8

; 196  : 	saveTo << readFrom.m_strMessage;

	lea	eax, DWORD PTR [edi+8]
	push	eax
	mov	ecx, esi
	call	?Write@FDataStream@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; FDataStream::Write

; 197  : 	saveTo << readFrom.m_strSummary;

	lea	ecx, DWORD PTR [edi+36]
	push	ecx
	mov	ecx, esi
	call	?Write@FDataStream@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; FDataStream::Write

; 198  : 	saveTo << readFrom.m_iX;

	lea	edx, DWORD PTR [edi+64]
	push	edx
	mov	ecx, esi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 199  : 	saveTo << readFrom.m_iY;

	lea	eax, DWORD PTR [edi+68]
	push	eax
	mov	ecx, esi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 200  : 	saveTo << readFrom.m_iGameDataIndex;

	lea	ecx, DWORD PTR [edi+72]
	push	ecx
	mov	ecx, esi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 201  : 	saveTo << readFrom.m_iExtraGameData;

	lea	edx, DWORD PTR [edi+76]
	push	edx
	mov	ecx, esi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 202  : 	saveTo << readFrom.m_iTurn;

	lea	eax, DWORD PTR [edi+80]
	push	eax
	mov	ecx, esi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 203  : 	saveTo << readFrom.m_iLookupIndex;

	lea	ecx, DWORD PTR [edi+84]
	push	ecx
	mov	ecx, esi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 204  : 	saveTo << readFrom.m_bDismissed;

	lea	edx, DWORD PTR [edi+89]
	push	edx
	mov	ecx, esi
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 205  : 	saveTo << readFrom.m_ePlayerID;

	add	edi, 4
	push	edi
	push	esi
	call	??6@YAAAVFDataStream@@AAV0@ABW4PlayerTypes@@@Z ; operator<<
	add	esp, 8
	pop	edi

; 206  : 	// this is not saved because we want to re-broadcast on load
; 207  : 	// saveTo << writeTo.m_bBroadcast;
; 208  : 	// Not saving this either
; 209  : 	// saveTo << readFrom.m_bWaitExtraTurn;
; 210  : 
; 211  : 	return saveTo;

	mov	eax, esi
	pop	esi

; 212  : }

	ret	0
??6@YAAAVFDataStream@@AAV0@ABUNotification@CvNotifications@@@Z ENDP ; operator<<
_TEXT	ENDS
PUBLIC	?Clear@Notification@CvNotifications@@QAEXXZ	; CvNotifications::Notification::Clear
; Function compile flags: /Ogtpy
;	COMDAT ?Clear@Notification@CvNotifications@@QAEXXZ
_TEXT	SEGMENT
?Clear@Notification@CvNotifications@@QAEXXZ PROC	; CvNotifications::Notification::Clear, COMDAT
; _this$ = ecx

; 215  : {

	push	esi
	push	edi
	mov	esi, ecx

; 216  : 	m_eNotificationType = NO_NOTIFICATION_TYPE;

	or	edi, -1

; 217  : 	m_strMessage = "";

	push	OFFSET $SG220740
	lea	ecx, DWORD PTR [esi+8]
	mov	DWORD PTR [esi], edi
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z

; 218  : 	m_strSummary = "";

	push	OFFSET $SG220741
	lea	ecx, DWORD PTR [esi+36]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z

; 219  : 	m_iX = -1;
; 220  : 	m_iY = -1;
; 221  : 	m_iGameDataIndex = -1;
; 222  : 	m_iTurn = -1;
; 223  : 	m_iLookupIndex = -1;
; 224  : 	m_bNeedsBroadcast = false;

	xor	al, al
	mov	DWORD PTR [esi+64], edi
	mov	DWORD PTR [esi+68], edi
	mov	DWORD PTR [esi+72], edi
	mov	DWORD PTR [esi+80], edi
	mov	DWORD PTR [esi+84], edi
	pop	edi
	mov	BYTE PTR [esi+88], al

; 225  : 	m_bDismissed = false;

	mov	BYTE PTR [esi+89], al

; 226  : 	m_bWaitExtraTurn = false;

	mov	BYTE PTR [esi+90], al
	pop	esi

; 227  : }

	ret	0
?Clear@Notification@CvNotifications@@QAEXXZ ENDP	; CvNotifications::Notification::Clear
_TEXT	ENDS
PUBLIC	?Read@CvNotifications@@QAEXAAVFDataStream@@@Z	; CvNotifications::Read
; Function compile flags: /Ogtpy
;	COMDAT ?Read@CvNotifications@@QAEXAAVFDataStream@@@Z
_TEXT	SEGMENT
_uiVersion$ = 8						; size = 4
_kStream$ = 8						; size = 4
?Read@CvNotifications@@QAEXAAVFDataStream@@@Z PROC	; CvNotifications::Read, COMDAT
; _this$ = ecx

; 269  : {

	push	ebx

; 270  : 	// Version number to maintain backwards compatibility
; 271  : 	uint uiVersion;
; 272  : 	kStream >> uiVersion;

	mov	ebx, DWORD PTR _kStream$[esp]
	push	esi
	push	edi
	lea	eax, DWORD PTR _uiVersion$[esp+8]
	mov	esi, ecx
	push	eax
	mov	ecx, ebx
	call	?Read@FDataStream@@IAEXAAI@Z		; FDataStream::Read

; 273  : 
; 274  : 	kStream >> m_ePlayer;

	push	esi
	push	ebx
	call	??5@YAAAVFDataStream@@AAV0@AAW4PlayerTypes@@@Z ; operator>>
	add	esp, 8

; 275  : 	kStream >> m_iCurrentLookupIndex;

	lea	ecx, DWORD PTR [esi+28]
	push	ecx
	mov	ecx, ebx
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 276  : 	kStream >> m_iNotificationsBeginIndex;

	lea	edx, DWORD PTR [esi+20]
	push	edx
	mov	ecx, ebx
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 277  : 	kStream >> m_iNotificationsEndIndex;

	lea	eax, DWORD PTR [esi+24]
	push	eax
	mov	ecx, ebx
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read
	xor	edi, edi
$LL5@Read:

; 278  : 
; 279  : 	for(uint ui = 0; ui < MAX_NOTIFICATIONS; ui++)
; 280  : 	{
; 281  : 		kStream >> m_aNotifications[ui];

	mov	ecx, DWORD PTR [esi+8]
	add	ecx, edi
	push	ecx
	push	ebx
	call	??5@YAAAVFDataStream@@AAV0@AAUNotification@CvNotifications@@@Z ; operator>>
	add	esp, 8

; 282  : 		if (uiVersion <= 1)

	cmp	DWORD PTR _uiVersion$[esp+8], 1
	ja	SHORT $LN4@Read

; 283  : 		{
; 284  : 			// Translate the old index the hash ID.
; 285  : 			int iIndex = (int)(m_aNotifications[ui].m_eNotificationType);

	mov	edx, DWORD PTR [esi+8]
	mov	eax, DWORD PTR [edx+edi]
	lea	ecx, DWORD PTR [edx+edi]

; 286  : #ifdef AUI_WARNING_FIXES
; 287  : 			if (iIndex >= 0 && iIndex < sizeof(V1_IndexToHash) / sizeof(int))
; 288  : #else
; 289  : 			if (iIndex >= 0 && iIndex < sizeof(V1_IndexToHash)/sizeof(uint))

	test	eax, eax
	jl	SHORT $LN4@Read
	cmp	eax, 142				; 0000008eH
	jae	SHORT $LN4@Read

; 290  : #endif
; 291  : 				m_aNotifications[ui].m_eNotificationType = (NotificationTypes)V1_IndexToHash[iIndex];

	mov	eax, DWORD PTR _V1_IndexToHash[eax*4]
	mov	DWORD PTR [ecx], eax
$LN4@Read:
	add	edi, 92					; 0000005cH
	cmp	edi, 9200				; 000023f0H
	jb	SHORT $LL5@Read
	pop	edi
	pop	esi
	pop	ebx

; 292  : 		}
; 293  : 	}
; 294  : }

	ret	4
?Read@CvNotifications@@QAEXAAVFDataStream@@@Z ENDP	; CvNotifications::Read
_TEXT	ENDS
PUBLIC	?Write@CvNotifications@@QBEXAAVFDataStream@@@Z	; CvNotifications::Write
; Function compile flags: /Ogtpy
;	COMDAT ?Write@CvNotifications@@QBEXAAVFDataStream@@@Z
_TEXT	SEGMENT
_uiVersion$ = -4					; size = 4
_kStream$ = 8						; size = 4
?Write@CvNotifications@@QBEXAAVFDataStream@@@Z PROC	; CvNotifications::Write, COMDAT
; _this$ = ecx

; 298  : {

	push	ecx
	push	ebx

; 299  : 	// Current version number
; 300  : 	uint uiVersion = 2;
; 301  : 	kStream << uiVersion;

	mov	ebx, DWORD PTR _kStream$[esp+4]
	push	esi
	push	edi
	lea	eax, DWORD PTR _uiVersion$[esp+16]
	mov	edi, ecx
	push	eax
	mov	ecx, ebx
	mov	DWORD PTR _uiVersion$[esp+20], 2
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write

; 302  : 
; 303  : 	// need to serialize notification list
; 304  : 	kStream << m_ePlayer;

	push	edi
	push	ebx
	call	??6@YAAAVFDataStream@@AAV0@ABW4PlayerTypes@@@Z ; operator<<
	add	esp, 8

; 305  : 	kStream << m_iCurrentLookupIndex;

	lea	ecx, DWORD PTR [edi+28]
	push	ecx
	mov	ecx, ebx
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 306  : 	kStream << m_iNotificationsBeginIndex;

	lea	edx, DWORD PTR [edi+20]
	push	edx
	mov	ecx, ebx
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 307  : 	kStream << m_iNotificationsEndIndex;

	lea	eax, DWORD PTR [edi+24]
	push	eax
	mov	ecx, ebx
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write
	xor	esi, esi
	npad	5
$LL3@Write:

; 308  : 
; 309  : 	for(uint ui = 0; ui < MAX_NOTIFICATIONS; ui++)
; 310  : 	{
; 311  : 		kStream << m_aNotifications[ui];

	mov	ecx, DWORD PTR [edi+8]
	add	ecx, esi
	push	ecx
	push	ebx
	call	??6@YAAAVFDataStream@@AAV0@ABUNotification@CvNotifications@@@Z ; operator<<
	add	esi, 92					; 0000005cH
	add	esp, 8
	cmp	esi, 9200				; 000023f0H
	jb	SHORT $LL3@Write
	pop	edi
	pop	esi
	pop	ebx

; 312  : 	}
; 313  : }

	pop	ecx
	ret	4
?Write@CvNotifications@@QBEXAAVFDataStream@@@Z ENDP	; CvNotifications::Write
_TEXT	ENDS
PUBLIC	??0Notification@CvNotifications@@QAE@XZ		; CvNotifications::Notification::Notification
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Notification@CvNotifications@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Notification@CvNotifications@@QAE@XZ$0
__ehfuncinfo$??0Notification@CvNotifications@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0Notification@CvNotifications@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??0Notification@CvNotifications@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0Notification@CvNotifications@@QAE@XZ PROC		; CvNotifications::Notification::Notification, COMDAT
; _this$ = ecx
	push	-1
	push	__ehhandler$??0Notification@CvNotifications@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi
	mov	esi, ecx
	lea	ecx, DWORD PTR [esi+8]
	mov	DWORD PTR _this$[esp+20], esi
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR [esi+36]
	mov	DWORD PTR __$EHRec$[esp+28], 0
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	mov	eax, esi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Notification@CvNotifications@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$??0Notification@CvNotifications@@QAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??0Notification@CvNotifications@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0Notification@CvNotifications@@QAE@XZ ENDP		; CvNotifications::Notification::Notification
PUBLIC	??1Notification@CvNotifications@@QAE@XZ		; CvNotifications::Notification::~Notification
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1Notification@CvNotifications@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1Notification@CvNotifications@@QAE@XZ$0
__ehfuncinfo$??1Notification@CvNotifications@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1Notification@CvNotifications@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??1Notification@CvNotifications@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1Notification@CvNotifications@@QAE@XZ PROC		; CvNotifications::Notification::~Notification, COMDAT
; _this$ = ecx
	push	-1
	push	__ehhandler$??1Notification@CvNotifications@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR _this$[esp+20], esi
	lea	ecx, DWORD PTR [esi+36]
	mov	DWORD PTR __$EHRec$[esp+28], 0
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR [esi+8]
	mov	DWORD PTR __$EHRec$[esp+28], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1Notification@CvNotifications@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$??1Notification@CvNotifications@@QAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??1Notification@CvNotifications@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1Notification@CvNotifications@@QAE@XZ ENDP		; CvNotifications::Notification::~Notification
PUBLIC	??4Notification@CvNotifications@@QAEAAU01@ABU01@@Z ; CvNotifications::Notification::operator=
; Function compile flags: /Ogtpy
;	COMDAT ??4Notification@CvNotifications@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4Notification@CvNotifications@@QAEAAU01@ABU01@@Z PROC	; CvNotifications::Notification::operator=, COMDAT
; _this$ = ecx
	push	esi
	push	edi
	mov	edi, DWORD PTR ___that$[esp+4]
	mov	eax, DWORD PTR [edi]
	mov	esi, ecx
	mov	DWORD PTR [esi], eax
	mov	ecx, DWORD PTR [edi+4]
	lea	edx, DWORD PTR [edi+8]
	mov	DWORD PTR [esi+4], ecx
	push	edx
	lea	ecx, DWORD PTR [esi+8]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	eax, DWORD PTR [edi+36]
	push	eax
	lea	ecx, DWORD PTR [esi+36]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	ecx, DWORD PTR [edi+64]
	mov	DWORD PTR [esi+64], ecx
	mov	edx, DWORD PTR [edi+68]
	mov	DWORD PTR [esi+68], edx
	mov	eax, DWORD PTR [edi+72]
	mov	DWORD PTR [esi+72], eax
	mov	ecx, DWORD PTR [edi+76]
	mov	DWORD PTR [esi+76], ecx
	mov	edx, DWORD PTR [edi+80]
	mov	DWORD PTR [esi+80], edx
	mov	eax, DWORD PTR [edi+84]
	mov	DWORD PTR [esi+84], eax
	mov	cl, BYTE PTR [edi+88]
	mov	BYTE PTR [esi+88], cl
	mov	dl, BYTE PTR [edi+89]
	mov	BYTE PTR [esi+89], dl
	mov	al, BYTE PTR [edi+90]
	mov	BYTE PTR [esi+90], al
	pop	edi
	mov	eax, esi
	pop	esi
	ret	4
??4Notification@CvNotifications@@QAEAAU01@ABU01@@Z ENDP	; CvNotifications::Notification::operator=
_TEXT	ENDS
PUBLIC	?Dismiss@CvNotifications@@QAEXH_N@Z		; CvNotifications::Dismiss
EXTRN	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ:PROC ; CvGame::getActivePlayer
EXTRN	?gGlobals@@3VCvGlobals@@A:BYTE			; gGlobals
; Function compile flags: /Ogtpy
;	COMDAT ?Dismiss@CvNotifications@@QAEXH_N@Z
_TEXT	SEGMENT
_iLookupIndex$ = 8					; size = 4
_bUserInvoked$ = 12					; size = 1
?Dismiss@CvNotifications@@QAEXH_N@Z PROC		; CvNotifications::Dismiss, COMDAT
; _this$ = ecx

; 505  : {

	push	esi
	mov	esi, ecx
	push	edi

; 506  : 	int iIndex = m_iNotificationsBeginIndex;

	mov	edi, DWORD PTR [esi+20]

; 507  : 	while(iIndex != m_iNotificationsEndIndex)

	cmp	edi, DWORD PTR [esi+24]
	je	$LN3@Dismiss
	push	ebx
	mov	ebx, DWORD PTR _iLookupIndex$[esp+8]
	push	ebp
	mov	ebp, DWORD PTR [esi+8]
	npad	7
$LL9@Dismiss:

; 508  : 	{
; 509  : 		if(m_aNotifications[iIndex].m_iLookupIndex == iLookupIndex)

	mov	eax, edi
	imul	eax, 92					; 0000005cH
	cmp	DWORD PTR [eax+ebp+84], ebx
	je	SHORT $LN29@Dismiss

; 521  : 				}
; 522  : 			}
; 523  : 			default:
; 524  : 				break;
; 525  : 			}
; 526  : 
; 527  : 			break;
; 528  : 		}
; 529  : 
; 530  : 		iIndex++;
; 531  : 		if(iIndex >= (int)m_aNotifications.size())

	mov	ecx, DWORD PTR [esi+12]
	sub	ecx, ebp
	mov	eax, -1307163959			; b21642c9H
	imul	ecx
	add	edx, ecx
	sar	edx, 6
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	inc	edi
	add	ecx, edx
	cmp	edi, ecx
	jl	SHORT $LN1@Dismiss

; 532  : 		{
; 533  : 			iIndex = 0;

	xor	edi, edi
$LN1@Dismiss:

; 507  : 	while(iIndex != m_iNotificationsEndIndex)

	cmp	edi, DWORD PTR [esi+24]
	jne	SHORT $LL9@Dismiss
	pop	ebp
	pop	ebx
	pop	edi
	pop	esi

; 534  : 		}
; 535  : 	}
; 536  : }

	ret	8
$LN29@Dismiss:

; 510  : 		{
; 511  : 			m_aNotifications[iIndex].m_bDismissed = true;

	imul	edi, 92					; 0000005cH
	mov	edx, ebp
	mov	BYTE PTR [edi+edx+89], 1

; 512  : 			GC.GetEngineUserInterface()->RemoveNotification(m_aNotifications[iIndex].m_iLookupIndex, m_ePlayer);

	mov	edx, DWORD PTR [esi]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+208]
	push	edx
	mov	edx, DWORD PTR [esi+8]
	mov	edx, DWORD PTR [edi+edx+84]
	push	edx
	call	eax

; 513  : 
; 514  : 			switch(m_aNotifications[iIndex].m_eNotificationType)

	mov	ecx, DWORD PTR [esi+8]
	cmp	DWORD PTR [edi+ecx], 623640104		; 252bfe28H
	jne	SHORT $LN30@Dismiss

; 515  : 			{
; 516  : 			case NOTIFICATION_POLICY:
; 517  : 			{
; 518  : 				if(m_ePlayer == GC.getGame().getActivePlayer() && bUserInvoked)

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	DWORD PTR [esi], eax
	jne	SHORT $LN30@Dismiss
	cmp	BYTE PTR _bUserInvoked$[esp+12], 0
	je	SHORT $LN30@Dismiss

; 519  : 				{
; 520  : 					GC.GetEngineUserInterface()->SetPolicyNotificationSeen(true);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+512]
	push	1
	call	eax
$LN30@Dismiss:
	pop	ebp
	pop	ebx
$LN3@Dismiss:
	pop	edi
	pop	esi

; 534  : 		}
; 535  : 	}
; 536  : }

	ret	8
?Dismiss@CvNotifications@@QAEXH_N@Z ENDP		; CvNotifications::Dismiss
_TEXT	ENDS
PUBLIC	?MayUserDismiss@CvNotifications@@QAE_NH@Z	; CvNotifications::MayUserDismiss
EXTRN	?isOption@CvGame@@QBE_NW4GameOptionTypes@@@Z:PROC ; CvGame::isOption
; Function compile flags: /Ogtpy
;	COMDAT ?MayUserDismiss@CvNotifications@@QAE_NH@Z
_TEXT	SEGMENT
_iLookupIndex$ = 8					; size = 4
?MayUserDismiss@CvNotifications@@QAE_NH@Z PROC		; CvNotifications::MayUserDismiss, COMDAT
; _this$ = ecx

; 540  : {

	push	ebx
	push	ebp
	push	esi
	push	edi

; 541  : 	int iIndex = m_iNotificationsBeginIndex;

	mov	edi, DWORD PTR [ecx+20]

; 542  : 	while(iIndex != m_iNotificationsEndIndex)

	cmp	edi, DWORD PTR [ecx+24]
	je	SHORT $LN10@MayUserDis
	mov	ebx, DWORD PTR [ecx+8]
	mov	ebp, DWORD PTR _iLookupIndex$[esp+12]
$LL11@MayUserDis:

; 543  : 	{
; 544  : 		if(m_aNotifications[iIndex].m_iLookupIndex == iLookupIndex)

	mov	eax, edi
	imul	eax, 92					; 0000005cH
	cmp	DWORD PTR [eax+ebx+84], ebp
	je	SHORT $LN29@MayUserDis

; 582  : 				break;
; 583  : 			}
; 584  : 		}
; 585  : 
; 586  : 		iIndex++;
; 587  : 		if(iIndex >= (int)m_aNotifications.size())

	mov	esi, DWORD PTR [ecx+12]
	sub	esi, ebx
	mov	eax, -1307163959			; b21642c9H
	imul	esi
	add	edx, esi
	sar	edx, 6
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	inc	edi
	add	eax, edx
	cmp	edi, eax
	jl	SHORT $LN1@MayUserDis

; 588  : 		{
; 589  : 			iIndex = 0;

	xor	edi, edi
$LN1@MayUserDis:

; 542  : 	while(iIndex != m_iNotificationsEndIndex)

	cmp	edi, DWORD PTR [ecx+24]
	jne	SHORT $LL11@MayUserDis
$LN10@MayUserDis:
	pop	edi
	pop	esi
	pop	ebp

; 590  : 		}
; 591  : 	}
; 592  : 
; 593  : 	return false;

	xor	al, al
	pop	ebx

; 594  : }

	ret	4
$LN29@MayUserDis:

; 545  : 		{
; 546  : 			switch(m_aNotifications[iIndex].m_eNotificationType)

	imul	edi, 92					; 0000005cH
	mov	edi, DWORD PTR [edi+ebx]
	cmp	edi, 623640104				; 252bfe28H
	jg	SHORT $LN14@MayUserDis
	je	SHORT $LN5@MayUserDis
	cmp	edi, -372818113				; e9c73f3fH
	jg	SHORT $LN15@MayUserDis
	je	SHORT $LN10@MayUserDis
	cmp	edi, -1746998481			; 97deeb2fH
	jg	SHORT $LN16@MayUserDis
	je	SHORT $LN10@MayUserDis
	cmp	edi, -2068323322			; 84b7e406H
	je	SHORT $LN10@MayUserDis
	cmp	edi, -1774532806			; 963ac73aH
	jmp	$LN30@MayUserDis
$LN16@MayUserDis:
	cmp	edi, -1421067341			; ab4c3bb3H
	jmp	$LN30@MayUserDis
$LN15@MayUserDis:
	cmp	edi, 294822899				; 1192a3f3H
	jg	SHORT $LN17@MayUserDis
	je	SHORT $LN10@MayUserDis
	cmp	edi, 84632199				; 050b6287H
	je	SHORT $LN10@MayUserDis
	cmp	edi, 88900711				; 054c8467H
	jmp	SHORT $LN30@MayUserDis
$LN17@MayUserDis:
	cmp	edi, 507779013				; 1e4417c5H
	jmp	SHORT $LN30@MayUserDis
$LN5@MayUserDis:

; 547  : 			{
; 548  : 			case NOTIFICATION_DIPLO_VOTE:
; 549  : 			case NOTIFICATION_PRODUCTION:
; 550  : 			case NOTIFICATION_TECH:
; 551  : 			case NOTIFICATION_FREE_TECH:
; 552  : 			case NOTIFICATION_FREE_POLICY:
; 553  : 			case NOTIFICATION_FREE_GREAT_PERSON:
; 554  : 			case NOTIFICATION_FOUND_PANTHEON:
; 555  : 			case NOTIFICATION_FOUND_RELIGION:
; 556  : 			case NOTIFICATION_ENHANCE_RELIGION:
; 557  : 			case NOTIFICATION_SPY_STOLE_TECH:
; 558  : 			case NOTIFICATION_MAYA_LONG_COUNT:
; 559  : 			case NOTIFICATION_FAITH_GREAT_PERSON:
; 560  : 			case NOTIFICATION_ADD_REFORMATION_BELIEF:
; 561  : 			case NOTIFICATION_LEAGUE_CALL_FOR_PROPOSALS:
; 562  : 			case NOTIFICATION_CHOOSE_ARCHAEOLOGY:
; 563  : 			case NOTIFICATION_LEAGUE_CALL_FOR_VOTES:
; 564  : 			case NOTIFICATION_CHOOSE_IDEOLOGY:
; 565  : 				return false;
; 566  : 				break;
; 567  : 
; 568  : 			case NOTIFICATION_POLICY:
; 569  : 				if(GC.getGame().isOption(GAMEOPTION_POLICY_SAVING))

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	12					; 0000000cH
	call	?isOption@CvGame@@QBE_NW4GameOptionTypes@@@Z ; CvGame::isOption
	pop	edi
	pop	esi
	test	al, al
	pop	ebp
	setne	al
	pop	ebx

; 594  : }

	ret	4
$LN14@MayUserDis:

; 545  : 		{
; 546  : 			switch(m_aNotifications[iIndex].m_eNotificationType)

	cmp	edi, 1523558135				; 5acfa6f7H
	jg	SHORT $LN18@MayUserDis
	je	$LN10@MayUserDis
	cmp	edi, 1279997337				; 4c4b3599H
	jg	SHORT $LN19@MayUserDis
	je	$LN10@MayUserDis
	cmp	edi, 755914060				; 2d0e554cH
	je	$LN10@MayUserDis
	cmp	edi, 1218150582				; 489b80b6H
	jmp	SHORT $LN30@MayUserDis
$LN19@MayUserDis:
	cmp	edi, 1376002242				; 520420c2H
	jmp	SHORT $LN30@MayUserDis
$LN18@MayUserDis:
	cmp	edi, 1989681641				; 769821e9H
	je	$LN10@MayUserDis
	cmp	edi, 1996573794				; 77014c62H
	je	$LN10@MayUserDis
	cmp	edi, 2128612861				; 7ee00dfdH
$LN30@MayUserDis:
	je	$LN10@MayUserDis
	pop	edi
	pop	esi
	pop	ebp

; 570  : 				{
; 571  : 					return true;
; 572  : 					break;
; 573  : 				}
; 574  : 				else
; 575  : 				{
; 576  : 					return false;
; 577  : 					break;
; 578  : 				}
; 579  : 
; 580  : 			default:
; 581  : 				return true;

	mov	al, 1
	pop	ebx

; 594  : }

	ret	4
?MayUserDismiss@CvNotifications@@QAE_NH@Z ENDP		; CvNotifications::MayUserDismiss
_TEXT	ENDS
PUBLIC	?Rebroadcast@CvNotifications@@QAEXXZ		; CvNotifications::Rebroadcast
; Function compile flags: /Ogtpy
;	COMDAT ?Rebroadcast@CvNotifications@@QAEXXZ
_TEXT	SEGMENT
?Rebroadcast@CvNotifications@@QAEXXZ PROC		; CvNotifications::Rebroadcast, COMDAT
; _this$ = ecx

; 598  : {

	push	edi

; 599  : 	int iIndex = m_iNotificationsBeginIndex;

	mov	edi, DWORD PTR [ecx+20]

; 600  : 	while(iIndex != m_iNotificationsEndIndex)

	cmp	edi, DWORD PTR [ecx+24]
	je	SHORT $LN3@Rebroadcas
	push	esi
	npad	6
$LL4@Rebroadcas:

; 601  : 	{
; 602  : 		if(!m_aNotifications[iIndex].m_bDismissed)

	mov	edx, DWORD PTR [ecx+8]
	mov	eax, edi
	imul	eax, 92					; 0000005cH
	add	eax, edx
	cmp	BYTE PTR [eax+89], 0
	jne	SHORT $LN2@Rebroadcas

; 603  : 		{
; 604  : 			m_aNotifications[iIndex].m_bNeedsBroadcast = true;

	mov	BYTE PTR [eax+88], 1
$LN2@Rebroadcas:

; 605  : 		}
; 606  : 
; 607  : 		iIndex++;
; 608  : 		if(iIndex >= (int)m_aNotifications.size())

	mov	esi, DWORD PTR [ecx+12]
	sub	esi, DWORD PTR [ecx+8]
	mov	eax, -1307163959			; b21642c9H
	imul	esi
	add	edx, esi
	sar	edx, 6
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	inc	edi
	add	eax, edx
	cmp	edi, eax
	jl	SHORT $LN1@Rebroadcas

; 609  : 		{
; 610  : 			iIndex = 0;

	xor	edi, edi
$LN1@Rebroadcas:

; 600  : 	while(iIndex != m_iNotificationsEndIndex)

	cmp	edi, DWORD PTR [ecx+24]
	jne	SHORT $LL4@Rebroadcas
	pop	esi
$LN3@Rebroadcas:
	pop	edi

; 611  : 		}
; 612  : 	}
; 613  : }

	ret	0
?Rebroadcast@CvNotifications@@QAEXXZ ENDP		; CvNotifications::Rebroadcast
_TEXT	ENDS
PUBLIC	?GetEndTurnBlockedType@CvNotifications@@QAE_NAAW4EndTurnBlockingTypes@@AAH@Z ; CvNotifications::GetEndTurnBlockedType
EXTRN	?isGameMultiPlayer@CvGame@@QBE_NXZ:PROC		; CvGame::isGameMultiPlayer
; Function compile flags: /Ogtpy
;	COMDAT ?GetEndTurnBlockedType@CvNotifications@@QAE_NAAW4EndTurnBlockingTypes@@AAH@Z
_TEXT	SEGMENT
_eBlockingType$ = 8					; size = 4
_iNotificationIndex$ = 12				; size = 4
?GetEndTurnBlockedType@CvNotifications@@QAE_NAAW4EndTurnBlockingTypes@@AAH@Z PROC ; CvNotifications::GetEndTurnBlockedType, COMDAT
; _this$ = ecx

; 616  : {

	push	ebx

; 617  : 	eBlockingType = NO_ENDTURN_BLOCKING_TYPE;

	mov	ebx, DWORD PTR _eBlockingType$[esp]
	push	ebp

; 618  : 	iNotificationIndex = -1;

	mov	ebp, DWORD PTR _iNotificationIndex$[esp+4]
	push	esi
	mov	DWORD PTR [ebx], -1
	push	edi
	mov	edi, ecx
	mov	DWORD PTR [ebp], -1

; 619  : 
; 620  : 	int iIndex = m_iNotificationsBeginIndex;

	mov	esi, DWORD PTR [edi+20]

; 621  : 	while(iIndex != m_iNotificationsEndIndex)

	cmp	esi, DWORD PTR [edi+24]
	je	$LN26@GetEndTurn
$LL27@GetEndTurn:

; 622  : 	{
; 623  : 		if(!m_aNotifications[iIndex].m_bDismissed)

	mov	ecx, DWORD PTR [edi+8]
	mov	eax, esi
	imul	eax, 92					; 0000005cH
	add	eax, ecx
	cmp	BYTE PTR [eax+89], 0
	jne	$LN2@GetEndTurn

; 624  : 		{
; 625  : 			switch(m_aNotifications[iIndex].m_eNotificationType)

	mov	eax, DWORD PTR [eax]
	cmp	eax, 507779013				; 1e4417c5H
	jg	$LN32@GetEndTurn
	je	$LN17@GetEndTurn
	cmp	eax, -1181197223			; b9985c59H
	jg	$LN33@GetEndTurn
	je	SHORT $LN22@GetEndTurn
	cmp	eax, -1746998481			; 97deeb2fH
	jg	SHORT $LN34@GetEndTurn
	je	$LN4@GetEndTurn
	cmp	eax, -2068323322			; 84b7e406H
	je	$LN5@GetEndTurn
	cmp	eax, -1774532806			; 963ac73aH
	jne	$LN2@GetEndTurn

; 697  : 				break;
; 698  : 
; 699  : 			case NOTIFICATION_SPY_STOLE_TECH:
; 700  : 				eBlockingType = ENDTURN_BLOCKING_STEAL_TECH;
; 701  : 				iNotificationIndex = m_aNotifications[iIndex].m_iLookupIndex;

	imul	esi, 92					; 0000005cH
	mov	DWORD PTR [ebx], 16			; 00000010H
	mov	edx, DWORD PTR [edi+8]
	mov	eax, DWORD PTR [esi+edx+84]
	pop	edi
	pop	esi
	mov	DWORD PTR [ebp], eax
	pop	ebp

; 702  : 				return true;

	mov	al, 1
	pop	ebx

; 761  : }

	ret	8
$LN34@GetEndTurn:

; 624  : 		{
; 625  : 			switch(m_aNotifications[iIndex].m_eNotificationType)

	cmp	eax, -1421067341			; ab4c3bb3H
	jne	$LN2@GetEndTurn

; 673  : 				break;
; 674  : 
; 675  : 			case NOTIFICATION_FREE_GREAT_PERSON:
; 676  : 				eBlockingType = ENDTURN_BLOCKING_FREE_ITEMS;
; 677  : 				iNotificationIndex = m_aNotifications[iIndex].m_iLookupIndex;

	imul	esi, 92					; 0000005cH
	mov	DWORD PTR [ebx], 12			; 0000000cH
	mov	edx, DWORD PTR [edi+8]
	mov	eax, DWORD PTR [esi+edx+84]
	pop	edi
	pop	esi
	mov	DWORD PTR [ebp], eax
	pop	ebp

; 678  : 				return true;

	mov	al, 1
	pop	ebx

; 761  : }

	ret	8
$LN22@GetEndTurn:

; 626  : 			{
; 627  : 			case NOTIFICATION_CITY_RANGE_ATTACK:
; 628  : 			{
; 629  : 				bool automaticallyEndTurns = GC.getGame().isGameMultiPlayer() ? GC.GetEngineUserInterface()->IsMPAutoEndTurnEnabled() : GC.GetEngineUserInterface()->IsSPAutoEndTurnEnabled();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?isGameMultiPlayer@CvGame@@QBE_NXZ	; CvGame::isGameMultiPlayer
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	edx, DWORD PTR [ecx]
	test	al, al
	je	SHORT $LN30@GetEndTurn
	mov	eax, DWORD PTR [edx+576]
	jmp	SHORT $LN91@GetEndTurn
$LN30@GetEndTurn:
	mov	eax, DWORD PTR [edx+568]
$LN91@GetEndTurn:
	call	eax

; 630  : 				if(automaticallyEndTurns)

	test	al, al
	je	$LN2@GetEndTurn

; 631  : 				{//City range attacks only block turns if the player is using auto end turn.
; 632  : 					eBlockingType = ENDTURN_BLOCKING_CITY_RANGE_ATTACK;
; 633  : 					iNotificationIndex = m_aNotifications[iIndex].m_iLookupIndex;

	imul	esi, 92					; 0000005cH
	mov	DWORD PTR [ebx], 10			; 0000000aH
	mov	ecx, DWORD PTR [edi+8]
	mov	edx, DWORD PTR [esi+ecx+84]
	pop	edi
	pop	esi
	mov	DWORD PTR [ebp], edx
	pop	ebp

; 634  : 					return true;

	mov	al, 1
	pop	ebx

; 761  : }

	ret	8
$LN33@GetEndTurn:

; 624  : 		{
; 625  : 			switch(m_aNotifications[iIndex].m_eNotificationType)

	cmp	eax, 88900711				; 054c8467H
	jg	SHORT $LN35@GetEndTurn
	je	$LN9@GetEndTurn
	cmp	eax, -372818113				; e9c73f3fH
	je	$LN11@GetEndTurn
	cmp	eax, 84632199				; 050b6287H
	jne	$LN2@GetEndTurn

; 715  : 				break;
; 716  : 
; 717  : 			case NOTIFICATION_ADD_REFORMATION_BELIEF:
; 718  : 				eBlockingType = ENDTURN_BLOCKING_ADD_REFORMATION_BELIEF;
; 719  : 				iNotificationIndex = m_aNotifications[iIndex].m_iLookupIndex;

	imul	esi, 92					; 0000005cH
	mov	DWORD PTR [ebx], 19			; 00000013H
	mov	eax, DWORD PTR [edi+8]
	mov	ecx, DWORD PTR [esi+eax+84]
	pop	edi
	pop	esi
	mov	DWORD PTR [ebp], ecx
	pop	ebp

; 720  : 				return true;

	mov	al, 1
	pop	ebx

; 761  : }

	ret	8
$LN35@GetEndTurn:

; 624  : 		{
; 625  : 			switch(m_aNotifications[iIndex].m_eNotificationType)

	cmp	eax, 294822899				; 1192a3f3H
	jne	$LN2@GetEndTurn

; 739  : 				break;
; 740  : 
; 741  : 			case NOTIFICATION_CHOOSE_IDEOLOGY:
; 742  : 				eBlockingType = ENDTURN_BLOCKING_CHOOSE_IDEOLOGY;
; 743  : 				iNotificationIndex = m_aNotifications[iIndex].m_iLookupIndex;

	imul	esi, 92					; 0000005cH
	mov	DWORD PTR [ebx], 23			; 00000017H
	mov	eax, DWORD PTR [edi+8]
	mov	ecx, DWORD PTR [esi+eax+84]
	pop	edi
	pop	esi
	mov	DWORD PTR [ebp], ecx
	pop	ebp

; 744  : 				return true;

	mov	al, 1
	pop	ebx

; 761  : }

	ret	8
$LN32@GetEndTurn:

; 624  : 		{
; 625  : 			switch(m_aNotifications[iIndex].m_eNotificationType)

	cmp	eax, 1376002242				; 520420c2H
	jg	SHORT $LN36@GetEndTurn
	je	$LN8@GetEndTurn
	cmp	eax, 1218150582				; 489b80b6H
	jg	SHORT $LN37@GetEndTurn
	je	$LN15@GetEndTurn
	cmp	eax, 623640104				; 252bfe28H
	je	$LN18@GetEndTurn
	cmp	eax, 755914060				; 2d0e554cH
	jne	$LN2@GetEndTurn

; 721  : 				break;
; 722  : 
; 723  : 			case NOTIFICATION_LEAGUE_CALL_FOR_PROPOSALS:
; 724  : 				eBlockingType = ENDTURN_BLOCKING_LEAGUE_CALL_FOR_PROPOSALS;
; 725  : 				iNotificationIndex = m_aNotifications[iIndex].m_iLookupIndex;

	imul	esi, 92					; 0000005cH
	mov	DWORD PTR [ebx], 20			; 00000014H
	mov	ecx, DWORD PTR [edi+8]
	mov	edx, DWORD PTR [esi+ecx+84]
	pop	edi
	pop	esi
	mov	DWORD PTR [ebp], edx
	pop	ebp

; 726  : 				return true;

	mov	al, 1
	pop	ebx

; 761  : }

	ret	8
$LN37@GetEndTurn:

; 624  : 		{
; 625  : 			switch(m_aNotifications[iIndex].m_eNotificationType)

	cmp	eax, 1279997337				; 4c4b3599H
	jne	SHORT $LN2@GetEndTurn

; 679  : 				break;
; 680  : 
; 681  : 			case NOTIFICATION_FOUND_PANTHEON:
; 682  : 				eBlockingType = ENDTURN_BLOCKING_FOUND_PANTHEON;
; 683  : 				iNotificationIndex = m_aNotifications[iIndex].m_iLookupIndex;

	imul	esi, 92					; 0000005cH
	mov	DWORD PTR [ebx], 13			; 0000000dH
	mov	ecx, DWORD PTR [edi+8]
	mov	edx, DWORD PTR [esi+ecx+84]
	pop	edi
	pop	esi
	mov	DWORD PTR [ebp], edx
	pop	ebp

; 684  : 				return true;

	mov	al, 1
	pop	ebx

; 761  : }

	ret	8
$LN36@GetEndTurn:

; 624  : 		{
; 625  : 			switch(m_aNotifications[iIndex].m_eNotificationType)

	cmp	eax, 1996573794				; 77014c62H
	jg	SHORT $LN38@GetEndTurn
	je	$LN19@GetEndTurn
	cmp	eax, 1523558135				; 5acfa6f7H
	je	$LN16@GetEndTurn
	cmp	eax, 1989681641				; 769821e9H
	jne	SHORT $LN2@GetEndTurn

; 635  : 				}
; 636  : 				break;
; 637  : 			}
; 638  : 
; 639  : 			case NOTIFICATION_DIPLO_VOTE:
; 640  : 				eBlockingType = ENDTURN_BLOCKING_DIPLO_VOTE;
; 641  : 				iNotificationIndex = m_aNotifications[iIndex].m_iLookupIndex;

	imul	esi, 92					; 0000005cH
	mov	DWORD PTR [ebx], 4
	mov	edx, DWORD PTR [edi+8]
	mov	eax, DWORD PTR [esi+edx+84]
	pop	edi
	pop	esi
	mov	DWORD PTR [ebp], eax
	pop	ebp

; 642  : 				return true;

	mov	al, 1
	pop	ebx

; 761  : }

	ret	8
$LN38@GetEndTurn:

; 624  : 		{
; 625  : 			switch(m_aNotifications[iIndex].m_eNotificationType)

	cmp	eax, 2128612861				; 7ee00dfdH
	je	$LN12@GetEndTurn
$LN2@GetEndTurn:

; 745  : 				break;
; 746  : 
; 747  : 			default:
; 748  : 				// these notifications don't block, so don't return a blocking type
; 749  : 				break;
; 750  : 			}
; 751  : 		}
; 752  : 
; 753  : 		iIndex++;
; 754  : 		if(iIndex >= (int)m_aNotifications.size())

	mov	ecx, DWORD PTR [edi+12]
	sub	ecx, DWORD PTR [edi+8]
	mov	eax, -1307163959			; b21642c9H
	imul	ecx
	add	edx, ecx
	sar	edx, 6
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	inc	esi
	add	ecx, edx
	cmp	esi, ecx
	jl	SHORT $LN1@GetEndTurn

; 755  : 		{
; 756  : 			iIndex = 0;

	xor	esi, esi
$LN1@GetEndTurn:

; 621  : 	while(iIndex != m_iNotificationsEndIndex)

	cmp	esi, DWORD PTR [edi+24]
	jne	$LL27@GetEndTurn
$LN26@GetEndTurn:
	pop	edi
	pop	esi
	pop	ebp

; 757  : 		}
; 758  : 	}
; 759  : 
; 760  : 	return false;

	xor	al, al
	pop	ebx

; 761  : }

	ret	8
$LN5@GetEndTurn:

; 727  : 				break;
; 728  : 
; 729  : 			case NOTIFICATION_CHOOSE_ARCHAEOLOGY:
; 730  : 				eBlockingType = ENDTURN_BLOCKING_CHOOSE_ARCHAEOLOGY;
; 731  : 				iNotificationIndex = m_aNotifications[iIndex].m_iLookupIndex;

	imul	esi, 92					; 0000005cH
	mov	DWORD PTR [ebx], 21			; 00000015H
	mov	ecx, DWORD PTR [edi+8]
	mov	edx, DWORD PTR [esi+ecx+84]
	pop	edi
	pop	esi
	mov	DWORD PTR [ebp], edx
	pop	ebp

; 732  : 				return true;

	mov	al, 1
	pop	ebx

; 761  : }

	ret	8
$LN4@GetEndTurn:

; 733  : 				break;
; 734  : 
; 735  : 			case NOTIFICATION_LEAGUE_CALL_FOR_VOTES:
; 736  : 				eBlockingType = ENDTURN_BLOCKING_LEAGUE_CALL_FOR_VOTES;
; 737  : 				iNotificationIndex = m_aNotifications[iIndex].m_iLookupIndex;

	imul	esi, 92					; 0000005cH
	mov	DWORD PTR [ebx], 22			; 00000016H
	mov	eax, DWORD PTR [edi+8]
	mov	ecx, DWORD PTR [esi+eax+84]
	pop	edi
	pop	esi
	mov	DWORD PTR [ebp], ecx
	pop	ebp

; 738  : 				return true;

	mov	al, 1
	pop	ebx

; 761  : }

	ret	8
$LN11@GetEndTurn:

; 691  : 				break;
; 692  : 
; 693  : 			case NOTIFICATION_ENHANCE_RELIGION:
; 694  : 				eBlockingType = ENDTURN_BLOCKING_ENHANCE_RELIGION;
; 695  : 				iNotificationIndex = m_aNotifications[iIndex].m_iLookupIndex;

	imul	esi, 92					; 0000005cH
	mov	DWORD PTR [ebx], 15			; 0000000fH
	mov	edx, DWORD PTR [edi+8]
	mov	eax, DWORD PTR [esi+edx+84]
	pop	edi
	pop	esi
	mov	DWORD PTR [ebp], eax
	pop	ebp

; 696  : 				return true;

	mov	al, 1
	pop	ebx

; 761  : }

	ret	8
$LN9@GetEndTurn:

; 703  : 				break;
; 704  : 
; 705  : 			case NOTIFICATION_MAYA_LONG_COUNT:
; 706  : 				eBlockingType = ENDTURN_BLOCKING_MAYA_LONG_COUNT;
; 707  : 				iNotificationIndex = m_aNotifications[iIndex].m_iLookupIndex;

	imul	esi, 92					; 0000005cH
	mov	DWORD PTR [ebx], 17			; 00000011H
	mov	ecx, DWORD PTR [edi+8]
	mov	edx, DWORD PTR [esi+ecx+84]
	pop	edi
	pop	esi
	mov	DWORD PTR [ebp], edx
	pop	ebp

; 708  : 				return true;

	mov	al, 1
	pop	ebx

; 761  : }

	ret	8
$LN17@GetEndTurn:

; 655  : 				break;
; 656  : 
; 657  : 			case NOTIFICATION_FREE_POLICY:
; 658  : 				eBlockingType = ENDTURN_BLOCKING_FREE_POLICY;
; 659  : 				iNotificationIndex = m_aNotifications[iIndex].m_iLookupIndex;

	imul	esi, 92					; 0000005cH
	mov	DWORD PTR [ebx], 11			; 0000000bH
	mov	edx, DWORD PTR [edi+8]
	mov	eax, DWORD PTR [esi+edx+84]
	pop	edi
	pop	esi
	mov	DWORD PTR [ebp], eax
	pop	ebp

; 660  : 				return true;

	mov	al, 1
	pop	ebx

; 761  : }

	ret	8
$LN18@GetEndTurn:

; 649  : 				break;
; 650  : 
; 651  : 			case NOTIFICATION_POLICY:
; 652  : 				eBlockingType = ENDTURN_BLOCKING_POLICY;
; 653  : 				iNotificationIndex = m_aNotifications[iIndex].m_iLookupIndex;

	imul	esi, 92					; 0000005cH
	mov	DWORD PTR [ebx], 0
	mov	eax, DWORD PTR [edi+8]
	mov	ecx, DWORD PTR [esi+eax+84]
	pop	edi
	pop	esi
	mov	DWORD PTR [ebp], ecx
	pop	ebp

; 654  : 				return true;

	mov	al, 1
	pop	ebx

; 761  : }

	ret	8
$LN15@GetEndTurn:

; 667  : 				break;
; 668  : 
; 669  : 			case NOTIFICATION_FREE_TECH:
; 670  : 				eBlockingType = ENDTURN_BLOCKING_FREE_TECH;
; 671  : 				iNotificationIndex = m_aNotifications[iIndex].m_iLookupIndex;

	imul	esi, 92					; 0000005cH
	mov	DWORD PTR [ebx], 6
	mov	edx, DWORD PTR [edi+8]
	mov	eax, DWORD PTR [esi+edx+84]
	pop	edi
	pop	esi
	mov	DWORD PTR [ebp], eax
	pop	ebp

; 672  : 				return true;

	mov	al, 1
	pop	ebx

; 761  : }

	ret	8
$LN8@GetEndTurn:

; 709  : 				break;
; 710  : 
; 711  : 			case NOTIFICATION_FAITH_GREAT_PERSON:
; 712  : 				eBlockingType = ENDTURN_BLOCKING_FAITH_GREAT_PERSON;
; 713  : 				iNotificationIndex = m_aNotifications[iIndex].m_iLookupIndex;

	imul	esi, 92					; 0000005cH
	mov	DWORD PTR [ebx], 18			; 00000012H
	mov	eax, DWORD PTR [edi+8]
	mov	ecx, DWORD PTR [esi+eax+84]
	pop	edi
	pop	esi
	mov	DWORD PTR [ebp], ecx
	pop	ebp

; 714  : 				return true;

	mov	al, 1
	pop	ebx

; 761  : }

	ret	8
$LN16@GetEndTurn:

; 661  : 				break;
; 662  : 
; 663  : 			case NOTIFICATION_TECH:
; 664  : 				eBlockingType = ENDTURN_BLOCKING_RESEARCH;
; 665  : 				iNotificationIndex = m_aNotifications[iIndex].m_iLookupIndex;

	imul	esi, 92					; 0000005cH
	mov	DWORD PTR [ebx], 1
	mov	ecx, DWORD PTR [edi+8]
	mov	edx, DWORD PTR [esi+ecx+84]
	pop	edi
	pop	esi
	mov	DWORD PTR [ebp], edx
	pop	ebp

; 666  : 				return true;

	mov	al, 1
	pop	ebx

; 761  : }

	ret	8
$LN19@GetEndTurn:

; 643  : 				break;
; 644  : 
; 645  : 			case NOTIFICATION_PRODUCTION:
; 646  : 				eBlockingType = ENDTURN_BLOCKING_PRODUCTION;
; 647  : 				iNotificationIndex = m_aNotifications[iIndex].m_iLookupIndex;

	imul	esi, 92					; 0000005cH
	mov	DWORD PTR [ebx], 2
	mov	eax, DWORD PTR [edi+8]
	mov	ecx, DWORD PTR [esi+eax+84]
	pop	edi
	pop	esi
	mov	DWORD PTR [ebp], ecx
	pop	ebp

; 648  : 				return true;

	mov	al, 1
	pop	ebx

; 761  : }

	ret	8
$LN12@GetEndTurn:

; 685  : 				break;
; 686  : 
; 687  : 			case NOTIFICATION_FOUND_RELIGION:
; 688  : 				eBlockingType = ENDTURN_BLOCKING_FOUND_RELIGION;
; 689  : 				iNotificationIndex = m_aNotifications[iIndex].m_iLookupIndex;

	imul	esi, 92					; 0000005cH
	mov	DWORD PTR [ebx], 14			; 0000000eH
	mov	edx, DWORD PTR [edi+8]
	mov	eax, DWORD PTR [esi+edx+84]
	pop	edi
	pop	esi
	mov	DWORD PTR [ebp], eax
	pop	ebp

; 690  : 				return true;

	mov	al, 1
	pop	ebx

; 761  : }

	ret	8
?GetEndTurnBlockedType@CvNotifications@@QAE_NAAW4EndTurnBlockingTypes@@AAH@Z ENDP ; CvNotifications::GetEndTurnBlockedType
_TEXT	ENDS
PUBLIC	?GetNumNotifications@CvNotifications@@QAEHXZ	; CvNotifications::GetNumNotifications
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumNotifications@CvNotifications@@QAEHXZ
_TEXT	SEGMENT
?GetNumNotifications@CvNotifications@@QAEHXZ PROC	; CvNotifications::GetNumNotifications, COMDAT
; _this$ = ecx

; 765  : {

	push	ebx

; 766  : 	if(m_iNotificationsEndIndex >= m_iNotificationsBeginIndex)

	mov	ebx, DWORD PTR [ecx+20]
	push	edi
	mov	edi, DWORD PTR [ecx+24]
	cmp	edi, ebx
	jl	SHORT $LN1@GetNumNoti

; 767  : 	{
; 768  : 		int iValue = m_iNotificationsEndIndex - m_iNotificationsBeginIndex;

	mov	eax, edi
	pop	edi
	sub	eax, ebx
	pop	ebx

; 774  : }

	ret	0
$LN1@GetNumNoti:
	push	esi

; 769  : 		return iValue;
; 770  : 	}
; 771  : 
; 772  : 	int iValue = (m_aNotifications.size() - m_iNotificationsBeginIndex) + m_iNotificationsEndIndex;

	mov	esi, DWORD PTR [ecx+12]
	sub	esi, DWORD PTR [ecx+8]
	mov	eax, -1307163959			; b21642c9H
	imul	esi
	add	edx, esi
	sar	edx, 6
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx

; 773  : 	return iValue;

	sub	eax, ebx
	pop	esi
	add	eax, edi
	pop	edi
	pop	ebx

; 774  : }

	ret	0
?GetNumNotifications@CvNotifications@@QAEHXZ ENDP	; CvNotifications::GetNumNotifications
_TEXT	ENDS
PUBLIC	?GetNotificationStr@CvNotifications@@QAE?AVCvString@@H@Z ; CvNotifications::GetNotificationStr
; Function compile flags: /Ogtpy
;	COMDAT ?GetNotificationStr@CvNotifications@@QAE?AVCvString@@H@Z
_TEXT	SEGMENT
$T223796 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_iZeroBasedIndex$ = 12					; size = 4
?GetNotificationStr@CvNotifications@@QAE?AVCvString@@H@Z PROC ; CvNotifications::GetNotificationStr, COMDAT
; _this$ = ecx

; 777  : {

	push	ecx
	push	esi

; 778  : 	int iRealIndex = (m_iNotificationsBeginIndex + iZeroBasedIndex) % m_aNotifications.size();

	mov	esi, DWORD PTR [ecx+12]
	sub	esi, DWORD PTR [ecx+8]
	mov	eax, -1307163959			; b21642c9H
	imul	esi
	mov	eax, DWORD PTR [ecx+20]
	add	eax, DWORD PTR _iZeroBasedIndex$[esp+4]
	add	edx, esi
	sar	edx, 6
	mov	esi, edx
	shr	esi, 31					; 0000001fH
	add	esi, edx
	xor	edx, edx
	div	esi

; 779  : 	return m_aNotifications[iRealIndex].m_strMessage;

	mov	eax, DWORD PTR [ecx+8]
	mov	esi, DWORD PTR ___$ReturnUdt$[esp+4]
	mov	DWORD PTR $T223796[esp+8], 0
	imul	edx, 92					; 0000005cH
	lea	ecx, DWORD PTR [edx+eax+8]
	push	ecx
	mov	ecx, esi
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, esi
	pop	esi

; 780  : }

	pop	ecx
	ret	8
?GetNotificationStr@CvNotifications@@QAE?AVCvString@@H@Z ENDP ; CvNotifications::GetNotificationStr
_TEXT	ENDS
PUBLIC	?GetNotificationSummary@CvNotifications@@QAE?AVCvString@@H@Z ; CvNotifications::GetNotificationSummary
; Function compile flags: /Ogtpy
;	COMDAT ?GetNotificationSummary@CvNotifications@@QAE?AVCvString@@H@Z
_TEXT	SEGMENT
$T223814 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_iZeroBasedIndex$ = 12					; size = 4
?GetNotificationSummary@CvNotifications@@QAE?AVCvString@@H@Z PROC ; CvNotifications::GetNotificationSummary, COMDAT
; _this$ = ecx

; 783  : {

	push	ecx
	push	esi

; 784  : 	int iRealIndex = (m_iNotificationsBeginIndex + iZeroBasedIndex) % m_aNotifications.size();

	mov	esi, DWORD PTR [ecx+12]
	sub	esi, DWORD PTR [ecx+8]
	mov	eax, -1307163959			; b21642c9H
	imul	esi
	mov	eax, DWORD PTR [ecx+20]
	add	eax, DWORD PTR _iZeroBasedIndex$[esp+4]
	add	edx, esi
	sar	edx, 6
	mov	esi, edx
	shr	esi, 31					; 0000001fH
	add	esi, edx
	xor	edx, edx
	div	esi

; 785  : 	return m_aNotifications[iRealIndex].m_strSummary;

	mov	eax, DWORD PTR [ecx+8]
	mov	esi, DWORD PTR ___$ReturnUdt$[esp+4]
	mov	DWORD PTR $T223814[esp+8], 0
	imul	edx, 92					; 0000005cH
	lea	ecx, DWORD PTR [edx+eax+36]
	push	ecx
	mov	ecx, esi
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, esi
	pop	esi

; 786  : }

	pop	ecx
	ret	8
?GetNotificationSummary@CvNotifications@@QAE?AVCvString@@H@Z ENDP ; CvNotifications::GetNotificationSummary
_TEXT	ENDS
PUBLIC	?GetNotificationID@CvNotifications@@QAEHH@Z	; CvNotifications::GetNotificationID
; Function compile flags: /Ogtpy
;	COMDAT ?GetNotificationID@CvNotifications@@QAEHH@Z
_TEXT	SEGMENT
_iZeroBasedIndex$ = 8					; size = 4
?GetNotificationID@CvNotifications@@QAEHH@Z PROC	; CvNotifications::GetNotificationID, COMDAT
; _this$ = ecx

; 790  : {

	push	esi

; 791  : 	int iRealIndex = (m_iNotificationsBeginIndex + iZeroBasedIndex) % m_aNotifications.size();

	mov	esi, DWORD PTR [ecx+12]
	sub	esi, DWORD PTR [ecx+8]
	mov	eax, -1307163959			; b21642c9H
	imul	esi
	mov	eax, DWORD PTR [ecx+20]
	add	eax, DWORD PTR _iZeroBasedIndex$[esp]
	add	edx, esi
	sar	edx, 6
	mov	esi, edx
	shr	esi, 31					; 0000001fH
	add	esi, edx
	xor	edx, edx
	div	esi

; 792  : 	return m_aNotifications[iRealIndex].m_iLookupIndex;

	mov	eax, DWORD PTR [ecx+8]
	pop	esi
	imul	edx, 92					; 0000005cH
	mov	eax, DWORD PTR [edx+eax+84]

; 793  : }

	ret	4
?GetNotificationID@CvNotifications@@QAEHH@Z ENDP	; CvNotifications::GetNotificationID
_TEXT	ENDS
PUBLIC	?GetNotificationTurn@CvNotifications@@QAEHH@Z	; CvNotifications::GetNotificationTurn
; Function compile flags: /Ogtpy
;	COMDAT ?GetNotificationTurn@CvNotifications@@QAEHH@Z
_TEXT	SEGMENT
_iZeroBasedIndex$ = 8					; size = 4
?GetNotificationTurn@CvNotifications@@QAEHH@Z PROC	; CvNotifications::GetNotificationTurn, COMDAT
; _this$ = ecx

; 796  : {

	push	esi

; 797  : 	int iRealIndex = (m_iNotificationsBeginIndex + iZeroBasedIndex) % m_aNotifications.size();

	mov	esi, DWORD PTR [ecx+12]
	sub	esi, DWORD PTR [ecx+8]
	mov	eax, -1307163959			; b21642c9H
	imul	esi
	mov	eax, DWORD PTR [ecx+20]
	add	eax, DWORD PTR _iZeroBasedIndex$[esp]
	add	edx, esi
	sar	edx, 6
	mov	esi, edx
	shr	esi, 31					; 0000001fH
	add	esi, edx
	xor	edx, edx
	div	esi

; 798  : 	return m_aNotifications[iRealIndex].m_iTurn;

	mov	eax, DWORD PTR [ecx+8]
	pop	esi
	imul	edx, 92					; 0000005cH
	mov	eax, DWORD PTR [edx+eax+80]

; 799  : }

	ret	4
?GetNotificationTurn@CvNotifications@@QAEHH@Z ENDP	; CvNotifications::GetNotificationTurn
_TEXT	ENDS
PUBLIC	?IsNotificationDismissed@CvNotifications@@QAE_NH@Z ; CvNotifications::IsNotificationDismissed
; Function compile flags: /Ogtpy
;	COMDAT ?IsNotificationDismissed@CvNotifications@@QAE_NH@Z
_TEXT	SEGMENT
_iZeroBasedIndex$ = 8					; size = 4
?IsNotificationDismissed@CvNotifications@@QAE_NH@Z PROC	; CvNotifications::IsNotificationDismissed, COMDAT
; _this$ = ecx

; 802  : {

	push	esi

; 803  : 	int iRealIndex = (m_iNotificationsBeginIndex + iZeroBasedIndex) % m_aNotifications.size();

	mov	esi, DWORD PTR [ecx+12]
	sub	esi, DWORD PTR [ecx+8]
	mov	eax, -1307163959			; b21642c9H
	imul	esi
	mov	eax, DWORD PTR [ecx+20]
	add	eax, DWORD PTR _iZeroBasedIndex$[esp]
	add	edx, esi
	sar	edx, 6
	mov	esi, edx
	shr	esi, 31					; 0000001fH
	add	esi, edx
	xor	edx, edx
	div	esi

; 804  : 	return m_aNotifications[iRealIndex].m_bDismissed;

	mov	eax, DWORD PTR [ecx+8]
	pop	esi
	imul	edx, 92					; 0000005cH
	mov	al, BYTE PTR [edx+eax+89]

; 805  : }

	ret	4
?IsNotificationDismissed@CvNotifications@@QAE_NH@Z ENDP	; CvNotifications::IsNotificationDismissed
_TEXT	ENDS
PUBLIC	?IsNotificationTypeEndOfTurnExpired@CvNotifications@@QAE_NW4NotificationTypes@@H@Z ; CvNotifications::IsNotificationTypeEndOfTurnExpired
EXTRN	?getGameTurn@CvGame@@QAEHXZ:PROC		; CvGame::getGameTurn
; Function compile flags: /Ogtpy
;	COMDAT ?IsNotificationTypeEndOfTurnExpired@CvNotifications@@QAE_NW4NotificationTypes@@H@Z
_TEXT	SEGMENT
_eNotificationType$ = 8					; size = 4
_iForSpecificEntry$ = 12				; size = 4
?IsNotificationTypeEndOfTurnExpired@CvNotifications@@QAE_NW4NotificationTypes@@H@Z PROC ; CvNotifications::IsNotificationTypeEndOfTurnExpired, COMDAT
; _this$ = ecx

; 1836 : 	switch(eNotificationType)

	mov	eax, DWORD PTR _eNotificationType$[esp-4]
	cmp	eax, 507779013				; 1e4417c5H
	push	esi
	push	edi
	mov	edi, ecx
	jg	$LN12@IsNotifica
	je	SHORT $LN7@IsNotifica
	cmp	eax, -344621894				; eb757cbaH
	jg	$LN13@IsNotifica
	je	$LN4@IsNotifica
	cmp	eax, -1412184134			; abd3c7baH
	jg	SHORT $LN14@IsNotifica
	je	$LN4@IsNotifica
	cmp	eax, -1746998481			; 97deeb2fH
	jg	SHORT $LN15@IsNotifica
	je	SHORT $LN7@IsNotifica
	cmp	eax, -2068323322			; 84b7e406H
	je	SHORT $LN7@IsNotifica
	cmp	eax, -2028078871			; 871df8e9H
	je	$LN4@IsNotifica
	cmp	eax, -1774532806			; 963ac73aH
	jmp	$LN39@IsNotifica
$LN15@IsNotifica:
	cmp	eax, -1421067341			; ab4c3bb3H
	je	SHORT $LN7@IsNotifica
	cmp	eax, -1417116259			; ab88859dH
	jne	$LN1@IsNotifica
$LN6@IsNotifica:

; 1859 : 		break;
; 1860 : 
; 1861 : 	// These multiplayer notifications expire at the end of the next turn.
; 1862 : 	case NOTIFICATION_PLAYER_RECONNECTED:
; 1863 : 	case NOTIFICATION_PLAYER_DISCONNECTED:
; 1864 : 	case NOTIFICATION_HOST_MIGRATION:
; 1865 : 	case NOTIFICATION_PLAYER_CONNECTING:
; 1866 : 		if(iForSpecificEntry != -1 && m_aNotifications[iForSpecificEntry].m_iTurn == GC.getGame().getGameTurn()) //same turn as creation.

	mov	eax, DWORD PTR _iForSpecificEntry$[esp+4]
	cmp	eax, -1
	je	$LN3@IsNotifica
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	imul	eax, 92					; 0000005cH
	add	eax, DWORD PTR [edi+8]
	mov	esi, eax
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	cmp	DWORD PTR [esi+80], eax
	jne	$LN3@IsNotifica
$LN7@IsNotifica:
	pop	edi

; 1837 : 	{
; 1838 : 	case NOTIFICATION_POLICY:
; 1839 : 	case NOTIFICATION_FREE_POLICY:
; 1840 : 	case NOTIFICATION_TECH:
; 1841 : 	case NOTIFICATION_FREE_TECH:
; 1842 : 	case NOTIFICATION_PRODUCTION:
; 1843 : 	case NOTIFICATION_DIPLO_VOTE:
; 1844 : 	case NOTIFICATION_PLAYER_DEAL:
; 1845 : 	case NOTIFICATION_PLAYER_DEAL_RECEIVED:
; 1846 : 	case NOTIFICATION_FREE_GREAT_PERSON:
; 1847 : 	case NOTIFICATION_FOUND_PANTHEON:
; 1848 : 	case NOTIFICATION_FOUND_RELIGION:
; 1849 : 	case NOTIFICATION_ENHANCE_RELIGION:
; 1850 : 	case NOTIFICATION_SPY_STOLE_TECH:
; 1851 : 	case NOTIFICATION_MAYA_LONG_COUNT:
; 1852 : 	case NOTIFICATION_FAITH_GREAT_PERSON:
; 1853 : 	case NOTIFICATION_ADD_REFORMATION_BELIEF:
; 1854 : 	case NOTIFICATION_LEAGUE_CALL_FOR_PROPOSALS:
; 1855 : 	case NOTIFICATION_CHOOSE_ARCHAEOLOGY:
; 1856 : 	case NOTIFICATION_LEAGUE_CALL_FOR_VOTES:
; 1857 : 	case NOTIFICATION_CHOOSE_IDEOLOGY:
; 1858 : 		return false;

	xor	al, al
	pop	esi

; 1922 : }

	ret	8
$LN14@IsNotifica:

; 1836 : 	switch(eNotificationType)

	cmp	eax, -958154983				; c6e3b719H
	jg	SHORT $LN16@IsNotifica
	je	$LN4@IsNotifica
	cmp	eax, -1238786763			; b6299d35H
	je	SHORT $LN6@IsNotifica
	cmp	eax, -1168514695			; ba59e179H
	jmp	$LN39@IsNotifica
$LN16@IsNotifica:
	cmp	eax, -381621422				; e940eb52H
	je	$LN4@IsNotifica
	cmp	eax, -372818113				; e9c73f3fH
	jmp	$LN39@IsNotifica
$LN13@IsNotifica:
	cmp	eax, 84632199				; 050b6287H
	jg	SHORT $LN17@IsNotifica
	je	SHORT $LN7@IsNotifica
	cmp	eax, -90445226				; fa9bea56H
	jg	SHORT $LN18@IsNotifica
	je	$LN4@IsNotifica
	cmp	eax, -190211195				; f4a99b85H
	je	$LN4@IsNotifica
	cmp	eax, -164725077				; f62e7eabH
	je	$LN4@IsNotifica
	cmp	eax, -151010967				; f6ffc169H
	je	$LN4@IsNotifica
	pop	edi

; 1913 : 		}
; 1914 : 		break;
; 1915 : 
; 1916 : 	default:
; 1917 : 		return true;

	mov	al, 1
	pop	esi

; 1922 : }

	ret	8
$LN18@IsNotifica:

; 1836 : 	switch(eNotificationType)

	cmp	eax, -66586748				; fc07f784H
	je	$LN4@IsNotifica
	cmp	eax, -16309126				; ff07247aH
	je	$LN4@IsNotifica
	pop	edi

; 1913 : 		}
; 1914 : 		break;
; 1915 : 
; 1916 : 	default:
; 1917 : 		return true;

	mov	al, 1
	pop	esi

; 1922 : }

	ret	8
$LN17@IsNotifica:

; 1836 : 	switch(eNotificationType)

	cmp	eax, 216217508				; 0ce337a4H
	jg	SHORT $LN19@IsNotifica
	je	$LN4@IsNotifica
	cmp	eax, 88900711				; 054c8467H
	je	$LN7@IsNotifica
	cmp	eax, 145107262				; 08a6293eH
	je	$LN4@IsNotifica
	pop	edi

; 1913 : 		}
; 1914 : 		break;
; 1915 : 
; 1916 : 	default:
; 1917 : 		return true;

	mov	al, 1
	pop	esi

; 1922 : }

	ret	8
$LN19@IsNotifica:

; 1836 : 	switch(eNotificationType)

	cmp	eax, 294822899				; 1192a3f3H
	je	$LN7@IsNotifica
	cmp	eax, 356045736				; 1538d3a8H
	je	$LN6@IsNotifica
	pop	edi

; 1913 : 		}
; 1914 : 		break;
; 1915 : 
; 1916 : 	default:
; 1917 : 		return true;

	mov	al, 1
	pop	esi

; 1922 : }

	ret	8
$LN12@IsNotifica:

; 1836 : 	switch(eNotificationType)

	cmp	eax, 1482916943				; 5863844fH
	jg	$LN20@IsNotifica
	je	$LN4@IsNotifica
	cmp	eax, 1218150582				; 489b80b6H
	jg	SHORT $LN21@IsNotifica
	je	$LN7@IsNotifica
	cmp	eax, 818263651				; 30c5b663H
	jg	SHORT $LN22@IsNotifica
	je	$LN4@IsNotifica
	cmp	eax, 623640104				; 252bfe28H
	je	$LN7@IsNotifica
	cmp	eax, 707968744				; 2a32bee8H
	je	$LN4@IsNotifica
	cmp	eax, 755914060				; 2d0e554cH
	jmp	$LN39@IsNotifica
$LN22@IsNotifica:
	cmp	eax, 1028207137				; 3d493221H
	je	$LN4@IsNotifica
	cmp	eax, 1097980104				; 4171d8c8H
	je	$LN4@IsNotifica
	pop	edi

; 1913 : 		}
; 1914 : 		break;
; 1915 : 
; 1916 : 	default:
; 1917 : 		return true;

	mov	al, 1
	pop	esi

; 1922 : }

	ret	8
$LN21@IsNotifica:

; 1836 : 	switch(eNotificationType)

	cmp	eax, 1319111517				; 4ea00b5dH
	jg	SHORT $LN23@IsNotifica
	je	$LN4@IsNotifica
	cmp	eax, 1279997337				; 4c4b3599H
	je	$LN7@IsNotifica
	cmp	eax, 1317680804				; 4e8a36a4H
	je	SHORT $LN4@IsNotifica
	pop	edi

; 1913 : 		}
; 1914 : 		break;
; 1915 : 
; 1916 : 	default:
; 1917 : 		return true;

	mov	al, 1
	pop	esi

; 1922 : }

	ret	8
$LN23@IsNotifica:

; 1836 : 	switch(eNotificationType)

	cmp	eax, 1352206758				; 509909a6H
	je	SHORT $LN4@IsNotifica
	cmp	eax, 1376002242				; 520420c2H
	jmp	$LN39@IsNotifica
$LN20@IsNotifica:
	cmp	eax, 1628482682				; 6110ac7aH
	jg	SHORT $LN24@IsNotifica
	je	$LN6@IsNotifica
	cmp	eax, 1591330057				; 5ed9c509H
	jg	SHORT $LN25@IsNotifica
	je	SHORT $LN4@IsNotifica
	cmp	eax, 1516141982				; 5a5e7d9eH
	je	SHORT $LN4@IsNotifica
	cmp	eax, 1523558135				; 5acfa6f7H
	jmp	$LN39@IsNotifica
$LN25@IsNotifica:
	cmp	eax, 1594364879				; 5f0813cfH
	je	SHORT $LN4@IsNotifica
	cmp	eax, 1614113729				; 60356bc1H
	je	SHORT $LN4@IsNotifica
	pop	edi

; 1913 : 		}
; 1914 : 		break;
; 1915 : 
; 1916 : 	default:
; 1917 : 		return true;

	mov	al, 1
	pop	esi

; 1922 : }

	ret	8
$LN24@IsNotifica:

; 1836 : 	switch(eNotificationType)

	cmp	eax, 1989681641				; 769821e9H
	jg	SHORT $LN26@IsNotifica
	je	$LN7@IsNotifica
	cmp	eax, 1784381333				; 6a5b7f95H
	je	$LN7@IsNotifica
	cmp	eax, 1962985987				; 7500ca03H
	jne	SHORT $LN1@IsNotifica
$LN4@IsNotifica:

; 1867 : 		{
; 1868 : 			return false;
; 1869 : 		}
; 1870 : 		break;
; 1871 : 
; 1872 : 	// In multiplayer, these notifications expire once they've been broadcast for the player and
; 1873 : 	// it is at least the end of the next turn.
; 1874 : 	// These are notifications that can occur mid-turn and are important enough that they shouldn't
; 1875 : 	// expire until the player has seen them.
; 1876 : 	case NOTIFICATION_UNIT_PROMOTION:
; 1877 : 	case NOTIFICATION_CAPITAL_LOST_ACTIVE_PLAYER:
; 1878 : 	case NOTIFICATION_CAPITAL_LOST:
; 1879 : 	case NOTIFICATION_WAR_ACTIVE_PLAYER:
; 1880 : 	case NOTIFICATION_WAR:
; 1881 : 	case NOTIFICATION_PEACE_ACTIVE_PLAYER:
; 1882 : 	case NOTIFICATION_PEACE:
; 1883 : 	case NOTIFICATION_VICTORY:
; 1884 : 	case NOTIFICATION_UNIT_DIED:
; 1885 : 	case NOTIFICATION_CITY_LOST:
; 1886 : 	case NOTIFICATION_PLAYER_KILLED:
; 1887 : 	case NOTIFICATION_DIPLOMACY_DECLARATION:
; 1888 : 	case NOTIFICATION_OTHER_PLAYER_NEW_ERA:
; 1889 : 	case NOTIFICATION_MINOR_BUYOUT:
; 1890 : 	case NOTIFICATION_LIBERATED_MAJOR_CITY:
; 1891 : 	case NOTIFICATION_RESURRECTED_MAJOR_CIV:
; 1892 : 	case NOTIFICATION_TURN_MODE_SEQUENTIAL:
; 1893 : 	case NOTIFICATION_TURN_MODE_SIMULTANEOUS:
; 1894 : #ifndef AUI_WARNING_FIXES
; 1895 : 	case NOTIFICATION_PLAYER_KICKED:
; 1896 : #endif
; 1897 : 
; 1898 : 	//XP1
; 1899 : 	case NOTIFICATION_RELIGION_FOUNDED_ACTIVE_PLAYER:
; 1900 : 	case NOTIFICATION_RELIGION_FOUNDED:
; 1901 : 	case NOTIFICATION_PANTHEON_FOUNDED_ACTIVE_PLAYER:
; 1902 : 	case NOTIFICATION_PANTHEON_FOUNDED:
; 1903 : 
; 1904 : 	//XP2
; 1905 : 	case NOTIFICATION_TRADE_ROUTE_BROKEN:
; 1906 : 	case NOTIFICATION_REFORMATION_BELIEF_ADDED_ACTIVE_PLAYER:
; 1907 : 	case NOTIFICATION_REFORMATION_BELIEF_ADDED:
; 1908 : 		if(iForSpecificEntry != -1 && GC.getGame().isGameMultiPlayer() 
; 1909 : 			&& (m_aNotifications[iForSpecificEntry].m_bNeedsBroadcast //not broadcast yet.
; 1910 : 				|| m_aNotifications[iForSpecificEntry].m_iTurn == GC.getGame().getGameTurn())) //same turn as creation.

	mov	esi, DWORD PTR _iForSpecificEntry$[esp+4]
	cmp	esi, -1
	je	SHORT $LN3@IsNotifica
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?isGameMultiPlayer@CvGame@@QBE_NXZ	; CvGame::isGameMultiPlayer
	test	al, al
	je	SHORT $LN3@IsNotifica
	mov	eax, DWORD PTR [edi+8]
	imul	esi, 92					; 0000005cH
	add	esi, eax
	cmp	BYTE PTR [esi+88], 0
	jne	$LN7@IsNotifica
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	cmp	DWORD PTR [esi+80], eax

; 1911 : 		{
; 1912 : 			return false;

	je	$LN7@IsNotifica
$LN3@IsNotifica:
	pop	edi

; 1918 : 		break;
; 1919 : 	}
; 1920 : 
; 1921 : 	return true;

	mov	al, 1
	pop	esi

; 1922 : }

	ret	8
$LN26@IsNotifica:

; 1836 : 	switch(eNotificationType)

	cmp	eax, 1996573794				; 77014c62H
	je	$LN7@IsNotifica
	cmp	eax, 2128612861				; 7ee00dfdH
$LN39@IsNotifica:
	je	$LN7@IsNotifica
$LN1@IsNotifica:
	pop	edi

; 1913 : 		}
; 1914 : 		break;
; 1915 : 
; 1916 : 	default:
; 1917 : 		return true;

	mov	al, 1
	pop	esi

; 1922 : }

	ret	8
?IsNotificationTypeEndOfTurnExpired@CvNotifications@@QAE_NW4NotificationTypes@@H@Z ENDP ; CvNotifications::IsNotificationTypeEndOfTurnExpired
_TEXT	ENDS
PUBLIC	?IsNotificationEndOfTurnExpired@CvNotifications@@QAE_NH@Z ; CvNotifications::IsNotificationEndOfTurnExpired
; Function compile flags: /Ogtpy
;	COMDAT ?IsNotificationEndOfTurnExpired@CvNotifications@@QAE_NH@Z
_TEXT	SEGMENT
_iIndex$ = 8						; size = 4
?IsNotificationEndOfTurnExpired@CvNotifications@@QAE_NH@Z PROC ; CvNotifications::IsNotificationEndOfTurnExpired, COMDAT
; _this$ = ecx

; 1927 : 	return IsNotificationTypeEndOfTurnExpired( m_aNotifications[iIndex].m_eNotificationType, iIndex );

	mov	edx, DWORD PTR _iIndex$[esp-4]
	mov	eax, edx
	imul	eax, 92					; 0000005cH
	add	eax, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?IsNotificationTypeEndOfTurnExpired@CvNotifications@@QAE_NW4NotificationTypes@@H@Z ; CvNotifications::IsNotificationTypeEndOfTurnExpired

; 1928 : }

	ret	4
?IsNotificationEndOfTurnExpired@CvNotifications@@QAE_NH@Z ENDP ; CvNotifications::IsNotificationEndOfTurnExpired
_TEXT	ENDS
PUBLIC	?IsArrayFull@CvNotifications@@IAE_NXZ		; CvNotifications::IsArrayFull
; Function compile flags: /Ogtpy
;	COMDAT ?IsArrayFull@CvNotifications@@IAE_NXZ
_TEXT	SEGMENT
?IsArrayFull@CvNotifications@@IAE_NXZ PROC		; CvNotifications::IsArrayFull, COMDAT
; _this$ = ecx

; 1932 : {

	push	esi

; 1933 : 	int iAdjustedEndIndex = m_iNotificationsEndIndex + 1;
; 1934 : 	if(iAdjustedEndIndex >= (int)m_aNotifications.size())

	mov	esi, DWORD PTR [ecx+12]
	sub	esi, DWORD PTR [ecx+8]
	mov	eax, -1307163959			; b21642c9H
	imul	esi
	add	edx, esi
	sar	edx, 6
	push	edi
	mov	edi, DWORD PTR [ecx+24]
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	inc	edi
	add	eax, edx
	cmp	edi, eax
	jl	SHORT $LN3@IsArrayFul

; 1935 : 	{
; 1936 : 		iAdjustedEndIndex = 0;

	xor	edi, edi
$LN3@IsArrayFul:

; 1937 : 	}
; 1938 : 
; 1939 : 	if(iAdjustedEndIndex == m_iNotificationsBeginIndex)

	cmp	edi, DWORD PTR [ecx+20]
	pop	edi
	sete	al
	pop	esi

; 1940 : 	{
; 1941 : 		return true;
; 1942 : 	}
; 1943 : 	else
; 1944 : 	{
; 1945 : 		return false;
; 1946 : 	}
; 1947 : }

	ret	0
?IsArrayFull@CvNotifications@@IAE_NXZ ENDP		; CvNotifications::IsArrayFull
_TEXT	ENDS
PUBLIC	?IncrementBeginIndex@CvNotifications@@IAEXXZ	; CvNotifications::IncrementBeginIndex
; Function compile flags: /Ogtpy
;	COMDAT ?IncrementBeginIndex@CvNotifications@@IAEXXZ
_TEXT	SEGMENT
?IncrementBeginIndex@CvNotifications@@IAEXXZ PROC	; CvNotifications::IncrementBeginIndex, COMDAT
; _this$ = ecx

; 1963 : 	m_iNotificationsBeginIndex++;

	inc	DWORD PTR [ecx+20]
	push	esi

; 1964 : 	if(m_iNotificationsBeginIndex >= (int)m_aNotifications.size())

	mov	esi, DWORD PTR [ecx+12]
	sub	esi, DWORD PTR [ecx+8]
	mov	eax, -1307163959			; b21642c9H
	imul	esi
	add	edx, esi
	sar	edx, 6
	mov	eax, edx
	push	edi
	mov	edi, DWORD PTR [ecx+20]
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cmp	edi, eax
	pop	edi
	pop	esi
	jl	SHORT $LN1@IncrementB

; 1965 : 	{
; 1966 : 		m_iNotificationsBeginIndex = 0;

	mov	DWORD PTR [ecx+20], 0
$LN1@IncrementB:

; 1967 : 	}
; 1968 : }

	ret	0
?IncrementBeginIndex@CvNotifications@@IAEXXZ ENDP	; CvNotifications::IncrementBeginIndex
_TEXT	ENDS
PUBLIC	?IncrementEndIndex@CvNotifications@@IAEXXZ	; CvNotifications::IncrementEndIndex
; Function compile flags: /Ogtpy
;	COMDAT ?IncrementEndIndex@CvNotifications@@IAEXXZ
_TEXT	SEGMENT
?IncrementEndIndex@CvNotifications@@IAEXXZ PROC		; CvNotifications::IncrementEndIndex, COMDAT
; _this$ = ecx

; 1972 : 	m_iNotificationsEndIndex++;

	inc	DWORD PTR [ecx+24]
	push	esi

; 1973 : 	if(m_iNotificationsEndIndex >= (int)m_aNotifications.size())

	mov	esi, DWORD PTR [ecx+12]
	sub	esi, DWORD PTR [ecx+8]
	mov	eax, -1307163959			; b21642c9H
	imul	esi
	add	edx, esi
	sar	edx, 6
	mov	eax, edx
	push	edi
	mov	edi, DWORD PTR [ecx+24]
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cmp	edi, eax
	pop	edi
	pop	esi
	jl	SHORT $LN1@IncrementE

; 1974 : 	{
; 1975 : 		m_iNotificationsEndIndex = 0;

	mov	DWORD PTR [ecx+24], 0
$LN1@IncrementE:

; 1976 : 	}
; 1977 : }

	ret	0
?IncrementEndIndex@CvNotifications@@IAEXXZ ENDP		; CvNotifications::IncrementEndIndex
_TEXT	ENDS
PUBLIC	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ		; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
EXTRN	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ:PROC ; CvUnit::getDestructionNotification
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
;	COMDAT ??1?$FObjectHandle@VCvUnit@@@@QAE@XZ
_TEXT	SEGMENT
??1?$FObjectHandle@VCvUnit@@@@QAE@XZ PROC		; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>, COMDAT
; _this$ = ecx

; 147  : 		if(m_target) 

	mov	ecx, DWORD PTR [ecx]
	test	ecx, ecx
	je	SHORT $LN4@FObjectHan

; 148  : 		{
; 149  : 			m_target->getDestructionNotification().removeTarget(*this);

	jmp	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN4@FObjectHan:

; 150  : 		}
; 151  : 	}

	ret	0
??1?$FObjectHandle@VCvUnit@@@@QAE@XZ ENDP		; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
_TEXT	ENDS
PUBLIC	??0?$FObjectHandle@VCvUnit@@@@QAE@PAVCvUnit@@@Z	; FObjectHandle<CvUnit>::FObjectHandle<CvUnit>
; Function compile flags: /Ogtpy
;	COMDAT ??0?$FObjectHandle@VCvUnit@@@@QAE@PAVCvUnit@@@Z
_TEXT	SEGMENT
_target$ = 8						; size = 4
??0?$FObjectHandle@VCvUnit@@@@QAE@PAVCvUnit@@@Z PROC	; FObjectHandle<CvUnit>::FObjectHandle<CvUnit>, COMDAT
; _this$ = ecx

; 156  : 	{

	push	esi
	mov	esi, ecx
	mov	ecx, DWORD PTR _target$[esp]
	mov	DWORD PTR [esi], ecx
	mov	BYTE PTR [esi+4], 0

; 157  : 		OBJECT_HANDLE_STACK;
; 158  : 		if(m_target)

	test	ecx, ecx
	je	SHORT $LN6@FObjectHan@2

; 159  : 		{
; 160  : 			m_target->getDestructionNotification().addTarget(*this);

	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN6@FObjectHan@2:

; 161  : 		}
; 162  : 	}

	mov	eax, esi
	pop	esi
	ret	4
??0?$FObjectHandle@VCvUnit@@@@QAE@PAVCvUnit@@@Z ENDP	; FObjectHandle<CvUnit>::FObjectHandle<CvUnit>
_TEXT	ENDS
PUBLIC	??1?$auto_ptr@VICvPlot1@@@std@@QAE@XZ		; std::auto_ptr<ICvPlot1>::~auto_ptr<ICvPlot1>
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\memory
;	COMDAT ??1?$auto_ptr@VICvPlot1@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$auto_ptr@VICvPlot1@@@std@@QAE@XZ PROC		; std::auto_ptr<ICvPlot1>::~auto_ptr<ICvPlot1>, COMDAT
; _this$ = ecx

; 721  : 		delete _Myptr;

	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	je	SHORT $LN3@auto_ptr
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	push	eax
	call	edx
$LN3@auto_ptr:

; 722  : 		}

	ret	0
??1?$auto_ptr@VICvPlot1@@@std@@QAE@XZ ENDP		; std::auto_ptr<ICvPlot1>::~auto_ptr<ICvPlot1>
_TEXT	ENDS
PUBLIC	??1?$auto_ptr@VICvUnit1@@@std@@QAE@XZ		; std::auto_ptr<ICvUnit1>::~auto_ptr<ICvUnit1>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$auto_ptr@VICvUnit1@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$auto_ptr@VICvUnit1@@@std@@QAE@XZ PROC		; std::auto_ptr<ICvUnit1>::~auto_ptr<ICvUnit1>, COMDAT
; _this$ = ecx

; 721  : 		delete _Myptr;

	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	je	SHORT $LN3@auto_ptr@2
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	push	eax
	call	edx
$LN3@auto_ptr@2:

; 722  : 		}

	ret	0
??1?$auto_ptr@VICvUnit1@@@std@@QAE@XZ ENDP		; std::auto_ptr<ICvUnit1>::~auto_ptr<ICvUnit1>
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAE@XZ ; std::_Vector_val<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::~_Vector_val<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Vector_val@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::~_Vector_val<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >, COMDAT
; _this$ = ecx
	ret	0
??1?$_Vector_val@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::~_Vector_val<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::_Vector_val<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~_Vector_val<enum BeliefTypes,std::allocator<enum BeliefTypes> >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Vector_val@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~_Vector_val<enum BeliefTypes,std::allocator<enum BeliefTypes> >, COMDAT
; _this$ = ecx
	ret	0
??1?$_Vector_val@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~_Vector_val<enum BeliefTypes,std::allocator<enum BeliefTypes> >
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAE@V?$allocator@UNotification@CvNotifications@@@1@@Z ; std::_Vector_val<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::_Vector_val<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\vector
;	COMDAT ??0?$_Vector_val@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAE@V?$allocator@UNotification@CvNotifications@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAE@V?$allocator@UNotification@CvNotifications@@@1@@Z PROC ; std::_Vector_val<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::_Vector_val<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >, COMDAT
; _this$ = ecx

; 425  : 		{	// construct allocator from _Al

	mov	eax, ecx

; 426  : 		}

	ret	4
??0?$_Vector_val@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAE@V?$allocator@UNotification@CvNotifications@@@1@@Z ENDP ; std::_Vector_val<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::_Vector_val<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >
_TEXT	ENDS
PUBLIC	?max_size@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QBEIXZ ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::max_size
; Function compile flags: /Ogtpy
;	COMDAT ?max_size@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QBEIXZ PROC ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::max_size, COMDAT
; _this$ = ecx

; 731  : 		return (this->_Alval.max_size());

	mov	eax, 46684427				; 02c8590bH

; 732  : 		}

	ret	0
?max_size@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QBEIXZ ENDP ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@UNotification@CvNotifications@@@std@@QAEPAUNotification@CvNotifications@@I@Z ; std::allocator<CvNotifications::Notification>::allocate
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@UNotification@CvNotifications@@@std@@QAEPAUNotification@CvNotifications@@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@UNotification@CvNotifications@@@std@@QAEPAUNotification@CvNotifications@@I@Z PROC ; std::allocator<CvNotifications::Notification>::allocate, COMDAT
; _this$ = ecx

; 145  : 		return (_Allocate(_Count, (pointer)0));

	mov	eax, DWORD PTR __Count$[esp-4]
	push	0
	push	eax
	call	??$_Allocate@UNotification@CvNotifications@@@std@@YAPAUNotification@CvNotifications@@IPAU12@@Z ; std::_Allocate<CvNotifications::Notification>
	add	esp, 8

; 146  : 		}

	ret	4
?allocate@?$allocator@UNotification@CvNotifications@@@std@@QAEPAUNotification@CvNotifications@@I@Z ENDP ; std::allocator<CvNotifications::Notification>::allocate
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAE@PAUNotification@CvNotifications@@@Z ; std::_Vector_iterator<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::_Vector_iterator<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\vector
;	COMDAT ??0?$_Vector_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAE@PAUNotification@CvNotifications@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAE@PAUNotification@CvNotifications@@@Z PROC ; std::_Vector_iterator<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::_Vector_iterator<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >, COMDAT
; _this$ = ecx

; 333  : 		{	// construct with pointer _Ptr

	mov	eax, ecx
	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 334  : 		}

	ret	4
??0?$_Vector_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAE@PAUNotification@CvNotifications@@@Z ENDP ; std::_Vector_iterator<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::_Vector_iterator<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::operator!=
; Function compile flags: /Ogtpy
;	COMDAT ??9?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::operator!=, COMDAT
; _this$ = ecx

; 216  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	setne	cl
	mov	al, cl

; 217  : 		}

	ret	4
??9?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::operator!=
_TEXT	ENDS
PUBLIC	??0Notification@CvNotifications@@QAE@ABU01@@Z	; CvNotifications::Notification::Notification
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Notification@CvNotifications@@QAE@ABU01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Notification@CvNotifications@@QAE@ABU01@@Z$0
__ehfuncinfo$??0Notification@CvNotifications@@QAE@ABU01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0Notification@CvNotifications@@QAE@ABU01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??0Notification@CvNotifications@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0Notification@CvNotifications@@QAE@ABU01@@Z PROC	; CvNotifications::Notification::Notification, COMDAT
; _this$ = ecx
	push	-1
	push	__ehhandler$??0Notification@CvNotifications@@QAE@ABU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi
	push	edi
	mov	edi, DWORD PTR ___that$[esp+20]
	mov	eax, DWORD PTR [edi]
	mov	esi, ecx
	mov	DWORD PTR [esi], eax
	mov	ecx, DWORD PTR [edi+4]
	lea	edx, DWORD PTR [edi+8]
	mov	DWORD PTR [esi+4], ecx
	lea	ecx, DWORD PTR [esi+8]
	push	edx
	mov	DWORD PTR _this$[esp+28], esi
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	lea	eax, DWORD PTR [edi+36]
	push	eax
	lea	ecx, DWORD PTR [esi+36]
	mov	DWORD PTR __$EHRec$[esp+36], 0
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR [edi+64]
	mov	DWORD PTR [esi+64], ecx
	mov	edx, DWORD PTR [edi+68]
	mov	DWORD PTR [esi+68], edx
	mov	eax, DWORD PTR [edi+72]
	mov	DWORD PTR [esi+72], eax
	mov	ecx, DWORD PTR [edi+76]
	mov	DWORD PTR [esi+76], ecx
	mov	edx, DWORD PTR [edi+80]
	mov	DWORD PTR [esi+80], edx
	mov	eax, DWORD PTR [edi+84]
	mov	DWORD PTR [esi+84], eax
	mov	cl, BYTE PTR [edi+88]
	mov	BYTE PTR [esi+88], cl
	mov	dl, BYTE PTR [edi+89]
	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	mov	BYTE PTR [esi+89], dl
	mov	al, BYTE PTR [edi+90]
	mov	BYTE PTR [esi+90], al
	pop	edi
	mov	eax, esi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Notification@CvNotifications@@QAE@ABU01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$??0Notification@CvNotifications@@QAE@ABU01@@Z:
	mov	eax, OFFSET __ehfuncinfo$??0Notification@CvNotifications@@QAE@ABU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0Notification@CvNotifications@@QAE@ABU01@@Z ENDP	; CvNotifications::Notification::Notification
PUBLIC	??Y?$_Vector_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::operator+=
; Function compile flags: /Ogtpy
;	COMDAT ??Y?$_Vector_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_iterator<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::operator+=, COMDAT
; _this$ = ecx

; 374  : 		{	// increment by integer

	mov	eax, ecx

; 375  : 		(*(_Mybase *)this) += _Off;

	mov	ecx, DWORD PTR __Off$[esp-4]
	imul	ecx, 92					; 0000005cH
	add	DWORD PTR [eax], ecx

; 376  : 		return (*this);
; 377  : 		}

	ret	4
??Y?$_Vector_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_iterator<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::operator+=
_TEXT	ENDS
PUBLIC	??$?BVICvPlot1@@@?$auto_ptr@VICvPlot1@@@std@@QAE?AU?$auto_ptr_ref@VICvPlot1@@@1@XZ ; std::auto_ptr<ICvPlot1>::operator<ICvPlot1> std::auto_ptr_ref<ICvPlot1>
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\memory
;	COMDAT ??$?BVICvPlot1@@@?$auto_ptr@VICvPlot1@@@std@@QAE?AU?$auto_ptr_ref@VICvPlot1@@@1@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
??$?BVICvPlot1@@@?$auto_ptr@VICvPlot1@@@std@@QAE?AU?$auto_ptr_ref@VICvPlot1@@@1@XZ PROC ; std::auto_ptr<ICvPlot1>::operator<ICvPlot1> std::auto_ptr_ref<ICvPlot1>, COMDAT
; _this$ = ecx

; 684  : 		{	// convert to compatible auto_ptr_ref
; 685  : 		_Other *_Cvtptr = _Myptr;	// test implicit conversion
; 686  : 		auto_ptr_ref<_Other> _Ans(_Cvtptr);

	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], edx

; 687  : 		_Myptr = 0;	// pass ownership to auto_ptr_ref

	mov	DWORD PTR [ecx], 0

; 688  : 		return (_Ans);
; 689  : 		}

	ret	4
??$?BVICvPlot1@@@?$auto_ptr@VICvPlot1@@@std@@QAE?AU?$auto_ptr_ref@VICvPlot1@@@1@XZ ENDP ; std::auto_ptr<ICvPlot1>::operator<ICvPlot1> std::auto_ptr_ref<ICvPlot1>
_TEXT	ENDS
PUBLIC	??$?BVICvUnit1@@@?$auto_ptr@VICvUnit1@@@std@@QAE?AU?$auto_ptr_ref@VICvUnit1@@@1@XZ ; std::auto_ptr<ICvUnit1>::operator<ICvUnit1> std::auto_ptr_ref<ICvUnit1>
; Function compile flags: /Ogtpy
;	COMDAT ??$?BVICvUnit1@@@?$auto_ptr@VICvUnit1@@@std@@QAE?AU?$auto_ptr_ref@VICvUnit1@@@1@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
??$?BVICvUnit1@@@?$auto_ptr@VICvUnit1@@@std@@QAE?AU?$auto_ptr_ref@VICvUnit1@@@1@XZ PROC ; std::auto_ptr<ICvUnit1>::operator<ICvUnit1> std::auto_ptr_ref<ICvUnit1>, COMDAT
; _this$ = ecx

; 684  : 		{	// convert to compatible auto_ptr_ref
; 685  : 		_Other *_Cvtptr = _Myptr;	// test implicit conversion
; 686  : 		auto_ptr_ref<_Other> _Ans(_Cvtptr);

	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], edx

; 687  : 		_Myptr = 0;	// pass ownership to auto_ptr_ref

	mov	DWORD PTR [ecx], 0

; 688  : 		return (_Ans);
; 689  : 		}

	ret	4
??$?BVICvUnit1@@@?$auto_ptr@VICvUnit1@@@std@@QAE?AU?$auto_ptr_ref@VICvUnit1@@@1@XZ ENDP ; std::auto_ptr<ICvUnit1>::operator<ICvUnit1> std::auto_ptr_ref<ICvUnit1>
_TEXT	ENDS
PUBLIC	??$_Copy_opt@PAUNotification@CvNotifications@@PAU12@Urandom_access_iterator_tag@std@@@std@@YAPAUNotification@CvNotifications@@PAU12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<CvNotifications::Notification *,CvNotifications::Notification *,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\xutility
;	COMDAT ??$_Copy_opt@PAUNotification@CvNotifications@@PAU12@Urandom_access_iterator_tag@std@@@std@@YAPAUNotification@CvNotifications@@PAU12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Copy_opt@PAUNotification@CvNotifications@@PAU12@Urandom_access_iterator_tag@std@@@std@@YAPAUNotification@CvNotifications@@PAU12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_opt<CvNotifications::Notification *,CvNotifications::Notification *,std::random_access_iterator_tag>, COMDAT

; 2469 : 	{	// copy [_First, _Last) to [_Dest, ...), arbitrary iterators

	push	ebx

; 2470 : 	_DEBUG_RANGE(_First, _Last);
; 2471 : 	for (; _First != _Last; ++_Dest, ++_First)

	mov	ebx, DWORD PTR __Last$[esp]
	push	esi
	mov	esi, DWORD PTR __First$[esp+4]
	cmp	esi, ebx
	je	SHORT $LN14@Copy_opt
	push	edi
	mov	edi, DWORD PTR __Dest$[esp+8]
$LL3@Copy_opt:

; 2472 : 		*_Dest = *_First;

	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [edi], eax
	mov	ecx, DWORD PTR [esi+4]
	lea	edx, DWORD PTR [esi+8]
	mov	DWORD PTR [edi+4], ecx
	push	edx
	lea	ecx, DWORD PTR [edi+8]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	eax, DWORD PTR [esi+36]
	push	eax
	lea	ecx, DWORD PTR [edi+36]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	ecx, DWORD PTR [esi+64]
	mov	DWORD PTR [edi+64], ecx
	mov	edx, DWORD PTR [esi+68]
	mov	DWORD PTR [edi+68], edx
	mov	eax, DWORD PTR [esi+72]
	mov	DWORD PTR [edi+72], eax
	mov	ecx, DWORD PTR [esi+76]
	mov	DWORD PTR [edi+76], ecx
	mov	edx, DWORD PTR [esi+80]
	mov	DWORD PTR [edi+80], edx
	mov	eax, DWORD PTR [esi+84]
	mov	DWORD PTR [edi+84], eax
	mov	cl, BYTE PTR [esi+88]
	mov	BYTE PTR [edi+88], cl
	mov	dl, BYTE PTR [esi+89]
	mov	BYTE PTR [edi+89], dl
	mov	al, BYTE PTR [esi+90]
	mov	BYTE PTR [edi+90], al
	add	esi, 92					; 0000005cH
	add	edi, 92					; 0000005cH
	cmp	esi, ebx
	jne	SHORT $LL3@Copy_opt

; 2473 : 	return (_Dest);

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx

; 2474 : 	}

	ret	0
$LN14@Copy_opt:

; 2473 : 	return (_Dest);

	mov	eax, DWORD PTR __Dest$[esp+4]
	pop	esi
	pop	ebx

; 2474 : 	}

	ret	0
??$_Copy_opt@PAUNotification@CvNotifications@@PAU12@Urandom_access_iterator_tag@std@@@std@@YAPAUNotification@CvNotifications@@PAU12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_opt<CvNotifications::Notification *,CvNotifications::Notification *,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	??$_Fill@PAUNotification@CvNotifications@@U12@@std@@YAXPAUNotification@CvNotifications@@0ABU12@@Z ; std::_Fill<CvNotifications::Notification *,CvNotifications::Notification>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Fill@PAUNotification@CvNotifications@@U12@@std@@YAXPAUNotification@CvNotifications@@0ABU12@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$_Fill@PAUNotification@CvNotifications@@U12@@std@@YAXPAUNotification@CvNotifications@@0ABU12@@Z PROC ; std::_Fill<CvNotifications::Notification *,CvNotifications::Notification>, COMDAT

; 3156 : 	{	// copy _Val through [_First, _Last)

	push	esi

; 3157 : 	_DEBUG_RANGE(_First, _Last);
; 3158 : 	for (; _First != _Last; ++_First)

	mov	esi, DWORD PTR __First$[esp]
	cmp	esi, DWORD PTR __Last$[esp]
	je	SHORT $LN1@Fill
	push	ebx
	push	ebp
	push	edi
	mov	edi, DWORD PTR __Val$[esp+12]
	lea	ebx, DWORD PTR [edi+8]
	lea	ebp, DWORD PTR [edi+36]
$LL3@Fill:

; 3159 : 		*_First = _Val;

	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR [esi], eax
	mov	ecx, DWORD PTR [edi+4]
	mov	DWORD PTR [esi+4], ecx
	push	ebx
	lea	ecx, DWORD PTR [esi+8]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	push	ebp
	lea	ecx, DWORD PTR [esi+36]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	edx, DWORD PTR [edi+64]
	mov	DWORD PTR [esi+64], edx
	mov	eax, DWORD PTR [edi+68]
	mov	DWORD PTR [esi+68], eax
	mov	ecx, DWORD PTR [edi+72]
	mov	DWORD PTR [esi+72], ecx
	mov	edx, DWORD PTR [edi+76]
	mov	DWORD PTR [esi+76], edx
	mov	eax, DWORD PTR [edi+80]
	mov	DWORD PTR [esi+80], eax
	mov	ecx, DWORD PTR [edi+84]
	mov	DWORD PTR [esi+84], ecx
	mov	dl, BYTE PTR [edi+88]
	mov	BYTE PTR [esi+88], dl
	mov	al, BYTE PTR [edi+89]
	mov	BYTE PTR [esi+89], al
	mov	cl, BYTE PTR [edi+90]
	mov	BYTE PTR [esi+90], cl
	add	esi, 92					; 0000005cH
	cmp	esi, DWORD PTR __Last$[esp+12]
	jne	SHORT $LL3@Fill
	pop	edi
	pop	ebp
	pop	ebx
$LN1@Fill:
	pop	esi

; 3160 : 	}

	ret	0
??$_Fill@PAUNotification@CvNotifications@@U12@@std@@YAXPAUNotification@CvNotifications@@0ABU12@@Z ENDP ; std::_Fill<CvNotifications::Notification *,CvNotifications::Notification>
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@W4BeliefTypes@@@std@@QAEXPAW4BeliefTypes@@@Z ; std::allocator<enum BeliefTypes>::destroy
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\xmemory
;	COMDAT ?destroy@?$allocator@W4BeliefTypes@@@std@@QAEXPAW4BeliefTypes@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@W4BeliefTypes@@@std@@QAEXPAW4BeliefTypes@@@Z PROC ; std::allocator<enum BeliefTypes>::destroy, COMDAT
; _this$ = ecx

; 160  : 		_Destroy(_Ptr);
; 161  : 		}

	ret	4
?destroy@?$allocator@W4BeliefTypes@@@std@@QAEXPAW4BeliefTypes@@@Z ENDP ; std::allocator<enum BeliefTypes>::destroy
_TEXT	ENDS
PUBLIC	??$_Copy_backward_opt@PAUNotification@CvNotifications@@PAU12@Urandom_access_iterator_tag@std@@@std@@YAPAUNotification@CvNotifications@@PAU12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<CvNotifications::Notification *,CvNotifications::Notification *,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\xutility
;	COMDAT ??$_Copy_backward_opt@PAUNotification@CvNotifications@@PAU12@Urandom_access_iterator_tag@std@@@std@@YAPAUNotification@CvNotifications@@PAU12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Copy_backward_opt@PAUNotification@CvNotifications@@PAU12@Urandom_access_iterator_tag@std@@@std@@YAPAUNotification@CvNotifications@@PAU12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_backward_opt<CvNotifications::Notification *,CvNotifications::Notification *,std::random_access_iterator_tag>, COMDAT

; 2673 : 	{	// copy [_First, _Last) backwards to [..., _Dest), arbitrary iterators

	push	ebx

; 2674 : 	_DEBUG_RANGE(_First, _Last);
; 2675 : 	while (_First != _Last)

	mov	ebx, DWORD PTR __First$[esp]
	push	esi
	mov	esi, DWORD PTR __Last$[esp+4]
	cmp	ebx, esi
	je	SHORT $LN13@Copy_backw
	push	edi
	mov	edi, DWORD PTR __Dest$[esp+8]
$LL2@Copy_backw:

; 2676 : 		*--_Dest = *--_Last;

	mov	eax, DWORD PTR [esi-92]
	sub	esi, 92					; 0000005cH
	sub	edi, 92					; 0000005cH
	mov	DWORD PTR [edi], eax
	mov	ecx, DWORD PTR [esi+4]
	lea	edx, DWORD PTR [esi+8]
	mov	DWORD PTR [edi+4], ecx
	push	edx
	lea	ecx, DWORD PTR [edi+8]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	eax, DWORD PTR [esi+36]
	push	eax
	lea	ecx, DWORD PTR [edi+36]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	ecx, DWORD PTR [esi+64]
	mov	DWORD PTR [edi+64], ecx
	mov	edx, DWORD PTR [esi+68]
	mov	DWORD PTR [edi+68], edx
	mov	eax, DWORD PTR [esi+72]
	mov	DWORD PTR [edi+72], eax
	mov	ecx, DWORD PTR [esi+76]
	mov	DWORD PTR [edi+76], ecx
	mov	edx, DWORD PTR [esi+80]
	mov	DWORD PTR [edi+80], edx
	mov	eax, DWORD PTR [esi+84]
	mov	DWORD PTR [edi+84], eax
	mov	cl, BYTE PTR [esi+88]
	mov	BYTE PTR [edi+88], cl
	mov	dl, BYTE PTR [esi+89]
	mov	BYTE PTR [edi+89], dl
	mov	al, BYTE PTR [esi+90]
	mov	BYTE PTR [edi+90], al
	cmp	esi, ebx
	jne	SHORT $LL2@Copy_backw

; 2677 : 	return (_Dest);

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx

; 2678 : 	}

	ret	0
$LN13@Copy_backw:

; 2677 : 	return (_Dest);

	mov	eax, DWORD PTR __Dest$[esp+4]
	pop	esi
	pop	ebx

; 2678 : 	}

	ret	0
??$_Copy_backward_opt@PAUNotification@CvNotifications@@PAU12@Urandom_access_iterator_tag@std@@@std@@YAPAUNotification@CvNotifications@@PAU12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_backward_opt<CvNotifications::Notification *,CvNotifications::Notification *,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	??$_Construct@UNotification@CvNotifications@@U12@@std@@YAXPAUNotification@CvNotifications@@ABU12@@Z ; std::_Construct<CvNotifications::Notification,CvNotifications::Notification>
;	COMDAT xdata$x
; File s:\msvs2008\vc\include\new
xdata$x	SEGMENT
__unwindtable$??$_Construct@UNotification@CvNotifications@@U12@@std@@YAXPAUNotification@CvNotifications@@ABU12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Construct@UNotification@CvNotifications@@U12@@std@@YAXPAUNotification@CvNotifications@@ABU12@@Z$0
__ehfuncinfo$??$_Construct@UNotification@CvNotifications@@U12@@std@@YAXPAUNotification@CvNotifications@@ABU12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Construct@UNotification@CvNotifications@@U12@@std@@YAXPAUNotification@CvNotifications@@ABU12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Construct@UNotification@CvNotifications@@U12@@std@@YAXPAUNotification@CvNotifications@@ABU12@@Z
_TEXT	SEGMENT
$T224124 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Vptr$ = 8						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@UNotification@CvNotifications@@U12@@std@@YAXPAUNotification@CvNotifications@@ABU12@@Z PROC ; std::_Construct<CvNotifications::Notification,CvNotifications::Notification>, COMDAT

; 50   : 	{	// construct object at _Ptr with value _Val

	push	-1
	push	__ehhandler$??$_Construct@UNotification@CvNotifications@@U12@@std@@YAXPAUNotification@CvNotifications@@ABU12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx

; 51   : 	void _FARQ *_Vptr = _Ptr;

	mov	ecx, DWORD PTR __Ptr$[esp+12]
	mov	DWORD PTR __Vptr$[esp+12], ecx

; 52   : 	::new (_Vptr) _T1(_Val);

	mov	DWORD PTR $T224124[esp+16], ecx
	mov	DWORD PTR __$EHRec$[esp+24], 0
	test	ecx, ecx
	je	SHORT $LN3@Construct
	mov	eax, DWORD PTR __Val$[esp+12]
	push	eax
	call	??0Notification@CvNotifications@@QAE@ABU01@@Z
$LN3@Construct:

; 53   : 	}

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Construct@UNotification@CvNotifications@@U12@@std@@YAXPAUNotification@CvNotifications@@ABU12@@Z$0:
	mov	eax, DWORD PTR __Vptr$[ebp-4]
	push	eax
	mov	ecx, DWORD PTR $T224124[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Construct@UNotification@CvNotifications@@U12@@std@@YAXPAUNotification@CvNotifications@@ABU12@@Z:
	mov	eax, OFFSET __ehfuncinfo$??$_Construct@UNotification@CvNotifications@@U12@@std@@YAXPAUNotification@CvNotifications@@ABU12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Construct@UNotification@CvNotifications@@U12@@std@@YAXPAUNotification@CvNotifications@@ABU12@@Z ENDP ; std::_Construct<CvNotifications::Notification,CvNotifications::Notification>
PUBLIC	??_GNotification@CvNotifications@@QAEPAXI@Z	; CvNotifications::Notification::`scalar deleting destructor'
; Function compile flags: /Ogtpy
;	COMDAT ??_GNotification@CvNotifications@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GNotification@CvNotifications@@QAEPAXI@Z PROC	; CvNotifications::Notification::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	call	??1Notification@CvNotifications@@QAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN4@scalar@4
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@scalar@4:
	mov	eax, esi
	pop	esi
	ret	4
??_GNotification@CvNotifications@@QAEPAXI@Z ENDP	; CvNotifications::Notification::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?Hash@FStringA@@SAIPBD@Z			; FStringA::Hash
EXTRN	?Calc@FCRC@@QBEKPBXHK@Z:PROC			; FCRC::Calc
EXTRN	?g_CRC32@@3VFCRC@@A:BYTE			; g_CRC32
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\fireplace\include\fireworks\fstringa.inl
;	COMDAT ?Hash@FStringA@@SAIPBD@Z
_TEXT	SEGMENT
_pszStr$ = 8						; size = 4
?Hash@FStringA@@SAIPBD@Z PROC				; FStringA::Hash, COMDAT

; 998  : {

	push	esi

; 999  : 	FAssert(pszStr != NULL);
; 1000 : 	return ( g_CRC32.Calc( ( void* )pszStr, SafeStrlen(pszStr) * sizeof ( char ) ) );

	mov	esi, DWORD PTR _pszStr$[esp]
	test	esi, esi
	je	SHORT $LN5@Hash
	mov	eax, esi
	lea	edx, DWORD PTR [eax+1]
	npad	2
$LL7@Hash:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL7@Hash
	push	-1
	sub	eax, edx
	push	eax
	push	esi
	mov	ecx, OFFSET ?g_CRC32@@3VFCRC@@A		; g_CRC32
	call	?Calc@FCRC@@QBEKPBXHK@Z			; FCRC::Calc
	pop	esi

; 1001 : }

	ret	0

; 999  : 	FAssert(pszStr != NULL);
; 1000 : 	return ( g_CRC32.Calc( ( void* )pszStr, SafeStrlen(pszStr) * sizeof ( char ) ) );

$LN5@Hash:
	push	-1
	xor	eax, eax
	push	eax
	push	esi
	mov	ecx, OFFSET ?g_CRC32@@3VFCRC@@A		; g_CRC32
	call	?Calc@FCRC@@QBEKPBXHK@Z			; FCRC::Calc
	pop	esi

; 1001 : }

	ret	0
?Hash@FStringA@@SAIPBD@Z ENDP				; FStringA::Hash
_TEXT	ENDS
EXTRN	?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B:DWORD ; CvPreGame::sr_TeamTypes
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvpregame.h
;	COMDAT ?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z PROC ; CvPreGame::teamType, COMDAT
; _p$ = eax

; 299  : 	if(p >= 0 && p < MAX_PLAYERS)

	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN1@teamType

; 300  : 		return sr_TeamTypes[p];

	mov	ecx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax*4]

; 302  : }

	ret	0
$LN1@teamType:

; 301  : 	return NO_TEAM;

	or	eax, -1

; 302  : }

	ret	0
?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ENDP ; CvPreGame::teamType
_TEXT	ENDS
PUBLIC	?GetID@CvCity@@QBEHXZ				; CvCity::GetID
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvcity.h
;	COMDAT ?GetID@CvCity@@QBEHXZ
_TEXT	SEGMENT
?GetID@CvCity@@QBEHXZ PROC				; CvCity::GetID, COMDAT
; _this$ = ecx

; 331  : 		return m_iID;

	mov	eax, DWORD PTR [ecx+120]

; 332  : 	}

	ret	0
?GetID@CvCity@@QBEHXZ ENDP				; CvCity::GetID
_TEXT	ENDS
PUBLIC	?isAlive@CvPlayer@@QBE_NXZ			; CvPlayer::isAlive
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvplayer.h
;	COMDAT ?isAlive@CvPlayer@@QBE_NXZ
_TEXT	SEGMENT
?isAlive@CvPlayer@@QBE_NXZ PROC				; CvPlayer::isAlive, COMDAT
; _this$ = ecx

; 1092 : 		return m_bAlive;

	mov	al, BYTE PTR [ecx+2256]

; 1093 : 	}

	ret	0
?isAlive@CvPlayer@@QBE_NXZ ENDP				; CvPlayer::isAlive
_TEXT	ENDS
PUBLIC	?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ		; CvPlayer::getTeam
; Function compile flags: /Ogtpy
;	COMDAT ?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ
_TEXT	SEGMENT
?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ PROC		; CvPlayer::getTeam, COMDAT
; _this$ = ecx

; 1178 : 		return CvPreGame::teamType(m_eID);

	mov	eax, DWORD PTR [ecx+44]
	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN5@getTeam
	mov	ecx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax*4]

; 1179 : 	}

	ret	0

; 1178 : 		return CvPreGame::teamType(m_eID);

$LN5@getTeam:
	or	eax, -1

; 1179 : 	}

	ret	0
?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ ENDP		; CvPlayer::getTeam
_TEXT	ENDS
PUBLIC	?isPlot@CvMap@@QBEHHH@Z				; CvMap::isPlot
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvmap.h
;	COMDAT ?isPlot@CvMap@@QBEHHH@Z
_TEXT	SEGMENT
_iX$ = 8						; size = 4
_iY$ = 12						; size = 4
?isPlot@CvMap@@QBEHHH@Z PROC				; CvMap::isPlot, COMDAT
; _this$ = ecx

; 157  : #ifdef AUI_WARNING_FIXES
; 158  : 		return ((iX >= 0) && (uint(iX) < getGridWidth()) && (iY >= 0) && (uint(iY) < getGridHeight()));
; 159  : #else
; 160  : 		return ((iX >= 0) && (iX < getGridWidth()) && (iY >= 0) && (iY < getGridHeight()));

	mov	eax, DWORD PTR _iX$[esp-4]
	test	eax, eax
	jl	SHORT $LN3@isPlot
	cmp	eax, DWORD PTR [ecx+4020]
	jge	SHORT $LN3@isPlot
	mov	eax, DWORD PTR _iY$[esp-4]
	test	eax, eax
	jl	SHORT $LN3@isPlot
	cmp	eax, DWORD PTR [ecx+4024]
	jge	SHORT $LN3@isPlot
	mov	eax, 1

; 161  : #endif
; 162  : 	}

	ret	8
$LN3@isPlot:

; 157  : #ifdef AUI_WARNING_FIXES
; 158  : 		return ((iX >= 0) && (uint(iX) < getGridWidth()) && (iY >= 0) && (uint(iY) < getGridHeight()));
; 159  : #else
; 160  : 		return ((iX >= 0) && (iX < getGridWidth()) && (iY >= 0) && (iY < getGridHeight()));

	xor	eax, eax

; 161  : #endif
; 162  : 	}

	ret	8
?isPlot@CvMap@@QBEHHH@Z ENDP				; CvMap::isPlot
_TEXT	ENDS
PUBLIC	?plotNum@CvMap@@QBEHHH@Z			; CvMap::plotNum
; Function compile flags: /Ogtpy
;	COMDAT ?plotNum@CvMap@@QBEHHH@Z
_TEXT	SEGMENT
_iX$ = 8						; size = 4
_iY$ = 12						; size = 4
?plotNum@CvMap@@QBEHHH@Z PROC				; CvMap::plotNum, COMDAT
; _this$ = ecx

; 183  : 		return ((iY * getGridWidth()) + iX);

	mov	eax, DWORD PTR [ecx+4020]
	imul	eax, DWORD PTR _iY$[esp-4]
	add	eax, DWORD PTR _iX$[esp-4]

; 184  : #endif
; 185  : 	}

	ret	8
?plotNum@CvMap@@QBEHHH@Z ENDP				; CvMap::plotNum
_TEXT	ENDS
PUBLIC	?plot@CvMap@@QBEPAVCvPlot@@HH@Z			; CvMap::plot
; Function compile flags: /Ogtpy
;	COMDAT ?plot@CvMap@@QBEPAVCvPlot@@HH@Z
_TEXT	SEGMENT
_iX$ = 8						; size = 4
_iY$ = 12						; size = 4
?plot@CvMap@@QBEPAVCvPlot@@HH@Z PROC			; CvMap::plot, COMDAT
; _this$ = ecx

; 273  : 		if((iX == INVALID_PLOT_COORD) || (iY == INVALID_PLOT_COORD))

	mov	eax, DWORD PTR _iX$[esp-4]
	push	ebp
	cmp	eax, -2147483647			; 80000001H
	je	$LN1@plot
	mov	ebp, DWORD PTR _iY$[esp]
	cmp	ebp, -2147483647			; 80000001H
	je	$LN1@plot

; 276  : 		}
; 277  : 		int iMapX = coordRange(iX, getGridWidth(), isWrapX());

	cmp	BYTE PTR [ecx+4056], 0
	push	ebx
	push	esi
	mov	esi, DWORD PTR [ecx+4020]
	push	edi
	je	SHORT $LN11@plot
	test	eax, eax
	jge	SHORT $LN13@plot
	cdq
	idiv	esi
	mov	edi, edx
	add	edi, esi
	jmp	SHORT $LN15@plot
$LN13@plot:
	cmp	eax, esi
	jl	SHORT $LN11@plot
	cdq
	idiv	esi
	mov	edi, edx
	jmp	SHORT $LN15@plot
$LN11@plot:
	mov	edi, eax
$LN15@plot:

; 278  : 		int iMapY = coordRange(iY, getGridHeight(), isWrapY());

	cmp	BYTE PTR [ecx+4057], 0
	mov	ebx, DWORD PTR [ecx+4024]
	je	SHORT $LN40@plot
	test	ebp, ebp
	jge	SHORT $LN23@plot
	mov	eax, ebp
	cdq
	idiv	ebx
	add	edx, ebx
	jmp	SHORT $LN25@plot
$LN23@plot:
	cmp	ebp, ebx
	jl	SHORT $LN40@plot
	mov	eax, ebp
	cdq
	idiv	ebx
	jmp	SHORT $LN25@plot
$LN40@plot:
	mov	edx, ebp
$LN25@plot:

; 279  : 		return ((isPlot(iMapX, iMapY)) ? &(m_pMapPlots[plotNum(iMapX, iMapY)]) : NULL);

	test	edi, edi
	jl	SHORT $LN5@plot
	cmp	edi, esi
	jge	SHORT $LN5@plot
	test	edx, edx
	jl	SHORT $LN5@plot
	cmp	edx, ebx
	jge	SHORT $LN5@plot
	imul	esi, edx
	add	esi, edi
	imul	esi, 484				; 000001e4H
	add	esi, DWORD PTR [ecx+4068]
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx
	pop	ebp

; 280  : 	}

	ret	8
$LN5@plot:
	pop	edi
	pop	esi
	pop	ebx

; 279  : 		return ((isPlot(iMapX, iMapY)) ? &(m_pMapPlots[plotNum(iMapX, iMapY)]) : NULL);

	xor	eax, eax
	pop	ebp

; 280  : 	}

	ret	8
$LN1@plot:

; 274  : 		{
; 275  : 			return NULL;

	xor	eax, eax
	pop	ebp

; 280  : 	}

	ret	8
?plot@CvMap@@QBEPAVCvPlot@@HH@Z ENDP			; CvMap::plot
_TEXT	ENDS
PUBLIC	?EndOfTurnCleanup@CvNotifications@@QAEXXZ	; CvNotifications::EndOfTurnCleanup
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvnotifications.cpp
;	COMDAT ?EndOfTurnCleanup@CvNotifications@@QAEXXZ
_TEXT	SEGMENT
?EndOfTurnCleanup@CvNotifications@@QAEXXZ PROC		; CvNotifications::EndOfTurnCleanup, COMDAT
; _this$ = ecx

; 365  : {

	push	ebp
	push	esi
	mov	esi, ecx

; 366  : 	int iIndex = m_iNotificationsBeginIndex;

	mov	ebp, DWORD PTR [esi+20]

; 367  : 	while(iIndex != m_iNotificationsEndIndex)

	cmp	ebp, DWORD PTR [esi+24]
	je	SHORT $LN6@EndOfTurnC
	push	edi
	npad	3
$LL7@EndOfTurnC:

; 368  : 	{
; 369  : 		if(!m_aNotifications[iIndex].m_bDismissed)

	mov	eax, DWORD PTR [esi+8]
	mov	edi, ebp
	imul	edi, 92					; 0000005cH
	add	eax, edi
	cmp	BYTE PTR [eax+89], 0
	jne	SHORT $LN2@EndOfTurnC

; 370  : 		{
; 371  : 			if(IsNotificationEndOfTurnExpired(iIndex))

	mov	ecx, DWORD PTR [eax]
	push	ebp
	push	ecx
	mov	ecx, esi
	call	?IsNotificationTypeEndOfTurnExpired@CvNotifications@@QAE_NW4NotificationTypes@@H@Z ; CvNotifications::IsNotificationTypeEndOfTurnExpired
	test	al, al
	je	SHORT $LN2@EndOfTurnC

; 372  : 			{
; 373  : 				if (m_aNotifications[iIndex].m_bWaitExtraTurn)

	mov	edx, DWORD PTR [esi+8]
	cmp	BYTE PTR [edi+edx+90], 0
	lea	eax, DWORD PTR [edi+edx]
	je	SHORT $LN3@EndOfTurnC

; 374  : 					m_aNotifications[iIndex].m_bWaitExtraTurn = false;

	mov	BYTE PTR [eax+90], 0

; 375  : 				else

	jmp	SHORT $LN2@EndOfTurnC
$LN3@EndOfTurnC:

; 376  : 					Dismiss(m_aNotifications[iIndex].m_iLookupIndex, /*bUserInvoked*/ false);

	mov	eax, DWORD PTR [eax+84]
	push	0
	push	eax
	mov	ecx, esi
	call	?Dismiss@CvNotifications@@QAEXH_N@Z	; CvNotifications::Dismiss
$LN2@EndOfTurnC:

; 377  : 			}
; 378  : 		}
; 379  : 
; 380  : 		iIndex++;
; 381  : 
; 382  : 		if(iIndex >= (int)m_aNotifications.size())

	mov	ecx, DWORD PTR [esi+12]
	sub	ecx, DWORD PTR [esi+8]
	mov	eax, -1307163959			; b21642c9H
	imul	ecx
	add	edx, ecx
	sar	edx, 6
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	inc	ebp
	add	ecx, edx
	cmp	ebp, ecx
	jl	SHORT $LN1@EndOfTurnC

; 383  : 		{
; 384  : 			iIndex = 0;

	xor	ebp, ebp
$LN1@EndOfTurnC:

; 367  : 	while(iIndex != m_iNotificationsEndIndex)

	cmp	ebp, DWORD PTR [esi+24]
	jne	SHORT $LL7@EndOfTurnC
	pop	edi
$LN6@EndOfTurnC:
	pop	esi
	pop	ebp

; 385  : 		}
; 386  : 	}
; 387  : }

	ret	0
?EndOfTurnCleanup@CvNotifications@@QAEXXZ ENDP		; CvNotifications::EndOfTurnCleanup
_TEXT	ENDS
PUBLIC	?Activate@CvNotifications@@QAEXAAUNotification@1@@Z ; CvNotifications::Activate
EXTRN	?WrapUnitPointer@CvGlobals@@QAE?AV?$auto_ptr@VICvUnit1@@@std@@PAVCvUnit@@@Z:PROC ; CvGlobals::WrapUnitPointer
EXTRN	?plot@CvUnit@@QBEPAVCvPlot@@XZ:PROC		; CvUnit::plot
EXTRN	?getUnit@CvPlayer@@QAEPAVCvUnit@@H@Z:PROC	; CvPlayer::getUnit
EXTRN	?GetNumFaithGreatPeople@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetNumFaithGreatPeople
EXTRN	?GetNumMayaBoosts@CvPlayer@@QBEHXZ:PROC		; CvPlayer::GetNumMayaBoosts
EXTRN	?DoBeginDiploWithHumanEspionageResult@CvDiplomacyAI@@QAEXXZ:PROC ; CvDiplomacyAI::DoBeginDiploWithHumanEspionageResult
EXTRN	?plot@CvCity@@QBEPAVCvPlot@@XZ:PROC		; CvCity::plot
EXTRN	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ:PROC	; CvPlayer::getCapitalCity
EXTRN	?WrapPlotPointer@CvGlobals@@QAE?AV?$auto_ptr@VICvPlot1@@@std@@PAVCvPlot@@@Z:PROC ; CvGlobals::WrapPlotPointer
EXTRN	?GetNumFreeGreatPeople@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetNumFreeGreatPeople
EXTRN	?DoBeginDiploWithHumanInDiscuss@CvDiplomacyAI@@QAEXXZ:PROC ; CvDiplomacyAI::DoBeginDiploWithHumanInDiscuss
EXTRN	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ:PROC ; CvPlayer::GetDiplomacyAI
EXTRN	?isAtWar@CvTeam@@QBE_NW4TeamTypes@@@Z:PROC	; CvTeam::isAtWar
EXTRN	?HasRecentIntrigueAbout@CvPlayerEspionage@@QAE_NW4PlayerTypes@@@Z:PROC ; CvPlayerEspionage::HasRecentIntrigueAbout
EXTRN	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ:PROC ; CvPlayer::GetEspionage
EXTRN	?isHuman@CvPlayer@@QBE_NXZ:PROC			; CvPlayer::isHuman
;	COMDAT xdata$x
; File s:\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvdllinterfaces.h
xdata$x	SEGMENT
__ehfuncinfo$?Activate@CvNotifications@@QAEXAAUNotification@1@@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?Activate@CvNotifications@@QAEXAAUNotification@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?Activate@CvNotifications@@QAEXAAUNotification@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Activate@CvNotifications@@QAEXAAUNotification@1@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Activate@CvNotifications@@QAEXAAUNotification@1@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Activate@CvNotifications@@QAEXAAUNotification@1@@Z$5
	DD	02H
	DD	FLAT:__unwindfunclet$?Activate@CvNotifications@@QAEXAAUNotification@1@@Z$7
	DD	03H
	DD	FLAT:__unwindfunclet$?Activate@CvNotifications@@QAEXAAUNotification@1@@Z$9
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Activate@CvNotifications@@QAEXAAUNotification@1@@Z$11
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvnotifications.cpp
xdata$x	ENDS
;	COMDAT ?Activate@CvNotifications@@QAEXAAUNotification@1@@Z
_TEXT	SEGMENT
$T224554 = -584						; size = 4
$T224306 = -584						; size = 4
_pDllPlot$221274 = -580					; size = 4
_pDllPlot$221137 = -580					; size = 4
$T224308 = -580						; size = 4
_pDllPlot$221116 = -580					; size = 4
_pDllPlot$221086 = -580					; size = 4
_pDllUnit$221187 = -576					; size = 4
_iQuestFlags$221112 = -576				; size = 4
$T224311 = -572						; size = 4
$T224309 = -568						; size = 4
$T224304 = -564						; size = 4
$T224314 = -560						; size = 4
_kPopup$221269 = -556					; size = 536
_kPopup$221260 = -556					; size = 536
_kPopup$221256 = -556					; size = 536
_kPopup$221252 = -556					; size = 536
_kPopup$221248 = -556					; size = 536
_kPopup$221231 = -556					; size = 536
_kPopup$221228 = -556					; size = 536
_kPopup$221225 = -556					; size = 536
_kPopup$221223 = -556					; size = 536
_kPopup$221219 = -556					; size = 536
_kPopup$221217 = -556					; size = 536
_kPopup$221215 = -556					; size = 536
_kPopup$221213 = -556					; size = 536
_kPopupInfo$221127 = -556				; size = 536
_kPopup$221123 = -556					; size = 536
_kPopup$221110 = -556					; size = 536
_kPopup$221108 = -556					; size = 536
_kPopup$221106 = -556					; size = 536
_kPopup$221098 = -556					; size = 536
_kPopup$221081 = -556					; size = 536
_kPopup$221078 = -556					; size = 536
_pUnit$221132 = -20					; size = 8
__$EHRec$ = -12						; size = 12
_notification$ = 8					; size = 4
?Activate@CvNotifications@@QAEXAAUNotification@1@@Z PROC ; CvNotifications::Activate, COMDAT
; _this$ = ecx

; 809  : {

	push	-1
	mov	eax, DWORD PTR fs:0
	push	__ehhandler$?Activate@CvNotifications@@QAEXAAUNotification@1@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 572				; 0000023cH
	push	ebx

; 810  : 	GC.GetEngineUserInterface()->ActivateNotification(notification.m_iLookupIndex, notification.m_eNotificationType, notification.m_strMessage, notification.m_iX, notification.m_iY, notification.m_iGameDataIndex, notification.m_iExtraGameData, m_ePlayer);

	mov	ebx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	push	ebp
	push	esi
	mov	esi, DWORD PTR _notification$[esp+592]
	push	edi
	mov	edi, ecx
	lea	ebp, DWORD PTR [esi+8]
	mov	ecx, ebp
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	ecx, DWORD PTR [edi]
	mov	edx, DWORD PTR [ebx]
	push	ecx
	mov	ecx, DWORD PTR [esi+76]
	mov	edx, DWORD PTR [edx+212]
	push	ecx
	mov	ecx, DWORD PTR [esi+72]
	push	ecx
	mov	ecx, DWORD PTR [esi+68]
	push	ecx
	mov	ecx, DWORD PTR [esi+64]
	push	ecx
	mov	ecx, DWORD PTR [esi+84]
	push	eax
	mov	eax, DWORD PTR [esi]
	push	eax
	push	ecx
	mov	ecx, ebx
	call	edx

; 811  : 
; 812  : 	gDLL->GameplayMinimapNotification(notification.m_iX, notification.m_iY, notification.m_iLookupIndex+1);	// The index is used to uniquely identify each flashing dot on the minimap. We're adding 1 since the selected unit is always 0. It ain't pretty, but it'll work

	mov	edx, DWORD PTR [esi+84]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+800]
	mov	ebx, 1
	add	edx, ebx
	push	edx
	mov	edx, DWORD PTR [esi+68]
	push	edx
	mov	edx, DWORD PTR [esi+64]
	push	edx
	call	eax

; 813  : 
; 814  : 	switch(notification.m_eNotificationType)

	mov	eax, DWORD PTR [esi]
	cmp	eax, 84632199				; 050b6287H
	jg	$LN56@Activate
	je	$LN28@Activate
	cmp	eax, -1168514695			; ba59e179H
	jg	$LN57@Activate
	je	$LN32@Activate
	cmp	eax, -1730271966			; 98de2522H
	jg	$LN58@Activate
	je	$LN10@Activate
	cmp	eax, -1871397394			; 9074bdeeH
	jg	SHORT $LN59@Activate
	je	$LN10@Activate
	cmp	eax, -2115432992			; 81e90de0H
	je	$LN24@Activate
	cmp	eax, -2068323322			; 84b7e406H
	jne	$LN2@Activate

; 1084 : 
; 1085 : 	case NOTIFICATION_CHOOSE_ARCHAEOLOGY:
; 1086 : 		CvAssertMsg(notification.m_iGameDataIndex >= 0, "notification.m_iGameDataIndex is out of bounds");
; 1087 : 		if (notification.m_iGameDataIndex >= 0)

	xor	ebx, ebx
	cmp	DWORD PTR [esi+72], ebx
	jl	$LN51@Activate

; 1088 : 		{
; 1089 : 			CvPopupInfo kPopup(BUTTONPOPUP_CHOOSE_ARCHAEOLOGY, m_ePlayer);

	mov	ecx, DWORD PTR [edi]
	mov	DWORD PTR _kPopup$221256[esp+600], ecx
	or	eax, -1
	mov	DWORD PTR _kPopup$221256[esp+620], 122879934 ; 0752ffbeH

; 1090 : 			GC.GetEngineUserInterface()->AddPopup(kPopup);
; 1091 : 		}
; 1092 : 		break;

	jmp	$LN463@Activate
$LN59@Activate:

; 813  : 
; 814  : 	switch(notification.m_eNotificationType)

	cmp	eax, -1774532806			; 963ac73aH
	je	SHORT $LN23@Activate
	cmp	eax, -1746998481			; 97deeb2fH
	jne	$LN2@Activate
$LN12@Activate:

; 1055 : 
; 1056 : 	case NOTIFICATION_LEAGUE_CALL_FOR_PROPOSALS:
; 1057 : 	case NOTIFICATION_LEAGUE_CALL_FOR_VOTES:
; 1058 : 	case NOTIFICATION_LEAGUE_VOTING_DONE:
; 1059 : 	case NOTIFICATION_LEAGUE_VOTING_SOON:
; 1060 : 		CvAssertMsg(notification.m_iGameDataIndex >= 0, "notification.m_iGameDataIndex is out of bounds");
; 1061 : 		if (notification.m_iGameDataIndex >= 0)

	mov	esi, DWORD PTR [esi+72]
	xor	ebx, ebx
	cmp	esi, ebx
	jl	$LN51@Activate

; 1062 : 		{
; 1063 : 			LeagueTypes eLeague = (LeagueTypes) notification.m_iGameDataIndex;
; 1064 : 			CvPopupInfo kPopup(BUTTONPOPUP_LEAGUE_OVERVIEW, eLeague);

	or	eax, -1
	mov	DWORD PTR _kPopup$221248[esp+600], esi
	mov	DWORD PTR _kPopup$221248[esp+604], eax
	mov	DWORD PTR _kPopup$221248[esp+608], eax
	mov	BYTE PTR _kPopup$221248[esp+616], bl
	mov	DWORD PTR _kPopup$221248[esp+620], 1104213538 ; 41d0f622H

; 1065 : 			GC.GetEngineUserInterface()->AddPopup(kPopup);
; 1066 : 		}
; 1067 : 		break;

	jmp	$LN459@Activate
$LN23@Activate:

; 993  : 
; 994  : 	case NOTIFICATION_SPY_STOLE_TECH:
; 995  : 	{
; 996  : 		CvPopupInfo kPopup(BUTTONPOPUP_CHOOSE_TECH_TO_STEAL, m_ePlayer, notification.m_iGameDataIndex, notification.m_iExtraGameData);

	mov	eax, DWORD PTR [esi+76]
	mov	ecx, DWORD PTR [esi+72]
	mov	edx, DWORD PTR [edi]
	xor	ebx, ebx
	push	ebx
	push	ebx
	push	ebx
	push	eax
	push	ecx
	push	edx
	push	80					; 00000050H
	lea	ecx, DWORD PTR _kPopup$221225[esp+628]
	call	??0CvPopupInfo@@QAE@W4ButtonPopupTypes@@HHHH_N1@Z ; CvPopupInfo::CvPopupInfo

; 997  : 		strcpy(kPopup.szText, notification.m_strMessage);

	mov	ecx, ebp
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	lea	edx, DWORD PTR _kPopup$221225[esp+624]
$LL55@Activate:
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR [edx], cl
	inc	eax
	inc	edx
	cmp	cl, bl
	jne	SHORT $LL55@Activate

; 998  : 		GC.GetEngineUserInterface()->AddPopup(kPopup);
; 999  : 	}
; 1000 : 	break;

	jmp	$LN456@Activate
$LN58@Activate:

; 813  : 
; 814  : 	switch(notification.m_eNotificationType)

	cmp	eax, -1421067341			; ab4c3bb3H
	jg	$LN60@Activate
	je	$LN31@Activate
	cmp	eax, -1686889601			; 9b741b7fH
	je	$LN50@Activate
	cmp	eax, -1432015642			; aaa52ce6H
	jne	$LN2@Activate
$LN15@Activate:

; 1039 : 
; 1040 : 	case NOTIFICATION_INTRIGUE_DECEPTION:
; 1041 : 	case NOTIFICATION_INTRIGUE_SNEAK_ATTACK_ARMY_AGAINST_KNOWN_CITY_KNOWN:
; 1042 : 	case NOTIFICATION_INTRIGUE_SNEAK_ATTACK_ARMY_AGAINST_KNOWN_CITY_UNKNOWN:
; 1043 : 	case NOTIFICATION_INTRIGUE_SNEAK_ATTACK_AMPHIB_AGAINST_KNOWN_CITY_UNKNOWN:
; 1044 : 	case NOTIFICATION_INTRIGUE_SNEAK_ATTACK_AMPHIB_AGAINST_KNOWN_CITY_KNOWN:
; 1045 : 		CvAssertMsg(notification.m_iGameDataIndex >= 0, "notification.m_iGameDataIndex is out of bounds");
; 1046 : 		if(notification.m_iGameDataIndex >= 0)

	mov	esi, DWORD PTR [esi+72]
	test	esi, esi
	jl	$LN51@Activate

; 1047 : 		{
; 1048 : 			PlayerTypes ePlayerToContact = (PlayerTypes)notification.m_iGameDataIndex;
; 1049 : 			if (!GET_PLAYER(ePlayerToContact).isHuman() && ePlayerToContact != m_ePlayer && GET_PLAYER(m_ePlayer).GetEspionage()->HasRecentIntrigueAbout(ePlayerToContact) && !GET_TEAM(GET_PLAYER(m_ePlayer).getTeam()).isAtWar(GET_PLAYER(ePlayerToContact).getTeam()))

	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	ebx, esi
	imul	ebx, 63236				; 0000f704H
	add	ecx, ebx
	call	?isHuman@CvPlayer@@QBE_NXZ		; CvPlayer::isHuman
	test	al, al
	jne	$LN51@Activate
	mov	eax, DWORD PTR [edi]
	cmp	esi, eax
	je	$LN51@Activate
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	esi
	mov	ecx, eax
	call	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ ; CvPlayer::GetEspionage
	mov	ecx, eax
	call	?HasRecentIntrigueAbout@CvPlayerEspionage@@QAE_NW4PlayerTypes@@@Z ; CvPlayerEspionage::HasRecentIntrigueAbout
	test	al, al
	je	$LN51@Activate
	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	imul	ecx, 63236				; 0000f704H
	add	ecx, eax
	lea	ebp, DWORD PTR [ebx+eax]
	call	?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ	; CvPlayer::getTeam
	mov	esi, eax
	imul	esi, 2980				; 00000ba4H
	add	esi, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	ecx, ebp
	call	?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ	; CvPlayer::getTeam
	push	eax
	mov	ecx, esi
	call	?isAtWar@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isAtWar
	test	al, al
	jne	$LN51@Activate

; 1050 : 			{
; 1051 : 				GET_PLAYER(ePlayerToContact).GetDiplomacyAI()->DoBeginDiploWithHumanInDiscuss();

	mov	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	lea	ecx, DWORD PTR [ebx+edx]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?DoBeginDiploWithHumanInDiscuss@CvDiplomacyAI@@QAEXXZ ; CvDiplomacyAI::DoBeginDiploWithHumanInDiscuss

; 1052 : 			}
; 1053 : 		}
; 1054 : 		break;

	jmp	$LN51@Activate
$LN50@Activate:

; 815  : 	{
; 816  : 	case NOTIFICATION_WONDER_COMPLETED_ACTIVE_PLAYER:
; 817  : 	{
; 818  : 		CvPopupInfo kPopup(BUTTONPOPUP_WONDER_COMPLETED_ACTIVE_PLAYER, notification.m_iGameDataIndex, notification.m_iExtraGameData, notification.m_iX, notification.m_iY);

	mov	ecx, DWORD PTR [esi+68]
	mov	edx, DWORD PTR [esi+64]
	mov	eax, DWORD PTR [esi+76]
	xor	ebx, ebx
	push	ebx
	push	ebx
	push	ecx
	mov	ecx, DWORD PTR [esi+72]
	push	edx
	push	eax
	push	ecx
	push	69					; 00000045H
	lea	ecx, DWORD PTR _kPopup$221078[esp+628]
	call	??0CvPopupInfo@@QAE@W4ButtonPopupTypes@@HHHH_N1@Z ; CvPopupInfo::CvPopupInfo

; 819  : 		GC.GetEngineUserInterface()->AddPopup(kPopup);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	edx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [edx+180]
	lea	eax, DWORD PTR _kPopup$221078[esp+600]
	push	eax
	call	edx

; 820  : 	}
; 821  : 	break;

	jmp	$LN51@Activate
$LN31@Activate:

; 941  : 	}
; 942  : 	break;
; 943  : 	case NOTIFICATION_FREE_GREAT_PERSON:
; 944  : 	{
; 945  : 		if(GET_PLAYER(m_ePlayer).GetNumFreeGreatPeople() > 0)

	mov	ecx, DWORD PTR [edi]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	call	?GetNumFreeGreatPeople@CvPlayer@@QBEHXZ	; CvPlayer::GetNumFreeGreatPeople
	test	eax, eax
	jle	$LN51@Activate

; 946  : 		{
; 947  : 			CvPopupInfo kPopup(BUTTONPOPUP_CHOOSE_FREE_GREAT_PERSON, m_ePlayer, notification.m_iGameDataIndex, notification.m_iExtraGameData);

	mov	eax, DWORD PTR [esi+76]
	mov	ecx, DWORD PTR [esi+72]
	mov	edx, DWORD PTR [edi]
	xor	ebx, ebx
	push	ebx
	push	ebx
	push	ebx
	push	eax
	push	ecx
	push	edx
	push	75					; 0000004bH
	lea	ecx, DWORD PTR _kPopup$221213[esp+628]
	call	??0CvPopupInfo@@QAE@W4ButtonPopupTypes@@HHHH_N1@Z ; CvPopupInfo::CvPopupInfo

; 948  : 			GC.GetEngineUserInterface()->AddPopup(kPopup);
; 949  : 		}
; 950  : 	}
; 951  : 	break;

	jmp	$LN456@Activate
$LN60@Activate:

; 813  : 
; 814  : 	switch(notification.m_eNotificationType)

	cmp	eax, -1365828128			; ae971de0H
	je	SHORT $LN41@Activate
	cmp	eax, -1328544167			; b0d00659H
	je	$LN15@Activate
	jmp	$LN2@Activate
$LN41@Activate:

; 870  : 	case NOTIFICATION_MINOR_QUEST:
; 871  : 	{
; 872  : 		int iQuestFlags = notification.m_iExtraGameData;
; 873  : 		CvPlot* pPlot = GC.getMap().plot(notification.m_iX, notification.m_iY);

	mov	edi, DWORD PTR [esi+64]
	mov	ecx, DWORD PTR [esi+76]
	mov	edx, DWORD PTR [esi+68]
	xor	ebx, ebx
	mov	DWORD PTR _iQuestFlags$221112[esp+600], ecx
	mov	DWORD PTR $T224554[esp+600], edx
	cmp	edi, -2147483647			; 80000001H
	je	$LN192@Activate
	cmp	edx, -2147483647			; 80000001H
	je	$LN192@Activate
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	dl, BYTE PTR [eax+4056]
	mov	ecx, DWORD PTR [eax+4020]
	cmp	dl, bl
	je	SHORT $LN143@Activate
	cmp	edi, ebx
	jge	SHORT $LN145@Activate
	mov	eax, edi
	cdq
	idiv	ecx
	mov	edi, edx
	add	edi, ecx
	jmp	SHORT $LN143@Activate
$LN145@Activate:
	cmp	edi, ecx
	jl	SHORT $LN143@Activate
	mov	eax, edi
	cdq
	idiv	ecx
	mov	edi, edx
$LN143@Activate:
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	al, BYTE PTR [edx+4057]
	mov	ebp, DWORD PTR [edx+4024]
	mov	edx, DWORD PTR $T224554[esp+600]
	cmp	al, bl
	je	SHORT $LN153@Activate
	cmp	edx, ebx
	jge	SHORT $LN155@Activate
	mov	eax, edx
	cdq
	idiv	ebp
	add	edx, ebp
	jmp	SHORT $LN153@Activate
$LN155@Activate:
	cmp	edx, ebp
	jl	SHORT $LN153@Activate
	mov	eax, edx
	cdq
	idiv	ebp
$LN153@Activate:
	cmp	edi, ebx
	jl	$LN192@Activate
	cmp	edi, ecx
	jge	$LN192@Activate
	cmp	edx, ebx
	jl	$LN192@Activate
	cmp	edx, ebp
	jge	$LN192@Activate
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	imul	ecx, edx
	add	ecx, edi
	imul	ecx, 484				; 000001e4H
	add	ecx, DWORD PTR [eax+4068]

; 874  : 		if(pPlot)

	cmp	ecx, ebx
	je	SHORT $LN192@Activate

; 875  : 		{
; 876  : 			auto_ptr<ICvPlot1> pDllPlot = GC.WrapPlotPointer(pPlot);

	push	ecx
	lea	ecx, DWORD PTR $T224306[esp+604]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?WrapPlotPointer@CvGlobals@@QAE?AV?$auto_ptr@VICvPlot1@@@std@@PAVCvPlot@@@Z ; CvGlobals::WrapPlotPointer
	mov	edi, DWORD PTR [eax]
	mov	DWORD PTR [eax], ebx
	mov	DWORD PTR _pDllPlot$221116[esp+600], edi
	mov	eax, DWORD PTR $T224306[esp+600]
	mov	DWORD PTR __$EHRec$[esp+608], 1
	cmp	eax, ebx
	je	SHORT $LN179@Activate
	mov	edx, DWORD PTR [eax]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN179@Activate:

; 877  : 			GC.GetEngineUserInterface()->lookAt(pDllPlot.get(), CAMERALOOKAT_NORMAL);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+272]
	push	ebx
	push	edi
	call	eax

; 878  : 			gDLL->GameplayDoFX(pDllPlot.get());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+708]
	push	-1
	push	edi
	call	eax

; 879  : 		}

	mov	DWORD PTR __$EHRec$[esp+608], -1
	cmp	edi, ebx
	je	SHORT $LN192@Activate
	mov	ecx, DWORD PTR [edi]
	mov	edx, DWORD PTR [ecx+4]
	push	edi
	call	edx
$LN192@Activate:

; 880  : 
; 881  : 		PlayerTypes ePlayer = (PlayerTypes)notification.m_iGameDataIndex;

	mov	eax, DWORD PTR [esi+72]

; 882  : 		if (GET_PLAYER(ePlayer).isAlive())

	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	imul	eax, 63236				; 0000f704H
	cmp	BYTE PTR [eax+ecx+2256], bl
	je	$LN51@Activate

; 883  : 		{
; 884  : 			GC.GetEngineUserInterface()->SetTempString(notification.m_strMessage);

	mov	edi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	sub	esp, 28					; 0000001cH
	lea	eax, DWORD PTR [esi+8]
	mov	ecx, esp
	mov	DWORD PTR $T224308[esp+628], esp
	push	eax
	call	??0CvString@@QAE@ABV0@@Z
	mov	edx, DWORD PTR [edi]
	mov	eax, DWORD PTR [edx+524]
	mov	ecx, edi
	call	eax

; 885  : 			CvPopupInfo kPopup(BUTTONPOPUP_CITY_STATE_MESSAGE, notification.m_iGameDataIndex, iQuestFlags);

	mov	ecx, DWORD PTR [esi+72]
	mov	edx, DWORD PTR _iQuestFlags$221112[esp+600]
	mov	DWORD PTR _kPopup$221123[esp+600], ecx
	mov	DWORD PTR _kPopup$221123[esp+604], edx
	mov	BYTE PTR _kPopup$221123[esp+616], bl
	mov	DWORD PTR _kPopup$221123[esp+620], 62	; 0000003eH

; 886  : 			GC.GetEngineUserInterface()->AddPopup(kPopup);
; 887  : 		}
; 888  : 	}
; 889  : 	break;

	jmp	$LN457@Activate
$LN32@Activate:

; 933  : 	case NOTIFICATION_PLAYER_DEAL:
; 934  : 	{
; 935  : 		GC.GetEngineUserInterface()->OpenPlayerDealScreen((PlayerTypes) notification.m_iX);
; 936  : 	}
; 937  : 	break;
; 938  : 	case NOTIFICATION_PLAYER_DEAL_RECEIVED:
; 939  : 	{
; 940  : 		GC.GetEngineUserInterface()->OpenPlayerDealScreen((PlayerTypes) notification.m_iX);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [esi+64]
	mov	edx, DWORD PTR [edx+504]
	push	eax
	call	edx
	jmp	$LN51@Activate
$LN57@Activate:

; 813  : 
; 814  : 	switch(notification.m_eNotificationType)

	cmp	eax, -273578033				; efb187cfH
	jg	$LN61@Activate
	je	$LN49@Activate
	cmp	eax, -720689320				; d50b2758H
	jg	$LN62@Activate
	je	$LN18@Activate
	cmp	eax, -1103533898			; be3968b6H
	je	$LN12@Activate
	cmp	eax, -851367674				; cd412906H
	jne	$LN2@Activate

; 828  : 	case NOTIFICATION_BUY_TILE:
; 829  : 	{
; 830  : 		// Jon say - do like Sid would!
; 831  : 		CvCity* pCity = GET_PLAYER(m_ePlayer).getCapitalCity();

	mov	ecx, DWORD PTR [edi]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity

; 832  : 		if(pCity)

	xor	ebx, ebx
	cmp	eax, ebx
	je	$LN51@Activate

; 833  : 		{
; 834  : 			auto_ptr<ICvPlot1> pDllPlot = GC.WrapPlotPointer(pCity->plot());

	mov	ecx, eax
	call	?plot@CvCity@@QBEPAVCvPlot@@XZ		; CvCity::plot
	push	eax
	lea	eax, DWORD PTR $T224304[esp+604]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?WrapPlotPointer@CvGlobals@@QAE?AV?$auto_ptr@VICvPlot1@@@std@@PAVCvPlot@@@Z ; CvGlobals::WrapPlotPointer
	mov	esi, DWORD PTR [eax]
	mov	DWORD PTR [eax], ebx
	mov	DWORD PTR _pDllPlot$221086[esp+600], esi
	mov	eax, DWORD PTR $T224304[esp+600]
	mov	DWORD PTR __$EHRec$[esp+608], ebx
	cmp	eax, ebx
	je	SHORT $LN103@Activate
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	push	eax
	call	edx
$LN103@Activate:

; 835  : 			GC.GetEngineUserInterface()->lookAt(pDllPlot.get(), CAMERALOOKAT_NORMAL);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+272]
	push	ebx
	push	esi
	call	edx

; 836  : 		}

	mov	DWORD PTR __$EHRec$[esp+608], -1
	cmp	esi, ebx
	je	$LN51@Activate
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+4]
	push	esi
	call	ecx

; 837  : 	}
; 838  : 	break;

	jmp	$LN51@Activate
$LN62@Activate:

; 813  : 
; 814  : 	switch(notification.m_eNotificationType)

	cmp	eax, -433658102				; e626e70aH
	je	$LN24@Activate
	cmp	eax, -372818113				; e9c73f3fH
	jmp	$LN458@Activate
$LN49@Activate:

; 822  : 	case NOTIFICATION_GREAT_WORK_COMPLETED_ACTIVE_PLAYER:
; 823  : 		{
; 824  : 			CvPopupInfo kPopup(BUTTONPOPUP_GREAT_WORK_COMPLETED_ACTIVE_PLAYER, notification.m_iGameDataIndex, notification.m_iExtraGameData, notification.m_iX, notification.m_iY);

	mov	edx, DWORD PTR [esi+68]
	mov	eax, DWORD PTR [esi+64]
	mov	ecx, DWORD PTR [esi+76]
	xor	ebx, ebx
	push	ebx
	push	ebx
	push	edx
	mov	edx, DWORD PTR [esi+72]
	push	eax
	push	ecx
	push	edx
	push	1031589465				; 3d7cce59H
	lea	ecx, DWORD PTR _kPopup$221081[esp+628]
	call	??0CvPopupInfo@@QAE@W4ButtonPopupTypes@@HHHH_N1@Z ; CvPopupInfo::CvPopupInfo

; 825  : 			GC.GetEngineUserInterface()->AddPopup(kPopup);
; 826  : 		}
; 827  : 		break;

	jmp	$LN456@Activate
$LN61@Activate:

; 813  : 
; 814  : 	switch(notification.m_eNotificationType)

	cmp	eax, -46207143				; fd3eef59H
	jg	$LN63@Activate
	je	$LN12@Activate
	cmp	eax, -112125243				; f9511ac5H
	je	$LN15@Activate
	cmp	eax, -54118376				; fcc63818H
	jne	$LN2@Activate
$LN18@Activate:

; 1021 : 
; 1022 : 	case NOTIFICATION_TECH_STOLEN_SPY_IDENTIFIED:
; 1023 : 	case NOTIFICATION_SPY_KILLED_A_SPY:
; 1024 : 	{
; 1025 : 		CvAssertMsg(notification.m_iGameDataIndex >= 0, "notification.m_iGameDataIndex is out of bounds");
; 1026 : 		if(notification.m_iGameDataIndex >= 0 && notification.m_iExtraGameData == -1)

	mov	eax, DWORD PTR [esi+72]
	test	eax, eax
	jl	$LN51@Activate
	cmp	DWORD PTR [esi+76], -1
	jne	$LN51@Activate

; 1027 : 		{
; 1028 : 			PlayerTypes eTargetPlayer = (PlayerTypes)notification.m_iGameDataIndex;
; 1029 : 			if (!GET_PLAYER(eTargetPlayer).isHuman())

	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	ecx, eax
	call	?isHuman@CvPlayer@@QBE_NXZ		; CvPlayer::isHuman
	test	al, al
	jne	SHORT $LN16@Activate

; 1030 : 			{
; 1031 : 				GET_PLAYER((PlayerTypes)notification.m_iGameDataIndex).GetDiplomacyAI()->DoBeginDiploWithHumanEspionageResult();

	mov	ecx, DWORD PTR [esi+72]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?DoBeginDiploWithHumanEspionageResult@CvDiplomacyAI@@QAEXXZ ; CvDiplomacyAI::DoBeginDiploWithHumanEspionageResult
$LN16@Activate:

; 1032 : 			}
; 1033 : 
; 1034 : 			GC.GetEngineUserInterface()->RemoveNotification(notification.m_iLookupIndex, m_ePlayer);

	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	edx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [edx+208]
	push	eax
	mov	eax, DWORD PTR [esi+84]
	push	eax
	call	edx

; 1035 : 			notification.m_iExtraGameData = 1; // slewis hack to mark notification as seen so we don't re-enter diplomacy

	mov	DWORD PTR [esi+76], ebx

; 1036 : 		}
; 1037 : 	}
; 1038 : 	break;

	jmp	$LN51@Activate
$LN63@Activate:

; 813  : 
; 814  : 	switch(notification.m_eNotificationType)

	cmp	eax, -33507383				; fe00b7c9H
	je	SHORT $LN45@Activate
	cmp	eax, -30204373				; fe331e2bH
	jne	$LN2@Activate
$LN10@Activate:

; 1068 : 
; 1069 : 	case NOTIFICATION_IDEOLOGY_CHOSEN:
; 1070 : 	case NOTIFICATION_CULTURE_VICTORY_SOMEONE_INFLUENTIAL:
; 1071 : 	case NOTIFICATION_CULTURE_VICTORY_WITHIN_TWO:
; 1072 : 	case NOTIFICATION_CULTURE_VICTORY_WITHIN_TWO_ACTIVE_PLAYER:
; 1073 : 	case NOTIFICATION_CULTURE_VICTORY_WITHIN_ONE:
; 1074 : 	case NOTIFICATION_CULTURE_VICTORY_WITHIN_ONE_ACTIVE_PLAYER:
; 1075 : 	case NOTIFICATION_CULTURE_VICTORY_NO_LONGER_INFLUENTIAL:
; 1076 : 		CvAssertMsg(notification.m_iGameDataIndex >= 0, "notification.m_iGameDataIndex is out of bounds");
; 1077 : 		if (notification.m_iGameDataIndex >= 0)

	xor	ebx, ebx
	cmp	DWORD PTR [esi+72], ebx
	jl	$LN51@Activate

; 1078 : 		{
; 1079 : 			CvPopupInfo kPopup(BUTTONPOPUP_CULTURE_OVERVIEW);

	or	eax, -1
	mov	DWORD PTR _kPopup$221252[esp+600], eax
	mov	DWORD PTR _kPopup$221252[esp+608], eax
	mov	BYTE PTR _kPopup$221252[esp+616], bl
	mov	DWORD PTR _kPopup$221252[esp+620], -401251415 ; e81563a9H

; 1080 : 			kPopup.iData2 = 3; // Tab to select

	mov	DWORD PTR _kPopup$221252[esp+604], 3

; 1081 : 			GC.GetEngineUserInterface()->AddPopup(kPopup);
; 1082 : 		}
; 1083 : 		break;

	jmp	$LN459@Activate
$LN45@Activate:

; 847  : 	case NOTIFICATION_TECH_AWARD:
; 848  : 	{
; 849  : 		if(notification.m_iExtraGameData != -1)

	mov	eax, DWORD PTR [esi+76]
	cmp	eax, -1
	je	$LN51@Activate

; 850  : 		{
; 851  : 			CvPopupInfo kPopup(BUTTONPOPUP_TECH_AWARD, m_ePlayer, notification.m_iGameDataIndex, notification.m_iExtraGameData);

	mov	ecx, DWORD PTR [edi]
	xor	ebx, ebx
	push	ebx
	push	ebx
	push	ebx
	push	eax
	mov	eax, DWORD PTR [esi+72]
	push	eax
	push	ecx
	push	68					; 00000044H
	lea	ecx, DWORD PTR _kPopup$221106[esp+628]
	call	??0CvPopupInfo@@QAE@W4ButtonPopupTypes@@HHHH_N1@Z ; CvPopupInfo::CvPopupInfo

; 852  : 			strcpy_s(kPopup.szText, notification.m_strMessage);

	mov	ecx, ebp
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	edx, DWORD PTR _kPopup$221106[esp+628]
	push	edx
	call	??$strcpy_s@$0CAA@@@YAHAAY0CAA@DPBD@Z	; strcpy_s<512>
	add	esp, 8

; 853  : 			GC.GetEngineUserInterface()->AddPopup(kPopup);
; 854  : 		}
; 855  : 	}
; 856  : 	break;

	jmp	$LN456@Activate
$LN28@Activate:

; 958  : 
; 959  : 	case NOTIFICATION_ADD_REFORMATION_BELIEF:
; 960  : 	{
; 961  : 		CvPopupInfo kPopup(BUTTONPOPUP_FOUND_PANTHEON, m_ePlayer, false /*bPantheonBelief*/);

	mov	ecx, DWORD PTR [edi]
	xor	ebx, ebx
	mov	DWORD PTR _kPopup$221217[esp+600], ecx
	mov	DWORD PTR _kPopup$221217[esp+604], ebx
	mov	DWORD PTR _kPopup$221217[esp+608], -1
	mov	DWORD PTR _kPopup$221217[esp+620], 76	; 0000004cH

; 962  : 		GC.GetEngineUserInterface()->AddPopup(kPopup);
; 963  : 	}
; 964  : 	break;

	jmp	$LN465@Activate
$LN56@Activate:

; 813  : 
; 814  : 	switch(notification.m_eNotificationType)

	cmp	eax, 1235286433				; 49a0f9a1H
	jg	$LN64@Activate
	je	$LN15@Activate
	cmp	eax, 359132113				; 1567ebd1H
	jg	$LN65@Activate
	je	$LN10@Activate
	cmp	eax, 180382033				; 0ac06951H
	jg	$LN66@Activate
	je	SHORT $LN24@Activate
	cmp	eax, 88900711				; 054c8467H
	je	SHORT $LN22@Activate
	cmp	eax, 101802557				; 0611623dH
	jne	$LN2@Activate

; 1102 : 
; 1103 : #ifndef AUI_WARNING_FIXES
; 1104 : 	case NOTIFICATION_LEAGUE_PROJECT_COMPLETE:
; 1105 : 		CvAssertMsg(notification.m_iGameDataIndex >= 0, "notification.m_iGameDataIndex is out of bounds");
; 1106 : 		if (notification.m_iGameDataIndex >= 0)

	mov	eax, DWORD PTR [esi+72]
	xor	ebx, ebx
	cmp	eax, ebx
	jl	$LN51@Activate

; 1107 : 		{
; 1108 : 			LeagueTypes eLeague = (LeagueTypes) notification.m_iGameDataIndex;
; 1109 : 			LeagueProjectTypes eProject = (LeagueProjectTypes) notification.m_iExtraGameData;
; 1110 : 			CvPopupInfo kPopup(BUTTONPOPUP_LEAGUE_PROJECT_COMPLETED, eLeague, eProject);

	mov	DWORD PTR _kPopup$221269[esp+600], eax
	mov	eax, DWORD PTR [esi+76]
	mov	DWORD PTR _kPopup$221269[esp+608], -1
	mov	DWORD PTR _kPopup$221269[esp+620], -895157342 ; caa4fba2H

; 1111 : 			GC.GetEngineUserInterface()->AddPopup(kPopup);
; 1112 : 		}
; 1113 : 		break;

	jmp	$LN466@Activate
$LN22@Activate:

; 1001 : 
; 1002 : 	case NOTIFICATION_MAYA_LONG_COUNT:
; 1003 : 	{
; 1004 : 		if(GET_PLAYER(m_ePlayer).GetNumMayaBoosts() > 0)

	mov	ecx, DWORD PTR [edi]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	call	?GetNumMayaBoosts@CvPlayer@@QBEHXZ	; CvPlayer::GetNumMayaBoosts
	test	eax, eax
	jle	$LN51@Activate

; 1005 : 		{
; 1006 : 			CvPopupInfo kPopup(BUTTONPOPUP_CHOOSE_MAYA_BONUS, m_ePlayer, notification.m_iGameDataIndex, notification.m_iExtraGameData);

	mov	eax, DWORD PTR [esi+76]
	mov	ecx, DWORD PTR [esi+72]
	mov	edx, DWORD PTR [edi]
	xor	ebx, ebx
	push	ebx
	push	ebx
	push	ebx
	push	eax
	push	ecx
	push	edx
	push	81					; 00000051H
	lea	ecx, DWORD PTR _kPopup$221228[esp+628]
	call	??0CvPopupInfo@@QAE@W4ButtonPopupTypes@@HHHH_N1@Z ; CvPopupInfo::CvPopupInfo

; 1007 : 			GC.GetEngineUserInterface()->AddPopup(kPopup);
; 1008 : 		}
; 1009 : 	}
; 1010 : 	break;

	jmp	$LN456@Activate
$LN24@Activate:

; 982  : 	}
; 983  : 	break;
; 984  : 
; 985  : 	case NOTIFICATION_SPY_CREATED_ACTIVE_PLAYER:
; 986  : 	case NOTIFICATION_SPY_EVICTED:
; 987  : 	case NOTIFICATION_SPY_PROMOTION:
; 988  : 	{
; 989  : 		CvPopupInfo kPopup(BUTTONPOPUP_ESPIONAGE_OVERVIEW, m_ePlayer);

	mov	ecx, DWORD PTR [edi]
	mov	DWORD PTR _kPopup$221223[esp+600], ecx
	mov	DWORD PTR _kPopup$221223[esp+620], 78	; 0000004eH

; 990  : 		GC.GetEngineUserInterface()->AddPopup(kPopup);
; 991  : 	}
; 992  : 	break;

	jmp	SHORT $LN467@Activate
$LN66@Activate:

; 813  : 
; 814  : 	switch(notification.m_eNotificationType)

	cmp	eax, 294822899				; 1192a3f3H
	je	SHORT $LN6@Activate
	cmp	eax, 301374463				; 11f69bffH
	je	$LN10@Activate
	jmp	$LN2@Activate
$LN6@Activate:

; 1093 : 
; 1094 : 	case NOTIFICATION_CHOOSE_IDEOLOGY:
; 1095 : 		CvAssertMsg(notification.m_iGameDataIndex >= 0, "notification.m_iGameDataIndex is out of bounds");
; 1096 : 		if (notification.m_iGameDataIndex >= 0)

	xor	ebx, ebx
	cmp	DWORD PTR [esi+72], ebx
	jl	$LN51@Activate

; 1097 : 		{
; 1098 : 			CvPopupInfo kPopup(BUTTONPOPUP_CHOOSE_IDEOLOGY, m_ePlayer);

	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR _kPopup$221260[esp+600], eax
	or	eax, -1
	mov	DWORD PTR _kPopup$221260[esp+620], -167467402 ; f604a676H

; 1099 : 			GC.GetEngineUserInterface()->AddPopup(kPopup);
; 1100 : 		}
; 1101 : 		break;

	jmp	SHORT $LN463@Activate
$LN65@Activate:

; 813  : 
; 814  : 	switch(notification.m_eNotificationType)

	cmp	eax, 623640104				; 252bfe28H
	jg	SHORT $LN67@Activate
	je	SHORT $LN43@Activate
	cmp	eax, 507398241				; 1e3e4861H
	je	$LN15@Activate
	cmp	eax, 507779013				; 1e4417c5H
	jne	$LN2@Activate
$LN43@Activate:

; 857  : 	case NOTIFICATION_POLICY:
; 858  : 	case NOTIFICATION_FREE_POLICY:
; 859  : 	{
; 860  : 		CvPopupInfo kPopup(BUTTONPOPUP_CHOOSEPOLICY, m_ePlayer);

	mov	DWORD PTR _kPopup$221108[esp+620], 17	; 00000011H
$LN468@Activate:
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR _kPopup$221108[esp+600], eax
$LN467@Activate:
	or	eax, -1
	xor	ebx, ebx
$LN463@Activate:
	mov	DWORD PTR _kPopup$221108[esp+608], eax
$LN466@Activate:
	mov	DWORD PTR _kPopup$221108[esp+604], eax
$LN465@Activate:
	mov	BYTE PTR _kPopup$221108[esp+616], bl
	mov	DWORD PTR _kPopup$221108[esp+612], ebx
	mov	BYTE PTR _kPopup$221108[esp+624], bl
$LN470@Activate:

; 861  : 		GC.GetEngineUserInterface()->AddPopup(kPopup);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	BYTE PTR _kPopup$221108[esp+617], bl
	mov	edx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [edx+180]
	lea	eax, DWORD PTR _kPopup$221108[esp+600]
	push	eax
	call	edx

; 862  : 	}
; 863  : 	break;

	jmp	$LN51@Activate
$LN67@Activate:

; 813  : 
; 814  : 	switch(notification.m_eNotificationType)

	cmp	eax, 755914060				; 2d0e554cH
	je	$LN12@Activate
	cmp	eax, 1218150582				; 489b80b6H
	jne	$LN2@Activate
$LN46@Activate:

; 839  : 	case NOTIFICATION_TECH:
; 840  : 	case NOTIFICATION_FREE_TECH:
; 841  : 	{
; 842  : 		CvPopupInfo kPopup(BUTTONPOPUP_CHOOSETECH, m_ePlayer, notification.m_iGameDataIndex, notification.m_iExtraGameData);

	mov	eax, DWORD PTR [esi+76]
	mov	ecx, DWORD PTR [esi+72]
	mov	edx, DWORD PTR [edi]
	xor	ebx, ebx
	push	ebx
	push	ebx
	push	ebx
	push	eax
	push	ecx
	push	edx
	push	11					; 0000000bH
	lea	ecx, DWORD PTR _kPopup$221098[esp+628]
	call	??0CvPopupInfo@@QAE@W4ButtonPopupTypes@@HHHH_N1@Z ; CvPopupInfo::CvPopupInfo

; 843  : 		strcpy_s(kPopup.szText, notification.m_strMessage);

	mov	ecx, ebp
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	eax, DWORD PTR _kPopup$221098[esp+628]
	push	eax
	call	??$strcpy_s@$0CAA@@@YAHAAY0CAA@DPBD@Z	; strcpy_s<512>

; 844  : 		GC.GetEngineUserInterface()->AddPopup(kPopup);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	edx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [edx+180]
	add	esp, 8
	lea	eax, DWORD PTR _kPopup$221098[esp+600]
	push	eax
	call	edx

; 845  : 	}
; 846  : 	break;

	jmp	$LN51@Activate
$LN64@Activate:

; 813  : 
; 814  : 	switch(notification.m_eNotificationType)

	cmp	eax, 1784381333				; 6a5b7f95H
	jg	$LN68@Activate
	je	$LN32@Activate
	cmp	eax, 1523558135				; 5acfa6f7H
	jg	SHORT $LN69@Activate
	je	SHORT $LN46@Activate
	cmp	eax, 1279997337				; 4c4b3599H
	je	SHORT $LN29@Activate
	cmp	eax, 1376002242				; 520420c2H
	jne	$LN2@Activate

; 1011 : 
; 1012 : 	case NOTIFICATION_FAITH_GREAT_PERSON:
; 1013 : 	{
; 1014 : 		if(GET_PLAYER(m_ePlayer).GetNumFaithGreatPeople() > 0)

	mov	ecx, DWORD PTR [edi]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	call	?GetNumFaithGreatPeople@CvPlayer@@QBEHXZ ; CvPlayer::GetNumFaithGreatPeople
	test	eax, eax
	jle	$LN51@Activate

; 1015 : 		{
; 1016 : 			CvPopupInfo kPopup(BUTTONPOPUP_CHOOSE_FAITH_GREAT_PERSON, m_ePlayer, notification.m_iGameDataIndex, notification.m_iExtraGameData);

	mov	eax, DWORD PTR [esi+76]
	mov	ecx, DWORD PTR [esi+72]
	mov	edx, DWORD PTR [edi]
	xor	ebx, ebx
	push	ebx
	push	ebx
	push	ebx
	push	eax
	push	ecx
	push	edx
	push	82					; 00000052H
	lea	ecx, DWORD PTR _kPopup$221231[esp+628]
	call	??0CvPopupInfo@@QAE@W4ButtonPopupTypes@@HHHH_N1@Z ; CvPopupInfo::CvPopupInfo

; 1017 : 			GC.GetEngineUserInterface()->AddPopup(kPopup);
; 1018 : 		}
; 1019 : 	}
; 1020 : 	break;

	jmp	$LN456@Activate
$LN29@Activate:

; 952  : 	case NOTIFICATION_FOUND_PANTHEON:
; 953  : 	{
; 954  : 		CvPopupInfo kPopup(BUTTONPOPUP_FOUND_PANTHEON, m_ePlayer, true /*bPantheonBelief*/);

	mov	ecx, DWORD PTR [edi]
	mov	DWORD PTR _kPopup$221215[esp+604], ebx
	mov	DWORD PTR _kPopup$221215[esp+600], ecx
	mov	DWORD PTR _kPopup$221215[esp+608], -1
	xor	ebx, ebx
	mov	DWORD PTR _kPopup$221215[esp+620], 76	; 0000004cH

; 955  : 		GC.GetEngineUserInterface()->AddPopup(kPopup);
; 956  : 	}
; 957  : 	break;

	jmp	$LN465@Activate
$LN69@Activate:

; 813  : 
; 814  : 	switch(notification.m_eNotificationType)

	cmp	eax, 1591330057				; 5ed9c509H
	je	SHORT $LN36@Activate
	cmp	eax, 1716970771				; 6656e513H
	je	$LN10@Activate
	jmp	$LN2@Activate
$LN36@Activate:

; 915  : 	case NOTIFICATION_UNIT_PROMOTION:
; 916  : 	{
; 917  : 		UnitHandle pUnit = GET_PLAYER(m_ePlayer).getUnit(notification.m_iExtraGameData);

	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR [esi+76]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	eax
	call	?getUnit@CvPlayer@@QAEPAVCvUnit@@H@Z	; CvPlayer::getUnit
	push	eax
	lea	ecx, DWORD PTR _pUnit$221132[esp+604]
	call	??0?$FObjectHandle@VCvUnit@@@@QAE@PAVCvUnit@@@Z ; FObjectHandle<CvUnit>::FObjectHandle<CvUnit>

; 918  : 		if(pUnit)

	mov	ebp, DWORD PTR _pUnit$221132[esp+600]
	xor	ebx, ebx
	mov	DWORD PTR __$EHRec$[esp+608], 2
	cmp	ebp, ebx
	je	$LN304@Activate

; 919  : 		{
; 920  : 			CvPlot* pPlot = pUnit->plot();

	mov	ecx, ebp
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot

; 921  : 			if(pPlot)

	cmp	eax, ebx
	je	$LN304@Activate

; 922  : 			{
; 923  : 				auto_ptr<ICvPlot1> pDllPlot = GC.WrapPlotPointer(pPlot);

	push	eax
	lea	ecx, DWORD PTR $T224309[esp+604]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?WrapPlotPointer@CvGlobals@@QAE?AV?$auto_ptr@VICvPlot1@@@std@@PAVCvPlot@@@Z ; CvGlobals::WrapPlotPointer
	mov	esi, DWORD PTR [eax]
	mov	DWORD PTR [eax], ebx
	mov	DWORD PTR _pDllPlot$221137[esp+600], esi
	mov	eax, DWORD PTR $T224309[esp+600]
	mov	BYTE PTR __$EHRec$[esp+608], 3
	cmp	eax, ebx
	je	SHORT $LN269@Activate
	mov	edx, DWORD PTR [eax]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN269@Activate:

; 924  : 				auto_ptr<ICvUnit1> pDllUnit = GC.WrapUnitPointer(pUnit.pointer());

	push	ebp
	lea	ecx, DWORD PTR $T224311[esp+604]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?WrapUnitPointer@CvGlobals@@QAE?AV?$auto_ptr@VICvUnit1@@@std@@PAVCvUnit@@@Z ; CvGlobals::WrapUnitPointer
	mov	edi, DWORD PTR [eax]
	mov	DWORD PTR [eax], ebx
	mov	DWORD PTR _pDllUnit$221187[esp+600], edi
	mov	eax, DWORD PTR $T224311[esp+600]
	mov	BYTE PTR __$EHRec$[esp+608], 4
	cmp	eax, ebx
	je	SHORT $LN282@Activate
	mov	edx, DWORD PTR [eax]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN282@Activate:

; 925  : 
; 926  : 				GC.GetEngineUserInterface()->lookAt(pDllPlot.get(), CAMERALOOKAT_NORMAL);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+272]
	push	ebx
	push	esi
	call	eax

; 927  : 				GC.GetEngineUserInterface()->selectUnit(pDllUnit.get(), false);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+56]
	push	ebx
	push	ebx
	push	ebx
	push	edi
	call	eax

; 928  : 				gDLL->GameplayDoFX(pDllPlot.get());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+708]
	push	-1
	push	esi
	call	eax

; 929  : 			}

	mov	BYTE PTR __$EHRec$[esp+608], 3
	cmp	edi, ebx
	je	SHORT $LN299@Activate
	mov	ecx, DWORD PTR [edi]
	mov	edx, DWORD PTR [ecx+4]
	push	edi
	call	edx
$LN299@Activate:
	mov	BYTE PTR __$EHRec$[esp+608], 2
	cmp	esi, ebx
	je	SHORT $LN304@Activate
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+4]
	push	esi
	call	ecx
$LN304@Activate:

; 930  : 		}
; 931  : 	}

	mov	DWORD PTR __$EHRec$[esp+608], -1
	cmp	ebp, ebx
	je	$LN51@Activate
	mov	ecx, ebp
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification

; 932  : 	break;

	jmp	$LN51@Activate
$LN68@Activate:

; 813  : 
; 814  : 	switch(notification.m_eNotificationType)

	cmp	eax, 2052101992				; 7a509768H
	jg	$LN70@Activate
	je	$LN10@Activate
	cmp	eax, 1989681641				; 769821e9H
	je	$LN42@Activate
	cmp	eax, 1996573794				; 77014c62H
	jne	$LN2@Activate

; 890  : 	case NOTIFICATION_PRODUCTION:
; 891  : 	{
; 892  : 		CvCity* pCity = GC.getMap().plot(notification.m_iX, notification.m_iY)->getPlotCity();//GET_PLAYER(m_ePlayer).getCity(notification.m_iGameDataIndex);

	mov	eax, DWORD PTR [esi+64]
	mov	ebp, DWORD PTR [esi+68]
	cmp	eax, -2147483647			; 80000001H
	je	$LN209@Activate
	cmp	ebp, -2147483647			; 80000001H
	je	$LN209@Activate
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	ecx, DWORD PTR [edx+4020]
	xor	ebx, ebx
	cmp	BYTE PTR [edx+4056], bl
	je	SHORT $LN219@Activate
	cmp	eax, ebx
	jge	SHORT $LN221@Activate
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	edi, DWORD PTR [ecx+4020]
	cdq
	idiv	edi
	mov	ecx, edx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	add	ecx, edi
	jmp	SHORT $LN223@Activate
$LN221@Activate:
	cmp	eax, ecx
	jl	SHORT $LN219@Activate
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	cdq
	idiv	DWORD PTR [ecx+4020]
	mov	ecx, edx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	jmp	SHORT $LN223@Activate
$LN219@Activate:
	mov	ecx, eax
$LN223@Activate:
	mov	edi, DWORD PTR [edx+4024]
	cmp	BYTE PTR [edx+4057], bl
	je	SHORT $LN229@Activate
	cmp	ebp, ebx
	jge	SHORT $LN231@Activate
	mov	eax, ebp
	cdq
	idiv	edi
	add	edx, edi
	jmp	SHORT $LN233@Activate
$LN231@Activate:
	cmp	ebp, edi
	jl	SHORT $LN229@Activate
	mov	eax, ebp
	cdq
	idiv	edi
	jmp	SHORT $LN233@Activate
$LN229@Activate:
	mov	edx, ebp
$LN233@Activate:
	cmp	ecx, ebx
	jl	SHORT $LN213@Activate
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	eax, DWORD PTR [eax+4020]
	cmp	ecx, eax
	jge	SHORT $LN213@Activate
	cmp	edx, ebx
	jl	SHORT $LN213@Activate
	cmp	edx, edi
	jge	SHORT $LN213@Activate
	imul	edx, eax
	add	edx, ecx
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	imul	edx, 484				; 000001e4H
	add	edx, DWORD PTR [ecx+4068]
	mov	ecx, edx
	jmp	SHORT $LN211@Activate
$LN209@Activate:
	xor	ebx, ebx
$LN213@Activate:
	xor	ecx, ecx
$LN211@Activate:
	call	?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ	; CvPlot::getPlotCity

; 893  : 		if(!pCity)

	cmp	eax, ebx
	je	$LN51@Activate

; 894  : 		{
; 895  : 			return;
; 896  : 		}
; 897  : 
; 898  : 		CvPopupInfo kPopupInfo(BUTTONPOPUP_CHOOSEPRODUCTION);

	or	ecx, -1
	mov	DWORD PTR _kPopupInfo$221127[esp+600], ecx
	mov	DWORD PTR _kPopupInfo$221127[esp+604], ecx
	mov	DWORD PTR _kPopupInfo$221127[esp+608], ecx

; 899  : 
; 900  : 		kPopupInfo.iData1 = pCity->GetID();
; 901  : 
; 902  : 		kPopupInfo.bOption2 = false;	// Not in purchase mode
; 903  : 
; 904  : 		// slewis - do we need the stuff below?
; 905  : 		//kPopupInfo.setOption1(false);
; 906  : 
; 907  : 		OrderTypes eOrder = (OrderTypes) notification.m_iGameDataIndex;
; 908  : 		int iItemID = notification.m_iExtraGameData;
; 909  : 		kPopupInfo.iData2 = eOrder;
; 910  : 		kPopupInfo.iData3 = iItemID;

	mov	ecx, DWORD PTR [esi+76]
	mov	DWORD PTR _kPopupInfo$221127[esp+612], ebx
	mov	BYTE PTR _kPopupInfo$221127[esp+616], bl
	mov	BYTE PTR _kPopupInfo$221127[esp+617], bl
	mov	DWORD PTR _kPopupInfo$221127[esp+620], 16 ; 00000010H
	mov	BYTE PTR _kPopupInfo$221127[esp+624], bl
	mov	edx, DWORD PTR [eax+120]
	mov	eax, DWORD PTR [esi+72]
	mov	DWORD PTR _kPopupInfo$221127[esp+600], edx
	mov	DWORD PTR _kPopupInfo$221127[esp+604], eax
	mov	DWORD PTR _kPopupInfo$221127[esp+608], ecx

; 911  : 
; 912  : 		GC.GetEngineUserInterface()->AddPopup(kPopupInfo);
; 913  : 	}
; 914  : 	break;

	jmp	$LN470@Activate
$LN42@Activate:

; 864  : 	case NOTIFICATION_DIPLO_VOTE:
; 865  : 	{
; 866  : 		CvPopupInfo kPopup(BUTTONPOPUP_DIPLO_VOTE, m_ePlayer);

	mov	DWORD PTR _kPopup$221110[esp+620], 65	; 00000041H

; 867  : 		GC.GetEngineUserInterface()->AddPopup(kPopup);
; 868  : 	}
; 869  : 	break;

	jmp	$LN468@Activate
$LN70@Activate:

; 813  : 
; 814  : 	switch(notification.m_eNotificationType)

	cmp	eax, 2128612861				; 7ee00dfdH
$LN458@Activate:
	je	$LN27@Activate
$LN2@Activate:

; 1114 : #endif
; 1115 : 
; 1116 : 	default:	// Default behavior is to move the camera to the X,Y passed in
; 1117 : 	{
; 1118 : 		CvPlot* pPlot = GC.getMap().plot(notification.m_iX, notification.m_iY);

	mov	ebp, DWORD PTR [esi+68]
	mov	esi, DWORD PTR [esi+64]
	cmp	esi, -2147483647			; 80000001H
	je	$LN51@Activate
	cmp	ebp, -2147483647			; 80000001H
	je	$LN51@Activate
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	al, BYTE PTR [edx+4056]
	mov	ecx, DWORD PTR [edx+4020]
	xor	ebx, ebx
	cmp	al, bl
	je	SHORT $LN398@Activate
	cmp	esi, ebx
	jge	SHORT $LN400@Activate
	mov	eax, esi
	cdq
	idiv	ecx
	mov	esi, edx
	add	esi, ecx
	jmp	SHORT $LN469@Activate
$LN400@Activate:
	cmp	esi, ecx
	jl	SHORT $LN398@Activate
	mov	eax, esi
	cdq
	idiv	ecx
	mov	esi, edx
$LN469@Activate:
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
$LN398@Activate:
	mov	al, BYTE PTR [edx+4057]
	mov	edi, DWORD PTR [edx+4024]
	cmp	al, bl
	je	SHORT $LN408@Activate
	cmp	ebp, ebx
	jge	SHORT $LN410@Activate
	mov	eax, ebp
	cdq
	idiv	edi
	add	edx, edi
	jmp	SHORT $LN412@Activate
$LN410@Activate:
	cmp	ebp, edi
	jl	SHORT $LN408@Activate
	mov	eax, ebp
	cdq
	idiv	edi
	jmp	SHORT $LN412@Activate
$LN408@Activate:
	mov	edx, ebp
$LN412@Activate:
	cmp	esi, ebx
	jl	$LN51@Activate
	cmp	esi, ecx
	jge	$LN51@Activate
	cmp	edx, ebx
	jl	$LN51@Activate
	cmp	edx, edi
	jge	$LN51@Activate
	imul	ecx, edx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	add	ecx, esi
	imul	ecx, 484				; 000001e4H
	add	ecx, DWORD PTR [edx+4068]

; 1119 : 		if(pPlot)

	cmp	ecx, ebx
	je	$LN51@Activate

; 1120 : 		{
; 1121 : 			auto_ptr<ICvPlot1> pDllPlot = GC.WrapPlotPointer(pPlot);

	push	ecx
	lea	eax, DWORD PTR $T224314[esp+604]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?WrapPlotPointer@CvGlobals@@QAE?AV?$auto_ptr@VICvPlot1@@@std@@PAVCvPlot@@@Z ; CvGlobals::WrapPlotPointer
	mov	esi, DWORD PTR [eax]
	mov	DWORD PTR [eax], ebx
	mov	DWORD PTR _pDllPlot$221274[esp+600], esi
	mov	eax, DWORD PTR $T224314[esp+600]
	mov	DWORD PTR __$EHRec$[esp+608], 5
	cmp	eax, ebx
	je	SHORT $LN434@Activate
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	push	eax
	call	edx
$LN434@Activate:

; 1122 : 
; 1123 : 			GC.GetEngineUserInterface()->lookAt(pDllPlot.get(), CAMERALOOKAT_NORMAL);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+272]
	push	ebx
	push	esi
	call	edx

; 1124 : 			gDLL->GameplayDoFX(pDllPlot.get());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+708]
	push	-1
	push	esi
	call	edx

; 1125 : 		}

	mov	DWORD PTR __$EHRec$[esp+608], -1
	cmp	esi, ebx
	je	SHORT $LN51@Activate
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+4]
	push	esi
	call	ecx

; 1126 : 	}
; 1127 : 	break;

	jmp	SHORT $LN51@Activate
$LN27@Activate:

; 970  : 		kPopup.iData1 = notification.m_iX;

	mov	edx, DWORD PTR [esi+64]

; 971  : 		kPopup.iData2 = notification.m_iY;

	mov	ecx, DWORD PTR [esi+68]
	xor	ebx, ebx

; 972  : 
; 973  : 		if(notification.m_eNotificationType == NOTIFICATION_FOUND_RELIGION)

	cmp	eax, 2128612861				; 7ee00dfdH
	mov	DWORD PTR _kPopup$221219[esp+600], edx
	sete	dl
	mov	DWORD PTR _kPopup$221219[esp+620], 77	; 0000004dH
	mov	DWORD PTR _kPopup$221219[esp+604], ecx
	mov	BYTE PTR _kPopup$221219[esp+616], dl
$LN457@Activate:

; 965  : 
; 966  : 	case NOTIFICATION_FOUND_RELIGION:
; 967  : 	case NOTIFICATION_ENHANCE_RELIGION:
; 968  : 	{
; 969  : 		CvPopupInfo kPopup(BUTTONPOPUP_FOUND_RELIGION, m_ePlayer);

	mov	DWORD PTR _kPopup$221219[esp+608], -1
$LN459@Activate:
	mov	BYTE PTR _kPopup$221219[esp+624], bl
	mov	BYTE PTR _kPopup$221219[esp+617], bl
	mov	DWORD PTR _kPopup$221219[esp+612], ebx
$LN456@Activate:

; 974  : 		{
; 975  : 			kPopup.bOption1 = true;
; 976  : 		}
; 977  : 		else
; 978  : 		{
; 979  : 			kPopup.bOption1 = false;
; 980  : 		}
; 981  : 		GC.GetEngineUserInterface()->AddPopup(kPopup);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+180]
	lea	edx, DWORD PTR _kPopup$221219[esp+600]
	push	edx
	call	eax
$LN51@Activate:

; 1128 : 	}
; 1129 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+600]
	pop	edi
	pop	esi
	pop	ebp
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	add	esp, 584				; 00000248H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Activate@CvNotifications@@QAEXAAUNotification@1@@Z$3:
	lea	ecx, DWORD PTR _pDllPlot$221116[ebp]
	jmp	??1?$auto_ptr@VICvPlot1@@@std@@QAE@XZ	; std::auto_ptr<ICvPlot1>::~auto_ptr<ICvPlot1>
__unwindfunclet$?Activate@CvNotifications@@QAEXAAUNotification@1@@Z$1:
	lea	ecx, DWORD PTR _pDllPlot$221086[ebp]
	jmp	??1?$auto_ptr@VICvPlot1@@@std@@QAE@XZ	; std::auto_ptr<ICvPlot1>::~auto_ptr<ICvPlot1>
__unwindfunclet$?Activate@CvNotifications@@QAEXAAUNotification@1@@Z$5:
	lea	ecx, DWORD PTR _pUnit$221132[ebp]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__unwindfunclet$?Activate@CvNotifications@@QAEXAAUNotification@1@@Z$7:
	lea	ecx, DWORD PTR _pDllPlot$221137[ebp]
	jmp	??1?$auto_ptr@VICvPlot1@@@std@@QAE@XZ	; std::auto_ptr<ICvPlot1>::~auto_ptr<ICvPlot1>
__unwindfunclet$?Activate@CvNotifications@@QAEXAAUNotification@1@@Z$9:
	lea	ecx, DWORD PTR _pDllUnit$221187[ebp]
	jmp	??1?$auto_ptr@VICvUnit1@@@std@@QAE@XZ	; std::auto_ptr<ICvUnit1>::~auto_ptr<ICvUnit1>
__unwindfunclet$?Activate@CvNotifications@@QAEXAAUNotification@1@@Z$11:
	lea	ecx, DWORD PTR _pDllPlot$221274[ebp]
	jmp	??1?$auto_ptr@VICvPlot1@@@std@@QAE@XZ	; std::auto_ptr<ICvPlot1>::~auto_ptr<ICvPlot1>
__ehhandler$?Activate@CvNotifications@@QAEXAAUNotification@1@@Z:
	mov	eax, OFFSET __ehfuncinfo$?Activate@CvNotifications@@QAEXAAUNotification@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Activate@CvNotifications@@QAEXAAUNotification@1@@Z ENDP ; CvNotifications::Activate
PUBLIC	?IsNotificationRedundant@CvNotifications@@QAE_NAAUNotification@1@@Z ; CvNotifications::IsNotificationRedundant
; Function compile flags: /Ogtpy
;	COMDAT ?IsNotificationRedundant@CvNotifications@@QAE_NAAUNotification@1@@Z
_TEXT	SEGMENT
tv641 = -4						; size = 4
_notification$ = 8					; size = 4
?IsNotificationRedundant@CvNotifications@@QAE_NAAUNotification@1@@Z PROC ; CvNotifications::IsNotificationRedundant, COMDAT
; _this$ = ecx

; 1133 : {

	push	ecx

; 1134 : 	switch(notification.m_eNotificationType)

	mov	edx, DWORD PTR _notification$[esp]
	push	ebx
	push	ebp
	push	esi
	mov	esi, ecx
	mov	ecx, DWORD PTR [edx]
	cmp	ecx, 623640104				; 252bfe28H
	push	edi
	mov	DWORD PTR tv641[esp+20], ecx
	jg	$LN82@IsNotifica@2
	je	$LN62@IsNotifica@2
	cmp	ecx, -372818113				; e9c73f3fH
	jg	$LN83@IsNotifica@2
	je	$LN21@IsNotifica@2
	cmp	ecx, -1633735706			; 9e9f2be6H
	jg	$LN84@IsNotifica@2
	je	SHORT $LN44@IsNotifica@2
	cmp	ecx, -2068323322			; 84b7e406H
	je	$LN21@IsNotifica@2
	cmp	ecx, -1746998481			; 97deeb2fH
$LN200@IsNotifica@2:
	je	$LN15@IsNotifica@2
$LN19@IsNotifica@2:
	pop	edi
	pop	esi
	pop	ebp

; 1386 : 			}
; 1387 : 		}
; 1388 : 
; 1389 : 		return false;

	xor	al, al
	pop	ebx

; 1457 : 		break;
; 1458 : 	}
; 1459 : }

	pop	ecx
	ret	4
$LN44@IsNotifica@2:

; 1266 : 			}
; 1267 : 		}
; 1268 : 
; 1269 : 		return false;
; 1270 : 	}
; 1271 : 	break;
; 1272 : 
; 1273 : 	case NOTIFICATION_ENEMY_IN_TERRITORY:
; 1274 : 	{
; 1275 : 		int iIndex = m_iNotificationsBeginIndex;

	mov	edi, DWORD PTR [esi+20]
	mov	ebp, DWORD PTR [esi+24]

; 1276 : 		while(iIndex != m_iNotificationsEndIndex)

	cmp	edi, ebp
	je	SHORT $LN19@IsNotifica@2
	mov	ebx, DWORD PTR [esi+8]
	jmp	SHORT $LN43@IsNotifica@2
$LL190@IsNotifica@2:
	mov	edx, DWORD PTR _notification$[esp+16]
	mov	ecx, DWORD PTR tv641[esp+20]
$LN43@IsNotifica@2:

; 1277 : 		{
; 1278 : 			// Only one "enemy in territory" notification at a time
; 1279 : 			if(notification.m_eNotificationType == m_aNotifications[iIndex].m_eNotificationType)

	mov	eax, edi
	imul	eax, 92					; 0000005cH
	add	eax, ebx
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN40@IsNotifica@2

; 1280 : 			{
; 1281 : 				if(!notification.m_bDismissed && !m_aNotifications[iIndex].m_bDismissed)

	cmp	BYTE PTR [edx+89], 0
	jne	SHORT $LN40@IsNotifica@2
	cmp	BYTE PTR [eax+89], 0
	je	$LN185@IsNotifica@2
$LN40@IsNotifica@2:

; 1282 : 				{
; 1283 : 					return true;
; 1284 : 				}
; 1285 : 			}
; 1286 : 
; 1287 : 			iIndex++;
; 1288 : 			if(iIndex >= (int)m_aNotifications.size())

	mov	ecx, DWORD PTR [esi+12]
	sub	ecx, ebx
	mov	eax, -1307163959			; b21642c9H
	imul	ecx
	add	edx, ecx
	sar	edx, 6
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	inc	edi
	add	ecx, edx
	cmp	edi, ecx
	jl	SHORT $LN39@IsNotifica@2

; 1289 : 			{
; 1290 : 				iIndex = 0;

	xor	edi, edi
$LN39@IsNotifica@2:

; 1276 : 		while(iIndex != m_iNotificationsEndIndex)

	cmp	edi, ebp
	jne	SHORT $LL190@IsNotifica@2
	pop	edi
	pop	esi
	pop	ebp

; 1386 : 			}
; 1387 : 		}
; 1388 : 
; 1389 : 		return false;

	xor	al, al
	pop	ebx

; 1457 : 		break;
; 1458 : 	}
; 1459 : }

	pop	ecx
	ret	4
$LN84@IsNotifica@2:

; 1134 : 	switch(notification.m_eNotificationType)

	cmp	ecx, -1103533898			; be3968b6H
	jmp	SHORT $LN200@IsNotifica@2
$LN83@IsNotifica@2:
	cmp	ecx, 294822899				; 1192a3f3H
	jg	SHORT $LN85@IsNotifica@2
	je	$LN21@IsNotifica@2
	cmp	ecx, 84632199				; 050b6287H
	je	$LN21@IsNotifica@2
	cmp	ecx, 101802557				; 0611623dH
	je	$LN9@IsNotifica@2
	pop	edi
	pop	esi
	pop	ebp

; 1386 : 			}
; 1387 : 		}
; 1388 : 
; 1389 : 		return false;

	xor	al, al
	pop	ebx

; 1457 : 		break;
; 1458 : 	}
; 1459 : }

	pop	ecx
	ret	4
$LN85@IsNotifica@2:

; 1134 : 	switch(notification.m_eNotificationType)

	cmp	ecx, 507779013				; 1e4417c5H
	jne	$LN19@IsNotifica@2

; 1213 : 			}
; 1214 : 		}
; 1215 : 
; 1216 : 		return false;
; 1217 : 	}
; 1218 : 	break;
; 1219 : 
; 1220 : 	case NOTIFICATION_FREE_POLICY:
; 1221 : 	{
; 1222 : 		int iIndex = m_iNotificationsBeginIndex;

	mov	edi, DWORD PTR [esi+20]
	mov	ebp, DWORD PTR [esi+24]

; 1223 : 		while(iIndex != m_iNotificationsEndIndex)

	cmp	edi, ebp
	je	$LN19@IsNotifica@2
	mov	ebx, DWORD PTR [esi+8]
	jmp	SHORT $LN55@IsNotifica@2
	npad	5
$LL191@IsNotifica@2:
	mov	edx, DWORD PTR _notification$[esp+16]
	mov	ecx, DWORD PTR tv641[esp+20]
$LN55@IsNotifica@2:

; 1224 : 		{
; 1225 : 			if(notification.m_eNotificationType == m_aNotifications[iIndex].m_eNotificationType)

	mov	eax, edi
	imul	eax, 92					; 0000005cH
	add	eax, ebx
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN52@IsNotifica@2

; 1226 : 			{
; 1227 : 				if(!notification.m_bDismissed && !m_aNotifications[iIndex].m_bDismissed)

	cmp	BYTE PTR [edx+89], 0
	jne	SHORT $LN52@IsNotifica@2
	cmp	BYTE PTR [eax+89], 0
	je	$LN185@IsNotifica@2
$LN52@IsNotifica@2:

; 1228 : 				{
; 1229 : 					// we've already added a tech notification, don't need another
; 1230 : 					return true;
; 1231 : 				}
; 1232 : 			}
; 1233 : 
; 1234 : 
; 1235 : 			iIndex++;
; 1236 : 			if(iIndex >= (int)m_aNotifications.size())

	mov	ecx, DWORD PTR [esi+12]
	sub	ecx, ebx
	mov	eax, -1307163959			; b21642c9H
	imul	ecx
	add	edx, ecx
	sar	edx, 6
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	inc	edi
	add	ecx, edx
	cmp	edi, ecx
	jl	SHORT $LN51@IsNotifica@2

; 1237 : 			{
; 1238 : 				iIndex = 0;

	xor	edi, edi
$LN51@IsNotifica@2:

; 1223 : 		while(iIndex != m_iNotificationsEndIndex)

	cmp	edi, ebp
	jne	SHORT $LL191@IsNotifica@2
	pop	edi
	pop	esi
	pop	ebp

; 1386 : 			}
; 1387 : 		}
; 1388 : 
; 1389 : 		return false;

	xor	al, al
	pop	ebx

; 1457 : 		break;
; 1458 : 	}
; 1459 : }

	pop	ecx
	ret	4
$LN62@IsNotifica@2:

; 1187 : 			}
; 1188 : 		}
; 1189 : 
; 1190 : 		return false;
; 1191 : 	}
; 1192 : 	break;
; 1193 : 
; 1194 : 	case NOTIFICATION_POLICY:
; 1195 : 	{
; 1196 : 		int iIndex = m_iNotificationsBeginIndex;

	mov	edi, DWORD PTR [esi+20]
	mov	ebp, DWORD PTR [esi+24]

; 1197 : 		while(iIndex != m_iNotificationsEndIndex)

	cmp	edi, ebp
	je	$LN19@IsNotifica@2
	mov	ebx, DWORD PTR [esi+8]
	jmp	SHORT $LN61@IsNotifica@2
$LL192@IsNotifica@2:
	mov	edx, DWORD PTR _notification$[esp+16]
	mov	ecx, DWORD PTR tv641[esp+20]
$LN61@IsNotifica@2:

; 1198 : 		{
; 1199 : 			if(notification.m_eNotificationType == m_aNotifications[iIndex].m_eNotificationType)

	mov	eax, edi
	imul	eax, 92					; 0000005cH
	add	eax, ebx
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN58@IsNotifica@2

; 1200 : 			{
; 1201 : 				if(!notification.m_bDismissed && !m_aNotifications[iIndex].m_bDismissed)

	cmp	BYTE PTR [edx+89], 0
	jne	SHORT $LN58@IsNotifica@2
	cmp	BYTE PTR [eax+89], 0
	je	$LN185@IsNotifica@2
$LN58@IsNotifica@2:

; 1202 : 				{
; 1203 : 					// we've already added a policy notification, don't need another
; 1204 : 					return true;
; 1205 : 				}
; 1206 : 			}
; 1207 : 
; 1208 : 
; 1209 : 			iIndex++;
; 1210 : 			if(iIndex >= (int)m_aNotifications.size())

	mov	ecx, DWORD PTR [esi+12]
	sub	ecx, ebx
	mov	eax, -1307163959			; b21642c9H
	imul	ecx
	add	edx, ecx
	sar	edx, 6
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	inc	edi
	add	ecx, edx
	cmp	edi, ecx
	jl	SHORT $LN57@IsNotifica@2

; 1211 : 			{
; 1212 : 				iIndex = 0;

	xor	edi, edi
$LN57@IsNotifica@2:

; 1197 : 		while(iIndex != m_iNotificationsEndIndex)

	cmp	edi, ebp
	jne	SHORT $LL192@IsNotifica@2
	pop	edi
	pop	esi
	pop	ebp

; 1386 : 			}
; 1387 : 		}
; 1388 : 
; 1389 : 		return false;

	xor	al, al
	pop	ebx

; 1457 : 		break;
; 1458 : 	}
; 1459 : }

	pop	ecx
	ret	4
$LN82@IsNotifica@2:

; 1134 : 	switch(notification.m_eNotificationType)

	cmp	ecx, 1523558135				; 5acfa6f7H
	jg	$LN86@IsNotifica@2
	je	$LN77@IsNotifica@2
	cmp	ecx, 1279997337				; 4c4b3599H
	jg	$LN87@IsNotifica@2
	je	$LN21@IsNotifica@2
	cmp	ecx, 755914060				; 2d0e554cH
	je	SHORT $LN15@IsNotifica@2
	cmp	ecx, 1218150582				; 489b80b6H
	jne	$LN19@IsNotifica@2

; 1161 : 			}
; 1162 : 		}
; 1163 : 
; 1164 : 		return false;
; 1165 : 	}
; 1166 : 	break;
; 1167 : 
; 1168 : 	case NOTIFICATION_FREE_TECH:
; 1169 : 	{
; 1170 : 		int iIndex = m_iNotificationsBeginIndex;

	mov	edi, DWORD PTR [esi+20]
	mov	ebp, DWORD PTR [esi+24]

; 1171 : 		while(iIndex != m_iNotificationsEndIndex)

	cmp	edi, ebp
	je	$LN19@IsNotifica@2
	mov	ebx, DWORD PTR [esi+8]
	jmp	SHORT $LN67@IsNotifica@2
	npad	2
$LL193@IsNotifica@2:
	mov	edx, DWORD PTR _notification$[esp+16]
	mov	ecx, DWORD PTR tv641[esp+20]
$LN67@IsNotifica@2:

; 1172 : 		{
; 1173 : 			if(notification.m_eNotificationType == m_aNotifications[iIndex].m_eNotificationType)

	mov	eax, edi
	imul	eax, 92					; 0000005cH
	add	eax, ebx
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN64@IsNotifica@2

; 1174 : 			{
; 1175 : 				if(!notification.m_bDismissed && !m_aNotifications[iIndex].m_bDismissed)

	cmp	BYTE PTR [edx+89], 0
	jne	SHORT $LN64@IsNotifica@2
	cmp	BYTE PTR [eax+89], 0
	je	$LN185@IsNotifica@2
$LN64@IsNotifica@2:

; 1176 : 				{
; 1177 : 					// we've already added a free tech notification, don't need another
; 1178 : 					return true;
; 1179 : 				}
; 1180 : 			}
; 1181 : 
; 1182 : 
; 1183 : 			iIndex++;
; 1184 : 			if(iIndex >= (int)m_aNotifications.size())

	mov	ecx, DWORD PTR [esi+12]
	sub	ecx, ebx
	mov	eax, -1307163959			; b21642c9H
	imul	ecx
	add	edx, ecx
	sar	edx, 6
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	inc	edi
	add	ecx, edx
	cmp	edi, ecx
	jl	SHORT $LN63@IsNotifica@2

; 1185 : 			{
; 1186 : 				iIndex = 0;

	xor	edi, edi
$LN63@IsNotifica@2:

; 1171 : 		while(iIndex != m_iNotificationsEndIndex)

	cmp	edi, ebp
	jne	SHORT $LL193@IsNotifica@2
	pop	edi
	pop	esi
	pop	ebp

; 1386 : 			}
; 1387 : 		}
; 1388 : 
; 1389 : 		return false;

	xor	al, al
	pop	ebx

; 1457 : 		break;
; 1458 : 	}
; 1459 : }

	pop	ecx
	ret	4
$LN15@IsNotifica@2:

; 1390 : 	}
; 1391 : 	break;
; 1392 : 
; 1393 : 	case NOTIFICATION_LEAGUE_CALL_FOR_PROPOSALS:
; 1394 : 	case NOTIFICATION_LEAGUE_CALL_FOR_VOTES:
; 1395 : 	case NOTIFICATION_LEAGUE_VOTING_SOON:
; 1396 : 	{
; 1397 : 		int iIndex = m_iNotificationsBeginIndex;

	mov	edi, DWORD PTR [esi+20]
	mov	ebp, DWORD PTR [esi+24]

; 1398 : 		while(iIndex != m_iNotificationsEndIndex)

	cmp	edi, ebp
	je	$LN19@IsNotifica@2
	mov	ebx, DWORD PTR [esi+8]
	jmp	SHORT $LN14@IsNotifica@2
$LL194@IsNotifica@2:
	mov	edx, DWORD PTR _notification$[esp+16]
	mov	ecx, DWORD PTR tv641[esp+20]
$LN14@IsNotifica@2:

; 1399 : 		{
; 1400 : 			if(notification.m_eNotificationType == m_aNotifications[iIndex].m_eNotificationType)

	mov	eax, edi
	imul	eax, 92					; 0000005cH
	add	eax, ebx
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN11@IsNotifica@2

; 1401 : 			{
; 1402 : 				if(!notification.m_bDismissed && !m_aNotifications[iIndex].m_bDismissed)

	cmp	BYTE PTR [edx+89], 0
	jne	SHORT $LN11@IsNotifica@2
	cmp	BYTE PTR [eax+89], 0
	je	$LN185@IsNotifica@2
$LN11@IsNotifica@2:

; 1403 : 				{
; 1404 : 					// we've already added one of this notification type, don't need another
; 1405 : 					return true;
; 1406 : 				}
; 1407 : 			}
; 1408 : 
; 1409 : 
; 1410 : 			iIndex++;
; 1411 : 			if(iIndex >= (int)m_aNotifications.size())

	mov	ecx, DWORD PTR [esi+12]
	sub	ecx, ebx
	mov	eax, -1307163959			; b21642c9H
	imul	ecx
	add	edx, ecx
	sar	edx, 6
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	inc	edi
	add	ecx, edx
	cmp	edi, ecx
	jl	SHORT $LN10@IsNotifica@2

; 1412 : 			{
; 1413 : 				iIndex = 0;

	xor	edi, edi
$LN10@IsNotifica@2:

; 1398 : 		while(iIndex != m_iNotificationsEndIndex)

	cmp	edi, ebp
	jne	SHORT $LL194@IsNotifica@2
	pop	edi
	pop	esi
	pop	ebp
	xor	al, al
	pop	ebx

; 1457 : 		break;
; 1458 : 	}
; 1459 : }

	pop	ecx
	ret	4
$LN87@IsNotifica@2:

; 1134 : 	switch(notification.m_eNotificationType)

	cmp	ecx, 1319111517				; 4ea00b5dH
	jne	$LN19@IsNotifica@2

; 1319 : 			}
; 1320 : 		}
; 1321 : 
; 1322 : 		return false;
; 1323 : 	}
; 1324 : 	break;
; 1325 : 
; 1326 : 	case NOTIFICATION_DIPLOMACY_DECLARATION:
; 1327 : 	{
; 1328 : 		PlayerTypes eOurPlayer1 = (PlayerTypes) notification.m_iGameDataIndex;

	mov	ebx, DWORD PTR [edx+72]

; 1329 : 		PlayerTypes eOurPlayer2 = (PlayerTypes) notification.m_iExtraGameData;

	mov	ebp, DWORD PTR [edx+76]

; 1330 : 
; 1331 : 		// Notification is NOT being used to inform of a DoF or Denouncement (otherwise there would be valid players in these slots)
; 1332 : 		if(eOurPlayer1 == -1 || eOurPlayer2 == -1)

	cmp	ebx, -1
	je	$LN19@IsNotifica@2
	cmp	ebp, -1
	je	$LN19@IsNotifica@2

; 1333 : 			return false;
; 1334 : 
; 1335 : 		PlayerTypes eCheckingPlayer1, eCheckingPlayer2;
; 1336 : 
; 1337 : 		int iIndex = m_iNotificationsBeginIndex;

	mov	edi, DWORD PTR [esi+20]

; 1338 : 		while(iIndex != m_iNotificationsEndIndex)

	cmp	edi, DWORD PTR [esi+24]
	je	$LN19@IsNotifica@2
	jmp	SHORT $LN28@IsNotifica@2
$LL195@IsNotifica@2:
	mov	ecx, DWORD PTR tv641[esp+20]
$LN28@IsNotifica@2:

; 1339 : 		{
; 1340 : 			if(notification.m_eNotificationType == m_aNotifications[iIndex].m_eNotificationType)

	mov	edx, DWORD PTR [esi+8]
	mov	eax, edi
	imul	eax, 92					; 0000005cH
	cmp	ecx, DWORD PTR [eax+edx]
	jne	SHORT $LN25@IsNotifica@2

; 1341 : 			{
; 1342 : 				eCheckingPlayer1 = (PlayerTypes) m_aNotifications[iIndex].m_iGameDataIndex;

	mov	ecx, DWORD PTR [eax+edx+72]
	add	eax, edx

; 1343 : 				eCheckingPlayer2 = (PlayerTypes) m_aNotifications[iIndex].m_iExtraGameData;

	mov	eax, DWORD PTR [eax+76]

; 1344 : 
; 1345 : 				// Players match - we already have a notification with this player combo
; 1346 : 				if((eOurPlayer1 == eCheckingPlayer1 && eOurPlayer2 == eCheckingPlayer2) ||
; 1347 : 				        (eOurPlayer1 == eCheckingPlayer2 && eOurPlayer2 == eCheckingPlayer1))

	cmp	ebx, ecx
	jne	SHORT $LN23@IsNotifica@2
	cmp	ebp, eax
	je	$LN185@IsNotifica@2
$LN23@IsNotifica@2:
	cmp	ebx, eax
	jne	SHORT $LN25@IsNotifica@2
	cmp	ebp, ecx
	je	$LN185@IsNotifica@2
$LN25@IsNotifica@2:

; 1348 : 				{
; 1349 : 					return true;
; 1350 : 				}
; 1351 : 			}
; 1352 : 
; 1353 : 			iIndex++;
; 1354 : 			if(iIndex >= (int)m_aNotifications.size())

	mov	ecx, DWORD PTR [esi+12]
	sub	ecx, DWORD PTR [esi+8]
	mov	eax, -1307163959			; b21642c9H
	imul	ecx
	add	edx, ecx
	sar	edx, 6
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	inc	edi
	add	eax, edx
	cmp	edi, eax
	jl	SHORT $LN22@IsNotifica@2

; 1355 : 				iIndex = 0;

	xor	edi, edi
$LN22@IsNotifica@2:

; 1338 : 		while(iIndex != m_iNotificationsEndIndex)

	cmp	edi, DWORD PTR [esi+24]
	jne	SHORT $LL195@IsNotifica@2
	pop	edi
	pop	esi
	pop	ebp

; 1386 : 			}
; 1387 : 		}
; 1388 : 
; 1389 : 		return false;

	xor	al, al
	pop	ebx

; 1457 : 		break;
; 1458 : 	}
; 1459 : }

	pop	ecx
	ret	4
$LN77@IsNotifica@2:

; 1135 : 	{
; 1136 : 	case NOTIFICATION_TECH:
; 1137 : 	{
; 1138 : 		int iIndex = m_iNotificationsBeginIndex;

	mov	ebx, DWORD PTR [esi+20]

; 1139 : 		while(iIndex != m_iNotificationsEndIndex)

	cmp	ebx, DWORD PTR [esi+24]
	je	$LN19@IsNotifica@2
	jmp	SHORT $LN76@IsNotifica@2
$LL196@IsNotifica@2:
	mov	edx, DWORD PTR _notification$[esp+16]
$LN76@IsNotifica@2:

; 1140 : 		{
; 1141 : 			if(notification.m_eNotificationType == m_aNotifications[iIndex].m_eNotificationType)

	mov	ecx, DWORD PTR [esi+8]
	mov	edi, ebx
	imul	edi, 92					; 0000005cH
	lea	eax, DWORD PTR [edi+ecx]
	mov	ecx, DWORD PTR [edx]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN71@IsNotifica@2

; 1142 : 			{
; 1143 : 				if(!notification.m_bDismissed && !m_aNotifications[iIndex].m_bDismissed)

	cmp	BYTE PTR [edx+89], 0
	jne	SHORT $LN71@IsNotifica@2
	cmp	BYTE PTR [eax+89], 0
	jne	SHORT $LN71@IsNotifica@2

; 1144 : 				{
; 1145 : 					if (IsNotificationTypeEndOfTurnExpired(notification.m_eNotificationType) && notification.m_bWaitExtraTurn)

	push	-1
	push	ecx
	mov	ecx, esi
	call	?IsNotificationTypeEndOfTurnExpired@CvNotifications@@QAE_NW4NotificationTypes@@H@Z ; CvNotifications::IsNotificationTypeEndOfTurnExpired
	test	al, al
	je	SHORT $LN185@IsNotifica@2
	mov	edx, DWORD PTR _notification$[esp+16]
	cmp	BYTE PTR [edx+90], 0
	je	SHORT $LN185@IsNotifica@2

; 1146 : 					{
; 1147 : 						if (m_aNotifications[iIndex].m_bWaitExtraTurn)

	mov	eax, DWORD PTR [esi+8]
	cmp	BYTE PTR [edi+eax+90], 0
	jne	SHORT $LN185@IsNotifica@2
$LN71@IsNotifica@2:

; 1149 : 					}
; 1150 : 					else
; 1151 : 						// We already added this kind of notification so we don't need another
; 1152 : 						return true;
; 1153 : 				}
; 1154 : 			}
; 1155 : 
; 1156 : 
; 1157 : 			iIndex++;
; 1158 : 			if(iIndex >= (int)m_aNotifications.size())

	mov	ecx, DWORD PTR [esi+12]
	sub	ecx, DWORD PTR [esi+8]
	mov	eax, -1307163959			; b21642c9H
	imul	ecx
	add	edx, ecx
	sar	edx, 6
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	inc	ebx
	add	ecx, edx
	cmp	ebx, ecx
	jl	SHORT $LN69@IsNotifica@2

; 1159 : 			{
; 1160 : 				iIndex = 0;

	xor	ebx, ebx
$LN69@IsNotifica@2:

; 1139 : 		while(iIndex != m_iNotificationsEndIndex)

	cmp	ebx, DWORD PTR [esi+24]
	jne	SHORT $LL196@IsNotifica@2
	pop	edi
	pop	esi
	pop	ebp

; 1386 : 			}
; 1387 : 		}
; 1388 : 
; 1389 : 		return false;

	xor	al, al
	pop	ebx

; 1457 : 		break;
; 1458 : 	}
; 1459 : }

	pop	ecx
	ret	4
$LN185@IsNotifica@2:
	pop	edi
	pop	esi
	pop	ebp

; 1148 : 							return true;

	mov	al, 1
	pop	ebx

; 1457 : 		break;
; 1458 : 	}
; 1459 : }

	pop	ecx
	ret	4
$LN86@IsNotifica@2:

; 1134 : 	switch(notification.m_eNotificationType)

	cmp	ecx, 1996573794				; 77014c62H
	jg	$LN88@IsNotifica@2
	je	$LN50@IsNotifica@2
	cmp	ecx, 1591330057				; 5ed9c509H
	je	$LN38@IsNotifica@2
	cmp	ecx, 1719091288				; 66774058H
	jne	$LN19@IsNotifica@2
$LN9@IsNotifica@2:

; 1414 : 			}
; 1415 : 		}
; 1416 : 		return false;
; 1417 : 	}
; 1418 : 	break;
; 1419 : 
; 1420 : #ifndef AUI_WARNING_FIXES
; 1421 : 	case NOTIFICATION_LEAGUE_PROJECT_COMPLETE:
; 1422 : 	case NOTIFICATION_LEAGUE_PROJECT_PROGRESS:
; 1423 : 		{
; 1424 : 			int iIndex = m_iNotificationsBeginIndex;

	mov	edi, DWORD PTR [esi+20]
	mov	ebp, DWORD PTR [esi+24]

; 1425 : 			while(iIndex != m_iNotificationsEndIndex)

	cmp	edi, ebp
	je	$LN19@IsNotifica@2
	mov	ebx, DWORD PTR [esi+8]
	jmp	SHORT $LN8@IsNotifica@2
	npad	3
$LL197@IsNotifica@2:
	mov	edx, DWORD PTR _notification$[esp+16]
	mov	ecx, DWORD PTR tv641[esp+20]
$LN8@IsNotifica@2:

; 1426 : 			{
; 1427 : 				if(notification.m_eNotificationType == m_aNotifications[iIndex].m_eNotificationType)

	mov	eax, edi
	imul	eax, 92					; 0000005cH
	add	eax, ebx
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN3@IsNotifica@2

; 1428 : 				{
; 1429 : 					if(!notification.m_bDismissed && !m_aNotifications[iIndex].m_bDismissed)

	cmp	BYTE PTR [edx+89], 0
	jne	SHORT $LN3@IsNotifica@2
	cmp	BYTE PTR [eax+89], 0
	jne	SHORT $LN3@IsNotifica@2

; 1430 : 					{
; 1431 : 						// Same League ID
; 1432 : 						if (notification.m_iGameDataIndex == m_aNotifications[iIndex].m_iGameDataIndex)

	mov	ecx, DWORD PTR [edx+72]
	cmp	ecx, DWORD PTR [eax+72]
	jne	SHORT $LN3@IsNotifica@2

; 1433 : 						{
; 1434 : 							// Same Project type
; 1435 : 							if (notification.m_iExtraGameData == m_aNotifications[iIndex].m_iExtraGameData)

	mov	edx, DWORD PTR [edx+76]
	cmp	edx, DWORD PTR [eax+76]
	je	SHORT $LN185@IsNotifica@2
$LN3@IsNotifica@2:

; 1436 : 							{
; 1437 : 								return true;
; 1438 : 							}
; 1439 : 						}
; 1440 : 					}
; 1441 : 				}
; 1442 : 
; 1443 : 
; 1444 : 				iIndex++;
; 1445 : 				if(iIndex >= (int)m_aNotifications.size())

	mov	ecx, DWORD PTR [esi+12]
	sub	ecx, ebx
	mov	eax, -1307163959			; b21642c9H
	imul	ecx
	add	edx, ecx
	sar	edx, 6
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	inc	edi
	add	eax, edx
	cmp	edi, eax
	jl	SHORT $LN2@IsNotifica@2

; 1446 : 				{
; 1447 : 					iIndex = 0;

	xor	edi, edi
$LN2@IsNotifica@2:

; 1425 : 			while(iIndex != m_iNotificationsEndIndex)

	cmp	edi, ebp
	jne	SHORT $LL197@IsNotifica@2
	pop	edi
	pop	esi
	pop	ebp
	xor	al, al
	pop	ebx

; 1457 : 		break;
; 1458 : 	}
; 1459 : }

	pop	ecx
	ret	4
$LN38@IsNotifica@2:

; 1291 : 			}
; 1292 : 		}
; 1293 : 
; 1294 : 		return false;
; 1295 : 	}
; 1296 : 	break;
; 1297 : 
; 1298 : 	case NOTIFICATION_UNIT_PROMOTION:
; 1299 : 	{
; 1300 : 		int iIndex = m_iNotificationsBeginIndex;

	mov	edi, DWORD PTR [esi+20]
	mov	ebp, DWORD PTR [esi+24]

; 1301 : 		while(iIndex != m_iNotificationsEndIndex)

	cmp	edi, ebp
	je	$LN19@IsNotifica@2
	mov	ebx, DWORD PTR [esi+8]
	jmp	SHORT $LN37@IsNotifica@2
	npad	1
$LL198@IsNotifica@2:
	mov	edx, DWORD PTR _notification$[esp+16]
	mov	ecx, DWORD PTR tv641[esp+20]
$LN37@IsNotifica@2:

; 1302 : 		{
; 1303 : 			if(notification.m_eNotificationType == m_aNotifications[iIndex].m_eNotificationType)

	mov	eax, edi
	imul	eax, 92					; 0000005cH
	add	eax, ebx
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN33@IsNotifica@2

; 1304 : 			{
; 1305 : 				if(notification.m_iExtraGameData == m_aNotifications[iIndex].m_iExtraGameData)

	mov	ecx, DWORD PTR [edx+76]
	cmp	ecx, DWORD PTR [eax+76]
	jne	SHORT $LN33@IsNotifica@2

; 1306 : 				{
; 1307 : 					if(!notification.m_bDismissed && !m_aNotifications[iIndex].m_bDismissed)

	cmp	BYTE PTR [edx+89], 0
	jne	SHORT $LN33@IsNotifica@2
	cmp	BYTE PTR [eax+89], 0
	je	$LN185@IsNotifica@2
$LN33@IsNotifica@2:

; 1308 : 					{
; 1309 : 						// we've already added a notification for this unit to the notification system, so don't add another one
; 1310 : 						return true;
; 1311 : 					}
; 1312 : 				}
; 1313 : 			}
; 1314 : 
; 1315 : 			iIndex++;
; 1316 : 			if(iIndex >= (int)m_aNotifications.size())

	mov	ecx, DWORD PTR [esi+12]
	sub	ecx, ebx
	mov	eax, -1307163959			; b21642c9H
	imul	ecx
	add	edx, ecx
	sar	edx, 6
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	inc	edi
	add	eax, edx
	cmp	edi, eax
	jl	SHORT $LN32@IsNotifica@2

; 1317 : 			{
; 1318 : 				iIndex = 0;

	xor	edi, edi
$LN32@IsNotifica@2:

; 1301 : 		while(iIndex != m_iNotificationsEndIndex)

	cmp	edi, ebp
	jne	SHORT $LL198@IsNotifica@2
	pop	edi
	pop	esi
	pop	ebp

; 1386 : 			}
; 1387 : 		}
; 1388 : 
; 1389 : 		return false;

	xor	al, al
	pop	ebx

; 1457 : 		break;
; 1458 : 	}
; 1459 : }

	pop	ecx
	ret	4
$LN50@IsNotifica@2:

; 1239 : 			}
; 1240 : 		}
; 1241 : 
; 1242 : 		return false;
; 1243 : 	}
; 1244 : 	break;
; 1245 : 
; 1246 : 	case NOTIFICATION_PRODUCTION:
; 1247 : 	{
; 1248 : 		int iIndex = m_iNotificationsBeginIndex;

	mov	edi, DWORD PTR [esi+20]
	mov	ebp, DWORD PTR [esi+24]

; 1249 : 		while(iIndex != m_iNotificationsEndIndex)

	cmp	edi, ebp
	je	$LN19@IsNotifica@2
	mov	ebx, DWORD PTR [esi+8]
	jmp	SHORT $LN49@IsNotifica@2
	npad	5
$LL199@IsNotifica@2:
	mov	edx, DWORD PTR _notification$[esp+16]
	mov	ecx, DWORD PTR tv641[esp+20]
$LN49@IsNotifica@2:

; 1250 : 		{
; 1251 : 			if(notification.m_eNotificationType == m_aNotifications[iIndex].m_eNotificationType &&
; 1252 : 			        notification.m_iX == m_aNotifications[iIndex].m_iX &&
; 1253 : 			        notification.m_iY == m_aNotifications[iIndex].m_iY)

	mov	eax, edi
	imul	eax, 92					; 0000005cH
	add	eax, ebx
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN46@IsNotifica@2
	mov	ecx, DWORD PTR [edx+64]
	cmp	ecx, DWORD PTR [eax+64]
	jne	SHORT $LN46@IsNotifica@2
	mov	ecx, DWORD PTR [edx+68]
	cmp	ecx, DWORD PTR [eax+68]
	jne	SHORT $LN46@IsNotifica@2

; 1254 : 			{
; 1255 : 				if(!notification.m_bDismissed && !m_aNotifications[iIndex].m_bDismissed)

	cmp	BYTE PTR [edx+89], 0
	jne	SHORT $LN46@IsNotifica@2
	cmp	BYTE PTR [eax+89], 0
	je	$LN185@IsNotifica@2
$LN46@IsNotifica@2:

; 1256 : 				{
; 1257 : 					// we've already added a notification for this city to the notification system, so don't add another one
; 1258 : 					return true;
; 1259 : 				}
; 1260 : 			}
; 1261 : 
; 1262 : 			iIndex++;
; 1263 : 			if(iIndex >= (int)m_aNotifications.size())

	mov	ecx, DWORD PTR [esi+12]
	sub	ecx, ebx
	mov	eax, -1307163959			; b21642c9H
	imul	ecx
	add	edx, ecx
	sar	edx, 6
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	inc	edi
	add	eax, edx
	cmp	edi, eax
	jl	SHORT $LN45@IsNotifica@2

; 1264 : 			{
; 1265 : 				iIndex = 0;

	xor	edi, edi
$LN45@IsNotifica@2:

; 1249 : 		while(iIndex != m_iNotificationsEndIndex)

	cmp	edi, ebp
	jne	SHORT $LL199@IsNotifica@2
	pop	edi
	pop	esi
	pop	ebp

; 1386 : 			}
; 1387 : 		}
; 1388 : 
; 1389 : 		return false;

	xor	al, al
	pop	ebx

; 1457 : 		break;
; 1458 : 	}
; 1459 : }

	pop	ecx
	ret	4
$LN88@IsNotifica@2:

; 1134 : 	switch(notification.m_eNotificationType)

	cmp	ecx, 2128612861				; 7ee00dfdH

; 1448 : 				}
; 1449 : 			}
; 1450 : 			return false;
; 1451 : 		}
; 1452 : 		break;
; 1453 : #endif
; 1454 : 
; 1455 : 	default:
; 1456 : 		return false;

	jne	$LN19@IsNotifica@2
$LN21@IsNotifica@2:

; 1356 : 		}
; 1357 : 
; 1358 : 		return false;
; 1359 : 	}
; 1360 : 	break;
; 1361 : 
; 1362 : 	case NOTIFICATION_FOUND_PANTHEON:
; 1363 : 	case NOTIFICATION_FOUND_RELIGION:
; 1364 : 	case NOTIFICATION_ENHANCE_RELIGION:
; 1365 : 	case NOTIFICATION_ADD_REFORMATION_BELIEF:
; 1366 : 	case NOTIFICATION_CHOOSE_ARCHAEOLOGY:
; 1367 : 	case NOTIFICATION_CHOOSE_IDEOLOGY:
; 1368 : 	{
; 1369 : 		int iIndex = m_iNotificationsBeginIndex;

	mov	edi, DWORD PTR [esi+20]
	mov	ebp, DWORD PTR [esi+24]

; 1370 : 		while(iIndex != m_iNotificationsEndIndex)

	cmp	edi, ebp
	je	$LN19@IsNotifica@2
	mov	ebx, DWORD PTR [esi+8]
	npad	3
$LL20@IsNotifica@2:

; 1371 : 		{
; 1372 : 			if(notification.m_eNotificationType == m_aNotifications[iIndex].m_eNotificationType)

	mov	edx, DWORD PTR tv641[esp+20]
	mov	ecx, edi
	imul	ecx, 92					; 0000005cH
	cmp	edx, DWORD PTR [ecx+ebx]
	lea	eax, DWORD PTR [ecx+ebx]
	jne	SHORT $LN17@IsNotifica@2

; 1373 : 			{
; 1374 : 				if(!notification.m_bDismissed && !m_aNotifications[iIndex].m_bDismissed)

	mov	ecx, DWORD PTR _notification$[esp+16]
	cmp	BYTE PTR [ecx+89], 0
	jne	SHORT $LN17@IsNotifica@2
	cmp	BYTE PTR [eax+89], 0
	je	$LN185@IsNotifica@2
$LN17@IsNotifica@2:

; 1375 : 				{
; 1376 : 					// we've already added a pantheon notification, don't need another
; 1377 : 					return true;
; 1378 : 				}
; 1379 : 			}
; 1380 : 
; 1381 : 
; 1382 : 			iIndex++;
; 1383 : 			if(iIndex >= (int)m_aNotifications.size())

	mov	ecx, DWORD PTR [esi+12]
	sub	ecx, ebx
	mov	eax, -1307163959			; b21642c9H
	imul	ecx
	add	edx, ecx
	sar	edx, 6
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	inc	edi
	add	eax, edx
	cmp	edi, eax
	jl	SHORT $LN16@IsNotifica@2

; 1384 : 			{
; 1385 : 				iIndex = 0;

	xor	edi, edi
$LN16@IsNotifica@2:

; 1370 : 		while(iIndex != m_iNotificationsEndIndex)

	cmp	edi, ebp
	jne	SHORT $LL20@IsNotifica@2
	pop	edi
	pop	esi
	pop	ebp

; 1386 : 			}
; 1387 : 		}
; 1388 : 
; 1389 : 		return false;

	xor	al, al
	pop	ebx

; 1457 : 		break;
; 1458 : 	}
; 1459 : }

	pop	ecx
	ret	4
?IsNotificationRedundant@CvNotifications@@QAE_NAAUNotification@1@@Z ENDP ; CvNotifications::IsNotificationRedundant
_TEXT	ENDS
PUBLIC	?RemoveOldestNotification@CvNotifications@@IAEXXZ ; CvNotifications::RemoveOldestNotification
; Function compile flags: /Ogtpy
;	COMDAT ?RemoveOldestNotification@CvNotifications@@IAEXXZ
_TEXT	SEGMENT
?RemoveOldestNotification@CvNotifications@@IAEXXZ PROC	; CvNotifications::RemoveOldestNotification, COMDAT
; _this$ = ecx

; 1951 : {

	push	ebx
	push	edi
	mov	edi, ecx

; 1952 : 	// if the notification is somehow active, dismiss it
; 1953 : 	if(!m_aNotifications[m_iNotificationsBeginIndex].m_bDismissed)

	mov	eax, DWORD PTR [edi+20]
	mov	ecx, DWORD PTR [edi+8]
	imul	eax, 92					; 0000005cH
	add	eax, ecx
	xor	ebx, ebx
	cmp	BYTE PTR [eax+89], bl
	jne	SHORT $LN1@RemoveOlde

; 1954 : 	{
; 1955 : 		Dismiss(m_aNotifications[m_iNotificationsBeginIndex].m_iLookupIndex, /*bUserInvoked*/ false);

	mov	edx, DWORD PTR [eax+84]
	push	ebx
	push	edx
	mov	ecx, edi
	call	?Dismiss@CvNotifications@@QAEXH_N@Z	; CvNotifications::Dismiss
$LN1@RemoveOlde:
	push	ebp
	push	esi

; 1956 : 	}
; 1957 : 	m_aNotifications[m_iNotificationsBeginIndex].Clear();

	mov	esi, DWORD PTR [edi+20]
	imul	esi, 92					; 0000005cH
	add	esi, DWORD PTR [edi+8]
	or	ebp, -1
	push	OFFSET $SG220740
	lea	ecx, DWORD PTR [esi+8]
	mov	DWORD PTR [esi], ebp
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	push	OFFSET $SG220741
	lea	ecx, DWORD PTR [esi+36]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	mov	DWORD PTR [esi+64], ebp
	mov	DWORD PTR [esi+68], ebp
	mov	DWORD PTR [esi+72], ebp
	mov	DWORD PTR [esi+80], ebp
	mov	DWORD PTR [esi+84], ebp
	mov	BYTE PTR [esi+88], bl
	mov	BYTE PTR [esi+89], bl
	mov	BYTE PTR [esi+90], bl

; 1958 : 	IncrementBeginIndex();

	inc	DWORD PTR [edi+20]
	mov	ecx, DWORD PTR [edi+12]
	sub	ecx, DWORD PTR [edi+8]
	mov	esi, DWORD PTR [edi+20]
	mov	eax, -1307163959			; b21642c9H
	imul	ecx
	add	edx, ecx
	sar	edx, 6
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cmp	esi, eax
	pop	esi
	pop	ebp
	jl	SHORT $LN20@RemoveOlde
	mov	DWORD PTR [edi+20], ebx
$LN20@RemoveOlde:
	pop	edi
	pop	ebx

; 1959 : }

	ret	0
?RemoveOldestNotification@CvNotifications@@IAEXXZ ENDP	; CvNotifications::RemoveOldestNotification
_TEXT	ENDS
PUBLIC	?begin@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAE?AV?$_Vector_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@XZ ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::begin
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\vector
;	COMDAT ?begin@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAE?AV?$_Vector_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAE?AV?$_Vector_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@XZ PROC ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::begin, COMDAT
; _this$ = ecx

; 667  : 		return (iterator(_Myfirst));

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 668  : 		}

	ret	4
?begin@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAE?AV?$_Vector_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@XZ ENDP ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAE?AV?$_Vector_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@XZ ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAE?AV?$_Vector_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAE?AV?$_Vector_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@XZ PROC ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::end, COMDAT
; _this$ = ecx

; 677  : 		return (iterator(_Mylast));

	mov	ecx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 678  : 		}

	ret	4
?end@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAE?AV?$_Vector_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@XZ ENDP ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::end
_TEXT	ENDS
PUBLIC	?_Buy@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAE_NI@Z ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::_Buy
; Function compile flags: /Ogtpy
;	COMDAT ?_Buy@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
__Capacity$ = 8						; size = 4
?_Buy@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAE_NI@Z PROC ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::_Buy, COMDAT
; _this$ = ecx

; 1102 : 		{	// allocate array with _Capacity elements

	push	esi

; 1103 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;
; 1104 : 		if (_Capacity == 0)

	mov	esi, DWORD PTR __Capacity$[esp]
	xor	eax, eax
	push	edi
	mov	edi, ecx
	mov	DWORD PTR [edi+4], eax
	mov	DWORD PTR [edi+8], eax
	mov	DWORD PTR [edi+12], eax
	cmp	esi, eax
	jne	SHORT $LN4@Buy
	pop	edi

; 1105 : 			return (false);

	xor	al, al
	pop	esi

; 1115 : 		}

	ret	4
$LN4@Buy:

; 1106 : 		else if (max_size() < _Capacity)

	cmp	esi, 46684427				; 02c8590bH
	jbe	SHORT $LN2@Buy

; 1107 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@KAXXZ ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::_Xlen
$LN16@Buy:
$LN2@Buy:

; 1108 : 		else
; 1109 : 			{	// nonempty array, allocate storage
; 1110 : 			_Myfirst = this->_Alval.allocate(_Capacity);

	push	eax
	push	esi
	call	??$_Allocate@UNotification@CvNotifications@@@std@@YAPAUNotification@CvNotifications@@IPAU12@@Z ; std::_Allocate<CvNotifications::Notification>

; 1111 : 			_Mylast = _Myfirst;
; 1112 : 			_Myend = _Myfirst + _Capacity;

	imul	esi, 92					; 0000005cH
	add	esi, eax
	add	esp, 8
	mov	DWORD PTR [edi+4], eax
	mov	DWORD PTR [edi+8], eax
	mov	DWORD PTR [edi+12], esi
	pop	edi

; 1113 : 			}
; 1114 : 		return (true);

	mov	al, 1
	pop	esi

; 1115 : 		}

	ret	4
$LN15@Buy:
?_Buy@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAE_NI@Z ENDP ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::_Buy
_TEXT	ENDS
PUBLIC	?_Make_iter@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QBE?AV?$_Vector_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@V?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@@Z ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::_Make_iter
; Function compile flags: /Ogtpy
;	COMDAT ?_Make_iter@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QBE?AV?$_Vector_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@V?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QBE?AV?$_Vector_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@V?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@@Z PROC ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::_Make_iter, COMDAT
; _this$ = ecx

; 687  : 		return (iterator(_Where._Myptr));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	ecx, DWORD PTR __Where$[esp-4]
	mov	DWORD PTR [eax], ecx

; 688  : 		}

	ret	8
?_Make_iter@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QBE?AV?$_Vector_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@V?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@@Z ENDP ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::_Make_iter
_TEXT	ENDS
PUBLIC	??H?$_Vector_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::operator+
; Function compile flags: /Ogtpy
;	COMDAT ??H?$_Vector_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??H?$_Vector_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QBE?AV01@H@Z PROC ; std::_Vector_iterator<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::operator+, COMDAT
; _this$ = ecx

; 381  : 		_Myt _Tmp = *this;
; 382  : 		return (_Tmp += _Off);

	mov	edx, DWORD PTR __Off$[esp-4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	imul	edx, 92					; 0000005cH
	add	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 383  : 		}

	ret	8
??H?$_Vector_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QBE?AV01@H@Z ENDP ; std::_Vector_iterator<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::operator+
_TEXT	ENDS
PUBLIC	??$unchecked_copy@PAUNotification@CvNotifications@@PAU12@@stdext@@YAPAUNotification@CvNotifications@@PAU12@00@Z ; stdext::unchecked_copy<CvNotifications::Notification *,CvNotifications::Notification *>
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\xutility
;	COMDAT ??$unchecked_copy@PAUNotification@CvNotifications@@PAU12@@stdext@@YAPAUNotification@CvNotifications@@PAU12@00@Z
_TEXT	SEGMENT
$T225531 = -4						; size = 1
__Cat$225537 = -4					; size = 1
$T225533 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$unchecked_copy@PAUNotification@CvNotifications@@PAU12@@stdext@@YAPAUNotification@CvNotifications@@PAU12@00@Z PROC ; stdext::unchecked_copy<CvNotifications::Notification *,CvNotifications::Notification *>, COMDAT

; 3604 : 	{	// copy [_First, _Last) to [_Dest, ...)

	push	ecx

; 3605 : 		return (_STD _Copy_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3606 : 			_STD _Iter_random(_First, _Dest), _STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	BYTE PTR $T225531[esp+4], 0
	mov	eax, DWORD PTR $T225531[esp+4]
	mov	ecx, DWORD PTR __Cat$225537[esp+4]
	mov	edx, DWORD PTR $T225533[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Copy_opt@PAUNotification@CvNotifications@@PAU12@Urandom_access_iterator_tag@std@@@std@@YAPAUNotification@CvNotifications@@PAU12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<CvNotifications::Notification *,CvNotifications::Notification *,std::random_access_iterator_tag>

; 3607 : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$unchecked_copy@PAUNotification@CvNotifications@@PAU12@@stdext@@YAPAUNotification@CvNotifications@@PAU12@00@Z ENDP ; stdext::unchecked_copy<CvNotifications::Notification *,CvNotifications::Notification *>
_TEXT	ENDS
PUBLIC	??$fill@PAUNotification@CvNotifications@@U12@@std@@YAXPAUNotification@CvNotifications@@0ABU12@@Z ; std::fill<CvNotifications::Notification *,CvNotifications::Notification>
; Function compile flags: /Ogtpy
;	COMDAT ??$fill@PAUNotification@CvNotifications@@U12@@std@@YAXPAUNotification@CvNotifications@@0ABU12@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$fill@PAUNotification@CvNotifications@@U12@@std@@YAXPAUNotification@CvNotifications@@0ABU12@@Z PROC ; std::fill<CvNotifications::Notification *,CvNotifications::Notification>, COMDAT

; 3187 : 	_Fill(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Val);

	jmp	??$_Fill@PAUNotification@CvNotifications@@U12@@std@@YAXPAUNotification@CvNotifications@@0ABU12@@Z ; std::_Fill<CvNotifications::Notification *,CvNotifications::Notification>
??$fill@PAUNotification@CvNotifications@@U12@@std@@YAXPAUNotification@CvNotifications@@0ABU12@@Z ENDP ; std::fill<CvNotifications::Notification *,CvNotifications::Notification>
_TEXT	ENDS
PUBLIC	??$_Move_backward_opt@PAUNotification@CvNotifications@@PAU12@Urandom_access_iterator_tag@std@@U_Undefined_move_tag@4@@std@@YAPAUNotification@CvNotifications@@PAU12@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Move_backward_opt<CvNotifications::Notification *,CvNotifications::Notification *,std::random_access_iterator_tag,std::_Undefined_move_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Move_backward_opt@PAUNotification@CvNotifications@@PAU12@Urandom_access_iterator_tag@std@@U_Undefined_move_tag@4@@std@@YAPAUNotification@CvNotifications@@PAU12@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T225549 = -4						; size = 1
__Cat$225554 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__First_dest_cat$ = 20					; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Move_backward_opt@PAUNotification@CvNotifications@@PAU12@Urandom_access_iterator_tag@std@@U_Undefined_move_tag@4@@std@@YAPAUNotification@CvNotifications@@PAU12@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Move_backward_opt<CvNotifications::Notification *,CvNotifications::Notification *,std::random_access_iterator_tag,std::_Undefined_move_tag>, COMDAT

; 2752 : 	{	// move defaults to copy if there is not a more effecient way

	push	ecx

; 2753 : 	return _Copy_backward_opt(_First, _Last, _Dest,
; 2754 : 		_First_dest_cat, _Ptr_cat(_First, _Dest), _Range_checked_iterator_tag());

	mov	edx, DWORD PTR __First_dest_cat$[esp]
	mov	BYTE PTR $T225549[esp+4], 0
	mov	eax, DWORD PTR $T225549[esp+4]
	mov	ecx, DWORD PTR __Cat$225554[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Copy_backward_opt@PAUNotification@CvNotifications@@PAU12@Urandom_access_iterator_tag@std@@@std@@YAPAUNotification@CvNotifications@@PAU12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<CvNotifications::Notification *,CvNotifications::Notification *,std::random_access_iterator_tag>

; 2755 : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$_Move_backward_opt@PAUNotification@CvNotifications@@PAU12@Urandom_access_iterator_tag@std@@U_Undefined_move_tag@4@@std@@YAPAUNotification@CvNotifications@@PAU12@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Move_backward_opt<CvNotifications::Notification *,CvNotifications::Notification *,std::random_access_iterator_tag,std::_Undefined_move_tag>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@0AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<enum BeliefTypes> >
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@0AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@0AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<enum BeliefTypes> >, COMDAT

; 233  : 	for (; _First != _Last; ++_First)
; 234  : 		_Al.destroy(_First);
; 235  : 	}

	ret	0
??$_Destroy_range@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@0AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<enum BeliefTypes> >
_TEXT	ENDS
PUBLIC	?construct@?$allocator@UNotification@CvNotifications@@@std@@QAEXPAUNotification@CvNotifications@@ABU34@@Z ; std::allocator<CvNotifications::Notification>::construct
;	COMDAT xdata$x
; File s:\msvs2008\vc\include\new
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@UNotification@CvNotifications@@@std@@QAEXPAUNotification@CvNotifications@@ABU34@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@UNotification@CvNotifications@@@std@@QAEXPAUNotification@CvNotifications@@ABU34@@Z$0
__ehfuncinfo$?construct@?$allocator@UNotification@CvNotifications@@@std@@QAEXPAUNotification@CvNotifications@@ABU34@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@UNotification@CvNotifications@@@std@@QAEXPAUNotification@CvNotifications@@ABU34@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ?construct@?$allocator@UNotification@CvNotifications@@@std@@QAEXPAUNotification@CvNotifications@@ABU34@@Z
_TEXT	SEGMENT
$T225574 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Vptr$225580 = 8					; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@UNotification@CvNotifications@@@std@@QAEXPAUNotification@CvNotifications@@ABU34@@Z PROC ; std::allocator<CvNotifications::Notification>::construct, COMDAT
; _this$ = ecx

; 154  : 		{	// construct object at _Ptr with value _Val

	push	-1
	push	__ehhandler$?construct@?$allocator@UNotification@CvNotifications@@@std@@QAEXPAUNotification@CvNotifications@@ABU34@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx

; 155  : 		_Construct(_Ptr, _Val);

	mov	ecx, DWORD PTR __Ptr$[esp+12]
	mov	DWORD PTR __Vptr$225580[esp+12], ecx
	mov	DWORD PTR $T225574[esp+16], ecx
	mov	DWORD PTR __$EHRec$[esp+24], 0
	test	ecx, ecx
	je	SHORT $LN5@construct
	mov	eax, DWORD PTR __Val$[esp+12]
	push	eax
	call	??0Notification@CvNotifications@@QAE@ABU01@@Z
$LN5@construct:

; 156  : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@UNotification@CvNotifications@@@std@@QAEXPAUNotification@CvNotifications@@ABU34@@Z$0:
	mov	eax, DWORD PTR __Vptr$225580[ebp-4]
	push	eax
	mov	ecx, DWORD PTR $T225574[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?construct@?$allocator@UNotification@CvNotifications@@@std@@QAEXPAUNotification@CvNotifications@@ABU34@@Z:
	mov	eax, OFFSET __ehfuncinfo$?construct@?$allocator@UNotification@CvNotifications@@@std@@QAEXPAUNotification@CvNotifications@@ABU34@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@UNotification@CvNotifications@@@std@@QAEXPAUNotification@CvNotifications@@ABU34@@Z ENDP ; std::allocator<CvNotifications::Notification>::construct
PUBLIC	??$_Destroy@UNotification@CvNotifications@@@std@@YAXPAUNotification@CvNotifications@@@Z ; std::_Destroy<CvNotifications::Notification>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Destroy@UNotification@CvNotifications@@@std@@YAXPAUNotification@CvNotifications@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@UNotification@CvNotifications@@@std@@YAXPAUNotification@CvNotifications@@@Z PROC ; std::_Destroy<CvNotifications::Notification>, COMDAT

; 59   : 	_DESTRUCTOR(_Ty, _Ptr);

	mov	ecx, DWORD PTR __Ptr$[esp-4]
	jmp	??1Notification@CvNotifications@@QAE@XZ
??$_Destroy@UNotification@CvNotifications@@@std@@YAXPAUNotification@CvNotifications@@@Z ENDP ; std::_Destroy<CvNotifications::Notification>
_TEXT	ENDS
PUBLIC	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add
EXTRN	??3CvDllPlot@@SAXPAX@Z:PROC			; CvDllPlot::operator delete
EXTRN	??0CvDllPlot@@QAE@PAVCvPlot@@@Z:PROC		; CvDllPlot::CvDllPlot
EXTRN	??2CvDllPlot@@SAPAXI@Z:PROC			; CvDllPlot::operator new
EXTRN	?isHotSeatGame@CvPreGame@@YA_NXZ:PROC		; CvPreGame::isHotSeatGame
EXTRN	?isFinalInitialized@CvGame@@QBE_NXZ:PROC	; CvGame::isFinalInitialized
EXTRN	?isAutoMoves@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::isAutoMoves
EXTRN	?isTurnActive@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::isTurnActive
EXTRN	?isDebugMode@CvGame@@QBE_NXZ:PROC		; CvGame::isDebugMode
;	COMDAT xdata$x
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
xdata$x	SEGMENT
__unwindtable$?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z$2
__ehfuncinfo$?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvnotifications.cpp
xdata$x	ENDS
;	COMDAT ?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z
_TEXT	SEGMENT
_newNotification$ = -104				; size = 92
__$EHRec$ = -12						; size = 12
$T225600 = 8						; size = 4
_pDllPlot$220917 = 8					; size = 4
_eNotificationType$ = 8					; size = 4
_strMessage$ = 12					; size = 4
_strSummary$ = 16					; size = 4
_iX$ = 20						; size = 4
_iY$ = 24						; size = 4
_iGameDataIndex$ = 28					; size = 4
_iExtraGameData$ = 32					; size = 4
?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z PROC ; CvNotifications::Add, COMDAT
; _this$ = ecx

; 401  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 92					; 0000005cH
	push	esi
	mov	esi, ecx

; 402  : 	// if the player is not human, do not record
; 403  : 	if(!GET_PLAYER(m_ePlayer).isHuman())

	mov	ecx, DWORD PTR [esi]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	call	?isHuman@CvPlayer@@QBE_NXZ		; CvPlayer::isHuman
	test	al, al
	jne	SHORT $LN11@Add
$LN115@Add:

; 404  : 	{
; 405  : 		return -1;

	or	eax, -1
	pop	esi

; 482  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+104]
	mov	DWORD PTR fs:0, ecx
	add	esp, 104				; 00000068H
	ret	28					; 0000001cH
$LN11@Add:

; 406  : 	}
; 407  : 
; 408  : 	// If we're in debug mode, don't do anything
; 409  : 	if(GC.getGame().isDebugMode())

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?isDebugMode@CvGame@@QBE_NXZ		; CvGame::isDebugMode
	test	al, al

; 410  : 		return -1;

	jne	SHORT $LN115@Add
	push	ebx

; 411  : 
; 412  : 
; 413  : 	Notification newNotification;

	lea	ecx, DWORD PTR _newNotification$[esp+112]
	call	??0Notification@CvNotifications@@QAE@XZ

; 414  : 	newNotification.Clear();

	lea	ecx, DWORD PTR _newNotification$[esp+112]
	mov	DWORD PTR __$EHRec$[esp+120], 0
	call	?Clear@Notification@CvNotifications@@QAEXXZ ; CvNotifications::Notification::Clear

; 415  : 	newNotification.m_ePlayerID = m_ePlayer;

	mov	eax, DWORD PTR [esi]

; 416  : 	newNotification.m_eNotificationType = eNotificationType;

	mov	ebx, DWORD PTR _eNotificationType$[esp+108]
	mov	DWORD PTR _newNotification$[esp+116], eax

; 417  : 	newNotification.m_strMessage = strMessage;

	mov	eax, DWORD PTR _strMessage$[esp+108]
	mov	DWORD PTR _newNotification$[esp+112], ebx
	lea	ecx, DWORD PTR _newNotification$[esp+120]
	test	eax, eax
	je	SHORT $LN24@Add
	push	eax
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN23@Add
$LN24@Add:
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN23@Add:

; 418  : 	newNotification.m_strSummary = strSummary;

	mov	eax, DWORD PTR _strSummary$[esp+108]
	lea	ecx, DWORD PTR _newNotification$[esp+148]
	test	eax, eax
	je	SHORT $LN28@Add
	push	eax
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN27@Add
$LN28@Add:
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN27@Add:

; 419  : 	newNotification.m_iX = iX;

	mov	ecx, DWORD PTR _iX$[esp+108]

; 420  : 	newNotification.m_iY = iY;

	mov	edx, DWORD PTR _iY$[esp+108]

; 421  : 	newNotification.m_iGameDataIndex = iGameDataIndex;

	mov	eax, DWORD PTR _iGameDataIndex$[esp+108]
	mov	DWORD PTR _newNotification$[esp+176], ecx

; 422  : 	newNotification.m_iExtraGameData = iExtraGameData;

	mov	ecx, DWORD PTR _iExtraGameData$[esp+108]
	mov	DWORD PTR _newNotification$[esp+188], ecx

; 423  : 	newNotification.m_iTurn = GC.getGame().getGameTurn();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR _newNotification$[esp+180], edx
	mov	DWORD PTR _newNotification$[esp+184], eax
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn

; 424  : 	newNotification.m_iLookupIndex = m_iCurrentLookupIndex;
; 425  : 	newNotification.m_bNeedsBroadcast = true;
; 426  : 	newNotification.m_bDismissed = false;
; 427  : 	newNotification.m_bWaitExtraTurn = false;
; 428  : 
; 429  : 	// Is this notification being added during the player's auto-moves and will it expire at the end of the turn?
; 430  : 	// If so, set a flag so the notification will stick around for an extra turn.
; 431  : 	if (GET_PLAYER(m_ePlayer).isTurnActive() && GET_PLAYER(m_ePlayer).isAutoMoves() && IsNotificationTypeEndOfTurnExpired(eNotificationType))

	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [esi+28]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _newNotification$[esp+192], eax
	mov	DWORD PTR _newNotification$[esp+196], edx
	mov	BYTE PTR _newNotification$[esp+200], 1
	mov	BYTE PTR _newNotification$[esp+201], 0
	mov	BYTE PTR _newNotification$[esp+202], 0
	call	?isTurnActive@CvPlayer@@QBE_NXZ		; CvPlayer::isTurnActive
	test	al, al
	je	SHORT $LN107@Add
	mov	ecx, DWORD PTR [esi]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	call	?isAutoMoves@CvPlayer@@QBE_NXZ		; CvPlayer::isAutoMoves
	test	al, al
	je	SHORT $LN107@Add
	push	-1
	push	ebx
	mov	ecx, esi
	call	?IsNotificationTypeEndOfTurnExpired@CvNotifications@@QAE_NW4NotificationTypes@@H@Z ; CvNotifications::IsNotificationTypeEndOfTurnExpired
	test	al, al
	je	SHORT $LN107@Add

; 432  : 		newNotification.m_bWaitExtraTurn = true;

	mov	BYTE PTR _newNotification$[esp+202], 1
$LN107@Add:

; 433  : 
; 434  : 	if(IsNotificationRedundant(newNotification))

	lea	eax, DWORD PTR _newNotification$[esp+112]
	push	eax
	mov	ecx, esi
	call	?IsNotificationRedundant@CvNotifications@@QAE_NAAUNotification@1@@Z ; CvNotifications::IsNotificationRedundant
	test	al, al
	je	SHORT $LN8@Add

; 435  : 	{
; 436  : 		// redundant notification
; 437  : 		return -1;

	lea	ecx, DWORD PTR _newNotification$[esp+112]
	mov	DWORD PTR __$EHRec$[esp+120], -1
	call	??1Notification@CvNotifications@@QAE@XZ
	pop	ebx
	or	eax, -1
	pop	esi

; 482  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+104]
	mov	DWORD PTR fs:0, ecx
	add	esp, 104				; 00000068H
	ret	28					; 0000001cH
$LN8@Add:

; 438  : 	}
; 439  : 
; 440  : 	if(IsArrayFull())

	mov	ecx, esi
	call	?IsArrayFull@CvNotifications@@IAE_NXZ	; CvNotifications::IsArrayFull
	test	al, al
	je	SHORT $LN7@Add

; 441  : 	{
; 442  : 		RemoveOldestNotification();

	call	?RemoveOldestNotification@CvNotifications@@IAEXXZ ; CvNotifications::RemoveOldestNotification
$LN7@Add:

; 443  : 	}
; 444  : 
; 445  : 	m_aNotifications[m_iNotificationsEndIndex] = newNotification;

	lea	ecx, DWORD PTR _newNotification$[esp+112]
	push	ecx
	mov	ecx, DWORD PTR [esi+24]
	imul	ecx, 92					; 0000005cH
	add	ecx, DWORD PTR [esi+8]
	call	??4Notification@CvNotifications@@QAEAAU01@ABU01@@Z

; 446  : 
; 447  : 	if(GC.getGame().isFinalInitialized())

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?isFinalInitialized@CvGame@@QBE_NXZ	; CvGame::isFinalInitialized
	test	al, al
	je	$LN112@Add

; 448  : 	{
; 449  : 		// If the notification is for the 'active' player and that active player actually has his turn active or its not hotseat, then show the notification, else wait
; 450  : 		// The 'active' player is only set to a human and during the AI turn, the 'active' player is the last human to do their turn.
; 451  : 		if(newNotification.m_ePlayerID == GC.getGame().getActivePlayer() && (!CvPreGame::isHotSeatGame() || GET_PLAYER(GC.getGame().getActivePlayer()).isTurnActive()))

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	DWORD PTR _newNotification$[esp+116], eax
	jne	$LN5@Add
	call	?isHotSeatGame@CvPreGame@@YA_NXZ	; CvPreGame::isHotSeatGame
	test	al, al
	je	SHORT $LN4@Add
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	ecx, eax
	call	?isTurnActive@CvPlayer@@QBE_NXZ		; CvPlayer::isTurnActive
	test	al, al
	je	$LN5@Add
$LN4@Add:

; 452  : 		{
; 453  : 			GC.GetEngineUserInterface()->AddNotification(newNotification.m_iLookupIndex, newNotification.m_eNotificationType, newNotification.m_strMessage.c_str(), newNotification.m_strSummary.c_str(), newNotification.m_iGameDataIndex, newNotification.m_iExtraGameData, m_ePlayer, iX, iY);

	mov	edx, DWORD PTR _iY$[esp+108]
	mov	eax, DWORD PTR _iX$[esp+108]
	mov	ecx, DWORD PTR [esi]
	push	ebp
	push	edi
	mov	edi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	ebp, DWORD PTR [edi]
	push	edx
	mov	edx, DWORD PTR _newNotification$[esp+200]
	push	eax
	mov	eax, DWORD PTR _newNotification$[esp+200]
	push	ecx
	push	edx
	push	eax
	lea	ecx, DWORD PTR _newNotification$[esp+176]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _newNotification$[esp+152]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	ecx, DWORD PTR _newNotification$[esp+144]
	mov	edx, DWORD PTR _newNotification$[esp+228]
	push	eax
	mov	eax, DWORD PTR [ebp+204]
	push	ecx
	push	edx
	mov	ecx, edi
	call	eax

; 454  : 
; 455  : 			// Don't show effect with production notification
; 456  : 			if(eNotificationType != NOTIFICATION_PRODUCTION)

	cmp	ebx, 1996573794				; 77014c62H
	je	$LN111@Add

; 457  : 			{
; 458  : 				CvPlot* pPlot = GC.getMap().plot(iX, iY);

	mov	eax, -2147483647			; 80000001H
	cmp	DWORD PTR _iX$[esp+116], eax
	je	$LN110@Add
	cmp	DWORD PTR _iY$[esp+116], eax
	je	$LN110@Add
	mov	ebx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	al, BYTE PTR [ebx+4056]
	mov	ecx, DWORD PTR [ebx+4020]
	test	al, al
	mov	eax, DWORD PTR _iX$[esp+116]
	je	SHORT $LN61@Add
	test	eax, eax
	jge	SHORT $LN63@Add
	cdq
	idiv	ecx
	mov	edi, edx
	add	edi, ecx
	jmp	SHORT $LN65@Add
$LN63@Add:
	cmp	eax, ecx
	jl	SHORT $LN61@Add
	cdq
	idiv	ecx
	mov	edi, edx
	jmp	SHORT $LN65@Add
$LN61@Add:
	mov	edi, eax
$LN65@Add:
	mov	al, BYTE PTR [ebx+4057]
	mov	ebp, DWORD PTR [ebx+4024]
	test	al, al
	mov	eax, DWORD PTR _iY$[esp+116]
	je	SHORT $LN71@Add
	test	eax, eax
	jge	SHORT $LN73@Add
	cdq
	idiv	ebp
	add	edx, ebp
	jmp	SHORT $LN75@Add
$LN73@Add:
	cmp	eax, ebp
	jl	SHORT $LN71@Add
	cdq
	idiv	ebp
	jmp	SHORT $LN75@Add
$LN71@Add:
	mov	edx, eax
$LN75@Add:
	test	edi, edi
	jl	SHORT $LN110@Add
	cmp	edi, ecx
	jge	SHORT $LN110@Add
	test	edx, edx
	jl	SHORT $LN110@Add
	cmp	edx, ebp
	jge	SHORT $LN110@Add
	imul	ecx, edx
	add	ecx, edi
	imul	ecx, 484				; 000001e4H
	add	ecx, DWORD PTR [ebx+4068]
	mov	edi, ecx

; 459  : 				if(pPlot != NULL)

	je	SHORT $LN110@Add

; 460  : 				{
; 461  : 					auto_ptr<ICvPlot1> pDllPlot(new CvDllPlot(pPlot));

	push	12					; 0000000cH
	call	??2CvDllPlot@@SAPAXI@Z			; CvDllPlot::operator new
	add	esp, 4
	mov	DWORD PTR $T225600[esp+116], eax
	mov	BYTE PTR __$EHRec$[esp+128], 1
	test	eax, eax
	je	SHORT $LN14@Add
	push	edi
	mov	ecx, eax
	call	??0CvDllPlot@@QAE@PAVCvPlot@@@Z		; CvDllPlot::CvDllPlot
	mov	edi, eax
	jmp	SHORT $LN15@Add
$LN14@Add:
	xor	edi, edi
$LN15@Add:
	mov	DWORD PTR _pDllPlot$220917[esp+116], edi

; 462  : 					gDLL->GameplayDoFX(pDllPlot.get());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+708]
	push	-1
	push	edi
	mov	BYTE PTR __$EHRec$[esp+136], 2
	call	eax

; 463  : 				}

	mov	BYTE PTR __$EHRec$[esp+128], 0
	test	edi, edi
	je	SHORT $LN111@Add
	mov	ecx, DWORD PTR [edi]
	mov	edx, DWORD PTR [ecx+4]
	push	edi
	call	edx

; 464  : 				else

	jmp	SHORT $LN111@Add
$LN110@Add:

; 465  : 				{
; 466  : 					gDLL->GameplayDoFX(NULL);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+708]
	push	-1
	push	0
	call	edx
$LN111@Add:

; 467  : 				}
; 468  : 
; 469  : 
; 470  : 			}
; 471  : 			m_aNotifications[m_iNotificationsEndIndex].m_bNeedsBroadcast = false;

	mov	eax, DWORD PTR [esi+24]
	mov	ecx, DWORD PTR [esi+8]
	imul	eax, 92					; 0000005cH
	pop	edi
	mov	BYTE PTR [eax+ecx+88], 0
	pop	ebp
$LN5@Add:

; 472  : 		}
; 473  : 
; 474  : 		gDLL->GameplayMinimapNotification(iX, iY, m_iCurrentLookupIndex+1);	// The index is used to uniquely identify each flashing dot on the minimap. We're adding 1 since the selected unit is always 0. It ain't pretty, but it'll work

	mov	eax, DWORD PTR [esi+28]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	edx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [edx+800]
	inc	eax
	push	eax
	mov	eax, DWORD PTR _iY$[esp+112]
	push	eax
	mov	eax, DWORD PTR _iX$[esp+116]
	push	eax
	call	edx
$LN112@Add:

; 475  : 	}
; 476  : 
; 477  : 	IncrementEndIndex();

	mov	ecx, esi
	call	?IncrementEndIndex@CvNotifications@@IAEXXZ ; CvNotifications::IncrementEndIndex

; 478  : 
; 479  : 	m_iCurrentLookupIndex++;

	inc	DWORD PTR [esi+28]

; 480  : 
; 481  : 	return newNotification.m_iLookupIndex;

	mov	esi, DWORD PTR _newNotification$[esp+196]
	lea	ecx, DWORD PTR _newNotification$[esp+112]
	mov	DWORD PTR __$EHRec$[esp+120], -1
	call	??1Notification@CvNotifications@@QAE@XZ

; 482  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+112]
	pop	ebx
	mov	eax, esi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 104				; 00000068H
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z$0:
	lea	ecx, DWORD PTR _newNotification$[ebp]
	jmp	??1Notification@CvNotifications@@QAE@XZ
__unwindfunclet$?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z$1:
	mov	eax, DWORD PTR $T225600[ebp-4]
	push	eax
	call	??3CvDllPlot@@SAXPAX@Z			; CvDllPlot::operator delete
	pop	ecx
	ret	0
__unwindfunclet$?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z$2:
	lea	ecx, DWORD PTR _pDllPlot$220917[ebp-4]
	jmp	??1?$auto_ptr@VICvPlot1@@@std@@QAE@XZ	; std::auto_ptr<ICvPlot1>::~auto_ptr<ICvPlot1>
__ehhandler$?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z:
	mov	eax, OFFSET __ehfuncinfo$?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ENDP ; CvNotifications::Add
PUBLIC	?Activate@CvNotifications@@QAEXH@Z		; CvNotifications::Activate
; Function compile flags: /Ogtpy
;	COMDAT ?Activate@CvNotifications@@QAEXH@Z
_TEXT	SEGMENT
_iLookupIndex$ = 8					; size = 4
?Activate@CvNotifications@@QAEXH@Z PROC			; CvNotifications::Activate, COMDAT
; _this$ = ecx

; 486  : {

	push	edi

; 487  : 	int iIndex = m_iNotificationsBeginIndex;

	mov	edi, DWORD PTR [ecx+20]

; 488  : 	while(iIndex != m_iNotificationsEndIndex)

	cmp	edi, DWORD PTR [ecx+24]
	je	SHORT $LN3@Activate@2
	push	ebx
	mov	ebx, DWORD PTR [ecx+8]
	push	ebp
	mov	ebp, DWORD PTR _iLookupIndex$[esp+8]
	push	esi
$LL4@Activate@2:

; 489  : 	{
; 490  : 		if(m_aNotifications[iIndex].m_iLookupIndex == iLookupIndex)

	mov	eax, edi
	imul	eax, 92					; 0000005cH
	cmp	DWORD PTR [eax+ebx+84], ebp
	je	SHORT $LN14@Activate@2

; 493  : 			break;
; 494  : 		}
; 495  : 		iIndex++;
; 496  : 		if(iIndex >= (int)m_aNotifications.size())

	mov	esi, DWORD PTR [ecx+12]
	sub	esi, ebx
	mov	eax, -1307163959			; b21642c9H
	imul	esi
	add	edx, esi
	sar	edx, 6
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	inc	edi
	add	eax, edx
	cmp	edi, eax
	jl	SHORT $LN1@Activate@2

; 497  : 		{
; 498  : 			iIndex = 0;

	xor	edi, edi
$LN1@Activate@2:

; 488  : 	while(iIndex != m_iNotificationsEndIndex)

	cmp	edi, DWORD PTR [ecx+24]
	jne	SHORT $LL4@Activate@2
	pop	esi
	pop	ebp
	pop	ebx
	pop	edi

; 499  : 		}
; 500  : 	}
; 501  : }

	ret	4
$LN14@Activate@2:

; 491  : 		{
; 492  : 			Activate(m_aNotifications[iIndex]);

	imul	edi, 92					; 0000005cH
	add	edi, ebx
	push	edi
	call	?Activate@CvNotifications@@QAEXAAUNotification@1@@Z ; CvNotifications::Activate
	pop	esi
	pop	ebp
	pop	ebx
$LN3@Activate@2:
	pop	edi

; 499  : 		}
; 500  : 	}
; 501  : }

	ret	4
?Activate@CvNotifications@@QAEXH@Z ENDP			; CvNotifications::Activate
_TEXT	ENDS
PUBLIC	?AddToPlayer@CvNotifications@@SAXW4PlayerTypes@@W4NotificationTypes@@PBD2HHHH@Z ; CvNotifications::AddToPlayer
EXTRN	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ:PROC ; CvPlayer::GetNotifications
EXTRN	?isLocalPlayer@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::isLocalPlayer
; Function compile flags: /Ogtpy
;	COMDAT ?AddToPlayer@CvNotifications@@SAXW4PlayerTypes@@W4NotificationTypes@@PBD2HHHH@Z
_TEXT	SEGMENT
_ePlayer$ = 8						; size = 4
_eNotificationType$ = 12				; size = 4
_strMessage$ = 16					; size = 4
_strSummary$ = 20					; size = 4
_iX$ = 24						; size = 4
_iY$ = 28						; size = 4
_iGameDataIndex$ = 32					; size = 4
_iExtraGameData$ = 36					; size = 4
?AddToPlayer@CvNotifications@@SAXW4PlayerTypes@@W4NotificationTypes@@PBD2HHHH@Z PROC ; CvNotifications::AddToPlayer, COMDAT

; 1983 : 	if(ePlayer != NO_PLAYER)

	mov	eax, DWORD PTR _ePlayer$[esp-4]
	cmp	eax, -1
	je	SHORT $LN1@AddToPlaye

; 1984 : 	{
; 1985 : 		CvPlayer& kPlayer = GET_PLAYER(ePlayer);

	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	esi
	mov	esi, eax

; 1986 : 
; 1987 : 		if(kPlayer.isLocalPlayer())

	mov	ecx, esi
	call	?isLocalPlayer@CvPlayer@@QBE_NXZ	; CvPlayer::isLocalPlayer
	test	al, al
	je	SHORT $LN8@AddToPlaye

; 1988 : 		{
; 1989 : 			CvNotifications* pNotifications = kPlayer.GetNotifications();

	mov	ecx, esi
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications

; 1990 : 			if(pNotifications)

	test	eax, eax
	je	SHORT $LN8@AddToPlaye

; 1991 : 			{
; 1992 : 				pNotifications->Add(eNotificationType, strMessage, strSummary, iX, iY, iGameDataIndex, iExtraGameData);

	mov	ecx, DWORD PTR _iExtraGameData$[esp]
	mov	edx, DWORD PTR _iGameDataIndex$[esp]
	push	ecx
	mov	ecx, DWORD PTR _iY$[esp+4]
	push	edx
	mov	edx, DWORD PTR _iX$[esp+8]
	push	ecx
	mov	ecx, DWORD PTR _strSummary$[esp+12]
	push	edx
	mov	edx, DWORD PTR _strMessage$[esp+16]
	push	ecx
	mov	ecx, DWORD PTR _eNotificationType$[esp+20]
	push	edx
	push	ecx
	mov	ecx, eax
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add
$LN8@AddToPlaye:
	pop	esi
$LN1@AddToPlaye:

; 1993 : 			}
; 1994 : 		}
; 1995 : 	}
; 1996 : }

	ret	0
?AddToPlayer@CvNotifications@@SAXW4PlayerTypes@@W4NotificationTypes@@PBD2HHHH@Z ENDP ; CvNotifications::AddToPlayer
_TEXT	ENDS
PUBLIC	??0?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAE@XZ ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\vector
;	COMDAT ??0?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAE@XZ PROC ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >, COMDAT
; _this$ = ecx

; 470  : 		{	// construct empty vector

	mov	eax, ecx

; 471  : 		_Buy(0);

	xor	ecx, ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx

; 472  : 		}

	ret	0
??0?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAE@XZ ENDP ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >
_TEXT	ENDS
PUBLIC	??$_Unchecked_move_backward@PAUNotification@CvNotifications@@PAU12@@stdext@@YAPAUNotification@CvNotifications@@PAU12@00@Z ; stdext::_Unchecked_move_backward<CvNotifications::Notification *,CvNotifications::Notification *>
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\xutility
;	COMDAT ??$_Unchecked_move_backward@PAUNotification@CvNotifications@@PAU12@@stdext@@YAPAUNotification@CvNotifications@@PAU12@00@Z
_TEXT	SEGMENT
$T225967 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$225970 = 16					; size = 1
$T225949 = 16						; size = 1
__Dest$ = 16						; size = 4
??$_Unchecked_move_backward@PAUNotification@CvNotifications@@PAU12@@stdext@@YAPAUNotification@CvNotifications@@PAU12@00@Z PROC ; stdext::_Unchecked_move_backward<CvNotifications::Notification *,CvNotifications::Notification *>, COMDAT

; 3694 : 	{	// move [_First, _Last) backwards to [..., _Dest)

	push	ecx

; 3695 : 		return (_STD _Move_backward_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3696 : 			_STD _Iter_random(_First, _Dest), _STD _Move_cat(_Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Cat$225970[esp]
	mov	edx, DWORD PTR $T225949[esp]
	mov	BYTE PTR $T225967[esp+4], 0
	mov	eax, DWORD PTR $T225967[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Copy_backward_opt@PAUNotification@CvNotifications@@PAU12@Urandom_access_iterator_tag@std@@@std@@YAPAUNotification@CvNotifications@@PAU12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<CvNotifications::Notification *,CvNotifications::Notification *,std::random_access_iterator_tag>

; 3697 : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$_Unchecked_move_backward@PAUNotification@CvNotifications@@PAU12@@stdext@@YAPAUNotification@CvNotifications@@PAU12@00@Z ENDP ; stdext::_Unchecked_move_backward<CvNotifications::Notification *,CvNotifications::Notification *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@0AAV?$allocator@W4BeliefTypes@@@0@@Z ; std::_Destroy_range<std::allocator<enum BeliefTypes> >
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@0AAV?$allocator@W4BeliefTypes@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@0AAV?$allocator@W4BeliefTypes@@@0@@Z PROC ; std::_Destroy_range<std::allocator<enum BeliefTypes> >, COMDAT

; 225  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 226  : 	}

	ret	0
??$_Destroy_range@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@0AAV?$allocator@W4BeliefTypes@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<enum BeliefTypes> >
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@UNotification@CvNotifications@@@std@@QAEXPAUNotification@CvNotifications@@@Z ; std::allocator<CvNotifications::Notification>::destroy
; Function compile flags: /Ogtpy
;	COMDAT ?destroy@?$allocator@UNotification@CvNotifications@@@std@@QAEXPAUNotification@CvNotifications@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@UNotification@CvNotifications@@@std@@QAEXPAUNotification@CvNotifications@@@Z PROC ; std::allocator<CvNotifications::Notification>::destroy, COMDAT
; _this$ = ecx

; 160  : 		_Destroy(_Ptr);

	mov	ecx, DWORD PTR __Ptr$[esp-4]
	call	??1Notification@CvNotifications@@QAE@XZ

; 161  : 		}

	ret	4
?destroy@?$allocator@UNotification@CvNotifications@@@std@@QAEXPAUNotification@CvNotifications@@@Z ENDP ; std::allocator<CvNotifications::Notification>::destroy
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@PAUNotification@CvNotifications@@PAU12@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAPAUNotification@CvNotifications@@PAU12@00AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<CvNotifications::Notification *,CvNotifications::Notification *,std::allocator<CvNotifications::Notification> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Uninit_copy@PAUNotification@CvNotifications@@PAU12@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAPAUNotification@CvNotifications@@PAU12@00AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_copy@PAUNotification@CvNotifications@@PAU12@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAPAUNotification@CvNotifications@@PAU12@00AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0
__tryblocktable$??$_Uninit_copy@PAUNotification@CvNotifications@@PAU12@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAPAUNotification@CvNotifications@@PAU12@00AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_copy@PAUNotification@CvNotifications@@PAU12@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAPAUNotification@CvNotifications@@PAU12@00AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$3
__unwindtable$??$_Uninit_copy@PAUNotification@CvNotifications@@PAU12@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAPAUNotification@CvNotifications@@PAU12@00AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Uninit_copy@PAUNotification@CvNotifications@@PAU12@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAPAUNotification@CvNotifications@@PAU12@00AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$??$_Uninit_copy@PAUNotification@CvNotifications@@PAU12@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAPAUNotification@CvNotifications@@PAU12@00AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Uninit_copy@PAUNotification@CvNotifications@@PAU12@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAPAUNotification@CvNotifications@@PAU12@00AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_copy@PAUNotification@CvNotifications@@PAU12@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAPAUNotification@CvNotifications@@PAU12@00AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\memory
xdata$x	ENDS
;	COMDAT ??$_Uninit_copy@PAUNotification@CvNotifications@@PAU12@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAPAUNotification@CvNotifications@@PAU12@00AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T226029 = -24						; size = 4
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Vptr$226026 = 8					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_copy@PAUNotification@CvNotifications@@PAU12@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAPAUNotification@CvNotifications@@PAU12@00AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_copy<CvNotifications::Notification *,CvNotifications::Notification *,std::allocator<CvNotifications::Notification> >, COMDAT

; 124  : 	{	// copy [_First, _Last) to raw _Dest, using _Al, arbitrary type

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_copy@PAUNotification@CvNotifications@@PAU12@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAPAUNotification@CvNotifications@@PAU12@00AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi

; 125  : 	_DEBUG_RANGE(_First, _Last);
; 126  : 	_DEBUG_POINTER(_Dest);
; 127  : 	_FwdIt _Next = _Dest;

	mov	esi, DWORD PTR __Dest$[ebp]
	push	edi

; 128  : 
; 129  : 	_TRY_BEGIN

	mov	edi, DWORD PTR __First$[ebp]
	xor	ebx, ebx
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR __Next$[ebp], esi
	mov	DWORD PTR __$EHRec$[ebp+12], ebx
	npad	1
$LL6@Uninit_cop:

; 130  : 	for (; _First != _Last; ++_Dest, ++_First)

	cmp	edi, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_cop

; 131  : 		_Al.construct(_Dest, *_First);

	mov	DWORD PTR __Vptr$226026[ebp], esi
	mov	DWORD PTR $T226029[ebp], esi
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	cmp	esi, ebx
	je	SHORT $LN18@Uninit_cop
	push	edi
	mov	ecx, esi
	call	??0Notification@CvNotifications@@QAE@ABU01@@Z
$LN18@Uninit_cop:
	add	esi, 92					; 0000005cH
	mov	BYTE PTR __$EHRec$[ebp+12], bl
	mov	DWORD PTR __Dest$[ebp], esi
	add	edi, 92					; 0000005cH
	jmp	SHORT $LL6@Uninit_cop
__catch$??$_Uninit_copy@PAUNotification@CvNotifications@@PAU12@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAPAUNotification@CvNotifications@@PAU12@00AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0:

; 132  : 	_CATCH_ALL
; 133  : 	for (; _Next != _Dest; ++_Next)

	mov	esi, DWORD PTR __Next$[ebp]
	mov	edi, DWORD PTR __Dest$[ebp]
	cmp	esi, edi
	je	SHORT $LN1@Uninit_cop
$LL3@Uninit_cop:

; 134  : 		_Al.destroy(_Next);

	mov	ecx, esi
	call	??1Notification@CvNotifications@@QAE@XZ
	add	esi, 92					; 0000005cH
	cmp	esi, edi
	jne	SHORT $LL3@Uninit_cop
$LN1@Uninit_cop:

; 135  : 	_RERAISE;

	xor	ebx, ebx
	push	ebx
	push	ebx
	call	__CxxThrowException@8
$LN36@Uninit_cop:
$LN4@Uninit_cop:

; 136  : 	_CATCH_END
; 137  : 	return (_Dest);
; 138  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	mov	eax, esi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN35@Uninit_cop:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninit_copy@PAUNotification@CvNotifications@@PAU12@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAPAUNotification@CvNotifications@@PAU12@00AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2:
	mov	eax, DWORD PTR __Vptr$226026[ebp]
	push	eax
	mov	ecx, DWORD PTR $T226029[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Uninit_copy@PAUNotification@CvNotifications@@PAU12@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAPAUNotification@CvNotifications@@PAU12@00AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z:
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_copy@PAUNotification@CvNotifications@@PAU12@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAPAUNotification@CvNotifications@@PAU12@00AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_copy@PAUNotification@CvNotifications@@PAU12@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAPAUNotification@CvNotifications@@PAU12@00AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<CvNotifications::Notification *,CvNotifications::Notification *,std::allocator<CvNotifications::Notification> >
PUBLIC	?AddByName@CvNotifications@@QAEHPBD00HHHH@Z	; CvNotifications::AddByName
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvnotifications.cpp
;	COMDAT ?AddByName@CvNotifications@@QAEHPBD00HHHH@Z
_TEXT	SEGMENT
_pszNotificationName$ = 8				; size = 4
_strMessage$ = 12					; size = 4
_strSummary$ = 16					; size = 4
_iX$ = 20						; size = 4
_iY$ = 24						; size = 4
_iGameDataIndex$ = 28					; size = 4
_iExtraGameData$ = 32					; size = 4
?AddByName@CvNotifications@@QAEHPBD00HHHH@Z PROC	; CvNotifications::AddByName, COMDAT
; _this$ = ecx

; 392  : 	if (pszNotificationName && pszNotificationName[0] != 0)

	mov	eax, DWORD PTR _pszNotificationName$[esp-4]
	push	esi
	mov	esi, ecx
	test	eax, eax
	je	SHORT $LN1@AddByName
	cmp	BYTE PTR [eax], 0
	je	SHORT $LN1@AddByName

; 393  : 	{
; 394  : 		return Add((NotificationTypes) FString::Hash(pszNotificationName), strMessage, strSummary, iX, iY, iGameDataIndex, iExtraGameData);

	mov	ecx, DWORD PTR _iExtraGameData$[esp]
	mov	edx, DWORD PTR _iGameDataIndex$[esp]
	push	ecx
	mov	ecx, DWORD PTR _iY$[esp+4]
	push	edx
	mov	edx, DWORD PTR _iX$[esp+8]
	push	ecx
	mov	ecx, DWORD PTR _strSummary$[esp+12]
	push	edx
	mov	edx, DWORD PTR _strMessage$[esp+16]
	push	ecx
	push	edx
	push	eax
	call	?Hash@FStringA@@SAIPBD@Z		; FStringA::Hash
	add	esp, 4
	push	eax
	mov	ecx, esi
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add
	pop	esi

; 397  : }

	ret	28					; 0000001cH
$LN1@AddByName:

; 395  : 	}
; 396  : 	return -1;

	or	eax, -1
	pop	esi

; 397  : }

	ret	28					; 0000001cH
?AddByName@CvNotifications@@QAEHPBD00HHHH@Z ENDP	; CvNotifications::AddByName
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXPAW4BeliefTypes@@0@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Destroy
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\vector
;	COMDAT ?_Destroy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXPAW4BeliefTypes@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXPAW4BeliefTypes@@0@Z PROC ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Destroy, COMDAT
; _this$ = ecx

; 1119 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1120 : 		}

	ret	8
?_Destroy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXPAW4BeliefTypes@@0@Z ENDP ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Destroy
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAXPAUNotification@CvNotifications@@0AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<CvNotifications::Notification> >
;	COMDAT xdata$x
; File s:\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$??$_Destroy_range@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAXPAUNotification@CvNotifications@@0AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Destroy_range@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAXPAUNotification@CvNotifications@@0AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$0
__ehfuncinfo$??$_Destroy_range@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAXPAUNotification@CvNotifications@@0AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Destroy_range@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAXPAUNotification@CvNotifications@@0AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Destroy_range@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAXPAUNotification@CvNotifications@@0AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAXPAUNotification@CvNotifications@@0AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<CvNotifications::Notification> >, COMDAT

; 232  : 	{	// destroy [_First, _Last), arbitrary type

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$??$_Destroy_range@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAXPAUNotification@CvNotifications@@0AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	push	esi

; 233  : 	for (; _First != _Last; ++_First)

	mov	esi, DWORD PTR __First$[esp+12]
	push	edi
	mov	edi, DWORD PTR __Last$[esp+16]
	cmp	esi, edi
	je	SHORT $LN1@Destroy_ra
$LL3@Destroy_ra:

; 234  : 		_Al.destroy(_First);

	lea	ecx, DWORD PTR [esi+36]
	mov	DWORD PTR __$EHRec$[esp+28], 0
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR [esi+8]
	mov	DWORD PTR __$EHRec$[esp+28], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	add	esi, 92					; 0000005cH
	mov	DWORD PTR __First$[esp+16], esi
	cmp	esi, edi
	jne	SHORT $LL3@Destroy_ra
$LN1@Destroy_ra:

; 235  : 	}

	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	pop	edi
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Destroy_range@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAXPAUNotification@CvNotifications@@0AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$0:
	mov	ecx, DWORD PTR __First$[ebp-4]
	add	ecx, 8
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$??$_Destroy_range@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAXPAUNotification@CvNotifications@@0AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z:
	mov	eax, OFFSET __ehfuncinfo$??$_Destroy_range@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAXPAUNotification@CvNotifications@@0AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Destroy_range@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAXPAUNotification@CvNotifications@@0AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<CvNotifications::Notification> >
PUBLIC	??$_Uninit_fill_n@PAUNotification@CvNotifications@@IU12@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAXPAUNotification@CvNotifications@@IABU12@AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<CvNotifications::Notification *,unsigned int,CvNotifications::Notification,std::allocator<CvNotifications::Notification> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Uninit_fill_n@PAUNotification@CvNotifications@@IU12@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAXPAUNotification@CvNotifications@@IABU12@AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_fill_n@PAUNotification@CvNotifications@@IU12@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAXPAUNotification@CvNotifications@@IABU12@AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0
__tryblocktable$??$_Uninit_fill_n@PAUNotification@CvNotifications@@IU12@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAXPAUNotification@CvNotifications@@IABU12@AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_fill_n@PAUNotification@CvNotifications@@IU12@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAXPAUNotification@CvNotifications@@IABU12@AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$3
__unwindtable$??$_Uninit_fill_n@PAUNotification@CvNotifications@@IU12@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAXPAUNotification@CvNotifications@@IABU12@AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Uninit_fill_n@PAUNotification@CvNotifications@@IU12@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAXPAUNotification@CvNotifications@@IABU12@AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$??$_Uninit_fill_n@PAUNotification@CvNotifications@@IU12@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAXPAUNotification@CvNotifications@@IABU12@AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Uninit_fill_n@PAUNotification@CvNotifications@@IU12@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAXPAUNotification@CvNotifications@@IABU12@AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_fill_n@PAUNotification@CvNotifications@@IU12@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAXPAUNotification@CvNotifications@@IABU12@AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\memory
xdata$x	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUNotification@CvNotifications@@IU12@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAXPAUNotification@CvNotifications@@IABU12@AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T226169 = -24						; size = 4
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Vptr$226166 = 12					; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_fill_n@PAUNotification@CvNotifications@@IU12@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAXPAUNotification@CvNotifications@@IABU12@AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_fill_n<CvNotifications::Notification *,unsigned int,CvNotifications::Notification,std::allocator<CvNotifications::Notification> >, COMDAT

; 393  : 	{	// copy _Count *_Val to raw _First, using _Al, arbitrary type

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_fill_n@PAUNotification@CvNotifications@@IU12@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAXPAUNotification@CvNotifications@@IABU12@AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi

; 394  : 
; 395  :  #if _HAS_ITERATOR_DEBUGGING
; 396  : //	if (_Count < 0)
; 397  : //		_DEBUG_ERROR("negative count in uninitialized fill");
; 398  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 399  : 
; 400  : 	_FwdIt _Next = _First;

	mov	esi, DWORD PTR __First$[ebp]
	push	edi

; 401  : 
; 402  : 	_TRY_BEGIN

	mov	edi, DWORD PTR __Count$[ebp]
	xor	ebx, ebx
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR __Next$[ebp], esi
	mov	DWORD PTR __$EHRec$[ebp+12], ebx
	npad	1
$LL6@Uninit_fil:

; 403  : 	for (; 0 < _Count; --_Count, ++_First)

	cmp	edi, ebx
	jbe	SHORT $LN4@Uninit_fil

; 404  : 		_Al.construct(_First, _Val);

	mov	DWORD PTR __Vptr$226166[ebp], esi
	mov	DWORD PTR $T226169[ebp], esi
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	cmp	esi, ebx
	je	SHORT $LN18@Uninit_fil
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, esi
	call	??0Notification@CvNotifications@@QAE@ABU01@@Z
$LN18@Uninit_fil:
	dec	edi
	add	esi, 92					; 0000005cH
	mov	BYTE PTR __$EHRec$[ebp+12], bl
	mov	DWORD PTR __First$[ebp], esi
	jmp	SHORT $LL6@Uninit_fil
__catch$??$_Uninit_fill_n@PAUNotification@CvNotifications@@IU12@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAXPAUNotification@CvNotifications@@IABU12@AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0:

; 405  : 	_CATCH_ALL
; 406  : 	for (; _Next != _First; ++_Next)

	mov	esi, DWORD PTR __Next$[ebp]
	mov	edi, DWORD PTR __First$[ebp]
	cmp	esi, edi
	je	SHORT $LN1@Uninit_fil
$LL3@Uninit_fil:

; 407  : 		_Al.destroy(_Next);

	mov	ecx, esi
	call	??1Notification@CvNotifications@@QAE@XZ
	add	esi, 92					; 0000005cH
	cmp	esi, edi
	jne	SHORT $LL3@Uninit_fil
$LN1@Uninit_fil:

; 408  : 	_RERAISE;

	xor	ebx, ebx
	push	ebx
	push	ebx
	call	__CxxThrowException@8
$LN36@Uninit_fil:
$LN4@Uninit_fil:

; 409  : 	_CATCH_END
; 410  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN35@Uninit_fil:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninit_fill_n@PAUNotification@CvNotifications@@IU12@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAXPAUNotification@CvNotifications@@IABU12@AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2:
	mov	eax, DWORD PTR __Vptr$226166[ebp]
	push	eax
	mov	ecx, DWORD PTR $T226169[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Uninit_fill_n@PAUNotification@CvNotifications@@IU12@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAXPAUNotification@CvNotifications@@IABU12@AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z:
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_fill_n@PAUNotification@CvNotifications@@IU12@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAXPAUNotification@CvNotifications@@IABU12@AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_fill_n@PAUNotification@CvNotifications@@IU12@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAXPAUNotification@CvNotifications@@IABU12@AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_fill_n<CvNotifications::Notification *,unsigned int,CvNotifications::Notification,std::allocator<CvNotifications::Notification> >
PUBLIC	??$unchecked_uninitialized_copy@PAUNotification@CvNotifications@@PAU12@V?$allocator@UNotification@CvNotifications@@@std@@@stdext@@YAPAUNotification@CvNotifications@@PAU12@00AAV?$allocator@UNotification@CvNotifications@@@std@@@Z ; stdext::unchecked_uninitialized_copy<CvNotifications::Notification *,CvNotifications::Notification *,std::allocator<CvNotifications::Notification> >
; Function compile flags: /Ogtpy
;	COMDAT ??$unchecked_uninitialized_copy@PAUNotification@CvNotifications@@PAU12@V?$allocator@UNotification@CvNotifications@@@std@@@stdext@@YAPAUNotification@CvNotifications@@PAU12@00AAV?$allocator@UNotification@CvNotifications@@@std@@@Z
_TEXT	SEGMENT
$T226208 = -4						; size = 1
__Cat$226212 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_copy@PAUNotification@CvNotifications@@PAU12@V?$allocator@UNotification@CvNotifications@@@std@@@stdext@@YAPAUNotification@CvNotifications@@PAU12@00AAV?$allocator@UNotification@CvNotifications@@@std@@@Z PROC ; stdext::unchecked_uninitialized_copy<CvNotifications::Notification *,CvNotifications::Notification *,std::allocator<CvNotifications::Notification> >, COMDAT

; 819  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

	push	ecx

; 820  : 	return (_STD _Uninit_copy(_CHECKED_BASE(_First),
; 821  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 822  : 		_STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T226208[esp+4], 0
	mov	eax, DWORD PTR $T226208[esp+4]
	mov	ecx, DWORD PTR __Cat$226212[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAUNotification@CvNotifications@@PAU12@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAPAUNotification@CvNotifications@@PAU12@00AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<CvNotifications::Notification *,CvNotifications::Notification *,std::allocator<CvNotifications::Notification> >

; 823  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$unchecked_uninitialized_copy@PAUNotification@CvNotifications@@PAU12@V?$allocator@UNotification@CvNotifications@@@std@@@stdext@@YAPAUNotification@CvNotifications@@PAU12@00AAV?$allocator@UNotification@CvNotifications@@@std@@@Z ENDP ; stdext::unchecked_uninitialized_copy<CvNotifications::Notification *,CvNotifications::Notification *,std::allocator<CvNotifications::Notification> >
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXXZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Tidy
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\vector
;	COMDAT ?_Tidy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXXZ PROC ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	esi
	mov	esi, ecx

; 1124 : 		if (_Myfirst != 0)

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN4@Tidy

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);
; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@Tidy:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 1135 : 		}

	ret	0
?_Tidy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXXZ ENDP ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Tidy
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAXPAUNotification@CvNotifications@@0AAV?$allocator@UNotification@CvNotifications@@@0@@Z ; std::_Destroy_range<std::allocator<CvNotifications::Notification> >
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAXPAUNotification@CvNotifications@@0AAV?$allocator@UNotification@CvNotifications@@@0@@Z
_TEXT	SEGMENT
__Cat$226228 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAXPAUNotification@CvNotifications@@0AAV?$allocator@UNotification@CvNotifications@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CvNotifications::Notification> >, COMDAT

; 224  : 	{	// destroy [_First, _Last)

	push	ecx

; 225  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));

	mov	eax, DWORD PTR __Cat$226228[esp+4]
	mov	ecx, DWORD PTR __Al$[esp]
	mov	edx, DWORD PTR __Last$[esp]
	push	eax
	mov	eax, DWORD PTR __First$[esp+4]
	push	ecx
	push	edx
	push	eax
	call	??$_Destroy_range@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAXPAUNotification@CvNotifications@@0AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<CvNotifications::Notification> >

; 226  : 	}

	add	esp, 20					; 00000014H
	ret	0
??$_Destroy_range@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAXPAUNotification@CvNotifications@@0AAV?$allocator@UNotification@CvNotifications@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CvNotifications::Notification> >
_TEXT	ENDS
PUBLIC	??$unchecked_uninitialized_fill_n@PAUNotification@CvNotifications@@IU12@V?$allocator@UNotification@CvNotifications@@@std@@@stdext@@YAXPAUNotification@CvNotifications@@IABU12@AAV?$allocator@UNotification@CvNotifications@@@std@@@Z ; stdext::unchecked_uninitialized_fill_n<CvNotifications::Notification *,unsigned int,CvNotifications::Notification,std::allocator<CvNotifications::Notification> >
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\memory
;	COMDAT ??$unchecked_uninitialized_fill_n@PAUNotification@CvNotifications@@IU12@V?$allocator@UNotification@CvNotifications@@@std@@@stdext@@YAXPAUNotification@CvNotifications@@IABU12@AAV?$allocator@UNotification@CvNotifications@@@std@@@Z
_TEXT	SEGMENT
$T226233 = -4						; size = 1
__Cat$226237 = -4					; size = 1
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_fill_n@PAUNotification@CvNotifications@@IU12@V?$allocator@UNotification@CvNotifications@@@std@@@stdext@@YAXPAUNotification@CvNotifications@@IABU12@AAV?$allocator@UNotification@CvNotifications@@@std@@@Z PROC ; stdext::unchecked_uninitialized_fill_n<CvNotifications::Notification *,unsigned int,CvNotifications::Notification,std::allocator<CvNotifications::Notification> >, COMDAT

; 940  : 	{	// copy _Count *_Val to raw _First, using _Al

	push	ecx

; 941  : 	_STD _Uninit_fill_n(_First, _Count, _Val, _Al,
; 942  : 		_STD _Ptr_cat(_First, _First), _STD _Range_checked_iterator_tag());

	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T226233[esp+4], 0
	mov	eax, DWORD PTR $T226233[esp+4]
	mov	ecx, DWORD PTR __Cat$226237[esp+4]
	push	eax
	mov	eax, DWORD PTR __Val$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Count$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_fill_n@PAUNotification@CvNotifications@@IU12@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAXPAUNotification@CvNotifications@@IABU12@AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<CvNotifications::Notification *,unsigned int,CvNotifications::Notification,std::allocator<CvNotifications::Notification> >

; 943  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$unchecked_uninitialized_fill_n@PAUNotification@CvNotifications@@IU12@V?$allocator@UNotification@CvNotifications@@@std@@@stdext@@YAXPAUNotification@CvNotifications@@IABU12@AAV?$allocator@UNotification@CvNotifications@@@std@@@Z ENDP ; stdext::unchecked_uninitialized_fill_n<CvNotifications::Notification *,unsigned int,CvNotifications::Notification,std::allocator<CvNotifications::Notification> >
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAUNotification@CvNotifications@@PAU12@V?$allocator@UNotification@CvNotifications@@@std@@U_Undefined_move_tag@4@@std@@YAPAUNotification@CvNotifications@@PAU12@00AAV?$allocator@UNotification@CvNotifications@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_move<CvNotifications::Notification *,CvNotifications::Notification *,std::allocator<CvNotifications::Notification>,std::_Undefined_move_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Uninit_move@PAUNotification@CvNotifications@@PAU12@V?$allocator@UNotification@CvNotifications@@@std@@U_Undefined_move_tag@4@@std@@YAPAUNotification@CvNotifications@@PAU12@00AAV?$allocator@UNotification@CvNotifications@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T226251 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$226254 = 16					; size = 1
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_move@PAUNotification@CvNotifications@@PAU12@V?$allocator@UNotification@CvNotifications@@@std@@U_Undefined_move_tag@4@@std@@YAPAUNotification@CvNotifications@@PAU12@00AAV?$allocator@UNotification@CvNotifications@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_move<CvNotifications::Notification *,CvNotifications::Notification *,std::allocator<CvNotifications::Notification>,std::_Undefined_move_tag>, COMDAT

; 206  : 	{	// move defaults to copy if there is not a more effecient way

	push	ecx

; 207  : 	return (_STDEXT unchecked_uninitialized_copy(_First, _Last, _Dest, _Al));

	mov	ecx, DWORD PTR __Cat$226254[esp]
	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T226251[esp+4], 0
	mov	eax, DWORD PTR $T226251[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAUNotification@CvNotifications@@PAU12@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAPAUNotification@CvNotifications@@PAU12@00AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<CvNotifications::Notification *,CvNotifications::Notification *,std::allocator<CvNotifications::Notification> >

; 208  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$_Uninit_move@PAUNotification@CvNotifications@@PAU12@V?$allocator@UNotification@CvNotifications@@@std@@U_Undefined_move_tag@4@@std@@YAPAUNotification@CvNotifications@@PAU12@00AAV?$allocator@UNotification@CvNotifications@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_move<CvNotifications::Notification *,CvNotifications::Notification *,std::allocator<CvNotifications::Notification>,std::_Undefined_move_tag>
_TEXT	ENDS
PUBLIC	??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\vector
;	COMDAT ??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ PROC ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >, COMDAT
; _this$ = ecx

; 558  : 		{	// destroy the object

	push	esi
	mov	esi, ecx

; 559  : 		_Tidy();

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN6@vector
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@vector:
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 560  : 		}

	ret	0
??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ENDP ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEXPAUNotification@CvNotifications@@0@Z ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::_Destroy
; Function compile flags: /Ogtpy
;	COMDAT ?_Destroy@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEXPAUNotification@CvNotifications@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Cat$226285 = 12					; size = 1
__Last$ = 12						; size = 4
?_Destroy@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEXPAUNotification@CvNotifications@@0@Z PROC ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::_Destroy, COMDAT
; _this$ = ecx

; 1119 : 		_Destroy_range(_First, _Last, this->_Alval);

	mov	eax, DWORD PTR __Cat$226285[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	push	eax
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+4]
	push	ecx
	push	edx
	call	??$_Destroy_range@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAXPAUNotification@CvNotifications@@0AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<CvNotifications::Notification> >
	add	esp, 16					; 00000010H

; 1120 : 		}

	ret	8
?_Destroy@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEXPAUNotification@CvNotifications@@0@Z ENDP ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::_Destroy
_TEXT	ENDS
PUBLIC	?_Ufill@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEPAUNotification@CvNotifications@@PAU34@IABU34@@Z ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::_Ufill
; Function compile flags: /Ogtpy
;	COMDAT ?_Ufill@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEPAUNotification@CvNotifications@@PAU34@IABU34@@Z
_TEXT	SEGMENT
$T226301 = -4						; size = 1
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Cat$226304 = 16					; size = 1
__Val$ = 16						; size = 4
?_Ufill@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEPAUNotification@CvNotifications@@PAU34@IABU34@@Z PROC ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::_Ufill, COMDAT
; _this$ = ecx

; 1253 : 		{	// copy initializing _Count * _Val, using allocator

	push	ecx

; 1254 : 		_STDEXT unchecked_uninitialized_fill_n(_Ptr, _Count, _Val, this->_Alval);

	mov	edx, DWORD PTR __Cat$226304[esp]
	push	esi
	mov	esi, DWORD PTR __Count$[esp+4]
	push	edi
	mov	edi, DWORD PTR __Ptr$[esp+8]
	mov	BYTE PTR $T226301[esp+12], 0
	mov	eax, DWORD PTR $T226301[esp+12]
	push	eax
	mov	eax, DWORD PTR __Val$[esp+12]
	push	edx
	push	ecx
	push	eax
	push	esi
	push	edi
	call	??$_Uninit_fill_n@PAUNotification@CvNotifications@@IU12@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAXPAUNotification@CvNotifications@@IABU12@AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<CvNotifications::Notification *,unsigned int,CvNotifications::Notification,std::allocator<CvNotifications::Notification> >

; 1255 : 		return (_Ptr + _Count);

	mov	eax, esi
	imul	eax, 92					; 0000005cH
	add	esp, 24					; 00000018H
	add	eax, edi
	pop	edi
	pop	esi

; 1256 : 		}

	pop	ecx
	ret	12					; 0000000cH
?_Ufill@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEPAUNotification@CvNotifications@@PAU34@IABU34@@Z ENDP ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::_Ufill
_TEXT	ENDS
PUBLIC	??$_Unchecked_uninitialized_move@PAUNotification@CvNotifications@@PAU12@V?$allocator@UNotification@CvNotifications@@@std@@@stdext@@YAPAUNotification@CvNotifications@@PAU12@00AAV?$allocator@UNotification@CvNotifications@@@std@@@Z ; stdext::_Unchecked_uninitialized_move<CvNotifications::Notification *,CvNotifications::Notification *,std::allocator<CvNotifications::Notification> >
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\memory
;	COMDAT ??$_Unchecked_uninitialized_move@PAUNotification@CvNotifications@@PAU12@V?$allocator@UNotification@CvNotifications@@@std@@@stdext@@YAPAUNotification@CvNotifications@@PAU12@00AAV?$allocator@UNotification@CvNotifications@@@std@@@Z
_TEXT	SEGMENT
$T226335 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$226339 = 16					; size = 1
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Unchecked_uninitialized_move@PAUNotification@CvNotifications@@PAU12@V?$allocator@UNotification@CvNotifications@@@std@@@stdext@@YAPAUNotification@CvNotifications@@PAU12@00AAV?$allocator@UNotification@CvNotifications@@@std@@@Z PROC ; stdext::_Unchecked_uninitialized_move<CvNotifications::Notification *,CvNotifications::Notification *,std::allocator<CvNotifications::Notification> >, COMDAT

; 861  : 	{	// move [_First, _Last) to raw _Dest, using _Al

	push	ecx

; 862  : 	return (_STD _Uninit_move(_CHECKED_BASE(_First),
; 863  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 864  : 		_STD _Move_cat(_Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Cat$226339[esp]
	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T226335[esp+4], 0
	mov	eax, DWORD PTR $T226335[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAUNotification@CvNotifications@@PAU12@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAPAUNotification@CvNotifications@@PAU12@00AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<CvNotifications::Notification *,CvNotifications::Notification *,std::allocator<CvNotifications::Notification> >

; 865  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$_Unchecked_uninitialized_move@PAUNotification@CvNotifications@@PAU12@V?$allocator@UNotification@CvNotifications@@@std@@@stdext@@YAPAUNotification@CvNotifications@@PAU12@00AAV?$allocator@UNotification@CvNotifications@@@std@@@Z ENDP ; stdext::_Unchecked_uninitialized_move<CvNotifications::Notification *,CvNotifications::Notification *,std::allocator<CvNotifications::Notification> >
_TEXT	ENDS
PUBLIC	?IsNotificationExpired@CvNotifications@@QAE_NH@Z ; CvNotifications::IsNotificationExpired
EXTRN	?getOrderQueueLength@CvCity@@QAEHXZ:PROC	; CvCity::getOrderQueueLength
EXTRN	?IsPuppet@CvCity@@QBE_NXZ:PROC			; CvCity::IsPuppet
EXTRN	?HasCreatedReligion@CvGameReligions@@QBE_NW4PlayerTypes@@@Z:PROC ; CvGameReligions::HasCreatedReligion
EXTRN	?GetNumReligionsStillToFound@CvGameReligions@@QBEHXZ:PROC ; CvGameReligions::GetNumReligionsStillToFound
EXTRN	?GetNumVictoryVotesExpected@CvGame@@QBEHXZ:PROC	; CvGame::GetNumVictoryVotesExpected
EXTRN	?GetVoteCast@CvGame@@QBE?AW4TeamTypes@@W42@@Z:PROC ; CvGame::GetVoteCast
EXTRN	?isPromotionReady@CvUnit@@QBE_NXZ:PROC		; CvUnit::isPromotionReady
EXTRN	?ProposedDealExists@CvGameDeals@@QAE_NW4PlayerTypes@@0@Z:PROC ; CvGameDeals::ProposedDealExists
EXTRN	?HasBarbarianCamp@CvPlot@@QAE_NXZ:PROC		; CvPlot::HasBarbarianCamp
EXTRN	?GetCurrentResearch@CvPlayerTechs@@QBE?AW4TechTypes@@XZ:PROC ; CvPlayerTechs::GetCurrentResearch
EXTRN	?GetNumTechsCanBeResearched@CvPlayerTechs@@QBEHXZ:PROC ; CvPlayerTechs::GetNumTechsCanBeResearched
EXTRN	?GetPlayerTechs@CvPlayer@@QBEPAVCvPlayerTechs@@XZ:PROC ; CvPlayer::GetPlayerTechs
EXTRN	?GetNumFreeTechs@CvPlayer@@QBEHXZ:PROC		; CvPlayer::GetNumFreeTechs
EXTRN	?CanCreatePantheon@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@_N@Z:PROC ; CvGameReligions::CanCreatePantheon
EXTRN	?getNumResourceAvailable@CvPlayer@@QBEHW4ResourceTypes@@_N@Z:PROC ; CvPlayer::getNumResourceAvailable
EXTRN	?CanPropose@CvLeague@@QAE_NW4PlayerTypes@@@Z:PROC ; CvLeague::CanPropose
EXTRN	?GetNumFreeTenets@CvPlayer@@QBEHXZ:PROC		; CvPlayer::GetNumFreeTenets
EXTRN	?GetNumFreePolicies@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetNumFreePolicies
EXTRN	?getJONSCulture@CvPlayer@@QBEHXZ:PROC		; CvPlayer::getJONSCulture
EXTRN	?getNextPolicyCost@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getNextPolicyCost
EXTRN	?GetLateGamePolicyTree@CvPlayerPolicies@@QBE?AW4PolicyBranchTypes@@XZ:PROC ; CvPlayerPolicies::GetLateGamePolicyTree
EXTRN	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ:PROC ; CvPlayer::GetPlayerPolicies
EXTRN	?HasAddedReformationBelief@CvGameReligions@@QBE_NW4PlayerTypes@@@Z:PROC ; CvGameReligions::HasAddedReformationBelief
EXTRN	?GetBuyPlotCost@CvPlayer@@QBEHXZ:PROC		; CvPlayer::GetBuyPlotCost
EXTRN	?GetGold@CvTreasury@@QBEHXZ:PROC		; CvTreasury::GetGold
EXTRN	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ:PROC ; CvPlayer::GetTreasury
EXTRN	?isGoody@CvPlot@@QBE_NW4TeamTypes@@@Z:PROC	; CvPlot::isGoody
EXTRN	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z:PROC ; CvGameReligions::GetReligion
EXTRN	?GetReligionCreatedByPlayer@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z:PROC ; CvGameReligions::GetReligionCreatedByPlayer
EXTRN	?GetAvailableFollowerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ:PROC ; CvGameReligions::GetAvailableFollowerBeliefs
EXTRN	?GetAvailableEnhancerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ:PROC ; CvGameReligions::GetAvailableEnhancerBeliefs
EXTRN	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ:PROC ; CvGame::GetGameReligions
EXTRN	?GetGameDeals@CvGame@@QAEPAVCvGameDeals@@XZ:PROC ; CvGame::GetGameDeals
EXTRN	?CanRangeStrikeNow@CvCity@@QBE_NXZ:PROC		; CvCity::CanRangeStrikeNow
EXTRN	?GetNumArchaeologyChoices@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetNumArchaeologyChoices
EXTRN	?CanVote@CvLeague@@QAE_NW4PlayerTypes@@@Z:PROC	; CvLeague::CanVote
EXTRN	?GetLeague@CvGameLeagues@@QAEPAVCvLeague@@W4LeagueTypes@@@Z:PROC ; CvGameLeagues::GetLeague
EXTRN	?GetGameLeagues@CvGame@@QAEPAVCvGameLeagues@@XZ:PROC ; CvGame::GetGameLeagues
;	COMDAT xdata$x
; File s:\msvs2008\vc\include\vector
xdata$x	SEGMENT
__unwindtable$?IsNotificationExpired@CvNotifications@@QAE_NH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?IsNotificationExpired@CvNotifications@@QAE_NH@Z$0
__ehfuncinfo$?IsNotificationExpired@CvNotifications@@QAE_NH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?IsNotificationExpired@CvNotifications@@QAE_NH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvnotifications.cpp
xdata$x	ENDS
;	COMDAT ?IsNotificationExpired@CvNotifications@@QAE_NH@Z
_TEXT	SEGMENT
_pUnit$221466 = -52					; size = 8
$T226349 = -44						; size = 16
$T226351 = -28						; size = 16
__$EHRec$ = -12						; size = 12
_pkPlayerTechs$221429 = 8				; size = 4
_iIndex$ = 8						; size = 4
?IsNotificationExpired@CvNotifications@@QAE_NH@Z PROC	; CvNotifications::IsNotificationExpired, COMDAT
; _this$ = ecx

; 1462 : {

	push	-1
	mov	eax, DWORD PTR fs:0
	push	__ehhandler$?IsNotificationExpired@CvNotifications@@QAE_NH@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 40					; 00000028H
	push	ebx
	push	ebp
	push	esi
	push	edi

; 1463 : 	switch(m_aNotifications[iIndex].m_eNotificationType)

	mov	edi, DWORD PTR _iIndex$[esp+64]
	imul	edi, 92					; 0000005cH
	mov	esi, ecx
	mov	eax, DWORD PTR [esi+8]
	lea	edx, DWORD PTR [eax+edi]
	mov	eax, DWORD PTR [edx]
	cmp	eax, 507779013				; 1e4417c5H
	jg	$LN80@IsNotifica@3
	je	$LN53@IsNotifica@3
	cmp	eax, -1168514695			; ba59e179H
	jg	$LN81@IsNotifica@3
	je	$LN28@IsNotifica@3
	cmp	eax, -1421067341			; ab4c3bb3H
	jg	$LN82@IsNotifica@3
	je	$LN48@IsNotifica@3
	cmp	eax, -2068323322			; 84b7e406H
	je	$LN10@IsNotifica@3
	cmp	eax, -1774532806			; 963ac73aH
	je	SHORT $LN16@IsNotifica@3
	cmp	eax, -1746998481			; 97deeb2fH
	jne	$LN37@IsNotifica@3

; 1788 : 			{
; 1789 : 				return true;
; 1790 : 			}
; 1791 : 		}
; 1792 : 		break;
; 1793 : 
; 1794 : 	case NOTIFICATION_LEAGUE_CALL_FOR_VOTES:
; 1795 : 	{
; 1796 : #ifdef AUI_LEAGUES_FIX_POSSIBLE_DEALLOCATION_CRASH
; 1797 : 		CvLeague* pLeague = GC.getGame().GetGameLeagues()->GetActiveLeague();
; 1798 : 		if (pLeague && !pLeague->CanVote(m_ePlayer))
; 1799 : #else
; 1800 : 		LeagueTypes eLeague = (LeagueTypes) m_aNotifications[iIndex].m_iGameDataIndex;

	mov	edx, DWORD PTR [edx+72]

; 1801 : 		CvLeague* pLeague = GC.getGame().GetGameLeagues()->GetLeague(eLeague);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edx
	call	?GetGameLeagues@CvGame@@QAEPAVCvGameLeagues@@XZ ; CvGame::GetGameLeagues
	mov	ecx, eax
	call	?GetLeague@CvGameLeagues@@QAEPAVCvLeague@@W4LeagueTypes@@@Z ; CvGameLeagues::GetLeague

; 1802 : 		if (!pLeague->CanVote(m_ePlayer))

	mov	ecx, DWORD PTR [esi]
	push	ecx
	mov	ecx, eax
	call	?CanVote@CvLeague@@QAE_NW4PlayerTypes@@@Z ; CvLeague::CanVote
	pop	edi
	pop	esi
	test	al, al
	pop	ebp
	sete	al
	pop	ebx

; 1826 : 	}
; 1827 : 	break;
; 1828 : 	}
; 1829 : 
; 1830 : 	return false;
; 1831 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+52]
	mov	DWORD PTR fs:0, ecx
	add	esp, 52					; 00000034H
	ret	4
$LN16@IsNotifica@3:

; 1739 : 	}
; 1740 : 	break;
; 1741 : 
; 1742 : 	case NOTIFICATION_SPY_STOLE_TECH:
; 1743 : 	{
; 1744 : 		CvPlayerEspionage* pEspionage = GET_PLAYER(m_ePlayer).GetEspionage();

	mov	ecx, DWORD PTR [esi]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	call	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ ; CvPlayer::GetEspionage

; 1745 : 		if (pEspionage->m_aiNumTechsToStealList[m_aNotifications[iIndex].m_iGameDataIndex] <= 0)

	mov	edx, DWORD PTR [esi+8]
	mov	ecx, DWORD PTR [edx+edi+72]
	mov	edx, DWORD PTR [eax+716]
	cmp	DWORD PTR [edx+ecx*4], 0
	pop	edi
	pop	esi
	pop	ebp
	setle	al
	pop	ebx

; 1826 : 	}
; 1827 : 	break;
; 1828 : 	}
; 1829 : 
; 1830 : 	return false;
; 1831 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+52]
	mov	DWORD PTR fs:0, ecx
	add	esp, 52					; 00000034H
	ret	4
$LN10@IsNotifica@3:

; 1765 : #endif
; 1766 : 		{
; 1767 : 			return true;
; 1768 : 		}
; 1769 : 		else
; 1770 : 		{
; 1771 : 			return false;
; 1772 : 		}
; 1773 : 	}
; 1774 : 	break;
; 1775 : 
; 1776 : 	case NOTIFICATION_CHOOSE_ARCHAEOLOGY:
; 1777 : 	{
; 1778 : 		if (GET_PLAYER(m_ePlayer).GetNumArchaeologyChoices() == 0)

	mov	ecx, DWORD PTR [esi]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	call	?GetNumArchaeologyChoices@CvPlayer@@QBEHXZ ; CvPlayer::GetNumArchaeologyChoices
	test	eax, eax

; 1779 : 		{
; 1780 : 			return true;

	jmp	$LN372@IsNotifica@3
$LN48@IsNotifica@3:

; 1564 : 		}
; 1565 : 	}
; 1566 : 	break;
; 1567 : 
; 1568 : 	case NOTIFICATION_FREE_GREAT_PERSON:
; 1569 : 	{
; 1570 : 		if(GET_PLAYER(m_ePlayer).GetNumFreeGreatPeople() == 0)

	mov	ecx, DWORD PTR [esi]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	call	?GetNumFreeGreatPeople@CvPlayer@@QBEHXZ	; CvPlayer::GetNumFreeGreatPeople
	test	eax, eax
	jne	$LN37@IsNotifica@3
	pop	edi
	pop	esi
	pop	ebp

; 1571 : 		{
; 1572 : 			return true;

	mov	al, 1
	pop	ebx

; 1826 : 	}
; 1827 : 	break;
; 1828 : 	}
; 1829 : 
; 1830 : 	return false;
; 1831 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+52]
	mov	DWORD PTR fs:0, ecx
	add	esp, 52					; 00000034H
	ret	4
$LN82@IsNotifica@3:

; 1463 : 	switch(m_aNotifications[iIndex].m_eNotificationType)

	cmp	eax, -1417116259			; ab88859dH
	je	SHORT $LN3@IsNotifica@3
	cmp	eax, -1181197223			; b9985c59H
	jne	$LN37@IsNotifica@3

; 1480 : 		}
; 1481 : 	}
; 1482 : 	break;
; 1483 : 
; 1484 : 	case NOTIFICATION_CITY_RANGE_ATTACK:
; 1485 : 	{
; 1486 : 		int iCityID = m_aNotifications[iIndex].m_iGameDataIndex;
; 1487 : 		CvCity* pCity = GET_PLAYER(m_ePlayer).getCity(iCityID);

	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [edx+72]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	edx
	call	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z	; CvPlayer::getCity

; 1488 : 
; 1489 : 		if(pCity == NULL)

	test	eax, eax

; 1490 : 			return true;

	je	$LN368@IsNotifica@3

; 1491 : 
; 1492 : 		else if(!pCity->CanRangeStrikeNow())

	mov	ecx, eax
	call	?CanRangeStrikeNow@CvCity@@QBE_NXZ	; CvCity::CanRangeStrikeNow
	test	al, al
	jne	$LN37@IsNotifica@3
	pop	edi
	pop	esi
	pop	ebp

; 1493 : 			return true;

	mov	al, 1
	pop	ebx

; 1826 : 	}
; 1827 : 	break;
; 1828 : 	}
; 1829 : 
; 1830 : 	return false;
; 1831 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+52]
	mov	DWORD PTR fs:0, ecx
	add	esp, 52					; 00000034H
	ret	4
$LN3@IsNotifica@3:

; 1803 : #endif
; 1804 : 		{
; 1805 : 			return true;
; 1806 : 		}
; 1807 : 		else
; 1808 : 		{
; 1809 : 			return false;
; 1810 : 		}
; 1811 : 	}
; 1812 : 	break;
; 1813 : 
; 1814 : 	case NOTIFICATION_PLAYER_CONNECTING:
; 1815 : 	{
; 1816 : 		if(!gDLL->IsPlayerHotJoining(m_aNotifications[iIndex].m_iGameDataIndex)){

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [edx+72]
	mov	eax, DWORD PTR [eax+1008]
	push	edx
	call	eax

; 1817 : 			//Player has finished hot joining.  Remove this notification, we'll add a NOTIFICATION_PLAYER_RECONNECTED in NetProxy::OnHotJoinComplete().
; 1818 : 			return true;

	jmp	$LN373@IsNotifica@3
$LN28@IsNotifica@3:

; 1674 : 		}
; 1675 : 	}
; 1676 : 	break;
; 1677 : 	case NOTIFICATION_PLAYER_DEAL_RECEIVED:
; 1678 : 	{
; 1679 : 		CvGame& game = GC.getGame();
; 1680 : 		CvGameDeals* pDeals = game.GetGameDeals();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetGameDeals@CvGame@@QAEPAVCvGameDeals@@XZ ; CvGame::GetGameDeals

; 1681 : 
; 1682 : 		if(!pDeals->ProposedDealExists((PlayerTypes)(m_aNotifications[iIndex].m_iX),  m_ePlayer))

	mov	edx, DWORD PTR [esi+8]
	mov	ecx, DWORD PTR [esi]
	add	edx, edi
	mov	edx, DWORD PTR [edx+64]
	push	ecx
	push	edx

; 1683 : 		{
; 1684 : 			return true;

	jmp	$LN370@IsNotifica@3
$LN81@IsNotifica@3:

; 1463 : 	switch(m_aNotifications[iIndex].m_eNotificationType)

	cmp	eax, 84632199				; 050b6287H
	jg	$LN83@IsNotifica@3
	je	$LN22@IsNotifica@3
	cmp	eax, -851367674				; cd412906H
	je	$LN73@IsNotifica@3
	cmp	eax, -597231081				; dc66fa17H
	je	$LN65@IsNotifica@3
	cmp	eax, -372818113				; e9c73f3fH
	jne	$LN37@IsNotifica@3

; 1714 : 	}
; 1715 : 
; 1716 : 	case NOTIFICATION_FOUND_RELIGION:
; 1717 : 	{
; 1718 : 		CvGame& kGame(GC.getGame());
; 1719 : 		CvGameReligions* pkReligions(kGame.GetGameReligions());
; 1720 : 		if (pkReligions->GetNumReligionsStillToFound() <= 0)
; 1721 : 			return true;	// None left, dismiss the notification
; 1722 : 
; 1723 : 		return pkReligions->HasCreatedReligion(m_ePlayer);
; 1724 : 	}
; 1725 : 	break;
; 1726 : 
; 1727 : 	case NOTIFICATION_ENHANCE_RELIGION:
; 1728 : 	{
; 1729 : 		CvGame& kGame(GC.getGame());
; 1730 : 		CvGameReligions* pkReligions(kGame.GetGameReligions());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	edi, eax

; 1731 : 		if (pkReligions->GetAvailableEnhancerBeliefs().size() == 0)

	lea	eax, DWORD PTR $T226349[esp+68]
	push	eax
	mov	ecx, edi
	call	?GetAvailableEnhancerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ; CvGameReligions::GetAvailableEnhancerBeliefs
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, DWORD PTR [eax+4]
	test	ecx, -4					; fffffffcH
	lea	ecx, DWORD PTR $T226349[esp+68]
	sete	bl
	call	??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
	test	bl, bl

; 1732 : 			return true;	// None left, dismiss the notification.

	jne	$LN368@IsNotifica@3

; 1733 : 		if (pkReligions->GetAvailableFollowerBeliefs().size() == 0)

	lea	edx, DWORD PTR $T226351[esp+68]
	push	edx
	mov	ecx, edi
	call	?GetAvailableFollowerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ; CvGameReligions::GetAvailableFollowerBeliefs
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, DWORD PTR [eax+4]
	test	ecx, -4					; fffffffcH
	lea	ecx, DWORD PTR $T226351[esp+68]
	sete	bl
	call	??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
	test	bl, bl

; 1734 : 			return true;	// None left, dismiss the notification.		

	jne	$LN368@IsNotifica@3

; 1735 : 
; 1736 : 		ReligionTypes eReligion = pkReligions->GetReligionCreatedByPlayer(m_ePlayer);

	mov	edx, DWORD PTR [esi]
	push	edx
	mov	ecx, edi
	call	?GetReligionCreatedByPlayer@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligionCreatedByPlayer

; 1737 : 		const CvReligion* pReligion = pkReligions->GetReligion(eReligion, m_ePlayer);

	mov	ecx, DWORD PTR [esi]
	push	ecx
	push	eax
	mov	ecx, edi
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion

; 1738 : 		return (NULL != pReligion && pReligion->m_bEnhanced);

	test	eax, eax
	je	SHORT $LN78@IsNotifica@3
	cmp	BYTE PTR [eax+21], bl
	je	SHORT $LN78@IsNotifica@3
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx

; 1826 : 	}
; 1827 : 	break;
; 1828 : 	}
; 1829 : 
; 1830 : 	return false;
; 1831 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+52]
	mov	DWORD PTR fs:0, ecx
	add	esp, 52					; 00000034H
	ret	4
$LN78@IsNotifica@3:
	pop	edi
	pop	esi
	pop	ebp

; 1738 : 		return (NULL != pReligion && pReligion->m_bEnhanced);

	xor	eax, eax
	pop	ebx

; 1826 : 	}
; 1827 : 	break;
; 1828 : 	}
; 1829 : 
; 1830 : 	return false;
; 1831 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+52]
	mov	DWORD PTR fs:0, ecx
	add	esp, 52					; 00000034H
	ret	4
$LN65@IsNotifica@3:

; 1494 : 	}
; 1495 : 	break;
; 1496 : 
; 1497 : 	case NOTIFICATION_GOODY:
; 1498 : 	{
; 1499 : 		CvPlot* pPlot = GC.getMap().plot(m_aNotifications[iIndex].m_iX, m_aNotifications[iIndex].m_iY);

	mov	edx, DWORD PTR [esi+8]
	mov	ebp, DWORD PTR [edx+edi+68]
	lea	eax, DWORD PTR [edx+edi]
	mov	eax, DWORD PTR [eax+64]
	cmp	eax, -2147483647			; 80000001H
	je	$LN150@IsNotifica@3
	cmp	ebp, -2147483647			; 80000001H
	je	$LN150@IsNotifica@3
	mov	ebx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	cmp	BYTE PTR [ebx+4056], 0
	mov	ecx, DWORD PTR [ebx+4020]
	je	SHORT $LN360@IsNotifica@3
	test	eax, eax
	jge	SHORT $LN162@IsNotifica@3
	cdq
	idiv	ecx
	mov	edi, edx
	add	edi, ecx
	jmp	SHORT $LN164@IsNotifica@3
$LN162@IsNotifica@3:
	cmp	eax, ecx
	jl	SHORT $LN360@IsNotifica@3
	cdq
	idiv	ecx
	mov	edi, edx
	jmp	SHORT $LN164@IsNotifica@3
$LN360@IsNotifica@3:
	mov	edi, eax
$LN164@IsNotifica@3:
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	cmp	BYTE PTR [eax+4057], 0
	mov	ebx, DWORD PTR [ebx+4024]
	je	SHORT $LN363@IsNotifica@3
	test	ebp, ebp
	jge	SHORT $LN172@IsNotifica@3
	mov	eax, ebp
	cdq
	idiv	ebx
	add	edx, ebx
	jmp	SHORT $LN174@IsNotifica@3
$LN172@IsNotifica@3:
	cmp	ebp, ebx
	jl	SHORT $LN363@IsNotifica@3
	mov	eax, ebp
	cdq
	idiv	ebx
	jmp	SHORT $LN174@IsNotifica@3
$LN363@IsNotifica@3:
	mov	edx, ebp
$LN174@IsNotifica@3:
	test	edi, edi
	jl	SHORT $LN150@IsNotifica@3
	cmp	edi, ecx
	jge	SHORT $LN150@IsNotifica@3
	test	edx, edx
	jl	SHORT $LN150@IsNotifica@3
	cmp	edx, ebx
	jge	SHORT $LN150@IsNotifica@3
	imul	ecx, edx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	add	ecx, edi
	imul	ecx, 484				; 000001e4H
	add	ecx, DWORD PTR [edx+4068]
	mov	edi, ecx
	jmp	SHORT $LN152@IsNotifica@3
$LN150@IsNotifica@3:
	xor	edi, edi
$LN152@IsNotifica@3:

; 1500 : 		if(!pPlot->isGoody(GET_PLAYER(m_ePlayer).getTeam()))

	mov	ecx, DWORD PTR [esi]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	call	?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ	; CvPlayer::getTeam
	push	eax
	mov	ecx, edi
	call	?isGoody@CvPlot@@QBE_NW4TeamTypes@@@Z	; CvPlot::isGoody
	test	al, al
	jne	$LN37@IsNotifica@3
	pop	edi
	pop	esi
	pop	ebp

; 1501 : 		{
; 1502 : 			return true;

	mov	al, 1
	pop	ebx

; 1826 : 	}
; 1827 : 	break;
; 1828 : 	}
; 1829 : 
; 1830 : 	return false;
; 1831 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+52]
	mov	DWORD PTR fs:0, ecx
	add	esp, 52					; 00000034H
	ret	4
$LN73@IsNotifica@3:

; 1464 : 	{
; 1465 : 	case NOTIFICATION_BUY_TILE:
; 1466 : 	{
; 1467 : 		if(GET_PLAYER(m_ePlayer).GetTreasury()->GetGold() < GET_PLAYER(m_ePlayer).GetBuyPlotCost())

	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	imul	eax, 63236				; 0000f704H
	lea	esi, DWORD PTR [eax+ecx]
	mov	ecx, esi
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?GetGold@CvTreasury@@QBEHXZ		; CvTreasury::GetGold
	mov	ecx, esi
	mov	edi, eax
	call	?GetBuyPlotCost@CvPlayer@@QBEHXZ	; CvPlayer::GetBuyPlotCost
	cmp	edi, eax
	jge	$LN37@IsNotifica@3
$LN368@IsNotifica@3:
	pop	edi
	pop	esi
	pop	ebp

; 1468 : 		{
; 1469 : 			return true;

	mov	al, 1
	pop	ebx

; 1826 : 	}
; 1827 : 	break;
; 1828 : 	}
; 1829 : 
; 1830 : 	return false;
; 1831 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+52]
	mov	DWORD PTR fs:0, ecx
	add	esp, 52					; 00000034H
	ret	4
$LN22@IsNotifica@3:

; 1706 : 	}
; 1707 : 	break;
; 1708 : 
; 1709 : 	case NOTIFICATION_ADD_REFORMATION_BELIEF:
; 1710 : 	{
; 1711 : 		CvGame& kGame(GC.getGame());
; 1712 : 		CvGameReligions* pkReligions(kGame.GetGameReligions());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions

; 1713 : 		return pkReligions->HasAddedReformationBelief(m_ePlayer);

	mov	edx, DWORD PTR [esi]
	push	edx
	mov	ecx, eax
	call	?HasAddedReformationBelief@CvGameReligions@@QBE_NW4PlayerTypes@@@Z ; CvGameReligions::HasAddedReformationBelief
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 1826 : 	}
; 1827 : 	break;
; 1828 : 	}
; 1829 : 
; 1830 : 	return false;
; 1831 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+52]
	mov	DWORD PTR fs:0, ecx
	add	esp, 52					; 00000034H
	ret	4
$LN83@IsNotifica@3:

; 1463 : 	switch(m_aNotifications[iIndex].m_eNotificationType)

	cmp	eax, 88900711				; 054c8467H
	je	SHORT $LN46@IsNotifica@3
	cmp	eax, 294822899				; 1192a3f3H
	jne	$LN37@IsNotifica@3

; 1781 : 		}
; 1782 : 	}
; 1783 : 	break;
; 1784 : 
; 1785 : 	case NOTIFICATION_CHOOSE_IDEOLOGY:
; 1786 : 		{
; 1787 : 			if (GET_PLAYER(m_ePlayer).GetPlayerPolicies()->GetLateGamePolicyTree() != NO_POLICY_BRANCH_TYPE)

	mov	ecx, DWORD PTR [esi]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetLateGamePolicyTree@CvPlayerPolicies@@QBE?AW4PolicyBranchTypes@@XZ ; CvPlayerPolicies::GetLateGamePolicyTree
	cmp	eax, -1
	je	$LN37@IsNotifica@3
	pop	edi
	pop	esi
	pop	ebp
	mov	al, 1
	pop	ebx

; 1826 : 	}
; 1827 : 	break;
; 1828 : 	}
; 1829 : 
; 1830 : 	return false;
; 1831 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+52]
	mov	DWORD PTR fs:0, ecx
	add	esp, 52					; 00000034H
	ret	4
$LN46@IsNotifica@3:

; 1573 : 		}
; 1574 : 	}
; 1575 : 	break;
; 1576 : 
; 1577 : 	case NOTIFICATION_MAYA_LONG_COUNT:
; 1578 : 	{
; 1579 : 		if(GET_PLAYER(m_ePlayer).GetNumMayaBoosts() == 0)

	mov	ecx, DWORD PTR [esi]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	call	?GetNumMayaBoosts@CvPlayer@@QBEHXZ	; CvPlayer::GetNumMayaBoosts
	test	eax, eax
	jne	$LN37@IsNotifica@3
	pop	edi
	pop	esi
	pop	ebp

; 1580 : 		{
; 1581 : 			return true;

	mov	al, 1
	pop	ebx

; 1826 : 	}
; 1827 : 	break;
; 1828 : 	}
; 1829 : 
; 1830 : 	return false;
; 1831 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+52]
	mov	DWORD PTR fs:0, ecx
	add	esp, 52					; 00000034H
	ret	4
$LN53@IsNotifica@3:

; 1549 : 		}
; 1550 : 	}
; 1551 : 	break;
; 1552 : 
; 1553 : 	case NOTIFICATION_FREE_POLICY:
; 1554 : 	{
; 1555 : 		if(GC.getGame().isOption(GAMEOPTION_POLICY_SAVING))

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	12					; 0000000cH
	call	?isOption@CvGame@@QBE_NW4GameOptionTypes@@@Z ; CvGame::isOption
	test	al, al

; 1556 : 		{
; 1557 : 			if(GET_PLAYER(m_ePlayer).GetNumFreePolicies() == 0 && GET_PLAYER(m_ePlayer).GetNumFreeTenets() == 0)
; 1558 : 				return true;

	jne	SHORT $LN369@IsNotifica@3
$LN52@IsNotifica@3:

; 1559 : 		}
; 1560 : 		else
; 1561 : 		{
; 1562 : 			if((GET_PLAYER(m_ePlayer).getJONSCulture() < GET_PLAYER(m_ePlayer).getNextPolicyCost() && GET_PLAYER(m_ePlayer).GetNumFreePolicies() == 0 && GET_PLAYER(m_ePlayer).GetNumFreeTenets() == 0))

	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	imul	eax, 63236				; 0000f704H
	lea	edi, DWORD PTR [eax+ecx]
	mov	ecx, edi
	call	?getNextPolicyCost@CvPlayer@@QBEHXZ	; CvPlayer::getNextPolicyCost
	mov	ecx, edi
	mov	ebx, eax
	call	?getJONSCulture@CvPlayer@@QBEHXZ	; CvPlayer::getJONSCulture
	cmp	eax, ebx
	jge	$LN37@IsNotifica@3
$LN369@IsNotifica@3:
	mov	ecx, DWORD PTR [esi]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	call	?GetNumFreePolicies@CvPlayer@@QBEHXZ	; CvPlayer::GetNumFreePolicies
	test	eax, eax
	jne	$LN37@IsNotifica@3
	mov	ecx, DWORD PTR [esi]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	call	?GetNumFreeTenets@CvPlayer@@QBEHXZ	; CvPlayer::GetNumFreeTenets
	test	eax, eax
	jne	$LN37@IsNotifica@3
	pop	edi
	pop	esi
	pop	ebp

; 1563 : 				return true;

	mov	al, 1
	pop	ebx

; 1826 : 	}
; 1827 : 	break;
; 1828 : 	}
; 1829 : 
; 1830 : 	return false;
; 1831 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+52]
	mov	DWORD PTR fs:0, ecx
	add	esp, 52					; 00000034H
	ret	4
$LN80@IsNotifica@3:

; 1463 : 	switch(m_aNotifications[iIndex].m_eNotificationType)

	cmp	eax, 1523558135				; 5acfa6f7H
	jg	$LN84@IsNotifica@3
	je	$LN63@IsNotifica@3
	cmp	eax, 1218150582				; 489b80b6H
	jg	$LN85@IsNotifica@3
	je	$LN56@IsNotifica@3
	cmp	eax, 621751847				; 250f2e27H
	je	SHORT $LN26@IsNotifica@3
	cmp	eax, 623640104				; 252bfe28H
	je	$LN52@IsNotifica@3
	cmp	eax, 755914060				; 2d0e554cH
	jne	$LN37@IsNotifica@3

; 1746 : 		{
; 1747 : 			return true;
; 1748 : 		}
; 1749 : 		else
; 1750 : 		{
; 1751 : 			return false;
; 1752 : 		}
; 1753 : 	}
; 1754 : 	break;
; 1755 : 
; 1756 : 	case NOTIFICATION_LEAGUE_CALL_FOR_PROPOSALS:
; 1757 : 	{
; 1758 : #ifdef AUI_LEAGUES_FIX_POSSIBLE_DEALLOCATION_CRASH
; 1759 : 		CvLeague* pLeague = GC.getGame().GetGameLeagues()->GetActiveLeague();
; 1760 : 		if (pLeague && !pLeague->CanPropose(m_ePlayer))
; 1761 : #else
; 1762 : 		LeagueTypes eLeague = (LeagueTypes) m_aNotifications[iIndex].m_iGameDataIndex;

	mov	edx, DWORD PTR [edx+72]

; 1763 : 		CvLeague* pLeague = GC.getGame().GetGameLeagues()->GetLeague(eLeague);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edx
	call	?GetGameLeagues@CvGame@@QAEPAVCvGameLeagues@@XZ ; CvGame::GetGameLeagues
	mov	ecx, eax
	call	?GetLeague@CvGameLeagues@@QAEPAVCvLeague@@W4LeagueTypes@@@Z ; CvGameLeagues::GetLeague

; 1764 : 		if (!pLeague->CanPropose(m_ePlayer))

	mov	edx, DWORD PTR [esi]
	push	edx
	mov	ecx, eax
	call	?CanPropose@CvLeague@@QAE_NW4PlayerTypes@@@Z ; CvLeague::CanPropose
	pop	edi
	pop	esi
	test	al, al
	pop	ebp
	sete	al
	pop	ebx

; 1826 : 	}
; 1827 : 	break;
; 1828 : 	}
; 1829 : 
; 1830 : 	return false;
; 1831 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+52]
	mov	DWORD PTR fs:0, ecx
	add	esp, 52					; 00000034H
	ret	4
$LN26@IsNotifica@3:

; 1685 : 		}
; 1686 : 	}
; 1687 : 	break;
; 1688 : 	case NOTIFICATION_DEMAND_RESOURCE:
; 1689 : 	{
; 1690 : 		// if this is a "you ran out of this resource" demand resource.
; 1691 : 		// I did this so not to break the save format
; 1692 : 		if(m_aNotifications[iIndex].m_iX == -1 && m_aNotifications[iIndex].m_iY == -1)

	cmp	DWORD PTR [edx+64], -1
	jne	SHORT $LN366@IsNotifica@3
	cmp	DWORD PTR [edx+68], -1
	jne	SHORT $LN366@IsNotifica@3

; 1693 : 		{
; 1694 : 			if(GET_PLAYER(m_ePlayer).getNumResourceAvailable((ResourceTypes)m_aNotifications[iIndex].m_iGameDataIndex, true) >= 0)

	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [edx+72]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	1
	push	edx
	call	?getNumResourceAvailable@CvPlayer@@QBEHW4ResourceTypes@@_N@Z ; CvPlayer::getNumResourceAvailable
	test	eax, eax
	jge	$LN371@IsNotifica@3
$LN366@IsNotifica@3:

; 1695 : 			{
; 1696 : 				return true;
; 1697 : 			}
; 1698 : 		}
; 1699 : 	}
; 1700 : 
; 1701 : 	case NOTIFICATION_FOUND_PANTHEON:
; 1702 : 	{
; 1703 : 		CvGame& kGame(GC.getGame());
; 1704 : 		CvGameReligions* pkReligions(kGame.GetGameReligions());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions

; 1705 : 		return pkReligions->CanCreatePantheon(m_ePlayer, true) != CvGameReligions::FOUNDING_OK;

	mov	ecx, DWORD PTR [esi]
	push	1
	push	ecx
	mov	ecx, eax
	call	?CanCreatePantheon@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@_N@Z ; CvGameReligions::CanCreatePantheon
	pop	edi
	neg	eax
	pop	esi
	sbb	eax, eax
	pop	ebp
	neg	eax
	pop	ebx

; 1826 : 	}
; 1827 : 	break;
; 1828 : 	}
; 1829 : 
; 1830 : 	return false;
; 1831 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+52]
	mov	DWORD PTR fs:0, ecx
	add	esp, 52					; 00000034H
	ret	4
$LN56@IsNotifica@3:

; 1536 : 	}
; 1537 : 	break;
; 1538 : 	case NOTIFICATION_FREE_TECH:
; 1539 : 	{
; 1540 : 		CvPlayerAI& kPlayer = GET_PLAYER(m_ePlayer);

	mov	esi, DWORD PTR [esi]
	imul	esi, 63236				; 0000f704H
	add	esi, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers

; 1541 : 		if(kPlayer.GetNumFreeTechs() == 0)

	mov	ecx, esi
	call	?GetNumFreeTechs@CvPlayer@@QBEHXZ	; CvPlayer::GetNumFreeTechs
	test	eax, eax

; 1542 : 		{
; 1543 : 			return true;

	je	$LN368@IsNotifica@3

; 1544 : 		}
; 1545 : 		else
; 1546 : 		{
; 1547 : 			//Expire this notification if there are no more techs that can be researched at this time.
; 1548 : 			return kPlayer.GetPlayerTechs()->GetNumTechsCanBeResearched() == 0;

	mov	ecx, esi
	call	?GetPlayerTechs@CvPlayer@@QBEPAVCvPlayerTechs@@XZ ; CvPlayer::GetPlayerTechs
	mov	ecx, eax
	call	?GetNumTechsCanBeResearched@CvPlayerTechs@@QBEHXZ ; CvPlayerTechs::GetNumTechsCanBeResearched
	pop	edi
	neg	eax
	pop	esi
	sbb	eax, eax
	pop	ebp
	inc	eax
	pop	ebx

; 1826 : 	}
; 1827 : 	break;
; 1828 : 	}
; 1829 : 
; 1830 : 	return false;
; 1831 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+52]
	mov	DWORD PTR fs:0, ecx
	add	esp, 52					; 00000034H
	ret	4
$LN85@IsNotifica@3:

; 1463 : 	switch(m_aNotifications[iIndex].m_eNotificationType)

	cmp	eax, 1279997337				; 4c4b3599H
	je	SHORT $LN366@IsNotifica@3
	cmp	eax, 1376002242				; 520420c2H
	jne	$LN37@IsNotifica@3

; 1582 : 		}
; 1583 : 	}
; 1584 : 	break;
; 1585 : 
; 1586 : 	case NOTIFICATION_FAITH_GREAT_PERSON:
; 1587 : 	{
; 1588 : 		if(GET_PLAYER(m_ePlayer).GetNumFaithGreatPeople() == 0)

	mov	ecx, DWORD PTR [esi]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	call	?GetNumFaithGreatPeople@CvPlayer@@QBEHXZ ; CvPlayer::GetNumFaithGreatPeople
	test	eax, eax
	jne	$LN37@IsNotifica@3
	pop	edi
	pop	esi
	pop	ebp

; 1589 : 		{
; 1590 : 			return true;

	mov	al, 1
	pop	ebx

; 1826 : 	}
; 1827 : 	break;
; 1828 : 	}
; 1829 : 
; 1830 : 	return false;
; 1831 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+52]
	mov	DWORD PTR fs:0, ecx
	add	esp, 52					; 00000034H
	ret	4
$LN63@IsNotifica@3:

; 1503 : 		}
; 1504 : 	}
; 1505 : 	break;
; 1506 : 
; 1507 : 	case NOTIFICATION_TECH:
; 1508 : 	{
; 1509 : 		CvPlayerAI& kPlayer = GET_PLAYER(m_ePlayer);

	mov	ecx, DWORD PTR [esi]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers

; 1510 : 		CvPlayerTechs* pkPlayerTechs = kPlayer.GetPlayerTechs();

	call	?GetPlayerTechs@CvPlayer@@QBEPAVCvPlayerTechs@@XZ ; CvPlayer::GetPlayerTechs
	mov	ebx, eax

; 1511 : 		if(pkPlayerTechs->GetCurrentResearch() != NO_TECH)

	mov	ecx, ebx
	mov	DWORD PTR _pkPlayerTechs$221429[esp+64], ebx
	call	?GetCurrentResearch@CvPlayerTechs@@QBE?AW4TechTypes@@XZ ; CvPlayerTechs::GetCurrentResearch
	cmp	eax, -1

; 1512 : 		{
; 1513 : 			return true;

	jne	$LN368@IsNotifica@3

; 1514 : 		}
; 1515 : 
; 1516 : 		int iNotificationIndex = m_iNotificationsBeginIndex;

	mov	edi, DWORD PTR [esi+20]

; 1517 : 		while(iNotificationIndex != m_iNotificationsEndIndex)

	mov	ebp, DWORD PTR [esi+24]
	cmp	edi, ebp
	je	SHORT $LN60@IsNotifica@3
	mov	ebx, DWORD PTR [esi+8]
	npad	10
$LL61@IsNotifica@3:

; 1518 : 		{
; 1519 : 			if(NOTIFICATION_FREE_TECH == m_aNotifications[iNotificationIndex].m_eNotificationType)

	mov	edx, edi
	imul	edx, 92					; 0000005cH
	cmp	DWORD PTR [edx+ebx], 1218150582		; 489b80b6H
	lea	eax, DWORD PTR [edx+ebx]
	jne	SHORT $LN58@IsNotifica@3

; 1520 : 			{
; 1521 : 				if(!m_aNotifications[iNotificationIndex].m_bDismissed)

	cmp	BYTE PTR [eax+89], 0
	je	$LN368@IsNotifica@3
$LN58@IsNotifica@3:

; 1522 : 				{
; 1523 : 					return true;
; 1524 : 				}
; 1525 : 			}
; 1526 : 
; 1527 : 			iNotificationIndex++;
; 1528 : 			if(iNotificationIndex >= (int)m_aNotifications.size())

	mov	ecx, DWORD PTR [esi+12]
	sub	ecx, ebx
	mov	eax, -1307163959			; b21642c9H
	imul	ecx
	add	edx, ecx
	sar	edx, 6
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	inc	edi
	add	eax, edx
	cmp	edi, eax
	jl	SHORT $LN57@IsNotifica@3

; 1529 : 			{
; 1530 : 				iNotificationIndex = 0;

	xor	edi, edi
$LN57@IsNotifica@3:

; 1517 : 		while(iNotificationIndex != m_iNotificationsEndIndex)

	cmp	edi, ebp
	jne	SHORT $LL61@IsNotifica@3

; 1520 : 			{
; 1521 : 				if(!m_aNotifications[iNotificationIndex].m_bDismissed)

	mov	ebx, DWORD PTR _pkPlayerTechs$221429[esp+64]
$LN60@IsNotifica@3:

; 1531 : 			}
; 1532 : 		}
; 1533 : 
; 1534 : 		//Expire this notification if there are no more techs that can be researched at this time.
; 1535 : 		return pkPlayerTechs->GetNumTechsCanBeResearched() == 0;

	mov	ecx, ebx
	call	?GetNumTechsCanBeResearched@CvPlayerTechs@@QBEHXZ ; CvPlayerTechs::GetNumTechsCanBeResearched
	pop	edi
	neg	eax
	pop	esi
	sbb	eax, eax
	pop	ebp
	inc	eax
	pop	ebx

; 1826 : 	}
; 1827 : 	break;
; 1828 : 	}
; 1829 : 
; 1830 : 	return false;
; 1831 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+52]
	mov	DWORD PTR fs:0, ecx
	add	esp, 52					; 00000034H
	ret	4
$LN84@IsNotifica@3:

; 1463 : 	switch(m_aNotifications[iIndex].m_eNotificationType)

	cmp	eax, 1989681641				; 769821e9H
	jg	$LN86@IsNotifica@3
	je	$LN36@IsNotifica@3
	cmp	eax, 1591330057				; 5ed9c509H
	je	$LN33@IsNotifica@3
	cmp	eax, 1784381333				; 6a5b7f95H
	je	$LN30@IsNotifica@3
	cmp	eax, 1892367718				; 70cb3d66H
	jne	$LN37@IsNotifica@3

; 1470 : 		}
; 1471 : 	}
; 1472 : 	break;
; 1473 : 
; 1474 : 	case NOTIFICATION_BARBARIAN:
; 1475 : 	{
; 1476 : 		CvPlot* pPlot = GC.getMap().plot(m_aNotifications[iIndex].m_iX, m_aNotifications[iIndex].m_iY);

	mov	ecx, DWORD PTR [esi+8]
	mov	ebx, DWORD PTR [ecx+edi+68]
	lea	eax, DWORD PTR [ecx+edi]
	mov	eax, DWORD PTR [eax+64]
	cmp	eax, -2147483647			; 80000001H
	je	$LN102@IsNotifica@3
	cmp	ebx, -2147483647			; 80000001H
	je	SHORT $LN102@IsNotifica@3
	mov	ebp, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	cmp	BYTE PTR [ebp+4056], 0
	mov	ecx, DWORD PTR [ebp+4020]
	je	SHORT $LN361@IsNotifica@3
	test	eax, eax
	jge	SHORT $LN114@IsNotifica@3
	cdq
	idiv	ecx
	mov	esi, edx
	add	esi, ecx
	jmp	SHORT $LN116@IsNotifica@3
$LN114@IsNotifica@3:
	cmp	eax, ecx
	jl	SHORT $LN361@IsNotifica@3
	cdq
	idiv	ecx
	mov	esi, edx
	jmp	SHORT $LN116@IsNotifica@3
$LN361@IsNotifica@3:
	mov	esi, eax
$LN116@IsNotifica@3:
	cmp	BYTE PTR [ebp+4057], 0
	mov	edi, DWORD PTR [ebp+4024]
	je	SHORT $LN365@IsNotifica@3
	test	ebx, ebx
	jge	SHORT $LN124@IsNotifica@3
	mov	eax, ebx
	cdq
	idiv	edi
	add	edx, edi
	jmp	SHORT $LN126@IsNotifica@3
$LN124@IsNotifica@3:
	cmp	ebx, edi
	jl	SHORT $LN365@IsNotifica@3
	mov	eax, ebx
	cdq
	idiv	edi
	jmp	SHORT $LN126@IsNotifica@3
$LN365@IsNotifica@3:
	mov	edx, ebx
$LN126@IsNotifica@3:
	test	esi, esi
	jl	SHORT $LN102@IsNotifica@3
	cmp	esi, ecx
	jge	SHORT $LN102@IsNotifica@3
	test	edx, edx
	jl	SHORT $LN102@IsNotifica@3
	cmp	edx, edi
	jge	SHORT $LN102@IsNotifica@3
	imul	ecx, edx
	add	ecx, esi
	imul	ecx, 484				; 000001e4H
	add	ecx, DWORD PTR [ebp+4068]
	jmp	SHORT $LN104@IsNotifica@3
$LN102@IsNotifica@3:
	xor	ecx, ecx
$LN104@IsNotifica@3:

; 1477 : 		if(!pPlot->HasBarbarianCamp())

	call	?HasBarbarianCamp@CvPlot@@QAE_NXZ	; CvPlot::HasBarbarianCamp
	test	al, al
	jne	$LN37@IsNotifica@3
	pop	edi
	pop	esi
	pop	ebp

; 1478 : 		{
; 1479 : 			return true;

	mov	al, 1
	pop	ebx

; 1826 : 	}
; 1827 : 	break;
; 1828 : 	}
; 1829 : 
; 1830 : 	return false;
; 1831 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+52]
	mov	DWORD PTR fs:0, ecx
	add	esp, 52					; 00000034H
	ret	4
$LN30@IsNotifica@3:

; 1666 : 	case NOTIFICATION_PLAYER_DEAL:
; 1667 : 	{
; 1668 : 		CvGame& game = GC.getGame();
; 1669 : 		CvGameDeals* pDeals = game.GetGameDeals();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetGameDeals@CvGame@@QAEPAVCvGameDeals@@XZ ; CvGame::GetGameDeals

; 1670 : 
; 1671 : 		if(!pDeals->ProposedDealExists(m_ePlayer, (PlayerTypes)(m_aNotifications[iIndex].m_iX)))

	mov	edx, DWORD PTR [esi+8]
	mov	ecx, DWORD PTR [esi]
	add	edx, edi
	mov	edx, DWORD PTR [edx+64]
	push	edx
	push	ecx
$LN370@IsNotifica@3:
	mov	ecx, eax
	call	?ProposedDealExists@CvGameDeals@@QAE_NW4PlayerTypes@@0@Z ; CvGameDeals::ProposedDealExists
$LN373@IsNotifica@3:
	test	al, al
$LN372@IsNotifica@3:
	jne	$LN37@IsNotifica@3
$LN371@IsNotifica@3:
	pop	edi
	pop	esi
	pop	ebp

; 1672 : 		{
; 1673 : 			return true;

	mov	al, 1
	pop	ebx

; 1826 : 	}
; 1827 : 	break;
; 1828 : 	}
; 1829 : 
; 1830 : 	return false;
; 1831 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+52]
	mov	DWORD PTR fs:0, ecx
	add	esp, 52					; 00000034H
	ret	4
$LN33@IsNotifica@3:

; 1654 : 		}
; 1655 : 	}
; 1656 : 	break;
; 1657 : 	case NOTIFICATION_UNIT_PROMOTION:
; 1658 : 	{
; 1659 : 		UnitHandle pUnit = GET_PLAYER(m_ePlayer).getUnit(m_aNotifications[iIndex].m_iExtraGameData);

	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [edx+76]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	edx
	call	?getUnit@CvPlayer@@QAEPAVCvUnit@@H@Z	; CvPlayer::getUnit
	push	eax
	lea	ecx, DWORD PTR _pUnit$221466[esp+72]
	call	??0?$FObjectHandle@VCvUnit@@@@QAE@PAVCvUnit@@@Z ; FObjectHandle<CvUnit>::FObjectHandle<CvUnit>

; 1660 : 		if(!pUnit || !pUnit->isPromotionReady())

	mov	esi, DWORD PTR _pUnit$221466[esp+68]
	mov	DWORD PTR __$EHRec$[esp+76], 0
	test	esi, esi
	je	SHORT $LN31@IsNotifica@3
	mov	ecx, esi
	call	?isPromotionReady@CvUnit@@QBE_NXZ	; CvUnit::isPromotionReady
	test	al, al
	je	SHORT $LN31@IsNotifica@3

; 1663 : 		}
; 1664 : 	}

	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[esp+76], -1
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification

; 1665 : 	break;

	jmp	$LN37@IsNotifica@3
$LN31@IsNotifica@3:

; 1661 : 		{
; 1662 : 			return true;

	mov	DWORD PTR __$EHRec$[esp+76], -1
	test	esi, esi
	je	SHORT $LN298@IsNotifica@3
	mov	ecx, esi
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN298@IsNotifica@3:
	pop	edi
	pop	esi
	pop	ebp
	mov	al, 1
	pop	ebx

; 1826 : 	}
; 1827 : 	break;
; 1828 : 	}
; 1829 : 
; 1830 : 	return false;
; 1831 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+52]
	mov	DWORD PTR fs:0, ecx
	add	esp, 52					; 00000034H
	ret	4
$LN36@IsNotifica@3:

; 1636 : 		}
; 1637 : 	}
; 1638 : 	break;
; 1639 : 	case NOTIFICATION_DIPLO_VOTE:
; 1640 : 	{
; 1641 : 		TeamTypes eTeam = GET_PLAYER(m_ePlayer).getTeam();

	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	imul	eax, 63236				; 0000f704H
	mov	eax, DWORD PTR [eax+ecx+44]
	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN278@IsNotifica@3
	mov	edx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	ecx, DWORD PTR [edx+4]
	mov	eax, DWORD PTR [ecx+eax*4]
	jmp	SHORT $LN279@IsNotifica@3
$LN278@IsNotifica@3:
	or	eax, -1
$LN279@IsNotifica@3:

; 1642 : 
; 1643 : 		// Vote from this team registered
; 1644 : 		if(GC.getGame().GetVoteCast(eTeam) != NO_TEAM)

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	eax
	call	?GetVoteCast@CvGame@@QBE?AW4TeamTypes@@W42@@Z ; CvGame::GetVoteCast
	cmp	eax, -1

; 1645 : 		{
; 1646 : 			return true;

	jne	$LN368@IsNotifica@3

; 1647 : 		}
; 1648 : 
; 1649 : 		// Votes from ALL teams registered. This is necessary in addition to the above if block, because if this player is the last to vote
; 1650 : 		// then everything gets reset immediately, and it'll be NO_TEAM by the time this function is tested again
; 1651 : 		if(GC.getGame().GetNumVictoryVotesExpected() == 0)

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetNumVictoryVotesExpected@CvGame@@QBEHXZ ; CvGame::GetNumVictoryVotesExpected
	test	eax, eax
	jne	$LN37@IsNotifica@3
	pop	edi
	pop	esi
	pop	ebp

; 1652 : 		{
; 1653 : 			return true;

	mov	al, 1
	pop	ebx

; 1826 : 	}
; 1827 : 	break;
; 1828 : 	}
; 1829 : 
; 1830 : 	return false;
; 1831 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+52]
	mov	DWORD PTR fs:0, ecx
	add	esp, 52					; 00000034H
	ret	4
$LN86@IsNotifica@3:

; 1463 : 	switch(m_aNotifications[iIndex].m_eNotificationType)

	cmp	eax, 1996573794				; 77014c62H
	je	SHORT $LN40@IsNotifica@3
	cmp	eax, 2128612861				; 7ee00dfdH

; 1819 : 		}
; 1820 : 	}
; 1821 : 	break;
; 1822 : 
; 1823 : 	default:	// don't expire
; 1824 : 	{
; 1825 : 		return false;

	jne	$LN37@IsNotifica@3
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	edi, eax
	mov	ecx, edi
	call	?GetNumReligionsStillToFound@CvGameReligions@@QBEHXZ ; CvGameReligions::GetNumReligionsStillToFound
	test	eax, eax
	jle	$LN368@IsNotifica@3
	mov	edx, DWORD PTR [esi]
	push	edx
	mov	ecx, edi
	call	?HasCreatedReligion@CvGameReligions@@QBE_NW4PlayerTypes@@@Z ; CvGameReligions::HasCreatedReligion
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 1826 : 	}
; 1827 : 	break;
; 1828 : 	}
; 1829 : 
; 1830 : 	return false;
; 1831 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+52]
	mov	DWORD PTR fs:0, ecx
	add	esp, 52					; 00000034H
	ret	4
$LN40@IsNotifica@3:

; 1591 : 		}
; 1592 : 	}
; 1593 : 	break;
; 1594 : 
; 1595 : 	case NOTIFICATION_POLICY:
; 1596 : 	{
; 1597 : 		if(GET_PLAYER(m_ePlayer).getJONSCulture() < GET_PLAYER(m_ePlayer).getNextPolicyCost() && GET_PLAYER(m_ePlayer).GetNumFreePolicies() == 0 && GET_PLAYER(m_ePlayer).GetNumFreeTenets() == 0)
; 1598 : 		{
; 1599 : 			return true;
; 1600 : 		}
; 1601 : 	}
; 1602 : 	break;
; 1603 : 	case NOTIFICATION_PRODUCTION:
; 1604 : 	{
; 1605 : 		//CvCity* pCity = GET_PLAYER(m_ePlayer).getCity(m_aNotifications[iIndex].m_iGameDataIndex);
; 1606 : 		CvCity* pCity = GC.getMap().plot(m_aNotifications[iIndex].m_iX, m_aNotifications[iIndex].m_iY)->getPlotCity();//GET_PLAYER(m_ePlayer).getCity(notification.m_iGameDataIndex);

	mov	eax, DWORD PTR [esi+8]
	mov	ebx, DWORD PTR [eax+edi+68]
	add	eax, edi
	mov	eax, DWORD PTR [eax+64]
	cmp	eax, -2147483647			; 80000001H
	je	$LN234@IsNotifica@3
	cmp	ebx, -2147483647			; 80000001H
	je	SHORT $LN234@IsNotifica@3
	mov	ebp, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	cmp	BYTE PTR [ebp+4056], 0
	mov	ecx, DWORD PTR [ebp+4020]
	je	SHORT $LN362@IsNotifica@3
	test	eax, eax
	jge	SHORT $LN246@IsNotifica@3
	cdq
	idiv	ecx
	mov	esi, edx
	add	esi, ecx
	jmp	SHORT $LN248@IsNotifica@3
$LN246@IsNotifica@3:
	cmp	eax, ecx
	jl	SHORT $LN362@IsNotifica@3
	cdq
	idiv	ecx
	mov	esi, edx
	jmp	SHORT $LN248@IsNotifica@3
$LN362@IsNotifica@3:
	mov	esi, eax
$LN248@IsNotifica@3:
	cmp	BYTE PTR [ebp+4057], 0
	mov	edi, DWORD PTR [ebp+4024]
	je	SHORT $LN364@IsNotifica@3
	test	ebx, ebx
	jge	SHORT $LN256@IsNotifica@3
	mov	eax, ebx
	cdq
	idiv	edi
	add	edx, edi
	jmp	SHORT $LN258@IsNotifica@3
$LN256@IsNotifica@3:
	cmp	ebx, edi
	jl	SHORT $LN364@IsNotifica@3
	mov	eax, ebx
	cdq
	idiv	edi
	jmp	SHORT $LN258@IsNotifica@3
$LN364@IsNotifica@3:
	mov	edx, ebx
$LN258@IsNotifica@3:
	test	esi, esi
	jl	SHORT $LN234@IsNotifica@3
	cmp	esi, ecx
	jge	SHORT $LN234@IsNotifica@3
	test	edx, edx
	jl	SHORT $LN234@IsNotifica@3
	cmp	edx, edi
	jge	SHORT $LN234@IsNotifica@3
	imul	ecx, edx
	add	ecx, esi
	imul	ecx, 484				; 000001e4H
	add	ecx, DWORD PTR [ebp+4068]
	jmp	SHORT $LN236@IsNotifica@3
$LN234@IsNotifica@3:
	xor	ecx, ecx
$LN236@IsNotifica@3:
	call	?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ	; CvPlot::getPlotCity
	mov	esi, eax

; 1607 : 
; 1608 : 		// if the city no longer exists
; 1609 : 		if(!pCity)

	test	esi, esi

; 1610 : 		{
; 1611 : 			return true;

	je	$LN368@IsNotifica@3

; 1612 : 		}
; 1613 : 
; 1614 : #ifdef AUI_NOFITICATIONS_FIX_PRODUCTION_NOTIFICATION_REMOVAL_EXTRA_CHECKS
; 1615 : 		if (pCity->getOwner() != m_ePlayer)
; 1616 : 		{
; 1617 : 			return true;
; 1618 : 		}
; 1619 : 
; 1620 : 		if (pCity->isProductionAutomated())
; 1621 : 		{
; 1622 : 			return true;
; 1623 : 		}
; 1624 : #else
; 1625 : 		// if the city is a puppet
; 1626 : 		if(pCity->IsPuppet())

	mov	ecx, esi
	call	?IsPuppet@CvCity@@QBE_NXZ		; CvCity::IsPuppet
	test	al, al

; 1627 : 		{
; 1628 : 			return true;

	jne	$LN368@IsNotifica@3

; 1629 : 		}
; 1630 : #endif
; 1631 : 
; 1632 : 		// City has chosen something
; 1633 : 		if(pCity->getOrderQueueLength() > 0)

	mov	ecx, esi
	call	?getOrderQueueLength@CvCity@@QAEHXZ	; CvCity::getOrderQueueLength
	test	eax, eax

; 1634 : 		{
; 1635 : 			return true;

	jg	$LN368@IsNotifica@3
$LN37@IsNotifica@3:

; 1826 : 	}
; 1827 : 	break;
; 1828 : 	}
; 1829 : 
; 1830 : 	return false;
; 1831 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+68]
	pop	edi
	pop	esi
	pop	ebp
	xor	al, al
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 52					; 00000034H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?IsNotificationExpired@CvNotifications@@QAE_NH@Z$0:
	lea	ecx, DWORD PTR _pUnit$221466[ebp]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__ehhandler$?IsNotificationExpired@CvNotifications@@QAE_NH@Z:
	mov	eax, OFFSET __ehfuncinfo$?IsNotificationExpired@CvNotifications@@QAE_NH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?IsNotificationExpired@CvNotifications@@QAE_NH@Z ENDP	; CvNotifications::IsNotificationExpired
PUBLIC	?erase@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAE?AV?$_Vector_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@V?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@0@Z ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::erase
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\vector
;	COMDAT ?erase@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAE?AV?$_Vector_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@V?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@0@Z
_TEXT	SEGMENT
$T227035 = 8						; size = 1
___$ReturnUdt$ = 8					; size = 4
__Cat$227067 = 12					; size = 1
__Cat$227039 = 12					; size = 1
$T227037 = 12						; size = 1
__First_arg$ = 12					; size = 4
__Last_arg$ = 16					; size = 4
?erase@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAE?AV?$_Vector_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@V?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@0@Z PROC ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::erase, COMDAT
; _this$ = ecx

; 1029 : 		iterator _First = _Make_iter(_First_arg);

	mov	eax, DWORD PTR __First_arg$[esp-4]

; 1030 : 		iterator _Last = _Make_iter(_Last_arg);
; 1031 : 
; 1032 : 		if (_First != _Last)

	mov	edx, DWORD PTR __Last_arg$[esp-4]
	push	ebx
	mov	ebx, DWORD PTR ___$ReturnUdt$[esp]
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [ebx], eax
	cmp	eax, edx
	je	SHORT $LN32@erase

; 1033 : 			{	// worth doing, copy down over hole
; 1034 : 
; 1035 :  #if _HAS_ITERATOR_DEBUGGING
; 1036 : 			if (_Last < _First || _First._Mycont != this
; 1037 : 				|| _First._Myptr < _Myfirst || _Mylast < _Last._Myptr)
; 1038 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1039 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1040 : 				_VEC_ITER_BASE(_First));
; 1041 : 			_Orphan_range(_First._Myptr, _Mylast);
; 1042 : 
; 1043 :  #else /* _HAS_ITERATOR_DEBUGGING */
; 1044 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1045 : 				_VEC_ITER_BASE(_First));

	mov	ecx, DWORD PTR [esi+8]
	push	edi
	mov	BYTE PTR $T227035[esp+8], 0
	mov	edi, DWORD PTR $T227035[esp+8]
	push	edi
	mov	edi, DWORD PTR __Cat$227039[esp+12]
	push	edi
	mov	edi, DWORD PTR $T227037[esp+16]
	push	edi
	push	eax
	push	ecx
	push	edx
	call	??$_Copy_opt@PAUNotification@CvNotifications@@PAU12@Urandom_access_iterator_tag@std@@@std@@YAPAUNotification@CvNotifications@@PAU12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<CvNotifications::Notification *,CvNotifications::Notification *,std::random_access_iterator_tag>

; 1046 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1047 : 
; 1048 : 			_Destroy(_Ptr, _Mylast);

	mov	ecx, DWORD PTR [esi+8]
	mov	edi, eax
	mov	eax, DWORD PTR __Cat$227067[esp+32]
	push	eax
	push	esi
	push	ecx
	push	edi
	call	??$_Destroy_range@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAXPAUNotification@CvNotifications@@0AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<CvNotifications::Notification> >
	add	esp, 40					; 00000028H

; 1049 : 			_Mylast = _Ptr;

	mov	DWORD PTR [esi+8], edi
	pop	edi
$LN32@erase:
	pop	esi

; 1050 : 			}
; 1051 : #if _HAS_ITERATOR_DEBUGGING
; 1052 :         return (iterator(_First._Myptr, this));
; 1053 : #else
; 1054 : 		return (_First);

	mov	eax, ebx
	pop	ebx

; 1055 : #endif
; 1056 : 		}

	ret	12					; 0000000cH
?erase@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAE?AV?$_Vector_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@V?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@0@Z ENDP ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::erase
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEXXZ ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::_Tidy
; Function compile flags: /Ogtpy
;	COMDAT ?_Tidy@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
__Cat$227095 = -4					; size = 1
?_Tidy@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEXXZ PROC ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	ecx
	push	esi
	mov	esi, ecx

; 1124 : 		if (_Myfirst != 0)

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN10@Tidy@2

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);

	mov	ecx, DWORD PTR __Cat$227095[esp+8]
	mov	edx, DWORD PTR [esi+8]
	push	ecx
	push	esi
	push	edx
	push	eax
	call	??$_Destroy_range@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAXPAUNotification@CvNotifications@@0AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<CvNotifications::Notification> >

; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	mov	eax, DWORD PTR [esi+4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 20					; 00000014H
$LN10@Tidy@2:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 1135 : 		}

	pop	ecx
	ret	0
?_Tidy@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEXXZ ENDP ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::_Tidy
_TEXT	ENDS
PUBLIC	??$_Umove@PAUNotification@CvNotifications@@@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEPAUNotification@CvNotifications@@PAU23@00@Z ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::_Umove<CvNotifications::Notification *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Umove@PAUNotification@CvNotifications@@@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEPAUNotification@CvNotifications@@PAU23@00@Z
_TEXT	SEGMENT
$T227154 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$227157 = 16					; size = 1
__Ptr$ = 16						; size = 4
??$_Umove@PAUNotification@CvNotifications@@@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEPAUNotification@CvNotifications@@PAU23@00@Z PROC ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::_Umove<CvNotifications::Notification *>, COMDAT
; _this$ = ecx

; 1145 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

	push	ecx

; 1146 : 		{	// move initializing [_First, _Last), using allocator
; 1147 : 		return (_STDEXT _Unchecked_uninitialized_move(_First, _Last,
; 1148 : 			_Ptr, this->_Alval));

	mov	edx, DWORD PTR __Cat$227157[esp]
	mov	BYTE PTR $T227154[esp+4], 0
	mov	eax, DWORD PTR $T227154[esp+4]
	push	eax
	mov	eax, DWORD PTR __Ptr$[esp+4]
	push	edx
	mov	edx, DWORD PTR __First$[esp+8]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAUNotification@CvNotifications@@PAU12@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAPAUNotification@CvNotifications@@PAU12@00AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<CvNotifications::Notification *,CvNotifications::Notification *,std::allocator<CvNotifications::Notification> >

; 1149 : 		}

	add	esp, 28					; 0000001cH
	ret	12					; 0000000cH
??$_Umove@PAUNotification@CvNotifications@@@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEPAUNotification@CvNotifications@@PAU23@00@Z ENDP ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::_Umove<CvNotifications::Notification *>
_TEXT	ENDS
PUBLIC	?Update@CvNotifications@@QAEXXZ			; CvNotifications::Update
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvnotifications.cpp
;	COMDAT ?Update@CvNotifications@@QAEXXZ
_TEXT	SEGMENT
_iIndex$ = -4						; size = 4
?Update@CvNotifications@@QAEXXZ PROC			; CvNotifications::Update, COMDAT
; _this$ = ecx

; 317  : {

	push	ecx
	push	ebx
	push	edi
	mov	edi, ecx

; 318  : 	int iIndex = m_iNotificationsBeginIndex;

	mov	ebx, DWORD PTR [edi+20]
	mov	DWORD PTR _iIndex$[esp+12], ebx

; 319  : 	while(iIndex != m_iNotificationsEndIndex)

	cmp	ebx, DWORD PTR [edi+24]
	je	$LN11@Update
	push	ebp
	push	esi
$LL12@Update:

; 320  : 	{
; 321  : 		Notification& kNotification = m_aNotifications[iIndex];

	mov	esi, ebx
	imul	esi, 92					; 0000005cH
	add	esi, DWORD PTR [edi+8]

; 322  : 
; 323  : 		if(!kNotification.m_bDismissed)

	cmp	BYTE PTR [esi+89], 0
	jne	$LN30@Update

; 324  : 		{
; 325  : 			if(IsNotificationExpired(iIndex))

	push	ebx
	mov	ecx, edi
	call	?IsNotificationExpired@CvNotifications@@QAE_NH@Z ; CvNotifications::IsNotificationExpired
	test	al, al
	je	SHORT $LN9@Update

; 326  : 			{
; 327  : 				Dismiss(kNotification.m_iLookupIndex, /*bUserInvoked*/ false);

	mov	eax, DWORD PTR [esi+84]
	push	0
	push	eax
	mov	ecx, edi
	call	?Dismiss@CvNotifications@@QAEXH_N@Z	; CvNotifications::Dismiss

; 328  : 				//GC.GetEngineUserInterface()->RemoveNotification(kNotification.m_iLookupIndex);
; 329  : 				//kNotification.m_bDismissed = true;
; 330  : 			}
; 331  : 			else

	jmp	$LN30@Update
$LN9@Update:

; 332  : 			{
; 333  : 				if(kNotification.m_bNeedsBroadcast)

	cmp	BYTE PTR [esi+88], 0
	je	$LN30@Update

; 334  : 				{
; 335  : 					// If the notification is for the 'active' player and that active player actually has his turn active or its not hotseat, then show the notification, else wait.
; 336  : 					// The 'active' player is only set to a human and during the AI turn, the 'active' player is the last human to do their turn.
; 337  : 					if(kNotification.m_ePlayerID == GC.getGame().getActivePlayer())

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	ebp, DWORD PTR [esi+4]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	ebp, eax
	jne	SHORT $LN6@Update

; 338  : 					{
; 339  : 						if(!CvPreGame::isHotSeatGame() || GET_PLAYER(GC.getGame().getActivePlayer()).isTurnActive())

	call	?isHotSeatGame@CvPreGame@@YA_NXZ	; CvPreGame::isHotSeatGame
	test	al, al
	je	SHORT $LN4@Update
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	ecx, eax
	call	?isTurnActive@CvPlayer@@QBE_NXZ		; CvPlayer::isTurnActive
	test	al, al
	je	SHORT $LN30@Update
$LN4@Update:

; 340  : 						{
; 341  : 							GC.GetEngineUserInterface()->AddNotification(kNotification.m_iLookupIndex, kNotification.m_eNotificationType, kNotification.m_strMessage.c_str(), kNotification.m_strSummary.c_str(), kNotification.m_iGameDataIndex, kNotification.m_iExtraGameData, m_ePlayer, kNotification.m_iX, kNotification.m_iY);

	mov	ecx, DWORD PTR [esi+68]
	mov	edx, DWORD PTR [esi+64]
	mov	eax, DWORD PTR [edi]
	mov	ebx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	ebp, DWORD PTR [ebx]
	push	ecx
	mov	ecx, DWORD PTR [esi+76]
	push	edx
	mov	edx, DWORD PTR [esi+72]
	push	eax
	push	ecx
	push	edx
	lea	ecx, DWORD PTR [esi+36]
	add	ebp, 204				; 000000ccH
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR [esi+8]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	ecx, DWORD PTR [esi+84]
	mov	edx, DWORD PTR [ebp]
	push	eax
	mov	eax, DWORD PTR [esi]
	push	eax
	push	ecx
	mov	ecx, ebx
	call	edx

; 342  : 							kNotification.m_bNeedsBroadcast = false;
; 343  : 						}
; 344  : 					}

	mov	ebx, DWORD PTR _iIndex$[esp+20]
	jmp	SHORT $LN31@Update
$LN6@Update:

; 345  : 					else if(gDLL->IsPlayerConnected(kNotification.m_ePlayerID))

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+32]
	push	ebp
	call	edx
	test	al, al
	je	SHORT $LN30@Update
$LN31@Update:

; 346  : 					{//We consider a notification to have been broadcast if the notification 
; 347  : 						//is for a remote player who is network connected to the game.
; 348  : 						kNotification.m_bNeedsBroadcast = false;

	mov	BYTE PTR [esi+88], 0
$LN30@Update:

; 349  : 					}
; 350  : 				}
; 351  : 			}
; 352  : 		}
; 353  : 
; 354  : 		iIndex++;
; 355  : 
; 356  : 		if(iIndex >= (int)m_aNotifications.size())

	mov	ecx, DWORD PTR [edi+12]
	sub	ecx, DWORD PTR [edi+8]
	mov	eax, -1307163959			; b21642c9H
	imul	ecx
	add	edx, ecx
	sar	edx, 6
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	inc	ebx
	add	eax, edx
	cmp	ebx, eax
	mov	DWORD PTR _iIndex$[esp+20], ebx
	jl	SHORT $LN1@Update

; 357  : 		{
; 358  : 			iIndex = 0;

	mov	DWORD PTR _iIndex$[esp+20], 0
	mov	ebx, DWORD PTR _iIndex$[esp+20]
$LN1@Update:

; 319  : 	while(iIndex != m_iNotificationsEndIndex)

	cmp	ebx, DWORD PTR [edi+24]
	jne	$LL12@Update
	pop	esi
	pop	ebp
$LN11@Update:
	pop	edi
	pop	ebx

; 359  : 		}
; 360  : 	}
; 361  : }

	pop	ecx
	ret	0
?Update@CvNotifications@@QAEXXZ ENDP			; CvNotifications::Update
_TEXT	ENDS
PUBLIC	??1?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAE@XZ ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::~vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\vector
;	COMDAT ??1?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
__Cat$227234 = -4					; size = 1
??1?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAE@XZ PROC ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::~vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >, COMDAT
; _this$ = ecx

; 558  : 		{	// destroy the object

	push	ecx
	push	esi
	mov	esi, ecx

; 559  : 		_Tidy();

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN12@vector@2
	mov	ecx, DWORD PTR __Cat$227234[esp+8]
	mov	edx, DWORD PTR [esi+8]
	push	ecx
	push	esi
	push	edx
	push	eax
	call	??$_Destroy_range@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAXPAUNotification@CvNotifications@@0AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<CvNotifications::Notification> >
	mov	eax, DWORD PTR [esi+4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 20					; 00000014H
$LN12@vector@2:
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 560  : 		}

	pop	ecx
	ret	0
??1?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAE@XZ ENDP ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::~vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >
_TEXT	ENDS
PUBLIC	?clear@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAEXXZ ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::clear
; Function compile flags: /Ogtpy
;	COMDAT ?clear@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T227248 = -4						; size = 4
?clear@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAEXXZ PROC ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::clear, COMDAT
; _this$ = ecx

; 1059 : 		{	// erase all

	push	ecx

; 1060 : 		erase(begin(), end());

	mov	eax, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR [ecx+4]
	push	eax
	push	edx
	lea	eax, DWORD PTR $T227248[esp+12]
	push	eax
	call	?erase@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAE?AV?$_Vector_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@V?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@0@Z ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::erase

; 1061 : 		}

	pop	ecx
	ret	0
?clear@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAEXXZ ENDP ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::clear
_TEXT	ENDS
PUBLIC	?_Insert_n@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEXV?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@IABUNotification@CvNotifications@@@Z ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::_Insert_n
;	COMDAT xdata$x
; File s:\msvs2008\vc\include\xutility
xdata$x	SEGMENT
__catchsym$?_Insert_n@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEXV?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@IABUNotification@CvNotifications@@@Z$7 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEXV?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@IABUNotification@CvNotifications@@@Z$2
__catchsym$?_Insert_n@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEXV?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@IABUNotification@CvNotifications@@@Z$6 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEXV?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@IABUNotification@CvNotifications@@@Z$0
__ehfuncinfo$?_Insert_n@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEXV?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@IABUNotification@CvNotifications@@@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?_Insert_n@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEXV?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@IABUNotification@CvNotifications@@@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Insert_n@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEXV?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@IABUNotification@CvNotifications@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Insert_n@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEXV?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@IABUNotification@CvNotifications@@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEXV?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@IABUNotification@CvNotifications@@@Z$6
	DD	03H
	DD	03H
	DD	04H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEXV?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@IABUNotification@CvNotifications@@@Z$7
__unwindtable$?_Insert_n@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEXV?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@IABUNotification@CvNotifications@@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?_Insert_n@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEXV?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@IABUNotification@CvNotifications@@@Z$4
	DD	02H
	DD	00H
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?_Insert_n@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEXV?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@IABUNotification@CvNotifications@@@Z$5
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Insert_n@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEXV?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@IABUNotification@CvNotifications@@@Z
_TEXT	SEGMENT
__Tmp$222210 = -108					; size = 92
__$EHRec$ = -16						; size = 16
__Tmp$222200 = 0					; size = 92
__Ncopied$222187 = 92					; size = 4
_this$ = 96						; size = 4
tv493 = 100						; size = 4
__Whereoff$222186 = 100					; size = 4
__Newvec$222185 = 104					; size = 4
__Cat$227520 = 116					; size = 1
__Cat$227488 = 116					; size = 1
__Cat$227416 = 116					; size = 1
__Where$ = 116						; size = 4
tv527 = 120						; size = 4
__Count$ = 120						; size = 4
$T227484 = 124						; size = 1
$T227412 = 124						; size = 1
__Val$ = 124						; size = 4
?_Insert_n@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEXV?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@IABUNotification@CvNotifications@@@Z PROC ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::_Insert_n, COMDAT
; _this$ = ecx

; 1153 : 		{	// insert _Count * _Val at _Where

	push	ebp
	lea	ebp, DWORD PTR [esp-108]
	sub	esp, 108				; 0000006cH
	push	-1
	push	__ehhandler$?_Insert_n@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEXV?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@IABUNotification@CvNotifications@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 96					; 00000060H
	push	ebx
	push	esi
	mov	esi, ecx

; 1154 : 
; 1155 :  #if _HAS_ITERATOR_DEBUGGING
; 1156 : 		if (_Where._Mycont != this
; 1157 : 			|| _Where._Myptr < _Myfirst || _Mylast < _Where._Myptr)
; 1158 : 			_DEBUG_ERROR("vector insert iterator outside range");
; 1159 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1160 : 
; 1161 : 		size_type _Capacity = capacity();

	mov	eax, DWORD PTR [esi+4]
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], esi
	test	eax, eax
	jne	SHORT $LN31@Insert_n
	xor	ebx, ebx
	jmp	SHORT $LN32@Insert_n
$LN31@Insert_n:
	mov	ecx, DWORD PTR [esi+12]
	sub	ecx, eax
	mov	eax, -1307163959			; b21642c9H
	imul	ecx
	add	edx, ecx
	sar	edx, 6
	mov	ebx, edx
	shr	ebx, 31					; 0000001fH
	add	ebx, edx
$LN32@Insert_n:

; 1162 : 
; 1163 : 		if (_Count == 0)

	mov	edi, DWORD PTR __Count$[ebp]
	test	edi, edi
	je	$LN1@Insert_n

; 1164 : 			;
; 1165 : 		else if (max_size() - size() < _Count)

	mov	ecx, DWORD PTR [esi+8]
	sub	ecx, DWORD PTR [esi+4]
	mov	eax, -1307163959			; b21642c9H
	imul	ecx
	add	edx, ecx
	sar	edx, 6
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	ecx, 46684427				; 02c8590bH
	sub	ecx, eax
	cmp	ecx, edi
	jae	SHORT $LN12@Insert_n

; 1166 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@KAXXZ ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::_Xlen
$LN101@Insert_n:
$LN12@Insert_n:

; 1167 : 		else if (_Capacity < size() + _Count)

	lea	ecx, DWORD PTR [eax+edi]
	cmp	ebx, ecx
	jae	$LN10@Insert_n

; 1168 : 			{	// not enough room, reallocate
; 1169 : 			_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1170 : 				? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	mov	eax, ebx
	shr	eax, 1
	mov	edx, 46684427				; 02c8590bH
	sub	edx, eax
	cmp	edx, ebx
	jae	SHORT $LN17@Insert_n
	xor	ebx, ebx
	jmp	SHORT $LN18@Insert_n
$LN17@Insert_n:
	add	ebx, eax
$LN18@Insert_n:

; 1171 : 			if (_Capacity < size() + _Count)

	cmp	ebx, ecx
	jae	SHORT $LN9@Insert_n

; 1172 : 				_Capacity = size() + _Count;

	mov	ebx, ecx
$LN9@Insert_n:

; 1173 : 			pointer _Newvec = this->_Alval.allocate(_Capacity);

	push	0
	push	ebx
	call	??$_Allocate@UNotification@CvNotifications@@@std@@YAPAUNotification@CvNotifications@@IPAU12@@Z ; std::_Allocate<CvNotifications::Notification>

; 1174 : 			size_type _Whereoff = _VEC_ITER_BASE(_Where) - _Myfirst;

	mov	ecx, DWORD PTR __Where$[ebp]
	sub	ecx, DWORD PTR [esi+4]
	mov	DWORD PTR __Newvec$222185[ebp], eax
	mov	eax, -1307163959			; b21642c9H
	imul	ecx
	add	edx, ecx
	sar	edx, 6
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	DWORD PTR __Whereoff$222186[ebp], eax

; 1175 : 			int _Ncopied = 0;
; 1176 : 
; 1177 : 			_TRY_BEGIN
; 1178 : 			_Ufill(_Newvec + _Whereoff, _Count, _Val);	// add new stuff

	imul	eax, 92					; 0000005cH
	add	eax, DWORD PTR __Newvec$222185[ebp]
	xor	ecx, ecx
	add	esp, 8
	mov	DWORD PTR __Ncopied$222187[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+12], ecx
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	push	edi
	push	eax
	mov	ecx, esi
	call	?_Ufill@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEPAUNotification@CvNotifications@@PAU34@IABU34@@Z ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::_Ufill

; 1179 : 			++_Ncopied;
; 1180 : 			_Umove(this->_Myfirst, _VEC_ITER_BASE(_Where),
; 1181 : 				_Newvec);	// move prefix

	mov	ecx, DWORD PTR __Cat$227416[ebp]
	mov	eax, DWORD PTR [esi+4]
	mov	BYTE PTR $T227412[ebp], 0
	mov	edx, DWORD PTR $T227412[ebp]
	push	edx
	mov	edx, DWORD PTR __Newvec$222185[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Where$[ebp]
	push	esi
	push	edx
	push	ecx
	push	eax
	mov	DWORD PTR __Ncopied$222187[ebp], 1
	call	??$_Uninit_copy@PAUNotification@CvNotifications@@PAU12@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAPAUNotification@CvNotifications@@PAU12@00AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<CvNotifications::Notification *,CvNotifications::Notification *,std::allocator<CvNotifications::Notification> >

; 1182 : 			++_Ncopied;
; 1183 : 			_Umove(_VEC_ITER_BASE(_Where), this->_Mylast,
; 1184 : 				_Newvec + (_Whereoff + _Count));	// move suffix

	mov	edx, DWORD PTR __Whereoff$222186[ebp]
	mov	ecx, DWORD PTR [esi+8]
	lea	eax, DWORD PTR [edx+edi]
	imul	eax, 92					; 0000005cH
	add	eax, DWORD PTR __Newvec$222185[ebp]
	add	esp, 24					; 00000018H
	mov	BYTE PTR $T227484[ebp], 0
	mov	edx, DWORD PTR $T227484[ebp]
	push	edx
	mov	edx, DWORD PTR __Cat$227488[ebp]
	push	edx
	push	esi
	push	eax
	mov	eax, DWORD PTR __Where$[ebp]
	push	ecx
	push	eax
	mov	DWORD PTR __Ncopied$222187[ebp], 2
	call	??$_Uninit_copy@PAUNotification@CvNotifications@@PAU12@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAPAUNotification@CvNotifications@@PAU12@00AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<CvNotifications::Notification *,CvNotifications::Notification *,std::allocator<CvNotifications::Notification> >

; 1192 : 			_CATCH_END
; 1193 : 
; 1194 : 			_Count += size();

	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [esi+8]
	sub	ecx, eax
	mov	eax, -1307163959			; b21642c9H
	imul	ecx

; 1195 : 			if (_Myfirst != 0)

	mov	eax, DWORD PTR [esi+4]
	add	edx, ecx
	sar	edx, 6
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	add	esp, 24					; 00000018H
	add	edi, ecx
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	test	eax, eax
	je	SHORT $LN89@Insert_n

; 1196 : 				{	// destroy and deallocate old array
; 1197 : 				_Destroy(_Myfirst, _Mylast);

	mov	edx, DWORD PTR __Cat$227520[ebp]
	mov	ecx, DWORD PTR [esi+8]
	push	edx
	push	esi
	push	ecx
	push	eax
	call	??$_Destroy_range@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAXPAUNotification@CvNotifications@@0AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<CvNotifications::Notification> >

; 1198 : 				this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	mov	edx, DWORD PTR [esi+4]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 20					; 00000014H
$LN89@Insert_n:

; 1199 : 				}
; 1200 : 
; 1201 :  #if _HAS_ITERATOR_DEBUGGING
; 1202 : 			this->_Orphan_all();
; 1203 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1204 : 
; 1205 : 			_Myend = _Newvec + _Capacity;

	mov	eax, DWORD PTR __Newvec$222185[ebp]
	imul	ebx, 92					; 0000005cH

; 1206 : 			_Mylast = _Newvec + _Count;

	imul	edi, 92					; 0000005cH
	add	ebx, eax
	add	edi, eax
	mov	DWORD PTR [esi+12], ebx
	mov	DWORD PTR [esi+8], edi

; 1207 : 			_Myfirst = _Newvec;

	mov	DWORD PTR [esi+4], eax
	jmp	$LN1@Insert_n
__catch$?_Insert_n@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEXV?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@IABUNotification@CvNotifications@@@Z$0:

; 1185 : 			_CATCH_ALL
; 1186 : 			if (1 < _Ncopied)

	mov	ebx, DWORD PTR __Ncopied$222187[ebp]
	cmp	ebx, 1

; 1187 : 				_Destroy(_Newvec, _Newvec + _Whereoff);

	mov	esi, DWORD PTR __Whereoff$222186[ebp]
	mov	edi, DWORD PTR __Newvec$222185[ebp]
	jle	SHORT $LN7@Insert_n
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, esi
	imul	eax, 92					; 0000005cH
	add	eax, edi
	push	eax
	push	edi
	call	?_Destroy@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEXPAUNotification@CvNotifications@@0@Z ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::_Destroy
$LN7@Insert_n:

; 1188 : 			if (0 < _Ncopied)

	test	ebx, ebx
	jle	SHORT $LN6@Insert_n

; 1189 : 				_Destroy(_Newvec + _Whereoff, _Newvec + _Whereoff + _Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	lea	edx, DWORD PTR [esi+ecx]
	imul	esi, 92					; 0000005cH
	mov	ecx, DWORD PTR _this$[ebp]
	imul	edx, 92					; 0000005cH
	add	edx, edi
	push	edx
	add	esi, edi
	push	esi
	call	?_Destroy@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEXPAUNotification@CvNotifications@@0@Z ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::_Destroy
$LN6@Insert_n:

; 1190 : 			this->_Alval.deallocate(_Newvec, _Capacity);

	push	edi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1191 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN102@Insert_n:
$LN10@Insert_n:

; 1208 : 			}
; 1209 : 		else if ((size_type)(_Mylast - _VEC_ITER_BASE(_Where)) < _Count)

	mov	ecx, DWORD PTR [esi+8]
	sub	ecx, DWORD PTR __Where$[ebp]
	mov	eax, -1307163959			; b21642c9H
	imul	ecx
	add	edx, ecx
	sar	edx, 6
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cmp	eax, edi
	jae	$LN3@Insert_n

; 1210 : 			{	// new stuff spills off end
; 1211 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Tmp$222200[ebp]
	call	??0Notification@CvNotifications@@QAE@ABU01@@Z

; 1212 : 
; 1213 : 			_Umove(_VEC_ITER_BASE(_Where), _Mylast,
; 1214 : 				_VEC_ITER_BASE(_Where) + _Count);	// copy suffix

	mov	eax, DWORD PTR __Where$[ebp]
	mov	ecx, DWORD PTR [esi+8]
	mov	ebx, edi
	imul	ebx, 92					; 0000005cH
	lea	edx, DWORD PTR [ebx+eax]
	push	edx
	push	ecx
	push	eax
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[ebp+12], 2
	call	??$_Umove@PAUNotification@CvNotifications@@@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEPAUNotification@CvNotifications@@PAU23@00@Z ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::_Umove<CvNotifications::Notification *>

; 1215 : 
; 1216 : 			_TRY_BEGIN
; 1217 : 			_Ufill(_Mylast, _Count - (_Mylast - _VEC_ITER_BASE(_Where)),
; 1218 : 				_Tmp);	// insert new stuff off end

	mov	ecx, DWORD PTR [esi+8]
	sub	ecx, DWORD PTR __Where$[ebp]
	lea	edx, DWORD PTR __Tmp$222200[ebp]
	push	edx
	mov	eax, -1307163959			; b21642c9H
	imul	ecx
	add	edx, ecx
	sar	edx, 6
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	sub	edi, eax
	mov	eax, DWORD PTR [esi+8]
	push	edi
	push	eax
	mov	ecx, esi
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	call	?_Ufill@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEPAUNotification@CvNotifications@@PAU34@IABU34@@Z ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::_Ufill

; 1222 : 			_CATCH_END
; 1223 : 
; 1224 : 			_Mylast += _Count;

	add	DWORD PTR [esi+8], ebx
	mov	esi, DWORD PTR [esi+8]

; 1225 : 
; 1226 :  #if _HAS_ITERATOR_DEBUGGING
; 1227 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1228 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1229 : 
; 1230 : 			std::fill(_VEC_ITER_BASE(_Where), _Mylast - _Count,
; 1231 : 				_Tmp);	// insert up to old end

	mov	edx, DWORD PTR __Where$[ebp]
	lea	ecx, DWORD PTR __Tmp$222200[ebp]
	push	ecx
	sub	esi, ebx
	push	esi
	push	edx
	mov	DWORD PTR __$EHRec$[ebp+12], 2
	call	??$_Fill@PAUNotification@CvNotifications@@U12@@std@@YAXPAUNotification@CvNotifications@@0ABU12@@Z ; std::_Fill<CvNotifications::Notification *,CvNotifications::Notification>
	add	esp, 12					; 0000000cH

; 1232 : 			}

	lea	ecx, DWORD PTR __Tmp$222200[ebp]

; 1233 : 		else

	jmp	SHORT $LN100@Insert_n
__catch$?_Insert_n@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEXV?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@IABUNotification@CvNotifications@@@Z$2:

; 1219 : 			_CATCH_ALL
; 1220 : 			_Destroy(_VEC_ITER_BASE(_Where) + _Count, _Mylast + _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	imul	eax, 92					; 0000005cH
	mov	edx, DWORD PTR [ecx+8]
	add	edx, eax
	push	edx
	mov	edx, DWORD PTR __Where$[ebp]
	add	eax, edx
	push	eax
	call	?_Destroy@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEXPAUNotification@CvNotifications@@0@Z ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::_Destroy

; 1221 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN103@Insert_n:
$LN3@Insert_n:

; 1234 : 			{	// new stuff can all be assigned
; 1235 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Tmp$222210[ebp]
	call	??0Notification@CvNotifications@@QAE@ABU01@@Z

; 1236 : 
; 1237 : 			pointer _Oldend = _Mylast;
; 1238 : 			_Mylast = _Umove(_Oldend - _Count, _Oldend,
; 1239 : 				_Mylast);	// copy suffix

	imul	edi, 92					; 0000005cH
	mov	ebx, DWORD PTR [esi+8]
	push	ebx
	mov	eax, ebx
	sub	eax, edi
	push	ebx
	push	eax
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[ebp+12], 5
	mov	DWORD PTR tv527[ebp], eax
	call	??$_Umove@PAUNotification@CvNotifications@@@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEPAUNotification@CvNotifications@@PAU23@00@Z ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::_Umove<CvNotifications::Notification *>

; 1240 : 
; 1241 :  #if _HAS_ITERATOR_DEBUGGING
; 1242 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1243 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1244 : 
; 1245 : 			_STDEXT _Unchecked_move_backward(_VEC_ITER_BASE(_Where), _Oldend - _Count,
; 1246 : 				_Oldend);	// copy hole

	mov	ecx, DWORD PTR tv527[ebp]
	mov	edx, DWORD PTR __Where$[ebp]
	push	ebx
	push	ecx
	push	edx
	mov	DWORD PTR [esi+8], eax
	call	??$_Unchecked_move_backward@PAUNotification@CvNotifications@@PAU12@@stdext@@YAPAUNotification@CvNotifications@@PAU12@00@Z ; stdext::_Unchecked_move_backward<CvNotifications::Notification *,CvNotifications::Notification *>

; 1247 : 			std::fill(_VEC_ITER_BASE(_Where), _VEC_ITER_BASE(_Where) + _Count,
; 1248 : 				_Tmp);	// insert into hole

	lea	eax, DWORD PTR __Tmp$222210[ebp]
	push	eax
	mov	eax, DWORD PTR __Where$[ebp]
	add	edi, eax
	push	edi
	push	eax
	call	??$_Fill@PAUNotification@CvNotifications@@U12@@std@@YAXPAUNotification@CvNotifications@@0ABU12@@Z ; std::_Fill<CvNotifications::Notification *,CvNotifications::Notification>
	add	esp, 24					; 00000018H

; 1249 : 			}

	lea	ecx, DWORD PTR __Tmp$222210[ebp]
$LN100@Insert_n:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	call	??1Notification@CvNotifications@@QAE@XZ
$LN1@Insert_n:

; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	add	ebp, 108				; 0000006cH
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN99@Insert_n:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Insert_n@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEXV?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@IABUNotification@CvNotifications@@@Z$4:
	lea	ecx, DWORD PTR __Tmp$222200[ebp]
	jmp	??1Notification@CvNotifications@@QAE@XZ
__unwindfunclet$?_Insert_n@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEXV?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@IABUNotification@CvNotifications@@@Z$5:
	lea	ecx, DWORD PTR __Tmp$222210[ebp]
	jmp	??1Notification@CvNotifications@@QAE@XZ
__ehhandler$?_Insert_n@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEXV?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@IABUNotification@CvNotifications@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?_Insert_n@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEXV?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@IABUNotification@CvNotifications@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Insert_n@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEXV?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@IABUNotification@CvNotifications@@@Z ENDP ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::_Insert_n
PUBLIC	?Uninit@CvNotifications@@QAEXXZ			; CvNotifications::Uninit
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvnotifications.cpp
;	COMDAT ?Uninit@CvNotifications@@QAEXXZ
_TEXT	SEGMENT
$T227600 = -4						; size = 4
?Uninit@CvNotifications@@QAEXXZ PROC			; CvNotifications::Uninit, COMDAT
; _this$ = ecx

; 258  : {

	push	ecx
	push	esi
	mov	esi, ecx

; 259  : 	m_ePlayer = NO_PLAYER;
; 260  : 	m_iCurrentLookupIndex = 0;
; 261  : 	m_aNotifications.clear();

	lea	ecx, DWORD PTR [esi+4]
	mov	DWORD PTR [esi], -1
	mov	DWORD PTR [esi+28], 0
	mov	eax, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR [ecx+4]
	push	eax
	push	edx
	lea	eax, DWORD PTR $T227600[esp+16]
	push	eax
	call	?erase@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAE?AV?$_Vector_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@V?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@0@Z ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::erase

; 262  : 
; 263  : 	m_iNotificationsBeginIndex = -1;

	mov	DWORD PTR [esi+20], -1

; 264  : 	m_iNotificationsEndIndex = -1;

	mov	DWORD PTR [esi+24], -1
	pop	esi

; 265  : }

	pop	ecx
	ret	0
?Uninit@CvNotifications@@QAEXXZ ENDP			; CvNotifications::Uninit
_TEXT	ENDS
PUBLIC	?resize@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAEXIUNotification@CvNotifications@@@Z ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::resize
;	COMDAT xdata$x
; File s:\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?resize@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAEXIUNotification@CvNotifications@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?resize@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAEXIUNotification@CvNotifications@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?resize@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAEXIUNotification@CvNotifications@@@Z$1
__ehfuncinfo$?resize@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAEXIUNotification@CvNotifications@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?resize@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAEXIUNotification@CvNotifications@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\vector
xdata$x	ENDS
;	COMDAT ?resize@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAEXIUNotification@CvNotifications@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
$T227625 = 8						; size = 4
__Newsize$ = 8						; size = 4
__Val$ = 12						; size = 92
?resize@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAEXIUNotification@CvNotifications@@@Z PROC ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::resize, COMDAT
; _this$ = ecx

; 717  : 		{	// determine new length, padding with _Val elements as needed

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?resize@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAEXIUNotification@CvNotifications@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ebx
	push	esi
	push	edi

; 718  : 		if (size() < _Newsize)

	mov	edi, DWORD PTR [ecx+8]
	mov	ebx, DWORD PTR [ecx+4]
	mov	esi, edi
	sub	esi, ebx
	mov	eax, -1307163959			; b21642c9H
	imul	esi
	add	edx, esi
	sar	edx, 6
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	edx, DWORD PTR __Newsize$[esp+20]
	mov	DWORD PTR __$EHRec$[esp+32], 0
	cmp	edx, eax
	jbe	SHORT $LN48@resize

; 719  : 			_Insert_n(end(), _Newsize - size(), _Val);

	lea	esi, DWORD PTR __Val$[esp+20]
	push	esi
	sub	edx, eax
	push	edx
	push	edi
	call	?_Insert_n@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@IAEXV?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@IABUNotification@CvNotifications@@@Z ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::_Insert_n
	jmp	SHORT $LN1@resize
$LN48@resize:

; 720  : 		else if (_Newsize < size())

	jae	SHORT $LN1@resize

; 721  : 			erase(begin() + _Newsize, end());

	imul	edx, 92					; 0000005cH
	push	edi
	add	edx, ebx
	push	edx
	lea	eax, DWORD PTR $T227625[esp+28]
	push	eax
	call	?erase@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAE?AV?$_Vector_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@V?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@0@Z ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::erase
$LN1@resize:

; 722  : 		}

	lea	ecx, DWORD PTR __Val$[esp+56]
	mov	DWORD PTR __$EHRec$[esp+32], 1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR __Val$[esp+28]
	mov	DWORD PTR __$EHRec$[esp+32], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	add	esp, 12					; 0000000cH
	ret	96					; 00000060H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?resize@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAEXIUNotification@CvNotifications@@@Z$0:
	lea	ecx, DWORD PTR __Val$[ebp-4]
	jmp	??1Notification@CvNotifications@@QAE@XZ
__unwindfunclet$?resize@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAEXIUNotification@CvNotifications@@@Z$1:
	lea	ecx, DWORD PTR __Val$[ebp+4]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?resize@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAEXIUNotification@CvNotifications@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?resize@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAEXIUNotification@CvNotifications@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?resize@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAEXIUNotification@CvNotifications@@@Z ENDP ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::resize
PUBLIC	??0CvNotifications@@QAE@XZ			; CvNotifications::CvNotifications
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CvNotifications@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CvNotifications@@QAE@XZ$0
__ehfuncinfo$??0CvNotifications@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CvNotifications@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvnotifications.cpp
xdata$x	ENDS
;	COMDAT ??0CvNotifications@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T227934 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CvNotifications@@QAE@XZ PROC				; CvNotifications::CvNotifications, COMDAT
; _this$ = ecx

; 231  : {

	push	-1
	push	__ehhandler$??0CvNotifications@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	esi
	mov	esi, ecx
	lea	ecx, DWORD PTR [esi+4]
	xor	eax, eax
	mov	DWORD PTR _this$[esp+24], esi
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], eax

; 232  : 	Uninit();

	mov	DWORD PTR [esi+28], eax
	mov	DWORD PTR __$EHRec$[esp+32], eax
	mov	DWORD PTR [esi], -1
	mov	eax, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR [ecx+4]
	push	eax
	push	edx
	lea	eax, DWORD PTR $T227934[esp+32]
	push	eax
	call	?erase@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAE?AV?$_Vector_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@V?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@0@Z ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::erase

; 233  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR [esi+20], -1
	mov	DWORD PTR [esi+24], -1
	mov	eax, esi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 20					; 00000014H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CvNotifications@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAE@XZ ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::~vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >
__ehhandler$??0CvNotifications@@QAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??0CvNotifications@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CvNotifications@@QAE@XZ ENDP				; CvNotifications::CvNotifications
PUBLIC	??1CvNotifications@@QAE@XZ			; CvNotifications::~CvNotifications
;	COMDAT xdata$x
; File s:\msvs2008\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??1CvNotifications@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CvNotifications@@QAE@XZ$0
__ehfuncinfo$??1CvNotifications@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CvNotifications@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvnotifications.cpp
xdata$x	ENDS
;	COMDAT ??1CvNotifications@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__Cat$228092 = -16					; size = 1
$T228025 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CvNotifications@@QAE@XZ PROC				; CvNotifications::~CvNotifications, COMDAT
; _this$ = ecx

; 237  : {

	push	-1
	push	__ehhandler$??1CvNotifications@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	ebp
	push	esi
	push	edi
	mov	edi, ecx
	mov	DWORD PTR _this$[esp+32], edi
	xor	ebp, ebp

; 238  : 	Uninit();

	lea	esi, DWORD PTR [edi+4]
	mov	DWORD PTR [edi], -1
	mov	DWORD PTR [edi+28], ebp
	mov	eax, DWORD PTR [esi+8]
	mov	ecx, DWORD PTR [esi+4]
	push	eax
	push	ecx
	lea	eax, DWORD PTR $T228025[esp+40]
	push	eax
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[esp+52], ebp
	call	?erase@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAE?AV?$_Vector_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@V?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@0@Z ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::erase
	mov	DWORD PTR [edi+20], -1
	mov	DWORD PTR [edi+24], -1

; 239  : }

	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR __$EHRec$[esp+40], -1
	cmp	eax, ebp
	je	SHORT $LN31@CvNotifica
	mov	ecx, DWORD PTR __Cat$228092[esp+32]
	mov	edx, DWORD PTR [esi+8]
	push	ecx
	push	esi
	push	edx
	push	eax
	call	??$_Destroy_range@V?$allocator@UNotification@CvNotifications@@@std@@@std@@YAXPAUNotification@CvNotifications@@0AAV?$allocator@UNotification@CvNotifications@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<CvNotifications::Notification> >
	mov	eax, DWORD PTR [esi+4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 20					; 00000014H
$LN31@CvNotifica:
	mov	ecx, DWORD PTR __$EHRec$[esp+32]
	mov	DWORD PTR [esi+4], ebp
	mov	DWORD PTR [esi+8], ebp
	mov	DWORD PTR [esi+12], ebp
	pop	edi
	pop	esi
	pop	ebp
	mov	DWORD PTR fs:0, ecx
	add	esp, 20					; 00000014H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CvNotifications@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAE@XZ ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::~vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >
__ehhandler$??1CvNotifications@@QAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??1CvNotifications@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CvNotifications@@QAE@XZ ENDP				; CvNotifications::~CvNotifications
PUBLIC	?resize@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAEXI@Z ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::resize
;	COMDAT xdata$x
; File s:\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?resize@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAEXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?resize@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAEXI@Z$1
__ehfuncinfo$?resize@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAEXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?resize@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAEXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\vector
xdata$x	ENDS
;	COMDAT ?resize@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
$T228130 = -16						; size = 4
$T228109 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Newsize$ = 8						; size = 4
?resize@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAEXI@Z PROC ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::resize, COMDAT
; _this$ = ecx

; 712  : 		{	// determine new length, padding with _Ty() elements as needed

	push	-1
	push	__ehhandler$?resize@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi
	push	edi

; 713  : 		resize(_Newsize, _Ty());

	sub	esp, 92					; 0000005cH
	mov	esi, esp
	mov	edi, ecx
	mov	DWORD PTR $T228109[esp+116], esp
	lea	ecx, DWORD PTR [esi+8]
	mov	DWORD PTR $T228130[esp+116], esi
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR [esi+36]
	mov	DWORD PTR __$EHRec$[esp+124], 0
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR __Newsize$[esp+112]
	push	eax
	mov	ecx, edi
	mov	DWORD PTR __$EHRec$[esp+128], -1
	call	?resize@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAEXIUNotification@CvNotifications@@@Z ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::resize

; 714  : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	pop	edi
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 16					; 00000010H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?resize@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAEXI@Z$1:
	mov	ecx, DWORD PTR $T228130[ebp]
	add	ecx, 8
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?resize@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAEXI@Z:
	mov	eax, OFFSET __ehfuncinfo$?resize@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?resize@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAEXI@Z ENDP ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::resize
PUBLIC	?Init@CvNotifications@@QAEXW4PlayerTypes@@@Z	; CvNotifications::Init
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvnotifications.cpp
;	COMDAT ?Init@CvNotifications@@QAEXW4PlayerTypes@@@Z
_TEXT	SEGMENT
$T228207 = -4						; size = 4
_ui$220754 = -4						; size = 4
tv303 = 8						; size = 4
_ePlayer$ = 8						; size = 4
?Init@CvNotifications@@QAEXW4PlayerTypes@@@Z PROC	; CvNotifications::Init, COMDAT
; _this$ = ecx

; 243  : {

	push	ecx
	push	ebx
	push	ebp
	push	esi
	mov	ebp, ecx
	push	edi

; 244  : 	Uninit();

	lea	edi, DWORD PTR [ebp+4]
	or	ebx, -1
	mov	DWORD PTR [ebp], ebx
	xor	esi, esi
	mov	DWORD PTR [ebp+28], esi
	mov	eax, DWORD PTR [edi+8]
	mov	ecx, DWORD PTR [edi+4]
	push	eax
	push	ecx
	lea	eax, DWORD PTR $T228207[esp+28]
	push	eax
	mov	ecx, edi
	call	?erase@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAE?AV?$_Vector_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@V?$_Vector_const_iterator@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@2@0@Z ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::erase

; 245  : 	m_ePlayer = ePlayer;

	mov	ecx, DWORD PTR _ePlayer$[esp+16]
	mov	DWORD PTR [ebp], ecx

; 246  : 
; 247  : 	m_aNotifications.resize(MAX_NOTIFICATIONS);

	push	100					; 00000064H
	mov	ecx, edi
	mov	DWORD PTR [ebp+20], ebx
	mov	DWORD PTR [ebp+24], ebx
	call	?resize@?$vector@UNotification@CvNotifications@@V?$allocator@UNotification@CvNotifications@@@std@@@std@@QAEXI@Z ; std::vector<CvNotifications::Notification,std::allocator<CvNotifications::Notification> >::resize

; 248  : 	for(uint ui = 0; ui < m_aNotifications.size(); ui++)

	mov	ecx, DWORD PTR [edi+8]
	sub	ecx, DWORD PTR [edi+4]
	mov	eax, -1307163959			; b21642c9H
	imul	ecx
	add	edx, ecx
	sar	edx, 6
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	DWORD PTR _ui$220754[esp+20], esi
	je	SHORT $LN38@Init

; 244  : 	Uninit();

	mov	DWORD PTR tv303[esp+16], esi
$LL39@Init:

; 249  : 	{
; 250  : 		m_aNotifications[ui].Clear();

	mov	esi, DWORD PTR [ebp+8]
	add	esi, DWORD PTR tv303[esp+16]
	push	OFFSET $SG220740
	lea	ecx, DWORD PTR [esi+8]
	mov	DWORD PTR [esi], ebx
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	push	OFFSET $SG220741
	lea	ecx, DWORD PTR [esi+36]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	add	DWORD PTR tv303[esp+16], 92		; 0000005cH
	mov	DWORD PTR [esi+64], ebx
	mov	DWORD PTR [esi+68], ebx
	mov	DWORD PTR [esi+72], ebx
	mov	DWORD PTR [esi+80], ebx
	mov	DWORD PTR [esi+84], ebx
	mov	BYTE PTR [esi+88], 0
	mov	BYTE PTR [esi+89], 0
	mov	BYTE PTR [esi+90], 0
	mov	ecx, DWORD PTR [edi+8]
	sub	ecx, DWORD PTR [edi+4]
	mov	esi, DWORD PTR _ui$220754[esp+20]
	mov	eax, -1307163959			; b21642c9H
	imul	ecx
	add	edx, ecx
	sar	edx, 6
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	inc	esi
	add	ecx, edx
	mov	DWORD PTR _ui$220754[esp+20], esi
	cmp	esi, ecx
	jb	SHORT $LL39@Init
	pop	edi

; 251  : 	}
; 252  : 	m_iNotificationsBeginIndex = 0;

	xor	eax, eax
	pop	esi
	mov	DWORD PTR [ebp+20], eax

; 253  : 	m_iNotificationsEndIndex = 0;

	mov	DWORD PTR [ebp+24], eax
	pop	ebp
	pop	ebx

; 254  : }

	pop	ecx
	ret	4
$LN38@Init:
	pop	edi

; 251  : 	}
; 252  : 	m_iNotificationsBeginIndex = 0;

	mov	DWORD PTR [ebp+20], esi

; 253  : 	m_iNotificationsEndIndex = 0;

	mov	DWORD PTR [ebp+24], esi
	pop	esi
	pop	ebp
	pop	ebx

; 254  : }

	pop	ecx
	ret	4
?Init@CvNotifications@@QAEXW4PlayerTypes@@@Z ENDP	; CvNotifications::Init
_TEXT	ENDS
END
