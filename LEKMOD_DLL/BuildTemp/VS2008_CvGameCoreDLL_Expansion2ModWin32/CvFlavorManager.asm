; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	c:\Users\EnormousApplePie\Documents\GitHub\Lekmod\LEKMOD_DLL\CvGameCoreDLL_Expansion2\CvFlavorManager.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?NO_QUEST_DATA@CvMinorCivQuest@@2HB		; CvMinorCivQuest::NO_QUEST_DATA
PUBLIC	?NO_TURN@CvMinorCivQuest@@2HB			; CvMinorCivQuest::NO_TURN
CONST	SEGMENT
$SG218634 DB	'FLAVOR_EXPANSION', 00H
	ORG $+3
$SG218636 DB	'FLAVOR_GROWTH', 00H
	ORG $+2
$SG218675 DB	'Adjusting Personality Flavor', 00H
	ORG $+3
$SG218720 DB	'.csv', 00H
	ORG $+3
$SG218721 DB	'FlavorAILog_', 00H
	ORG $+3
$SG218723 DB	'FlavorAILog.csv', 00H
$SG218725 DB	'%03d, ', 00H
	ORG $+1
$SG218727 DB	', ', 00H
	ORG $+1
$SG218735 DB	'Flavor, %s, %d', 00H
	ORG $+1
$SG218738 DB	'Flavor, %s, %d', 00H
CONST	ENDS
;	COMDAT ?NO_TURN@CvMinorCivQuest@@2HB
CONST	SEGMENT
?NO_TURN@CvMinorCivQuest@@2HB DD 0ffffffffH		; CvMinorCivQuest::NO_TURN
CONST	ENDS
;	COMDAT ?NO_QUEST_DATA@CvMinorCivQuest@@2HB
CONST	SEGMENT
?NO_QUEST_DATA@CvMinorCivQuest@@2HB DD 0ffffffffH	; CvMinorCivQuest::NO_QUEST_DATA
CONST	ENDS
PUBLIC	??_7CvFlavorRecipient@@6B@			; CvFlavorRecipient::`vftable'
PUBLIC	??0CvFlavorRecipient@@QAE@XZ			; CvFlavorRecipient::CvFlavorRecipient
PUBLIC	??_R4CvFlavorRecipient@@6B@			; CvFlavorRecipient::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCvFlavorRecipient@@@8			; CvFlavorRecipient `RTTI Type Descriptor'
PUBLIC	??_R3CvFlavorRecipient@@8			; CvFlavorRecipient::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CvFlavorRecipient@@8			; CvFlavorRecipient::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CvFlavorRecipient@@8		; CvFlavorRecipient::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?Init@CvFlavorRecipient@@UAEXXZ			; CvFlavorRecipient::Init
PUBLIC	?Uninit@CvFlavorRecipient@@UAEXXZ		; CvFlavorRecipient::Uninit
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	__purecall:PROC
;	COMDAT ??_R1A@?0A@EA@CvFlavorRecipient@@8
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvflavormanager.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@CvFlavorRecipient@@8 DD FLAT:??_R0?AVCvFlavorRecipient@@@8 ; CvFlavorRecipient::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CvFlavorRecipient@@8
rdata$r	ENDS
;	COMDAT ??_R2CvFlavorRecipient@@8
rdata$r	SEGMENT
??_R2CvFlavorRecipient@@8 DD FLAT:??_R1A@?0A@EA@CvFlavorRecipient@@8 ; CvFlavorRecipient::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CvFlavorRecipient@@8
rdata$r	SEGMENT
??_R3CvFlavorRecipient@@8 DD 00H			; CvFlavorRecipient::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CvFlavorRecipient@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCvFlavorRecipient@@@8
_DATA	SEGMENT
??_R0?AVCvFlavorRecipient@@@8 DD FLAT:??_7type_info@@6B@ ; CvFlavorRecipient `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCvFlavorRecipient@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CvFlavorRecipient@@6B@
rdata$r	SEGMENT
??_R4CvFlavorRecipient@@6B@ DD 00H			; CvFlavorRecipient::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCvFlavorRecipient@@@8
	DD	FLAT:??_R3CvFlavorRecipient@@8
rdata$r	ENDS
;	COMDAT ??_7CvFlavorRecipient@@6B@
CONST	SEGMENT
??_7CvFlavorRecipient@@6B@ DD FLAT:??_R4CvFlavorRecipient@@6B@ ; CvFlavorRecipient::`vftable'
	DD	FLAT:?Init@CvFlavorRecipient@@UAEXXZ
	DD	FLAT:?Uninit@CvFlavorRecipient@@UAEXXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??0CvFlavorRecipient@@QAE@XZ
_TEXT	SEGMENT
??0CvFlavorRecipient@@QAE@XZ PROC			; CvFlavorRecipient::CvFlavorRecipient, COMDAT
; _this$ = ecx

; 21   : {

	mov	eax, ecx
	mov	DWORD PTR [eax], OFFSET ??_7CvFlavorRecipient@@6B@
	mov	DWORD PTR [eax+8], 0

; 22   : 
; 23   : }

	ret	0
??0CvFlavorRecipient@@QAE@XZ ENDP			; CvFlavorRecipient::CvFlavorRecipient
_TEXT	ENDS
PUBLIC	??1CvFlavorRecipient@@QAE@XZ			; CvFlavorRecipient::~CvFlavorRecipient
; Function compile flags: /Ogtpy
;	COMDAT ??1CvFlavorRecipient@@QAE@XZ
_TEXT	SEGMENT
??1CvFlavorRecipient@@QAE@XZ PROC			; CvFlavorRecipient::~CvFlavorRecipient, COMDAT
; _this$ = ecx

; 27   : {

	mov	DWORD PTR [ecx], OFFSET ??_7CvFlavorRecipient@@6B@

; 28   : 
; 29   : }

	ret	0
??1CvFlavorRecipient@@QAE@XZ ENDP			; CvFlavorRecipient::~CvFlavorRecipient
_TEXT	ENDS
PUBLIC	?IsCity@CvFlavorRecipient@@QAE_NXZ		; CvFlavorRecipient::IsCity
; Function compile flags: /Ogtpy
;	COMDAT ?IsCity@CvFlavorRecipient@@QAE_NXZ
_TEXT	SEGMENT
?IsCity@CvFlavorRecipient@@QAE_NXZ PROC			; CvFlavorRecipient::IsCity, COMDAT
; _this$ = ecx

; 48   : 	return m_bIsCity;

	mov	al, BYTE PTR [ecx+4]

; 49   : }

	ret	0
?IsCity@CvFlavorRecipient@@QAE_NXZ ENDP			; CvFlavorRecipient::IsCity
_TEXT	ENDS
PUBLIC	?GetLatestFlavorValue@CvFlavorRecipient@@QAEHW4FlavorTypes@@_N@Z ; CvFlavorRecipient::GetLatestFlavorValue
; Function compile flags: /Ogtpy
;	COMDAT ?GetLatestFlavorValue@CvFlavorRecipient@@QAEHW4FlavorTypes@@_N@Z
_TEXT	SEGMENT
_eFlavor$ = 8						; size = 4
_bAllowNegative$ = 12					; size = 1
?GetLatestFlavorValue@CvFlavorRecipient@@QAEHW4FlavorTypes@@_N@Z PROC ; CvFlavorRecipient::GetLatestFlavorValue, COMDAT
; _this$ = ecx

; 117  : 	CvAssertMsg(eFlavor > -1, "Out of bounds.");
; 118  : 	CvAssertMsg(eFlavor < GC.getNumFlavorTypes(), "Out of bounds.");
; 119  : 
; 120  : 	if(m_piLatestFlavorValues[eFlavor] < 0 && !bAllowNegative)

	mov	eax, DWORD PTR [ecx+8]
	mov	ecx, DWORD PTR _eFlavor$[esp-4]
	mov	eax, DWORD PTR [eax+ecx*4]
	test	eax, eax
	jge	SHORT $LN2@GetLatestF
	cmp	BYTE PTR _bAllowNegative$[esp-4], 0
	jne	SHORT $LN2@GetLatestF

; 121  : 	{
; 122  : 		return 0;

	xor	eax, eax
$LN2@GetLatestF:

; 123  : 	}
; 124  : 
; 125  : 	return m_piLatestFlavorValues[eFlavor];
; 126  : }

	ret	8
?GetLatestFlavorValue@CvFlavorRecipient@@QAEHW4FlavorTypes@@_N@Z ENDP ; CvFlavorRecipient::GetLatestFlavorValue
_TEXT	ENDS
PUBLIC	?GetIndividualFlavor@CvFlavorManager@@QAEHW4FlavorTypes@@@Z ; CvFlavorManager::GetIndividualFlavor
; Function compile flags: /Ogtpy
;	COMDAT ?GetIndividualFlavor@CvFlavorManager@@QAEHW4FlavorTypes@@@Z
_TEXT	SEGMENT
_eType$ = 8						; size = 4
?GetIndividualFlavor@CvFlavorManager@@QAEHW4FlavorTypes@@@Z PROC ; CvFlavorManager::GetIndividualFlavor, COMDAT
; _this$ = ecx

; 439  : 	CvAssert((int)eType >= 0 && (int)eType < GC.getNumFlavorTypes());
; 440  : 	return m_piActiveFlavor[eType];

	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR _eType$[esp-4]
	mov	eax, DWORD PTR [eax+ecx*4]

; 441  : }

	ret	4
?GetIndividualFlavor@CvFlavorManager@@QAEHW4FlavorTypes@@@Z ENDP ; CvFlavorManager::GetIndividualFlavor
_TEXT	ENDS
PUBLIC	?GetAllFlavors@CvFlavorManager@@QAEPAHXZ	; CvFlavorManager::GetAllFlavors
; Function compile flags: /Ogtpy
;	COMDAT ?GetAllFlavors@CvFlavorManager@@QAEPAHXZ
_TEXT	SEGMENT
?GetAllFlavors@CvFlavorManager@@QAEPAHXZ PROC		; CvFlavorManager::GetAllFlavors, COMDAT
; _this$ = ecx

; 446  : 	return m_piActiveFlavor;

	mov	eax, DWORD PTR [ecx+4]

; 447  : }

	ret	0
?GetAllFlavors@CvFlavorManager@@QAEPAHXZ ENDP		; CvFlavorManager::GetAllFlavors
_TEXT	ENDS
PUBLIC	?GetPersonalityIndividualFlavor@CvFlavorManager@@QAEHW4FlavorTypes@@@Z ; CvFlavorManager::GetPersonalityIndividualFlavor
; Function compile flags: /Ogtpy
;	COMDAT ?GetPersonalityIndividualFlavor@CvFlavorManager@@QAEHW4FlavorTypes@@@Z
_TEXT	SEGMENT
_eType$ = 8						; size = 4
?GetPersonalityIndividualFlavor@CvFlavorManager@@QAEHW4FlavorTypes@@@Z PROC ; CvFlavorManager::GetPersonalityIndividualFlavor, COMDAT
; _this$ = ecx

; 452  : 	CvAssert((int)eType >= 0 && (int)eType < GC.getNumFlavorTypes());
; 453  : 	return m_piPersonalityFlavor[eType];

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _eType$[esp-4]
	mov	eax, DWORD PTR [eax+ecx*4]

; 454  : }

	ret	4
?GetPersonalityIndividualFlavor@CvFlavorManager@@QAEHW4FlavorTypes@@@Z ENDP ; CvFlavorManager::GetPersonalityIndividualFlavor
_TEXT	ENDS
PUBLIC	?GetAllPersonalityFlavors@CvFlavorManager@@QAEPAHXZ ; CvFlavorManager::GetAllPersonalityFlavors
; Function compile flags: /Ogtpy
;	COMDAT ?GetAllPersonalityFlavors@CvFlavorManager@@QAEPAHXZ
_TEXT	SEGMENT
?GetAllPersonalityFlavors@CvFlavorManager@@QAEPAHXZ PROC ; CvFlavorManager::GetAllPersonalityFlavors, COMDAT
; _this$ = ecx

; 459  : 	return m_piPersonalityFlavor;

	mov	eax, DWORD PTR [ecx]

; 460  : }

	ret	0
?GetAllPersonalityFlavors@CvFlavorManager@@QAEPAHXZ ENDP ; CvFlavorManager::GetAllPersonalityFlavors
_TEXT	ENDS
PUBLIC	?get_allocator@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAEAAV?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@XZ ; FFastList<CvFlavorRecipient *,297,0>::get_allocator
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastlist.h
;	COMDAT ?get_allocator@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAEAAV?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@XZ
_TEXT	SEGMENT
?get_allocator@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAEAAV?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@XZ PROC ; FFastList<CvFlavorRecipient *,297,0>::get_allocator, COMDAT
; _this$ = ecx

; 247  : 	ALLOC_TYPE& get_allocator(){ return m_kAllocator; };

	mov	eax, ecx
	ret	0
?get_allocator@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAEAAV?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@XZ ENDP ; FFastList<CvFlavorRecipient *,297,0>::get_allocator
_TEXT	ENDS
PUBLIC	??0?$ArrayWrapper@H@@QAE@HPAH@Z			; ArrayWrapper<int>::ArrayWrapper<int>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fdatastream.h
;	COMDAT ??0?$ArrayWrapper@H@@QAE@HPAH@Z
_TEXT	SEGMENT
_count$ = 8						; size = 4
_values$ = 12						; size = 4
??0?$ArrayWrapper@H@@QAE@HPAH@Z PROC			; ArrayWrapper<int>::ArrayWrapper<int>, COMDAT
; _this$ = ecx

; 378  : 		: m_values(values), m_count(count) {}

	mov	edx, DWORD PTR _count$[esp-4]
	mov	eax, ecx
	mov	ecx, DWORD PTR _values$[esp-4]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	ret	8
??0?$ArrayWrapper@H@@QAE@HPAH@Z ENDP			; ArrayWrapper<int>::ArrayWrapper<int>
_TEXT	ENDS
PUBLIC	??1?$base_iterator@Vbase_iterator_tail@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAE@XZ ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator<FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator_tail>::~base_iterator<FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator_tail>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastlist.h
;	COMDAT ??1?$base_iterator@Vbase_iterator_tail@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAE@XZ
_TEXT	SEGMENT
??1?$base_iterator@Vbase_iterator_tail@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAE@XZ PROC ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator<FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator_tail>::~base_iterator<FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator_tail>, COMDAT
; _this$ = ecx

; 299  : 		~base_iterator(){};

	ret	0
??1?$base_iterator@Vbase_iterator_tail@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAE@XZ ENDP ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator<FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator_tail>::~base_iterator<FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator_tail>
_TEXT	ENDS
PUBLIC	??9?$base_iterator@Vbase_iterator_tail@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QBE_NABV01@@Z ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator<FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator_tail>::operator!=
; Function compile flags: /Ogtpy
;	COMDAT ??9?$base_iterator@Vbase_iterator_tail@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QBE_NABV01@@Z
_TEXT	SEGMENT
_rhs$ = 8						; size = 4
??9?$base_iterator@Vbase_iterator_tail@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QBE_NABV01@@Z PROC ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator<FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator_tail>::operator!=, COMDAT
; _this$ = ecx

; 353  : 			return m_uiCurrPos != rhs.m_uiCurrPos;

	mov	eax, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _rhs$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx+4]
	setne	cl
	mov	al, cl

; 354  : 		};

	ret	4
??9?$base_iterator@Vbase_iterator_tail@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QBE_NABV01@@Z ENDP ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator<FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator_tail>::operator!=
_TEXT	ENDS
PUBLIC	??1iterator@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAE@XZ ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::iterator::~iterator
; Function compile flags: /Ogtpy
;	COMDAT ??1iterator@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAE@XZ
_TEXT	SEGMENT
??1iterator@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAE@XZ PROC ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::iterator::~iterator, COMDAT
; _this$ = ecx

; 381  : 		~iterator(){};

	ret	0
??1iterator@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAE@XZ ENDP ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::iterator::~iterator
_TEXT	ENDS
PUBLIC	?get_index@?$base_iterator@Vbase_iterator_tail@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QBEIXZ ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator<FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator_tail>::get_index
; Function compile flags: /Ogtpy
;	COMDAT ?get_index@?$base_iterator@Vbase_iterator_tail@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QBEIXZ
_TEXT	SEGMENT
?get_index@?$base_iterator@Vbase_iterator_tail@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QBEIXZ PROC ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator<FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator_tail>::get_index, COMDAT
; _this$ = ecx

; 363  : 			return m_uiCurrPos;

	mov	eax, DWORD PTR [ecx+4]

; 364  : 		};

	ret	0
?get_index@?$base_iterator@Vbase_iterator_tail@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QBEIXZ ENDP ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator<FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator_tail>::get_index
_TEXT	ENDS
PUBLIC	??0?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@QAE@ABQAVCvFlavorRecipient@@@Z ; MultiListNodePolicy<CvFlavorRecipient *>::MultiListNodePolicy<CvFlavorRecipient *>
; Function compile flags: /Ogtpy
;	COMDAT ??0?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@QAE@ABQAVCvFlavorRecipient@@@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
??0?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@QAE@ABQAVCvFlavorRecipient@@@Z PROC ; MultiListNodePolicy<CvFlavorRecipient *>::MultiListNodePolicy<CvFlavorRecipient *>, COMDAT
; _this$ = ecx

; 78   : 	MultiListNodePolicy( const T& x ) : data( x ){};

	mov	eax, ecx
	mov	ecx, DWORD PTR _x$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+8], edx
	ret	4
??0?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@QAE@ABQAVCvFlavorRecipient@@@Z ENDP ; MultiListNodePolicy<CvFlavorRecipient *>::MultiListNodePolicy<CvFlavorRecipient *>
_TEXT	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 59   : 	return (_Where);

	mov	eax, DWORD PTR __Where$[esp-4]

; 60   : 	}

	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	?get_allocator@?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@QAEAAV?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@XZ ; FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> >::get_allocator
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastlist.h
;	COMDAT ?get_allocator@?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@QAEAAV?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@XZ
_TEXT	SEGMENT
?get_allocator@?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@QAEAAV?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@XZ PROC ; FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> >::get_allocator, COMDAT
; _this$ = ecx

; 711  : 	T_ALLOCATOR& get_allocator(){ return m_kAllocator; };

	mov	eax, ecx
	ret	0
?get_allocator@?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@QAEAAV?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@XZ ENDP ; FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> >::get_allocator
_TEXT	ENDS
PUBLIC	??1?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@QAE@XZ ; BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::~BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ??1?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@QAE@XZ
_TEXT	SEGMENT
??1?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@QAE@XZ PROC ; BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::~BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>, COMDAT
; _this$ = ecx

; 111  : 	~BaseVector(){};

	ret	0
??1?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@QAE@XZ ENDP ; BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::~BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>
_TEXT	ENDS
PUBLIC	??A?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@QAEAAU?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@I@Z ; BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::operator[]
; Function compile flags: /Ogtpy
;	COMDAT ??A?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@QAEAAU?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@I@Z
_TEXT	SEGMENT
_ui$ = 8						; size = 4
??A?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@QAEAAU?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@I@Z PROC ; BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::operator[], COMDAT
; _this$ = ecx

; 129  : 		FAssert(ui < m_uiCurrSize);
; 130  : 		return m_pData[ui];

	mov	eax, DWORD PTR _ui$[esp-4]
	mov	ecx, DWORD PTR [ecx]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*4]

; 131  : 	};

	ret	4
??A?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@QAEAAU?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@I@Z ENDP ; BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::operator[]
_TEXT	ENDS
PUBLIC	?size@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@QBEIXZ ; BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::size
; Function compile flags: /Ogtpy
;	COMDAT ?size@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@QBEIXZ
_TEXT	SEGMENT
?size@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@QBEIXZ PROC ; BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::size, COMDAT
; _this$ = ecx

; 169  : 		return m_uiCurrSize;

	mov	eax, DWORD PTR [ecx+4]

; 170  : 	};

	ret	0
?size@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@QBEIXZ ENDP ; BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::size
_TEXT	ENDS
PUBLIC	?Destroy@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@IAEXPAU?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@I@Z ; BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::Destroy
; Function compile flags: /Ogtpy
;	COMDAT ?Destroy@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@IAEXPAU?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@I@Z
_TEXT	SEGMENT
_pVal$ = 8						; size = 4
_uiNumElements$ = 12					; size = 4
?Destroy@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@IAEXPAU?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@I@Z PROC ; BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::Destroy, COMDAT
; _this$ = ecx

; 221  : 		if( !bPODType){
; 222  : 			for(unsigned int i = 0; i < uiNumElements; ++i){
; 223  : 				pVal[i].~T();
; 224  : 			}
; 225  : 		}
; 226  : 	};

	ret	8
?Destroy@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@IAEXPAU?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@I@Z ENDP ; BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::Destroy
_TEXT	ENDS
PUBLIC	??0base_iterator_tail@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAE@PAV1@@Z ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator_tail::base_iterator_tail
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastlist.h
;	COMDAT ??0base_iterator_tail@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAE@PAV1@@Z
_TEXT	SEGMENT
_pFastList$ = 8						; size = 4
??0base_iterator_tail@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAE@PAV1@@Z PROC ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator_tail::base_iterator_tail, COMDAT
; _this$ = ecx

; 278  : 		base_iterator_tail( TYPE* pFastList ) : m_pFastList( pFastList ) {};

	mov	eax, ecx
	mov	ecx, DWORD PTR _pFastList$[esp-4]
	mov	DWORD PTR [eax], ecx
	ret	4
??0base_iterator_tail@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAE@PAV1@@Z ENDP ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator_tail::base_iterator_tail
_TEXT	ENDS
PUBLIC	?FreeAligned@FDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@SAXPAX@Z ; BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator::FreeAligned
EXTRN	?FireFreeAlignedNoTracking@@YAXPAX@Z:PROC	; FireFreeAlignedNoTracking
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ?FreeAligned@FDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@SAXPAX@Z
_TEXT	SEGMENT
_pBlock$ = 8						; size = 4
?FreeAligned@FDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@SAXPAX@Z PROC ; BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator::FreeAligned, COMDAT

; 90   : 			FFREEALIGNED( pBlock );

	jmp	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
?FreeAligned@FDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@SAXPAX@Z ENDP ; BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator::FreeAligned
_TEXT	ENDS
PUBLIC	??_C@_0GH@ECFAPJEJ@c?3?2users?2enormousapplepie?2docume@ ; `string'
PUBLIC	?AllocAligned@FDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@SAPAXIIII@Z ; BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator::AllocAligned
EXTRN	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z:PROC ; FireMallocAlignedNoTracking
;	COMDAT ??_C@_0GH@ECFAPJEJ@c?3?2users?2enormousapplepie?2docume@
CONST	SEGMENT
??_C@_0GH@ECFAPJEJ@c?3?2users?2enormousapplepie?2docume@ DB 'c:\users\eno'
	DB	'rmousapplepie\documents\github\lekmod\lekmod_dll\fireplace\in'
	DB	'clude\fireworks\FFastVector.h', 00H		; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ?AllocAligned@FDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@SAPAXIIII@Z
_TEXT	SEGMENT
_nBytes$ = 8						; size = 4
_nAlign$ = 12						; size = 4
_nAllocPool$ = 16					; size = 4
_nAllocSubID$ = 20					; size = 4
?AllocAligned@FDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@SAPAXIIII@Z PROC ; BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator::AllocAligned, COMDAT

; 85   : 			return FMALLOCALIGNED( nBytes, nAlign, nAllocPool, nAllocSubID );

	mov	DWORD PTR _nAllocSubID$[esp-4], 85	; 00000055H
	mov	DWORD PTR _nAllocPool$[esp-4], OFFSET ??_C@_0GH@ECFAPJEJ@c?3?2users?2enormousapplepie?2docume@
	jmp	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
?AllocAligned@FDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@SAPAXIIII@Z ENDP ; BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator::AllocAligned
_TEXT	ENDS
PUBLIC	??0?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@IAE@XZ ; BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>
; Function compile flags: /Ogtpy
;	COMDAT ??0?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@IAE@XZ
_TEXT	SEGMENT
??0?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@IAE@XZ PROC ; BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>, COMDAT
; _this$ = ecx

; 216  : 	BaseVector() : m_uiCurrSize(0), m_uiCurrMaxSize(0), m_pData(NULL) {};

	mov	eax, ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	ret	0
??0?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@IAE@XZ ENDP ; BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>
_TEXT	ENDS
PUBLIC	??$SAFE_DELETE_ARRAY@H@@YAXAAPAH@Z		; SAFE_DELETE_ARRAY<int>
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffiretypes.h
;	COMDAT ??$SAFE_DELETE_ARRAY@H@@YAXAAPAH@Z
_TEXT	SEGMENT
_pkInstanceArray$ = 8					; size = 4
??$SAFE_DELETE_ARRAY@H@@YAXAAPAH@Z PROC			; SAFE_DELETE_ARRAY<int>, COMDAT

; 311  : {

	push	esi

; 312  : 	delete[] pkInstanceArray;

	mov	esi, DWORD PTR _pkInstanceArray$[esp]
	mov	eax, DWORD PTR [esi]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 313  : 	pkInstanceArray = NULL;

	mov	DWORD PTR [esi], 0
	pop	esi

; 314  : };

	ret	0
??$SAFE_DELETE_ARRAY@H@@YAXAAPAH@Z ENDP			; SAFE_DELETE_ARRAY<int>
_TEXT	ENDS
PUBLIC	??$min@I@std@@YAABIABI0@Z			; std::min<unsigned int>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$min@I@std@@YAABIABI0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@I@std@@YAABIABI0@Z PROC				; std::min<unsigned int>, COMDAT

; 3399 : 	return (_DEBUG_LT(_Right, _Left) ? _Right : _Left);

	mov	eax, DWORD PTR __Right$[esp-4]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR __Left$[esp-4]
	cmp	edx, DWORD PTR [ecx]
	jb	SHORT $LN4@min
	mov	eax, ecx
$LN4@min:

; 3400 : 	}

	ret	0
??$min@I@std@@YAABIABI0@Z ENDP				; std::min<unsigned int>
_TEXT	ENDS
PUBLIC	?getArray@?$ArrayWrapper@H@@QAEPAHXZ		; ArrayWrapper<int>::getArray
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fdatastream.h
;	COMDAT ?getArray@?$ArrayWrapper@H@@QAEPAHXZ
_TEXT	SEGMENT
?getArray@?$ArrayWrapper@H@@QAEPAHXZ PROC		; ArrayWrapper<int>::getArray, COMDAT
; _this$ = ecx

; 382  : 		return m_values;

	mov	eax, DWORD PTR [ecx]

; 383  : 	}

	ret	0
?getArray@?$ArrayWrapper@H@@QAEPAHXZ ENDP		; ArrayWrapper<int>::getArray
_TEXT	ENDS
PUBLIC	?getArray@?$ArrayWrapper@H@@QBEPBHXZ		; ArrayWrapper<int>::getArray
; Function compile flags: /Ogtpy
;	COMDAT ?getArray@?$ArrayWrapper@H@@QBEPBHXZ
_TEXT	SEGMENT
?getArray@?$ArrayWrapper@H@@QBEPBHXZ PROC		; ArrayWrapper<int>::getArray, COMDAT
; _this$ = ecx

; 386  : 		return m_values;

	mov	eax, DWORD PTR [ecx]

; 387  : 	}

	ret	0
?getArray@?$ArrayWrapper@H@@QBEPBHXZ ENDP		; ArrayWrapper<int>::getArray
_TEXT	ENDS
PUBLIC	?getCount@?$ArrayWrapper@H@@QBEHXZ		; ArrayWrapper<int>::getCount
; Function compile flags: /Ogtpy
;	COMDAT ?getCount@?$ArrayWrapper@H@@QBEHXZ
_TEXT	SEGMENT
?getCount@?$ArrayWrapper@H@@QBEHXZ PROC			; ArrayWrapper<int>::getCount, COMDAT
; _this$ = ecx

; 391  : 		return m_count;

	mov	eax, DWORD PTR [ecx+4]

; 392  : 	}

	ret	0
?getCount@?$ArrayWrapper@H@@QBEHXZ ENDP			; ArrayWrapper<int>::getCount
_TEXT	ENDS
PUBLIC	?LIST_GetNext@NullMultiListNodePolicy@@QBEIXZ	; NullMultiListNodePolicy::LIST_GetNext
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastlist.h
;	COMDAT ?LIST_GetNext@NullMultiListNodePolicy@@QBEIXZ
_TEXT	SEGMENT
?LIST_GetNext@NullMultiListNodePolicy@@QBEIXZ PROC	; NullMultiListNodePolicy::LIST_GetNext, COMDAT
; _this$ = ecx

; 62   : 	unsigned int LIST_GetNext() const{ return node.uiNext; };

	mov	eax, DWORD PTR [ecx]
	ret	0
?LIST_GetNext@NullMultiListNodePolicy@@QBEIXZ ENDP	; NullMultiListNodePolicy::LIST_GetNext
_TEXT	ENDS
PUBLIC	?LIST_GetPrev@NullMultiListNodePolicy@@QBEIXZ	; NullMultiListNodePolicy::LIST_GetPrev
; Function compile flags: /Ogtpy
;	COMDAT ?LIST_GetPrev@NullMultiListNodePolicy@@QBEIXZ
_TEXT	SEGMENT
?LIST_GetPrev@NullMultiListNodePolicy@@QBEIXZ PROC	; NullMultiListNodePolicy::LIST_GetPrev, COMDAT
; _this$ = ecx

; 63   : 	unsigned int LIST_GetPrev() const{ return node.uiPrev; };

	mov	eax, DWORD PTR [ecx+4]
	and	eax, 2147483647				; 7fffffffH
	ret	0
?LIST_GetPrev@NullMultiListNodePolicy@@QBEIXZ ENDP	; NullMultiListNodePolicy::LIST_GetPrev
_TEXT	ENDS
PUBLIC	?LIST_SetNext@NullMultiListNodePolicy@@QAEXI@Z	; NullMultiListNodePolicy::LIST_SetNext
; Function compile flags: /Ogtpy
;	COMDAT ?LIST_SetNext@NullMultiListNodePolicy@@QAEXI@Z
_TEXT	SEGMENT
_uiNodeIndex$ = 8					; size = 4
?LIST_SetNext@NullMultiListNodePolicy@@QAEXI@Z PROC	; NullMultiListNodePolicy::LIST_SetNext, COMDAT
; _this$ = ecx

; 64   : 	void LIST_SetNext(unsigned int uiNodeIndex){ node.uiNext = uiNodeIndex; };

	mov	eax, DWORD PTR _uiNodeIndex$[esp-4]
	mov	DWORD PTR [ecx], eax
	ret	4
?LIST_SetNext@NullMultiListNodePolicy@@QAEXI@Z ENDP	; NullMultiListNodePolicy::LIST_SetNext
_TEXT	ENDS
PUBLIC	?LIST_SetPrev@NullMultiListNodePolicy@@QAEXI@Z	; NullMultiListNodePolicy::LIST_SetPrev
; Function compile flags: /Ogtpy
;	COMDAT ?LIST_SetPrev@NullMultiListNodePolicy@@QAEXI@Z
_TEXT	SEGMENT
_uiNodeIndex$ = 8					; size = 4
?LIST_SetPrev@NullMultiListNodePolicy@@QAEXI@Z PROC	; NullMultiListNodePolicy::LIST_SetPrev, COMDAT
; _this$ = ecx

; 65   : 	void LIST_SetPrev(unsigned int uiNodeIndex){ node.uiPrev = uiNodeIndex; };

	mov	eax, DWORD PTR [ecx+4]
	xor	eax, DWORD PTR _uiNodeIndex$[esp-4]
	and	eax, 2147483647				; 7fffffffH
	xor	DWORD PTR [ecx+4], eax
	ret	4
?LIST_SetPrev@NullMultiListNodePolicy@@QAEXI@Z ENDP	; NullMultiListNodePolicy::LIST_SetPrev
_TEXT	ENDS
PUBLIC	?LIST_GetDeleted@NullMultiListNodePolicy@@QBE_NXZ ; NullMultiListNodePolicy::LIST_GetDeleted
; Function compile flags: /Ogtpy
;	COMDAT ?LIST_GetDeleted@NullMultiListNodePolicy@@QBE_NXZ
_TEXT	SEGMENT
?LIST_GetDeleted@NullMultiListNodePolicy@@QBE_NXZ PROC	; NullMultiListNodePolicy::LIST_GetDeleted, COMDAT
; _this$ = ecx

; 66   : 	bool LIST_GetDeleted() const{ return !node.bValid; };

	mov	eax, DWORD PTR [ecx+4]
	shr	eax, 31					; 0000001fH
	not	eax
	and	eax, 1
	ret	0
?LIST_GetDeleted@NullMultiListNodePolicy@@QBE_NXZ ENDP	; NullMultiListNodePolicy::LIST_GetDeleted
_TEXT	ENDS
PUBLIC	?LIST_SetDeleted@NullMultiListNodePolicy@@QAEX_N@Z ; NullMultiListNodePolicy::LIST_SetDeleted
; Function compile flags: /Ogtpy
;	COMDAT ?LIST_SetDeleted@NullMultiListNodePolicy@@QAEX_N@Z
_TEXT	SEGMENT
_bDeleted$ = 8						; size = 1
?LIST_SetDeleted@NullMultiListNodePolicy@@QAEX_N@Z PROC	; NullMultiListNodePolicy::LIST_SetDeleted, COMDAT
; _this$ = ecx

; 67   : 	void LIST_SetDeleted(bool bDeleted){ node.bValid = !bDeleted; };

	mov	edx, DWORD PTR [ecx+4]
	xor	eax, eax
	cmp	BYTE PTR _bDeleted$[esp-4], al
	sete	al
	and	edx, 2147483647				; 7fffffffH
	shl	eax, 31					; 0000001fH
	or	eax, edx
	mov	DWORD PTR [ecx+4], eax
	ret	4
?LIST_SetDeleted@NullMultiListNodePolicy@@QAEX_N@Z ENDP	; NullMultiListNodePolicy::LIST_SetDeleted
_TEXT	ENDS
PUBLIC	?ALLOC_GetNext@NullMultiListNodePolicy@@QBEIXZ	; NullMultiListNodePolicy::ALLOC_GetNext
; Function compile flags: /Ogtpy
;	COMDAT ?ALLOC_GetNext@NullMultiListNodePolicy@@QBEIXZ
_TEXT	SEGMENT
?ALLOC_GetNext@NullMultiListNodePolicy@@QBEIXZ PROC	; NullMultiListNodePolicy::ALLOC_GetNext, COMDAT
; _this$ = ecx

; 70   : 	unsigned int ALLOC_GetNext() const{ return node.uiNext; };

	mov	eax, DWORD PTR [ecx]
	ret	0
?ALLOC_GetNext@NullMultiListNodePolicy@@QBEIXZ ENDP	; NullMultiListNodePolicy::ALLOC_GetNext
_TEXT	ENDS
PUBLIC	?ALLOC_SetNext@NullMultiListNodePolicy@@QAEXI@Z	; NullMultiListNodePolicy::ALLOC_SetNext
; Function compile flags: /Ogtpy
;	COMDAT ?ALLOC_SetNext@NullMultiListNodePolicy@@QAEXI@Z
_TEXT	SEGMENT
_uiNodeIndex$ = 8					; size = 4
?ALLOC_SetNext@NullMultiListNodePolicy@@QAEXI@Z PROC	; NullMultiListNodePolicy::ALLOC_SetNext, COMDAT
; _this$ = ecx

; 71   : 	void ALLOC_SetNext(unsigned int uiNodeIndex){ node.uiNext = uiNodeIndex; };

	mov	eax, DWORD PTR _uiNodeIndex$[esp-4]
	mov	DWORD PTR [ecx], eax
	ret	4
?ALLOC_SetNext@NullMultiListNodePolicy@@QAEXI@Z ENDP	; NullMultiListNodePolicy::ALLOC_SetNext
_TEXT	ENDS
PUBLIC	?ALLOC_GetDeleted@NullMultiListNodePolicy@@QBE_NXZ ; NullMultiListNodePolicy::ALLOC_GetDeleted
; Function compile flags: /Ogtpy
;	COMDAT ?ALLOC_GetDeleted@NullMultiListNodePolicy@@QBE_NXZ
_TEXT	SEGMENT
?ALLOC_GetDeleted@NullMultiListNodePolicy@@QBE_NXZ PROC	; NullMultiListNodePolicy::ALLOC_GetDeleted, COMDAT
; _this$ = ecx

; 72   : 	bool ALLOC_GetDeleted() const{ return LIST_GetDeleted(); };

	mov	eax, DWORD PTR [ecx+4]
	shr	eax, 31					; 0000001fH
	not	eax
	and	eax, 1
	ret	0
?ALLOC_GetDeleted@NullMultiListNodePolicy@@QBE_NXZ ENDP	; NullMultiListNodePolicy::ALLOC_GetDeleted
_TEXT	ENDS
PUBLIC	?ALLOC_SetDeleted@NullMultiListNodePolicy@@QAEX_N@Z ; NullMultiListNodePolicy::ALLOC_SetDeleted
; Function compile flags: /Ogtpy
;	COMDAT ?ALLOC_SetDeleted@NullMultiListNodePolicy@@QAEX_N@Z
_TEXT	SEGMENT
_bDeleted$ = 8						; size = 1
?ALLOC_SetDeleted@NullMultiListNodePolicy@@QAEX_N@Z PROC ; NullMultiListNodePolicy::ALLOC_SetDeleted, COMDAT
; _this$ = ecx

; 73   : 	void ALLOC_SetDeleted(bool bDeleted){ LIST_SetDeleted( bDeleted ); };

	mov	edx, DWORD PTR [ecx+4]
	xor	eax, eax
	cmp	BYTE PTR _bDeleted$[esp-4], al
	sete	al
	and	edx, 2147483647				; 7fffffffH
	shl	eax, 31					; 0000001fH
	or	eax, edx
	mov	DWORD PTR [ecx+4], eax
	ret	4
?ALLOC_SetDeleted@NullMultiListNodePolicy@@QAEX_N@Z ENDP ; NullMultiListNodePolicy::ALLOC_SetDeleted
_TEXT	ENDS
PUBLIC	??0CvString@@QAE@XZ				; CvString::CvString
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
;	COMDAT ??0CvString@@QAE@XZ
_TEXT	SEGMENT
??0CvString@@QAE@XZ PROC				; CvString::CvString, COMDAT
; _this$ = ecx

; 23   : 	CvString() {}

	push	esi
	mov	esi, ecx
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, esi
	pop	esi
	ret	0
??0CvString@@QAE@XZ ENDP				; CvString::CvString
_TEXT	ENDS
PUBLIC	??1CvString@@QAE@XZ				; CvString::~CvString
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??1CvString@@QAE@XZ
_TEXT	SEGMENT
??1CvString@@QAE@XZ PROC				; CvString::~CvString, COMDAT
; _this$ = ecx

; 28   : 	~CvString() {}

	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
??1CvString@@QAE@XZ ENDP				; CvString::~CvString
_TEXT	ENDS
PUBLIC	??BCvString@@QBEPBDXZ				; CvString::operator char const *
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??BCvString@@QBEPBDXZ
_TEXT	SEGMENT
??BCvString@@QBEPBDXZ PROC				; CvString::operator char const *, COMDAT
; _this$ = ecx

; 31   : 	operator const char*() const 	{ return c_str(); }												

	jmp	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
??BCvString@@QBEPBDXZ ENDP				; CvString::operator char const *
_TEXT	ENDS
PUBLIC	??4CvString@@QAEAAV0@PBD@Z			; CvString::operator=
EXTRN	__imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ:PROC
EXTRN	__imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??4CvString@@QAEAAV0@PBD@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
??4CvString@@QAEAAV0@PBD@Z PROC				; CvString::operator=, COMDAT
; _this$ = ecx

; 37   : 	CvString& operator=( const char* s) { if (s) assign(s); else clear();	return *this; }	

	mov	eax, DWORD PTR _s$[esp-4]
	push	esi
	mov	esi, ecx
	test	eax, eax
	je	SHORT $LN2@operator
	push	eax
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	mov	eax, esi
	pop	esi
	ret	4
$LN2@operator:
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	mov	eax, esi
	pop	esi
	ret	4
??4CvString@@QAEAAV0@PBD@Z ENDP				; CvString::operator=
_TEXT	ENDS
PUBLIC	??4CvString@@QAEAAV0@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CvString::operator=
; Function compile flags: /Ogtpy
;	COMDAT ??4CvString@@QAEAAV0@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
??4CvString@@QAEAAV0@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; CvString::operator=, COMDAT
; _this$ = ecx

; 38   : 	CvString& operator=( const std::string& s) { assign(s.c_str());	return *this; }	

	push	esi
	mov	esi, ecx
	mov	ecx, DWORD PTR _s$[esp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	ecx, esi
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	mov	eax, esi
	pop	esi
	ret	4
??4CvString@@QAEAAV0@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CvString::operator=
_TEXT	ENDS
PUBLIC	?GetCString@CvString@@QBEPBDXZ			; CvString::GetCString
; Function compile flags: /Ogtpy
;	COMDAT ?GetCString@CvString@@QBEPBDXZ
_TEXT	SEGMENT
?GetCString@CvString@@QBEPBDXZ PROC			; CvString::GetCString, COMDAT
; _this$ = ecx

; 42   : 	const char* GetCString() const 	{ return c_str(); }

	jmp	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
?GetCString@CvString@@QBEPBDXZ ENDP			; CvString::GetCString
_TEXT	ENDS
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	?formatv@CvString@@SA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBDPAD@Z ; CvString::formatv
EXTRN	__imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z:PROC
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	__imp___vsnprintf:PROC
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ?formatv@CvString@@SA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBDPAD@Z
_TEXT	SEGMENT
_buf$ = -2048						; size = 2048
_out$ = 8						; size = 4
_fmt$ = 12						; size = 4
_args$ = 16						; size = 4
?formatv@CvString@@SA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBDPAD@Z PROC ; CvString::formatv, COMDAT

; 191  : {

	sub	esp, 2048				; 00000800H
	push	ebx
	push	ebp

; 192  : 	char buf[2048];
; 193  : 	char * pbuf = buf;

	mov	ebp, DWORD PTR _args$[esp+2052]
	push	esi
	push	edi
	lea	edi, DWORD PTR _buf$[esp+2064]
	mov	esi, 2047				; 000007ffH
	npad	6
$LL10@formatv:

; 194  : 	int len = 0;
; 195  : 	int attempts = 0;
; 196  : 	bool success = false;
; 197  : 	const int kMaxAttempts = 40;
; 198  : 
; 199  : 	do
; 200  : 	{
; 201  : 		int maxlen = 2047+2048*attempts;
; 202  : 		len = _vsnprintf(pbuf,maxlen,fmt,args);

	mov	eax, DWORD PTR _fmt$[esp+2060]
	push	ebp
	push	eax
	push	esi
	push	edi
	mov	ebx, esi
	call	DWORD PTR __imp___vsnprintf
	add	esp, 16					; 00000010H

; 203  : 		attempts++;

	add	esi, 2048				; 00000800H

; 204  : 		success = (len>=0 && len<=maxlen);

	test	eax, eax
	jl	SHORT $LN13@formatv
	cmp	eax, ebx
	jle	SHORT $LN18@formatv
$LN13@formatv:

; 205  : 		if (!success)
; 206  : 		{
; 207  : 			if (pbuf!=buf)

	lea	ecx, DWORD PTR _buf$[esp+2064]
	xor	bl, bl
	cmp	edi, ecx
	je	SHORT $LN6@formatv

; 208  : 				delete [] pbuf;

	push	edi
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN6@formatv:

; 209  : 			pbuf = new char[2048+2048*attempts];

	lea	edx, DWORD PTR [esi+1]
	push	edx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4

; 210  : 		}
; 211  : 	}
; 212  : 	while (!success && attempts<kMaxAttempts);

	cmp	esi, 83967				; 000147ffH
	mov	edi, eax
	jl	SHORT $LL10@formatv

; 222  : 		out = "";

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN21@formatv:
	mov	ecx, DWORD PTR _out$[esp+2064]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 223  : 
; 224  : 	if (pbuf!=buf)

	lea	eax, DWORD PTR _buf$[esp+2064]
	cmp	edi, eax
	je	SHORT $LN20@formatv

; 225  : 		delete [] pbuf;

	push	edi
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN20@formatv:
	pop	edi
	pop	esi
	pop	ebp

; 226  : 
; 227  : 	return success;

	mov	al, bl
	pop	ebx

; 228  : }

	add	esp, 2048				; 00000800H
	ret	0
$LN18@formatv:

; 204  : 		success = (len>=0 && len<=maxlen);

	mov	bl, 1

; 213  : 
; 214  : 	if ( attempts==kMaxAttempts )
; 215  : 	{
; 216  : 		// dxPrintNL( "CvString::formatv - Max reallocs occurred while formatting string. Result is likely truncated!", 0 );
; 217  : 	}
; 218  : 
; 219  : 	if (success)
; 220  : 		out = pbuf;

	push	edi

; 221  : 	else

	jmp	SHORT $LN21@formatv
?formatv@CvString@@SA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBDPAD@Z ENDP ; CvString::formatv
_TEXT	ENDS
PUBLIC	?Format@CvString@@QAAXPBDZZ			; CvString::Format
EXTRN	___CxxFrameHandler3:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Format@CvString@@QAAXPBDZZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Format@CvString@@QAAXPBDZZ$0
__ehfuncinfo$?Format@CvString@@QAAXPBDZZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Format@CvString@@QAAXPBDZZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?Format@CvString@@QAAXPBDZZ
_TEXT	SEGMENT
_result$ = -40						; size = 28
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_lpszFormat$ = 12					; size = 4
?Format@CvString@@QAAXPBDZZ PROC			; CvString::Format, COMDAT

; 269  : {

	push	-1
	push	__ehhandler$?Format@CvString@@QAAXPBDZZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 28					; 0000001cH

; 270  : 	std::string result;

	lea	ecx, DWORD PTR _result$[esp+40]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 271  : 	va_list args;
; 272  : 	va_start(args,lpszFormat);
; 273  : 	formatv(result,lpszFormat,args);

	mov	ecx, DWORD PTR _lpszFormat$[esp+36]
	lea	eax, DWORD PTR _lpszFormat$[esp+40]
	push	eax
	push	ecx
	lea	edx, DWORD PTR _result$[esp+48]
	push	edx
	mov	DWORD PTR __$EHRec$[esp+60], 0
	call	?formatv@CvString@@SA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBDPAD@Z ; CvString::formatv
	add	esp, 12					; 0000000cH

; 274  : 	va_end(args);
; 275  : 	*this = result;

	lea	ecx, DWORD PTR _result$[esp+40]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	ecx, DWORD PTR _this$[esp+36]
	push	eax
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z

; 276  : }

	lea	ecx, DWORD PTR _result$[esp+40]
	mov	DWORD PTR __$EHRec$[esp+48], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[esp+40]
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Format@CvString@@QAAXPBDZZ$0:
	lea	ecx, DWORD PTR _result$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?Format@CvString@@QAAXPBDZZ:
	mov	eax, OFFSET __ehfuncinfo$?Format@CvString@@QAAXPBDZZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Format@CvString@@QAAXPBDZZ ENDP			; CvString::Format
PUBLIC	?getMap@CvGlobals@@QAEAAVCvMap@@XZ		; CvGlobals::getMap
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
;	COMDAT ?getMap@CvGlobals@@QAEAAVCvMap@@XZ
_TEXT	SEGMENT
?getMap@CvGlobals@@QAEAAVCvMap@@XZ PROC			; CvGlobals::getMap, COMDAT
; _this$ = ecx

; 175  : 		return *m_map;    // inlined for perf reasons, do not use outside of dll

	mov	eax, DWORD PTR [ecx+52]

; 176  : 	}

	ret	0
?getMap@CvGlobals@@QAEAAVCvMap@@XZ ENDP			; CvGlobals::getMap
_TEXT	ENDS
PUBLIC	?getGame@CvGlobals@@QAEAAVCvGame@@XZ		; CvGlobals::getGame
; Function compile flags: /Ogtpy
;	COMDAT ?getGame@CvGlobals@@QAEAAVCvGame@@XZ
_TEXT	SEGMENT
?getGame@CvGlobals@@QAEAAVCvGame@@XZ PROC		; CvGlobals::getGame, COMDAT
; _this$ = ecx

; 183  : 		return *m_game;    // inlined for perf reasons, do not use outside of dll

	mov	eax, DWORD PTR [ecx+48]

; 184  : 	}

	ret	0
?getGame@CvGlobals@@QAEAAVCvGame@@XZ ENDP		; CvGlobals::getGame
_TEXT	ENDS
PUBLIC	?getNumFlavorTypes@CvGlobals@@QAEHXZ		; CvGlobals::getNumFlavorTypes
; Function compile flags: /Ogtpy
;	COMDAT ?getNumFlavorTypes@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getNumFlavorTypes@CvGlobals@@QAEHXZ PROC		; CvGlobals::getNumFlavorTypes, COMDAT
; _this$ = ecx

; 804  : 		return m_iNumFlavorTypes;

	mov	eax, DWORD PTR [ecx+1764]

; 805  : 	}

	ret	0
?getNumFlavorTypes@CvGlobals@@QAEHXZ ENDP		; CvGlobals::getNumFlavorTypes
_TEXT	ENDS
PUBLIC	?getFlavorTypes@CvGlobals@@QAEAAVCvString@@W4FlavorTypes@@@Z ; CvGlobals::getFlavorTypes
; Function compile flags: /Ogtpy
;	COMDAT ?getFlavorTypes@CvGlobals@@QAEAAVCvString@@W4FlavorTypes@@@Z
_TEXT	SEGMENT
_e$ = 8							; size = 4
?getFlavorTypes@CvGlobals@@QAEAAVCvString@@W4FlavorTypes@@@Z PROC ; CvGlobals::getFlavorTypes, COMDAT
; _this$ = ecx

; 812  : 		CvAssert(e > -1); /*CvAssert(e < GC.getNumFlavorTypes())*/;
; 813  : 		return m_paszFlavorTypes[e];

	mov	eax, DWORD PTR _e$[esp-4]
	lea	edx, DWORD PTR [eax*8]
	sub	edx, eax
	mov	eax, DWORD PTR [ecx+1760]
	lea	eax, DWORD PTR [eax+edx*4]

; 814  : 	}

	ret	4
?getFlavorTypes@CvGlobals@@QAEAAVCvString@@W4FlavorTypes@@@Z ENDP ; CvGlobals::getFlavorTypes
_TEXT	ENDS
PUBLIC	?getDEFAULT_FLAVOR_VALUE@CvGlobals@@QAEHXZ	; CvGlobals::getDEFAULT_FLAVOR_VALUE
; Function compile flags: /Ogtpy
;	COMDAT ?getDEFAULT_FLAVOR_VALUE@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getDEFAULT_FLAVOR_VALUE@CvGlobals@@QAEHXZ PROC		; CvGlobals::getDEFAULT_FLAVOR_VALUE, COMDAT
; _this$ = ecx

; 929  : 		return m_iDEFAULT_FLAVOR_VALUE;

	mov	eax, DWORD PTR [ecx+1864]

; 930  : 	}

	ret	0
?getDEFAULT_FLAVOR_VALUE@CvGlobals@@QAEHXZ ENDP		; CvGlobals::getDEFAULT_FLAVOR_VALUE
_TEXT	ENDS
PUBLIC	?getPERSONALITY_FLAVOR_MAX_VALUE@CvGlobals@@QAEHXZ ; CvGlobals::getPERSONALITY_FLAVOR_MAX_VALUE
; Function compile flags: /Ogtpy
;	COMDAT ?getPERSONALITY_FLAVOR_MAX_VALUE@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getPERSONALITY_FLAVOR_MAX_VALUE@CvGlobals@@QAEHXZ PROC	; CvGlobals::getPERSONALITY_FLAVOR_MAX_VALUE, COMDAT
; _this$ = ecx

; 933  : 		return m_iPERSONALITY_FLAVOR_MAX_VALUE;

	mov	eax, DWORD PTR [ecx+1868]

; 934  : 	}

	ret	0
?getPERSONALITY_FLAVOR_MAX_VALUE@CvGlobals@@QAEHXZ ENDP	; CvGlobals::getPERSONALITY_FLAVOR_MAX_VALUE
_TEXT	ENDS
PUBLIC	?getPERSONALITY_FLAVOR_MIN_VALUE@CvGlobals@@QAEHXZ ; CvGlobals::getPERSONALITY_FLAVOR_MIN_VALUE
; Function compile flags: /Ogtpy
;	COMDAT ?getPERSONALITY_FLAVOR_MIN_VALUE@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getPERSONALITY_FLAVOR_MIN_VALUE@CvGlobals@@QAEHXZ PROC	; CvGlobals::getPERSONALITY_FLAVOR_MIN_VALUE, COMDAT
; _this$ = ecx

; 937  : 		return m_iPERSONALITY_FLAVOR_MIN_VALUE;

	mov	eax, DWORD PTR [ecx+1872]

; 938  : 	}

	ret	0
?getPERSONALITY_FLAVOR_MIN_VALUE@CvGlobals@@QAEHXZ ENDP	; CvGlobals::getPERSONALITY_FLAVOR_MIN_VALUE
_TEXT	ENDS
PUBLIC	?getFLAVOR_MIN_VALUE@CvGlobals@@QAEHXZ		; CvGlobals::getFLAVOR_MIN_VALUE
; Function compile flags: /Ogtpy
;	COMDAT ?getFLAVOR_MIN_VALUE@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getFLAVOR_MIN_VALUE@CvGlobals@@QAEHXZ PROC		; CvGlobals::getFLAVOR_MIN_VALUE, COMDAT
; _this$ = ecx

; 941  : 		return m_iFLAVOR_MIN_VALUE;

	mov	eax, DWORD PTR [ecx+1876]

; 942  : 	}

	ret	0
?getFLAVOR_MIN_VALUE@CvGlobals@@QAEHXZ ENDP		; CvGlobals::getFLAVOR_MIN_VALUE
_TEXT	ENDS
PUBLIC	?getFLAVOR_MAX_VALUE@CvGlobals@@QAEHXZ		; CvGlobals::getFLAVOR_MAX_VALUE
; Function compile flags: /Ogtpy
;	COMDAT ?getFLAVOR_MAX_VALUE@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getFLAVOR_MAX_VALUE@CvGlobals@@QAEHXZ PROC		; CvGlobals::getFLAVOR_MAX_VALUE, COMDAT
; _this$ = ecx

; 945  : 		return m_iFLAVOR_MAX_VALUE;

	mov	eax, DWORD PTR [ecx+1880]

; 946  : 	}

	ret	0
?getFLAVOR_MAX_VALUE@CvGlobals@@QAEHXZ ENDP		; CvGlobals::getFLAVOR_MAX_VALUE
_TEXT	ENDS
PUBLIC	?getFLAVOR_RANDOMIZATION_RANGE@CvGlobals@@QAEHXZ ; CvGlobals::getFLAVOR_RANDOMIZATION_RANGE
; Function compile flags: /Ogtpy
;	COMDAT ?getFLAVOR_RANDOMIZATION_RANGE@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getFLAVOR_RANDOMIZATION_RANGE@CvGlobals@@QAEHXZ PROC	; CvGlobals::getFLAVOR_RANDOMIZATION_RANGE, COMDAT
; _this$ = ecx

; 949  : 		return m_iFLAVOR_RANDOMIZATION_RANGE;

	mov	eax, DWORD PTR [ecx+1884]

; 950  : 	}

	ret	0
?getFLAVOR_RANDOMIZATION_RANGE@CvGlobals@@QAEHXZ ENDP	; CvGlobals::getFLAVOR_RANDOMIZATION_RANGE
_TEXT	ENDS
PUBLIC	?getFLAVOR_EXPANDGROW_COEFFICIENT@CvGlobals@@QAEHXZ ; CvGlobals::getFLAVOR_EXPANDGROW_COEFFICIENT
; Function compile flags: /Ogtpy
;	COMDAT ?getFLAVOR_EXPANDGROW_COEFFICIENT@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getFLAVOR_EXPANDGROW_COEFFICIENT@CvGlobals@@QAEHXZ PROC ; CvGlobals::getFLAVOR_EXPANDGROW_COEFFICIENT, COMDAT
; _this$ = ecx

; 953  : 		return m_iFLAVOR_EXPANDGROW_COEFFICIENT;

	mov	eax, DWORD PTR [ecx+1888]

; 954  : 	}

	ret	0
?getFLAVOR_EXPANDGROW_COEFFICIENT@CvGlobals@@QAEHXZ ENDP ; CvGlobals::getFLAVOR_EXPANDGROW_COEFFICIENT
_TEXT	ENDS
PUBLIC	?getFLAVOR_STANDARD_LOG10_TILES_PER_PLAYER@CvGlobals@@QAEMXZ ; CvGlobals::getFLAVOR_STANDARD_LOG10_TILES_PER_PLAYER
EXTRN	__fltused:DWORD
; Function compile flags: /Ogtpy
;	COMDAT ?getFLAVOR_STANDARD_LOG10_TILES_PER_PLAYER@CvGlobals@@QAEMXZ
_TEXT	SEGMENT
?getFLAVOR_STANDARD_LOG10_TILES_PER_PLAYER@CvGlobals@@QAEMXZ PROC ; CvGlobals::getFLAVOR_STANDARD_LOG10_TILES_PER_PLAYER, COMDAT
; _this$ = ecx

; 7104 : 		return m_fFLAVOR_STANDARD_LOG10_TILES_PER_PLAYER;

	fld	DWORD PTR [ecx+8092]

; 7105 : 	}

	ret	0
?getFLAVOR_STANDARD_LOG10_TILES_PER_PLAYER@CvGlobals@@QAEMXZ ENDP ; CvGlobals::getFLAVOR_STANDARD_LOG10_TILES_PER_PLAYER
_TEXT	ENDS
PUBLIC	??$?6H@FDataStream@@QAEAAV0@ABH@Z		; FDataStream::operator<<<int>
EXTRN	?Write@FDataStream@@IAEXABH@Z:PROC		; FDataStream::Write
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fdatastream.h
;	COMDAT ??$?6H@FDataStream@@QAEAAV0@ABH@Z
_TEXT	SEGMENT
_kData$ = 8						; size = 4
??$?6H@FDataStream@@QAEAAV0@ABH@Z PROC			; FDataStream::operator<<<int>, COMDAT
; _this$ = ecx

; 246  : 	// If the compiler produces an error here complaining about 
; 247  : 	// YouMustImplementASerializeOperatorForThisTypeError then
; 248  : 	// it could not find a specialization for the type supplied
; 249  : 	// in scope. If a specialization exists, be sure to include
; 250  : 	// the header (FStlContainerSerialization.h, for example), 
; 251  : 	// if not, implement :
; 252  : 	// FDataStream & operator<<(FDataStream &, YourCustomType &)
; 253  : 	Write( kData );

	mov	eax, DWORD PTR _kData$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 254  : 	return ( *this );

	mov	eax, esi
	pop	esi

; 255  : }

	ret	4
??$?6H@FDataStream@@QAEAAV0@ABH@Z ENDP			; FDataStream::operator<<<int>
_TEXT	ENDS
PUBLIC	??$?5H@FDataStream@@QAEAAV0@AAH@Z		; FDataStream::operator>><int>
EXTRN	?Read@FDataStream@@IAEXAAH@Z:PROC		; FDataStream::Read
; Function compile flags: /Ogtpy
;	COMDAT ??$?5H@FDataStream@@QAEAAV0@AAH@Z
_TEXT	SEGMENT
_kData$ = 8						; size = 4
??$?5H@FDataStream@@QAEAAV0@AAH@Z PROC			; FDataStream::operator>><int>, COMDAT
; _this$ = ecx

; 260  : 	// If the compiler produces an error here complaining about 
; 261  : 	// YouMustImplementASerializeOperatorForThisTypeError then
; 262  : 	// it could not find a specialization for the type supplied
; 263  : 	// in scope. If a specialization exists, be sure to include
; 264  : 	// the header (FStlContainerSerialization.h, for example), 
; 265  : 	// if not, implement :
; 266  : 	// FDataStream & operator>>(FDataStream &, YourCustomType &)
; 267  : 	Read( kData );

	mov	eax, DWORD PTR _kData$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 268  : 	return ( *this );

	mov	eax, esi
	pop	esi

; 269  : }

	ret	4
??$?5H@FDataStream@@QAEAAV0@AAH@Z ENDP			; FDataStream::operator>><int>
_TEXT	ENDS
PUBLIC	??B?$FAutoVariable@W4PlayerTypes@@VCvPlayer@@@@QBEABW4PlayerTypes@@XZ ; FAutoVariable<enum PlayerTypes,CvPlayer>::operator enum PlayerTypes const &
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fautovariable.h
;	COMDAT ??B?$FAutoVariable@W4PlayerTypes@@VCvPlayer@@@@QBEABW4PlayerTypes@@XZ
_TEXT	SEGMENT
??B?$FAutoVariable@W4PlayerTypes@@VCvPlayer@@@@QBEABW4PlayerTypes@@XZ PROC ; FAutoVariable<enum PlayerTypes,CvPlayer>::operator enum PlayerTypes const &, COMDAT
; _this$ = ecx

; 194  : 	return m_value;

	lea	eax, DWORD PTR [ecx+4]

; 195  : }

	ret	0
??B?$FAutoVariable@W4PlayerTypes@@VCvPlayer@@@@QBEABW4PlayerTypes@@XZ ENDP ; FAutoVariable<enum PlayerTypes,CvPlayer>::operator enum PlayerTypes const &
_TEXT	ENDS
PUBLIC	??$?5I@FDataStream@@QAEAAV0@AAI@Z		; FDataStream::operator>><unsigned int>
EXTRN	?Read@FDataStream@@IAEXAAI@Z:PROC		; FDataStream::Read
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fdatastream.h
;	COMDAT ??$?5I@FDataStream@@QAEAAV0@AAI@Z
_TEXT	SEGMENT
_kData$ = 8						; size = 4
??$?5I@FDataStream@@QAEAAV0@AAI@Z PROC			; FDataStream::operator>><unsigned int>, COMDAT
; _this$ = ecx

; 260  : 	// If the compiler produces an error here complaining about 
; 261  : 	// YouMustImplementASerializeOperatorForThisTypeError then
; 262  : 	// it could not find a specialization for the type supplied
; 263  : 	// in scope. If a specialization exists, be sure to include
; 264  : 	// the header (FStlContainerSerialization.h, for example), 
; 265  : 	// if not, implement :
; 266  : 	// FDataStream & operator>>(FDataStream &, YourCustomType &)
; 267  : 	Read( kData );

	mov	eax, DWORD PTR _kData$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	?Read@FDataStream@@IAEXAAI@Z		; FDataStream::Read

; 268  : 	return ( *this );

	mov	eax, esi
	pop	esi

; 269  : }

	ret	4
??$?5I@FDataStream@@QAEAAV0@AAI@Z ENDP			; FDataStream::operator>><unsigned int>
_TEXT	ENDS
PUBLIC	??$?6I@FDataStream@@QAEAAV0@ABI@Z		; FDataStream::operator<<<unsigned int>
EXTRN	?Write@FDataStream@@IAEXABI@Z:PROC		; FDataStream::Write
; Function compile flags: /Ogtpy
;	COMDAT ??$?6I@FDataStream@@QAEAAV0@ABI@Z
_TEXT	SEGMENT
_kData$ = 8						; size = 4
??$?6I@FDataStream@@QAEAAV0@ABI@Z PROC			; FDataStream::operator<<<unsigned int>, COMDAT
; _this$ = ecx

; 246  : 	// If the compiler produces an error here complaining about 
; 247  : 	// YouMustImplementASerializeOperatorForThisTypeError then
; 248  : 	// it could not find a specialization for the type supplied
; 249  : 	// in scope. If a specialization exists, be sure to include
; 250  : 	// the header (FStlContainerSerialization.h, for example), 
; 251  : 	// if not, implement :
; 252  : 	// FDataStream & operator<<(FDataStream &, YourCustomType &)
; 253  : 	Write( kData );

	mov	eax, DWORD PTR _kData$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write

; 254  : 	return ( *this );

	mov	eax, esi
	pop	esi

; 255  : }

	ret	4
??$?6I@FDataStream@@QAEAAV0@ABI@Z ENDP			; FDataStream::operator<<<unsigned int>
_TEXT	ENDS
EXTRN	?gGlobals@@3VCvGlobals@@A:BYTE			; gGlobals
EXTRN	_memset:PROC
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvflavormanager.cpp
;	COMDAT ?Init@CvFlavorRecipient@@UAEXXZ
_TEXT	SEGMENT
?Init@CvFlavorRecipient@@UAEXXZ PROC			; CvFlavorRecipient::Init, COMDAT
; _this$ = ecx

; 33   : {

	push	esi

; 34   : 	int iNumFlavors = GC.getNumFlavorTypes();

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+1764
	push	edi
	mov	edi, ecx

; 35   : 	m_piLatestFlavorValues = FNEW(int[iNumFlavors], c_eCiv5GameplayDLL, 0);

	xor	ecx, ecx
	mov	eax, esi
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]

; 36   : 	memset(m_piLatestFlavorValues, 0, iNumFlavors * sizeof(int));

	lea	ecx, DWORD PTR [esi*4]
	push	ecx
	push	0
	push	eax
	mov	DWORD PTR [edi+8], eax
	call	_memset
	add	esp, 16					; 00000010H
	pop	edi
	pop	esi

; 37   : }

	ret	0
?Init@CvFlavorRecipient@@UAEXXZ ENDP			; CvFlavorRecipient::Init
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Uninit@CvFlavorRecipient@@UAEXXZ
_TEXT	SEGMENT
?Uninit@CvFlavorRecipient@@UAEXXZ PROC			; CvFlavorRecipient::Uninit, COMDAT
; _this$ = ecx

; 41   : {

	push	esi
	mov	esi, ecx

; 42   : 	SAFE_DELETE_ARRAY(m_piLatestFlavorValues);

	mov	eax, DWORD PTR [esi+8]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
	mov	DWORD PTR [esi+8], 0
	pop	esi

; 43   : }

	ret	0
?Uninit@CvFlavorRecipient@@UAEXXZ ENDP			; CvFlavorRecipient::Uninit
_TEXT	ENDS
PUBLIC	?SetFlavors@CvFlavorRecipient@@QAEXPAH@Z	; CvFlavorRecipient::SetFlavors
; Function compile flags: /Ogtpy
;	COMDAT ?SetFlavors@CvFlavorRecipient@@QAEXPAH@Z
_TEXT	SEGMENT
_piUpdatedFlavorValues$ = 8				; size = 4
?SetFlavors@CvFlavorRecipient@@QAEXPAH@Z PROC		; CvFlavorRecipient::SetFlavors, COMDAT
; _this$ = ecx

; 53   : {

	push	esi

; 54   : 	CvAssertMsg(piUpdatedFlavorValues != NULL, "Invalid array of flavor deltas passed to flavor recipient");
; 55   : 
; 56   : 	if(!piUpdatedFlavorValues) return;

	mov	esi, DWORD PTR _piUpdatedFlavorValues$[esp]
	test	esi, esi
	je	SHORT $LN6@SetFlavors

; 57   : 
; 58   : 	int iNumFlavors = GC.getNumFlavorTypes();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+1764

; 59   : 	for(int iI = 0; iI < iNumFlavors; iI++)

	xor	eax, eax
	test	edx, edx
	jle	SHORT $LN2@SetFlavors
	push	ebx
	push	edi
$LL4@SetFlavors:

; 60   : 	{
; 61   : 		bool bLogFlavor = false;
; 62   : 
; 63   : 		if(m_piLatestFlavorValues[iI] != piUpdatedFlavorValues[iI])
; 64   : 		{
; 65   : 			bLogFlavor = true;
; 66   : 		}
; 67   : 
; 68   : 		m_piLatestFlavorValues[iI] = piUpdatedFlavorValues[iI];

	mov	ebx, DWORD PTR [esi+eax*4]
	mov	edi, DWORD PTR [ecx+8]
	mov	DWORD PTR [edi+eax*4], ebx
	inc	eax
	cmp	eax, edx
	jl	SHORT $LL4@SetFlavors
	pop	edi
	pop	ebx
$LN2@SetFlavors:

; 69   : 
; 70   : //		LogFlavors((FlavorTypes) iI);
; 71   : 	}
; 72   : 
; 73   : 	FlavorUpdate();

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+8]
	call	edx
$LN6@SetFlavors:
	pop	esi

; 74   : }

	ret	4
?SetFlavors@CvFlavorRecipient@@QAEXPAH@Z ENDP		; CvFlavorRecipient::SetFlavors
_TEXT	ENDS
PUBLIC	?ChangeFlavors@CvFlavorRecipient@@QAEXPAH_N@Z	; CvFlavorRecipient::ChangeFlavors
; Function compile flags: /Ogtpy
;	COMDAT ?ChangeFlavors@CvFlavorRecipient@@QAEXPAH_N@Z
_TEXT	SEGMENT
_iNumFlavors$ = -4					; size = 4
_piDeltaFlavorValues$ = 8				; size = 4
_bDontLog$ = 12						; size = 1
?ChangeFlavors@CvFlavorRecipient@@QAEXPAH_N@Z PROC	; CvFlavorRecipient::ChangeFlavors, COMDAT
; _this$ = ecx

; 78   : {

	push	ecx

; 79   : 
; 80   : 	CvAssertMsg(piDeltaFlavorValues != NULL, "Invalid array of flavor deltas passed to flavor recipient");
; 81   : 
; 82   : 	if(!piDeltaFlavorValues) return;

	cmp	DWORD PTR _piDeltaFlavorValues$[esp], 0
	push	edi
	mov	edi, ecx
	je	SHORT $LN10@ChangeFlav

; 83   : 
; 84   : 	int iFlavorMinValue = /*-1000*/ GC.getFLAVOR_MIN_VALUE();
; 85   : 	int iFlavorMaxValue = /*1000*/ GC.getFLAVOR_MAX_VALUE();
; 86   : 
; 87   : 	int iNumFlavors = GC.getNumFlavorTypes();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+1764
	push	ebx
	mov	ebx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+1880
	push	ebp
	mov	ebp, DWORD PTR ?gGlobals@@3VCvGlobals@@A+1876
	push	esi

; 88   : 	for(int iI = 0; iI < iNumFlavors; iI++)

	xor	esi, esi
	mov	DWORD PTR _iNumFlavors$[esp+20], edx
	test	edx, edx
	jle	SHORT $LN6@ChangeFlav
	npad	6
$LL21@ChangeFlav:

; 89   : 	{
; 90   : 		if(piDeltaFlavorValues[iI] != 0)

	mov	eax, DWORD PTR _piDeltaFlavorValues$[esp+16]
	mov	ecx, DWORD PTR [eax+esi*4]
	test	ecx, ecx
	je	SHORT $LN7@ChangeFlav
	mov	eax, DWORD PTR [edi+8]

; 91   : 		{
; 92   : 			m_piLatestFlavorValues[iI] += piDeltaFlavorValues[iI];

	add	DWORD PTR [eax+esi*4], ecx

; 93   : 
; 94   : 			// Make sure within range
; 95   : 			if(m_piLatestFlavorValues[iI] < iFlavorMinValue)

	mov	ecx, DWORD PTR [edi+8]
	cmp	DWORD PTR [ecx+esi*4], ebp
	lea	eax, DWORD PTR [eax+esi*4]
	jge	SHORT $LN4@ChangeFlav

; 96   : 			{
; 97   : 				m_piLatestFlavorValues[iI] = iFlavorMinValue;

	mov	eax, ecx
	mov	DWORD PTR [eax+esi*4], ebp
	jmp	SHORT $LN2@ChangeFlav
$LN4@ChangeFlav:

; 98   : 			}
; 99   : 			else if(m_piLatestFlavorValues[iI] > iFlavorMaxValue)

	cmp	DWORD PTR [ecx+esi*4], ebx
	lea	eax, DWORD PTR [ecx+esi*4]
	jle	SHORT $LN2@ChangeFlav

; 100  : 			{
; 101  : 				m_piLatestFlavorValues[iI] = iFlavorMaxValue;

	mov	DWORD PTR [eax], ebx
$LN2@ChangeFlav:

; 102  : 			}
; 103  : 
; 104  : 			if(!bDontLog)

	cmp	BYTE PTR _bDontLog$[esp+16], 0
	jne	SHORT $LN7@ChangeFlav

; 105  : 			{
; 106  : 				LogFlavors((FlavorTypes) iI);

	mov	edx, DWORD PTR [edi]
	mov	eax, DWORD PTR [edx+12]
	push	esi
	mov	ecx, edi
	call	eax
	mov	edx, DWORD PTR _iNumFlavors$[esp+20]
$LN7@ChangeFlav:
	inc	esi
	cmp	esi, edx
	jl	SHORT $LL21@ChangeFlav
$LN6@ChangeFlav:

; 107  : 			}
; 108  : 		}
; 109  : 	}
; 110  : 
; 111  : 	FlavorUpdate();

	mov	edx, DWORD PTR [edi]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, edi
	call	eax
	pop	esi
	pop	ebp
	pop	ebx
$LN10@ChangeFlav:
	pop	edi

; 112  : }

	pop	ecx
	ret	8
?ChangeFlavors@CvFlavorRecipient@@QAEXPAH_N@Z ENDP	; CvFlavorRecipient::ChangeFlavors
_TEXT	ENDS
PUBLIC	?Reset@CvFlavorManager@@QAEXXZ			; CvFlavorManager::Reset
; Function compile flags: /Ogtpy
;	COMDAT ?Reset@CvFlavorManager@@QAEXXZ
_TEXT	SEGMENT
?Reset@CvFlavorManager@@QAEXXZ PROC			; CvFlavorManager::Reset, COMDAT
; _this$ = ecx

; 245  : 	int iI;
; 246  : 
; 247  : 	for(iI = 0; iI < GC.getNumFlavorTypes(); iI++)

	xor	eax, eax
	cmp	DWORD PTR ?gGlobals@@3VCvGlobals@@A+1764, eax
	jle	SHORT $LN1@Reset
	npad	6
$LL3@Reset:

; 248  : 	{
; 249  : 		m_piPersonalityFlavor[iI] = 0;

	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [edx+eax*4], 0

; 250  : 		m_piActiveFlavor[iI] = 0;

	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+eax*4], 0
	inc	eax
	cmp	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+1764
	jl	SHORT $LL3@Reset
$LN1@Reset:

; 251  : 	}
; 252  : }

	ret	0
?Reset@CvFlavorManager@@QAEXXZ ENDP			; CvFlavorManager::Reset
_TEXT	ENDS
PUBLIC	?GetAdjustedValue@CvFlavorManager@@QAEHHHHH@Z	; CvFlavorManager::GetAdjustedValue
EXTRN	?getJonRandNum@CvGame@@QAEHHPBD@Z:PROC		; CvGame::getJonRandNum
; Function compile flags: /Ogtpy
;	COMDAT ?GetAdjustedValue@CvFlavorManager@@QAEHHHHH@Z
_TEXT	SEGMENT
_iOriginalValue$ = 8					; size = 4
_iPlusMinus$ = 12					; size = 4
_iMin$ = 16						; size = 4
_iMax$ = 20						; size = 4
?GetAdjustedValue@CvFlavorManager@@QAEHHHHH@Z PROC	; CvFlavorManager::GetAdjustedValue, COMDAT
; _this$ = ecx

; 495  : 	int iAdjust;
; 496  : 	int iRtnValue;
; 497  : 
; 498  : #ifdef AUI_FLAVOR_MANAGER_GET_ADJUSTED_VALUE_USE_REROLLS
; 499  : 	int iReroll = 0;
; 500  : #endif
; 501  : #ifdef AUI_FLAVOR_MANAGER_FIX_GET_ADJUSTED_VALUE_NEGATIVE_PLUSMINUS
; 502  : 	iPlusMinus = abs(iPlusMinus);
; 503  : #endif
; 504  : 
; 505  : #ifdef AUI_FLAVOR_MANAGER_GET_ADJUSTED_VALUE_USES_BINOM_RNG
; 506  : 	iAdjust = GC.getGame().getJonRandNumBinom((iPlusMinus * 2 + 1), "Adjusting Personality Flavor");
; 507  : #else
; 508  : 	iAdjust = GC.getGame().getJonRandNum((iPlusMinus * 2 + 1), "Adjusting Personality Flavor");

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	esi
	mov	esi, DWORD PTR _iPlusMinus$[esp]
	push	OFFSET $SG218675
	lea	eax, DWORD PTR [esi+esi+1]
	push	eax
	call	?getJonRandNum@CvGame@@QAEHHPBD@Z	; CvGame::getJonRandNum

; 509  : #endif
; 510  : 	iRtnValue = iOriginalValue + iAdjust - iPlusMinus;

	mov	ecx, DWORD PTR _iOriginalValue$[esp]
	sub	ecx, esi
	add	eax, ecx

; 511  : 
; 512  : 	if(iRtnValue < iMin)

	mov	ecx, DWORD PTR _iMin$[esp]
	cmp	eax, ecx
	pop	esi

; 513  : #ifdef AUI_FLAVOR_MANAGER_GET_ADJUSTED_VALUE_USE_REROLLS
; 514  : 	{
; 515  : 		iReroll = iMin - iRtnValue;
; 516  : #endif
; 517  : 		iRtnValue = iMin;

	jl	SHORT $LN9@GetAdjuste

; 518  : #ifdef AUI_FLAVOR_MANAGER_GET_ADJUSTED_VALUE_USE_REROLLS
; 519  : }
; 520  : #endif
; 521  : 	else if(iRtnValue > iMax)

	mov	ecx, DWORD PTR _iMax$[esp-4]
	cmp	eax, ecx
	jle	SHORT $LN1@GetAdjuste
$LN9@GetAdjuste:

; 522  : #ifdef AUI_FLAVOR_MANAGER_GET_ADJUSTED_VALUE_USE_REROLLS
; 523  : 	{
; 524  : 		iReroll = iMax - iRtnValue;
; 525  : #endif
; 526  : 		iRtnValue = iMax;
; 527  : #ifdef AUI_FLAVOR_MANAGER_GET_ADJUSTED_VALUE_USE_REROLLS
; 528  : 	}
; 529  : 
; 530  : 	if (iReroll != 0)
; 531  : 	{
; 532  : 		iRtnValue = GetAdjustedValue(iRtnValue, iReroll, iMin, iMax);
; 533  : 	}
; 534  : #endif
; 535  : 
; 536  : 	return iRtnValue;

	mov	eax, ecx
$LN1@GetAdjuste:

; 537  : }

	ret	16					; 00000010H
?GetAdjustedValue@CvFlavorManager@@QAEHHHHH@Z ENDP	; CvFlavorManager::GetAdjustedValue
_TEXT	ENDS
PUBLIC	?LogFlavors@CvFlavorManager@@AAEXW4FlavorTypes@@@Z ; CvFlavorManager::LogFlavors
EXTRN	__imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z:PROC
EXTRN	__imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z:PROC
EXTRN	?getElapsedGameTurns@CvGame@@QBEHXZ:PROC	; CvGame::getElapsedGameTurns
EXTRN	?GetInstance@FILogFileMgr@@SAAAV1@XZ:PROC	; FILogFileMgr::GetInstance
EXTRN	__imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z:PROC
EXTRN	__imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z:PROC
EXTRN	?getPlayerAndCityAILogSplit@CvGlobals@@QAE_NXZ:PROC ; CvGlobals::getPlayerAndCityAILogSplit
EXTRN	?getCivilizationShortDescription@CvPlayer@@QBEPBDXZ:PROC ; CvPlayer::getCivilizationShortDescription
EXTRN	?getAILogging@CvGlobals@@QAE_NXZ:PROC		; CvGlobals::getAILogging
EXTRN	?getLogging@CvGlobals@@QAE_NXZ:PROC		; CvGlobals::getLogging
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__ehfuncinfo$?LogFlavors@CvFlavorManager@@AAEXW4FlavorTypes@@@Z DD 019930522H
	DD	0bH
	DD	FLAT:__unwindtable$?LogFlavors@CvFlavorManager@@AAEXW4FlavorTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?LogFlavors@CvFlavorManager@@AAEXW4FlavorTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LogFlavors@CvFlavorManager@@AAEXW4FlavorTypes@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?LogFlavors@CvFlavorManager@@AAEXW4FlavorTypes@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?LogFlavors@CvFlavorManager@@AAEXW4FlavorTypes@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?LogFlavors@CvFlavorManager@@AAEXW4FlavorTypes@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?LogFlavors@CvFlavorManager@@AAEXW4FlavorTypes@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?LogFlavors@CvFlavorManager@@AAEXW4FlavorTypes@@@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?LogFlavors@CvFlavorManager@@AAEXW4FlavorTypes@@@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?LogFlavors@CvFlavorManager@@AAEXW4FlavorTypes@@@Z$7
	DD	05H
	DD	FLAT:__unwindfunclet$?LogFlavors@CvFlavorManager@@AAEXW4FlavorTypes@@@Z$8
	DD	05H
	DD	FLAT:__unwindfunclet$?LogFlavors@CvFlavorManager@@AAEXW4FlavorTypes@@@Z$9
	DD	05H
	DD	FLAT:__unwindfunclet$?LogFlavors@CvFlavorManager@@AAEXW4FlavorTypes@@@Z$10
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvflavormanager.cpp
xdata$x	ENDS
;	COMDAT ?LogFlavors@CvFlavorManager@@AAEXW4FlavorTypes@@@Z
_TEXT	SEGMENT
$T219602 = -236						; size = 28
$T219601 = -236						; size = 28
$T219600 = -236						; size = 28
$T219598 = -236						; size = 28
_strOutBuf$ = -208					; size = 28
_playerName$ = -180					; size = 28
_strTemp$ = -152					; size = 28
_strBaseString$ = -124					; size = 28
_strLogName$ = -96					; size = 28
$T219599 = -68						; size = 28
_strDesc$ = -40						; size = 28
__$EHRec$ = -12						; size = 12
_eFlavor$ = 8						; size = 4
?LogFlavors@CvFlavorManager@@AAEXW4FlavorTypes@@@Z PROC	; CvFlavorManager::LogFlavors, COMDAT
; _this$ = ecx

; 577  : {

	push	-1
	push	__ehhandler$?LogFlavors@CvFlavorManager@@AAEXW4FlavorTypes@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	mov	ebx, ecx

; 578  : 	CvString strOutBuf;

	lea	ecx, DWORD PTR _strOutBuf$[esp+240]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 579  : 	CvString strBaseString;

	lea	ecx, DWORD PTR _strBaseString$[esp+240]
	mov	DWORD PTR __$EHRec$[esp+248], 0
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 580  : 	CvString strTemp;

	lea	ecx, DWORD PTR _strTemp$[esp+240]
	mov	BYTE PTR __$EHRec$[esp+248], 1
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 581  : 	CvString playerName;

	lea	ecx, DWORD PTR _playerName$[esp+240]
	mov	BYTE PTR __$EHRec$[esp+248], 2
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 582  : 	CvString strDesc;

	lea	ecx, DWORD PTR _strDesc$[esp+240]
	mov	BYTE PTR __$EHRec$[esp+248], 3
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 583  : 	CvString strLogName;

	lea	ecx, DWORD PTR _strLogName$[esp+240]
	mov	BYTE PTR __$EHRec$[esp+248], 4
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 584  : 
; 585  : 	if(GC.getLogging() && GC.getAILogging())

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	BYTE PTR __$EHRec$[esp+248], 5
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging
	test	al, al
	je	$LN96@LogFlavors
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getAILogging@CvGlobals@@QAE_NXZ	; CvGlobals::getAILogging
	test	al, al
	je	$LN96@LogFlavors

; 586  : 	{
; 587  : 		// Find the name of this civ
; 588  : 		playerName = m_pPlayer->getCivilizationShortDescription();

	mov	ecx, DWORD PTR [ebx+8]
	call	?getCivilizationShortDescription@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescription
	lea	ecx, DWORD PTR _playerName$[esp+240]
	test	eax, eax
	je	SHORT $LN41@LogFlavors
	push	eax
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN40@LogFlavors
$LN41@LogFlavors:
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN40@LogFlavors:
	push	ebp

; 589  : 
; 590  : 		// Open the log file
; 591  : 		if(GC.getPlayerAndCityAILogSplit())

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getPlayerAndCityAILogSplit@CvGlobals@@QAE_NXZ ; CvGlobals::getPlayerAndCityAILogSplit
	mov	ebp, DWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
	test	al, al
	je	SHORT $LN7@LogFlavors

; 592  : 		{
; 593  : 			strLogName = "FlavorAILog_" + playerName + ".csv";

	lea	eax, DWORD PTR _playerName$[esp+244]
	push	eax
	lea	ecx, DWORD PTR $T219598[esp+248]
	push	OFFSET $SG218721
	push	ecx
	call	DWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
	push	OFFSET $SG218720
	push	eax
	lea	edx, DWORD PTR $T219599[esp+264]
	push	edx
	mov	BYTE PTR __$EHRec$[esp+276], 6
	call	ebp
	add	esp, 24					; 00000018H
	mov	ecx, eax
	mov	BYTE PTR __$EHRec$[esp+252], 7
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strLogName$[esp+248]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	lea	ecx, DWORD PTR $T219599[esp+244]
	mov	BYTE PTR __$EHRec$[esp+252], 6
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T219598[esp+244]
	mov	BYTE PTR __$EHRec$[esp+252], 5
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 594  : 		}
; 595  : 		else

	jmp	SHORT $LN46@LogFlavors
$LN7@LogFlavors:

; 596  : 		{
; 597  : 			strLogName = "FlavorAILog.csv";

	push	OFFSET $SG218723
	lea	ecx, DWORD PTR _strLogName$[esp+248]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
$LN46@LogFlavors:
	push	esi
	push	edi

; 598  : 		}
; 599  : 
; 600  : 		FILogFile* pLog;
; 601  : 		pLog = LOGFILEMGR.GetLog(strLogName, FILogFile::kDontTimeStamp);

	call	?GetInstance@FILogFileMgr@@SAAAV1@XZ	; FILogFileMgr::GetInstance
	lea	ecx, DWORD PTR _strLogName$[esp+252]
	mov	esi, eax
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	edx, DWORD PTR [esi]
	push	0
	push	1
	push	eax
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, esi
	call	eax

; 602  : 
; 603  : 		// Get the leading info for this line
; 604  : 		strBaseString.Format("%03d, ", GC.getGame().getElapsedGameTurns());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	edi, eax
	call	?getElapsedGameTurns@CvGame@@QBEHXZ	; CvGame::getElapsedGameTurns
	push	eax
	lea	ecx, DWORD PTR _strBaseString$[esp+256]
	push	OFFSET $SG218725
	push	ecx
	call	?Format@CvString@@QAAXPBDZZ		; CvString::Format

; 605  : 		strBaseString += playerName + ", ";

	push	OFFSET $SG218727
	lea	edx, DWORD PTR _playerName$[esp+268]
	push	edx
	lea	eax, DWORD PTR $T219600[esp+272]
	push	eax
	call	ebp
	add	esp, 24					; 00000018H
	push	eax
	lea	ecx, DWORD PTR _strBaseString$[esp+256]
	mov	BYTE PTR __$EHRec$[esp+264], 8
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T219600[esp+252]
	mov	BYTE PTR __$EHRec$[esp+260], 5
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 606  : 
; 607  : 		// Dump out the setting for each flavor
; 608  : 		if(eFlavor == NO_FLAVOR)

	mov	eax, DWORD PTR _eFlavor$[esp+248]
	cmp	eax, -1
	jne	$LN5@LogFlavors

; 609  : 		{
; 610  : 			for(int iI = 0; iI < GC.getNumFlavorTypes(); iI++)

	xor	esi, esi
	cmp	DWORD PTR ?gGlobals@@3VCvGlobals@@A+1764, esi
	jle	$LN99@LogFlavors
	xor	ebp, ebp
$LL4@LogFlavors:

; 611  : 			{
; 612  : 				// Only dump if non-zero
; 613  : 				//		if (m_piLatestFlavorValues[iI] > 0)
; 614  : 				{
; 615  : 					strTemp.Format("Flavor, %s, %d", GC.getFlavorTypes((FlavorTypes)iI).GetCString(), GetIndividualFlavor((FlavorTypes) iI));

	mov	ecx, DWORD PTR [ebx+4]
	mov	eax, DWORD PTR [ecx+esi*4]
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+1760
	lea	ecx, DWORD PTR [edx+ebp]
	push	eax
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	eax, DWORD PTR _strTemp$[esp+260]
	push	OFFSET $SG218735
	push	eax
	call	?Format@CvString@@QAAXPBDZZ		; CvString::Format

; 616  : 					strOutBuf = strBaseString + strTemp;

	lea	ecx, DWORD PTR _strTemp$[esp+268]
	push	ecx
	lea	edx, DWORD PTR _strBaseString$[esp+272]
	push	edx
	lea	eax, DWORD PTR $T219601[esp+276]
	push	eax
	call	DWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
	add	esp, 28					; 0000001cH
	mov	ecx, eax
	mov	BYTE PTR __$EHRec$[esp+260], 9
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strOutBuf$[esp+256]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	lea	ecx, DWORD PTR $T219601[esp+252]
	mov	BYTE PTR __$EHRec$[esp+260], 5
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 617  : 					pLog->Msg(strOutBuf);

	lea	ecx, DWORD PTR _strOutBuf$[esp+252]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	ecx, DWORD PTR [edi]
	mov	edx, DWORD PTR [ecx]
	push	eax
	push	edi
	call	edx
	inc	esi
	add	esp, 8
	add	ebp, 28					; 0000001cH
	cmp	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+1764
	jl	$LL4@LogFlavors

; 618  : 				}
; 619  : 			}
; 620  : 		}
; 621  : 		else

	jmp	$LN99@LogFlavors
$LN5@LogFlavors:

; 622  : 		{
; 623  : 			strTemp.Format("Flavor, %s, %d", GC.getFlavorTypes(eFlavor).GetCString(), GetIndividualFlavor(eFlavor));

	mov	ecx, DWORD PTR [ebx+4]
	mov	edx, DWORD PTR [ecx+eax*4]
	lea	ecx, DWORD PTR [eax*8]
	sub	ecx, eax
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+1760
	lea	ecx, DWORD PTR [eax+ecx*4]
	push	edx
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strTemp$[esp+260]
	push	OFFSET $SG218738
	push	ecx
	call	?Format@CvString@@QAAXPBDZZ		; CvString::Format

; 624  : 			strOutBuf = strBaseString + strTemp;

	lea	edx, DWORD PTR _strTemp$[esp+268]
	push	edx
	lea	eax, DWORD PTR _strBaseString$[esp+272]
	push	eax
	lea	ecx, DWORD PTR $T219602[esp+276]
	push	ecx
	call	DWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
	add	esp, 28					; 0000001cH
	mov	ecx, eax
	mov	BYTE PTR __$EHRec$[esp+260], 10		; 0000000aH
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strOutBuf$[esp+256]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	lea	ecx, DWORD PTR $T219602[esp+252]
	mov	BYTE PTR __$EHRec$[esp+260], 5
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 625  : 			pLog->Msg(strOutBuf);

	lea	ecx, DWORD PTR _strOutBuf$[esp+252]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	edx, DWORD PTR [edi]
	push	eax
	mov	eax, DWORD PTR [edx]
	push	edi
	call	eax
	add	esp, 8
$LN99@LogFlavors:
	pop	edi
	pop	esi
	pop	ebp
$LN96@LogFlavors:

; 626  : 		}
; 627  : 	}
; 628  : }

	lea	ecx, DWORD PTR _strLogName$[esp+240]
	mov	BYTE PTR __$EHRec$[esp+248], 4
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR _strDesc$[esp+240]
	mov	BYTE PTR __$EHRec$[esp+248], 3
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR _playerName$[esp+240]
	mov	BYTE PTR __$EHRec$[esp+248], 2
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR _strTemp$[esp+240]
	mov	BYTE PTR __$EHRec$[esp+248], 1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR _strBaseString$[esp+240]
	mov	BYTE PTR __$EHRec$[esp+248], 0
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR _strOutBuf$[esp+240]
	mov	DWORD PTR __$EHRec$[esp+248], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[esp+240]
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 236				; 000000ecH
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LogFlavors@CvFlavorManager@@AAEXW4FlavorTypes@@@Z$0:
	lea	ecx, DWORD PTR _strOutBuf$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?LogFlavors@CvFlavorManager@@AAEXW4FlavorTypes@@@Z$1:
	lea	ecx, DWORD PTR _strBaseString$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?LogFlavors@CvFlavorManager@@AAEXW4FlavorTypes@@@Z$2:
	lea	ecx, DWORD PTR _strTemp$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?LogFlavors@CvFlavorManager@@AAEXW4FlavorTypes@@@Z$3:
	lea	ecx, DWORD PTR _playerName$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?LogFlavors@CvFlavorManager@@AAEXW4FlavorTypes@@@Z$4:
	lea	ecx, DWORD PTR _strDesc$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?LogFlavors@CvFlavorManager@@AAEXW4FlavorTypes@@@Z$5:
	lea	ecx, DWORD PTR _strLogName$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?LogFlavors@CvFlavorManager@@AAEXW4FlavorTypes@@@Z$6:
	lea	ecx, DWORD PTR $T219598[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LogFlavors@CvFlavorManager@@AAEXW4FlavorTypes@@@Z$7:
	lea	ecx, DWORD PTR $T219599[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LogFlavors@CvFlavorManager@@AAEXW4FlavorTypes@@@Z$8:
	lea	ecx, DWORD PTR $T219600[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LogFlavors@CvFlavorManager@@AAEXW4FlavorTypes@@@Z$9:
	lea	ecx, DWORD PTR $T219601[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LogFlavors@CvFlavorManager@@AAEXW4FlavorTypes@@@Z$10:
	lea	ecx, DWORD PTR $T219602[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?LogFlavors@CvFlavorManager@@AAEXW4FlavorTypes@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?LogFlavors@CvFlavorManager@@AAEXW4FlavorTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?LogFlavors@CvFlavorManager@@AAEXW4FlavorTypes@@@Z ENDP	; CvFlavorManager::LogFlavors
PUBLIC	??1iterator@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAE@XZ ; FFastList<CvFlavorRecipient *,297,0>::iterator::~iterator
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastlist.h
;	COMDAT ??1iterator@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAE@XZ
_TEXT	SEGMENT
??1iterator@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAE@XZ PROC ; FFastList<CvFlavorRecipient *,297,0>::iterator::~iterator, COMDAT
; _this$ = ecx

; 136  : 		~iterator(){};

	ret	0
??1iterator@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAE@XZ ENDP ; FFastList<CvFlavorRecipient *,297,0>::iterator::~iterator
_TEXT	ENDS
PUBLIC	?clear@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@QAEXXZ ; BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::clear
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ?clear@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@QAEXXZ
_TEXT	SEGMENT
?clear@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@QAEXXZ PROC ; BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::clear, COMDAT
; _this$ = ecx

; 121  : 		Destroy(m_pData, m_uiCurrSize);
; 122  : 		m_uiCurrSize = 0;

	mov	DWORD PTR [ecx+4], 0

; 123  : 	};

	ret	0
?clear@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@QAEXXZ ENDP ; BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::clear
_TEXT	ENDS
PUBLIC	??A?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAEAAU?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@I@Z ; FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::operator[]
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastallocator.h
;	COMDAT ??A?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAEAAU?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@I@Z
_TEXT	SEGMENT
_ui$ = 8						; size = 4
??A?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAEAAU?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@I@Z PROC ; FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::operator[], COMDAT
; _this$ = ecx

; 269  : 		return m_vec[ui];

	mov	eax, DWORD PTR _ui$[esp-4]
	mov	ecx, DWORD PTR [ecx+8]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*4]

; 270  : 	}

	ret	4
??A?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAEAAU?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@I@Z ENDP ; FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::operator[]
_TEXT	ENDS
PUBLIC	??0?$base_iterator@Vbase_iterator_tail@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAE@XZ ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator<FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator_tail>::base_iterator<FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator_tail>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastlist.h
;	COMDAT ??0?$base_iterator@Vbase_iterator_tail@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAE@XZ
_TEXT	SEGMENT
??0?$base_iterator@Vbase_iterator_tail@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAE@XZ PROC ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator<FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator_tail>::base_iterator<FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator_tail>, COMDAT
; _this$ = ecx

; 293  : 		explicit base_iterator() : m_uiCurrPos( ANCHOR_NODE_INDEX ), TAIL(NULL) {};

	mov	eax, ecx
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 268435455		; 0fffffffH
	ret	0
??0?$base_iterator@Vbase_iterator_tail@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAE@XZ ENDP ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator<FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator_tail>::base_iterator<FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator_tail>
_TEXT	ENDS
PUBLIC	?InsertAfter@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@IAEXII@Z ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::InsertAfter
; Function compile flags: /Ogtpy
;	COMDAT ?InsertAfter@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@IAEXII@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
_j$ = 12						; size = 4
?InsertAfter@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@IAEXII@Z PROC ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::InsertAfter, COMDAT
; _this$ = ecx

; 634  : 		assert( get_allocator().is_element_valid(i) );
; 635  : 
; 636  : 		T* a = &get_allocator()[i];

	mov	edx, DWORD PTR [ecx+8]
	push	esi

; 637  : 		if( j == ANCHOR_NODE_INDEX ){

	mov	esi, DWORD PTR _j$[esp]
	push	edi
	mov	edi, DWORD PTR _i$[esp+4]
	lea	eax, DWORD PTR [edi+edi*2]
	lea	eax, DWORD PTR [edx+eax*4]
	cmp	esi, 268435455				; 0fffffffH
	jne	SHORT $LN3@InsertAfte

; 638  : 			a->LIST_SetNext(ANCHOR_NODE_INDEX);
; 639  : 			a->LIST_SetPrev(ANCHOR_NODE_INDEX);

	mov	ecx, DWORD PTR [eax+4]
	and	ecx, -1879048193			; 8fffffffH
	or	ecx, esi
	pop	edi
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [eax+4], ecx
	pop	esi

; 652  : 		}
; 653  : 	};

	ret	8
$LN3@InsertAfte:
	push	ebx
	push	ebp

; 640  : 		}else{
; 641  : 			T* b = &get_allocator()[j];
; 642  : 
; 643  : 			//Set the links for the new node
; 644  : 			unsigned int uiBNext = b->LIST_GetNext();
; 645  : 			a->LIST_SetPrev(j);

	mov	ebp, DWORD PTR [eax+4]
	lea	ebx, DWORD PTR [esi+esi*2]
	xor	ebp, esi
	lea	ebx, DWORD PTR [edx+ebx*4]
	mov	edx, DWORD PTR [ebx]
	and	ebp, 2147483647				; 7fffffffH
	xor	DWORD PTR [eax+4], ebp

; 646  : 			a->LIST_SetNext(uiBNext);

	mov	DWORD PTR [eax], edx

; 647  : 
; 648  : 			//Fix the links for the next and previous nodes
; 649  : 			if( uiBNext != ANCHOR_NODE_INDEX )

	cmp	edx, 268435455				; 0fffffffH
	je	SHORT $LN34@InsertAfte

; 650  : 				get_allocator()[uiBNext].LIST_SetPrev(i);

	mov	eax, DWORD PTR [ecx+8]
	lea	edx, DWORD PTR [edx+edx*2]
	mov	ecx, DWORD PTR [eax+edx*4+4]
	lea	eax, DWORD PTR [eax+edx*4]
	xor	ecx, edi
	and	ecx, 2147483647				; 7fffffffH
	xor	DWORD PTR [eax+4], ecx
$LN34@InsertAfte:
	pop	ebp

; 651  : 			b->LIST_SetNext(i);

	mov	DWORD PTR [ebx], edi
	pop	ebx
	pop	edi
	pop	esi

; 652  : 		}
; 653  : 	};

	ret	8
?InsertAfter@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@IAEXII@Z ENDP ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::InsertAfter
_TEXT	ENDS
PUBLIC	?FreeIfDeleted@?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAE_NI@Z ; FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::FreeIfDeleted
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastallocator.h
;	COMDAT ?FreeIfDeleted@?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAE_NI@Z
_TEXT	SEGMENT
_uiIndex$ = 8						; size = 4
?FreeIfDeleted@?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAE_NI@Z PROC ; FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::FreeIfDeleted, COMDAT
; _this$ = ecx

; 239  : 		T& element = m_vec[uiIndex];

	mov	eax, DWORD PTR _uiIndex$[esp-4]
	push	esi
	push	edi
	mov	edi, DWORD PTR [ecx+8]
	lea	edx, DWORD PTR [eax+eax*2]
	lea	esi, DWORD PTR [edi+edx*4]

; 240  : 		if( !element.ALLOC_GetDeleted() ){

	mov	edx, DWORD PTR [esi+4]
	shr	edx, 31					; 0000001fH
	not	dl
	test	dl, 1
	jne	SHORT $LN3@FreeIfDele
	pop	edi

; 241  : 			return false;

	xor	al, al
	pop	esi

; 256  : 	};

	ret	4
$LN3@FreeIfDele:

; 242  : 		}
; 243  : 
; 244  : 		if( uiIndex < m_uiFirstEmpty){

	mov	edx, DWORD PTR [ecx]
	cmp	eax, edx
	jae	SHORT $LN2@FreeIfDele

; 245  : 			element.ALLOC_SetNext(m_uiFirstEmpty);

	mov	DWORD PTR [esi], edx

; 252  : 		}
; 253  : 		m_uiSize--;

	dec	DWORD PTR [ecx+4]
	pop	edi
	mov	DWORD PTR [ecx], eax

; 254  : 
; 255  : 		return true;

	mov	al, 1
	pop	esi

; 256  : 	};

	ret	4
$LN2@FreeIfDele:

; 246  : 
; 247  : 			m_uiFirstEmpty = uiIndex;
; 248  : 		}else{
; 249  : 			T* pRoot = &m_vec[m_uiFirstEmpty];

	lea	edx, DWORD PTR [edx+edx*2]
	lea	edx, DWORD PTR [edi+edx*4]

; 250  : 			element.ALLOC_SetNext( pRoot->ALLOC_GetNext() );

	mov	edi, DWORD PTR [edx]
	mov	DWORD PTR [esi], edi

; 251  : 			pRoot->ALLOC_SetNext(uiIndex);

	mov	DWORD PTR [edx], eax

; 252  : 		}
; 253  : 		m_uiSize--;

	dec	DWORD PTR [ecx+4]
	pop	edi

; 254  : 
; 255  : 		return true;

	mov	al, 1
	pop	esi

; 256  : 	};

	ret	4
?FreeIfDeleted@?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAE_NI@Z ENDP ; FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::FreeIfDeleted
_TEXT	ENDS
PUBLIC	?Free@?$FFastVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@IAEXPAU?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@I@Z ; FFastVector<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::Free
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ?Free@?$FFastVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@IAEXPAU?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@I@Z
_TEXT	SEGMENT
_pVal$ = 8						; size = 4
_uiNumElements$ = 12					; size = 4
?Free@?$FFastVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@IAEXPAU?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@I@Z PROC ; FFastVector<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::Free, COMDAT
; _this$ = ecx

; 516  : 		if( !bPODType) 
; 517  :             Destroy(pVal, uiNumElements);
; 518  : 
; 519  : 		FAST_VEC_ALLOC::FreeAligned( (void*)pVal );

	mov	eax, DWORD PTR _pVal$[esp-4]
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	pop	ecx

; 520  : 	};

	ret	8
?Free@?$FFastVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@IAEXPAU?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@I@Z ENDP ; FFastVector<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::Free
_TEXT	ENDS
PUBLIC	??0?$base_iterator@Vbase_iterator_tail@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAE@IPAV1@@Z ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator<FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator_tail>::base_iterator<FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator_tail>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastlist.h
;	COMDAT ??0?$base_iterator@Vbase_iterator_tail@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAE@IPAV1@@Z
_TEXT	SEGMENT
_uiPos$ = 8						; size = 4
_pVec$ = 12						; size = 4
??0?$base_iterator@Vbase_iterator_tail@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAE@IPAV1@@Z PROC ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator<FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator_tail>::base_iterator<FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator_tail>, COMDAT
; _this$ = ecx

; 295  : 			: m_uiCurrPos( uiPos ), TAIL( pVec ) {};

	mov	edx, DWORD PTR _uiPos$[esp-4]
	mov	eax, ecx
	mov	ecx, DWORD PTR _pVec$[esp-4]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	ret	8
??0?$base_iterator@Vbase_iterator_tail@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAE@IPAV1@@Z ENDP ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator<FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator_tail>::base_iterator<FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator_tail>
_TEXT	ENDS
PUBLIC	?Alloc@?$FFastVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@IAEPAU?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@I@Z ; FFastVector<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::Alloc
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ?Alloc@?$FFastVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@IAEPAU?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@I@Z
_TEXT	SEGMENT
_uiSize$ = 8						; size = 4
?Alloc@?$FFastVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@IAEPAU?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@I@Z PROC ; FFastVector<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::Alloc, COMDAT
; _this$ = ecx

; 503  : 	T* Alloc( unsigned int uiSize ){

	push	esi

; 504  : 		if( uiSize > 0 ){

	mov	esi, DWORD PTR _uiSize$[esp]
	push	edi
	mov	edi, ecx
	test	esi, esi
	jbe	SHORT $LN1@Alloc

; 505  :             
; 506  :             T* pRet = (T*)FAST_VEC_ALLOC::AllocAligned( uiSize*sizeof(T), __alignof(T), AllocPool, nSubID );

	push	85					; 00000055H
	lea	eax, DWORD PTR [esi+esi*2]
	push	OFFSET ??_C@_0GH@ECFAPJEJ@c?3?2users?2enormousapplepie?2docume@
	add	eax, eax
	add	eax, eax
	push	4
	push	eax
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H

; 507  : 			m_uiCurrMaxSize = uiSize;

	mov	DWORD PTR [edi+8], esi
	pop	edi
	pop	esi

; 511  : 	};

	ret	4
$LN1@Alloc:
	pop	edi

; 508  : 			return pRet;
; 509  : 		}
; 510  : 		return NULL;

	xor	eax, eax
	pop	esi

; 511  : 	};

	ret	4
?Alloc@?$FFastVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@IAEPAU?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@I@Z ENDP ; FFastVector<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::Alloc
_TEXT	ENDS
PUBLIC	??0?$FFastVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAE@I@Z ; FFastVector<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::FFastVector<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>
; Function compile flags: /Ogtpy
;	COMDAT ??0?$FFastVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAE@I@Z
_TEXT	SEGMENT
_uiStartingMaxSize$ = 8					; size = 4
??0?$FFastVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAE@I@Z PROC ; FFastVector<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::FFastVector<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>, COMDAT
; _this$ = ecx

; 309  : 	FFastVector(unsigned int uiStartingMaxSize = 0)

	push	esi
	xor	eax, eax
	push	edi

; 310  : 	{
; 311  : #ifdef BREAK_ON_REPEATED_RESIZE
; 312  : 		m_nResizeTimes = 0;
; 313  : #endif
; 314  : 		m_pData = Alloc(uiStartingMaxSize);

	mov	edi, DWORD PTR _uiStartingMaxSize$[esp+4]
	mov	esi, ecx
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	cmp	edi, eax
	jbe	SHORT $LN5@FFastVecto
	push	85					; 00000055H
	lea	eax, DWORD PTR [edi+edi*2]
	push	OFFSET ??_C@_0GH@ECFAPJEJ@c?3?2users?2enormousapplepie?2docume@
	add	eax, eax
	add	eax, eax
	push	4
	push	eax
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR [esi+8], edi
$LN5@FFastVecto:
	mov	DWORD PTR [esi], eax
	pop	edi

; 315  : 	};

	mov	eax, esi
	pop	esi
	ret	4
??0?$FFastVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAE@I@Z ENDP ; FFastVector<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::FFastVector<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>
_TEXT	ENDS
PUBLIC	??$?5H@@YAAAVFDataStream@@AAV0@AAV?$ArrayWrapper@H@@@Z ; operator>><int>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fdatastream.h
;	COMDAT ??$?5H@@YAAAVFDataStream@@AAV0@AAV?$ArrayWrapper@H@@@Z
_TEXT	SEGMENT
_loadFrom$ = 8						; size = 4
_v$ = 12						; size = 4
??$?5H@@YAAAVFDataStream@@AAV0@AAV?$ArrayWrapper@H@@@Z PROC ; operator>><int>, COMDAT

; 516  : 	int i = 0;
; 517  : 	int count = v.getCount();

	mov	eax, DWORD PTR _v$[esp-4]
	push	esi

; 518  : 	ValueType * values = v.getArray();

	mov	esi, DWORD PTR [eax]
	push	edi
	mov	edi, DWORD PTR [eax+4]

; 519  : 	for(i = 0; i < count; ++i)

	test	edi, edi
	jle	SHORT $LN14@operator@2
	push	ebx
	mov	ebx, DWORD PTR _loadFrom$[esp+8]
$LL3@operator@2:

; 520  : 	{
; 521  : 		loadFrom >> values[i];

	push	esi
	mov	ecx, ebx
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read
	add	esi, 4
	sub	edi, 1
	jne	SHORT $LL3@operator@2

; 522  : 	}
; 523  : 	return loadFrom;

	mov	eax, ebx
	pop	ebx
	pop	edi
	pop	esi

; 524  : }

	ret	0
$LN14@operator@2:

; 522  : 	}
; 523  : 	return loadFrom;

	mov	eax, DWORD PTR _loadFrom$[esp+4]
	pop	edi
	pop	esi

; 524  : }

	ret	0
??$?5H@@YAAAVFDataStream@@AAV0@AAV?$ArrayWrapper@H@@@Z ENDP ; operator>><int>
_TEXT	ENDS
PUBLIC	??$?6H@@YAAAVFDataStream@@AAV0@ABV?$ArrayWrapper@H@@@Z ; operator<<<int>
; Function compile flags: /Ogtpy
;	COMDAT ??$?6H@@YAAAVFDataStream@@AAV0@ABV?$ArrayWrapper@H@@@Z
_TEXT	SEGMENT
_saveTo$ = 8						; size = 4
_v$ = 12						; size = 4
??$?6H@@YAAAVFDataStream@@AAV0@ABV?$ArrayWrapper@H@@@Z PROC ; operator<<<int>, COMDAT

; 503  : 	int i = 0;
; 504  : 	int count = v.getCount();

	mov	eax, DWORD PTR _v$[esp-4]
	push	esi

; 505  : 	const ValueType * values = v.getArray();

	mov	esi, DWORD PTR [eax]
	push	edi
	mov	edi, DWORD PTR [eax+4]

; 506  : 	for(i = 0; i < count; ++i)

	test	edi, edi
	jle	SHORT $LN14@operator@3
	push	ebx
	mov	ebx, DWORD PTR _saveTo$[esp+8]
$LL3@operator@3:

; 507  : 	{
; 508  : 		saveTo << values[i];

	push	esi
	mov	ecx, ebx
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write
	add	esi, 4
	sub	edi, 1
	jne	SHORT $LL3@operator@3

; 509  : 	}
; 510  : 	return saveTo;

	mov	eax, ebx
	pop	ebx
	pop	edi
	pop	esi

; 511  : }

	ret	0
$LN14@operator@3:

; 509  : 	}
; 510  : 	return saveTo;

	mov	eax, DWORD PTR _saveTo$[esp+4]
	pop	edi
	pop	esi

; 511  : }

	ret	0
??$?6H@@YAAAVFDataStream@@AAV0@ABV?$ArrayWrapper@H@@@Z ENDP ; operator<<<int>
_TEXT	ENDS
PUBLIC	?GetID@CvPlayer@@QBE?AW4PlayerTypes@@XZ		; CvPlayer::GetID
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvplayer.h
;	COMDAT ?GetID@CvPlayer@@QBE?AW4PlayerTypes@@XZ
_TEXT	SEGMENT
?GetID@CvPlayer@@QBE?AW4PlayerTypes@@XZ PROC		; CvPlayer::GetID, COMDAT
; _this$ = ecx

; 1168 : 		return m_eID;

	mov	eax, DWORD PTR [ecx+44]

; 1169 : 	}

	ret	0
?GetID@CvPlayer@@QBE?AW4PlayerTypes@@XZ ENDP		; CvPlayer::GetID
_TEXT	ENDS
PUBLIC	?Read@CvFlavorManager@@QAEXAAVFDataStream@@@Z	; CvFlavorManager::Read
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvflavormanager.cpp
;	COMDAT ?Read@CvFlavorManager@@QAEXAAVFDataStream@@@Z
_TEXT	SEGMENT
_uiVersion$ = -4					; size = 4
_iNumFlavors$ = 8					; size = 4
_kStream$ = 8						; size = 4
?Read@CvFlavorManager@@QAEXAAVFDataStream@@@Z PROC	; CvFlavorManager::Read, COMDAT
; _this$ = ecx

; 256  : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 257  : 	// Version number to maintain backwards compatibility
; 258  : 	uint uiVersion;
; 259  : 	kStream >> uiVersion;

	mov	esi, DWORD PTR _kStream$[esp+12]
	push	edi
	lea	eax, DWORD PTR _uiVersion$[esp+20]
	mov	ebp, ecx
	push	eax
	mov	ecx, esi
	call	?Read@FDataStream@@IAEXAAI@Z		; FDataStream::Read

; 260  : 
; 261  : 	CvAssertMsg(GC.getNumFlavorTypes() > 0, "Number of flavors to serialize is expected to greater than 0)");
; 262  : 
; 263  : 	int iNumFlavors;
; 264  : 	kStream >> iNumFlavors;

	lea	ecx, DWORD PTR _iNumFlavors$[esp+16]
	push	ecx
	mov	ecx, esi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 265  : 
; 266  : 	ArrayWrapper<int> wrapm_piPersonalityFlavor(iNumFlavors, m_piPersonalityFlavor);
; 267  : 	kStream >> wrapm_piPersonalityFlavor;

	mov	eax, DWORD PTR _iNumFlavors$[esp+16]
	mov	edi, DWORD PTR [ebp]
	test	eax, eax
	jle	SHORT $LN9@Read

; 257  : 	// Version number to maintain backwards compatibility
; 258  : 	uint uiVersion;
; 259  : 	kStream >> uiVersion;

	mov	ebx, eax

; 265  : 
; 266  : 	ArrayWrapper<int> wrapm_piPersonalityFlavor(iNumFlavors, m_piPersonalityFlavor);
; 267  : 	kStream >> wrapm_piPersonalityFlavor;

$LL11@Read:
	push	edi
	mov	ecx, esi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read
	add	edi, 4
	sub	ebx, 1
	jne	SHORT $LL11@Read
	mov	eax, DWORD PTR _iNumFlavors$[esp+16]
$LN9@Read:

; 268  : 
; 269  : 	ArrayWrapper<int> wrapm_piActiveFlavor(iNumFlavors, m_piActiveFlavor);

	mov	ebp, DWORD PTR [ebp+4]

; 270  : 	kStream >> wrapm_piActiveFlavor;

	test	eax, eax
	jle	SHORT $LN22@Read
	mov	edi, ebp
	mov	ebx, eax
	npad	1
$LL24@Read:
	push	edi
	mov	ecx, esi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read
	add	edi, 4
	sub	ebx, 1
	jne	SHORT $LL24@Read
$LN22@Read:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 271  : }

	pop	ecx
	ret	4
?Read@CvFlavorManager@@QAEXAAVFDataStream@@@Z ENDP	; CvFlavorManager::Read
_TEXT	ENDS
PUBLIC	?Write@CvFlavorManager@@QAEXAAVFDataStream@@@Z	; CvFlavorManager::Write
; Function compile flags: /Ogtpy
;	COMDAT ?Write@CvFlavorManager@@QAEXAAVFDataStream@@@Z
_TEXT	SEGMENT
_uiVersion$ = -4					; size = 4
$T220011 = 8						; size = 4
_kStream$ = 8						; size = 4
?Write@CvFlavorManager@@QAEXAAVFDataStream@@@Z PROC	; CvFlavorManager::Write, COMDAT
; _this$ = ecx

; 275  : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 278  : 	kStream << uiVersion;

	mov	esi, DWORD PTR _kStream$[esp+12]
	push	edi
	lea	eax, DWORD PTR _uiVersion$[esp+20]
	mov	ebp, ecx
	push	eax
	mov	ecx, esi
	mov	DWORD PTR _uiVersion$[esp+24], 1
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write

; 279  : 
; 280  : 	CvAssertMsg(GC.getNumFlavorTypes() > 0, "Number of flavors to serialize is expected to greater than 0)");
; 281  : 	kStream << GC.getNumFlavorTypes();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+1764
	lea	edx, DWORD PTR $T220011[esp+16]
	mov	DWORD PTR $T220011[esp+16], ecx
	push	edx
	mov	ecx, esi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 282  : 	kStream << ArrayWrapper<int>(GC.getNumFlavorTypes(), m_piPersonalityFlavor);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+1764
	mov	edi, DWORD PTR [ebp]
	test	eax, eax
	jle	SHORT $LN13@Write

; 276  : 	// Current version number
; 277  : 	uint uiVersion = 1;

	mov	ebx, eax

; 282  : 	kStream << ArrayWrapper<int>(GC.getNumFlavorTypes(), m_piPersonalityFlavor);

$LL15@Write:
	push	edi
	mov	ecx, esi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write
	add	edi, 4
	sub	ebx, 1
	jne	SHORT $LL15@Write
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+1764
$LN13@Write:

; 283  : 	kStream << ArrayWrapper<int>(GC.getNumFlavorTypes(), m_piActiveFlavor);

	mov	ebp, DWORD PTR [ebp+4]
	test	eax, eax
	jle	SHORT $LN28@Write
	mov	edi, ebp
	mov	ebx, eax
$LL30@Write:
	push	edi
	mov	ecx, esi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write
	add	edi, 4
	sub	ebx, 1
	jne	SHORT $LL30@Write
$LN28@Write:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 284  : }

	pop	ecx
	ret	4
?Write@CvFlavorManager@@QAEXAAVFDataStream@@@Z ENDP	; CvFlavorManager::Write
_TEXT	ENDS
PUBLIC	?RandomizeWeights@CvFlavorManager@@AAEXXZ	; CvFlavorManager::RandomizeWeights
; Function compile flags: /Ogtpy
;	COMDAT ?RandomizeWeights@CvFlavorManager@@AAEXXZ
_TEXT	SEGMENT
_iMin$ = -8						; size = 4
_iMax$ = -4						; size = 4
?RandomizeWeights@CvFlavorManager@@AAEXXZ PROC		; CvFlavorManager::RandomizeWeights, COMDAT
; _this$ = ecx

; 466  : {

	sub	esp, 8

; 467  : 	int iI;
; 468  : 	int iMin, iMax, iPlusMinus;
; 469  : 
; 470  : 	iMin = /*0*/ GC.getPERSONALITY_FLAVOR_MIN_VALUE();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+1872
	push	ebx

; 471  : 	iMax = /*20*/ GC.getPERSONALITY_FLAVOR_MAX_VALUE();
; 472  : 	iPlusMinus = /*2*/ GC.getFLAVOR_RANDOMIZATION_RANGE();

	mov	ebx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+1884
	push	ebp
	push	edi
	mov	ebp, ecx
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+1868

; 473  : 
; 474  : 	for(iI = 0; iI < GC.getNumFlavorTypes(); iI++)

	xor	edi, edi
	cmp	DWORD PTR ?gGlobals@@3VCvGlobals@@A+1764, edi
	mov	DWORD PTR _iMin$[esp+20], eax
	mov	DWORD PTR _iMax$[esp+20], ecx
	jle	SHORT $LN2@RandomizeW
	push	esi
	npad	4
$LL24@RandomizeW:

; 475  : 	{
; 476  : 		// Don't modify it if it's zero-ed out in the XML
; 477  : #ifdef AUI_FLAVOR_MANAGER_FIX_RANDOMIZE_WEIGHTS_ZEROED_OUT_FLAVOR
; 478  : 		if (m_piPersonalityFlavor[iI] >= 0)
; 479  : #else
; 480  : 		if(m_piPersonalityFlavor[iI] != 0)

	mov	edx, DWORD PTR [ebp]
	mov	esi, DWORD PTR [edx+edi*4]
	test	esi, esi
	je	SHORT $LN3@RandomizeW

; 481  : #endif
; 482  : 		{
; 483  : 			m_piPersonalityFlavor[iI] = GetAdjustedValue(m_piPersonalityFlavor[iI], iPlusMinus, iMin, iMax);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	OFFSET $SG218675
	lea	eax, DWORD PTR [ebx+ebx+1]
	push	eax
	call	?getJonRandNum@CvGame@@QAEHHPBD@Z	; CvGame::getJonRandNum
	mov	ecx, DWORD PTR _iMin$[esp+24]
	sub	esi, ebx
	add	eax, esi
	cmp	eax, ecx
	jl	SHORT $LN25@RandomizeW
	mov	ecx, DWORD PTR _iMax$[esp+24]
	cmp	eax, ecx
	jle	SHORT $LN15@RandomizeW
$LN25@RandomizeW:
	mov	eax, ecx
$LN15@RandomizeW:
	mov	ecx, DWORD PTR [ebp]
	mov	DWORD PTR [ecx+edi*4], eax
$LN3@RandomizeW:
	inc	edi
	cmp	edi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+1764
	jl	SHORT $LL24@RandomizeW
	pop	esi
$LN2@RandomizeW:
	pop	edi
	pop	ebp
	pop	ebx

; 484  : 		}
; 485  : 	}
; 486  : }

	add	esp, 8
	ret	0
?RandomizeWeights@CvFlavorManager@@AAEXXZ ENDP		; CvFlavorManager::RandomizeWeights
_TEXT	ENDS
PUBLIC	?clear@?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAEXXZ ; FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::clear
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastallocator.h
;	COMDAT ?clear@?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAEXXZ
_TEXT	SEGMENT
?clear@?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAEXXZ PROC ; FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::clear, COMDAT
; _this$ = ecx

; 200  : 		m_uiFirstEmpty = ms_uiAnchorNodeIndex;
; 201  : 		m_vec.clear();

	xor	eax, eax
	mov	DWORD PTR [ecx], 268435455		; 0fffffffH
	mov	DWORD PTR [ecx+12], eax

; 202  : 		m_uiSize = 0;

	mov	DWORD PTR [ecx+4], eax

; 203  : 	};

	ret	0
?clear@?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAEXXZ ENDP ; FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::clear
_TEXT	ENDS
PUBLIC	??0iterator@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAE@XZ ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::iterator::iterator
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastlist.h
;	COMDAT ??0iterator@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAE@XZ PROC ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::iterator::iterator, COMDAT
; _this$ = ecx

; 378  : 		explicit iterator(){};

	mov	eax, ecx
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 268435455		; 0fffffffH
	ret	0
??0iterator@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAE@XZ ENDP ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Diterator@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAEAAU?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@XZ ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::iterator::operator*
; Function compile flags: /Ogtpy
;	COMDAT ??Diterator@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAEAAU?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@XZ
_TEXT	SEGMENT
??Diterator@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAEAAU?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@XZ PROC ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::iterator::operator*, COMDAT
; _this$ = ecx

; 384  : 			return m_pFastList->get_allocator()[ m_uiCurrPos ];

	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+8]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [edx+eax*4]

; 385  : 		};

	ret	0
??Diterator@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAEAAU?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@XZ ENDP ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::iterator::operator*
_TEXT	ENDS
PUBLIC	??E?$base_iterator@Vbase_iterator_tail@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAEAAV01@XZ ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator<FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator_tail>::operator++
; Function compile flags: /Ogtpy
;	COMDAT ??E?$base_iterator@Vbase_iterator_tail@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$base_iterator@Vbase_iterator_tail@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAEAAV01@XZ PROC ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator<FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator_tail>::operator++, COMDAT
; _this$ = ecx

; 310  : 		base_iterator& operator++(){

	mov	eax, ecx

; 311  : 			if( m_uiCurrPos == ANCHOR_NODE_INDEX ){

	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, 268435455				; 0fffffffH
	jne	SHORT $LN2@operator@4

; 312  : 				m_uiCurrPos = m_pFastList->m_uiFirst;

	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+4], edx

; 315  : 			}
; 316  : 			return *this;
; 317  : 		};

	ret	0
$LN2@operator@4:

; 313  : 			}else{
; 314  : 				m_uiCurrPos = m_pFastList->get_allocator()[ m_uiCurrPos ].LIST_GetNext();

	mov	edx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx+8]
	lea	ecx, DWORD PTR [ecx+ecx*2]
	mov	ecx, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR [eax+4], ecx

; 315  : 			}
; 316  : 			return *this;
; 317  : 		};

	ret	0
??E?$base_iterator@Vbase_iterator_tail@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAEAAV01@XZ ENDP ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator<FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator_tail>::operator++
_TEXT	ENDS
PUBLIC	?push_back_existing@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAEXI@Z ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::push_back_existing
; Function compile flags: /Ogtpy
;	COMDAT ?push_back_existing@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAEXI@Z
_TEXT	SEGMENT
_uiNewIndex$ = 8					; size = 4
?push_back_existing@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAEXI@Z PROC ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::push_back_existing, COMDAT
; _this$ = ecx

; 495  : 		unsigned int uiOldLast = m_uiLast;
; 496  : 		m_uiLast = uiNewIndex;

	mov	eax, DWORD PTR _uiNewIndex$[esp-4]

; 497  : 		m_uiSize++;

	inc	DWORD PTR [ecx+20]

; 498  : 		if( m_uiFirst == ANCHOR_NODE_INDEX ) m_uiFirst = m_uiLast;

	cmp	DWORD PTR [ecx+24], 268435455		; 0fffffffH
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR [ecx+28], eax
	jne	SHORT $LN1@push_back_
	mov	DWORD PTR [ecx+24], eax
$LN1@push_back_:

; 499  : 		InsertAfter(m_uiLast, uiOldLast);

	push	edx
	push	eax
	call	?InsertAfter@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@IAEXII@Z ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::InsertAfter

; 500  : 	};

	ret	4
?push_back_existing@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAEXI@Z ENDP ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::push_back_existing
_TEXT	ENDS
PUBLIC	?UnLink@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@IAEXII@Z ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::UnLink
; Function compile flags: /Ogtpy
;	COMDAT ?UnLink@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@IAEXII@Z
_TEXT	SEGMENT
_uiStart$ = 8						; size = 4
tv379 = 12						; size = 4
_uiEnd$ = 12						; size = 4
?UnLink@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@IAEXII@Z PROC ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::UnLink, COMDAT
; _this$ = ecx

; 657  : 		if( uiStart == ANCHOR_NODE_INDEX ){ return; }

	mov	eax, DWORD PTR _uiStart$[esp-4]
	cmp	eax, 268435455				; 0fffffffH
	je	$LN3@UnLink
	push	esi

; 658  : 		assert( get_allocator().is_element_valid(uiStart) );
; 659  : 
; 660  : 		if( uiStart == m_uiFirst){ m_uiFirst = uiEnd; }

	mov	esi, DWORD PTR _uiEnd$[esp]
	cmp	eax, DWORD PTR [ecx+24]
	jne	SHORT $LN7@UnLink
	mov	DWORD PTR [ecx+24], esi
$LN7@UnLink:

; 661  : 		uiStart = get_allocator()[uiStart].LIST_GetPrev();

	mov	edx, DWORD PTR [ecx+8]
	lea	eax, DWORD PTR [eax+eax*2]
	mov	eax, DWORD PTR [edx+eax*4+4]
	and	eax, 2147483647				; 7fffffffH
	push	edi
	mov	DWORD PTR _uiStart$[esp+4], eax

; 662  : 		if( uiEnd == ANCHOR_NODE_INDEX ){

	cmp	esi, 268435455				; 0fffffffH
	jne	SHORT $LN6@UnLink

; 663  : 			uiEnd = m_uiLast;

	mov	edi, DWORD PTR [ecx+28]

; 664  : 			m_uiLast = uiStart;

	mov	DWORD PTR [ecx+28], eax

; 665  : 		}else{

	jmp	SHORT $LN78@UnLink
$LN6@UnLink:

; 666  : 			assert( get_allocator().is_element_valid(uiEnd) );
; 667  : 			uiEnd = get_allocator()[uiEnd].LIST_GetPrev();

	lea	esi, DWORD PTR [esi+esi*2]
	mov	edi, DWORD PTR [edx+esi*4+4]
	and	edi, 2147483647				; 7fffffffH
$LN78@UnLink:

; 668  : 		}
; 669  : 
; 670  : 		while( uiStart != uiEnd ){

	cmp	eax, edi
	je	$LN82@UnLink
	push	ebx
	push	ebp
$LL4@UnLink:

; 671  : 			T& kEnd = get_allocator()[uiEnd];

	mov	edx, DWORD PTR [ecx+8]
	lea	eax, DWORD PTR [edi+edi*2]
	add	eax, eax
	add	eax, eax

; 672  : 			unsigned int uiNext = kEnd.LIST_GetNext();
; 673  : 			unsigned int uiPrev = kEnd.LIST_GetPrev();

	mov	esi, DWORD PTR [eax+edx+4]
	mov	ebx, DWORD PTR [eax+edx]
	lea	ebp, DWORD PTR [eax+edx+4]
	and	esi, 2147483647				; 7fffffffH
	mov	DWORD PTR tv379[esp+12], ebp

; 674  : 			if( uiNext != ANCHOR_NODE_INDEX ) get_allocator()[uiNext].LIST_SetPrev( uiPrev );

	cmp	ebx, 268435455				; 0fffffffH
	je	SHORT $LN43@UnLink
	lea	ebp, DWORD PTR [ebx+ebx*2]
	lea	edx, DWORD PTR [edx+ebp*4]
	mov	ebp, DWORD PTR [edx+4]
	xor	ebp, esi
	and	ebp, 2147483647				; 7fffffffH
	xor	DWORD PTR [edx+4], ebp
	mov	ebp, DWORD PTR tv379[esp+12]
$LN43@UnLink:

; 675  : 			if( uiPrev != ANCHOR_NODE_INDEX ) get_allocator()[uiPrev].LIST_SetNext( uiNext );

	cmp	esi, 268435455				; 0fffffffH
	je	SHORT $LN51@UnLink
	mov	ebp, DWORD PTR [ecx+8]
	lea	edx, DWORD PTR [esi+esi*2]
	mov	DWORD PTR [ebp+edx*4], ebx
	mov	ebp, DWORD PTR tv379[esp+12]
$LN51@UnLink:

; 676  : 			kEnd.LIST_SetDeleted(true);

	and	DWORD PTR [ebp], 2147483647		; 7fffffffH

; 677  : 			get_allocator().FreeIfDeleted(uiEnd);

	mov	ebp, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR [eax+ebp+4]
	shr	edx, 31					; 0000001fH
	not	dl
	test	dl, 1
	je	SHORT $LN80@UnLink
	mov	edx, DWORD PTR [ecx]
	cmp	edi, edx
	jae	SHORT $LN58@UnLink
	mov	DWORD PTR [eax+ebp], edx
	mov	DWORD PTR [ecx], edi
	jmp	SHORT $LN76@UnLink
$LN58@UnLink:
	lea	edx, DWORD PTR [edx+edx*2]
	mov	ebx, DWORD PTR [ebp+edx*4]
	lea	edx, DWORD PTR [ebp+edx*4]
	mov	DWORD PTR [eax+ebp], ebx
	mov	DWORD PTR [edx], edi
$LN76@UnLink:
	dec	DWORD PTR [ecx+4]
$LN80@UnLink:

; 678  : 
; 679  : 			m_uiSize--;

	dec	DWORD PTR [ecx+20]

; 680  : 
; 681  : 			uiEnd = uiPrev;

	mov	edi, esi
	cmp	DWORD PTR _uiStart$[esp+12], esi
	jne	$LL4@UnLink
	pop	ebp
	pop	ebx
$LN82@UnLink:
	pop	edi
	pop	esi
$LN3@UnLink:

; 682  : 		}
; 683  : 	};

	ret	8
?UnLink@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@IAEXII@Z ENDP ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::UnLink
_TEXT	ENDS
PUBLIC	??1?$FFastVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAE@XZ ; FFastVector<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::~FFastVector<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ??1?$FFastVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAE@XZ
_TEXT	SEGMENT
??1?$FFastVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAE@XZ PROC ; FFastVector<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::~FFastVector<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>, COMDAT
; _this$ = ecx

; 317  : 		Free(m_pData, m_uiCurrSize);

	mov	ecx, DWORD PTR [ecx]
	push	ecx
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	pop	ecx

; 318  : 	};

	ret	0
??1?$FFastVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAE@XZ ENDP ; FFastVector<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::~FFastVector<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>
_TEXT	ENDS
PUBLIC	??0iterator@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAE@IPAV1@@Z ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::iterator::iterator
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastlist.h
;	COMDAT ??0iterator@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAE@IPAV1@@Z
_TEXT	SEGMENT
_uiPos$ = 8						; size = 4
_pVec$ = 12						; size = 4
??0iterator@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAE@IPAV1@@Z PROC ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::iterator::iterator, COMDAT
; _this$ = ecx

; 379  : 		explicit iterator( unsigned int uiPos, TYPE* pVec )

	mov	edx, DWORD PTR _uiPos$[esp-4]
	mov	eax, ecx
	mov	ecx, DWORD PTR _pVec$[esp-4]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	ret	8
??0iterator@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAE@IPAV1@@Z ENDP ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::iterator::iterator
_TEXT	ENDS
PUBLIC	?SetSize@?$FFastVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@IAEXI@Z ; FFastVector<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::SetSize
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ?SetSize@?$FFastVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@IAEXI@Z
_TEXT	SEGMENT
_pTemp$ = -8						; size = 4
_nOld$ = -4						; size = 4
_uiFit$ = 8						; size = 4
?SetSize@?$FFastVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@IAEXI@Z PROC ; FFastVector<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::SetSize, COMDAT
; _this$ = ecx

; 468  : 	void SetSize(unsigned int uiFit){

	sub	esp, 8
	push	ebx
	push	ebp

; 469  : 
; 470  : 		unsigned int nOld = m_uiCurrSize;
; 471  : 
; 472  : 		m_uiCurrSize = MIN( m_uiCurrSize, uiFit );

	mov	ebp, DWORD PTR _uiFit$[esp+12]
	push	esi
	mov	ebx, ecx
	mov	eax, DWORD PTR [ebx+4]
	lea	esi, DWORD PTR [ebx+4]
	mov	DWORD PTR _nOld$[esp+20], eax
	cmp	ebp, eax
	push	edi
	lea	eax, DWORD PTR _uiFit$[esp+20]
	jb	SHORT $LN17@SetSize
	mov	eax, esi
$LN17@SetSize:
	mov	ecx, DWORD PTR [eax]

; 473  : 
; 474  : 		T* pTemp = NULL;

	xor	edi, edi
	mov	DWORD PTR [esi], ecx

; 475  : 		if( uiFit > 0 ){

	cmp	ebp, edi
	jbe	SHORT $LN9@SetSize

; 476  : 			pTemp = Alloc(uiFit);

	push	85					; 00000055H
	lea	edx, DWORD PTR [ebp+ebp*2]
	push	OFFSET ??_C@_0GH@ECFAPJEJ@c?3?2users?2enormousapplepie?2docume@
	add	edx, edx
	add	edx, edx
	push	4
	push	edx
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR [ebx+8], ebp
	mov	DWORD PTR _pTemp$[esp+24], eax

; 477  : 			if (pTemp)

	cmp	eax, edi
	je	SHORT $LN8@SetSize

; 478  : 			{
; 479  : 				if( bPODType ){
; 480  : 					memcpy( (void*)pTemp, (void*)m_pData, sizeof(T)*m_uiCurrSize);
; 481  : 				}else{
; 482  : 					for(unsigned int i = 0; i < m_uiCurrSize; ++i)

	cmp	DWORD PTR [esi], edi
	jbe	SHORT $LN3@SetSize
	xor	edx, edx
	mov	ecx, eax
$LL5@SetSize:

; 483  : 						new( (void*)&(pTemp[i]) )T( m_pData[i]);

	test	ecx, ecx
	je	SHORT $LN4@SetSize
	mov	eax, DWORD PTR [ebx]
	mov	ebp, DWORD PTR [eax+edx]
	add	eax, edx
	mov	DWORD PTR [ecx], ebp
	mov	ebp, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], ebp
	mov	eax, DWORD PTR [eax+8]
	mov	ebp, DWORD PTR _uiFit$[esp+20]
	mov	DWORD PTR [ecx+8], eax
$LN4@SetSize:
	inc	edi
	add	edx, 12					; 0000000cH
	add	ecx, 12					; 0000000cH
	cmp	edi, DWORD PTR [esi]
	jb	SHORT $LL5@SetSize
$LN3@SetSize:

; 491  : 				return;
; 492  : 			}
; 493  : 		}
; 494  : 		else

	mov	edi, DWORD PTR _pTemp$[esp+24]
	mov	DWORD PTR [ebx+8], ebp
	jmp	SHORT $LN1@SetSize
$LN8@SetSize:

; 484  : 				}
; 485  : 				m_uiCurrMaxSize = uiFit;
; 486  : 			}
; 487  : 			else
; 488  : 			{
; 489  : 				FAssertMsg2(0, "Failed to set array size from %u to %u", nOld, uiFit);
; 490  : 				m_uiCurrSize = nOld;

	mov	ecx, DWORD PTR _nOld$[esp+24]
	pop	edi
	mov	DWORD PTR [esi], ecx
	pop	esi
	pop	ebp
	pop	ebx

; 500  : 	};

	add	esp, 8
	ret	4
$LN9@SetSize:

; 495  : 		{
; 496  : 			m_uiCurrMaxSize = 0;

	mov	DWORD PTR [ebx+8], edi
$LN1@SetSize:

; 497  : 		}
; 498  : 		Free(m_pData, nOld);

	mov	eax, DWORD PTR [ebx]
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4

; 499  : 		m_pData = pTemp;

	mov	DWORD PTR [ebx], edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 500  : 	};

	add	esp, 8
	ret	4
?SetSize@?$FFastVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@IAEXI@Z ENDP ; FFastVector<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::SetSize
_TEXT	ENDS
PUBLIC	??0?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAE@XZ ; FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastallocator.h
;	COMDAT ??0?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAE@XZ
_TEXT	SEGMENT
??0?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAE@XZ PROC ; FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>, COMDAT
; _this$ = ecx

; 73   : 		: m_uiFirstEmpty(ms_uiAnchorNodeIndex), m_uiSize(0) {};

	mov	eax, ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax], 268435455		; 0fffffffH
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], ecx
	mov	DWORD PTR [eax+8], ecx
	ret	0
??0?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAE@XZ ENDP ; FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>
_TEXT	ENDS
PUBLIC	?GrowSize@?$FFastVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@IAEXI@Z ; FFastVector<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::GrowSize
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ?GrowSize@?$FFastVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@IAEXI@Z
_TEXT	SEGMENT
_uiFit$ = 8						; size = 4
?GrowSize@?$FFastVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@IAEXI@Z PROC ; FFastVector<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::GrowSize, COMDAT
; _this$ = ecx

; 422  : 	{

	push	ebx
	push	ebp
	push	esi
	mov	esi, ecx

; 423  : 		unsigned int nOld = m_uiCurrMaxSize;

	mov	eax, DWORD PTR [esi+8]
	push	edi
	mov	ebp, eax

; 424  : 		if( m_uiCurrMaxSize == 0 ) m_uiCurrMaxSize = 1;

	test	eax, eax
	jne	SHORT $LN34@GrowSize
	mov	DWORD PTR [esi+8], 1
$LN34@GrowSize:

; 425  : 		while( uiFit >= m_uiCurrMaxSize ){

	mov	edx, DWORD PTR _uiFit$[esp+12]
	cmp	edx, DWORD PTR [esi+8]
	jb	SHORT $LN9@GrowSize
	npad	1
$LL10@GrowSize:

; 426  : 
; 427  : 			//Try to double size...
; 428  : 			UINT uiNewSize = m_uiCurrMaxSize<<1;

	mov	eax, DWORD PTR [esi+8]
	lea	ecx, DWORD PTR [eax+eax]

; 429  : 
; 430  : 			//...on overflow bail and set to exact size
; 431  : 			if( uiNewSize < m_uiCurrMaxSize ){

	cmp	ecx, eax
	jb	SHORT $LN37@GrowSize

; 433  : 				break;
; 434  : 			}
; 435  : 
; 436  : 			//...otherwise use the doubled size
; 437  : 			m_uiCurrMaxSize = uiNewSize;

	mov	DWORD PTR [esi+8], ecx
	cmp	edx, ecx
	jae	SHORT $LL10@GrowSize

; 429  : 
; 430  : 			//...on overflow bail and set to exact size
; 431  : 			if( uiNewSize < m_uiCurrMaxSize ){

	jmp	SHORT $LN9@GrowSize
$LN37@GrowSize:

; 432  : 				m_uiCurrMaxSize = uiFit;

	mov	DWORD PTR [esi+8], edx
$LN9@GrowSize:

; 438  : 		}
; 439  : 
; 440  : 		T* pTemp = Alloc(m_uiCurrMaxSize);

	mov	edi, DWORD PTR [esi+8]
	test	edi, edi
	jbe	SHORT $LN7@GrowSize
	push	85					; 00000055H
	lea	eax, DWORD PTR [edi+edi*2]
	push	OFFSET ??_C@_0GH@ECFAPJEJ@c?3?2users?2enormousapplepie?2docume@
	add	eax, eax
	add	eax, eax
	push	4
	push	eax
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	mov	ebx, eax
	add	esp, 16					; 00000010H
	mov	DWORD PTR [esi+8], edi

; 441  : 		if (pTemp)

	test	ebx, ebx
	je	SHORT $LN7@GrowSize

; 442  : 		{
; 443  : 			if( bPODType ){
; 444  : 				memcpy( (void*)pTemp, (void*)m_pData, sizeof(T)*m_uiCurrSize);
; 445  : 			}else{
; 446  : 				for(unsigned int i = 0; i < m_uiCurrSize; ++i)

	xor	edi, edi
	cmp	DWORD PTR [esi+4], edi
	jbe	SHORT $LN2@GrowSize
	xor	edx, edx
	mov	ecx, ebx
	npad	6
$LL41@GrowSize:

; 447  : 					new( (void*)&(pTemp[i]) )T( m_pData[i]);

	test	ecx, ecx
	je	SHORT $LN3@GrowSize
	mov	eax, DWORD PTR [esi]
	mov	ebp, DWORD PTR [eax+edx]
	add	eax, edx
	mov	DWORD PTR [ecx], ebp
	mov	ebp, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], ebp
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
$LN3@GrowSize:
	inc	edi
	add	edx, 12					; 0000000cH
	add	ecx, 12					; 0000000cH
	cmp	edi, DWORD PTR [esi+4]
	jb	SHORT $LL41@GrowSize
$LN2@GrowSize:

; 448  : 			}
; 449  : 			Free(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR [esi]
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
	pop	edi

; 450  : 			m_pData = pTemp;

	mov	DWORD PTR [esi], ebx
	pop	esi
	pop	ebp
	pop	ebx

; 456  : 		}
; 457  : 	};

	ret	4
$LN7@GrowSize:
	pop	edi

; 451  : 		}
; 452  : 		else
; 453  : 		{
; 454  : 			FAssertMsg2(0, "Failed to grow array size from %u to %u", nOld, m_uiCurrMaxSize);
; 455  : 			m_uiCurrMaxSize = nOld;

	mov	DWORD PTR [esi+8], ebp
	pop	esi
	pop	ebp
	pop	ebx

; 456  : 		}
; 457  : 	};

	ret	4
?GrowSize@?$FFastVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@IAEXI@Z ENDP ; FFastVector<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::GrowSize
_TEXT	ENDS
PUBLIC	??0iterator@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAE@XZ ; FFastList<CvFlavorRecipient *,297,0>::iterator::iterator
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastlist.h
;	COMDAT ??0iterator@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAE@XZ PROC ; FFastList<CvFlavorRecipient *,297,0>::iterator::iterator, COMDAT
; _this$ = ecx

; 133  : 		explicit iterator(){};

	mov	eax, ecx
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 268435455		; 0fffffffH
	ret	0
??0iterator@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAE@XZ ENDP ; FFastList<CvFlavorRecipient *,297,0>::iterator::iterator
_TEXT	ENDS
PUBLIC	??Diterator@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAEAAPAVCvFlavorRecipient@@XZ ; FFastList<CvFlavorRecipient *,297,0>::iterator::operator*
; Function compile flags: /Ogtpy
;	COMDAT ??Diterator@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAEAAPAVCvFlavorRecipient@@XZ
_TEXT	SEGMENT
??Diterator@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAEAAPAVCvFlavorRecipient@@XZ PROC ; FFastList<CvFlavorRecipient *,297,0>::iterator::operator*, COMDAT
; _this$ = ecx

; 138  : 		T& operator*(){  return BASE_TYPE::iterator::operator*().data; };

	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+8]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [edx+eax*4+8]
	ret	0
??Diterator@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAEAAPAVCvFlavorRecipient@@XZ ENDP ; FFastList<CvFlavorRecipient *,297,0>::iterator::operator*
_TEXT	ENDS
PUBLIC	??E?$base_iterator@Vbase_iterator_tail@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAE?BV01@H@Z ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator<FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator_tail>::operator++
; Function compile flags: /Ogtpy
;	COMDAT ??E?$base_iterator@Vbase_iterator_tail@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAE?BV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_notused$ = 12						; size = 4
??E?$base_iterator@Vbase_iterator_tail@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAE?BV01@H@Z PROC ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator<FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator_tail>::operator++, COMDAT
; _this$ = ecx

; 305  : #endif
; 306  : 			base_iterator temp = *this;

	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx

; 307  : 			++(*this);

	cmp	edx, 268435455				; 0fffffffH
	jne	SHORT $LN4@operator@5
	mov	edx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [edx+24]
	mov	DWORD PTR [ecx+4], edx

; 308  : 			return temp;
; 309  : 		};

	ret	8

; 307  : 			++(*this);

$LN4@operator@5:
	push	esi
	mov	esi, DWORD PTR [ecx]
	mov	esi, DWORD PTR [esi+8]
	lea	edx, DWORD PTR [edx+edx*2]
	mov	edx, DWORD PTR [esi+edx*4]
	pop	esi
	mov	DWORD PTR [ecx+4], edx

; 308  : 			return temp;
; 309  : 		};

	ret	8
??E?$base_iterator@Vbase_iterator_tail@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAE?BV01@H@Z ENDP ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator<FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator_tail>::operator++
_TEXT	ENDS
PUBLIC	?clear@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAEXXZ ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::clear
; Function compile flags: /Ogtpy
;	COMDAT ?clear@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAEXXZ
_TEXT	SEGMENT
?clear@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAEXXZ PROC ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::clear, COMDAT
; _this$ = ecx

; 527  : 		UnLink( m_uiFirst, ANCHOR_NODE_INDEX );

	mov	eax, DWORD PTR [ecx+24]
	push	268435455				; 0fffffffH
	push	eax
	call	?UnLink@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@IAEXII@Z ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::UnLink

; 528  : 	};

	ret	0
?clear@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAEXXZ ENDP ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::clear
_TEXT	ENDS
PUBLIC	?erase@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAE?AViterator@1@V21@@Z ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::erase
; Function compile flags: /Ogtpy
;	COMDAT ?erase@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAE?AViterator@1@V21@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_it$ = 12						; size = 8
?erase@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAE?AViterator@1@V21@@Z PROC ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::erase, COMDAT
; _this$ = ecx

; 565  : 		const unsigned int uiNext = get_allocator()[it.get_index()].LIST_GetNext();

	mov	eax, DWORD PTR _it$[esp]
	push	esi
	mov	esi, ecx
	mov	edx, DWORD PTR [esi+8]
	push	edi
	lea	ecx, DWORD PTR [eax+eax*2]
	mov	edi, DWORD PTR [edx+ecx*4]

; 566  : 		UnLink( it.get_index(), uiNext );

	push	edi
	push	eax
	mov	ecx, esi
	call	?UnLink@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@IAEXII@Z ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::UnLink

; 567  : 		return iterator( uiNext, this );

	mov	eax, DWORD PTR ___$ReturnUdt$[esp+4]
	mov	DWORD PTR [eax+4], edi
	pop	edi
	mov	DWORD PTR [eax], esi
	pop	esi

; 568  : 	};

	ret	12					; 0000000cH
?erase@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAE?AViterator@1@V21@@Z ENDP ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::erase
_TEXT	ENDS
PUBLIC	??1?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAE@XZ ; FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::~FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastallocator.h
;	COMDAT ??1?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAE@XZ
_TEXT	SEGMENT
??1?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAE@XZ PROC ; FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::~FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>, COMDAT
; _this$ = ecx

; 76   : 	~FFastAllocator(){ assert( m_uiSize == 0); };

	mov	ecx, DWORD PTR [ecx+8]
	push	ecx
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	pop	ecx
	ret	0
??1?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAE@XZ ENDP ; FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::~FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>
_TEXT	ENDS
PUBLIC	??0iterator@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAE@IPAV1@@Z ; FFastList<CvFlavorRecipient *,297,0>::iterator::iterator
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastlist.h
;	COMDAT ??0iterator@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAE@IPAV1@@Z
_TEXT	SEGMENT
_uiPos$ = 8						; size = 4
_pVec$ = 12						; size = 4
??0iterator@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAE@IPAV1@@Z PROC ; FFastList<CvFlavorRecipient *,297,0>::iterator::iterator, COMDAT
; _this$ = ecx

; 134  : 		explicit iterator( unsigned int uiPos, TYPE* pVec ) 

	mov	edx, DWORD PTR _uiPos$[esp-4]
	mov	eax, ecx
	mov	ecx, DWORD PTR _pVec$[esp-4]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	ret	8
??0iterator@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAE@IPAV1@@Z ENDP ; FFastList<CvFlavorRecipient *,297,0>::iterator::iterator
_TEXT	ENDS
PUBLIC	?GrowSizeToFit@?$FFastVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@IAEXI@Z ; FFastVector<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::GrowSizeToFit
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ?GrowSizeToFit@?$FFastVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@IAEXI@Z
_TEXT	SEGMENT
_uiFit$ = 8						; size = 4
?GrowSizeToFit@?$FFastVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@IAEXI@Z PROC ; FFastVector<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::GrowSizeToFit, COMDAT
; _this$ = ecx

; 462  : 		if( uiFit <= m_uiCurrMaxSize )

	mov	eax, DWORD PTR _uiFit$[esp-4]
	cmp	eax, DWORD PTR [ecx+8]
	jbe	SHORT $LN2@GrowSizeTo

; 463  : 			return;
; 464  : 
; 465  : 		SetSize(uiFit);

	mov	DWORD PTR _uiFit$[esp-4], eax
	jmp	?SetSize@?$FFastVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@IAEXI@Z ; FFastVector<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::SetSize
$LN2@GrowSizeTo:

; 466  : 	};

	ret	4
?GrowSizeToFit@?$FFastVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@IAEXI@Z ENDP ; FFastVector<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::GrowSizeToFit
_TEXT	ENDS
PUBLIC	??0?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@IAE@XZ ; FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> >::FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> >
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastlist.h
;	COMDAT ??0?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@IAE@XZ
_TEXT	SEGMENT
??0?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@IAE@XZ PROC ; FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> >::FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> >, COMDAT
; _this$ = ecx

; 697  : 	FCustomList_Tail_Member(){};

	mov	eax, ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax], 268435455		; 0fffffffH
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], ecx
	mov	DWORD PTR [eax+8], ecx
	ret	0
??0?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@IAE@XZ ENDP ; FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> >::FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> >
_TEXT	ENDS
PUBLIC	?push_back@?$FFastVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAEIABU?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@@Z ; FFastVector<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::push_back
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ?push_back@?$FFastVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAEIABU?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@@Z
_TEXT	SEGMENT
_element$ = 8						; size = 4
?push_back@?$FFastVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAEIABU?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@@Z PROC ; FFastVector<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::push_back, COMDAT
; _this$ = ecx

; 376  : 	{

	push	esi
	mov	esi, ecx

; 377  : 		if( m_uiCurrSize == m_uiCurrMaxSize )

	mov	eax, DWORD PTR [esi+8]
	cmp	DWORD PTR [esi+4], eax
	jne	SHORT $LN1@push_back

; 378  : 			GrowSize(m_uiCurrMaxSize);

	push	eax
	call	?GrowSize@?$FFastVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@IAEXI@Z ; FFastVector<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::GrowSize
$LN1@push_back:

; 379  : 		new( (void*)&m_pData[m_uiCurrSize] )T(element);

	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [esi]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*4]
	test	eax, eax
	je	SHORT $LN4@push_back
	mov	ecx, DWORD PTR _element$[esp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], ecx
$LN4@push_back:

; 380  : 		return m_uiCurrSize++;

	mov	eax, DWORD PTR [esi+4]
	lea	edx, DWORD PTR [eax+1]
	mov	DWORD PTR [esi+4], edx
	pop	esi

; 381  : 	};

	ret	4
?push_back@?$FFastVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAEIABU?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@@Z ENDP ; FFastVector<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::push_back
_TEXT	ENDS
PUBLIC	?clear@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAEXXZ ; FFastList<CvFlavorRecipient *,297,0>::clear
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastlist.h
;	COMDAT ?clear@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAEXXZ
_TEXT	SEGMENT
?clear@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAEXXZ PROC ; FFastList<CvFlavorRecipient *,297,0>::clear, COMDAT
; _this$ = ecx

; 194  : 	void clear(){ BASE_TYPE::clear(); };

	mov	eax, DWORD PTR [ecx+24]
	push	268435455				; 0fffffffH
	push	eax
	call	?UnLink@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@IAEXII@Z ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::UnLink
	ret	0
?clear@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAEXXZ ENDP ; FFastList<CvFlavorRecipient *,297,0>::clear
_TEXT	ENDS
PUBLIC	?begin@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAE?AViterator@1@XZ ; FFastList<CvFlavorRecipient *,297,0>::begin
; Function compile flags: /Ogtpy
;	COMDAT ?begin@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAE?AViterator@1@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAE?AViterator@1@XZ PROC ; FFastList<CvFlavorRecipient *,297,0>::begin, COMDAT
; _this$ = ecx

; 199  : 	iterator begin(){ return iterator( m_uiFirst, this ); };

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+4], ecx
	ret	4
?begin@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAE?AViterator@1@XZ ENDP ; FFastList<CvFlavorRecipient *,297,0>::begin
_TEXT	ENDS
PUBLIC	?end@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAE?AViterator@1@XZ ; FFastList<CvFlavorRecipient *,297,0>::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAE?AViterator@1@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAE?AViterator@1@XZ PROC ; FFastList<CvFlavorRecipient *,297,0>::end, COMDAT
; _this$ = ecx

; 200  : 	iterator end(){ return iterator( ANCHOR_NODE_INDEX, this ); };

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], 268435455		; 0fffffffH
	ret	4
?end@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAE?AViterator@1@XZ ENDP ; FFastList<CvFlavorRecipient *,297,0>::end
_TEXT	ENDS
PUBLIC	?erase@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAE?AViterator@1@V21@@Z ; FFastList<CvFlavorRecipient *,297,0>::erase
; Function compile flags: /Ogtpy
;	COMDAT ?erase@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAE?AViterator@1@V21@@Z
_TEXT	SEGMENT
$T220840 = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
_it$ = 12						; size = 8
?erase@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAE?AViterator@1@V21@@Z PROC ; FFastList<CvFlavorRecipient *,297,0>::erase, COMDAT
; _this$ = ecx

; 227  : 		return iterator( BASE_TYPE::erase( it ).get_index(), this );

	mov	eax, DWORD PTR _it$[esp]
	sub	esp, 8
	push	esi
	mov	esi, ecx
	mov	ecx, DWORD PTR _it$[esp+8]
	push	eax
	push	ecx
	lea	edx, DWORD PTR $T220840[esp+20]
	push	edx
	mov	ecx, esi
	call	?erase@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAE?AViterator@1@V21@@Z ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::erase
	mov	ecx, eax
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+8]
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [eax+4], ecx
	pop	esi

; 228  : 	};

	add	esp, 8
	ret	12					; 0000000cH
?erase@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAE?AViterator@1@V21@@Z ENDP ; FFastList<CvFlavorRecipient *,297,0>::erase
_TEXT	ENDS
PUBLIC	??1?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@IAE@XZ ; FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> >::~FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@IAE@XZ
_TEXT	SEGMENT
??1?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@IAE@XZ PROC ; FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> >::~FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> >, COMDAT
; _this$ = ecx

; 700  : 	~FCustomList_Tail_Member(){ m_kAllocator.clear(); };

	xor	eax, eax
	mov	DWORD PTR [ecx], 268435455		; 0fffffffH
	mov	DWORD PTR [ecx+12], eax
	mov	DWORD PTR [ecx+4], eax
	mov	ecx, DWORD PTR [ecx+8]
	push	ecx
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	pop	ecx
	ret	0
??1?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@IAE@XZ ENDP ; FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> >::~FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> >
_TEXT	ENDS
PUBLIC	?reserve@?$FFastVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAEXI@Z ; FFastVector<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::reserve
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ?reserve@?$FFastVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAEXI@Z
_TEXT	SEGMENT
_uiResSize$ = 8						; size = 4
?reserve@?$FFastVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAEXI@Z PROC ; FFastVector<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::reserve, COMDAT
; _this$ = ecx

; 334  : 		GrowSizeToFit(uiResSize);

	mov	eax, DWORD PTR _uiResSize$[esp-4]
	cmp	eax, DWORD PTR [ecx+8]
	jbe	SHORT $LN4@reserve
	mov	DWORD PTR _uiResSize$[esp-4], eax
	jmp	?SetSize@?$FFastVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@IAEXI@Z ; FFastVector<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::SetSize
$LN4@reserve:

; 335  : 	};

	ret	4
?reserve@?$FFastVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAEXI@Z ENDP ; FFastVector<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::reserve
_TEXT	ENDS
PUBLIC	??0?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@IAE@XZ ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastlist.h
;	COMDAT ??0?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@IAE@XZ
_TEXT	SEGMENT
??0?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@IAE@XZ PROC ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >, COMDAT
; _this$ = ecx

; 416  : 		: TAIL(), m_uiFirst( ANCHOR_NODE_INDEX ), m_uiLast( ANCHOR_NODE_INDEX ), m_uiSize(0) {};

	mov	eax, ecx
	xor	ecx, ecx
	mov	edx, 268435455				; 0fffffffH
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+20], ecx
	mov	DWORD PTR [eax+24], edx
	mov	DWORD PTR [eax+28], edx
	ret	0
??0?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@IAE@XZ ENDP ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >
_TEXT	ENDS
PUBLIC	?Alloc@?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAEIABU?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@@Z ; FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::Alloc
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastallocator.h
;	COMDAT ?Alloc@?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAEIABU?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
?Alloc@?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAEIABU?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@@Z PROC ; FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::Alloc, COMDAT
; _this$ = ecx

; 90   : 	{

	push	ebx
	push	edi
	mov	edi, ecx

; 91   : 		unsigned int uiPos;
; 92   : 
; 93   : 		//If there are no pre-allocated spots, get a new one
; 94   : 		if( m_uiFirstEmpty == ms_uiAnchorNodeIndex )

	mov	ebx, DWORD PTR [edi]
	cmp	ebx, 268435455				; 0fffffffH
	jne	SHORT $LN2@Alloc@2

; 95   : 		{
; 96   : 			uiPos = m_vec.size();
; 97   : 			unsigned int uiIndex = m_vec.push_back( x );

	mov	eax, DWORD PTR [edi+16]
	mov	ebx, DWORD PTR [edi+12]
	cmp	DWORD PTR [edi+12], eax
	push	esi
	lea	esi, DWORD PTR [edi+8]
	jne	SHORT $LN9@Alloc@2
	push	eax
	mov	ecx, esi
	call	?GrowSize@?$FFastVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@IAEXI@Z ; FFastVector<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::GrowSize
$LN9@Alloc@2:
	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [esi]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*4]
	test	eax, eax
	je	SHORT $LN12@Alloc@2
	mov	ecx, DWORD PTR _x$[esp+8]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], ecx
$LN12@Alloc@2:
	mov	eax, DWORD PTR [esi+4]
	lea	edx, DWORD PTR [eax+1]
	mov	DWORD PTR [esi+4], edx

; 98   : 			m_vec[uiIndex].ALLOC_SetDeleted(false);

	mov	ecx, DWORD PTR [esi]
	lea	eax, DWORD PTR [eax+eax*2]

; 108  : 			pTemp->ALLOC_SetDeleted(false);

	or	DWORD PTR [ecx+eax*4+4], -2147483648	; 80000000H

; 109  : 		}
; 110  : 		m_uiSize++;

	inc	DWORD PTR [edi+4]
	lea	eax, DWORD PTR [ecx+eax*4]
	pop	esi
	pop	edi

; 111  : 		return uiPos;

	mov	eax, ebx
	pop	ebx

; 112  : 	};

	ret	4
$LN2@Alloc@2:

; 99   : 		}
; 100  : 
; 101  : 		//Otherwise reuse an old spot after deleting it's previous contents
; 102  : 		else{
; 103  : 			uiPos = m_uiFirstEmpty;
; 104  : 			T* pTemp = &m_vec[uiPos];

	mov	eax, DWORD PTR [edi+8]
	lea	edx, DWORD PTR [ebx+ebx*2]

; 105  : 			m_uiFirstEmpty = pTemp->ALLOC_GetNext();

	mov	ecx, DWORD PTR [eax+edx*4]
	lea	eax, DWORD PTR [eax+edx*4]
	mov	DWORD PTR [edi], ecx

; 106  : 			pTemp->~T();
; 107  : 			new( (void*)pTemp )T( x );

	mov	ecx, DWORD PTR _x$[esp+4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], ecx

; 108  : 			pTemp->ALLOC_SetDeleted(false);

	or	DWORD PTR [eax+4], -2147483648		; 80000000H

; 109  : 		}
; 110  : 		m_uiSize++;

	inc	DWORD PTR [edi+4]
	pop	edi

; 111  : 		return uiPos;

	mov	eax, ebx
	pop	ebx

; 112  : 	};

	ret	4
?Alloc@?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAEIABU?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@@Z ENDP ; FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::Alloc
_TEXT	ENDS
PUBLIC	??1?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAE@XZ ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::~FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAE@XZ
_TEXT	SEGMENT
??1?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAE@XZ PROC ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::~FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >, COMDAT
; _this$ = ecx
	xor	eax, eax
	mov	DWORD PTR [ecx], 268435455		; 0fffffffH
	mov	DWORD PTR [ecx+12], eax
	mov	DWORD PTR [ecx+4], eax
	mov	ecx, DWORD PTR [ecx+8]
	push	ecx
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	pop	ecx
	ret	0
??1?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAE@XZ ENDP ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::~FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >
_TEXT	ENDS
PUBLIC	?Uninit@CvFlavorManager@@QAEXXZ			; CvFlavorManager::Uninit
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvflavormanager.cpp
;	COMDAT ?Uninit@CvFlavorManager@@QAEXXZ
_TEXT	SEGMENT
?Uninit@CvFlavorManager@@QAEXXZ PROC			; CvFlavorManager::Uninit, COMDAT
; _this$ = ecx

; 236  : {

	push	esi
	mov	esi, ecx

; 237  : 	SAFE_DELETE_ARRAY(m_piPersonalityFlavor);

	mov	eax, DWORD PTR [esi]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	mov	DWORD PTR [esi], 0

; 238  : 	SAFE_DELETE_ARRAY(m_piActiveFlavor);

	mov	ecx, DWORD PTR [esi+4]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 8

; 239  : 	m_FlavorTargetList.clear();

	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi+4], 0
	mov	edx, DWORD PTR [ecx+24]
	push	268435455				; 0fffffffH
	push	edx
	call	?UnLink@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@IAEXII@Z ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::UnLink
	pop	esi

; 240  : }

	ret	0
?Uninit@CvFlavorManager@@QAEXXZ ENDP			; CvFlavorManager::Uninit
_TEXT	ENDS
PUBLIC	?RemoveFlavorRecipient@CvFlavorManager@@QAEXPAVCvFlavorRecipient@@@Z ; CvFlavorManager::RemoveFlavorRecipient
; Function compile flags: /Ogtpy
;	COMDAT ?RemoveFlavorRecipient@CvFlavorManager@@QAEXPAVCvFlavorRecipient@@@Z
_TEXT	SEGMENT
_iter$ = -24						; size = 8
_end$ = -16						; size = 8
$T221266 = -8						; size = 8
$T221265 = -8						; size = 8
_pTargetObject$ = 8					; size = 4
?RemoveFlavorRecipient@CvFlavorManager@@QAEXPAVCvFlavorRecipient@@@Z PROC ; CvFlavorManager::RemoveFlavorRecipient, COMDAT
; _this$ = ecx

; 301  : {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 28					; 0000001cH
	push	ebx
	push	esi
	push	edi

; 302  : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 303  : 	for (Flavor_List::iterator iter = m_FlavorTargetList.begin(); iter != m_FlavorTargetList.end(); ++iter)
; 304  : 	{
; 305  : 		if (*iter == pTargetObject)
; 306  : 		{
; 307  : 			m_FlavorTargetList.erase(iter);
; 308  : 			return;
; 309  : 		}
; 310  : #else
; 311  : 	Flavor_List::iterator iter = m_FlavorTargetList.begin();

	lea	esi, DWORD PTR [ecx+12]
	lea	eax, DWORD PTR _iter$[esp+40]
	push	eax
	mov	ecx, esi
	call	?begin@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAE?AViterator@1@XZ ; FFastList<CvFlavorRecipient *,297,0>::begin

; 312  : 	Flavor_List::iterator end  = m_FlavorTargetList.end();

	lea	ecx, DWORD PTR _end$[esp+40]
	push	ecx
	mov	ecx, esi
	call	?end@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAE?AViterator@1@XZ ; FFastList<CvFlavorRecipient *,297,0>::end

; 313  : 
; 314  : 	while(iter != end)

	mov	eax, DWORD PTR _iter$[esp+44]
	cmp	eax, DWORD PTR _end$[esp+44]
	je	SHORT $LN2@RemoveFlav
	mov	edi, DWORD PTR _pTargetObject$[ebp]
$LL3@RemoveFlav:

; 315  : 	{
; 316  : 		if(*iter == pTargetObject)

	mov	ecx, DWORD PTR _iter$[esp+40]
	mov	ebx, DWORD PTR [ecx+8]
	lea	edx, DWORD PTR [eax+eax*2]
	cmp	DWORD PTR [ebx+edx*4+8], edi
	je	SHORT $LN21@RemoveFlav

; 319  : 			return;
; 320  : 		}
; 321  : 		iter++;

	push	0
	lea	eax, DWORD PTR $T221266[esp+44]
	push	eax
	lea	ecx, DWORD PTR _iter$[esp+48]
	call	??E?$base_iterator@Vbase_iterator_tail@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAE?BV01@H@Z ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator<FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator_tail>::operator++
	mov	eax, DWORD PTR _iter$[esp+44]
	cmp	eax, DWORD PTR _end$[esp+44]
	jne	SHORT $LL3@RemoveFlav

; 322  : #endif
; 323  : 	}
; 324  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
$LN21@RemoveFlav:

; 317  : 		{
; 318  : 			m_FlavorTargetList.erase(iter);

	push	eax
	push	ecx
	lea	ecx, DWORD PTR $T221265[esp+48]
	push	ecx
	mov	ecx, esi
	call	?erase@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAE?AViterator@1@V21@@Z ; FFastList<CvFlavorRecipient *,297,0>::erase
$LN2@RemoveFlav:

; 322  : #endif
; 323  : 	}
; 324  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveFlavorRecipient@CvFlavorManager@@QAEXPAVCvFlavorRecipient@@@Z ENDP ; CvFlavorManager::RemoveFlavorRecipient
_TEXT	ENDS
PUBLIC	?BroadcastFlavors@CvFlavorManager@@AAEXPAH_N@Z	; CvFlavorManager::BroadcastFlavors
; Function compile flags: /Ogtpy
;	COMDAT ?BroadcastFlavors@CvFlavorManager@@AAEXPAH_N@Z
_TEXT	SEGMENT
_it$ = -24						; size = 8
$T221312 = -16						; size = 8
$T221309 = -16						; size = 8
$T221310 = -8						; size = 8
_piDeltaFlavorValues$ = 8				; size = 4
_bPlayerLevelUpdate$ = 12				; size = 1
?BroadcastFlavors@CvFlavorManager@@AAEXPAH_N@Z PROC	; CvFlavorManager::BroadcastFlavors, COMDAT
; _this$ = ecx

; 541  : {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 28					; 0000001cH
	push	ebx
	push	esi
	push	edi

; 542  : 	Flavor_List::iterator it;
; 543  : 
; 544  : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 545  : 	for (it = m_FlavorTargetList.begin(); it != m_FlavorTargetList.end(); ++it)
; 546  : #else
; 547  : 	for(it = m_FlavorTargetList.begin(); it != m_FlavorTargetList.end(); it++)

	lea	ebx, DWORD PTR [ecx+12]
	lea	eax, DWORD PTR $T221309[esp+40]
	push	eax
	mov	ecx, ebx
	call	?begin@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAE?AViterator@1@XZ ; FFastList<CvFlavorRecipient *,297,0>::begin
	mov	edi, DWORD PTR [eax]
	mov	esi, DWORD PTR [eax+4]
	lea	ecx, DWORD PTR $T221312[esp+40]
	push	ecx
	mov	ecx, ebx
	mov	DWORD PTR _it$[esp+44], edi
	mov	DWORD PTR _it$[esp+48], esi
	call	?end@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAE?AViterator@1@XZ ; FFastList<CvFlavorRecipient *,297,0>::end
	cmp	esi, DWORD PTR [eax+4]
	je	SHORT $LN4@BroadcastF
	jmp	SHORT $LN17@BroadcastF
	npad	5
$LL68@BroadcastF:
	mov	edi, DWORD PTR _it$[esp+40]
$LN17@BroadcastF:

; 548  : #endif
; 549  : 	{
; 550  : 		if(bPlayerLevelUpdate && !(*it)->IsCity())

	cmp	BYTE PTR _bPlayerLevelUpdate$[ebp], 0
	je	SHORT $LN67@BroadcastF
	mov	eax, DWORD PTR [edi+8]
	lea	edx, DWORD PTR [esi+esi*2]
	mov	ecx, DWORD PTR [eax+edx*4+8]
	cmp	BYTE PTR [ecx+4], 0
	jne	SHORT $LN5@BroadcastF

; 551  : 		{
; 552  : 			(*it)->ChangeFlavors(piDeltaFlavorValues);

	jmp	SHORT $LN70@BroadcastF
$LN67@BroadcastF:

; 553  : 		}
; 554  : 		else if (!bPlayerLevelUpdate && (*it)->IsCity())

	mov	ecx, DWORD PTR [edi+8]
	lea	eax, DWORD PTR [esi+esi*2]
	mov	ecx, DWORD PTR [ecx+eax*4+8]
	cmp	BYTE PTR [ecx+4], 0
	je	SHORT $LN5@BroadcastF
$LN70@BroadcastF:

; 555  : 		{
; 556  : 			(*it)->ChangeFlavors(piDeltaFlavorValues);

	mov	edx, DWORD PTR _piDeltaFlavorValues$[ebp]
	push	0
	push	edx
	call	?ChangeFlavors@CvFlavorRecipient@@QAEXPAH_N@Z ; CvFlavorRecipient::ChangeFlavors
$LN5@BroadcastF:
	push	0
	lea	eax, DWORD PTR $T221310[esp+44]
	push	eax
	lea	ecx, DWORD PTR _it$[esp+48]
	call	??E?$base_iterator@Vbase_iterator_tail@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAE?BV01@H@Z ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator<FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator_tail>::operator++
	lea	ecx, DWORD PTR $T221312[esp+40]
	push	ecx
	mov	ecx, ebx
	call	?end@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAE?AViterator@1@XZ ; FFastList<CvFlavorRecipient *,297,0>::end
	mov	esi, DWORD PTR _it$[esp+44]
	cmp	esi, DWORD PTR [eax+4]
	jne	SHORT $LL68@BroadcastF
$LN4@BroadcastF:

; 557  : 		}
; 558  : 	}
; 559  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?BroadcastFlavors@CvFlavorManager@@AAEXPAH_N@Z ENDP	; CvFlavorManager::BroadcastFlavors
_TEXT	ENDS
PUBLIC	?BroadcastBaseFlavors@CvFlavorManager@@AAEXXZ	; CvFlavorManager::BroadcastBaseFlavors
; Function compile flags: /Ogtpy
;	COMDAT ?BroadcastBaseFlavors@CvFlavorManager@@AAEXXZ
_TEXT	SEGMENT
_it$ = -24						; size = 8
$T221487 = -16						; size = 8
$T221484 = -16						; size = 8
$T221485 = -8						; size = 8
?BroadcastBaseFlavors@CvFlavorManager@@AAEXXZ PROC	; CvFlavorManager::BroadcastBaseFlavors, COMDAT
; _this$ = ecx

; 563  : {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 24					; 00000018H
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	edi, ecx

; 564  : 	Flavor_List::iterator it;
; 565  : 
; 566  : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 567  : 	for (it = m_FlavorTargetList.begin(); it != m_FlavorTargetList.end(); ++it)
; 568  : #else
; 569  : 	for(it = m_FlavorTargetList.begin(); it != m_FlavorTargetList.end(); it++)

	lea	eax, DWORD PTR $T221484[esp+40]
	lea	ebx, DWORD PTR [edi+12]
	push	eax
	mov	ecx, ebx
	call	?begin@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAE?AViterator@1@XZ ; FFastList<CvFlavorRecipient *,297,0>::begin
	mov	ecx, DWORD PTR [eax]
	mov	esi, DWORD PTR [eax+4]
	lea	edx, DWORD PTR $T221487[esp+40]
	mov	DWORD PTR _it$[esp+40], ecx
	push	edx
	mov	ecx, ebx
	mov	DWORD PTR _it$[esp+48], esi
	call	?end@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAE?AViterator@1@XZ ; FFastList<CvFlavorRecipient *,297,0>::end
	cmp	esi, DWORD PTR [eax+4]
	je	SHORT $LN1@BroadcastB
$LN14@BroadcastB:

; 570  : #endif
; 571  : 	{
; 572  : 		(*it)->SetFlavors(m_piPersonalityFlavor);

	mov	ecx, DWORD PTR _it$[esp+40]
	mov	edx, DWORD PTR [edi]
	mov	ecx, DWORD PTR [ecx+8]
	lea	eax, DWORD PTR [esi+esi*2]
	mov	ecx, DWORD PTR [ecx+eax*4+8]
	test	edx, edx
	je	SHORT $LN2@BroadcastB
	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+1764
	xor	eax, eax
	test	esi, esi
	jle	SHORT $LN29@BroadcastB
	npad	4
$LL31@BroadcastB:
	mov	ebp, DWORD PTR [edx+eax*4]
	mov	ebx, DWORD PTR [ecx+8]
	mov	DWORD PTR [ebx+eax*4], ebp
	inc	eax
	cmp	eax, esi
	jl	SHORT $LL31@BroadcastB
$LN29@BroadcastB:
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN2@BroadcastB:
	push	0
	lea	ecx, DWORD PTR $T221485[esp+44]
	push	ecx
	lea	ecx, DWORD PTR _it$[esp+48]
	call	??E?$base_iterator@Vbase_iterator_tail@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAE?BV01@H@Z ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator<FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::base_iterator_tail>::operator++
	lea	edx, DWORD PTR $T221487[esp+40]
	push	edx
	lea	ecx, DWORD PTR [edi+12]
	call	?end@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAE?AViterator@1@XZ ; FFastList<CvFlavorRecipient *,297,0>::end
	mov	esi, DWORD PTR _it$[esp+44]
	cmp	esi, DWORD PTR [eax+4]
	jne	SHORT $LN14@BroadcastB
$LN1@BroadcastB:

; 573  : 	}
; 574  : }

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?BroadcastBaseFlavors@CvFlavorManager@@AAEXXZ ENDP	; CvFlavorManager::BroadcastBaseFlavors
_TEXT	ENDS
PUBLIC	?Reserve@?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAEXI@Z ; FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::Reserve
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastallocator.h
;	COMDAT ?Reserve@?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAEXI@Z
_TEXT	SEGMENT
_uiResSize$ = 8						; size = 4
?Reserve@?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAEXI@Z PROC ; FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::Reserve, COMDAT
; _this$ = ecx

; 83   : 		m_vec.reserve(uiResSize);

	mov	eax, DWORD PTR _uiResSize$[esp-4]
	add	ecx, 8
	cmp	eax, DWORD PTR [ecx+8]
	jbe	SHORT $LN6@Reserve
	mov	DWORD PTR _uiResSize$[esp-4], eax
	jmp	?SetSize@?$FFastVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@IAEXI@Z ; FFastVector<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::SetSize
$LN6@Reserve:

; 84   : 	}

	ret	4
?Reserve@?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAEXI@Z ENDP ; FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::Reserve
_TEXT	ENDS
PUBLIC	??0?$FCustomList@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@$0A@@@QAE@XZ ; FCustomList<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,0>::FCustomList<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,0>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastlist.h
;	COMDAT ??0?$FCustomList@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@$0A@@@QAE@XZ
_TEXT	SEGMENT
??0?$FCustomList@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@$0A@@@QAE@XZ PROC ; FCustomList<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,0>::FCustomList<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,0>, COMDAT
; _this$ = ecx

; 721  : 	FCustomList() : CORE() {};

	mov	eax, ecx
	xor	ecx, ecx
	mov	edx, 268435455				; 0fffffffH
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+20], ecx
	mov	DWORD PTR [eax+24], edx
	mov	DWORD PTR [eax+28], edx
	ret	0
??0?$FCustomList@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@$0A@@@QAE@XZ ENDP ; FCustomList<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,0>::FCustomList<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,0>
_TEXT	ENDS
PUBLIC	?push_back@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAEIABU?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@@Z ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::push_back
; Function compile flags: /Ogtpy
;	COMDAT ?push_back@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAEIABU?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
?push_back@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAEIABU?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@@Z PROC ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::push_back, COMDAT
; _this$ = ecx

; 489  : 		unsigned int uiNewIndex = get_allocator().Alloc( x );

	mov	eax, DWORD PTR _x$[esp-4]
	push	esi
	push	edi
	push	eax
	mov	esi, ecx
	call	?Alloc@?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAEIABU?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@@Z ; FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::Alloc

; 490  : 		push_back_existing( uiNewIndex );

	inc	DWORD PTR [esi+20]
	cmp	DWORD PTR [esi+24], 268435455		; 0fffffffH
	mov	edi, eax
	mov	eax, DWORD PTR [esi+28]
	mov	DWORD PTR [esi+28], edi
	jne	SHORT $LN5@push_back@2
	mov	DWORD PTR [esi+24], edi
$LN5@push_back@2:
	push	eax
	push	edi
	mov	ecx, esi
	call	?InsertAfter@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@IAEXII@Z ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::InsertAfter

; 491  : 		return uiNewIndex;

	mov	eax, edi
	pop	edi
	pop	esi

; 492  : 	};

	ret	4
?push_back@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@QAEIABU?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@@Z ENDP ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::push_back
_TEXT	ENDS
PUBLIC	??1?$FCustomList@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@$0A@@@QAE@XZ ; FCustomList<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,0>::~FCustomList<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,0>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$FCustomList@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@$0A@@@QAE@XZ
_TEXT	SEGMENT
??1?$FCustomList@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@$0A@@@QAE@XZ PROC ; FCustomList<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,0>::~FCustomList<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,0>, COMDAT
; _this$ = ecx
	xor	eax, eax
	mov	DWORD PTR [ecx], 268435455		; 0fffffffH
	mov	DWORD PTR [ecx+12], eax
	mov	DWORD PTR [ecx+4], eax
	mov	ecx, DWORD PTR [ecx+8]
	push	ecx
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	pop	ecx
	ret	0
??1?$FCustomList@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@$0A@@@QAE@XZ ENDP ; FCustomList<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,0>::~FCustomList<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,0>
_TEXT	ENDS
PUBLIC	?ChangeFlavors@CvFlavorManager@@QAEXPAH_N@Z	; CvFlavorManager::ChangeFlavors
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvflavormanager.cpp
;	COMDAT ?ChangeFlavors@CvFlavorManager@@QAEXPAH_N@Z
_TEXT	SEGMENT
_iNumFlavors$218600 = -4				; size = 4
_piDeltaFlavorValues$ = 8				; size = 4
_bPlayerLevelUpdate$ = 12				; size = 1
?ChangeFlavors@CvFlavorManager@@QAEXPAH_N@Z PROC	; CvFlavorManager::ChangeFlavors, COMDAT
; _this$ = ecx

; 328  : {

	push	ecx

; 329  : 	CvAssertMsg(piDeltaFlavorValues != NULL, "Invalid array of flavor deltas passed to flavor manager");
; 330  : 
; 331  : 	if(!piDeltaFlavorValues) return;

	mov	edx, DWORD PTR _piDeltaFlavorValues$[esp]
	push	edi
	mov	edi, ecx
	test	edx, edx
	je	SHORT $LN10@ChangeFlav@2

; 332  : 
; 333  : 	if (bPlayerLevelUpdate)

	cmp	BYTE PTR _bPlayerLevelUpdate$[esp+4], 0
	je	SHORT $LN5@ChangeFlav@2

; 334  : 	{
; 335  : 		int iFlavorMinValue = /*-1000*/ GC.getFLAVOR_MIN_VALUE();
; 336  : 		int iFlavorMaxValue = /*1000*/ GC.getFLAVOR_MAX_VALUE();
; 337  : 
; 338  : 		int iNumFlavors = GC.getNumFlavorTypes();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+1764
	push	ebx
	mov	ebx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+1880
	push	ebp
	mov	ebp, DWORD PTR ?gGlobals@@3VCvGlobals@@A+1876
	push	esi

; 339  : 		for(int iI = 0; iI < iNumFlavors; iI++)

	xor	esi, esi
	mov	DWORD PTR _iNumFlavors$218600[esp+20], eax
	test	eax, eax
	jle	SHORT $LN20@ChangeFlav@2
$LL7@ChangeFlav@2:

; 340  : 		{
; 341  : 			if(piDeltaFlavorValues[iI] != 0)

	mov	ecx, DWORD PTR [edx+esi*4]
	test	ecx, ecx
	je	SHORT $LN6@ChangeFlav@2
	mov	eax, DWORD PTR [edi+4]

; 342  : 			{
; 343  : 				m_piActiveFlavor[iI] += piDeltaFlavorValues[iI];

	add	DWORD PTR [eax+esi*4], ecx

; 344  : 
; 345  : 				// Make sure within range
; 346  : 				if(m_piActiveFlavor[iI] < iFlavorMinValue)

	mov	ecx, DWORD PTR [edi+4]
	cmp	DWORD PTR [ecx+esi*4], ebp
	lea	eax, DWORD PTR [eax+esi*4]
	jge	SHORT $LN3@ChangeFlav@2

; 347  : 				{
; 348  : 					m_piActiveFlavor[iI] =iFlavorMinValue;

	mov	edx, ecx
	mov	DWORD PTR [edx+esi*4], ebp
	jmp	SHORT $LN1@ChangeFlav@2
$LN3@ChangeFlav@2:

; 339  : 		for(int iI = 0; iI < iNumFlavors; iI++)

	mov	eax, ecx

; 349  : 				}
; 350  : 				else if(m_piActiveFlavor[iI] > iFlavorMaxValue)

	cmp	DWORD PTR [eax+esi*4], ebx
	lea	eax, DWORD PTR [eax+esi*4]
	jle	SHORT $LN1@ChangeFlav@2

; 351  : 				{
; 352  : 					m_piActiveFlavor[iI] = iFlavorMaxValue;

	mov	DWORD PTR [eax], ebx
$LN1@ChangeFlav@2:

; 353  : 				}
; 354  : 
; 355  : 				LogFlavors((FlavorTypes) iI);

	push	esi
	mov	ecx, edi
	call	?LogFlavors@CvFlavorManager@@AAEXW4FlavorTypes@@@Z ; CvFlavorManager::LogFlavors
	mov	eax, DWORD PTR _iNumFlavors$218600[esp+20]
	mov	edx, DWORD PTR _piDeltaFlavorValues$[esp+16]
$LN6@ChangeFlav@2:
	inc	esi
	cmp	esi, eax
	jl	SHORT $LL7@ChangeFlav@2
$LN20@ChangeFlav@2:
	pop	esi
	pop	ebp
	pop	ebx
$LN5@ChangeFlav@2:

; 356  : 			}
; 357  : 		}
; 358  : 	}
; 359  : 
; 360  : 	BroadcastFlavors(piDeltaFlavorValues, bPlayerLevelUpdate);

	mov	ecx, DWORD PTR _bPlayerLevelUpdate$[esp+4]
	push	ecx
	push	edx
	mov	ecx, edi
	call	?BroadcastFlavors@CvFlavorManager@@AAEXPAH_N@Z ; CvFlavorManager::BroadcastFlavors
$LN10@ChangeFlav@2:
	pop	edi

; 361  : }

	pop	ecx
	ret	8
?ChangeFlavors@CvFlavorManager@@QAEXPAH_N@Z ENDP	; CvFlavorManager::ChangeFlavors
_TEXT	ENDS
PUBLIC	?ResetToBasePersonality@CvFlavorManager@@QAEXXZ	; CvFlavorManager::ResetToBasePersonality
; Function compile flags: /Ogtpy
;	COMDAT ?ResetToBasePersonality@CvFlavorManager@@QAEXXZ
_TEXT	SEGMENT
?ResetToBasePersonality@CvFlavorManager@@QAEXXZ PROC	; CvFlavorManager::ResetToBasePersonality, COMDAT
; _this$ = ecx

; 366  : 	int iI;
; 367  : 
; 368  : 	for(iI = 0; iI < GC.getNumFlavorTypes(); iI++)

	xor	eax, eax
	cmp	DWORD PTR ?gGlobals@@3VCvGlobals@@A+1764, eax
	jle	SHORT $LN1@ResetToBas
	push	esi
	npad	5
$LL3@ResetToBas:

; 369  : 	{
; 370  : 		m_piActiveFlavor[iI] = m_piPersonalityFlavor[iI];

	mov	edx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [edx+eax*4]
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [esi+eax*4], edx
	inc	eax
	cmp	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+1764
	jl	SHORT $LL3@ResetToBas
	pop	esi
$LN1@ResetToBas:

; 371  : 	}
; 372  : 
; 373  : 	BroadcastBaseFlavors();

	jmp	?BroadcastBaseFlavors@CvFlavorManager@@AAEXXZ ; CvFlavorManager::BroadcastBaseFlavors
?ResetToBasePersonality@CvFlavorManager@@QAEXXZ ENDP	; CvFlavorManager::ResetToBasePersonality
_TEXT	ENDS
PUBLIC	?AdjustWeightsForMap@CvFlavorManager@@QAEXXZ	; CvFlavorManager::AdjustWeightsForMap
EXTRN	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z:PROC ; CvGlobals::getInfoTypeForString
EXTRN	_log10:PROC
EXTRN	?countMajorCivsAlive@CvGame@@QBEHXZ:PROC	; CvGame::countMajorCivsAlive
EXTRN	?getLandPlots@CvMap@@QAEHXZ:PROC		; CvMap::getLandPlots
EXTRN	__ftol2_sse_excpt:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?AdjustWeightsForMap@CvFlavorManager@@QAEXXZ
_TEXT	SEGMENT
_iNumFlavorTypes$218626 = -20				; size = 4
_iTilesPerPlayer$ = -16					; size = 8
_iTotalLandTiles$ = -16					; size = 4
$T221894 = -8						; size = 4
_iFlavorMinValue$218632 = -8				; size = 4
_fAdjust$ = -8						; size = 8
_iNumPlayers$ = -8					; size = 4
?AdjustWeightsForMap@CvFlavorManager@@QAEXXZ PROC	; CvFlavorManager::AdjustWeightsForMap, COMDAT
; _this$ = ecx

; 378  : {

	sub	esp, 20					; 00000014H
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	edi, ecx

; 379  : 	int iTotalLandTiles;
; 380  : 	int iNumPlayers;
; 381  : 	double iTilesPerPlayer;
; 382  : 	double fAdjust;
; 383  : 	int iAdjust;
; 384  : 
; 385  : 	iTotalLandTiles = GC.getMap().getLandPlots();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	call	?getLandPlots@CvMap@@QAEHXZ		; CvMap::getLandPlots

; 386  : 	iNumPlayers = GC.getGame().countMajorCivsAlive();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR _iTotalLandTiles$[esp+36], eax
	call	?countMajorCivsAlive@CvGame@@QBEHXZ	; CvGame::countMajorCivsAlive
	mov	DWORD PTR _iNumPlayers$[esp+36], eax

; 387  : 
; 388  : 	if(iNumPlayers > 0)

	test	eax, eax
	jle	$LN25@AdjustWeig

; 389  : 	{
; 390  : 		int iNumFlavorTypes = GC.getNumFlavorTypes();
; 391  : 		// Find tiles per player
; 392  : 		iTilesPerPlayer = (double)iTotalLandTiles / (double)iNumPlayers;

	fild	DWORD PTR _iTotalLandTiles$[esp+36]
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+1764

; 393  : 
; 394  : 		// Compute +/- addition
; 395  : 		//
; 396  : 		// We want this to be logarithmic, since that is the curve between lots of players on a duel map
; 397  : 		// and a few player on a huge map.  "FLAVOR_STANDARD_LOG10_TILES_PER_PLAYER" is the typical log10 of
; 398  : 		// tiles per player.  We go up and down from this point (multiplying by a coefficient) from here
; 399  : 		fAdjust = log10(iTilesPerPlayer) - GC.getFLAVOR_STANDARD_LOG10_TILES_PER_PLAYER();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8092
	sub	esp, 8
	fidiv	DWORD PTR _iNumPlayers$[esp+44]
	mov	DWORD PTR _iNumFlavorTypes$218626[esp+44], eax
	mov	eax, esp
	mov	DWORD PTR $T221894[esp+44], ecx
	fstp	QWORD PTR _iTilesPerPlayer$[esp+44]
	mov	edx, DWORD PTR _iTilesPerPlayer$[esp+44]
	mov	ecx, DWORD PTR _iTilesPerPlayer$[esp+48]
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+4], ecx
	call	_log10
	fsub	DWORD PTR $T221894[esp+44]
	add	esp, 8
	fstp	QWORD PTR _fAdjust$[esp+36]

; 400  : 		fAdjust *= (double)GC.getFLAVOR_EXPANDGROW_COEFFICIENT();

	fild	DWORD PTR ?gGlobals@@3VCvGlobals@@A+1888
	fmul	QWORD PTR _fAdjust$[esp+36]
	fstp	QWORD PTR _fAdjust$[esp+36]

; 401  : 		iAdjust = (int)fAdjust;

	fld	QWORD PTR _fAdjust$[esp+36]
	call	__ftol2_sse_excpt

; 402  : 
; 403  : 		int iFlavorMaxValue = /*20*/ GC.getPERSONALITY_FLAVOR_MAX_VALUE();
; 404  : 		int iFlavorMinValue = /*0*/ GC.getPERSONALITY_FLAVOR_MIN_VALUE();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+1872
	mov	ebp, DWORD PTR ?gGlobals@@3VCvGlobals@@A+1868

; 405  : 
; 406  : 		int iExpansionIndex = GC.getInfoTypeForString("FLAVOR_EXPANSION");

	push	0
	push	OFFSET $SG218634
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	ebx, eax
	mov	DWORD PTR _iFlavorMinValue$218632[esp+44], edx
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString

; 407  : 		int iGrowthIndex = GC.getInfoTypeForString("FLAVOR_GROWTH");

	push	0
	push	OFFSET $SG218636
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	esi, eax
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString

; 408  : 
; 409  : 		// Boost expansion
; 410  : 		CvAssert(iExpansionIndex >= 0 && iExpansionIndex < iNumFlavorTypes);
; 411  : 		if (iExpansionIndex >= 0 && iExpansionIndex < iNumFlavorTypes)

	test	esi, esi
	jl	SHORT $LN31@AdjustWeig
	cmp	esi, DWORD PTR _iNumFlavorTypes$218626[esp+36]
	jge	SHORT $LN31@AdjustWeig

; 412  : 		{
; 413  : 			m_piPersonalityFlavor[iExpansionIndex] += iAdjust;

	mov	ecx, DWORD PTR [edi]
	add	DWORD PTR [ecx+esi*4], ebx

; 414  : 			if(m_piPersonalityFlavor[iExpansionIndex] > iFlavorMaxValue)

	mov	edx, DWORD PTR [edi]
	cmp	DWORD PTR [edx+esi*4], ebp
	lea	ecx, DWORD PTR [ecx+esi*4]
	lea	esi, DWORD PTR [edx+esi*4]
	jle	SHORT $LN31@AdjustWeig

; 415  : 			{
; 416  : 				m_piPersonalityFlavor[iExpansionIndex] = iFlavorMaxValue;

	mov	DWORD PTR [esi], ebp
$LN31@AdjustWeig:

; 417  : 			}
; 418  : 		}
; 419  : 
; 420  : 		// Reduce growth
; 421  : 		CvAssert(iGrowthIndex >= 0 && iGrowthIndex < iNumFlavorTypes);
; 422  : 		if (iGrowthIndex >= 0 && iGrowthIndex < iNumFlavorTypes)

	test	eax, eax
	jl	SHORT $LN1@AdjustWeig
	cmp	eax, DWORD PTR _iNumFlavorTypes$218626[esp+36]
	jge	SHORT $LN1@AdjustWeig

; 423  : 		{
; 424  : 			m_piPersonalityFlavor[iGrowthIndex] -= iAdjust;

	mov	ecx, DWORD PTR [edi]
	sub	DWORD PTR [ecx+eax*4], ebx

; 425  : 			if(m_piPersonalityFlavor[iGrowthIndex] < iFlavorMinValue)

	mov	edx, DWORD PTR [edi]
	lea	ecx, DWORD PTR [ecx+eax*4]
	mov	ecx, DWORD PTR _iFlavorMinValue$218632[esp+36]
	cmp	DWORD PTR [edx+eax*4], ecx
	lea	eax, DWORD PTR [edx+eax*4]
	jge	SHORT $LN1@AdjustWeig

; 426  : 			{
; 427  : 				m_piPersonalityFlavor[iGrowthIndex] = iFlavorMinValue;

	mov	DWORD PTR [eax], ecx
$LN1@AdjustWeig:

; 428  : 			}
; 429  : 		}
; 430  : 
; 431  : 		// Save these off as our core personality and broadcast updates
; 432  : 		ResetToBasePersonality();

	xor	eax, eax
	cmp	DWORD PTR ?gGlobals@@3VCvGlobals@@A+1764, eax
	jle	SHORT $LN22@AdjustWeig
$LL24@AdjustWeig:
	mov	ecx, DWORD PTR [edi]
	mov	ecx, DWORD PTR [ecx+eax*4]
	mov	edx, DWORD PTR [edi+4]
	mov	DWORD PTR [edx+eax*4], ecx
	inc	eax
	cmp	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+1764
	jl	SHORT $LL24@AdjustWeig
$LN22@AdjustWeig:
	mov	ecx, edi

; 433  : 	}
; 434  : }

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 20					; 00000014H

; 428  : 			}
; 429  : 		}
; 430  : 
; 431  : 		// Save these off as our core personality and broadcast updates
; 432  : 		ResetToBasePersonality();

	jmp	?BroadcastBaseFlavors@CvFlavorManager@@AAEXXZ ; CvFlavorManager::BroadcastBaseFlavors
$LN25@AdjustWeig:

; 433  : 	}
; 434  : }

	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 20					; 00000014H
	ret	0
?AdjustWeightsForMap@CvFlavorManager@@QAEXXZ ENDP	; CvFlavorManager::AdjustWeightsForMap
_TEXT	ENDS
PUBLIC	??0?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAE@XZ ; FFastList<CvFlavorRecipient *,297,0>::FFastList<CvFlavorRecipient *,297,0>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastlist.h
;	COMDAT ??0?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAE@XZ
_TEXT	SEGMENT
??0?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAE@XZ PROC ; FFastList<CvFlavorRecipient *,297,0>::FFastList<CvFlavorRecipient *,297,0>, COMDAT
; _this$ = ecx

; 159  : 	explicit FFastList() : BASE_TYPE() {};

	mov	eax, ecx
	xor	ecx, ecx
	mov	edx, 268435455				; 0fffffffH
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+20], ecx
	mov	DWORD PTR [eax+24], edx
	mov	DWORD PTR [eax+28], edx
	ret	0
??0?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAE@XZ ENDP ; FFastList<CvFlavorRecipient *,297,0>::FFastList<CvFlavorRecipient *,297,0>
_TEXT	ENDS
PUBLIC	?push_back@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAEIABQAVCvFlavorRecipient@@@Z ; FFastList<CvFlavorRecipient *,297,0>::push_back
; Function compile flags: /Ogtpy
;	COMDAT ?push_back@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAEIABQAVCvFlavorRecipient@@@Z
_TEXT	SEGMENT
$T222025 = -12						; size = 12
_x$ = 8							; size = 4
?push_back@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAEIABQAVCvFlavorRecipient@@@Z PROC ; FFastList<CvFlavorRecipient *,297,0>::push_back, COMDAT
; _this$ = ecx

; 177  : 	unsigned int push_back( const T& x ){

	sub	esp, 12					; 0000000cH

; 178  : 		return BASE_TYPE::push_back( MultiListNodePolicy< T >(x) );

	mov	eax, DWORD PTR _x$[esp+8]
	push	esi
	mov	esi, ecx
	mov	ecx, DWORD PTR [eax]
	push	edi
	lea	edx, DWORD PTR $T222025[esp+20]
	mov	DWORD PTR $T222025[esp+28], ecx
	push	edx
	mov	ecx, esi
	call	?Alloc@?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAEIABU?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@@Z ; FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::Alloc
	inc	DWORD PTR [esi+20]
	cmp	DWORD PTR [esi+24], 268435455		; 0fffffffH
	mov	edi, eax
	mov	eax, DWORD PTR [esi+28]
	mov	DWORD PTR [esi+28], edi
	jne	SHORT $LN9@push_back@3
	mov	DWORD PTR [esi+24], edi
$LN9@push_back@3:
	push	eax
	push	edi
	mov	ecx, esi
	call	?InsertAfter@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@IAEXII@Z ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::InsertAfter
	mov	eax, edi
	pop	edi
	pop	esi

; 179  : 	};

	add	esp, 12					; 0000000cH
	ret	4
?push_back@?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAEIABQAVCvFlavorRecipient@@@Z ENDP ; FFastList<CvFlavorRecipient *,297,0>::push_back
_TEXT	ENDS
PUBLIC	??1?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAE@XZ ; FFastList<CvFlavorRecipient *,297,0>::~FFastList<CvFlavorRecipient *,297,0>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAE@XZ
_TEXT	SEGMENT
??1?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAE@XZ PROC ; FFastList<CvFlavorRecipient *,297,0>::~FFastList<CvFlavorRecipient *,297,0>, COMDAT
; _this$ = ecx
	xor	eax, eax
	mov	DWORD PTR [ecx], 268435455		; 0fffffffH
	mov	DWORD PTR [ecx+12], eax
	mov	DWORD PTR [ecx+4], eax
	mov	ecx, DWORD PTR [ecx+8]
	push	ecx
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	pop	ecx
	ret	0
??1?$FFastList@PAVCvFlavorRecipient@@$0BCJ@$0A@@@QAE@XZ ENDP ; FFastList<CvFlavorRecipient *,297,0>::~FFastList<CvFlavorRecipient *,297,0>
_TEXT	ENDS
PUBLIC	??1CvFlavorManager@@QAE@XZ			; CvFlavorManager::~CvFlavorManager
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvflavormanager.cpp
;	COMDAT ??1CvFlavorManager@@QAE@XZ
_TEXT	SEGMENT
??1CvFlavorManager@@QAE@XZ PROC				; CvFlavorManager::~CvFlavorManager, COMDAT
; _this$ = ecx

; 141  : {

	push	esi
	mov	esi, ecx

; 142  : 	Uninit();

	mov	eax, DWORD PTR [esi]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	mov	DWORD PTR [esi], 0
	mov	ecx, DWORD PTR [esi+4]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	mov	DWORD PTR [esi+4], 0
	mov	edx, DWORD PTR [esi+36]
	add	esp, 8
	add	esi, 12					; 0000000cH
	push	268435455				; 0fffffffH
	push	edx
	mov	ecx, esi
	call	?UnLink@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@IAEXII@Z ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::UnLink

; 143  : }

	mov	DWORD PTR [esi], 268435455		; 0fffffffH
	mov	DWORD PTR [esi+12], 0
	mov	DWORD PTR [esi+4], 0
	mov	esi, DWORD PTR [esi+8]
	push	esi
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
	pop	esi
	ret	0
??1CvFlavorManager@@QAE@XZ ENDP				; CvFlavorManager::~CvFlavorManager
_TEXT	ENDS
PUBLIC	?Init@CvFlavorManager@@QAEXPAVCvPlayer@@@Z	; CvFlavorManager::Init
EXTRN	?getFlavorValue@CvMinorCivInfo@@QBEHH@Z:PROC	; CvMinorCivInfo::getFlavorValue
EXTRN	?getMinorCivInfo@CvGlobals@@QAEPAVCvMinorCivInfo@@W4MinorCivTypes@@@Z:PROC ; CvGlobals::getMinorCivInfo
EXTRN	?GetMinorCivType@CvMinorCivAI@@QBE?AW4MinorCivTypes@@XZ:PROC ; CvMinorCivAI::GetMinorCivType
EXTRN	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ:PROC ; CvPlayer::GetMinorCivAI
EXTRN	?getFlavorValue@CvLeaderHeadInfo@@QBEHH@Z:PROC	; CvLeaderHeadInfo::getFlavorValue
EXTRN	?isMinorCiv@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::isMinorCiv
EXTRN	?getLeaderHeadInfo@CvGlobals@@QAEPAVCvLeaderHeadInfo@@W4LeaderHeadTypes@@@Z:PROC ; CvGlobals::getLeaderHeadInfo
EXTRN	?getPersonalityType@CvPlayer@@QBE?AW4LeaderHeadTypes@@XZ:PROC ; CvPlayer::getPersonalityType
EXTRN	?isHuman@CvPlayer@@QBE_NXZ:PROC			; CvPlayer::isHuman
EXTRN	?isBarbarian@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::isBarbarian
EXTRN	?slotStatus@CvPreGame@@YA?AW4SlotStatus@@W4PlayerTypes@@@Z:PROC ; CvPreGame::slotStatus
; Function compile flags: /Ogtpy
;	COMDAT ?Init@CvFlavorManager@@QAEXPAVCvPlayer@@@Z
_TEXT	SEGMENT
_uiNumFlavorTypes$218374 = -4				; size = 4
_iDefaultFlavorValue$218373 = 8				; size = 4
_pPlayer$ = 8						; size = 4
?Init@CvFlavorManager@@QAEXPAVCvPlayer@@@Z PROC		; CvFlavorManager::Init, COMDAT
; _this$ = ecx

; 147  : {

	push	ecx
	push	ebp

; 148  : 	unsigned int iI;
; 149  : 
; 150  : 	// Copy off inputs
; 151  : 	m_pPlayer = pPlayer;

	mov	ebp, DWORD PTR _pPlayer$[esp+4]
	push	esi
	mov	esi, ecx

; 152  : 
; 153  : 	// Allocate memory
; 154  : #ifdef AUI_WARNING_FIXES
; 155  : 	SAFE_DELETE_ARRAY(m_piPersonalityFlavor);
; 156  : 	SAFE_DELETE_ARRAY(m_piActiveFlavor);
; 157  : #endif
; 158  : 	m_piPersonalityFlavor = FNEW(int[GC.getNumFlavorTypes()], c_eCiv5GameplayDLL, 0);

	xor	ecx, ecx
	mov	DWORD PTR [esi+8], ebp
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+1764
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	mov	DWORD PTR [esi], eax

; 159  : 	m_piActiveFlavor = FNEW(int[GC.getNumFlavorTypes()], c_eCiv5GameplayDLL, 0);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+1764
	xor	ecx, ecx
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]

; 160  : 	m_FlavorTargetList.get_allocator().Reserve((3*64)+100);

	lea	ecx, DWORD PTR [esi+20]
	add	esp, 8
	mov	DWORD PTR [esi+4], eax
	cmp	DWORD PTR [ecx+8], 292			; 00000124H
	jae	SHORT $LN31@Init
	push	292					; 00000124H
	call	?SetSize@?$FFastVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@IAEXI@Z ; FFastVector<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::SetSize
$LN31@Init:

; 161  : 
; 162  : 	// Clear variables
; 163  : 	Reset();

	xor	eax, eax
	cmp	DWORD PTR ?gGlobals@@3VCvGlobals@@A+1764, eax
	jle	SHORT $LN33@Init
	npad	6
$LL35@Init:
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [ecx+eax*4], 0
	mov	edx, DWORD PTR [esi+4]
	mov	DWORD PTR [edx+eax*4], 0
	inc	eax
	cmp	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+1764
	jl	SHORT $LL35@Init
$LN33@Init:

; 164  : 
; 165  : 	// If this is a live player, go ahead and set up his flavor preferences
; 166  : 	PlayerTypes p = pPlayer->GetID();

	mov	eax, DWORD PTR [ebp+44]

; 167  : 	if(p != NO_PLAYER)

	cmp	eax, -1
	je	$LN1@Init

; 168  : 	{
; 169  : 		SlotStatus s = CvPreGame::slotStatus(p);

	push	eax
	call	?slotStatus@CvPreGame@@YA?AW4SlotStatus@@W4PlayerTypes@@@Z ; CvPreGame::slotStatus
	add	esp, 4

; 170  : 		if((s == SS_TAKEN || s == SS_COMPUTER) && !pPlayer->isBarbarian())

	cmp	eax, 3
	je	SHORT $LN67@Init
	cmp	eax, 1
	jne	$LN1@Init
$LN67@Init:
	mov	ecx, ebp
	call	?isBarbarian@CvPlayer@@QBE_NXZ		; CvPlayer::isBarbarian
	test	al, al
	jne	$LN1@Init
	push	edi

; 171  : 		{
; 172  : 			// Copy over leaderhead defaults unless human
; 173  : 			if(!pPlayer->isHuman())

	mov	ecx, ebp
	call	?isHuman@CvPlayer@@QBE_NXZ		; CvPlayer::isHuman
	test	al, al
	jne	$LN14@Init

; 174  : 			{
; 175  : 				LeaderHeadTypes type = pPlayer->getPersonalityType();

	mov	ecx, ebp
	call	?getPersonalityType@CvPlayer@@QBE?AW4LeaderHeadTypes@@XZ ; CvPlayer::getPersonalityType

; 176  : 				if(type != NO_LEADER)

	cmp	eax, -1
	je	$LN68@Init
	push	ebx

; 177  : 				{
; 178  : 					CvLeaderHeadInfo* pkLeaderHeadInfo = GC.getLeaderHeadInfo(type);

	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLeaderHeadInfo@CvGlobals@@QAEPAVCvLeaderHeadInfo@@W4LeaderHeadTypes@@@Z ; CvGlobals::getLeaderHeadInfo
	mov	ebx, eax

; 179  : 					if(pkLeaderHeadInfo)

	test	ebx, ebx
	je	SHORT $LN71@Init

; 180  : 					{
; 181  : 						int iDefaultFlavorValue = GC.getDEFAULT_FLAVOR_VALUE();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+1864
	mov	DWORD PTR _iDefaultFlavorValue$218373[esp+16], eax

; 182  : 						unsigned int uiNumFlavorTypes = GC.getNumFlavorTypes();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+1764

; 183  : 
; 184  : 						for(iI = 0; iI < uiNumFlavorTypes; iI++)

	xor	edi, edi
	mov	DWORD PTR _uiNumFlavorTypes$218374[esp+20], eax
	test	eax, eax
	jbe	SHORT $LN71@Init
$LL11@Init:

; 185  : 						{
; 186  : 							// Majors use Leader XML Flavors
; 187  : 							if(!pPlayer->isMinorCiv())

	mov	ecx, ebp
	call	?isMinorCiv@CvPlayer@@QBE_NXZ		; CvPlayer::isMinorCiv

; 188  : 							{
; 189  : 								m_piPersonalityFlavor[iI] = pkLeaderHeadInfo->getFlavorValue(iI);

	push	edi
	test	al, al
	jne	SHORT $LN8@Init
	mov	ecx, ebx
	call	?getFlavorValue@CvLeaderHeadInfo@@QBEHH@Z ; CvLeaderHeadInfo::getFlavorValue
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [ecx+edi*4], eax

; 190  : 							}
; 191  : 							// Minors use Minor XML Flavors
; 192  : 							else

	jmp	SHORT $LN7@Init
$LN8@Init:

; 193  : 							{
; 194  : 								m_piPersonalityFlavor[iI] = GC.getMinorCivInfo(pPlayer->GetMinorCivAI()->GetMinorCivType())->getFlavorValue(iI);

	mov	ecx, ebp
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetMinorCivType@CvMinorCivAI@@QBE?AW4MinorCivTypes@@XZ ; CvMinorCivAI::GetMinorCivType
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getMinorCivInfo@CvGlobals@@QAEPAVCvMinorCivInfo@@W4MinorCivTypes@@@Z ; CvGlobals::getMinorCivInfo
	mov	ecx, eax
	call	?getFlavorValue@CvMinorCivInfo@@QBEHH@Z	; CvMinorCivInfo::getFlavorValue
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [edx+edi*4], eax
$LN7@Init:
	mov	eax, DWORD PTR [esi]

; 195  : 							}
; 196  : 
; 197  : 							// If no Flavor value is set in the XML use the Default
; 198  : 							if(m_piPersonalityFlavor[iI] == -1)

	cmp	DWORD PTR [eax+edi*4], -1
	lea	eax, DWORD PTR [eax+edi*4]
	jne	SHORT $LN10@Init

; 199  : 							{
; 200  : 								m_piPersonalityFlavor[iI] = iDefaultFlavorValue;

	mov	ecx, DWORD PTR _iDefaultFlavorValue$218373[esp+16]
	mov	DWORD PTR [eax], ecx
$LN10@Init:
	inc	edi
	cmp	edi, DWORD PTR _uiNumFlavorTypes$218374[esp+20]
	jb	SHORT $LL11@Init
$LN71@Init:
	pop	ebx
$LN68@Init:

; 201  : 							}
; 202  : 						}
; 203  : 					}
; 204  : 				}
; 205  : 
; 206  : 				// Tweak from default values
; 207  : 				RandomizeWeights();

	mov	ecx, esi
	call	?RandomizeWeights@CvFlavorManager@@AAEXXZ ; CvFlavorManager::RandomizeWeights

; 208  : 			}
; 209  : 
; 210  : 			// Human player, just set all flavors to average (5)
; 211  : 			else

	jmp	SHORT $LN70@Init
$LN14@Init:

; 212  : 			{
; 213  : 				int iDefaultFlavorValue = GC.getDEFAULT_FLAVOR_VALUE();
; 214  : 				unsigned int uiNumFlavors = GC.getNumFlavorTypes();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+1764
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+1864

; 215  : 				for(iI = 0; iI < uiNumFlavors; iI++)

	xor	eax, eax
	test	ecx, ecx
	jbe	SHORT $LN70@Init
	npad	5
$LL4@Init:

; 216  : 				{
; 217  : 					m_piPersonalityFlavor[iI] = iDefaultFlavorValue;

	mov	edi, DWORD PTR [esi]
	mov	DWORD PTR [edi+eax*4], edx
	inc	eax
	cmp	eax, ecx
	jb	SHORT $LL4@Init
$LN70@Init:

; 218  : 				}
; 219  : 			}
; 220  : 
; 221  : 			// Send out updated values to all recipients
; 222  : 			BroadcastBaseFlavors();

	mov	ecx, esi
	call	?BroadcastBaseFlavors@CvFlavorManager@@AAEXXZ ; CvFlavorManager::BroadcastBaseFlavors

; 223  : 
; 224  : 			ResetToBasePersonality();

	xor	eax, eax
	cmp	DWORD PTR ?gGlobals@@3VCvGlobals@@A+1764, eax
	pop	edi
	jle	SHORT $LN52@Init
	npad	4
$LL54@Init:
	mov	edx, DWORD PTR [esi]
	mov	edx, DWORD PTR [edx+eax*4]
	mov	ecx, DWORD PTR [esi+4]
	mov	DWORD PTR [ecx+eax*4], edx
	inc	eax
	cmp	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+1764
	jl	SHORT $LL54@Init
$LN52@Init:
	mov	ecx, esi
	call	?BroadcastBaseFlavors@CvFlavorManager@@AAEXXZ ; CvFlavorManager::BroadcastBaseFlavors

; 225  : 
; 226  : 			if(GC.getLogging() && GC.getAILogging())

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging
	test	al, al
	je	SHORT $LN1@Init
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getAILogging@CvGlobals@@QAE_NXZ	; CvGlobals::getAILogging
	test	al, al
	je	SHORT $LN1@Init

; 227  : 			{
; 228  : 				LogFlavors();

	push	-1
	mov	ecx, esi
	call	?LogFlavors@CvFlavorManager@@AAEXW4FlavorTypes@@@Z ; CvFlavorManager::LogFlavors
$LN1@Init:
	pop	esi
	pop	ebp

; 229  : 			}
; 230  : 		}
; 231  : 	}
; 232  : }

	pop	ecx
	ret	4
?Init@CvFlavorManager@@QAEXPAVCvPlayer@@@Z ENDP		; CvFlavorManager::Init
_TEXT	ENDS
PUBLIC	?AddFlavorRecipient@CvFlavorManager@@QAEXPAVCvFlavorRecipient@@_N@Z ; CvFlavorManager::AddFlavorRecipient
; Function compile flags: /Ogtpy
;	COMDAT ?AddFlavorRecipient@CvFlavorManager@@QAEXPAVCvFlavorRecipient@@_N@Z
_TEXT	SEGMENT
$T222665 = -12						; size = 12
_pTargetObject$ = 8					; size = 4
_bPropegateFlavorValues$ = 12				; size = 1
?AddFlavorRecipient@CvFlavorManager@@QAEXPAVCvFlavorRecipient@@_N@Z PROC ; CvFlavorManager::AddFlavorRecipient, COMDAT
; _this$ = ecx

; 288  : {

	sub	esp, 12					; 0000000cH
	push	ebx

; 289  : 	// Add this one to our list
; 290  : 	m_FlavorTargetList.push_back(pTargetObject);

	mov	ebx, DWORD PTR _pTargetObject$[esp+12]
	push	esi
	push	edi
	mov	edi, ecx
	lea	eax, DWORD PTR $T222665[esp+24]
	lea	esi, DWORD PTR [edi+12]
	push	eax
	mov	ecx, esi
	mov	DWORD PTR $T222665[esp+36], ebx
	call	?Alloc@?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@QAEIABU?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@@Z ; FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>::Alloc
	inc	DWORD PTR [esi+20]
	cmp	DWORD PTR [esi+24], 268435455		; 0fffffffH
	mov	ecx, DWORD PTR [esi+28]
	mov	DWORD PTR [esi+28], eax
	jne	SHORT $LN12@AddFlavorR
	mov	DWORD PTR [esi+24], eax
$LN12@AddFlavorR:
	push	ecx
	push	eax
	mov	ecx, esi
	call	?InsertAfter@?$FCustomList_Core@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@V?$FCustomList_Tail_Member@V?$FFastAllocator@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@$0BCJ@$0A@UFDefaultFastVectorAllocator@?$BaseVector@U?$MultiListNodePolicy@PAVCvFlavorRecipient@@@@$0A@@@@@@@@@IAEXII@Z ; FCustomList_Core<MultiListNodePolicy<CvFlavorRecipient *>,FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator>,FCustomList_Tail_Member<FFastAllocator<MultiListNodePolicy<CvFlavorRecipient *>,0,297,0,BaseVector<MultiListNodePolicy<CvFlavorRecipient *>,0>::FDefaultFastVectorAllocator> > >::InsertAfter

; 291  : 
; 292  : 	// If we've already been initialized, then go ahead and send out current values
; 293  : 	if(m_piPersonalityFlavor != NULL && bPropegateFlavorValues)

	mov	edi, DWORD PTR [edi]
	test	edi, edi
	je	SHORT $LN1@AddFlavorR
	cmp	BYTE PTR _bPropegateFlavorValues$[esp+20], 0
	je	SHORT $LN1@AddFlavorR

; 294  : 	{
; 295  : 		pTargetObject->SetFlavors(m_piPersonalityFlavor);

	push	edi
	mov	ecx, ebx
	call	?SetFlavors@CvFlavorRecipient@@QAEXPAH@Z ; CvFlavorRecipient::SetFlavors
$LN1@AddFlavorR:
	pop	edi
	pop	esi
	pop	ebx

; 296  : 	}
; 297  : }

	add	esp, 12					; 0000000cH
	ret	8
?AddFlavorRecipient@CvFlavorManager@@QAEXPAVCvFlavorRecipient@@_N@Z ENDP ; CvFlavorManager::AddFlavorRecipient
_TEXT	ENDS
PUBLIC	??0CvFlavorManager@@QAE@XZ			; CvFlavorManager::CvFlavorManager
; Function compile flags: /Ogtpy
;	COMDAT ??0CvFlavorManager@@QAE@XZ
_TEXT	SEGMENT
??0CvFlavorManager@@QAE@XZ PROC				; CvFlavorManager::CvFlavorManager, COMDAT
; _this$ = ecx

; 135  : {

	mov	eax, ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	edx, 268435455				; 0fffffffH
	mov	DWORD PTR [eax+12], edx
	mov	DWORD PTR [eax+16], ecx
	mov	DWORD PTR [eax+24], ecx
	mov	DWORD PTR [eax+28], ecx
	mov	DWORD PTR [eax+20], ecx
	mov	DWORD PTR [eax+32], ecx
	mov	DWORD PTR [eax+36], edx
	mov	DWORD PTR [eax+40], edx

; 136  : 
; 137  : }

	ret	0
??0CvFlavorManager@@QAE@XZ ENDP				; CvFlavorManager::CvFlavorManager
_TEXT	ENDS
END
