; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	c:\Users\EnormousApplePie\Documents\GitHub\Lekmod\LEKMOD_DLL\CvGameCoreDLL_Expansion2\Lua\CvLuaLeague.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG218244 DB	'Instance no longer exists.', 00H
	ORG $+1
$SG218249 DB	'IsNone', 00H
	ORG $+1
$SG218250 DB	'GetID', 00H
	ORG $+2
$SG218251 DB	'GetName', 00H
$SG218252 DB	'CanChangeCustomName', 00H
$SG218253 DB	'IsInSession', 00H
$SG218254 DB	'IsInSpecialSession', 00H
	ORG $+1
$SG218255 DB	'GetTurnsUntilSession', 00H
	ORG $+3
$SG218256 DB	'GetTurnsUntilVictorySession', 00H
$SG218257 DB	'CanProposeEnactAnyChoice', 00H
	ORG $+3
$SG218258 DB	'CanProposeEnact', 00H
$SG218259 DB	'CanProposeRepeal', 00H
	ORG $+3
$SG218260 DB	'IsProposed', 00H
	ORG $+1
$SG218261 DB	'GetChoicesForDecision', 00H
	ORG $+2
$SG218262 DB	'GetTextForChoice', 00H
	ORG $+3
$SG218263 DB	'GetInactiveResolutions', 00H
	ORG $+1
$SG218264 DB	'GetEnactProposals', 00H
	ORG $+2
$SG218265 DB	'GetEnactProposalsOnHold', 00H
$SG218266 DB	'GetRepealProposals', 00H
	ORG $+1
$SG218267 DB	'GetRepealProposalsOnHold', 00H
	ORG $+3
$SG218268 DB	'GetActiveResolutions', 00H
	ORG $+3
$SG218269 DB	'IsMember', 00H
	ORG $+3
$SG218270 DB	'CanVote', 00H
$SG218271 DB	'GetRemainingVotesForMember', 00H
	ORG $+1
$SG218272 DB	'GetSpentVotesForMember', 00H
	ORG $+1
$SG218273 DB	'GetCoreVotesForMember', 00H
	ORG $+2
$SG218274 DB	'CalculateStartingVotesForMember', 00H
$SG218275 DB	'CanPropose', 00H
	ORG $+1
$SG218276 DB	'GetRemainingProposalsForMember', 00H
	ORG $+1
$SG218277 DB	'IsHostMember', 00H
	ORG $+3
$SG218278 DB	'GetHostMember', 00H
	ORG $+2
$SG218279 DB	'IsUnitedNations', 00H
$SG218280 DB	'IsProjectActive', 00H
$SG218281 DB	'IsProjectComplete', 00H
	ORG $+2
$SG218282 DB	'GetProjectCostPerPlayer', 00H
$SG218283 DB	'GetProjectBuildingCostPerPlayer', 00H
$SG218284 DB	'GetProjectCost', 00H
	ORG $+1
$SG218285 DB	'GetMemberContribution', 00H
	ORG $+2
$SG218286 DB	'GetMemberContributionTier', 00H
	ORG $+2
$SG218287 DB	'GetContributionTierThreshold', 00H
	ORG $+3
$SG218288 DB	'GetArtsyGreatPersonRateModifier', 00H
$SG218289 DB	'GetScienceyGreatPersonRateModifier', 00H
	ORG $+1
$SG218290 DB	'GetResolutionName', 00H
	ORG $+2
$SG218291 DB	'GetResolutionDetails', 00H
	ORG $+3
$SG218292 DB	'GetMemberDetails', 00H
	ORG $+3
$SG218293 DB	'GetProjectDetails', 00H
	ORG $+2
$SG218294 DB	'GetProjectRewardTierDetails', 00H
$SG218295 DB	'GetCurrentEffectsSummary', 00H
	ORG $+3
$SG218296 DB	'GetLeagueSplashTitle', 00H
	ORG $+3
$SG218297 DB	'GetLeagueSplashDescription', 00H
	ORG $+1
$SG218298 DB	'GetLeagueSplashThisEraDetails', 00H
	ORG $+2
$SG218299 DB	'GetLeagueSplashNextEraDetails', 00H
	ORG $+2
$SG218300 DB	'GetGreatPersonRateModifierDetails', 00H
	ORG $+2
$SG218303 DB	'League', 00H
	ORG $+1
$SG218887 DB	'Type', 00H
	ORG $+3
$SG218927 DB	'TargetResolutionID', 00H
	ORG $+1
$SG218928 DB	'RepealDecision', 00H
	ORG $+1
$SG218942 DB	'TargetResolutionID', 00H
	ORG $+1
$SG218943 DB	'RepealDecision', 00H
	ORG $+1
$SG218957 DB	'TurnEnacted', 00H
$SG219242 DB	'ID', 00H
	ORG $+1
$SG219243 DB	'Type', 00H
	ORG $+3
$SG219244 DB	'VoterDecision', 00H
	ORG $+2
$SG219245 DB	'ProposerDecision', 00H
	ORG $+3
$SG219251 DB	'ProposalPlayer', 00H
	ORG $+1
$SG219420 DB	'__instance', 00H
	ORG $+5
$SG219426 DB	'Not a valid instance.  Either the instance is NULL or yo'
	DB	'u used ''.'' instead of '':''.', 00H
CONST	ENDS
PUBLIC	?HandleMissingInstance@CvLuaLeague@@SAXPAUlua_State@@@Z ; CvLuaLeague::HandleMissingInstance
EXTRN	_luaL_error:PROC
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvlualeague.cpp
;	COMDAT ?HandleMissingInstance@CvLuaLeague@@SAXPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?HandleMissingInstance@CvLuaLeague@@SAXPAUlua_State@@@Z PROC ; CvLuaLeague::HandleMissingInstance, COMDAT

; 25   : 	luaL_error(L, "Instance no longer exists.");

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET $SG218244
	push	eax
	call	_luaL_error
	add	esp, 8

; 26   : }

	ret	0
?HandleMissingInstance@CvLuaLeague@@SAXPAUlua_State@@@Z ENDP ; CvLuaLeague::HandleMissingInstance
_TEXT	ENDS
PUBLIC	?GetTypeName@CvLuaLeague@@SAPBDXZ		; CvLuaLeague::GetTypeName
; Function compile flags: /Ogtpy
;	COMDAT ?GetTypeName@CvLuaLeague@@SAPBDXZ
_TEXT	SEGMENT
?GetTypeName@CvLuaLeague@@SAPBDXZ PROC			; CvLuaLeague::GetTypeName, COMDAT

; 94   : 	return "League";

	mov	eax, OFFSET $SG218303

; 95   : }

	ret	0
?GetTypeName@CvLuaLeague@@SAPBDXZ ENDP			; CvLuaLeague::GetTypeName
_TEXT	ENDS
PUBLIC	?lResolutionTableHelper@CvLuaLeague@@KAHPAUlua_State@@HAAVCvResolution@@@Z ; CvLuaLeague::lResolutionTableHelper
EXTRN	?GetProposerDecision@CvResolution@@QAEPAVCvProposerDecision@@XZ:PROC ; CvResolution::GetProposerDecision
EXTRN	?GetVoterDecision@CvResolution@@QAEPAVCvVoterDecision@@XZ:PROC ; CvResolution::GetVoterDecision
EXTRN	?GetType@CvResolution@@QBE?AW4ResolutionTypes@@XZ:PROC ; CvResolution::GetType
EXTRN	_lua_setfield:PROC
EXTRN	_lua_pushinteger:PROC
EXTRN	?GetID@CvResolution@@QBEHXZ:PROC		; CvResolution::GetID
; Function compile flags: /Ogtpy
;	COMDAT ?lResolutionTableHelper@CvLuaLeague@@KAHPAUlua_State@@HAAVCvResolution@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_iTop$ = 12						; size = 4
_resolution$ = 16					; size = 4
?lResolutionTableHelper@CvLuaLeague@@KAHPAUlua_State@@HAAVCvResolution@@@Z PROC ; CvLuaLeague::lResolutionTableHelper, COMDAT

; 829  : {

	push	ebx
	push	esi
	push	edi

; 830  : 	lua_pushinteger(L, resolution.GetID());

	mov	edi, DWORD PTR _resolution$[esp+8]
	mov	ecx, edi
	call	?GetID@CvResolution@@QBEHXZ		; CvResolution::GetID
	mov	esi, DWORD PTR _L$[esp+8]
	push	eax
	push	esi
	call	_lua_pushinteger

; 831  : 	lua_setfield(L, iTop, "ID");

	mov	ebx, DWORD PTR _iTop$[esp+16]
	push	OFFSET $SG219242
	push	ebx
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 832  : 	
; 833  : 	lua_pushinteger(L, resolution.GetType());

	mov	ecx, edi
	call	?GetType@CvResolution@@QBE?AW4ResolutionTypes@@XZ ; CvResolution::GetType
	push	eax
	push	esi
	call	_lua_pushinteger

; 834  : 	lua_setfield(L, iTop, "Type");

	push	OFFSET $SG219243
	push	ebx
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 835  : 
; 836  : 	lua_pushinteger(L, resolution.GetVoterDecision()->GetDecision());

	mov	ecx, edi
	call	?GetVoterDecision@CvResolution@@QAEPAVCvVoterDecision@@XZ ; CvResolution::GetVoterDecision
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx]
	call	eax
	push	eax
	push	esi
	call	_lua_pushinteger

; 837  : 	lua_setfield(L, iTop, "VoterDecision");

	push	OFFSET $SG219244
	push	ebx
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 838  : 
; 839  : 	lua_pushinteger(L, resolution.GetProposerDecision()->GetDecision());

	mov	ecx, edi
	call	?GetProposerDecision@CvResolution@@QAEPAVCvProposerDecision@@XZ ; CvResolution::GetProposerDecision
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx]
	call	eax
	push	eax
	push	esi
	call	_lua_pushinteger

; 840  : 	lua_setfield(L, iTop, "ProposerDecision");

	push	OFFSET $SG219245
	push	ebx
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H
	pop	edi
	pop	esi

; 841  : 
; 842  : 	return 0;

	xor	eax, eax
	pop	ebx

; 843  : }

	ret	0
?lResolutionTableHelper@CvLuaLeague@@KAHPAUlua_State@@HAAVCvResolution@@@Z ENDP ; CvLuaLeague::lResolutionTableHelper
_TEXT	ENDS
PUBLIC	?lProposalTableHelper@CvLuaLeague@@KAHPAUlua_State@@HAAVCvProposal@@@Z ; CvLuaLeague::lProposalTableHelper
EXTRN	?GetProposalPlayer@CvProposal@@QBE?AW4PlayerTypes@@XZ:PROC ; CvProposal::GetProposalPlayer
; Function compile flags: /Ogtpy
;	COMDAT ?lProposalTableHelper@CvLuaLeague@@KAHPAUlua_State@@HAAVCvProposal@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_iTop$ = 12						; size = 4
_proposal$ = 16						; size = 4
?lProposalTableHelper@CvLuaLeague@@KAHPAUlua_State@@HAAVCvProposal@@@Z PROC ; CvLuaLeague::lProposalTableHelper, COMDAT

; 850  : {

	push	ebx

; 851  : 	lResolutionTableHelper(L, iTop, proposal);

	mov	ebx, DWORD PTR _iTop$[esp]
	push	esi
	mov	esi, DWORD PTR _L$[esp+4]
	push	edi
	mov	edi, DWORD PTR _proposal$[esp+8]
	push	edi
	push	ebx
	push	esi
	call	?lResolutionTableHelper@CvLuaLeague@@KAHPAUlua_State@@HAAVCvResolution@@@Z ; CvLuaLeague::lResolutionTableHelper
	add	esp, 12					; 0000000cH

; 852  : 
; 853  : 	lua_pushinteger(L, proposal.GetProposalPlayer());

	mov	ecx, edi
	call	?GetProposalPlayer@CvProposal@@QBE?AW4PlayerTypes@@XZ ; CvProposal::GetProposalPlayer
	push	eax
	push	esi
	call	_lua_pushinteger

; 854  : 	lua_setfield(L, iTop, "ProposalPlayer");

	push	OFFSET $SG219251
	push	ebx
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H
	pop	edi
	pop	esi

; 855  : 	
; 856  : 	return 0;

	xor	eax, eax
	pop	ebx

; 857  : }

	ret	0
?lProposalTableHelper@CvLuaLeague@@KAHPAUlua_State@@HAAVCvProposal@@@Z ENDP ; CvLuaLeague::lProposalTableHelper
_TEXT	ENDS
PUBLIC	?size@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QBEIXZ ; std::vector<CvString,std::allocator<CvString> >::size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?size@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QBEIXZ PROC ; std::vector<CvString,std::allocator<CvString> >::size, COMDAT
; _this$ = ecx

; 725  : 		{	// return length of sequence

	push	esi

; 726  : 		return (_Mylast - _Myfirst);

	mov	esi, DWORD PTR [ecx+8]
	sub	esi, DWORD PTR [ecx+4]
	mov	eax, -1840700269			; 92492493H
	imul	esi
	add	edx, esi
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	pop	esi

; 727  : 		}

	ret	0
?size@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QBEIXZ ENDP ; std::vector<CvString,std::allocator<CvString> >::size
_TEXT	ENDS
PUBLIC	??A?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAEAAVCvString@@I@Z ; std::vector<CvString,std::allocator<CvString> >::operator[]
; Function compile flags: /Ogtpy
;	COMDAT ??A?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAEAAVCvString@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAEAAVCvString@@I@Z PROC ; std::vector<CvString,std::allocator<CvString> >::operator[], COMDAT
; _this$ = ecx

; 775  : 
; 776  :  #if _HAS_ITERATOR_DEBUGGING
; 777  : 		if (size() <= _Pos)
; 778  : 			{
; 779  : 			_DEBUG_ERROR("vector subscript out of range");
; 780  : 			_SCL_SECURE_OUT_OF_RANGE;
; 781  : 			}
; 782  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 783  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 784  : 
; 785  : 		return (*(_Myfirst + _Pos));

	mov	eax, DWORD PTR __Pos$[esp-4]
	lea	edx, DWORD PTR [eax*8]
	sub	edx, eax
	mov	eax, DWORD PTR [ecx+4]
	lea	eax, DWORD PTR [eax+edx*4]

; 786  : 		}

	ret	4
??A?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAEAAVCvString@@I@Z ENDP ; std::vector<CvString,std::allocator<CvString> >::operator[]
_TEXT	ENDS
PUBLIC	?begin@?$BaseVector@VCvEnactProposal@@$0A@@@QAEPAVCvEnactProposal@@XZ ; BaseVector<CvEnactProposal,0>::begin
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ?begin@?$BaseVector@VCvEnactProposal@@$0A@@@QAEPAVCvEnactProposal@@XZ
_TEXT	SEGMENT
?begin@?$BaseVector@VCvEnactProposal@@$0A@@@QAEPAVCvEnactProposal@@XZ PROC ; BaseVector<CvEnactProposal,0>::begin, COMDAT
; _this$ = ecx

; 194  :         return m_pData; 

	mov	eax, DWORD PTR [ecx]

; 195  :     };

	ret	0
?begin@?$BaseVector@VCvEnactProposal@@$0A@@@QAEPAVCvEnactProposal@@XZ ENDP ; BaseVector<CvEnactProposal,0>::begin
_TEXT	ENDS
PUBLIC	?end@?$BaseVector@VCvEnactProposal@@$0A@@@QAEPAVCvEnactProposal@@XZ ; BaseVector<CvEnactProposal,0>::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$BaseVector@VCvEnactProposal@@$0A@@@QAEPAVCvEnactProposal@@XZ
_TEXT	SEGMENT
?end@?$BaseVector@VCvEnactProposal@@$0A@@@QAEPAVCvEnactProposal@@XZ PROC ; BaseVector<CvEnactProposal,0>::end, COMDAT
; _this$ = ecx

; 197  :         return m_pData+m_uiCurrSize; 

	mov	eax, DWORD PTR [ecx+4]
	imul	eax, 416				; 000001a0H
	add	eax, DWORD PTR [ecx]

; 198  :     };

	ret	0
?end@?$BaseVector@VCvEnactProposal@@$0A@@@QAEPAVCvEnactProposal@@XZ ENDP ; BaseVector<CvEnactProposal,0>::end
_TEXT	ENDS
PUBLIC	?begin@?$BaseVector@VCvRepealProposal@@$0A@@@QAEPAVCvRepealProposal@@XZ ; BaseVector<CvRepealProposal,0>::begin
; Function compile flags: /Ogtpy
;	COMDAT ?begin@?$BaseVector@VCvRepealProposal@@$0A@@@QAEPAVCvRepealProposal@@XZ
_TEXT	SEGMENT
?begin@?$BaseVector@VCvRepealProposal@@$0A@@@QAEPAVCvRepealProposal@@XZ PROC ; BaseVector<CvRepealProposal,0>::begin, COMDAT
; _this$ = ecx

; 194  :         return m_pData; 

	mov	eax, DWORD PTR [ecx]

; 195  :     };

	ret	0
?begin@?$BaseVector@VCvRepealProposal@@$0A@@@QAEPAVCvRepealProposal@@XZ ENDP ; BaseVector<CvRepealProposal,0>::begin
_TEXT	ENDS
PUBLIC	?end@?$BaseVector@VCvRepealProposal@@$0A@@@QAEPAVCvRepealProposal@@XZ ; BaseVector<CvRepealProposal,0>::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$BaseVector@VCvRepealProposal@@$0A@@@QAEPAVCvRepealProposal@@XZ
_TEXT	SEGMENT
?end@?$BaseVector@VCvRepealProposal@@$0A@@@QAEPAVCvRepealProposal@@XZ PROC ; BaseVector<CvRepealProposal,0>::end, COMDAT
; _this$ = ecx

; 197  :         return m_pData+m_uiCurrSize; 

	mov	eax, DWORD PTR [ecx+4]
	imul	eax, 708				; 000002c4H
	add	eax, DWORD PTR [ecx]

; 198  :     };

	ret	0
?end@?$BaseVector@VCvRepealProposal@@$0A@@@QAEPAVCvRepealProposal@@XZ ENDP ; BaseVector<CvRepealProposal,0>::end
_TEXT	ENDS
PUBLIC	?begin@?$BaseVector@VCvActiveResolution@@$0A@@@QAEPAVCvActiveResolution@@XZ ; BaseVector<CvActiveResolution,0>::begin
; Function compile flags: /Ogtpy
;	COMDAT ?begin@?$BaseVector@VCvActiveResolution@@$0A@@@QAEPAVCvActiveResolution@@XZ
_TEXT	SEGMENT
?begin@?$BaseVector@VCvActiveResolution@@$0A@@@QAEPAVCvActiveResolution@@XZ PROC ; BaseVector<CvActiveResolution,0>::begin, COMDAT
; _this$ = ecx

; 194  :         return m_pData; 

	mov	eax, DWORD PTR [ecx]

; 195  :     };

	ret	0
?begin@?$BaseVector@VCvActiveResolution@@$0A@@@QAEPAVCvActiveResolution@@XZ ENDP ; BaseVector<CvActiveResolution,0>::begin
_TEXT	ENDS
PUBLIC	?end@?$BaseVector@VCvActiveResolution@@$0A@@@QAEPAVCvActiveResolution@@XZ ; BaseVector<CvActiveResolution,0>::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$BaseVector@VCvActiveResolution@@$0A@@@QAEPAVCvActiveResolution@@XZ
_TEXT	SEGMENT
?end@?$BaseVector@VCvActiveResolution@@$0A@@@QAEPAVCvActiveResolution@@XZ PROC ; BaseVector<CvActiveResolution,0>::end, COMDAT
; _this$ = ecx

; 197  :         return m_pData+m_uiCurrSize; 

	mov	eax, DWORD PTR [ecx+4]
	imul	eax, 416				; 000001a0H
	add	eax, DWORD PTR [ecx]

; 198  :     };

	ret	0
?end@?$BaseVector@VCvActiveResolution@@$0A@@@QAEPAVCvActiveResolution@@XZ ENDP ; BaseVector<CvActiveResolution,0>::end
_TEXT	ENDS
PUBLIC	??1?$_Container_base_aux_alloc_empty@V?$allocator@VCvString@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_empty<std::allocator<CvString> >::~_Container_base_aux_alloc_empty<std::allocator<CvString> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??1?$_Container_base_aux_alloc_empty@V?$allocator@VCvString@@@std@@@std@@IAE@XZ
_TEXT	SEGMENT
??1?$_Container_base_aux_alloc_empty@V?$allocator@VCvString@@@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_empty<std::allocator<CvString> >::~_Container_base_aux_alloc_empty<std::allocator<CvString> >, COMDAT
; _this$ = ecx

; 627  : 	~_Container_base_aux_alloc_empty() { }

	ret	0
??1?$_Container_base_aux_alloc_empty@V?$allocator@VCvString@@@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<CvString> >::~_Container_base_aux_alloc_empty<std::allocator<CvString> >
_TEXT	ENDS
PUBLIC	??1?$BaseVector@VCvEnactProposal@@$0A@@@QAE@XZ	; BaseVector<CvEnactProposal,0>::~BaseVector<CvEnactProposal,0>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ??1?$BaseVector@VCvEnactProposal@@$0A@@@QAE@XZ
_TEXT	SEGMENT
??1?$BaseVector@VCvEnactProposal@@$0A@@@QAE@XZ PROC	; BaseVector<CvEnactProposal,0>::~BaseVector<CvEnactProposal,0>, COMDAT
; _this$ = ecx

; 111  : 	~BaseVector(){};

	ret	0
??1?$BaseVector@VCvEnactProposal@@$0A@@@QAE@XZ ENDP	; BaseVector<CvEnactProposal,0>::~BaseVector<CvEnactProposal,0>
_TEXT	ENDS
PUBLIC	??1?$BaseVector@VCvRepealProposal@@$0A@@@QAE@XZ	; BaseVector<CvRepealProposal,0>::~BaseVector<CvRepealProposal,0>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$BaseVector@VCvRepealProposal@@$0A@@@QAE@XZ
_TEXT	SEGMENT
??1?$BaseVector@VCvRepealProposal@@$0A@@@QAE@XZ PROC	; BaseVector<CvRepealProposal,0>::~BaseVector<CvRepealProposal,0>, COMDAT
; _this$ = ecx

; 111  : 	~BaseVector(){};

	ret	0
??1?$BaseVector@VCvRepealProposal@@$0A@@@QAE@XZ ENDP	; BaseVector<CvRepealProposal,0>::~BaseVector<CvRepealProposal,0>
_TEXT	ENDS
PUBLIC	??1?$BaseVector@VCvActiveResolution@@$0A@@@QAE@XZ ; BaseVector<CvActiveResolution,0>::~BaseVector<CvActiveResolution,0>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$BaseVector@VCvActiveResolution@@$0A@@@QAE@XZ
_TEXT	SEGMENT
??1?$BaseVector@VCvActiveResolution@@$0A@@@QAE@XZ PROC	; BaseVector<CvActiveResolution,0>::~BaseVector<CvActiveResolution,0>, COMDAT
; _this$ = ecx

; 111  : 	~BaseVector(){};

	ret	0
??1?$BaseVector@VCvActiveResolution@@$0A@@@QAE@XZ ENDP	; BaseVector<CvActiveResolution,0>::~BaseVector<CvActiveResolution,0>
_TEXT	ENDS
PUBLIC	??1?$_Container_base_aux_alloc_empty@V?$allocator@W4ResolutionTypes@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_empty<std::allocator<enum ResolutionTypes> >::~_Container_base_aux_alloc_empty<std::allocator<enum ResolutionTypes> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??1?$_Container_base_aux_alloc_empty@V?$allocator@W4ResolutionTypes@@@std@@@std@@IAE@XZ
_TEXT	SEGMENT
??1?$_Container_base_aux_alloc_empty@V?$allocator@W4ResolutionTypes@@@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_empty<std::allocator<enum ResolutionTypes> >::~_Container_base_aux_alloc_empty<std::allocator<enum ResolutionTypes> >, COMDAT
; _this$ = ecx

; 627  : 	~_Container_base_aux_alloc_empty() { }

	ret	0
??1?$_Container_base_aux_alloc_empty@V?$allocator@W4ResolutionTypes@@@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<enum ResolutionTypes> >::~_Container_base_aux_alloc_empty<std::allocator<enum ResolutionTypes> >
_TEXT	ENDS
PUBLIC	??D?$_Vector_const_iterator@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QBEABW4ResolutionTypes@@XZ ; std::_Vector_const_iterator<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::operator*
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??D?$_Vector_const_iterator@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QBEABW4ResolutionTypes@@XZ
_TEXT	SEGMENT
??D?$_Vector_const_iterator@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QBEABW4ResolutionTypes@@XZ PROC ; std::_Vector_const_iterator<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::operator*, COMDAT
; _this$ = ecx

; 92   : 
; 93   :  #if _HAS_ITERATOR_DEBUGGING
; 94   : 		if (this->_Mycont == 0
; 95   : 			|| _Myptr < ((_Myvec *)this->_Mycont)->_Myfirst
; 96   : 			|| ((_Myvec *)this->_Mycont)->_Mylast <= _Myptr)
; 97   : 			{
; 98   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 99   : 			_SCL_SECURE_OUT_OF_RANGE;
; 100  : 			}
; 101  :  #else
; 102  :  		_SCL_SECURE_VALIDATE(this->_Has_container());
; 103  : 		_SCL_SECURE_VALIDATE_RANGE(_Myptr < ((_Myvec *)(this->_Getmycont()))->_Mylast);
; 104  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 105  : 
; 106  : 		return (*_Myptr);

	mov	eax, DWORD PTR [ecx]

; 107  : 		}

	ret	0
??D?$_Vector_const_iterator@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QBEABW4ResolutionTypes@@XZ ENDP ; std::_Vector_const_iterator<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_const_iterator@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::operator++
; Function compile flags: /Ogtpy
;	COMDAT ??E?$_Vector_const_iterator@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_const_iterator@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::operator++, COMDAT
; _this$ = ecx

; 115  : 		{	// preincrement

	mov	eax, ecx

; 116  : 		_SCL_SECURE_VALIDATE(this->_Has_container());
; 117  : 		_SCL_SECURE_VALIDATE_RANGE(_Myptr < ((_Myvec *)(this->_Getmycont()))->_Mylast);
; 118  : 
; 119  :  #if _HAS_ITERATOR_DEBUGGING
; 120  : 		if (this->_Mycont == 0
; 121  : 			|| ((_Myvec *)this->_Mycont)->_Mylast <= _Myptr)
; 122  : 			_DEBUG_ERROR("vector iterator not incrementable");
; 123  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 124  : 
; 125  : 		++_Myptr;

	add	DWORD PTR [eax], 4

; 126  : 		return (*this);
; 127  : 		}

	ret	0
??E?$_Vector_const_iterator@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::operator++
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::operator==
; Function compile flags: /Ogtpy
;	COMDAT ??8?$_Vector_const_iterator@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::operator==, COMDAT
; _this$ = ecx

; 204  : 
; 205  :  #if _HAS_ITERATOR_DEBUGGING
; 206  : 		_Compat(_Right);
; 207  :  #else
; 208  : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));
; 209  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 210  : 
; 211  : 		return (_Myptr == _Right._Myptr);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	cl
	mov	al, cl

; 212  : 		}

	ret	4
??8?$_Vector_const_iterator@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::operator==
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@VCvString@@@std@@QAEXPAVCvString@@I@Z ; std::allocator<CvString>::deallocate
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?deallocate@?$allocator@VCvString@@@std@@QAEXPAVCvString@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@VCvString@@@std@@QAEXPAVCvString@@I@Z PROC ; std::allocator<CvString>::deallocate, COMDAT
; _this$ = ecx

; 140  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 141  : 		}

	ret	8
?deallocate@?$allocator@VCvString@@@std@@QAEXPAVCvString@@I@Z ENDP ; std::allocator<CvString>::deallocate
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@W4ResolutionTypes@@@std@@QAEXPAW4ResolutionTypes@@I@Z ; std::allocator<enum ResolutionTypes>::deallocate
; Function compile flags: /Ogtpy
;	COMDAT ?deallocate@?$allocator@W4ResolutionTypes@@@std@@QAEXPAW4ResolutionTypes@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@W4ResolutionTypes@@@std@@QAEXPAW4ResolutionTypes@@I@Z PROC ; std::allocator<enum ResolutionTypes>::deallocate, COMDAT
; _this$ = ecx

; 140  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 141  : 		}

	ret	8
?deallocate@?$allocator@W4ResolutionTypes@@@std@@QAEXPAW4ResolutionTypes@@I@Z ENDP ; std::allocator<enum ResolutionTypes>::deallocate
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QAE@PAW4ResolutionTypes@@@Z ; std::_Vector_const_iterator<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::_Vector_const_iterator<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QAE@PAW4ResolutionTypes@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_const_iterator@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QAE@PAW4ResolutionTypes@@@Z PROC ; std::_Vector_const_iterator<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::_Vector_const_iterator<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >, COMDAT
; _this$ = ecx

; 84   : 	explicit _Vector_const_iterator(_Tptr _Ptr)

	mov	eax, ecx

; 85   : 		{	// construct with pointer _Ptr
; 86   : 		_Myptr = _Ptr;

	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 87   : 		}

	ret	4
??0?$_Vector_const_iterator@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QAE@PAW4ResolutionTypes@@@Z ENDP ; std::_Vector_const_iterator<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::_Vector_const_iterator<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >
_TEXT	ENDS
PUBLIC	??_GCvEnactProposal@@QAEPAXI@Z			; CvEnactProposal::`scalar deleting destructor'
EXTRN	??1CvEnactProposal@@QAE@XZ:PROC			; CvEnactProposal::~CvEnactProposal
; Function compile flags: /Ogtpy
;	COMDAT ??_GCvEnactProposal@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCvEnactProposal@@QAEPAXI@Z PROC			; CvEnactProposal::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	call	??1CvEnactProposal@@QAE@XZ		; CvEnactProposal::~CvEnactProposal
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN4@scalar
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@scalar:
	mov	eax, esi
	pop	esi
	ret	4
??_GCvEnactProposal@@QAEPAXI@Z ENDP			; CvEnactProposal::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_GCvRepealProposal@@QAEPAXI@Z			; CvRepealProposal::`scalar deleting destructor'
EXTRN	??1CvRepealProposal@@QAE@XZ:PROC		; CvRepealProposal::~CvRepealProposal
; Function compile flags: /Ogtpy
;	COMDAT ??_GCvRepealProposal@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCvRepealProposal@@QAEPAXI@Z PROC			; CvRepealProposal::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	call	??1CvRepealProposal@@QAE@XZ		; CvRepealProposal::~CvRepealProposal
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN4@scalar@2
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@scalar@2:
	mov	eax, esi
	pop	esi
	ret	4
??_GCvRepealProposal@@QAEPAXI@Z ENDP			; CvRepealProposal::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_GCvActiveResolution@@QAEPAXI@Z		; CvActiveResolution::`scalar deleting destructor'
EXTRN	??1CvActiveResolution@@QAE@XZ:PROC		; CvActiveResolution::~CvActiveResolution
; Function compile flags: /Ogtpy
;	COMDAT ??_GCvActiveResolution@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCvActiveResolution@@QAEPAXI@Z PROC			; CvActiveResolution::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	call	??1CvActiveResolution@@QAE@XZ		; CvActiveResolution::~CvActiveResolution
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN4@scalar@3
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@scalar@3:
	mov	eax, esi
	pop	esi
	ret	4
??_GCvActiveResolution@@QAEPAXI@Z ENDP			; CvActiveResolution::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
EXTRN	_lua_settop:PROC
EXTRN	_lua_touserdata:PROC
EXTRN	_lua_getfield:PROC
EXTRN	_lua_type:PROC
EXTRN	_lua_gettop:PROC
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluascopedinstance.h
;	COMDAT ?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_bErrorOnFail$ = 16					; size = 1
?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z PROC ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance, COMDAT

; 127  : {

	push	ebx
	push	ebp
	push	esi

; 128  : 	const int stack_size = lua_gettop(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	mov	ebp, eax

; 129  : 	bool bFail = true;
; 130  : 
; 131  : 	InstanceType* pkInstance = NULL;
; 132  : 	if(lua_type(L, idx) == LUA_TTABLE)

	mov	eax, DWORD PTR _idx$[esp+16]
	push	eax
	push	esi
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN3@GetInstanc

; 133  : 	{
; 134  : 		lua_getfield(L, idx, "__instance");

	mov	ecx, DWORD PTR _idx$[esp+12]
	push	OFFSET $SG219420
	push	ecx
	push	esi
	call	_lua_getfield

; 135  : 		if(lua_type(L, -1) == LUA_TLIGHTUSERDATA)

	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN3@GetInstanc

; 136  : 		{
; 137  : 			pkInstance = static_cast<InstanceType*>(lua_touserdata(L, -1));

	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8

; 138  : 			if(pkInstance)

	test	edi, edi
	je	SHORT $LN3@GetInstanc

; 139  : 			{
; 140  : 				bFail = false;

	xor	bl, bl
$LN3@GetInstanc:

; 141  : 			}
; 142  : 		}
; 143  : 	}
; 144  : 
; 145  : 	lua_settop(L, stack_size);

	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8

; 146  : 
; 147  : 	if(bFail && bErrorOnFail)

	test	bl, bl
	je	SHORT $LN11@GetInstanc
	cmp	BYTE PTR _bErrorOnFail$[esp+12], 0
	je	SHORT $LN11@GetInstanc

; 148  : 	{
; 149  : 		if(idx == 1)

	cmp	DWORD PTR _idx$[esp+12], 1
	jne	SHORT $LN1@GetInstanc

; 150  : 			luaL_error(L, "Not a valid instance.  Either the instance is NULL or you used '.' instead of ':'.");

	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	add	esp, 8
$LN1@GetInstanc:

; 151  : 		Derived::HandleMissingInstance(L);

	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 8
$LN11@GetInstanc:

; 152  : 	}
; 153  : 	return pkInstance;

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 154  : }

	ret	0
?GetInstance@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAPAVCvLeague@@PAUlua_State@@H_N@Z ENDP ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::GetInstance
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAVCvString@@PAV1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAVCvString@@0@Z ; std::_Ptr_cat<CvString *,CvString *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Ptr_cat@PAVCvString@@PAV1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAVCvString@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAVCvString@@PAV1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAVCvString@@0@Z PROC ; std::_Ptr_cat<CvString *,CvString *>, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@PAVCvString@@PAV1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAVCvString@@0@Z ENDP ; std::_Ptr_cat<CvString *,CvString *>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAW4ResolutionTypes@@PAW41@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAW4ResolutionTypes@@0@Z ; std::_Ptr_cat<enum ResolutionTypes *,enum ResolutionTypes *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Ptr_cat@PAW4ResolutionTypes@@PAW41@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAW4ResolutionTypes@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAW4ResolutionTypes@@PAW41@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAW4ResolutionTypes@@0@Z PROC ; std::_Ptr_cat<enum ResolutionTypes *,enum ResolutionTypes *>, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@PAW4ResolutionTypes@@PAW41@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAW4ResolutionTypes@@0@Z ENDP ; std::_Ptr_cat<enum ResolutionTypes *,enum ResolutionTypes *>
_TEXT	ENDS
PUBLIC	??$_Destroy@W4ResolutionTypes@@@std@@YAXPAW4ResolutionTypes@@@Z ; std::_Destroy<enum ResolutionTypes>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Destroy@W4ResolutionTypes@@@std@@YAXPAW4ResolutionTypes@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@W4ResolutionTypes@@@std@@YAXPAW4ResolutionTypes@@@Z PROC ; std::_Destroy<enum ResolutionTypes>, COMDAT

; 59   : 	_DESTRUCTOR(_Ty, _Ptr);
; 60   : 	}

	ret	0
??$_Destroy@W4ResolutionTypes@@@std@@YAXPAW4ResolutionTypes@@@Z ENDP ; std::_Destroy<enum ResolutionTypes>
_TEXT	ENDS
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??0CvString@@QAE@PBD@Z				; CvString::CvString
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:PROC
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??0CvString@@QAE@PBD@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
??0CvString@@QAE@PBD@Z PROC				; CvString::CvString, COMDAT
; _this$ = ecx

; 25   : 	CvString(const char* s) : std::string(s ? s : "") {CvAssertMsg(s != NULL, "Passing NULL to std::string; possible heap corruption!");}

	mov	eax, DWORD PTR _s$[esp-4]
	push	esi
	mov	esi, ecx
	test	eax, eax
	jne	SHORT $LN4@CvString
	mov	eax, OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN4@CvString:
	push	eax
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	eax, esi
	pop	esi
	ret	4
??0CvString@@QAE@PBD@Z ENDP				; CvString::CvString
_TEXT	ENDS
PUBLIC	??1CvString@@QAE@XZ				; CvString::~CvString
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??1CvString@@QAE@XZ
_TEXT	SEGMENT
??1CvString@@QAE@XZ PROC				; CvString::~CvString, COMDAT
; _this$ = ecx

; 28   : 	~CvString() {}

	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
??1CvString@@QAE@XZ ENDP				; CvString::~CvString
_TEXT	ENDS
PUBLIC	??BCvString@@QBEPBDXZ				; CvString::operator char const *
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??BCvString@@QBEPBDXZ
_TEXT	SEGMENT
??BCvString@@QBEPBDXZ PROC				; CvString::operator char const *, COMDAT
; _this$ = ecx

; 31   : 	operator const char*() const 	{ return c_str(); }												

	jmp	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
??BCvString@@QBEPBDXZ ENDP				; CvString::operator char const *
_TEXT	ENDS
PUBLIC	??0CvString@@QAE@ABV0@@Z			; CvString::CvString
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??0CvString@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0CvString@@QAE@ABV0@@Z PROC				; CvString::CvString, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR ___that$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, esi
	pop	esi
	ret	4
??0CvString@@QAE@ABV0@@Z ENDP				; CvString::CvString
_TEXT	ENDS
PUBLIC	??1?$_Container_base_aux_alloc_empty@V?$allocator@H@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_empty<std::allocator<int> >::~_Container_base_aux_alloc_empty<std::allocator<int> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??1?$_Container_base_aux_alloc_empty@V?$allocator@H@std@@@std@@IAE@XZ
_TEXT	SEGMENT
??1?$_Container_base_aux_alloc_empty@V?$allocator@H@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_empty<std::allocator<int> >::~_Container_base_aux_alloc_empty<std::allocator<int> >, COMDAT
; _this$ = ecx

; 627  : 	~_Container_base_aux_alloc_empty() { }

	ret	0
??1?$_Container_base_aux_alloc_empty@V?$allocator@H@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<int> >::~_Container_base_aux_alloc_empty<std::allocator<int> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@H@std@@QAEXPAHI@Z	; std::allocator<int>::deallocate
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?deallocate@?$allocator@H@std@@QAEXPAHI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@H@std@@QAEXPAHI@Z PROC		; std::allocator<int>::deallocate, COMDAT
; _this$ = ecx

; 140  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 141  : 		}

	ret	8
?deallocate@?$allocator@H@std@@QAEXPAHI@Z ENDP		; std::allocator<int>::deallocate
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QAE@PAH@Z ; std::_Vector_const_iterator<int,std::allocator<int> >::_Vector_const_iterator<int,std::allocator<int> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QAE@PAH@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QAE@PAH@Z PROC ; std::_Vector_const_iterator<int,std::allocator<int> >::_Vector_const_iterator<int,std::allocator<int> >, COMDAT
; _this$ = ecx

; 84   : 	explicit _Vector_const_iterator(_Tptr _Ptr)

	mov	eax, ecx

; 85   : 		{	// construct with pointer _Ptr
; 86   : 		_Myptr = _Ptr;

	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 87   : 		}

	ret	4
??0?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QAE@PAH@Z ENDP ; std::_Vector_const_iterator<int,std::allocator<int> >::_Vector_const_iterator<int,std::allocator<int> >
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<int,std::allocator<int> >::operator==
; Function compile flags: /Ogtpy
;	COMDAT ??8?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<int,std::allocator<int> >::operator==, COMDAT
; _this$ = ecx

; 204  : 
; 205  :  #if _HAS_ITERATOR_DEBUGGING
; 206  : 		_Compat(_Right);
; 207  :  #else
; 208  : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));
; 209  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 210  : 
; 211  : 		return (_Myptr == _Right._Myptr);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	cl
	mov	al, cl

; 212  : 		}

	ret	4
??8?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<int,std::allocator<int> >::operator==
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAHPAH@std@@YA?AU_Scalar_ptr_iterator_tag@0@AAPAH0@Z ; std::_Ptr_cat<int *,int *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Ptr_cat@PAHPAH@std@@YA?AU_Scalar_ptr_iterator_tag@0@AAPAH0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAHPAH@std@@YA?AU_Scalar_ptr_iterator_tag@0@AAPAH0@Z PROC ; std::_Ptr_cat<int *,int *>, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@PAHPAH@std@@YA?AU_Scalar_ptr_iterator_tag@0@AAPAH0@Z ENDP ; std::_Ptr_cat<int *,int *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<int> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<int> >, COMDAT

; 242  : 	}

	ret	0
??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<int> >
_TEXT	ENDS
PUBLIC	??D?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QBEABHXZ ; std::_Vector_const_iterator<int,std::allocator<int> >::operator*
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??D?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QBEABHXZ
_TEXT	SEGMENT
??D?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QBEABHXZ PROC ; std::_Vector_const_iterator<int,std::allocator<int> >::operator*, COMDAT
; _this$ = ecx

; 92   : 
; 93   :  #if _HAS_ITERATOR_DEBUGGING
; 94   : 		if (this->_Mycont == 0
; 95   : 			|| _Myptr < ((_Myvec *)this->_Mycont)->_Myfirst
; 96   : 			|| ((_Myvec *)this->_Mycont)->_Mylast <= _Myptr)
; 97   : 			{
; 98   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 99   : 			_SCL_SECURE_OUT_OF_RANGE;
; 100  : 			}
; 101  :  #else
; 102  :  		_SCL_SECURE_VALIDATE(this->_Has_container());
; 103  : 		_SCL_SECURE_VALIDATE_RANGE(_Myptr < ((_Myvec *)(this->_Getmycont()))->_Mylast);
; 104  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 105  : 
; 106  : 		return (*_Myptr);

	mov	eax, DWORD PTR [ecx]

; 107  : 		}

	ret	0
??D?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QBEABHXZ ENDP ; std::_Vector_const_iterator<int,std::allocator<int> >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<int,std::allocator<int> >::operator++
; Function compile flags: /Ogtpy
;	COMDAT ??E?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<int,std::allocator<int> >::operator++, COMDAT
; _this$ = ecx

; 115  : 		{	// preincrement

	mov	eax, ecx

; 116  : 		_SCL_SECURE_VALIDATE(this->_Has_container());
; 117  : 		_SCL_SECURE_VALIDATE_RANGE(_Myptr < ((_Myvec *)(this->_Getmycont()))->_Mylast);
; 118  : 
; 119  :  #if _HAS_ITERATOR_DEBUGGING
; 120  : 		if (this->_Mycont == 0
; 121  : 			|| ((_Myvec *)this->_Mycont)->_Mylast <= _Myptr)
; 122  : 			_DEBUG_ERROR("vector iterator not incrementable");
; 123  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 124  : 
; 125  : 		++_Myptr;

	add	DWORD PTR [eax], 4

; 126  : 		return (*this);
; 127  : 		}

	ret	0
??E?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<int,std::allocator<int> >::operator++
_TEXT	ENDS
PUBLIC	?lIsNone@CvLuaLeague@@KAHPAUlua_State@@@Z	; CvLuaLeague::lIsNone
EXTRN	_lua_pushboolean:PROC
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvlualeague.cpp
;	COMDAT ?lIsNone@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsNone@CvLuaLeague@@KAHPAUlua_State@@@Z PROC		; CvLuaLeague::lIsNone, COMDAT

; 101  : {

	push	ebx
	push	ebp
	push	esi

; 102  : #ifdef AUI_WARNING_FIXES
; 103  : 	const bool bDoesNotExist = (GetInstance(L, 1, false) == NULL);
; 104  : 	lua_pushboolean(L, bDoesNotExist ? 1 : 0);
; 105  : #else
; 106  : 	const bool bDoesNotExist = (GetInstance(L, false) == NULL);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	xor	edi, edi
	push	edi
	push	esi
	mov	ebp, eax
	mov	bl, 1
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsNone
	push	OFFSET $SG219420
	push	edi
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsNone
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsNone
	xor	bl, bl
$LN5@lIsNone:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN10@lIsNone
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 8
$LN10@lIsNone:
	xor	eax, eax
	test	edi, edi
	sete	al

; 107  : 	lua_pushboolean(L, bDoesNotExist);

	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 108  : #endif
; 109  : 	return 1;

	mov	eax, 1
	pop	ebx

; 110  : }

	ret	0
?lIsNone@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP		; CvLuaLeague::lIsNone
_TEXT	ENDS
PUBLIC	?lGetID@CvLuaLeague@@KAHPAUlua_State@@@Z	; CvLuaLeague::lGetID
EXTRN	?GetID@CvLeague@@QBE?AW4LeagueTypes@@XZ:PROC	; CvLeague::GetID
; Function compile flags: /Ogtpy
;	COMDAT ?lGetID@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetID@CvLuaLeague@@KAHPAUlua_State@@@Z PROC		; CvLuaLeague::lGetID, COMDAT

; 114  : {

	push	ebx
	push	ebp
	push	esi

; 115  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetID
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetID
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetID
	xor	bl, bl
$LN5@lGetID:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN10@lGetID
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN10@lGetID:

; 116  : 
; 117  : 	const int iValue = (int) pLeague->GetID();

	mov	ecx, edi
	call	?GetID@CvLeague@@QBE?AW4LeagueTypes@@XZ	; CvLeague::GetID

; 118  : 	lua_pushinteger(L, iValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 119  : 	return 1;

	mov	eax, 1
	pop	ebx

; 120  : }

	ret	0
?lGetID@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP		; CvLuaLeague::lGetID
_TEXT	ENDS
PUBLIC	?lGetName@CvLuaLeague@@KAHPAUlua_State@@@Z	; CvLuaLeague::lGetName
EXTRN	__imp_??1String@Localization@@UAE@XZ:PROC
EXTRN	_lua_pushstring:PROC
EXTRN	__imp_?toUTF8@String@Localization@@QAEPBDXZ:PROC
EXTRN	?GetName@CvLeague@@QAE?AVString@Localization@@XZ:PROC ; CvLeague::GetName
EXTRN	___CxxFrameHandler3:PROC
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetName@CvLuaLeague@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetName@CvLuaLeague@@KAHPAUlua_State@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetName@CvLuaLeague@@KAHPAUlua_State@@@Z$1
__ehfuncinfo$?lGetName@CvLuaLeague@@KAHPAUlua_State@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?lGetName@CvLuaLeague@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvlualeague.cpp
xdata$x	ENDS
;	COMDAT ?lGetName@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_sResult$ = -120					; size = 28
_strName$ = -92						; size = 80
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetName@CvLuaLeague@@KAHPAUlua_State@@@Z PROC		; CvLuaLeague::lGetName, COMDAT

; 124  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetName@CvLuaLeague@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 108				; 0000006cH
	push	ebx
	push	ebp
	push	esi

; 125  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+128]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@lGetName
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@lGetName
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@lGetName
	xor	bl, bl
$LN7@lGetName:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetName
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetName:

; 126  : 
; 127  : 	Localization::String strName = pLeague->GetName();

	lea	eax, DWORD PTR _strName$[esp+136]
	push	eax
	mov	ecx, edi
	call	?GetName@CvLeague@@QAE?AVString@Localization@@XZ ; CvLeague::GetName

; 128  : 	const CvString sResult = strName.toUTF8();

	lea	ecx, DWORD PTR _strName$[esp+136]
	mov	DWORD PTR __$EHRec$[esp+144], 0
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	test	eax, eax
	jne	SHORT $LN17@lGetName
	mov	eax, OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN17@lGetName:
	push	eax
	lea	ecx, DWORD PTR _sResult$[esp+140]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z

; 129  : 	lua_pushstring(L, sResult);

	lea	ecx, DWORD PTR _sResult$[esp+136]
	mov	BYTE PTR __$EHRec$[esp+144], 1
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8

; 130  : 	return 1;

	lea	ecx, DWORD PTR _sResult$[esp+136]
	mov	BYTE PTR __$EHRec$[esp+144], 0
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR _strName$[esp+136]
	mov	DWORD PTR __$EHRec$[esp+144], -1
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 131  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+136]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 120				; 00000078H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetName@CvLuaLeague@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _strName$[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?lGetName@CvLuaLeague@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR _sResult$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetName@CvLuaLeague@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetName@CvLuaLeague@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetName@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP		; CvLuaLeague::lGetName
PUBLIC	?lCanChangeCustomName@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lCanChangeCustomName
EXTRN	?CanChangeCustomName@CvLeague@@QAE_NW4PlayerTypes@@@Z:PROC ; CvLeague::CanChangeCustomName
EXTRN	_lua_tointeger:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?lCanChangeCustomName@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanChangeCustomName@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lCanChangeCustomName, COMDAT

; 135  : {

	push	ebx
	push	ebp
	push	esi

; 136  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCanChange
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCanChange
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCanChange
	xor	bl, bl
$LN5@lCanChange:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN10@lCanChange
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN10@lCanChange:

; 137  : 	PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 138  : 
; 139  : 	const bool bValue = pLeague->CanChangeCustomName(ePlayer);

	push	eax
	mov	ecx, edi
	call	?CanChangeCustomName@CvLeague@@QAE_NW4PlayerTypes@@@Z ; CvLeague::CanChangeCustomName

; 140  : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 141  : 	return 1;

	mov	eax, 1
	pop	ebx

; 142  : }

	ret	0
?lCanChangeCustomName@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lCanChangeCustomName
_TEXT	ENDS
PUBLIC	?lIsInSession@CvLuaLeague@@KAHPAUlua_State@@@Z	; CvLuaLeague::lIsInSession
EXTRN	?IsInSession@CvLeague@@QAE_NXZ:PROC		; CvLeague::IsInSession
; Function compile flags: /Ogtpy
;	COMDAT ?lIsInSession@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsInSession@CvLuaLeague@@KAHPAUlua_State@@@Z PROC	; CvLuaLeague::lIsInSession, COMDAT

; 146  : {

	push	ebx
	push	ebp
	push	esi

; 147  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsInSessi
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsInSessi
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsInSessi
	xor	bl, bl
$LN5@lIsInSessi:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN10@lIsInSessi
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN10@lIsInSessi:

; 148  : 
; 149  : 	const bool bValue = pLeague->IsInSession();

	mov	ecx, edi
	call	?IsInSession@CvLeague@@QAE_NXZ		; CvLeague::IsInSession

; 150  : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 151  : 	return 1;

	mov	eax, 1
	pop	ebx

; 152  : }

	ret	0
?lIsInSession@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP	; CvLuaLeague::lIsInSession
_TEXT	ENDS
PUBLIC	?lIsInSpecialSession@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lIsInSpecialSession
EXTRN	?IsInSpecialSession@CvLeague@@QAE_NXZ:PROC	; CvLeague::IsInSpecialSession
; Function compile flags: /Ogtpy
;	COMDAT ?lIsInSpecialSession@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsInSpecialSession@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lIsInSpecialSession, COMDAT

; 156  : {

	push	ebx
	push	ebp
	push	esi

; 157  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsInSpeci
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsInSpeci
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsInSpeci
	xor	bl, bl
$LN5@lIsInSpeci:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN10@lIsInSpeci
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN10@lIsInSpeci:

; 158  : 
; 159  : 	const bool bValue = pLeague->IsInSpecialSession();

	mov	ecx, edi
	call	?IsInSpecialSession@CvLeague@@QAE_NXZ	; CvLeague::IsInSpecialSession

; 160  : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 161  : 	return 1;

	mov	eax, 1
	pop	ebx

; 162  : }

	ret	0
?lIsInSpecialSession@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lIsInSpecialSession
_TEXT	ENDS
PUBLIC	?lGetTurnsUntilSession@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetTurnsUntilSession
EXTRN	?GetTurnsUntilSession@CvLeague@@QBEHXZ:PROC	; CvLeague::GetTurnsUntilSession
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTurnsUntilSession@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTurnsUntilSession@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetTurnsUntilSession, COMDAT

; 166  : {

	push	ebx
	push	ebp
	push	esi

; 167  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetTurnsU
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetTurnsU
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetTurnsU
	xor	bl, bl
$LN5@lGetTurnsU:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN10@lGetTurnsU
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN10@lGetTurnsU:

; 168  : 
; 169  : 	const int iValue = pLeague->GetTurnsUntilSession();

	mov	ecx, edi
	call	?GetTurnsUntilSession@CvLeague@@QBEHXZ	; CvLeague::GetTurnsUntilSession

; 170  : 	lua_pushinteger(L, iValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 171  : 	return 1;

	mov	eax, 1
	pop	ebx

; 172  : }

	ret	0
?lGetTurnsUntilSession@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetTurnsUntilSession
_TEXT	ENDS
PUBLIC	?lGetTurnsUntilVictorySession@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetTurnsUntilVictorySession
EXTRN	?GetTurnsUntilVictorySession@CvLeague@@QAEHXZ:PROC ; CvLeague::GetTurnsUntilVictorySession
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTurnsUntilVictorySession@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTurnsUntilVictorySession@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetTurnsUntilVictorySession, COMDAT

; 176  : {

	push	ebx
	push	ebp
	push	esi

; 177  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetTurnsU@2
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetTurnsU@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetTurnsU@2
	xor	bl, bl
$LN5@lGetTurnsU@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN10@lGetTurnsU@2
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN10@lGetTurnsU@2:

; 178  : 
; 179  : 	const int iValue = pLeague->GetTurnsUntilVictorySession();

	mov	ecx, edi
	call	?GetTurnsUntilVictorySession@CvLeague@@QAEHXZ ; CvLeague::GetTurnsUntilVictorySession

; 180  : 	lua_pushinteger(L, iValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 181  : 	return 1;

	mov	eax, 1
	pop	ebx

; 182  : }

	ret	0
?lGetTurnsUntilVictorySession@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetTurnsUntilVictorySession
_TEXT	ENDS
PUBLIC	?lCanProposeEnactAnyChoice@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lCanProposeEnactAnyChoice
EXTRN	?CanProposeEnactAnyChoice@CvLeague@@QAE_NW4ResolutionTypes@@W4PlayerTypes@@@Z:PROC ; CvLeague::CanProposeEnactAnyChoice
; Function compile flags: /Ogtpy
;	COMDAT ?lCanProposeEnactAnyChoice@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanProposeEnactAnyChoice@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lCanProposeEnactAnyChoice, COMDAT

; 186  : {

	push	ebx
	push	ebp
	push	esi

; 187  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCanPropos
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCanPropos
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCanPropos
	xor	bl, bl
$LN5@lCanPropos:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN10@lCanPropos
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN10@lCanPropos:

; 188  : 	const ResolutionTypes eResolution = (ResolutionTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 189  : 	const PlayerTypes eProposer = (PlayerTypes) lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H

; 190  : 
; 191  : 	const bool bValue = pLeague->CanProposeEnactAnyChoice(eResolution, eProposer);

	push	eax
	push	ebx
	mov	ecx, edi
	call	?CanProposeEnactAnyChoice@CvLeague@@QAE_NW4ResolutionTypes@@W4PlayerTypes@@@Z ; CvLeague::CanProposeEnactAnyChoice

; 192  : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 193  : 	return 1;

	mov	eax, 1
	pop	ebx

; 194  : }

	ret	0
?lCanProposeEnactAnyChoice@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lCanProposeEnactAnyChoice
_TEXT	ENDS
PUBLIC	?lCanProposeEnact@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lCanProposeEnact
EXTRN	?CanProposeEnact@CvLeague@@QAE_NW4ResolutionTypes@@W4PlayerTypes@@HPAVCvString@@@Z:PROC ; CvLeague::CanProposeEnact
; Function compile flags: /Ogtpy
;	COMDAT ?lCanProposeEnact@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanProposeEnact@CvLuaLeague@@KAHPAUlua_State@@@Z PROC	; CvLuaLeague::lCanProposeEnact, COMDAT

; 198  : {

	push	ebx
	push	ebp
	push	esi

; 199  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCanPropos@2
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCanPropos@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCanPropos@2
	xor	bl, bl
$LN5@lCanPropos@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN10@lCanPropos@2
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN10@lCanPropos@2:

; 200  : 	const ResolutionTypes eResolution = (ResolutionTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 201  : 	const PlayerTypes eProposer = (PlayerTypes) lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger

; 202  : 	const int iChoice = lua_tointeger(L, 4);

	push	4
	push	esi
	mov	ebp, eax
	call	_lua_tointeger
	add	esp, 24					; 00000018H

; 203  : 
; 204  : 	const bool bValue = pLeague->CanProposeEnact(eResolution, eProposer, iChoice);

	push	0
	push	eax
	push	ebp
	push	ebx
	mov	ecx, edi
	call	?CanProposeEnact@CvLeague@@QAE_NW4ResolutionTypes@@W4PlayerTypes@@HPAVCvString@@@Z ; CvLeague::CanProposeEnact

; 205  : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 206  : 	return 1;

	mov	eax, 1
	pop	ebx

; 207  : }

	ret	0
?lCanProposeEnact@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP	; CvLuaLeague::lCanProposeEnact
_TEXT	ENDS
PUBLIC	?lCanProposeRepeal@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lCanProposeRepeal
EXTRN	?CanProposeRepeal@CvLeague@@QAE_NHW4PlayerTypes@@PAVCvString@@@Z:PROC ; CvLeague::CanProposeRepeal
; Function compile flags: /Ogtpy
;	COMDAT ?lCanProposeRepeal@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanProposeRepeal@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lCanProposeRepeal, COMDAT

; 211  : {

	push	ebx
	push	ebp
	push	esi

; 212  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCanPropos@3
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCanPropos@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCanPropos@3
	xor	bl, bl
$LN5@lCanPropos@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN10@lCanPropos@3
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN10@lCanPropos@3:

; 213  : 	const int iResolutionID = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 214  : 	const PlayerTypes eProposer = (PlayerTypes) lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H

; 215  : 
; 216  : 	const bool bValue = pLeague->CanProposeRepeal(iResolutionID, eProposer);

	push	0
	push	eax
	push	ebx
	mov	ecx, edi
	call	?CanProposeRepeal@CvLeague@@QAE_NHW4PlayerTypes@@PAVCvString@@@Z ; CvLeague::CanProposeRepeal

; 217  : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 218  : 	return 1;

	mov	eax, 1
	pop	ebx

; 219  : }

	ret	0
?lCanProposeRepeal@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lCanProposeRepeal
_TEXT	ENDS
PUBLIC	?lIsProposed@CvLuaLeague@@KAHPAUlua_State@@@Z	; CvLuaLeague::lIsProposed
EXTRN	?IsProposed@CvLeague@@QAE_NH_N0@Z:PROC		; CvLeague::IsProposed
EXTRN	_lua_toboolean:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?lIsProposed@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bRepeal$ = -4						; size = 1
_L$ = 8							; size = 4
?lIsProposed@CvLuaLeague@@KAHPAUlua_State@@@Z PROC	; CvLuaLeague::lIsProposed, COMDAT

; 223  : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 224  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsPropose
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsPropose
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsPropose
	xor	bl, bl
$LN5@lIsPropose:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN10@lIsPropose
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN10@lIsPropose:

; 225  : 	const int iResolutionID = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 226  : 	const bool bRepeal = lua_toboolean(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_toboolean
	add	esp, 16					; 00000010H
	test	eax, eax
	setne	al
	mov	BYTE PTR _bRepeal$[esp+20], al

; 227  : 
; 228  : 	const bool bValue = pLeague->IsProposed(iResolutionID, bRepeal);

	mov	ecx, DWORD PTR _bRepeal$[esp+20]
	push	0
	push	ecx
	push	ebx
	mov	ecx, edi
	call	?IsProposed@CvLeague@@QAE_NH_N0@Z	; CvLeague::IsProposed

; 229  : 	lua_pushboolean(L, bValue);

	movzx	edx, al
	push	edx
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 230  : 	return 1;

	mov	eax, 1
	pop	ebx

; 231  : }

	pop	ecx
	ret	0
?lIsProposed@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP	; CvLuaLeague::lIsProposed
_TEXT	ENDS
PUBLIC	?lGetTextForChoice@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetTextForChoice
EXTRN	?GetTextForChoice@CvLeague@@QAE?AVCvString@@W4ResolutionDecisionTypes@@H@Z:PROC ; CvLeague::GetTextForChoice
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetTextForChoice@CvLuaLeague@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetTextForChoice@CvLuaLeague@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetTextForChoice@CvLuaLeague@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetTextForChoice@CvLuaLeague@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvlualeague.cpp
xdata$x	ENDS
;	COMDAT ?lGetTextForChoice@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_sResult$ = -40						; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetTextForChoice@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetTextForChoice, COMDAT

; 260  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetTextForChoice@CvLuaLeague@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 28					; 0000001cH
	push	ebx
	push	ebp
	push	esi

; 261  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+48]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetTextFo
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetTextFo
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetTextFo
	xor	bl, bl
$LN6@lGetTextFo:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN11@lGetTextFo
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN11@lGetTextFo:

; 262  : 	const ResolutionDecisionTypes eDecision = (ResolutionDecisionTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 263  : 	const int iChoice = lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H

; 264  : 
; 265  : 	const CvString sResult = pLeague->GetTextForChoice(eDecision, iChoice);

	push	eax
	push	ebx
	lea	eax, DWORD PTR _sResult$[esp+64]
	push	eax
	mov	ecx, edi
	call	?GetTextForChoice@CvLeague@@QAE?AVCvString@@W4ResolutionDecisionTypes@@H@Z ; CvLeague::GetTextForChoice

; 266  : 	lua_pushstring(L, sResult);

	lea	ecx, DWORD PTR _sResult$[esp+56]
	mov	DWORD PTR __$EHRec$[esp+64], 0
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8

; 267  : 	return 1;

	lea	ecx, DWORD PTR _sResult$[esp+56]
	mov	DWORD PTR __$EHRec$[esp+64], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 268  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+56]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetTextForChoice@CvLuaLeague@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _sResult$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetTextForChoice@CvLuaLeague@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetTextForChoice@CvLuaLeague@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetTextForChoice@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetTextForChoice
PUBLIC	?lIsMember@CvLuaLeague@@KAHPAUlua_State@@@Z	; CvLuaLeague::lIsMember
EXTRN	?IsMember@CvLeague@@QBE_NW4PlayerTypes@@@Z:PROC	; CvLeague::IsMember
; Function compile flags: /Ogtpy
;	COMDAT ?lIsMember@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsMember@CvLuaLeague@@KAHPAUlua_State@@@Z PROC	; CvLuaLeague::lIsMember, COMDAT

; 445  : {

	push	ebx
	push	ebp
	push	esi

; 446  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsMember
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsMember
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsMember
	xor	bl, bl
$LN5@lIsMember:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN10@lIsMember
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN10@lIsMember:

; 447  : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 448  : 
; 449  : 	const bool bValue = pLeague->IsMember(ePlayer);

	push	eax
	mov	ecx, edi
	call	?IsMember@CvLeague@@QBE_NW4PlayerTypes@@@Z ; CvLeague::IsMember

; 450  : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 451  : 	return 1;

	mov	eax, 1
	pop	ebx

; 452  : }

	ret	0
?lIsMember@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP	; CvLuaLeague::lIsMember
_TEXT	ENDS
PUBLIC	?lCanVote@CvLuaLeague@@KAHPAUlua_State@@@Z	; CvLuaLeague::lCanVote
EXTRN	?CanVote@CvLeague@@QAE_NW4PlayerTypes@@@Z:PROC	; CvLeague::CanVote
; Function compile flags: /Ogtpy
;	COMDAT ?lCanVote@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanVote@CvLuaLeague@@KAHPAUlua_State@@@Z PROC		; CvLuaLeague::lCanVote, COMDAT

; 456  : {

	push	ebx
	push	ebp
	push	esi

; 457  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCanVote
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCanVote
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCanVote
	xor	bl, bl
$LN5@lCanVote:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN10@lCanVote
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN10@lCanVote:

; 458  : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 459  : 
; 460  : 	const bool bValue = pLeague->CanVote(ePlayer);

	push	eax
	mov	ecx, edi
	call	?CanVote@CvLeague@@QAE_NW4PlayerTypes@@@Z ; CvLeague::CanVote

; 461  : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 462  : 	return 1;

	mov	eax, 1
	pop	ebx

; 463  : }

	ret	0
?lCanVote@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP		; CvLuaLeague::lCanVote
_TEXT	ENDS
PUBLIC	?lGetRemainingVotesForMember@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetRemainingVotesForMember
EXTRN	?GetRemainingVotesForMember@CvLeague@@QAEHW4PlayerTypes@@@Z:PROC ; CvLeague::GetRemainingVotesForMember
; Function compile flags: /Ogtpy
;	COMDAT ?lGetRemainingVotesForMember@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetRemainingVotesForMember@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetRemainingVotesForMember, COMDAT

; 467  : {

	push	ebx
	push	ebp
	push	esi

; 468  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetRemain
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetRemain
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetRemain
	xor	bl, bl
$LN5@lGetRemain:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN10@lGetRemain
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN10@lGetRemain:

; 469  : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 470  : 
; 471  : 	const int iValue = pLeague->GetRemainingVotesForMember(ePlayer);

	push	eax
	mov	ecx, edi
	call	?GetRemainingVotesForMember@CvLeague@@QAEHW4PlayerTypes@@@Z ; CvLeague::GetRemainingVotesForMember

; 472  : 	lua_pushinteger(L, iValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 473  : 	return 1;

	mov	eax, 1
	pop	ebx

; 474  : }

	ret	0
?lGetRemainingVotesForMember@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetRemainingVotesForMember
_TEXT	ENDS
PUBLIC	?lGetSpentVotesForMember@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetSpentVotesForMember
EXTRN	?GetSpentVotesForMember@CvLeague@@QAEHW4PlayerTypes@@@Z:PROC ; CvLeague::GetSpentVotesForMember
; Function compile flags: /Ogtpy
;	COMDAT ?lGetSpentVotesForMember@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetSpentVotesForMember@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetSpentVotesForMember, COMDAT

; 478  : {

	push	ebx
	push	ebp
	push	esi

; 479  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetSpentV
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetSpentV
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetSpentV
	xor	bl, bl
$LN5@lGetSpentV:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN10@lGetSpentV
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN10@lGetSpentV:

; 480  : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 481  : 
; 482  : 	const int iValue = pLeague->GetSpentVotesForMember(ePlayer);

	push	eax
	mov	ecx, edi
	call	?GetSpentVotesForMember@CvLeague@@QAEHW4PlayerTypes@@@Z ; CvLeague::GetSpentVotesForMember

; 483  : 	lua_pushinteger(L, iValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 484  : 	return 1;

	mov	eax, 1
	pop	ebx

; 485  : }

	ret	0
?lGetSpentVotesForMember@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetSpentVotesForMember
_TEXT	ENDS
PUBLIC	?lGetCoreVotesForMember@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetCoreVotesForMember
EXTRN	?GetCoreVotesForMember@CvLeague@@QAEHW4PlayerTypes@@@Z:PROC ; CvLeague::GetCoreVotesForMember
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCoreVotesForMember@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCoreVotesForMember@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetCoreVotesForMember, COMDAT

; 489  : {

	push	ebx
	push	ebp
	push	esi

; 490  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetCoreVo
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetCoreVo
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetCoreVo
	xor	bl, bl
$LN5@lGetCoreVo:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN10@lGetCoreVo
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN10@lGetCoreVo:

; 491  : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 492  : 
; 493  : 	const int iValue = pLeague->GetCoreVotesForMember(ePlayer);

	push	eax
	mov	ecx, edi
	call	?GetCoreVotesForMember@CvLeague@@QAEHW4PlayerTypes@@@Z ; CvLeague::GetCoreVotesForMember

; 494  : 	lua_pushinteger(L, iValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 495  : 	return 1;

	mov	eax, 1
	pop	ebx

; 496  : }

	ret	0
?lGetCoreVotesForMember@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetCoreVotesForMember
_TEXT	ENDS
PUBLIC	?lCalculateStartingVotesForMember@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lCalculateStartingVotesForMember
EXTRN	?CalculateStartingVotesForMember@CvLeague@@QAEHW4PlayerTypes@@_N@Z:PROC ; CvLeague::CalculateStartingVotesForMember
; Function compile flags: /Ogtpy
;	COMDAT ?lCalculateStartingVotesForMember@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCalculateStartingVotesForMember@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lCalculateStartingVotesForMember, COMDAT

; 500  : {

	push	ebx
	push	ebp
	push	esi

; 501  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCalculate
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCalculate
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCalculate
	xor	bl, bl
$LN5@lCalculate:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN10@lCalculate
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN10@lCalculate:

; 502  : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 503  : 
; 504  : 	const int iValue = pLeague->CalculateStartingVotesForMember(ePlayer);

	push	0
	push	eax
	mov	ecx, edi
	call	?CalculateStartingVotesForMember@CvLeague@@QAEHW4PlayerTypes@@_N@Z ; CvLeague::CalculateStartingVotesForMember

; 505  : 	lua_pushinteger(L, iValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 506  : 	return 1;

	mov	eax, 1
	pop	ebx

; 507  : }

	ret	0
?lCalculateStartingVotesForMember@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lCalculateStartingVotesForMember
_TEXT	ENDS
PUBLIC	?lCanPropose@CvLuaLeague@@KAHPAUlua_State@@@Z	; CvLuaLeague::lCanPropose
EXTRN	?CanPropose@CvLeague@@QAE_NW4PlayerTypes@@@Z:PROC ; CvLeague::CanPropose
; Function compile flags: /Ogtpy
;	COMDAT ?lCanPropose@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanPropose@CvLuaLeague@@KAHPAUlua_State@@@Z PROC	; CvLuaLeague::lCanPropose, COMDAT

; 511  : {

	push	ebx
	push	ebp
	push	esi

; 512  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCanPropos@4
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCanPropos@4
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCanPropos@4
	xor	bl, bl
$LN5@lCanPropos@4:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN10@lCanPropos@4
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN10@lCanPropos@4:

; 513  : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 514  : 
; 515  : 	const bool bValue = pLeague->CanPropose(ePlayer);

	push	eax
	mov	ecx, edi
	call	?CanPropose@CvLeague@@QAE_NW4PlayerTypes@@@Z ; CvLeague::CanPropose

; 516  : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 517  : 	return 1;

	mov	eax, 1
	pop	ebx

; 518  : }

	ret	0
?lCanPropose@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP	; CvLuaLeague::lCanPropose
_TEXT	ENDS
PUBLIC	?lGetRemainingProposalsForMember@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetRemainingProposalsForMember
EXTRN	?GetRemainingProposalsForMember@CvLeague@@QAEHW4PlayerTypes@@@Z:PROC ; CvLeague::GetRemainingProposalsForMember
; Function compile flags: /Ogtpy
;	COMDAT ?lGetRemainingProposalsForMember@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetRemainingProposalsForMember@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetRemainingProposalsForMember, COMDAT

; 522  : {

	push	ebx
	push	ebp
	push	esi

; 523  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetRemain@2
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetRemain@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetRemain@2
	xor	bl, bl
$LN5@lGetRemain@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN10@lGetRemain@2
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN10@lGetRemain@2:

; 524  : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 525  : 
; 526  : 	const int iValue = pLeague->GetRemainingProposalsForMember(ePlayer);

	push	eax
	mov	ecx, edi
	call	?GetRemainingProposalsForMember@CvLeague@@QAEHW4PlayerTypes@@@Z ; CvLeague::GetRemainingProposalsForMember

; 527  : 	lua_pushinteger(L, iValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 528  : 	return 1;

	mov	eax, 1
	pop	ebx

; 529  : }

	ret	0
?lGetRemainingProposalsForMember@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetRemainingProposalsForMember
_TEXT	ENDS
PUBLIC	?lIsHostMember@CvLuaLeague@@KAHPAUlua_State@@@Z	; CvLuaLeague::lIsHostMember
EXTRN	?IsHostMember@CvLeague@@QBE_NW4PlayerTypes@@@Z:PROC ; CvLeague::IsHostMember
; Function compile flags: /Ogtpy
;	COMDAT ?lIsHostMember@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsHostMember@CvLuaLeague@@KAHPAUlua_State@@@Z PROC	; CvLuaLeague::lIsHostMember, COMDAT

; 533  : {

	push	ebx
	push	ebp
	push	esi

; 534  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsHostMem
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsHostMem
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsHostMem
	xor	bl, bl
$LN5@lIsHostMem:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN10@lIsHostMem
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN10@lIsHostMem:

; 535  : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 536  : 
; 537  : 	const bool bValue = pLeague->IsHostMember(ePlayer);

	push	eax
	mov	ecx, edi
	call	?IsHostMember@CvLeague@@QBE_NW4PlayerTypes@@@Z ; CvLeague::IsHostMember

; 538  : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 539  : 	return 1;

	mov	eax, 1
	pop	ebx

; 540  : }

	ret	0
?lIsHostMember@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP	; CvLuaLeague::lIsHostMember
_TEXT	ENDS
PUBLIC	?lGetHostMember@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetHostMember
EXTRN	?GetHostMember@CvLeague@@QBE?AW4PlayerTypes@@XZ:PROC ; CvLeague::GetHostMember
; Function compile flags: /Ogtpy
;	COMDAT ?lGetHostMember@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHostMember@CvLuaLeague@@KAHPAUlua_State@@@Z PROC	; CvLuaLeague::lGetHostMember, COMDAT

; 544  : {

	push	ebx
	push	ebp
	push	esi

; 545  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetHostMe
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetHostMe
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetHostMe
	xor	bl, bl
$LN5@lGetHostMe:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN10@lGetHostMe
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN10@lGetHostMe:

; 546  : 	
; 547  : 	const PlayerTypes eHost = pLeague->GetHostMember();

	mov	ecx, edi
	call	?GetHostMember@CvLeague@@QBE?AW4PlayerTypes@@XZ ; CvLeague::GetHostMember

; 548  : 	lua_pushinteger(L, (int)eHost);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 549  : 	return 1;

	mov	eax, 1
	pop	ebx

; 550  : }

	ret	0
?lGetHostMember@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP	; CvLuaLeague::lGetHostMember
_TEXT	ENDS
PUBLIC	?lIsUnitedNations@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lIsUnitedNations
EXTRN	?IsUnitedNations@CvLeague@@QBE_NXZ:PROC		; CvLeague::IsUnitedNations
; Function compile flags: /Ogtpy
;	COMDAT ?lIsUnitedNations@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsUnitedNations@CvLuaLeague@@KAHPAUlua_State@@@Z PROC	; CvLuaLeague::lIsUnitedNations, COMDAT

; 554  : {

	push	ebx
	push	ebp
	push	esi

; 555  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsUnitedN
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsUnitedN
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsUnitedN
	xor	bl, bl
$LN5@lIsUnitedN:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN10@lIsUnitedN
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN10@lIsUnitedN:

; 556  : 
; 557  : 	const bool bValue = pLeague->IsUnitedNations();

	mov	ecx, edi
	call	?IsUnitedNations@CvLeague@@QBE_NXZ	; CvLeague::IsUnitedNations

; 558  : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 559  : 	return 1;

	mov	eax, 1
	pop	ebx

; 560  : }

	ret	0
?lIsUnitedNations@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP	; CvLuaLeague::lIsUnitedNations
_TEXT	ENDS
PUBLIC	?lIsProjectActive@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lIsProjectActive
EXTRN	?IsProjectActive@CvLeague@@QBE_NW4LeagueProjectTypes@@@Z:PROC ; CvLeague::IsProjectActive
; Function compile flags: /Ogtpy
;	COMDAT ?lIsProjectActive@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsProjectActive@CvLuaLeague@@KAHPAUlua_State@@@Z PROC	; CvLuaLeague::lIsProjectActive, COMDAT

; 564  : {

	push	ebx
	push	ebp
	push	esi

; 565  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsProject
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsProject
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsProject
	xor	bl, bl
$LN5@lIsProject:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN10@lIsProject
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN10@lIsProject:

; 566  : 	const LeagueProjectTypes eLeagueProject = (LeagueProjectTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 567  : 
; 568  : 	const bool bValue = pLeague->IsProjectActive(eLeagueProject);

	push	eax
	mov	ecx, edi
	call	?IsProjectActive@CvLeague@@QBE_NW4LeagueProjectTypes@@@Z ; CvLeague::IsProjectActive

; 569  : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 570  : 	return 1;

	mov	eax, 1
	pop	ebx

; 571  : }

	ret	0
?lIsProjectActive@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP	; CvLuaLeague::lIsProjectActive
_TEXT	ENDS
PUBLIC	?lIsProjectComplete@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lIsProjectComplete
EXTRN	?IsProjectComplete@CvLeague@@QBE_NW4LeagueProjectTypes@@@Z:PROC ; CvLeague::IsProjectComplete
; Function compile flags: /Ogtpy
;	COMDAT ?lIsProjectComplete@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsProjectComplete@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lIsProjectComplete, COMDAT

; 575  : {

	push	ebx
	push	ebp
	push	esi

; 576  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsProject@2
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsProject@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsProject@2
	xor	bl, bl
$LN5@lIsProject@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN10@lIsProject@2
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN10@lIsProject@2:

; 577  : 	const LeagueProjectTypes eLeagueProject = (LeagueProjectTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 578  : 
; 579  : 	const bool bValue = pLeague->IsProjectComplete(eLeagueProject);

	push	eax
	mov	ecx, edi
	call	?IsProjectComplete@CvLeague@@QBE_NW4LeagueProjectTypes@@@Z ; CvLeague::IsProjectComplete

; 580  : 	lua_pushboolean(L, bValue);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 581  : 	return 1;

	mov	eax, 1
	pop	ebx

; 582  : }

	ret	0
?lIsProjectComplete@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lIsProjectComplete
_TEXT	ENDS
PUBLIC	?lGetProjectCostPerPlayer@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetProjectCostPerPlayer
EXTRN	?GetProjectCostPerPlayer@CvLeague@@QBEHW4LeagueProjectTypes@@@Z:PROC ; CvLeague::GetProjectCostPerPlayer
; Function compile flags: /Ogtpy
;	COMDAT ?lGetProjectCostPerPlayer@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProjectCostPerPlayer@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetProjectCostPerPlayer, COMDAT

; 587  : {

	push	ebx
	push	ebp
	push	esi

; 588  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetProjec
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetProjec
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetProjec
	xor	bl, bl
$LN5@lGetProjec:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN10@lGetProjec
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN10@lGetProjec:

; 589  : 	const LeagueProjectTypes eLeagueProject = (LeagueProjectTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 590  : 
; 591  : 	const int iValue = pLeague->GetProjectCostPerPlayer(eLeagueProject);

	push	eax
	mov	ecx, edi
	call	?GetProjectCostPerPlayer@CvLeague@@QBEHW4LeagueProjectTypes@@@Z ; CvLeague::GetProjectCostPerPlayer

; 592  : 	lua_pushinteger(L, iValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 593  : 	return 1;

	mov	eax, 1
	pop	ebx

; 594  : }

	ret	0
?lGetProjectCostPerPlayer@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetProjectCostPerPlayer
_TEXT	ENDS
PUBLIC	?lGetProjectBuildingCostPerPlayer@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetProjectBuildingCostPerPlayer
EXTRN	?GetProjectBuildingCostPerPlayer@CvLeague@@QBEHW4BuildingTypes@@@Z:PROC ; CvLeague::GetProjectBuildingCostPerPlayer
; Function compile flags: /Ogtpy
;	COMDAT ?lGetProjectBuildingCostPerPlayer@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProjectBuildingCostPerPlayer@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetProjectBuildingCostPerPlayer, COMDAT

; 598  : {

	push	ebx
	push	ebp
	push	esi

; 599  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetProjec@2
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetProjec@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetProjec@2
	xor	bl, bl
$LN5@lGetProjec@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN10@lGetProjec@2
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN10@lGetProjec@2:

; 600  : 	const BuildingTypes eRewardBuilding = (BuildingTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 601  : 
; 602  : 	const int iValue = pLeague->GetProjectBuildingCostPerPlayer(eRewardBuilding);

	push	eax
	mov	ecx, edi
	call	?GetProjectBuildingCostPerPlayer@CvLeague@@QBEHW4BuildingTypes@@@Z ; CvLeague::GetProjectBuildingCostPerPlayer

; 603  : 	lua_pushinteger(L, iValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 604  : 	return 1;

	mov	eax, 1
	pop	ebx

; 605  : }

	ret	0
?lGetProjectBuildingCostPerPlayer@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetProjectBuildingCostPerPlayer
_TEXT	ENDS
PUBLIC	?lGetProjectCost@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetProjectCost
EXTRN	?GetProjectCost@CvLeague@@QBEHW4LeagueProjectTypes@@@Z:PROC ; CvLeague::GetProjectCost
; Function compile flags: /Ogtpy
;	COMDAT ?lGetProjectCost@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProjectCost@CvLuaLeague@@KAHPAUlua_State@@@Z PROC	; CvLuaLeague::lGetProjectCost, COMDAT

; 609  : {

	push	ebx
	push	ebp
	push	esi

; 610  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetProjec@3
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetProjec@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetProjec@3
	xor	bl, bl
$LN5@lGetProjec@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN10@lGetProjec@3
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN10@lGetProjec@3:

; 611  : 	const LeagueProjectTypes eLeagueProject = (LeagueProjectTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 612  : 
; 613  : 	const int iValue = pLeague->GetProjectCost(eLeagueProject);

	push	eax
	mov	ecx, edi
	call	?GetProjectCost@CvLeague@@QBEHW4LeagueProjectTypes@@@Z ; CvLeague::GetProjectCost

; 614  : 	lua_pushinteger(L, iValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 615  : 	return 1;

	mov	eax, 1
	pop	ebx

; 616  : }

	ret	0
?lGetProjectCost@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP	; CvLuaLeague::lGetProjectCost
_TEXT	ENDS
PUBLIC	?lGetMemberContribution@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetMemberContribution
EXTRN	?GetMemberContribution@CvLeague@@QBEHW4PlayerTypes@@W4LeagueProjectTypes@@@Z:PROC ; CvLeague::GetMemberContribution
; Function compile flags: /Ogtpy
;	COMDAT ?lGetMemberContribution@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMemberContribution@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetMemberContribution, COMDAT

; 620  : {

	push	ebx
	push	ebp
	push	esi

; 621  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetMember
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetMember
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetMember
	xor	bl, bl
$LN5@lGetMember:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN10@lGetMember
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN10@lGetMember:

; 622  : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 623  : 	const LeagueProjectTypes eLeagueProject = (LeagueProjectTypes) lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H

; 624  : 
; 625  : 	const int iValue = pLeague->GetMemberContribution(ePlayer, eLeagueProject);

	push	eax
	push	ebx
	mov	ecx, edi
	call	?GetMemberContribution@CvLeague@@QBEHW4PlayerTypes@@W4LeagueProjectTypes@@@Z ; CvLeague::GetMemberContribution

; 626  : 	lua_pushinteger(L, iValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 627  : 	return 1;

	mov	eax, 1
	pop	ebx

; 628  : }

	ret	0
?lGetMemberContribution@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetMemberContribution
_TEXT	ENDS
PUBLIC	?lGetMemberContributionTier@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetMemberContributionTier
EXTRN	?GetMemberContributionTier@CvLeague@@QAE?AW4ContributionTier@1@W4PlayerTypes@@W4LeagueProjectTypes@@@Z:PROC ; CvLeague::GetMemberContributionTier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetMemberContributionTier@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMemberContributionTier@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetMemberContributionTier, COMDAT

; 632  : {

	push	ebx
	push	ebp
	push	esi

; 633  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetMember@2
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetMember@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetMember@2
	xor	bl, bl
$LN5@lGetMember@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN10@lGetMember@2
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN10@lGetMember@2:

; 634  : 	const PlayerTypes ePlayer = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 635  : 	const LeagueProjectTypes eLeagueProject = (LeagueProjectTypes) lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H

; 636  : 
; 637  : 	const int iValue = pLeague->GetMemberContributionTier(ePlayer, eLeagueProject);

	push	eax
	push	ebx
	mov	ecx, edi
	call	?GetMemberContributionTier@CvLeague@@QAE?AW4ContributionTier@1@W4PlayerTypes@@W4LeagueProjectTypes@@@Z ; CvLeague::GetMemberContributionTier

; 638  : 	lua_pushinteger(L, iValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 639  : 	return 1;

	mov	eax, 1
	pop	ebx

; 640  : }

	ret	0
?lGetMemberContributionTier@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetMemberContributionTier
_TEXT	ENDS
PUBLIC	?lGetContributionTierThreshold@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetContributionTierThreshold
EXTRN	?GetContributionTierThreshold@CvLeague@@QAEMW4ContributionTier@1@W4LeagueProjectTypes@@@Z:PROC ; CvLeague::GetContributionTierThreshold
EXTRN	__fltused:DWORD
EXTRN	__ftol2_sse_excpt:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?lGetContributionTierThreshold@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_fValue$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetContributionTierThreshold@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetContributionTierThreshold, COMDAT

; 644  : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 645  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetContri
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetContri
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetContri
	xor	bl, bl
$LN5@lGetContri:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN10@lGetContri
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN10@lGetContri:

; 646  : 	const CvLeague::ContributionTier eTier = (CvLeague::ContributionTier) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 647  : 	const LeagueProjectTypes eLeagueProject = (LeagueProjectTypes) lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H

; 648  : 
; 649  : 	float fValue = pLeague->GetContributionTierThreshold(eTier, eLeagueProject);

	push	eax
	push	ebx
	mov	ecx, edi
	call	?GetContributionTierThreshold@CvLeague@@QAEMW4ContributionTier@1@W4LeagueProjectTypes@@@Z ; CvLeague::GetContributionTierThreshold
	fstp	DWORD PTR _fValue$[esp+20]

; 650  : 	const int iValue = (int) fValue;
; 651  : 	lua_pushinteger(L, iValue);

	fld	DWORD PTR _fValue$[esp+20]
	call	__ftol2_sse_excpt
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 652  : 	return 1;

	mov	eax, 1
	pop	ebx

; 653  : }

	pop	ecx
	ret	0
?lGetContributionTierThreshold@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetContributionTierThreshold
_TEXT	ENDS
PUBLIC	?lGetArtsyGreatPersonRateModifier@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetArtsyGreatPersonRateModifier
EXTRN	?GetArtsyGreatPersonRateModifier@CvLeague@@QAEHXZ:PROC ; CvLeague::GetArtsyGreatPersonRateModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetArtsyGreatPersonRateModifier@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetArtsyGreatPersonRateModifier@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetArtsyGreatPersonRateModifier, COMDAT

; 657  : {

	push	ebx
	push	ebp
	push	esi

; 658  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetArtsyG
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetArtsyG
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetArtsyG
	xor	bl, bl
$LN5@lGetArtsyG:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN10@lGetArtsyG
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN10@lGetArtsyG:

; 659  : 
; 660  : 	int iValue = pLeague->GetArtsyGreatPersonRateModifier();

	mov	ecx, edi
	call	?GetArtsyGreatPersonRateModifier@CvLeague@@QAEHXZ ; CvLeague::GetArtsyGreatPersonRateModifier

; 661  : 	lua_pushinteger(L, iValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 662  : 	return 1;

	mov	eax, 1
	pop	ebx

; 663  : }

	ret	0
?lGetArtsyGreatPersonRateModifier@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetArtsyGreatPersonRateModifier
_TEXT	ENDS
PUBLIC	?lGetScienceyGreatPersonRateModifier@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetScienceyGreatPersonRateModifier
EXTRN	?GetScienceyGreatPersonRateModifier@CvLeague@@QAEHXZ:PROC ; CvLeague::GetScienceyGreatPersonRateModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetScienceyGreatPersonRateModifier@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetScienceyGreatPersonRateModifier@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetScienceyGreatPersonRateModifier, COMDAT

; 667  : {

	push	ebx
	push	ebp
	push	esi

; 668  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetScienc
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetScienc
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetScienc
	xor	bl, bl
$LN5@lGetScienc:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN10@lGetScienc
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN10@lGetScienc:

; 669  : 
; 670  : 	int iValue = pLeague->GetScienceyGreatPersonRateModifier();

	mov	ecx, edi
	call	?GetScienceyGreatPersonRateModifier@CvLeague@@QAEHXZ ; CvLeague::GetScienceyGreatPersonRateModifier

; 671  : 	lua_pushinteger(L, iValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 672  : 	return 1;

	mov	eax, 1
	pop	ebx

; 673  : }

	ret	0
?lGetScienceyGreatPersonRateModifier@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetScienceyGreatPersonRateModifier
_TEXT	ENDS
PUBLIC	?lGetResolutionName@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetResolutionName
EXTRN	?GetResolutionName@CvLeague@@QAE?AVCvString@@W4ResolutionTypes@@HH_N@Z:PROC ; CvLeague::GetResolutionName
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetResolutionName@CvLuaLeague@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetResolutionName@CvLuaLeague@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetResolutionName@CvLuaLeague@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetResolutionName@CvLuaLeague@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvlualeague.cpp
xdata$x	ENDS
;	COMDAT ?lGetResolutionName@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bIncludePrefix$ = -48					; size = 1
_iProposerChoice$ = -44					; size = 4
_sValue$ = -40						; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetResolutionName@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetResolutionName, COMDAT

; 677  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetResolutionName@CvLuaLeague@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 36					; 00000024H
	push	ebx
	push	ebp
	push	esi

; 678  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+56]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetResolu
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetResolu
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetResolu
	xor	bl, bl
$LN6@lGetResolu:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN11@lGetResolu
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN11@lGetResolu:

; 679  : 	const ResolutionTypes eResolution = (ResolutionTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 680  : 	const int iResolutionID = lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger

; 681  : 	const int iProposerChoice = lua_tointeger(L, 4);

	push	4
	push	esi
	mov	ebp, eax
	call	_lua_tointeger

; 682  : 	const bool bIncludePrefix = lua_toboolean(L, 5);

	push	5
	push	esi
	mov	DWORD PTR _iProposerChoice$[esp+96], eax
	call	_lua_toboolean

; 683  : 
; 684  : 	CvString sValue = pLeague->GetResolutionName(eResolution, iResolutionID, iProposerChoice, bIncludePrefix);

	mov	edx, DWORD PTR _iProposerChoice$[esp+96]
	add	esp, 32					; 00000020H
	test	eax, eax
	setne	al
	mov	BYTE PTR _bIncludePrefix$[esp+64], al
	mov	ecx, DWORD PTR _bIncludePrefix$[esp+64]
	push	ecx
	push	edx
	push	ebp
	push	ebx
	lea	eax, DWORD PTR _sValue$[esp+80]
	push	eax
	mov	ecx, edi
	call	?GetResolutionName@CvLeague@@QAE?AVCvString@@W4ResolutionTypes@@HH_N@Z ; CvLeague::GetResolutionName

; 685  : 	lua_pushstring(L, sValue.c_str());

	lea	ecx, DWORD PTR _sValue$[esp+64]
	mov	DWORD PTR __$EHRec$[esp+72], 0
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8

; 686  : 	return 1;

	lea	ecx, DWORD PTR _sValue$[esp+64]
	mov	DWORD PTR __$EHRec$[esp+72], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 687  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+64]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 48					; 00000030H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetResolutionName@CvLuaLeague@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _sValue$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetResolutionName@CvLuaLeague@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetResolutionName@CvLuaLeague@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetResolutionName@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetResolutionName
PUBLIC	?lGetResolutionDetails@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetResolutionDetails
EXTRN	?GetResolutionDetails@CvLeague@@QAE?AVCvString@@W4ResolutionTypes@@W4PlayerTypes@@HH@Z:PROC ; CvLeague::GetResolutionDetails
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetResolutionDetails@CvLuaLeague@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetResolutionDetails@CvLuaLeague@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetResolutionDetails@CvLuaLeague@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetResolutionDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvlualeague.cpp
xdata$x	ENDS
;	COMDAT ?lGetResolutionDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iResolutionID$ = -44					; size = 4
_sValue$ = -40						; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetResolutionDetails@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetResolutionDetails, COMDAT

; 691  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetResolutionDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 32					; 00000020H
	push	ebx
	push	ebp
	push	esi

; 692  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+52]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetResolu@2
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetResolu@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetResolu@2
	xor	bl, bl
$LN6@lGetResolu@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN11@lGetResolu@2
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN11@lGetResolu@2:

; 693  : 	const ResolutionTypes eResolution = (ResolutionTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 694  : 	const PlayerTypes eObserver = (PlayerTypes) lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger

; 695  : 	const int iResolutionID = lua_tointeger(L, 4);

	push	4
	push	esi
	mov	ebp, eax
	call	_lua_tointeger

; 696  : 	const int iProposerChoice = lua_tointeger(L, 5);

	push	5
	push	esi
	mov	DWORD PTR _iResolutionID$[esp+92], eax
	call	_lua_tointeger
	add	esp, 32					; 00000020H

; 697  : 
; 698  : 	CvString sValue = pLeague->GetResolutionDetails(eResolution, eObserver, iResolutionID, iProposerChoice);

	push	eax
	mov	eax, DWORD PTR _iResolutionID$[esp+64]
	push	eax
	push	ebp
	push	ebx
	lea	ecx, DWORD PTR _sValue$[esp+76]
	push	ecx
	mov	ecx, edi
	call	?GetResolutionDetails@CvLeague@@QAE?AVCvString@@W4ResolutionTypes@@W4PlayerTypes@@HH@Z ; CvLeague::GetResolutionDetails

; 699  : 	lua_pushstring(L, sValue.c_str());

	lea	ecx, DWORD PTR _sValue$[esp+60]
	mov	DWORD PTR __$EHRec$[esp+68], 0
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8

; 700  : 	return 1;

	lea	ecx, DWORD PTR _sValue$[esp+60]
	mov	DWORD PTR __$EHRec$[esp+68], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 701  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+60]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 44					; 0000002cH
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetResolutionDetails@CvLuaLeague@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _sValue$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetResolutionDetails@CvLuaLeague@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetResolutionDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetResolutionDetails@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetResolutionDetails
PUBLIC	?lGetMemberDetails@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetMemberDetails
EXTRN	?GetMemberDetails@CvLeague@@QAE?AVCvString@@W4PlayerTypes@@0@Z:PROC ; CvLeague::GetMemberDetails
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetMemberDetails@CvLuaLeague@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetMemberDetails@CvLuaLeague@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetMemberDetails@CvLuaLeague@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetMemberDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvlualeague.cpp
xdata$x	ENDS
;	COMDAT ?lGetMemberDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_sValue$ = -40						; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetMemberDetails@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetMemberDetails, COMDAT

; 705  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetMemberDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 28					; 0000001cH
	push	ebx
	push	ebp
	push	esi

; 706  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+48]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetMember@3
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetMember@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetMember@3
	xor	bl, bl
$LN6@lGetMember@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN11@lGetMember@3
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN11@lGetMember@3:

; 707  : 	const PlayerTypes eMember = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 708  : 	const PlayerTypes eObserver = (PlayerTypes) lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H

; 709  : 
; 710  : 	CvString sValue = pLeague->GetMemberDetails(eMember, eObserver);

	push	eax
	push	ebx
	lea	eax, DWORD PTR _sValue$[esp+64]
	push	eax
	mov	ecx, edi
	call	?GetMemberDetails@CvLeague@@QAE?AVCvString@@W4PlayerTypes@@0@Z ; CvLeague::GetMemberDetails

; 711  : 	lua_pushstring(L, sValue.c_str());

	lea	ecx, DWORD PTR _sValue$[esp+56]
	mov	DWORD PTR __$EHRec$[esp+64], 0
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8

; 712  : 	return 1;

	lea	ecx, DWORD PTR _sValue$[esp+56]
	mov	DWORD PTR __$EHRec$[esp+64], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 713  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+56]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetMemberDetails@CvLuaLeague@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _sValue$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetMemberDetails@CvLuaLeague@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetMemberDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetMemberDetails@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetMemberDetails
PUBLIC	?lGetProjectDetails@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetProjectDetails
EXTRN	?GetProjectDetails@CvLeague@@QAE?AVCvString@@W4LeagueProjectTypes@@W4PlayerTypes@@@Z:PROC ; CvLeague::GetProjectDetails
EXTRN	_luaL_optinteger:PROC
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetProjectDetails@CvLuaLeague@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetProjectDetails@CvLuaLeague@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetProjectDetails@CvLuaLeague@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetProjectDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvlualeague.cpp
xdata$x	ENDS
;	COMDAT ?lGetProjectDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_sValue$ = -40						; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetProjectDetails@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetProjectDetails, COMDAT

; 717  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetProjectDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 28					; 0000001cH
	push	ebx
	push	ebp
	push	esi

; 718  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+48]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetProjec@4
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetProjec@4
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetProjec@4
	xor	bl, bl
$LN6@lGetProjec@4:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN11@lGetProjec@4
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN11@lGetProjec@4:

; 719  : 	const LeagueProjectTypes eProject = (LeagueProjectTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 720  : 	const PlayerTypes eObserver = (PlayerTypes) luaL_optint(L, 3, NO_PLAYER);

	push	-1
	push	3
	push	esi
	mov	ebx, eax
	call	_luaL_optinteger
	add	esp, 20					; 00000014H

; 721  : 
; 722  : 	CvString sValue = pLeague->GetProjectDetails(eProject, eObserver);

	push	eax
	push	ebx
	lea	eax, DWORD PTR _sValue$[esp+64]
	push	eax
	mov	ecx, edi
	call	?GetProjectDetails@CvLeague@@QAE?AVCvString@@W4LeagueProjectTypes@@W4PlayerTypes@@@Z ; CvLeague::GetProjectDetails

; 723  : 	lua_pushstring(L, sValue.c_str());

	lea	ecx, DWORD PTR _sValue$[esp+56]
	mov	DWORD PTR __$EHRec$[esp+64], 0
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8

; 724  : 	return 1;

	lea	ecx, DWORD PTR _sValue$[esp+56]
	mov	DWORD PTR __$EHRec$[esp+64], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 725  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+56]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetProjectDetails@CvLuaLeague@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _sValue$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetProjectDetails@CvLuaLeague@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetProjectDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetProjectDetails@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetProjectDetails
PUBLIC	?lGetProjectRewardTierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetProjectRewardTierDetails
EXTRN	?GetProjectRewardTierDetails@CvLeague@@QAE?AVCvString@@HW4LeagueProjectTypes@@W4PlayerTypes@@@Z:PROC ; CvLeague::GetProjectRewardTierDetails
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetProjectRewardTierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetProjectRewardTierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetProjectRewardTierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetProjectRewardTierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvlualeague.cpp
xdata$x	ENDS
;	COMDAT ?lGetProjectRewardTierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_sValue$ = -40						; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetProjectRewardTierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetProjectRewardTierDetails, COMDAT

; 729  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetProjectRewardTierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 28					; 0000001cH
	push	ebx
	push	ebp
	push	esi

; 730  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+48]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetProjec@5
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetProjec@5
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetProjec@5
	xor	bl, bl
$LN6@lGetProjec@5:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN11@lGetProjec@5
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN11@lGetProjec@5:

; 731  : 	const int iTier = lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 732  : 	const LeagueProjectTypes eProject = (LeagueProjectTypes) lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger

; 733  : 	const PlayerTypes eObserver = (PlayerTypes) luaL_optint(L, 4, NO_PLAYER);

	push	-1
	push	4
	push	esi
	mov	ebp, eax
	call	_luaL_optinteger
	add	esp, 28					; 0000001cH

; 734  : 
; 735  : 	CvString sValue = pLeague->GetProjectRewardTierDetails(iTier, eProject, eObserver);

	push	eax
	push	ebp
	push	ebx
	lea	eax, DWORD PTR _sValue$[esp+68]
	push	eax
	mov	ecx, edi
	call	?GetProjectRewardTierDetails@CvLeague@@QAE?AVCvString@@HW4LeagueProjectTypes@@W4PlayerTypes@@@Z ; CvLeague::GetProjectRewardTierDetails

; 736  : 	lua_pushstring(L, sValue.c_str());

	lea	ecx, DWORD PTR _sValue$[esp+56]
	mov	DWORD PTR __$EHRec$[esp+64], 0
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8

; 737  : 	return 1;

	lea	ecx, DWORD PTR _sValue$[esp+56]
	mov	DWORD PTR __$EHRec$[esp+64], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 738  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+56]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetProjectRewardTierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _sValue$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetProjectRewardTierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetProjectRewardTierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetProjectRewardTierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetProjectRewardTierDetails
PUBLIC	?lGetLeagueSplashTitle@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetLeagueSplashTitle
EXTRN	?GetLeagueSplashTitle@CvLeague@@QAE?AVCvString@@W4LeagueSpecialSessionTypes@@_N@Z:PROC ; CvLeague::GetLeagueSplashTitle
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetLeagueSplashTitle@CvLuaLeague@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetLeagueSplashTitle@CvLuaLeague@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetLeagueSplashTitle@CvLuaLeague@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetLeagueSplashTitle@CvLuaLeague@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvlualeague.cpp
xdata$x	ENDS
;	COMDAT ?lGetLeagueSplashTitle@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bJustFounded$ = -44					; size = 1
_sValue$ = -40						; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetLeagueSplashTitle@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetLeagueSplashTitle, COMDAT

; 765  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetLeagueSplashTitle@CvLuaLeague@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 32					; 00000020H
	push	ebx
	push	ebp
	push	esi

; 766  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+52]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetLeague
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetLeague
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetLeague
	xor	bl, bl
$LN6@lGetLeague:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN11@lGetLeague
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN11@lGetLeague:

; 767  : 	const LeagueSpecialSessionTypes eGoverningSpecialSession = (LeagueSpecialSessionTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 768  : 	const bool bJustFounded = lua_toboolean(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_toboolean
	add	esp, 16					; 00000010H
	test	eax, eax
	setne	al
	mov	BYTE PTR _bJustFounded$[esp+60], al

; 769  : 
; 770  : 	CvString sValue = pLeague->GetLeagueSplashTitle(eGoverningSpecialSession, bJustFounded);

	mov	ecx, DWORD PTR _bJustFounded$[esp+60]
	push	ecx
	push	ebx
	lea	edx, DWORD PTR _sValue$[esp+68]
	push	edx
	mov	ecx, edi
	call	?GetLeagueSplashTitle@CvLeague@@QAE?AVCvString@@W4LeagueSpecialSessionTypes@@_N@Z ; CvLeague::GetLeagueSplashTitle

; 771  : 	lua_pushstring(L, sValue.c_str());

	lea	ecx, DWORD PTR _sValue$[esp+60]
	mov	DWORD PTR __$EHRec$[esp+68], 0
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8

; 772  : 	return 1;

	lea	ecx, DWORD PTR _sValue$[esp+60]
	mov	DWORD PTR __$EHRec$[esp+68], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 773  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+60]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 44					; 0000002cH
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetLeagueSplashTitle@CvLuaLeague@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _sValue$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetLeagueSplashTitle@CvLuaLeague@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetLeagueSplashTitle@CvLuaLeague@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetLeagueSplashTitle@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetLeagueSplashTitle
PUBLIC	?lGetLeagueSplashDescription@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetLeagueSplashDescription
EXTRN	?GetLeagueSplashDescription@CvLeague@@QAE?AVCvString@@W4LeagueSpecialSessionTypes@@_N@Z:PROC ; CvLeague::GetLeagueSplashDescription
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetLeagueSplashDescription@CvLuaLeague@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetLeagueSplashDescription@CvLuaLeague@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetLeagueSplashDescription@CvLuaLeague@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetLeagueSplashDescription@CvLuaLeague@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvlualeague.cpp
xdata$x	ENDS
;	COMDAT ?lGetLeagueSplashDescription@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bJustFounded$ = -44					; size = 1
_sValue$ = -40						; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetLeagueSplashDescription@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetLeagueSplashDescription, COMDAT

; 777  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetLeagueSplashDescription@CvLuaLeague@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 32					; 00000020H
	push	ebx
	push	ebp
	push	esi

; 778  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+52]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetLeague@2
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetLeague@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetLeague@2
	xor	bl, bl
$LN6@lGetLeague@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN11@lGetLeague@2
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN11@lGetLeague@2:

; 779  : 	const LeagueSpecialSessionTypes eGoverningSpecialSession = (LeagueSpecialSessionTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 780  : 	const bool bJustFounded = lua_toboolean(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_toboolean
	add	esp, 16					; 00000010H
	test	eax, eax
	setne	al
	mov	BYTE PTR _bJustFounded$[esp+60], al

; 781  : 
; 782  : 	CvString sValue = pLeague->GetLeagueSplashDescription(eGoverningSpecialSession, bJustFounded);

	mov	ecx, DWORD PTR _bJustFounded$[esp+60]
	push	ecx
	push	ebx
	lea	edx, DWORD PTR _sValue$[esp+68]
	push	edx
	mov	ecx, edi
	call	?GetLeagueSplashDescription@CvLeague@@QAE?AVCvString@@W4LeagueSpecialSessionTypes@@_N@Z ; CvLeague::GetLeagueSplashDescription

; 783  : 	lua_pushstring(L, sValue.c_str());

	lea	ecx, DWORD PTR _sValue$[esp+60]
	mov	DWORD PTR __$EHRec$[esp+68], 0
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8

; 784  : 	return 1;

	lea	ecx, DWORD PTR _sValue$[esp+60]
	mov	DWORD PTR __$EHRec$[esp+68], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 785  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+60]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 44					; 0000002cH
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetLeagueSplashDescription@CvLuaLeague@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _sValue$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetLeagueSplashDescription@CvLuaLeague@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetLeagueSplashDescription@CvLuaLeague@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetLeagueSplashDescription@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetLeagueSplashDescription
PUBLIC	?lGetLeagueSplashThisEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetLeagueSplashThisEraDetails
EXTRN	?GetLeagueSplashThisEraDetails@CvLeague@@QAE?AVCvString@@W4LeagueSpecialSessionTypes@@_N@Z:PROC ; CvLeague::GetLeagueSplashThisEraDetails
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetLeagueSplashThisEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetLeagueSplashThisEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetLeagueSplashThisEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetLeagueSplashThisEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvlualeague.cpp
xdata$x	ENDS
;	COMDAT ?lGetLeagueSplashThisEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bJustFounded$ = -44					; size = 1
_sValue$ = -40						; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetLeagueSplashThisEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetLeagueSplashThisEraDetails, COMDAT

; 789  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetLeagueSplashThisEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 32					; 00000020H
	push	ebx
	push	ebp
	push	esi

; 790  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+52]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetLeague@3
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetLeague@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetLeague@3
	xor	bl, bl
$LN6@lGetLeague@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN11@lGetLeague@3
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN11@lGetLeague@3:

; 791  : 	const LeagueSpecialSessionTypes eGoverningSpecialSession = (LeagueSpecialSessionTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 792  : 	const bool bJustFounded = lua_toboolean(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_toboolean
	add	esp, 16					; 00000010H
	test	eax, eax
	setne	al
	mov	BYTE PTR _bJustFounded$[esp+60], al

; 793  : 
; 794  : 	CvString sValue = pLeague->GetLeagueSplashThisEraDetails(eGoverningSpecialSession, bJustFounded);

	mov	ecx, DWORD PTR _bJustFounded$[esp+60]
	push	ecx
	push	ebx
	lea	edx, DWORD PTR _sValue$[esp+68]
	push	edx
	mov	ecx, edi
	call	?GetLeagueSplashThisEraDetails@CvLeague@@QAE?AVCvString@@W4LeagueSpecialSessionTypes@@_N@Z ; CvLeague::GetLeagueSplashThisEraDetails

; 795  : 	lua_pushstring(L, sValue.c_str());

	lea	ecx, DWORD PTR _sValue$[esp+60]
	mov	DWORD PTR __$EHRec$[esp+68], 0
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8

; 796  : 	return 1;

	lea	ecx, DWORD PTR _sValue$[esp+60]
	mov	DWORD PTR __$EHRec$[esp+68], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 797  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+60]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 44					; 0000002cH
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetLeagueSplashThisEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _sValue$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetLeagueSplashThisEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetLeagueSplashThisEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetLeagueSplashThisEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetLeagueSplashThisEraDetails
PUBLIC	?lGetLeagueSplashNextEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetLeagueSplashNextEraDetails
EXTRN	?GetLeagueSplashNextEraDetails@CvLeague@@QAE?AVCvString@@W4LeagueSpecialSessionTypes@@_N@Z:PROC ; CvLeague::GetLeagueSplashNextEraDetails
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetLeagueSplashNextEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetLeagueSplashNextEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetLeagueSplashNextEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetLeagueSplashNextEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvlualeague.cpp
xdata$x	ENDS
;	COMDAT ?lGetLeagueSplashNextEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bJustFounded$ = -44					; size = 1
_sValue$ = -40						; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetLeagueSplashNextEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetLeagueSplashNextEraDetails, COMDAT

; 801  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetLeagueSplashNextEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 32					; 00000020H
	push	ebx
	push	ebp
	push	esi

; 802  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+52]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetLeague@4
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetLeague@4
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetLeague@4
	xor	bl, bl
$LN6@lGetLeague@4:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN11@lGetLeague@4
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN11@lGetLeague@4:

; 803  : 	const LeagueSpecialSessionTypes eGoverningSpecialSession = (LeagueSpecialSessionTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 804  : 	const bool bJustFounded = lua_toboolean(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_toboolean
	add	esp, 16					; 00000010H
	test	eax, eax
	setne	al
	mov	BYTE PTR _bJustFounded$[esp+60], al

; 805  : 
; 806  : 	CvString sValue = pLeague->GetLeagueSplashNextEraDetails(eGoverningSpecialSession, bJustFounded);

	mov	ecx, DWORD PTR _bJustFounded$[esp+60]
	push	ecx
	push	ebx
	lea	edx, DWORD PTR _sValue$[esp+68]
	push	edx
	mov	ecx, edi
	call	?GetLeagueSplashNextEraDetails@CvLeague@@QAE?AVCvString@@W4LeagueSpecialSessionTypes@@_N@Z ; CvLeague::GetLeagueSplashNextEraDetails

; 807  : 	lua_pushstring(L, sValue.c_str());

	lea	ecx, DWORD PTR _sValue$[esp+60]
	mov	DWORD PTR __$EHRec$[esp+68], 0
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8

; 808  : 	return 1;

	lea	ecx, DWORD PTR _sValue$[esp+60]
	mov	DWORD PTR __$EHRec$[esp+68], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 809  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+60]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 44					; 0000002cH
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetLeagueSplashNextEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _sValue$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetLeagueSplashNextEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetLeagueSplashNextEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetLeagueSplashNextEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetLeagueSplashNextEraDetails
PUBLIC	?lGetGreatPersonRateModifierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetGreatPersonRateModifierDetails
EXTRN	?GetGreatPersonRateModifierDetails@CvLeague@@QAE?AVCvString@@W4UnitClassTypes@@@Z:PROC ; CvLeague::GetGreatPersonRateModifierDetails
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetGreatPersonRateModifierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetGreatPersonRateModifierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetGreatPersonRateModifierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetGreatPersonRateModifierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvlualeague.cpp
xdata$x	ENDS
;	COMDAT ?lGetGreatPersonRateModifierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_sValue$ = -40						; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetGreatPersonRateModifierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetGreatPersonRateModifierDetails, COMDAT

; 813  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetGreatPersonRateModifierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 28					; 0000001cH
	push	ebx
	push	ebp
	push	esi

; 814  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+48]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetGreatP
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetGreatP
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN6@lGetGreatP
	xor	bl, bl
$LN6@lGetGreatP:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN11@lGetGreatP
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN11@lGetGreatP:

; 815  : 	const UnitClassTypes eGreatPersonClass = (UnitClassTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 816  : 
; 817  : 	CvString sValue = pLeague->GetGreatPersonRateModifierDetails(eGreatPersonClass);

	push	eax
	lea	eax, DWORD PTR _sValue$[esp+60]
	push	eax
	mov	ecx, edi
	call	?GetGreatPersonRateModifierDetails@CvLeague@@QAE?AVCvString@@W4UnitClassTypes@@@Z ; CvLeague::GetGreatPersonRateModifierDetails

; 818  : 	lua_pushstring(L, sValue.c_str());

	lea	ecx, DWORD PTR _sValue$[esp+56]
	mov	DWORD PTR __$EHRec$[esp+64], 0
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8

; 819  : 	return 1;

	lea	ecx, DWORD PTR _sValue$[esp+56]
	mov	DWORD PTR __$EHRec$[esp+64], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 820  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+56]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetGreatPersonRateModifierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _sValue$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetGreatPersonRateModifierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetGreatPersonRateModifierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetGreatPersonRateModifierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetGreatPersonRateModifierDetails
PUBLIC	??D?$_Vector_iterator@HV?$allocator@H@std@@@std@@QBEAAHXZ ; std::_Vector_iterator<int,std::allocator<int> >::operator*
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??D?$_Vector_iterator@HV?$allocator@H@std@@@std@@QBEAAHXZ
_TEXT	SEGMENT
??D?$_Vector_iterator@HV?$allocator@H@std@@@std@@QBEAAHXZ PROC ; std::_Vector_iterator<int,std::allocator<int> >::operator*, COMDAT
; _this$ = ecx

; 339  : 		return ((reference)**(_Mybase *)this);

	mov	eax, DWORD PTR [ecx]

; 340  : 		}

	ret	0
??D?$_Vector_iterator@HV?$allocator@H@std@@@std@@QBEAAHXZ ENDP ; std::_Vector_iterator<int,std::allocator<int> >::operator*
_TEXT	ENDS
PUBLIC	??D?$_Vector_iterator@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QBEAAW4ResolutionTypes@@XZ ; std::_Vector_iterator<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::operator*
; Function compile flags: /Ogtpy
;	COMDAT ??D?$_Vector_iterator@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QBEAAW4ResolutionTypes@@XZ
_TEXT	SEGMENT
??D?$_Vector_iterator@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QBEAAW4ResolutionTypes@@XZ PROC ; std::_Vector_iterator<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::operator*, COMDAT
; _this$ = ecx

; 339  : 		return ((reference)**(_Mybase *)this);

	mov	eax, DWORD PTR [ecx]

; 340  : 		}

	ret	0
??D?$_Vector_iterator@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QBEAAW4ResolutionTypes@@XZ ENDP ; std::_Vector_iterator<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_iterator@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::operator++
; Function compile flags: /Ogtpy
;	COMDAT ??E?$_Vector_iterator@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_iterator@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::operator++, COMDAT
; _this$ = ecx

; 348  : 		{	// preincrement

	mov	eax, ecx

; 349  : 		++(*(_Mybase *)this);

	add	DWORD PTR [eax], 4

; 350  : 		return (*this);
; 351  : 		}

	ret	0
??E?$_Vector_iterator@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::operator++
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::operator!=
; Function compile flags: /Ogtpy
;	COMDAT ??9?$_Vector_const_iterator@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::operator!=, COMDAT
; _this$ = ecx

; 216  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	setne	cl
	mov	al, cl

; 217  : 		}

	ret	4
??9?$_Vector_const_iterator@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::operator!=
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ ; std::_Vector_val<CvString,std::allocator<CvString> >::~_Vector_val<CvString,std::allocator<CvString> >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Vector_val@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<CvString,std::allocator<CvString> >::~_Vector_val<CvString,std::allocator<CvString> >, COMDAT
; _this$ = ecx
	ret	0
??1?$_Vector_val@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<CvString,std::allocator<CvString> >::~_Vector_val<CvString,std::allocator<CvString> >
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QAE@XZ ; std::_Vector_val<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::~_Vector_val<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Vector_val@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::~_Vector_val<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >, COMDAT
; _this$ = ecx
	ret	0
??1?$_Vector_val@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::~_Vector_val<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >
_TEXT	ENDS
PUBLIC	??E?$_Vector_iterator@HV?$allocator@H@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<int,std::allocator<int> >::operator++
; Function compile flags: /Ogtpy
;	COMDAT ??E?$_Vector_iterator@HV?$allocator@H@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_iterator@HV?$allocator@H@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<int,std::allocator<int> >::operator++, COMDAT
; _this$ = ecx

; 348  : 		{	// preincrement

	mov	eax, ecx

; 349  : 		++(*(_Mybase *)this);

	add	DWORD PTR [eax], 4

; 350  : 		return (*this);
; 351  : 		}

	ret	0
??E?$_Vector_iterator@HV?$allocator@H@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<int,std::allocator<int> >::operator++
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QAE@PAW4ResolutionTypes@@@Z ; std::_Vector_iterator<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::_Vector_iterator<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Vector_iterator@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QAE@PAW4ResolutionTypes@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_iterator@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QAE@PAW4ResolutionTypes@@@Z PROC ; std::_Vector_iterator<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::_Vector_iterator<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >, COMDAT
; _this$ = ecx

; 333  : 		{	// construct with pointer _Ptr

	mov	eax, ecx
	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 334  : 		}

	ret	4
??0?$_Vector_iterator@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QAE@PAW4ResolutionTypes@@@Z ENDP ; std::_Vector_iterator<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::_Vector_iterator<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >
_TEXT	ENDS
PUBLIC	?Destroy@?$BaseVector@VCvEnactProposal@@$0A@@@IAEXPAVCvEnactProposal@@I@Z ; BaseVector<CvEnactProposal,0>::Destroy
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ?Destroy@?$BaseVector@VCvEnactProposal@@$0A@@@IAEXPAVCvEnactProposal@@I@Z
_TEXT	SEGMENT
_pVal$ = 8						; size = 4
_uiNumElements$ = 12					; size = 4
?Destroy@?$BaseVector@VCvEnactProposal@@$0A@@@IAEXPAVCvEnactProposal@@I@Z PROC ; BaseVector<CvEnactProposal,0>::Destroy, COMDAT
; _this$ = ecx

; 220  : 	{

	push	edi

; 221  : 		if( !bPODType){
; 222  : 			for(unsigned int i = 0; i < uiNumElements; ++i){

	mov	edi, DWORD PTR _uiNumElements$[esp]
	test	edi, edi
	jbe	SHORT $LN1@Destroy
	push	esi
	mov	esi, DWORD PTR _pVal$[esp+4]
	npad	2
$LL3@Destroy:

; 223  : 				pVal[i].~T();

	mov	ecx, esi
	call	??1CvEnactProposal@@QAE@XZ		; CvEnactProposal::~CvEnactProposal
	add	esi, 416				; 000001a0H
	sub	edi, 1
	jne	SHORT $LL3@Destroy
	pop	esi
$LN1@Destroy:
	pop	edi

; 224  : 			}
; 225  : 		}
; 226  : 	};

	ret	8
?Destroy@?$BaseVector@VCvEnactProposal@@$0A@@@IAEXPAVCvEnactProposal@@I@Z ENDP ; BaseVector<CvEnactProposal,0>::Destroy
_TEXT	ENDS
PUBLIC	?Destroy@?$BaseVector@VCvRepealProposal@@$0A@@@IAEXPAVCvRepealProposal@@I@Z ; BaseVector<CvRepealProposal,0>::Destroy
; Function compile flags: /Ogtpy
;	COMDAT ?Destroy@?$BaseVector@VCvRepealProposal@@$0A@@@IAEXPAVCvRepealProposal@@I@Z
_TEXT	SEGMENT
_pVal$ = 8						; size = 4
_uiNumElements$ = 12					; size = 4
?Destroy@?$BaseVector@VCvRepealProposal@@$0A@@@IAEXPAVCvRepealProposal@@I@Z PROC ; BaseVector<CvRepealProposal,0>::Destroy, COMDAT
; _this$ = ecx

; 220  : 	{

	push	edi

; 221  : 		if( !bPODType){
; 222  : 			for(unsigned int i = 0; i < uiNumElements; ++i){

	mov	edi, DWORD PTR _uiNumElements$[esp]
	test	edi, edi
	jbe	SHORT $LN1@Destroy@2
	push	esi
	mov	esi, DWORD PTR _pVal$[esp+4]
	npad	2
$LL3@Destroy@2:

; 223  : 				pVal[i].~T();

	mov	ecx, esi
	call	??1CvRepealProposal@@QAE@XZ		; CvRepealProposal::~CvRepealProposal
	add	esi, 708				; 000002c4H
	sub	edi, 1
	jne	SHORT $LL3@Destroy@2
	pop	esi
$LN1@Destroy@2:
	pop	edi

; 224  : 			}
; 225  : 		}
; 226  : 	};

	ret	8
?Destroy@?$BaseVector@VCvRepealProposal@@$0A@@@IAEXPAVCvRepealProposal@@I@Z ENDP ; BaseVector<CvRepealProposal,0>::Destroy
_TEXT	ENDS
PUBLIC	?Destroy@?$BaseVector@VCvActiveResolution@@$0A@@@IAEXPAVCvActiveResolution@@I@Z ; BaseVector<CvActiveResolution,0>::Destroy
; Function compile flags: /Ogtpy
;	COMDAT ?Destroy@?$BaseVector@VCvActiveResolution@@$0A@@@IAEXPAVCvActiveResolution@@I@Z
_TEXT	SEGMENT
_pVal$ = 8						; size = 4
_uiNumElements$ = 12					; size = 4
?Destroy@?$BaseVector@VCvActiveResolution@@$0A@@@IAEXPAVCvActiveResolution@@I@Z PROC ; BaseVector<CvActiveResolution,0>::Destroy, COMDAT
; _this$ = ecx

; 220  : 	{

	push	edi

; 221  : 		if( !bPODType){
; 222  : 			for(unsigned int i = 0; i < uiNumElements; ++i){

	mov	edi, DWORD PTR _uiNumElements$[esp]
	test	edi, edi
	jbe	SHORT $LN1@Destroy@3
	push	esi
	mov	esi, DWORD PTR _pVal$[esp+4]
	npad	2
$LL3@Destroy@3:

; 223  : 				pVal[i].~T();

	mov	ecx, esi
	call	??1CvActiveResolution@@QAE@XZ		; CvActiveResolution::~CvActiveResolution
	add	esi, 416				; 000001a0H
	sub	edi, 1
	jne	SHORT $LL3@Destroy@3
	pop	esi
$LN1@Destroy@3:
	pop	edi

; 224  : 			}
; 225  : 		}
; 226  : 	};

	ret	8
?Destroy@?$BaseVector@VCvActiveResolution@@$0A@@@IAEXPAVCvActiveResolution@@I@Z ENDP ; BaseVector<CvActiveResolution,0>::Destroy
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@W4ResolutionTypes@@@std@@QAEXPAW4ResolutionTypes@@@Z ; std::allocator<enum ResolutionTypes>::destroy
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?destroy@?$allocator@W4ResolutionTypes@@@std@@QAEXPAW4ResolutionTypes@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@W4ResolutionTypes@@@std@@QAEXPAW4ResolutionTypes@@@Z PROC ; std::allocator<enum ResolutionTypes>::destroy, COMDAT
; _this$ = ecx

; 160  : 		_Destroy(_Ptr);
; 161  : 		}

	ret	4
?destroy@?$allocator@W4ResolutionTypes@@@std@@QAEXPAW4ResolutionTypes@@@Z ENDP ; std::allocator<enum ResolutionTypes>::destroy
_TEXT	ENDS
PUBLIC	??_GCvString@@QAEPAXI@Z				; CvString::`scalar deleting destructor'
; Function compile flags: /Ogtpy
;	COMDAT ??_GCvString@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCvString@@QAEPAXI@Z PROC				; CvString::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN7@scalar@4
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN7@scalar@4:
	mov	eax, esi
	pop	esi
	ret	4
??_GCvString@@QAEPAXI@Z ENDP				; CvString::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@XZ ; std::_Vector_val<int,std::allocator<int> >::~_Vector_val<int,std::allocator<int> >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@XZ PROC	; std::_Vector_val<int,std::allocator<int> >::~_Vector_val<int,std::allocator<int> >, COMDAT
; _this$ = ecx
	ret	0
??1?$_Vector_val@HV?$allocator@H@std@@@std@@QAE@XZ ENDP	; std::_Vector_val<int,std::allocator<int> >::~_Vector_val<int,std::allocator<int> >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@@Z ; std::_Destroy_range<std::allocator<int> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@@Z PROC ; std::_Destroy_range<std::allocator<int> >, COMDAT

; 225  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 226  : 	}

	ret	0
??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@@Z ENDP ; std::_Destroy_range<std::allocator<int> >
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@HV?$allocator@H@std@@@std@@QAE@PAH@Z ; std::_Vector_iterator<int,std::allocator<int> >::_Vector_iterator<int,std::allocator<int> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??0?$_Vector_iterator@HV?$allocator@H@std@@@std@@QAE@PAH@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_iterator@HV?$allocator@H@std@@@std@@QAE@PAH@Z PROC ; std::_Vector_iterator<int,std::allocator<int> >::_Vector_iterator<int,std::allocator<int> >, COMDAT
; _this$ = ecx

; 333  : 		{	// construct with pointer _Ptr

	mov	eax, ecx
	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 334  : 		}

	ret	4
??0?$_Vector_iterator@HV?$allocator@H@std@@@std@@QAE@PAH@Z ENDP ; std::_Vector_iterator<int,std::allocator<int> >::_Vector_iterator<int,std::allocator<int> >
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<int,std::allocator<int> >::operator!=
; Function compile flags: /Ogtpy
;	COMDAT ??9?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<int,std::allocator<int> >::operator!=, COMDAT
; _this$ = ecx

; 216  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	setne	cl
	mov	al, cl

; 217  : 		}

	ret	4
??9?$_Vector_const_iterator@HV?$allocator@H@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<int,std::allocator<int> >::operator!=
_TEXT	ENDS
PUBLIC	??E?$_Vector_iterator@HV?$allocator@H@std@@@std@@QAE?AV01@H@Z ; std::_Vector_iterator<int,std::allocator<int> >::operator++
; Function compile flags: /Ogtpy
;	COMDAT ??E?$_Vector_iterator@HV?$allocator@H@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Vector_iterator@HV?$allocator@H@std@@@std@@QAE?AV01@H@Z PROC ; std::_Vector_iterator<int,std::allocator<int> >::operator++, COMDAT
; _this$ = ecx

; 355  : 		_Myt _Tmp = *this;

	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], edx

; 356  : 		++*this;

	add	edx, 4
	mov	DWORD PTR [ecx], edx

; 357  : 		return (_Tmp);
; 358  : 		}

	ret	8
??E?$_Vector_iterator@HV?$allocator@H@std@@@std@@QAE?AV01@H@Z ENDP ; std::_Vector_iterator<int,std::allocator<int> >::operator++
_TEXT	ENDS
PUBLIC	?begin@?$vector@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@2@XZ ; std::vector<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::begin
; Function compile flags: /Ogtpy
;	COMDAT ?begin@?$vector@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@2@XZ PROC ; std::vector<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::begin, COMDAT
; _this$ = ecx

; 667  : 		return (iterator(_Myfirst));

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 668  : 		}

	ret	4
?begin@?$vector@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@2@XZ ENDP ; std::vector<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@2@XZ ; std::vector<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$vector@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@2@XZ PROC ; std::vector<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::end, COMDAT
; _this$ = ecx

; 677  : 		return (iterator(_Mylast));

	mov	ecx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 678  : 		}

	ret	4
?end@?$vector@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@2@XZ ENDP ; std::vector<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::end
_TEXT	ENDS
PUBLIC	?Free@?$FStaticVector@VCvEnactProposal@@$01$0A@$0BCJ@$0A@@@IAEXPAVCvEnactProposal@@I@Z ; FStaticVector<CvEnactProposal,2,0,297,0>::Free
EXTRN	?FireFreeAlignedNoTracking@@YAXPAX@Z:PROC	; FireFreeAlignedNoTracking
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ?Free@?$FStaticVector@VCvEnactProposal@@$01$0A@$0BCJ@$0A@@@IAEXPAVCvEnactProposal@@I@Z
_TEXT	SEGMENT
_pVal$ = 8						; size = 4
_uiNumElements$ = 12					; size = 4
?Free@?$FStaticVector@VCvEnactProposal@@$01$0A@$0BCJ@$0A@@@IAEXPAVCvEnactProposal@@I@Z PROC ; FStaticVector<CvEnactProposal,2,0,297,0>::Free, COMDAT
; _this$ = ecx

; 809  : 	{

	push	ebx

; 810  : 		if( !bPODType) Destroy(pVal, uiNumElements);

	mov	ebx, DWORD PTR _pVal$[esp]
	push	ebp
	push	edi
	mov	edi, DWORD PTR _uiNumElements$[esp+8]
	mov	ebp, ecx
	test	edi, edi
	jbe	SHORT $LN5@Free
	push	esi
	mov	esi, ebx
$LL7@Free:
	mov	ecx, esi
	call	??1CvEnactProposal@@QAE@XZ		; CvEnactProposal::~CvEnactProposal
	add	esi, 416				; 000001a0H
	sub	edi, 1
	jne	SHORT $LL7@Free
	pop	esi
$LN5@Free:

; 811  : 		if( pVal != (T*)m_aData )

	add	ebp, 12					; 0000000cH
	cmp	ebx, ebp
	je	SHORT $LN1@Free

; 812  : 			FFREEALIGNED( (unsigned char*)pVal );

	push	ebx
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN1@Free:
	pop	edi
	pop	ebp
	pop	ebx

; 813  : 	};

	ret	8
?Free@?$FStaticVector@VCvEnactProposal@@$01$0A@$0BCJ@$0A@@@IAEXPAVCvEnactProposal@@I@Z ENDP ; FStaticVector<CvEnactProposal,2,0,297,0>::Free
_TEXT	ENDS
PUBLIC	?Free@?$FStaticVector@VCvRepealProposal@@$01$0A@$0BCJ@$0A@@@IAEXPAVCvRepealProposal@@I@Z ; FStaticVector<CvRepealProposal,2,0,297,0>::Free
; Function compile flags: /Ogtpy
;	COMDAT ?Free@?$FStaticVector@VCvRepealProposal@@$01$0A@$0BCJ@$0A@@@IAEXPAVCvRepealProposal@@I@Z
_TEXT	SEGMENT
_pVal$ = 8						; size = 4
_uiNumElements$ = 12					; size = 4
?Free@?$FStaticVector@VCvRepealProposal@@$01$0A@$0BCJ@$0A@@@IAEXPAVCvRepealProposal@@I@Z PROC ; FStaticVector<CvRepealProposal,2,0,297,0>::Free, COMDAT
; _this$ = ecx

; 809  : 	{

	push	ebx

; 810  : 		if( !bPODType) Destroy(pVal, uiNumElements);

	mov	ebx, DWORD PTR _pVal$[esp]
	push	ebp
	push	edi
	mov	edi, DWORD PTR _uiNumElements$[esp+8]
	mov	ebp, ecx
	test	edi, edi
	jbe	SHORT $LN5@Free@2
	push	esi
	mov	esi, ebx
$LL7@Free@2:
	mov	ecx, esi
	call	??1CvRepealProposal@@QAE@XZ		; CvRepealProposal::~CvRepealProposal
	add	esi, 708				; 000002c4H
	sub	edi, 1
	jne	SHORT $LL7@Free@2
	pop	esi
$LN5@Free@2:

; 811  : 		if( pVal != (T*)m_aData )

	add	ebp, 12					; 0000000cH
	cmp	ebx, ebp
	je	SHORT $LN1@Free@2

; 812  : 			FFREEALIGNED( (unsigned char*)pVal );

	push	ebx
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN1@Free@2:
	pop	edi
	pop	ebp
	pop	ebx

; 813  : 	};

	ret	8
?Free@?$FStaticVector@VCvRepealProposal@@$01$0A@$0BCJ@$0A@@@IAEXPAVCvRepealProposal@@I@Z ENDP ; FStaticVector<CvRepealProposal,2,0,297,0>::Free
_TEXT	ENDS
PUBLIC	?Free@?$FStaticVector@VCvActiveResolution@@$0M@$0A@$0BCJ@$0A@@@IAEXPAVCvActiveResolution@@I@Z ; FStaticVector<CvActiveResolution,12,0,297,0>::Free
; Function compile flags: /Ogtpy
;	COMDAT ?Free@?$FStaticVector@VCvActiveResolution@@$0M@$0A@$0BCJ@$0A@@@IAEXPAVCvActiveResolution@@I@Z
_TEXT	SEGMENT
_pVal$ = 8						; size = 4
_uiNumElements$ = 12					; size = 4
?Free@?$FStaticVector@VCvActiveResolution@@$0M@$0A@$0BCJ@$0A@@@IAEXPAVCvActiveResolution@@I@Z PROC ; FStaticVector<CvActiveResolution,12,0,297,0>::Free, COMDAT
; _this$ = ecx

; 809  : 	{

	push	ebx

; 810  : 		if( !bPODType) Destroy(pVal, uiNumElements);

	mov	ebx, DWORD PTR _pVal$[esp]
	push	ebp
	push	edi
	mov	edi, DWORD PTR _uiNumElements$[esp+8]
	mov	ebp, ecx
	test	edi, edi
	jbe	SHORT $LN5@Free@3
	push	esi
	mov	esi, ebx
$LL7@Free@3:
	mov	ecx, esi
	call	??1CvActiveResolution@@QAE@XZ		; CvActiveResolution::~CvActiveResolution
	add	esi, 416				; 000001a0H
	sub	edi, 1
	jne	SHORT $LL7@Free@3
	pop	esi
$LN5@Free@3:

; 811  : 		if( pVal != (T*)m_aData )

	add	ebp, 12					; 0000000cH
	cmp	ebx, ebp
	je	SHORT $LN1@Free@3

; 812  : 			FFREEALIGNED( (unsigned char*)pVal );

	push	ebx
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN1@Free@3:
	pop	edi
	pop	ebp
	pop	ebx

; 813  : 	};

	ret	8
?Free@?$FStaticVector@VCvActiveResolution@@$0M@$0A@$0BCJ@$0A@@@IAEXPAVCvActiveResolution@@I@Z ENDP ; FStaticVector<CvActiveResolution,12,0,297,0>::Free
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@W4ResolutionTypes@@@std@@@std@@YAXPAW4ResolutionTypes@@0AAV?$allocator@W4ResolutionTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<enum ResolutionTypes> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@W4ResolutionTypes@@@std@@@std@@YAXPAW4ResolutionTypes@@0AAV?$allocator@W4ResolutionTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@W4ResolutionTypes@@@std@@@std@@YAXPAW4ResolutionTypes@@0AAV?$allocator@W4ResolutionTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<enum ResolutionTypes> >, COMDAT

; 233  : 	for (; _First != _Last; ++_First)
; 234  : 		_Al.destroy(_First);
; 235  : 	}

	ret	0
??$_Destroy_range@V?$allocator@W4ResolutionTypes@@@std@@@std@@YAXPAW4ResolutionTypes@@0AAV?$allocator@W4ResolutionTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<enum ResolutionTypes> >
_TEXT	ENDS
PUBLIC	??$_Destroy@VCvString@@@std@@YAXPAVCvString@@@Z	; std::_Destroy<CvString>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Destroy@VCvString@@@std@@YAXPAVCvString@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@VCvString@@@std@@YAXPAVCvString@@@Z PROC	; std::_Destroy<CvString>, COMDAT

; 59   : 	_DESTRUCTOR(_Ty, _Ptr);

	mov	ecx, DWORD PTR __Ptr$[esp-4]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
??$_Destroy@VCvString@@@std@@YAXPAVCvString@@@Z ENDP	; std::_Destroy<CvString>
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@HV?$allocator@H@std@@@std@@IAEXPAH0@Z ; std::vector<int,std::allocator<int> >::_Destroy
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Destroy@?$vector@HV?$allocator@H@std@@@std@@IAEXPAH0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@HV?$allocator@H@std@@@std@@IAEXPAH0@Z PROC ; std::vector<int,std::allocator<int> >::_Destroy, COMDAT
; _this$ = ecx

; 1119 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1120 : 		}

	ret	8
?_Destroy@?$vector@HV?$allocator@H@std@@@std@@IAEXPAH0@Z ENDP ; std::vector<int,std::allocator<int> >::_Destroy
_TEXT	ENDS
PUBLIC	?begin@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@XZ ; std::vector<int,std::allocator<int> >::begin
; Function compile flags: /Ogtpy
;	COMDAT ?begin@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@XZ PROC ; std::vector<int,std::allocator<int> >::begin, COMDAT
; _this$ = ecx

; 667  : 		return (iterator(_Myfirst));

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 668  : 		}

	ret	4
?begin@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@XZ ENDP ; std::vector<int,std::allocator<int> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@XZ ; std::vector<int,std::allocator<int> >::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@XZ PROC ; std::vector<int,std::allocator<int> >::end, COMDAT
; _this$ = ecx

; 677  : 		return (iterator(_Mylast));

	mov	ecx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 678  : 		}

	ret	4
?end@?$vector@HV?$allocator@H@std@@@std@@QAE?AV?$_Vector_iterator@HV?$allocator@H@std@@@2@XZ ENDP ; std::vector<int,std::allocator<int> >::end
_TEXT	ENDS
PUBLIC	??1?$FStaticVector@VCvEnactProposal@@$01$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<CvEnactProposal,2,0,297,0>::~FStaticVector<CvEnactProposal,2,0,297,0>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ??1?$FStaticVector@VCvEnactProposal@@$01$0A@$0BCJ@$0A@@@QAE@XZ
_TEXT	SEGMENT
??1?$FStaticVector@VCvEnactProposal@@$01$0A@$0BCJ@$0A@@@QAE@XZ PROC ; FStaticVector<CvEnactProposal,2,0,297,0>::~FStaticVector<CvEnactProposal,2,0,297,0>, COMDAT
; _this$ = ecx

; 618  : 		Free(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR [ecx]
	push	eax
	push	edx
	call	?Free@?$FStaticVector@VCvEnactProposal@@$01$0A@$0BCJ@$0A@@@IAEXPAVCvEnactProposal@@I@Z ; FStaticVector<CvEnactProposal,2,0,297,0>::Free

; 619  : 	};

	ret	0
??1?$FStaticVector@VCvEnactProposal@@$01$0A@$0BCJ@$0A@@@QAE@XZ ENDP ; FStaticVector<CvEnactProposal,2,0,297,0>::~FStaticVector<CvEnactProposal,2,0,297,0>
_TEXT	ENDS
PUBLIC	??1?$FStaticVector@VCvRepealProposal@@$01$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<CvRepealProposal,2,0,297,0>::~FStaticVector<CvRepealProposal,2,0,297,0>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$FStaticVector@VCvRepealProposal@@$01$0A@$0BCJ@$0A@@@QAE@XZ
_TEXT	SEGMENT
??1?$FStaticVector@VCvRepealProposal@@$01$0A@$0BCJ@$0A@@@QAE@XZ PROC ; FStaticVector<CvRepealProposal,2,0,297,0>::~FStaticVector<CvRepealProposal,2,0,297,0>, COMDAT
; _this$ = ecx

; 618  : 		Free(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR [ecx]
	push	eax
	push	edx
	call	?Free@?$FStaticVector@VCvRepealProposal@@$01$0A@$0BCJ@$0A@@@IAEXPAVCvRepealProposal@@I@Z ; FStaticVector<CvRepealProposal,2,0,297,0>::Free

; 619  : 	};

	ret	0
??1?$FStaticVector@VCvRepealProposal@@$01$0A@$0BCJ@$0A@@@QAE@XZ ENDP ; FStaticVector<CvRepealProposal,2,0,297,0>::~FStaticVector<CvRepealProposal,2,0,297,0>
_TEXT	ENDS
PUBLIC	??1?$FStaticVector@VCvActiveResolution@@$0M@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<CvActiveResolution,12,0,297,0>::~FStaticVector<CvActiveResolution,12,0,297,0>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$FStaticVector@VCvActiveResolution@@$0M@$0A@$0BCJ@$0A@@@QAE@XZ
_TEXT	SEGMENT
??1?$FStaticVector@VCvActiveResolution@@$0M@$0A@$0BCJ@$0A@@@QAE@XZ PROC ; FStaticVector<CvActiveResolution,12,0,297,0>::~FStaticVector<CvActiveResolution,12,0,297,0>, COMDAT
; _this$ = ecx

; 618  : 		Free(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR [ecx]
	push	eax
	push	edx
	call	?Free@?$FStaticVector@VCvActiveResolution@@$0M@$0A@$0BCJ@$0A@@@IAEXPAVCvActiveResolution@@I@Z ; FStaticVector<CvActiveResolution,12,0,297,0>::Free

; 619  : 	};

	ret	0
??1?$FStaticVector@VCvActiveResolution@@$0M@$0A@$0BCJ@$0A@@@QAE@XZ ENDP ; FStaticVector<CvActiveResolution,12,0,297,0>::~FStaticVector<CvActiveResolution,12,0,297,0>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@W4ResolutionTypes@@@std@@@std@@YAXPAW4ResolutionTypes@@0AAV?$allocator@W4ResolutionTypes@@@0@@Z ; std::_Destroy_range<std::allocator<enum ResolutionTypes> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@W4ResolutionTypes@@@std@@@std@@YAXPAW4ResolutionTypes@@0AAV?$allocator@W4ResolutionTypes@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@W4ResolutionTypes@@@std@@@std@@YAXPAW4ResolutionTypes@@0AAV?$allocator@W4ResolutionTypes@@@0@@Z PROC ; std::_Destroy_range<std::allocator<enum ResolutionTypes> >, COMDAT

; 225  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 226  : 	}

	ret	0
??$_Destroy_range@V?$allocator@W4ResolutionTypes@@@std@@@std@@YAXPAW4ResolutionTypes@@0AAV?$allocator@W4ResolutionTypes@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<enum ResolutionTypes> >
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@VCvString@@@std@@QAEXPAVCvString@@@Z ; std::allocator<CvString>::destroy
; Function compile flags: /Ogtpy
;	COMDAT ?destroy@?$allocator@VCvString@@@std@@QAEXPAVCvString@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@VCvString@@@std@@QAEXPAVCvString@@@Z PROC ; std::allocator<CvString>::destroy, COMDAT
; _this$ = ecx

; 160  : 		_Destroy(_Ptr);

	mov	ecx, DWORD PTR __Ptr$[esp-4]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 161  : 		}

	ret	4
?destroy@?$allocator@VCvString@@@std@@QAEXPAVCvString@@@Z ENDP ; std::allocator<CvString>::destroy
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ; std::vector<int,std::allocator<int> >::_Tidy
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ PROC	; std::vector<int,std::allocator<int> >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	esi
	mov	esi, ecx

; 1124 : 		if (_Myfirst != 0)

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN4@Tidy

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);
; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@Tidy:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 1135 : 		}

	ret	0
?_Tidy@?$vector@HV?$allocator@H@std@@@std@@IAEXXZ ENDP	; std::vector<int,std::allocator<int> >::_Tidy
_TEXT	ENDS
PUBLIC	?lGetEnactProposals@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetEnactProposals
EXTRN	_lua_rawseti:PROC
EXTRN	?GetEnactProposals@CvLeague@@QBE?AV?$FStaticVector@VCvEnactProposal@@$01$0A@$0BCJ@$0A@@@XZ:PROC ; CvLeague::GetEnactProposals
EXTRN	_lua_createtable:PROC
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?lGetEnactProposals@CvLuaLeague@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetEnactProposals@CvLuaLeague@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetEnactProposals@CvLuaLeague@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetEnactProposals@CvLuaLeague@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvlualeague.cpp
xdata$x	ENDS
;	COMDAT ?lGetEnactProposals@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_v$ = -860						; size = 848
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetEnactProposals@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetEnactProposals, COMDAT

; 300  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetEnactProposals@CvLuaLeague@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 848				; 00000350H
	push	ebx
	push	ebp
	push	esi

; 301  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+868]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN44@lGetEnactP
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN44@lGetEnactP
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN44@lGetEnactP
	xor	bl, bl
$LN44@lGetEnactP:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@lGetEnactP
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@lGetEnactP:

; 302  : 
; 303  : 	lua_createtable(L, 0, 0);

	push	0
	push	0
	push	esi
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 304  : 	int iIndex = 1;
; 305  : 
; 306  : #ifdef AUI_WARNING_FIXES
; 307  : 	const EnactProposalList& v = pLeague->GetEnactProposals();
; 308  : 	for (EnactProposalList::const_iterator it = v.begin(); it != v.end(); ++it)
; 309  : #else
; 310  : 	EnactProposalList v = pLeague->GetEnactProposals();

	lea	eax, DWORD PTR _v$[esp+876]
	push	eax
	mov	ecx, edi
	mov	ebp, 1
	call	?GetEnactProposals@CvLeague@@QBE?AV?$FStaticVector@VCvEnactProposal@@$01$0A@$0BCJ@$0A@@@XZ ; CvLeague::GetEnactProposals

; 311  : 	for(EnactProposalList::iterator it = v.begin(); it != v.end(); ++it)

	mov	ecx, DWORD PTR _v$[esp+880]
	mov	eax, DWORD PTR _v$[esp+876]
	mov	edx, ecx
	imul	edx, 416				; 000001a0H
	add	edx, eax
	mov	DWORD PTR __$EHRec$[esp+884], 0
	mov	edi, eax
	cmp	eax, edx
	je	SHORT $LN1@lGetEnactP
	npad	6
$LL45@lGetEnactP:

; 312  : #endif
; 313  : 	{
; 314  : 		lua_createtable(L, 0, 0);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 315  : 		const int t = lua_gettop(L);

	push	esi
	call	_lua_gettop
	mov	ebx, eax

; 316  : 
; 317  : 		lProposalTableHelper(L, t, (*it));

	push	edi
	push	ebx
	push	esi
	call	?lResolutionTableHelper@CvLuaLeague@@KAHPAUlua_State@@HAAVCvResolution@@@Z ; CvLuaLeague::lResolutionTableHelper
	add	esp, 28					; 0000001cH
	mov	ecx, edi
	call	?GetProposalPlayer@CvProposal@@QBE?AW4PlayerTypes@@XZ ; CvProposal::GetProposalPlayer
	push	eax
	push	esi
	call	_lua_pushinteger
	push	OFFSET $SG219251
	push	ebx
	push	esi
	call	_lua_setfield

; 318  : 
; 319  : 		lua_rawseti(L, -2, iIndex++);

	push	ebp
	push	-2					; fffffffeH
	push	esi
	call	_lua_rawseti
	mov	ecx, DWORD PTR _v$[esp+912]
	mov	eax, DWORD PTR _v$[esp+908]
	mov	edx, ecx
	imul	edx, 416				; 000001a0H
	add	edi, 416				; 000001a0H
	add	edx, eax
	add	esp, 32					; 00000020H
	inc	ebp
	cmp	edi, edx
	jne	SHORT $LL45@lGetEnactP
$LN1@lGetEnactP:

; 320  : 	}
; 321  : 	return 1;

	mov	DWORD PTR __$EHRec$[esp+884], -1
	mov	ebx, eax
	test	ecx, ecx
	jbe	SHORT $LN46@lGetEnactP
	mov	esi, eax
	mov	edi, ecx
$LL30@lGetEnactP:
	mov	ecx, esi
	call	??1CvEnactProposal@@QAE@XZ		; CvEnactProposal::~CvEnactProposal
	add	esi, 416				; 000001a0H
	sub	edi, 1
	jne	SHORT $LL30@lGetEnactP
$LN46@lGetEnactP:
	lea	eax, DWORD PTR _v$[esp+888]
	cmp	ebx, eax
	je	SHORT $LN43@lGetEnactP
	push	ebx
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN43@lGetEnactP:

; 322  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+876]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 860				; 0000035cH
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetEnactProposals@CvLuaLeague@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _v$[ebp]
	jmp	??1?$FStaticVector@VCvEnactProposal@@$01$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<CvEnactProposal,2,0,297,0>::~FStaticVector<CvEnactProposal,2,0,297,0>
__ehhandler$?lGetEnactProposals@CvLuaLeague@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetEnactProposals@CvLuaLeague@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetEnactProposals@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetEnactProposals
PUBLIC	?lGetEnactProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetEnactProposalsOnHold
EXTRN	?GetEnactProposalsOnHold@CvLeague@@QBE?AV?$FStaticVector@VCvEnactProposal@@$01$0A@$0BCJ@$0A@@@XZ:PROC ; CvLeague::GetEnactProposalsOnHold
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?lGetEnactProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetEnactProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetEnactProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetEnactProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvlualeague.cpp
xdata$x	ENDS
;	COMDAT ?lGetEnactProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_v$ = -860						; size = 848
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetEnactProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetEnactProposalsOnHold, COMDAT

; 326  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetEnactProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 848				; 00000350H
	push	ebx
	push	ebp
	push	esi

; 327  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+868]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN44@lGetEnactP@2
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN44@lGetEnactP@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN44@lGetEnactP@2
	xor	bl, bl
$LN44@lGetEnactP@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@lGetEnactP@2
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@lGetEnactP@2:

; 328  : 
; 329  : 	lua_createtable(L, 0, 0);

	push	0
	push	0
	push	esi
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 330  : 	int iIndex = 1;
; 331  : 
; 332  : #ifdef AUI_WARNING_FIXES
; 333  : 	const EnactProposalList& v = pLeague->GetEnactProposalsOnHold();
; 334  : 	for (EnactProposalList::const_iterator it = v.begin(); it != v.end(); ++it)
; 335  : #else
; 336  : 	EnactProposalList v = pLeague->GetEnactProposalsOnHold();

	lea	eax, DWORD PTR _v$[esp+876]
	push	eax
	mov	ecx, edi
	mov	ebp, 1
	call	?GetEnactProposalsOnHold@CvLeague@@QBE?AV?$FStaticVector@VCvEnactProposal@@$01$0A@$0BCJ@$0A@@@XZ ; CvLeague::GetEnactProposalsOnHold

; 337  : 	for(EnactProposalList::iterator it = v.begin(); it != v.end(); ++it)

	mov	ecx, DWORD PTR _v$[esp+880]
	mov	eax, DWORD PTR _v$[esp+876]
	mov	edx, ecx
	imul	edx, 416				; 000001a0H
	add	edx, eax
	mov	DWORD PTR __$EHRec$[esp+884], 0
	mov	edi, eax
	cmp	eax, edx
	je	SHORT $LN1@lGetEnactP@2
	npad	6
$LL45@lGetEnactP@2:

; 338  : #endif
; 339  : 	{
; 340  : 		lua_createtable(L, 0, 0);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 341  : 		const int t = lua_gettop(L);

	push	esi
	call	_lua_gettop
	mov	ebx, eax

; 342  : 
; 343  : 		lProposalTableHelper(L, t, (*it));

	push	edi
	push	ebx
	push	esi
	call	?lResolutionTableHelper@CvLuaLeague@@KAHPAUlua_State@@HAAVCvResolution@@@Z ; CvLuaLeague::lResolutionTableHelper
	add	esp, 28					; 0000001cH
	mov	ecx, edi
	call	?GetProposalPlayer@CvProposal@@QBE?AW4PlayerTypes@@XZ ; CvProposal::GetProposalPlayer
	push	eax
	push	esi
	call	_lua_pushinteger
	push	OFFSET $SG219251
	push	ebx
	push	esi
	call	_lua_setfield

; 344  : 
; 345  : 		lua_rawseti(L, -2, iIndex++);

	push	ebp
	push	-2					; fffffffeH
	push	esi
	call	_lua_rawseti
	mov	ecx, DWORD PTR _v$[esp+912]
	mov	eax, DWORD PTR _v$[esp+908]
	mov	edx, ecx
	imul	edx, 416				; 000001a0H
	add	edi, 416				; 000001a0H
	add	edx, eax
	add	esp, 32					; 00000020H
	inc	ebp
	cmp	edi, edx
	jne	SHORT $LL45@lGetEnactP@2
$LN1@lGetEnactP@2:

; 346  : 	}
; 347  : 	return 1;

	mov	DWORD PTR __$EHRec$[esp+884], -1
	mov	ebx, eax
	test	ecx, ecx
	jbe	SHORT $LN46@lGetEnactP@2
	mov	esi, eax
	mov	edi, ecx
$LL30@lGetEnactP@2:
	mov	ecx, esi
	call	??1CvEnactProposal@@QAE@XZ		; CvEnactProposal::~CvEnactProposal
	add	esi, 416				; 000001a0H
	sub	edi, 1
	jne	SHORT $LL30@lGetEnactP@2
$LN46@lGetEnactP@2:
	lea	eax, DWORD PTR _v$[esp+888]
	cmp	ebx, eax
	je	SHORT $LN43@lGetEnactP@2
	push	ebx
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN43@lGetEnactP@2:

; 348  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+876]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 860				; 0000035cH
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetEnactProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _v$[ebp]
	jmp	??1?$FStaticVector@VCvEnactProposal@@$01$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<CvEnactProposal,2,0,297,0>::~FStaticVector<CvEnactProposal,2,0,297,0>
__ehhandler$?lGetEnactProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetEnactProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetEnactProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetEnactProposalsOnHold
PUBLIC	?lGetRepealProposals@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetRepealProposals
EXTRN	?GetRepealDecision@CvRepealProposal@@QAEPAVCvVoterDecision@@XZ:PROC ; CvRepealProposal::GetRepealDecision
EXTRN	?GetTargetResolutionID@CvRepealProposal@@QBEHXZ:PROC ; CvRepealProposal::GetTargetResolutionID
EXTRN	?GetRepealProposals@CvLeague@@QBE?AV?$FStaticVector@VCvRepealProposal@@$01$0A@$0BCJ@$0A@@@XZ:PROC ; CvLeague::GetRepealProposals
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?lGetRepealProposals@CvLuaLeague@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetRepealProposals@CvLuaLeague@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetRepealProposals@CvLuaLeague@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetRepealProposals@CvLuaLeague@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvlualeague.cpp
xdata$x	ENDS
;	COMDAT ?lGetRepealProposals@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_v$ = -1444						; size = 1432
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetRepealProposals@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetRepealProposals, COMDAT

; 352  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetRepealProposals@CvLuaLeague@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 1432				; 00000598H
	push	ebx
	push	ebp
	push	esi

; 353  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+1452]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN44@lGetRepeal
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN44@lGetRepeal
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN44@lGetRepeal
	xor	bl, bl
$LN44@lGetRepeal:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@lGetRepeal
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@lGetRepeal:

; 354  : 
; 355  : 	lua_createtable(L, 0, 0);

	push	0
	push	0
	push	esi
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 356  : 	int iIndex = 1;
; 357  : 
; 358  : #ifdef AUI_WARNING_FIXES
; 359  : 	const RepealProposalList& v = pLeague->GetRepealProposals();
; 360  : 	for (RepealProposalList::const_iterator it = v.begin(); it != v.end(); ++it)
; 361  : #else
; 362  : 	RepealProposalList v = pLeague->GetRepealProposals();

	lea	eax, DWORD PTR _v$[esp+1460]
	push	eax
	mov	ecx, edi
	mov	ebp, 1
	call	?GetRepealProposals@CvLeague@@QBE?AV?$FStaticVector@VCvRepealProposal@@$01$0A@$0BCJ@$0A@@@XZ ; CvLeague::GetRepealProposals

; 363  : 	for(RepealProposalList::iterator it = v.begin(); it != v.end(); ++it)

	mov	ecx, DWORD PTR _v$[esp+1464]
	mov	eax, DWORD PTR _v$[esp+1460]
	mov	edx, ecx
	imul	edx, 708				; 000002c4H
	add	edx, eax
	mov	DWORD PTR __$EHRec$[esp+1468], 0
	mov	edi, eax
	cmp	eax, edx
	je	$LN1@lGetRepeal
	npad	2
$LL45@lGetRepeal:

; 364  : #endif
; 365  : 	{
; 366  : 		lua_createtable(L, 0, 0);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 367  : 		const int t = lua_gettop(L);

	push	esi
	call	_lua_gettop
	mov	ebx, eax

; 368  : 
; 369  : 		lProposalTableHelper(L, t, (*it));

	push	edi
	push	ebx
	push	esi
	call	?lResolutionTableHelper@CvLuaLeague@@KAHPAUlua_State@@HAAVCvResolution@@@Z ; CvLuaLeague::lResolutionTableHelper
	add	esp, 28					; 0000001cH
	mov	ecx, edi
	call	?GetProposalPlayer@CvProposal@@QBE?AW4PlayerTypes@@XZ ; CvProposal::GetProposalPlayer
	push	eax
	push	esi
	call	_lua_pushinteger
	push	OFFSET $SG219251
	push	ebx
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 370  : 
; 371  : 		lua_pushinteger(L, (*it).GetTargetResolutionID());

	mov	ecx, edi
	call	?GetTargetResolutionID@CvRepealProposal@@QBEHXZ ; CvRepealProposal::GetTargetResolutionID
	push	eax
	push	esi
	call	_lua_pushinteger

; 372  : 		lua_setfield(L, t, "TargetResolutionID");

	push	OFFSET $SG218927
	push	ebx
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 373  : 
; 374  : 		lua_pushinteger(L, (*it).GetRepealDecision()->GetDecision());

	mov	ecx, edi
	call	?GetRepealDecision@CvRepealProposal@@QAEPAVCvVoterDecision@@XZ ; CvRepealProposal::GetRepealDecision
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx]
	call	eax
	push	eax
	push	esi
	call	_lua_pushinteger

; 375  : 		lua_setfield(L, t, "RepealDecision");

	push	OFFSET $SG218928
	push	ebx
	push	esi
	call	_lua_setfield

; 376  : 
; 377  : 		lua_rawseti(L, -2, iIndex++);

	push	ebp
	push	-2					; fffffffeH
	push	esi
	call	_lua_rawseti
	mov	ecx, DWORD PTR _v$[esp+1496]
	mov	eax, DWORD PTR _v$[esp+1492]
	mov	edx, ecx
	imul	edx, 708				; 000002c4H
	add	edi, 708				; 000002c4H
	add	edx, eax
	add	esp, 32					; 00000020H
	inc	ebp
	cmp	edi, edx
	jne	$LL45@lGetRepeal
$LN1@lGetRepeal:

; 378  : 	}
; 379  : 	return 1;

	mov	DWORD PTR __$EHRec$[esp+1468], -1
	mov	ebx, eax
	test	ecx, ecx
	jbe	SHORT $LN46@lGetRepeal
	mov	esi, eax
	mov	edi, ecx
	npad	5
$LL30@lGetRepeal:
	mov	ecx, esi
	call	??1CvRepealProposal@@QAE@XZ		; CvRepealProposal::~CvRepealProposal
	add	esi, 708				; 000002c4H
	sub	edi, 1
	jne	SHORT $LL30@lGetRepeal
$LN46@lGetRepeal:
	lea	eax, DWORD PTR _v$[esp+1472]
	cmp	ebx, eax
	je	SHORT $LN43@lGetRepeal
	push	ebx
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN43@lGetRepeal:

; 380  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+1460]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 1444				; 000005a4H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetRepealProposals@CvLuaLeague@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _v$[ebp]
	jmp	??1?$FStaticVector@VCvRepealProposal@@$01$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<CvRepealProposal,2,0,297,0>::~FStaticVector<CvRepealProposal,2,0,297,0>
__ehhandler$?lGetRepealProposals@CvLuaLeague@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetRepealProposals@CvLuaLeague@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetRepealProposals@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetRepealProposals
PUBLIC	?lGetRepealProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetRepealProposalsOnHold
EXTRN	?GetRepealProposalsOnHold@CvLeague@@QBE?AV?$FStaticVector@VCvRepealProposal@@$01$0A@$0BCJ@$0A@@@XZ:PROC ; CvLeague::GetRepealProposalsOnHold
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?lGetRepealProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetRepealProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetRepealProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetRepealProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvlualeague.cpp
xdata$x	ENDS
;	COMDAT ?lGetRepealProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_v$ = -1444						; size = 1432
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetRepealProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetRepealProposalsOnHold, COMDAT

; 384  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetRepealProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 1432				; 00000598H
	push	ebx
	push	ebp
	push	esi

; 385  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+1452]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN44@lGetRepeal@2
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN44@lGetRepeal@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN44@lGetRepeal@2
	xor	bl, bl
$LN44@lGetRepeal@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@lGetRepeal@2
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@lGetRepeal@2:

; 386  : 
; 387  : 	lua_createtable(L, 0, 0);

	push	0
	push	0
	push	esi
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 388  : 	int iIndex = 1;
; 389  : 
; 390  : #ifdef AUI_WARNING_FIXES
; 391  : 	const RepealProposalList& v = pLeague->GetRepealProposalsOnHold();
; 392  : 	for (RepealProposalList::const_iterator it = v.begin(); it != v.end(); ++it)
; 393  : #else
; 394  : 	RepealProposalList v = pLeague->GetRepealProposalsOnHold();

	lea	eax, DWORD PTR _v$[esp+1460]
	push	eax
	mov	ecx, edi
	mov	ebp, 1
	call	?GetRepealProposalsOnHold@CvLeague@@QBE?AV?$FStaticVector@VCvRepealProposal@@$01$0A@$0BCJ@$0A@@@XZ ; CvLeague::GetRepealProposalsOnHold

; 395  : 	for(RepealProposalList::iterator it = v.begin(); it != v.end(); ++it)

	mov	ecx, DWORD PTR _v$[esp+1464]
	mov	eax, DWORD PTR _v$[esp+1460]
	mov	edx, ecx
	imul	edx, 708				; 000002c4H
	add	edx, eax
	mov	DWORD PTR __$EHRec$[esp+1468], 0
	mov	edi, eax
	cmp	eax, edx
	je	$LN1@lGetRepeal@2
	npad	2
$LL45@lGetRepeal@2:

; 396  : #endif
; 397  : 	{
; 398  : 		lua_createtable(L, 0, 0);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 399  : 		const int t = lua_gettop(L);

	push	esi
	call	_lua_gettop
	mov	ebx, eax

; 400  : 
; 401  : 		lProposalTableHelper(L, t, (*it));

	push	edi
	push	ebx
	push	esi
	call	?lResolutionTableHelper@CvLuaLeague@@KAHPAUlua_State@@HAAVCvResolution@@@Z ; CvLuaLeague::lResolutionTableHelper
	add	esp, 28					; 0000001cH
	mov	ecx, edi
	call	?GetProposalPlayer@CvProposal@@QBE?AW4PlayerTypes@@XZ ; CvProposal::GetProposalPlayer
	push	eax
	push	esi
	call	_lua_pushinteger
	push	OFFSET $SG219251
	push	ebx
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 402  : 
; 403  : 		lua_pushinteger(L, (*it).GetTargetResolutionID());

	mov	ecx, edi
	call	?GetTargetResolutionID@CvRepealProposal@@QBEHXZ ; CvRepealProposal::GetTargetResolutionID
	push	eax
	push	esi
	call	_lua_pushinteger

; 404  : 		lua_setfield(L, t, "TargetResolutionID");

	push	OFFSET $SG218942
	push	ebx
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 405  : 
; 406  : 		lua_pushinteger(L, (*it).GetRepealDecision()->GetDecision());

	mov	ecx, edi
	call	?GetRepealDecision@CvRepealProposal@@QAEPAVCvVoterDecision@@XZ ; CvRepealProposal::GetRepealDecision
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx]
	call	eax
	push	eax
	push	esi
	call	_lua_pushinteger

; 407  : 		lua_setfield(L, t, "RepealDecision");

	push	OFFSET $SG218943
	push	ebx
	push	esi
	call	_lua_setfield

; 408  : 
; 409  : 		lua_rawseti(L, -2, iIndex++);

	push	ebp
	push	-2					; fffffffeH
	push	esi
	call	_lua_rawseti
	mov	ecx, DWORD PTR _v$[esp+1496]
	mov	eax, DWORD PTR _v$[esp+1492]
	mov	edx, ecx
	imul	edx, 708				; 000002c4H
	add	edi, 708				; 000002c4H
	add	edx, eax
	add	esp, 32					; 00000020H
	inc	ebp
	cmp	edi, edx
	jne	$LL45@lGetRepeal@2
$LN1@lGetRepeal@2:

; 410  : 	}
; 411  : 	return 1;

	mov	DWORD PTR __$EHRec$[esp+1468], -1
	mov	ebx, eax
	test	ecx, ecx
	jbe	SHORT $LN46@lGetRepeal@2
	mov	esi, eax
	mov	edi, ecx
	npad	5
$LL30@lGetRepeal@2:
	mov	ecx, esi
	call	??1CvRepealProposal@@QAE@XZ		; CvRepealProposal::~CvRepealProposal
	add	esi, 708				; 000002c4H
	sub	edi, 1
	jne	SHORT $LL30@lGetRepeal@2
$LN46@lGetRepeal@2:
	lea	eax, DWORD PTR _v$[esp+1472]
	cmp	ebx, eax
	je	SHORT $LN43@lGetRepeal@2
	push	ebx
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN43@lGetRepeal@2:

; 412  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+1460]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 1444				; 000005a4H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetRepealProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _v$[ebp]
	jmp	??1?$FStaticVector@VCvRepealProposal@@$01$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<CvRepealProposal,2,0,297,0>::~FStaticVector<CvRepealProposal,2,0,297,0>
__ehhandler$?lGetRepealProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetRepealProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetRepealProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetRepealProposalsOnHold
PUBLIC	?lGetActiveResolutions@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetActiveResolutions
EXTRN	?GetTurnEnacted@CvActiveResolution@@QBEHXZ:PROC	; CvActiveResolution::GetTurnEnacted
EXTRN	?GetActiveResolutions@CvLeague@@QBE?AV?$FStaticVector@VCvActiveResolution@@$0M@$0A@$0BCJ@$0A@@@XZ:PROC ; CvLeague::GetActiveResolutions
EXTRN	__chkstk:PROC
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?lGetActiveResolutions@CvLuaLeague@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetActiveResolutions@CvLuaLeague@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetActiveResolutions@CvLuaLeague@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetActiveResolutions@CvLuaLeague@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvlualeague.cpp
xdata$x	ENDS
;	COMDAT ?lGetActiveResolutions@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_v$ = -5020						; size = 5008
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetActiveResolutions@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetActiveResolutions, COMDAT

; 416  : {

	push	-1
	mov	eax, DWORD PTR fs:0
	push	__ehhandler$?lGetActiveResolutions@CvLuaLeague@@KAHPAUlua_State@@@Z
	push	eax
	mov	eax, 5008				; 00001390H
	mov	DWORD PTR fs:0, esp
	call	__chkstk
	push	ebx
	push	ebp
	push	esi

; 417  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+5028]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN42@lGetActive
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN42@lGetActive
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN42@lGetActive
	xor	bl, bl
$LN42@lGetActive:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@lGetActive
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@lGetActive:

; 418  : 
; 419  : 	lua_createtable(L, 0, 0);

	push	0
	push	0
	push	esi
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 420  : 	int iIndex = 1;
; 421  : 
; 422  : #ifdef AUI_WARNING_FIXES
; 423  : 	const ActiveResolutionList& v = pLeague->GetActiveResolutions();
; 424  : 	for (ActiveResolutionList::const_iterator it = v.begin(); it != v.end(); ++it)
; 425  : #else
; 426  : 	ActiveResolutionList v = pLeague->GetActiveResolutions();

	lea	eax, DWORD PTR _v$[esp+5036]
	push	eax
	mov	ecx, edi
	mov	ebp, 1
	call	?GetActiveResolutions@CvLeague@@QBE?AV?$FStaticVector@VCvActiveResolution@@$0M@$0A@$0BCJ@$0A@@@XZ ; CvLeague::GetActiveResolutions

; 427  : 	for(ActiveResolutionList::iterator it = v.begin(); it != v.end(); ++it)

	mov	ecx, DWORD PTR _v$[esp+5040]
	mov	eax, DWORD PTR _v$[esp+5036]
	mov	edx, ecx
	imul	edx, 416				; 000001a0H
	add	edx, eax
	mov	DWORD PTR __$EHRec$[esp+5044], 0
	mov	edi, eax
	cmp	eax, edx
	je	SHORT $LN1@lGetActive
	npad	2
$LL43@lGetActive:

; 428  : #endif
; 429  : 	{
; 430  : 		lua_createtable(L, 0, 0);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 431  : 		const int t = lua_gettop(L);

	push	esi
	call	_lua_gettop
	mov	ebx, eax

; 432  : 
; 433  : 		lResolutionTableHelper(L, t, (*it));

	push	edi
	push	ebx
	push	esi
	call	?lResolutionTableHelper@CvLuaLeague@@KAHPAUlua_State@@HAAVCvResolution@@@Z ; CvLuaLeague::lResolutionTableHelper
	add	esp, 28					; 0000001cH

; 434  : 
; 435  : 		lua_pushinteger(L, (*it).GetTurnEnacted());

	mov	ecx, edi
	call	?GetTurnEnacted@CvActiveResolution@@QBEHXZ ; CvActiveResolution::GetTurnEnacted
	push	eax
	push	esi
	call	_lua_pushinteger

; 436  : 		lua_setfield(L, t, "TurnEnacted");

	push	OFFSET $SG218957
	push	ebx
	push	esi
	call	_lua_setfield

; 437  : 
; 438  : 		lua_rawseti(L, -2, iIndex++);

	push	ebp
	push	-2					; fffffffeH
	push	esi
	call	_lua_rawseti
	mov	ecx, DWORD PTR _v$[esp+5072]
	mov	eax, DWORD PTR _v$[esp+5068]
	mov	edx, ecx
	imul	edx, 416				; 000001a0H
	add	edi, 416				; 000001a0H
	add	edx, eax
	add	esp, 32					; 00000020H
	inc	ebp
	cmp	edi, edx
	jne	SHORT $LL43@lGetActive
$LN1@lGetActive:

; 439  : 	}
; 440  : 	return 1;

	mov	DWORD PTR __$EHRec$[esp+5044], -1
	mov	ebx, eax
	test	ecx, ecx
	jbe	SHORT $LN44@lGetActive
	mov	esi, eax
	mov	edi, ecx
$LL28@lGetActive:
	mov	ecx, esi
	call	??1CvActiveResolution@@QAE@XZ		; CvActiveResolution::~CvActiveResolution
	add	esi, 416				; 000001a0H
	sub	edi, 1
	jne	SHORT $LL28@lGetActive
$LN44@lGetActive:
	lea	eax, DWORD PTR _v$[esp+5048]
	cmp	ebx, eax
	je	SHORT $LN41@lGetActive
	push	ebx
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN41@lGetActive:

; 441  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+5036]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 5020				; 0000139cH
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetActiveResolutions@CvLuaLeague@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _v$[ebp]
	jmp	??1?$FStaticVector@VCvActiveResolution@@$0M@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<CvActiveResolution,12,0,297,0>::~FStaticVector<CvActiveResolution,12,0,297,0>
__ehhandler$?lGetActiveResolutions@CvLuaLeague@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetActiveResolutions@CvLuaLeague@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetActiveResolutions@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetActiveResolutions
PUBLIC	?_Destroy@?$vector@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@IAEXPAW4ResolutionTypes@@0@Z ; std::vector<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::_Destroy
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Destroy@?$vector@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@IAEXPAW4ResolutionTypes@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@IAEXPAW4ResolutionTypes@@0@Z PROC ; std::vector<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::_Destroy, COMDAT
; _this$ = ecx

; 1119 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1120 : 		}

	ret	8
?_Destroy@?$vector@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@IAEXPAW4ResolutionTypes@@0@Z ENDP ; std::vector<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::_Destroy
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@VCvString@@@std@@@std@@YAXPAVCvString@@0AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<CvString> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@VCvString@@@std@@@std@@YAXPAVCvString@@0AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@VCvString@@@std@@@std@@YAXPAVCvString@@0AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<CvString> >, COMDAT

; 232  : 	{	// destroy [_First, _Last), arbitrary type

	push	esi

; 233  : 	for (; _First != _Last; ++_First)

	mov	esi, DWORD PTR __First$[esp]
	push	edi
	mov	edi, DWORD PTR __Last$[esp+4]
	cmp	esi, edi
	je	SHORT $LN1@Destroy_ra
	npad	2
$LL3@Destroy_ra:

; 234  : 		_Al.destroy(_First);

	mov	ecx, esi
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	add	esi, 28					; 0000001cH
	cmp	esi, edi
	jne	SHORT $LL3@Destroy_ra
$LN1@Destroy_ra:
	pop	edi
	pop	esi

; 235  : 	}

	ret	0
??$_Destroy_range@V?$allocator@VCvString@@@std@@@std@@YAXPAVCvString@@0AAV?$allocator@VCvString@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<CvString> >
_TEXT	ENDS
PUBLIC	??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ PROC	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >, COMDAT
; _this$ = ecx

; 558  : 		{	// destroy the object

	push	esi
	mov	esi, ecx

; 559  : 		_Tidy();

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN6@vector
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@vector:
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 560  : 		}

	ret	0
??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ENDP	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
_TEXT	ENDS
PUBLIC	?lGetChoicesForDecision@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetChoicesForDecision
EXTRN	?GetChoicesForDecision@CvLeague@@QAE?AV?$vector@HV?$allocator@H@std@@@std@@W4ResolutionDecisionTypes@@W4PlayerTypes@@@Z:PROC ; CvLeague::GetChoicesForDecision
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvlualeague.cpp
;	COMDAT ?lGetChoicesForDecision@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkInstance$221859 = -24				; size = 4
_eDecider$ = -20					; size = 4
_v$ = -16						; size = 16
_L$ = 8							; size = 4
?lGetChoicesForDecision@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetChoicesForDecision, COMDAT

; 235  : {

	sub	esp, 24					; 00000018H
	push	ebx
	push	ebp
	push	esi

; 236  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+32]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$221859[esp+52], 0
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN9@lGetChoice
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN9@lGetChoice
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$221859[esp+40], eax
	test	eax, eax
	je	SHORT $LN9@lGetChoice
	xor	bl, bl
$LN9@lGetChoice:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@lGetChoice
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@lGetChoice:

; 237  : 	const ResolutionDecisionTypes eDecision = (ResolutionDecisionTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 238  : 	const PlayerTypes eDecider = (PlayerTypes) lua_tointeger(L, 3);

	push	3
	push	esi
	mov	edi, eax
	call	_lua_tointeger

; 239  : 
; 240  : 	lua_createtable(L, 0, 0);

	push	0
	push	0
	push	esi
	mov	DWORD PTR _eDecider$[esp+68], eax
	call	_lua_createtable

; 241  : 	const int t = lua_gettop(L);

	push	esi
	call	_lua_gettop
	add	esp, 32					; 00000020H
	mov	ebp, eax

; 242  : 	int iIndex = 1;
; 243  : 
; 244  : 	std::vector<int> v = pLeague->GetChoicesForDecision(eDecision, eDecider);

	mov	eax, DWORD PTR _eDecider$[esp+40]
	push	eax
	push	edi
	lea	ecx, DWORD PTR _v$[esp+48]
	push	ecx
	mov	ecx, DWORD PTR _pkInstance$221859[esp+52]
	mov	ebx, 1
	call	?GetChoicesForDecision@CvLeague@@QAE?AV?$vector@HV?$allocator@H@std@@@std@@W4ResolutionDecisionTypes@@W4PlayerTypes@@@Z ; CvLeague::GetChoicesForDecision

; 245  : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 246  : 	for (std::vector<int>::iterator it = v.begin(); it != v.end(); ++it)
; 247  : #else
; 248  : 	for (std::vector<int>::iterator it = v.begin(); it != v.end(); it++)

	mov	edi, DWORD PTR _v$[esp+44]
	cmp	edi, DWORD PTR _v$[esp+48]
	je	SHORT $LN1@lGetChoice
$LL26@lGetChoice:

; 249  : #endif
; 250  : 	{
; 251  : 		const int iChoice = (*it);
; 252  : 		lua_pushinteger(L, iChoice);

	mov	edx, DWORD PTR [edi]
	push	edx
	push	esi
	call	_lua_pushinteger

; 253  : 		lua_rawseti(L, t, iIndex++);

	push	ebx
	push	ebp
	push	esi
	call	_lua_rawseti
	add	edi, 4
	add	esp, 20					; 00000014H
	inc	ebx
	cmp	edi, DWORD PTR _v$[esp+48]
	jne	SHORT $LL26@lGetChoice

; 245  : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 246  : 	for (std::vector<int>::iterator it = v.begin(); it != v.end(); ++it)
; 247  : #else
; 248  : 	for (std::vector<int>::iterator it = v.begin(); it != v.end(); it++)

	mov	edi, DWORD PTR _v$[esp+44]
$LN1@lGetChoice:

; 254  : 	}
; 255  : 	return 1;

	test	edi, edi
	je	SHORT $LN51@lGetChoice
	push	edi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN51@lGetChoice:
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx

; 256  : }

	add	esp, 24					; 00000018H
	ret	0
?lGetChoicesForDecision@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetChoicesForDecision
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@IAEXXZ ; std::vector<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::_Tidy
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Tidy@?$vector@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@IAEXXZ PROC ; std::vector<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	esi
	mov	esi, ecx

; 1124 : 		if (_Myfirst != 0)

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN4@Tidy@2

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);
; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@Tidy@2:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 1135 : 		}

	ret	0
?_Tidy@?$vector@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@IAEXXZ ENDP ; std::vector<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::_Tidy
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@VCvString@@@std@@@std@@YAXPAVCvString@@0AAV?$allocator@VCvString@@@0@@Z ; std::_Destroy_range<std::allocator<CvString> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@VCvString@@@std@@@std@@YAXPAVCvString@@0AAV?$allocator@VCvString@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@VCvString@@@std@@@std@@YAXPAVCvString@@0AAV?$allocator@VCvString@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CvString> >, COMDAT

; 224  : 	{	// destroy [_First, _Last)

	push	esi

; 225  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));

	mov	esi, DWORD PTR __First$[esp]
	push	edi
	mov	edi, DWORD PTR __Last$[esp+4]
	cmp	esi, edi
	je	SHORT $LN5@Destroy_ra@2
	npad	2
$LL7@Destroy_ra@2:
	mov	ecx, esi
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	add	esi, 28					; 0000001cH
	cmp	esi, edi
	jne	SHORT $LL7@Destroy_ra@2
$LN5@Destroy_ra@2:
	pop	edi
	pop	esi

; 226  : 	}

	ret	0
??$_Destroy_range@V?$allocator@VCvString@@@std@@@std@@YAXPAVCvString@@0AAV?$allocator@VCvString@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CvString> >
_TEXT	ENDS
PUBLIC	??1?$vector@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QAE@XZ ; std::vector<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::~vector<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??1?$vector@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QAE@XZ PROC ; std::vector<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::~vector<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >, COMDAT
; _this$ = ecx

; 558  : 		{	// destroy the object

	push	esi
	mov	esi, ecx

; 559  : 		_Tidy();

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN6@vector@2
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@vector@2:
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 560  : 		}

	ret	0
??1?$vector@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@QAE@XZ ENDP ; std::vector<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >::~vector<enum ResolutionTypes,std::allocator<enum ResolutionTypes> >
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXPAVCvString@@0@Z ; std::vector<CvString,std::allocator<CvString> >::_Destroy
; Function compile flags: /Ogtpy
;	COMDAT ?_Destroy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXPAVCvString@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXPAVCvString@@0@Z PROC ; std::vector<CvString,std::allocator<CvString> >::_Destroy, COMDAT
; _this$ = ecx

; 1118 : 		{	// destroy [_First, _Last) using allocator

	push	esi

; 1119 : 		_Destroy_range(_First, _Last, this->_Alval);

	mov	esi, DWORD PTR __First$[esp]
	push	edi
	mov	edi, DWORD PTR __Last$[esp+4]
	cmp	esi, edi
	je	SHORT $LN7@Destroy@4
	npad	2
$LL9@Destroy@4:
	mov	ecx, esi
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	add	esi, 28					; 0000001cH
	cmp	esi, edi
	jne	SHORT $LL9@Destroy@4
$LN7@Destroy@4:
	pop	edi
	pop	esi

; 1120 : 		}

	ret	8
?_Destroy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXPAVCvString@@0@Z ENDP ; std::vector<CvString,std::allocator<CvString> >::_Destroy
_TEXT	ENDS
PUBLIC	?lGetInactiveResolutions@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetInactiveResolutions
EXTRN	?GetInactiveResolutions@CvLeague@@QBE?AV?$vector@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@XZ:PROC ; CvLeague::GetInactiveResolutions
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvlualeague.cpp
;	COMDAT ?lGetInactiveResolutions@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_v$ = -16						; size = 16
_L$ = 8							; size = 4
?lGetInactiveResolutions@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetInactiveResolutions, COMDAT

; 272  : {

	sub	esp, 16					; 00000010H
	push	ebx
	push	ebp
	push	esi

; 273  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+24]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN9@lGetInacti
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN9@lGetInacti
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN9@lGetInacti
	xor	bl, bl
$LN9@lGetInacti:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@lGetInacti
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@lGetInacti:

; 274  : 
; 275  : 	lua_createtable(L, 0, 0);

	push	0
	push	0
	push	esi
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 276  : 	int iIndex = 1;
; 277  : 
; 278  : #ifdef AUI_WARNING_FIXES
; 279  : 	const std::vector<ResolutionTypes>& v = pLeague->GetInactiveResolutions();
; 280  : 	for (std::vector<ResolutionTypes>::const_iterator it = v.begin(); it != v.end(); ++it)
; 281  : #else
; 282  : 	std::vector<ResolutionTypes> v = pLeague->GetInactiveResolutions();

	lea	eax, DWORD PTR _v$[esp+32]
	push	eax
	mov	ecx, edi
	mov	ebx, 1
	call	?GetInactiveResolutions@CvLeague@@QBE?AV?$vector@W4ResolutionTypes@@V?$allocator@W4ResolutionTypes@@@std@@@std@@XZ ; CvLeague::GetInactiveResolutions

; 283  : 	for(std::vector<ResolutionTypes>::iterator it = v.begin(); it != v.end(); ++it)

	mov	edi, DWORD PTR _v$[esp+36]
	cmp	edi, DWORD PTR _v$[esp+40]
	je	SHORT $LN1@lGetInacti
$LL50@lGetInacti:

; 284  : #endif
; 285  : 	{
; 286  : 		lua_createtable(L, 0, 0);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 287  : 		const int t = lua_gettop(L);

	push	esi
	call	_lua_gettop

; 288  : 
; 289  : 		const ResolutionTypes eResolution = (*it);
; 290  : 		lua_pushinteger(L, eResolution);

	mov	ecx, DWORD PTR [edi]
	push	ecx
	push	esi
	mov	ebp, eax
	call	_lua_pushinteger

; 291  : 		lua_setfield(L, t, "Type");

	push	OFFSET $SG218887
	push	ebp
	push	esi
	call	_lua_setfield

; 292  : 
; 293  : 		lua_rawseti(L, -2, iIndex++);

	push	ebx
	push	-2					; fffffffeH
	push	esi
	call	_lua_rawseti
	add	edi, 4
	add	esp, 48					; 00000030H
	inc	ebx
	cmp	edi, DWORD PTR _v$[esp+40]
	jne	SHORT $LL50@lGetInacti

; 283  : 	for(std::vector<ResolutionTypes>::iterator it = v.begin(); it != v.end(); ++it)

	mov	edi, DWORD PTR _v$[esp+36]
$LN1@lGetInacti:

; 294  : 	}
; 295  : 	return 1;

	test	edi, edi
	je	SHORT $LN49@lGetInacti
	push	edi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN49@lGetInacti:
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx

; 296  : }

	add	esp, 16					; 00000010H
	ret	0
?lGetInactiveResolutions@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetInactiveResolutions
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXXZ ; std::vector<CvString,std::allocator<CvString> >::_Tidy
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Tidy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXXZ PROC ; std::vector<CvString,std::allocator<CvString> >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	ebx
	mov	ebx, ecx
	push	esi

; 1124 : 		if (_Myfirst != 0)

	mov	esi, DWORD PTR [ebx+4]
	test	esi, esi
	je	SHORT $LN25@Tidy@3
	push	edi

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);

	mov	edi, DWORD PTR [ebx+8]
	cmp	esi, edi
	je	SHORT $LN10@Tidy@3
$LL12@Tidy@3:
	mov	ecx, esi
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	add	esi, 28					; 0000001cH
	cmp	esi, edi
	jne	SHORT $LL12@Tidy@3
$LN10@Tidy@3:

; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	mov	eax, DWORD PTR [ebx+4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	pop	edi
$LN25@Tidy@3:
	pop	esi

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	DWORD PTR [ebx+4], 0
	mov	DWORD PTR [ebx+8], 0
	mov	DWORD PTR [ebx+12], 0
	pop	ebx

; 1135 : 		}

	ret	0
?_Tidy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXXZ ENDP ; std::vector<CvString,std::allocator<CvString> >::_Tidy
_TEXT	ENDS
PUBLIC	??1?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ ; std::vector<CvString,std::allocator<CvString> >::~vector<CvString,std::allocator<CvString> >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ PROC ; std::vector<CvString,std::allocator<CvString> >::~vector<CvString,std::allocator<CvString> >, COMDAT
; _this$ = ecx

; 559  : 		_Tidy();

	jmp	?_Tidy@?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@IAEXXZ ; std::vector<CvString,std::allocator<CvString> >::_Tidy
??1?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ ENDP ; std::vector<CvString,std::allocator<CvString> >::~vector<CvString,std::allocator<CvString> >
_TEXT	ENDS
PUBLIC	?lGetCurrentEffectsSummary@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetCurrentEffectsSummary
EXTRN	?GetCurrentEffectsSummary@CvLeague@@QAE?AV?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@W4PlayerTypes@@@Z:PROC ; CvLeague::GetCurrentEffectsSummary
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$?lGetCurrentEffectsSummary@CvLuaLeague@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetCurrentEffectsSummary@CvLuaLeague@@KAHPAUlua_State@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?lGetCurrentEffectsSummary@CvLuaLeague@@KAHPAUlua_State@@@Z$1
__ehfuncinfo$?lGetCurrentEffectsSummary@CvLuaLeague@@KAHPAUlua_State@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?lGetCurrentEffectsSummary@CvLuaLeague@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvlualeague.cpp
xdata$x	ENDS
;	COMDAT ?lGetCurrentEffectsSummary@CvLuaLeague@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_t$ = -60						; size = 4
_vsEffects$ = -56					; size = 16
_s$219186 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetCurrentEffectsSummary@CvLuaLeague@@KAHPAUlua_State@@@Z PROC ; CvLuaLeague::lGetCurrentEffectsSummary, COMDAT

; 742  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetCurrentEffectsSummary@CvLuaLeague@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 48					; 00000030H
	push	ebx
	push	ebp
	push	esi

; 743  : 	CvLeague* pLeague = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+68]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	xor	ebp, ebp
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN62@lGetCurren
	push	OFFSET $SG219420
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN62@lGetCurren
	push	-1
	push	esi
	call	_lua_touserdata
	mov	ebp, eax
	add	esp, 8
	test	ebp, ebp
	je	SHORT $LN62@lGetCurren
	xor	bl, bl
$LN62@lGetCurren:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN15@lGetCurren
	push	OFFSET $SG219426
	push	esi
	call	_luaL_error
	push	OFFSET $SG218244
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN15@lGetCurren:

; 744  : 	const PlayerTypes eObserver = (PlayerTypes) luaL_optint(L, 2, NO_PLAYER);

	push	-1
	push	2
	push	esi
	call	_luaL_optinteger

; 745  : 
; 746  : 	lua_createtable(L, 0, 0);

	push	0
	push	0
	push	esi
	mov	edi, eax
	call	_lua_createtable

; 747  : 	const int t = lua_gettop(L);

	push	esi
	call	_lua_gettop
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _t$[esp+76], eax

; 748  : #ifdef AUI_WARNING_FIXES
; 749  : 	const std::vector<CvString>& vsEffects = pLeague->GetCurrentEffectsSummary(eObserver);
; 750  : #else
; 751  : 	std::vector<CvString> vsEffects = pLeague->GetCurrentEffectsSummary(eObserver);

	push	edi
	lea	eax, DWORD PTR _vsEffects$[esp+80]
	push	eax
	mov	ecx, ebp
	call	?GetCurrentEffectsSummary@CvLeague@@QAE?AV?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@W4PlayerTypes@@@Z ; CvLeague::GetCurrentEffectsSummary

; 752  : #endif
; 753  : 	for(uint i = 0; i < vsEffects.size(); i++)

	mov	ebx, DWORD PTR _vsEffects$[esp+84]
	mov	ebp, DWORD PTR _vsEffects$[esp+80]
	mov	ecx, ebx
	sub	ecx, ebp
	mov	eax, -1840700269			; 92492493H
	imul	ecx
	add	edx, ecx
	sar	edx, 4
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	xor	edi, edi
	add	ecx, edx
	mov	DWORD PTR __$EHRec$[esp+84], 0
	je	SHORT $LN1@lGetCurren

; 744  : 	const PlayerTypes eObserver = (PlayerTypes) luaL_optint(L, 2, NO_PLAYER);

	xor	ebx, ebx
$LL3@lGetCurren:

; 754  : 	{
; 755  : 		const CvString s = vsEffects[i];

	lea	eax, DWORD PTR [ebx+ebp]
	push	eax
	lea	ecx, DWORD PTR _s$219186[esp+80]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z

; 756  : 		lua_pushstring(L, s);

	lea	ecx, DWORD PTR _s$219186[esp+76]
	mov	BYTE PTR __$EHRec$[esp+84], 1
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring

; 757  : 		lua_rawseti(L, t, i + 1);

	mov	edx, DWORD PTR _t$[esp+84]
	inc	edi
	push	edi
	push	edx
	push	esi
	call	_lua_rawseti
	add	esp, 20					; 00000014H

; 758  : 	}

	lea	ecx, DWORD PTR _s$219186[esp+76]
	mov	BYTE PTR __$EHRec$[esp+84], 0
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR _vsEffects$[esp+84]
	mov	ebp, DWORD PTR _vsEffects$[esp+80]
	sub	ecx, ebp
	mov	eax, -1840700269			; 92492493H
	imul	ecx
	add	edx, ecx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	add	ebx, 28					; 0000001cH
	cmp	edi, eax
	jb	SHORT $LL3@lGetCurren

; 752  : #endif
; 753  : 	for(uint i = 0; i < vsEffects.size(); i++)

	mov	ebx, DWORD PTR _vsEffects$[esp+84]
$LN1@lGetCurren:

; 759  : 
; 760  : 	return 1;

	mov	DWORD PTR __$EHRec$[esp+84], -1
	test	ebp, ebp
	je	SHORT $LN61@lGetCurren
	mov	esi, ebx
	cmp	ebp, ebx
	je	SHORT $LN40@lGetCurren
	npad	3
$LL42@lGetCurren:
	mov	ecx, ebp
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	add	ebp, 28					; 0000001cH
	cmp	ebp, esi
	jne	SHORT $LL42@lGetCurren
	mov	ebp, DWORD PTR _vsEffects$[esp+80]
$LN40@lGetCurren:
	push	ebp
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN61@lGetCurren:

; 761  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+76]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 60					; 0000003cH
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetCurrentEffectsSummary@CvLuaLeague@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _vsEffects$[ebp]
	jmp	??1?$vector@VCvString@@V?$allocator@VCvString@@@std@@@std@@QAE@XZ ; std::vector<CvString,std::allocator<CvString> >::~vector<CvString,std::allocator<CvString> >
__unwindfunclet$?lGetCurrentEffectsSummary@CvLuaLeague@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR _s$219186[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetCurrentEffectsSummary@CvLuaLeague@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetCurrentEffectsSummary@CvLuaLeague@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetCurrentEffectsSummary@CvLuaLeague@@KAHPAUlua_State@@@Z ENDP ; CvLuaLeague::lGetCurrentEffectsSummary
PUBLIC	?PushMethods@CvLuaLeague@@SAXPAUlua_State@@H@Z	; CvLuaLeague::PushMethods
EXTRN	_lua_pushcclosure:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?PushMethods@CvLuaLeague@@SAXPAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
?PushMethods@CvLuaLeague@@SAXPAUlua_State@@H@Z PROC	; CvLuaLeague::PushMethods, COMDAT

; 29   : {

	push	esi

; 30   : 	Method(IsNone);

	mov	esi, DWORD PTR _L$[esp]
	push	edi
	push	0
	push	OFFSET ?lIsNone@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lIsNone
	push	esi
	call	_lua_pushcclosure
	mov	edi, DWORD PTR _t$[esp+16]
	push	OFFSET $SG218249
	push	edi
	push	esi
	call	_lua_setfield

; 31   : 	
; 32   : 	Method(GetID);

	push	0
	push	OFFSET ?lGetID@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetID
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218250
	push	edi
	push	esi
	call	_lua_setfield

; 33   : 	Method(GetName);

	push	0
	push	OFFSET ?lGetName@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetName
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218251
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 34   : 	Method(CanChangeCustomName);

	push	0
	push	OFFSET ?lCanChangeCustomName@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lCanChangeCustomName
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218252
	push	edi
	push	esi
	call	_lua_setfield

; 35   : 
; 36   : 	Method(IsInSession);

	push	0
	push	OFFSET ?lIsInSession@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lIsInSession
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218253
	push	edi
	push	esi
	call	_lua_setfield

; 37   : 	Method(IsInSpecialSession);

	push	0
	push	OFFSET ?lIsInSpecialSession@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lIsInSpecialSession
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218254
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 38   : 	Method(GetTurnsUntilSession);

	push	0
	push	OFFSET ?lGetTurnsUntilSession@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetTurnsUntilSession
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218255
	push	edi
	push	esi
	call	_lua_setfield

; 39   : 	Method(GetTurnsUntilVictorySession);

	push	0
	push	OFFSET ?lGetTurnsUntilVictorySession@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetTurnsUntilVictorySession
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218256
	push	edi
	push	esi
	call	_lua_setfield

; 40   : 
; 41   : 	Method(CanProposeEnactAnyChoice);

	push	0
	push	OFFSET ?lCanProposeEnactAnyChoice@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lCanProposeEnactAnyChoice
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218257
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 42   : 	Method(CanProposeEnact);

	push	0
	push	OFFSET ?lCanProposeEnact@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lCanProposeEnact
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218258
	push	edi
	push	esi
	call	_lua_setfield

; 43   : 	Method(CanProposeRepeal);

	push	0
	push	OFFSET ?lCanProposeRepeal@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lCanProposeRepeal
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218259
	push	edi
	push	esi
	call	_lua_setfield

; 44   : 	Method(IsProposed);

	push	0
	push	OFFSET ?lIsProposed@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lIsProposed
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218260
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 45   : 	Method(GetChoicesForDecision);

	push	0
	push	OFFSET ?lGetChoicesForDecision@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetChoicesForDecision
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218261
	push	edi
	push	esi
	call	_lua_setfield

; 46   : 	Method(GetTextForChoice);

	push	0
	push	OFFSET ?lGetTextForChoice@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetTextForChoice
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218262
	push	edi
	push	esi
	call	_lua_setfield

; 47   : 	Method(GetInactiveResolutions);

	push	0
	push	OFFSET ?lGetInactiveResolutions@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetInactiveResolutions
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218263
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 48   : 	Method(GetEnactProposals);

	push	0
	push	OFFSET ?lGetEnactProposals@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetEnactProposals
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218264
	push	edi
	push	esi
	call	_lua_setfield

; 49   : 	Method(GetEnactProposalsOnHold);

	push	0
	push	OFFSET ?lGetEnactProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetEnactProposalsOnHold
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218265
	push	edi
	push	esi
	call	_lua_setfield

; 50   : 	Method(GetRepealProposals);

	push	0
	push	OFFSET ?lGetRepealProposals@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetRepealProposals
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218266
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 51   : 	Method(GetRepealProposalsOnHold);

	push	0
	push	OFFSET ?lGetRepealProposalsOnHold@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetRepealProposalsOnHold
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218267
	push	edi
	push	esi
	call	_lua_setfield

; 52   : 	Method(GetActiveResolutions);

	push	0
	push	OFFSET ?lGetActiveResolutions@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetActiveResolutions
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218268
	push	edi
	push	esi
	call	_lua_setfield

; 53   : 
; 54   : 	Method(IsMember);

	push	0
	push	OFFSET ?lIsMember@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lIsMember
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218269
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 55   : 	Method(CanVote);

	push	0
	push	OFFSET ?lCanVote@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lCanVote
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218270
	push	edi
	push	esi
	call	_lua_setfield

; 56   : 	Method(GetRemainingVotesForMember);

	push	0
	push	OFFSET ?lGetRemainingVotesForMember@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetRemainingVotesForMember
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218271
	push	edi
	push	esi
	call	_lua_setfield

; 57   : 	Method(GetSpentVotesForMember);

	push	0
	push	OFFSET ?lGetSpentVotesForMember@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetSpentVotesForMember
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218272
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 58   : 	Method(GetCoreVotesForMember);

	push	0
	push	OFFSET ?lGetCoreVotesForMember@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetCoreVotesForMember
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218273
	push	edi
	push	esi
	call	_lua_setfield

; 59   : 	Method(CalculateStartingVotesForMember);

	push	0
	push	OFFSET ?lCalculateStartingVotesForMember@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lCalculateStartingVotesForMember
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218274
	push	edi
	push	esi
	call	_lua_setfield

; 60   : 	Method(CanPropose);

	push	0
	push	OFFSET ?lCanPropose@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lCanPropose
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218275
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 61   : 	Method(GetRemainingProposalsForMember);

	push	0
	push	OFFSET ?lGetRemainingProposalsForMember@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetRemainingProposalsForMember
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218276
	push	edi
	push	esi
	call	_lua_setfield

; 62   : 
; 63   : 	Method(IsHostMember);

	push	0
	push	OFFSET ?lIsHostMember@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lIsHostMember
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218277
	push	edi
	push	esi
	call	_lua_setfield

; 64   : 	Method(GetHostMember);

	push	0
	push	OFFSET ?lGetHostMember@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetHostMember
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218278
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 65   : 	Method(IsUnitedNations);

	push	0
	push	OFFSET ?lIsUnitedNations@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lIsUnitedNations
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218279
	push	edi
	push	esi
	call	_lua_setfield

; 66   : 
; 67   : 	Method(IsProjectActive);

	push	0
	push	OFFSET ?lIsProjectActive@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lIsProjectActive
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218280
	push	edi
	push	esi
	call	_lua_setfield

; 68   : 	Method(IsProjectComplete);

	push	0
	push	OFFSET ?lIsProjectComplete@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lIsProjectComplete
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218281
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 69   : 	Method(GetProjectCostPerPlayer);

	push	0
	push	OFFSET ?lGetProjectCostPerPlayer@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetProjectCostPerPlayer
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218282
	push	edi
	push	esi
	call	_lua_setfield

; 70   : 	Method(GetProjectBuildingCostPerPlayer);

	push	0
	push	OFFSET ?lGetProjectBuildingCostPerPlayer@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetProjectBuildingCostPerPlayer
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218283
	push	edi
	push	esi
	call	_lua_setfield

; 71   : 	Method(GetProjectCost);

	push	0
	push	OFFSET ?lGetProjectCost@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetProjectCost
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218284
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 72   : 	Method(GetMemberContribution);

	push	0
	push	OFFSET ?lGetMemberContribution@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetMemberContribution
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218285
	push	edi
	push	esi
	call	_lua_setfield

; 73   : 	Method(GetMemberContributionTier);

	push	0
	push	OFFSET ?lGetMemberContributionTier@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetMemberContributionTier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218286
	push	edi
	push	esi
	call	_lua_setfield

; 74   : 	Method(GetContributionTierThreshold);

	push	0
	push	OFFSET ?lGetContributionTierThreshold@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetContributionTierThreshold
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218287
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 75   : 
; 76   : 	Method(GetArtsyGreatPersonRateModifier);

	push	0
	push	OFFSET ?lGetArtsyGreatPersonRateModifier@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetArtsyGreatPersonRateModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218288
	push	edi
	push	esi
	call	_lua_setfield

; 77   : 	Method(GetScienceyGreatPersonRateModifier);

	push	0
	push	OFFSET ?lGetScienceyGreatPersonRateModifier@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetScienceyGreatPersonRateModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218289
	push	edi
	push	esi
	call	_lua_setfield

; 78   : 	
; 79   : 	Method(GetResolutionName);

	push	0
	push	OFFSET ?lGetResolutionName@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetResolutionName
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218290
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 80   : 	Method(GetResolutionDetails);

	push	0
	push	OFFSET ?lGetResolutionDetails@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetResolutionDetails
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218291
	push	edi
	push	esi
	call	_lua_setfield

; 81   : 	Method(GetMemberDetails);

	push	0
	push	OFFSET ?lGetMemberDetails@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetMemberDetails
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218292
	push	edi
	push	esi
	call	_lua_setfield

; 82   : 	Method(GetProjectDetails);

	push	0
	push	OFFSET ?lGetProjectDetails@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetProjectDetails
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218293
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 83   : 	Method(GetProjectRewardTierDetails);

	push	0
	push	OFFSET ?lGetProjectRewardTierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetProjectRewardTierDetails
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218294
	push	edi
	push	esi
	call	_lua_setfield

; 84   : 	Method(GetCurrentEffectsSummary);

	push	0
	push	OFFSET ?lGetCurrentEffectsSummary@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetCurrentEffectsSummary
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218295
	push	edi
	push	esi
	call	_lua_setfield

; 85   : 	Method(GetLeagueSplashTitle);

	push	0
	push	OFFSET ?lGetLeagueSplashTitle@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetLeagueSplashTitle
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218296
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 86   : 	Method(GetLeagueSplashDescription);

	push	0
	push	OFFSET ?lGetLeagueSplashDescription@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetLeagueSplashDescription
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218297
	push	edi
	push	esi
	call	_lua_setfield

; 87   : 	Method(GetLeagueSplashThisEraDetails);

	push	0
	push	OFFSET ?lGetLeagueSplashThisEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetLeagueSplashThisEraDetails
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218298
	push	edi
	push	esi
	call	_lua_setfield

; 88   : 	Method(GetLeagueSplashNextEraDetails);

	push	0
	push	OFFSET ?lGetLeagueSplashNextEraDetails@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetLeagueSplashNextEraDetails
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218299
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 89   : 	Method(GetGreatPersonRateModifierDetails);

	push	0
	push	OFFSET ?lGetGreatPersonRateModifierDetails@CvLuaLeague@@KAHPAUlua_State@@@Z ; CvLuaLeague::lGetGreatPersonRateModifierDetails
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218300
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 24					; 00000018H
	pop	edi
	pop	esi

; 90   : }

	ret	0
?PushMethods@CvLuaLeague@@SAXPAUlua_State@@H@Z ENDP	; CvLuaLeague::PushMethods
_TEXT	ENDS
END
