; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	c:\Users\EnormousApplePie\Desktop\Lekmod Files\Lekmod DLL versions\v29\LEKMOD_DLL\CvGameCoreDLL_Expansion2\CvTypes.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?s_eARTIFACT_ANCIENT_RUIN@@3W4GreatWorkArtifactClass@@A ; s_eARTIFACT_ANCIENT_RUIN
PUBLIC	?s_eARTIFACT_BARBARIAN_CAMP@@3W4GreatWorkArtifactClass@@A ; s_eARTIFACT_BARBARIAN_CAMP
PUBLIC	?s_eARTIFACT_BATTLE_RANGED@@3W4GreatWorkArtifactClass@@A ; s_eARTIFACT_BATTLE_RANGED
PUBLIC	?s_eARTIFACT_BATTLE_MELEE@@3W4GreatWorkArtifactClass@@A ; s_eARTIFACT_BATTLE_MELEE
PUBLIC	?s_eARTIFACT_RAZED_CITY@@3W4GreatWorkArtifactClass@@A ; s_eARTIFACT_RAZED_CITY
PUBLIC	?s_eARTIFACT_WRITING@@3W4GreatWorkArtifactClass@@A ; s_eARTIFACT_WRITING
PUBLIC	?s_eGREAT_WORK_SLOT_ART_ARTIFACT@@3W4GreatWorkSlotType@@A ; s_eGREAT_WORK_SLOT_ART_ARTIFACT
PUBLIC	?s_eGREAT_WORK_SLOT_LITERATURE@@3W4GreatWorkSlotType@@A ; s_eGREAT_WORK_SLOT_LITERATURE
PUBLIC	?s_eGREAT_WORK_SLOT_MUSIC@@3W4GreatWorkSlotType@@A ; s_eGREAT_WORK_SLOT_MUSIC
PUBLIC	?s_eMISSION_MOVE_TO@@3W4MissionTypes@@A		; s_eMISSION_MOVE_TO
PUBLIC	?s_eMISSION_ROUTE_TO@@3W4MissionTypes@@A	; s_eMISSION_ROUTE_TO
PUBLIC	?s_eMISSION_MOVE_TO_UNIT@@3W4MissionTypes@@A	; s_eMISSION_MOVE_TO_UNIT
PUBLIC	?s_eMISSION_SWAP_UNITS@@3W4MissionTypes@@A	; s_eMISSION_SWAP_UNITS
PUBLIC	?s_eMISSION_SKIP@@3W4MissionTypes@@A		; s_eMISSION_SKIP
PUBLIC	?s_eMISSION_SLEEP@@3W4MissionTypes@@A		; s_eMISSION_SLEEP
PUBLIC	?s_eMISSION_ALERT@@3W4MissionTypes@@A		; s_eMISSION_ALERT
PUBLIC	?s_eMISSION_FORTIFY@@3W4MissionTypes@@A		; s_eMISSION_FORTIFY
PUBLIC	?s_eMISSION_GARRISON@@3W4MissionTypes@@A	; s_eMISSION_GARRISON
PUBLIC	?s_eMISSION_SET_UP_FOR_RANGED_ATTACK@@3W4MissionTypes@@A ; s_eMISSION_SET_UP_FOR_RANGED_ATTACK
PUBLIC	?s_eMISSION_EMBARK@@3W4MissionTypes@@A		; s_eMISSION_EMBARK
PUBLIC	?s_eMISSION_DISEMBARK@@3W4MissionTypes@@A	; s_eMISSION_DISEMBARK
PUBLIC	?s_eMISSION_AIRPATROL@@3W4MissionTypes@@A	; s_eMISSION_AIRPATROL
PUBLIC	?s_eMISSION_HEAL@@3W4MissionTypes@@A		; s_eMISSION_HEAL
PUBLIC	?s_eMISSION_AIRLIFT@@3W4MissionTypes@@A		; s_eMISSION_AIRLIFT
PUBLIC	?s_eMISSION_NUKE@@3W4MissionTypes@@A		; s_eMISSION_NUKE
PUBLIC	?s_eMISSION_PARADROP@@3W4MissionTypes@@A	; s_eMISSION_PARADROP
PUBLIC	?s_eMISSION_AIR_SWEEP@@3W4MissionTypes@@A	; s_eMISSION_AIR_SWEEP
PUBLIC	?s_eMISSION_REBASE@@3W4MissionTypes@@A		; s_eMISSION_REBASE
PUBLIC	?s_eMISSION_RANGE_ATTACK@@3W4MissionTypes@@A	; s_eMISSION_RANGE_ATTACK
PUBLIC	?s_eMISSION_PILLAGE@@3W4MissionTypes@@A		; s_eMISSION_PILLAGE
PUBLIC	?s_eMISSION_FOUND@@3W4MissionTypes@@A		; s_eMISSION_FOUND
PUBLIC	?s_eMISSION_JOIN@@3W4MissionTypes@@A		; s_eMISSION_JOIN
PUBLIC	?s_eMISSION_CONSTRUCT@@3W4MissionTypes@@A	; s_eMISSION_CONSTRUCT
PUBLIC	?s_eMISSION_DISCOVER@@3W4MissionTypes@@A	; s_eMISSION_DISCOVER
PUBLIC	?s_eMISSION_HURRY@@3W4MissionTypes@@A		; s_eMISSION_HURRY
PUBLIC	?s_eMISSION_TRADE@@3W4MissionTypes@@A		; s_eMISSION_TRADE
PUBLIC	?s_eMISSION_BUY_CITY_STATE@@3W4MissionTypes@@A	; s_eMISSION_BUY_CITY_STATE
PUBLIC	?s_eMISSION_REPAIR_FLEET@@3W4MissionTypes@@A	; s_eMISSION_REPAIR_FLEET
PUBLIC	?s_eMISSION_SPACESHIP@@3W4MissionTypes@@A	; s_eMISSION_SPACESHIP
PUBLIC	?s_eMISSION_CULTURE_BOMB@@3W4MissionTypes@@A	; s_eMISSION_CULTURE_BOMB
PUBLIC	?s_eMISSION_FOUND_RELIGION@@3W4MissionTypes@@A	; s_eMISSION_FOUND_RELIGION
PUBLIC	?s_eMISSION_GOLDEN_AGE@@3W4MissionTypes@@A	; s_eMISSION_GOLDEN_AGE
PUBLIC	?s_eMISSION_BUILD@@3W4MissionTypes@@A		; s_eMISSION_BUILD
PUBLIC	?s_eMISSION_LEAD@@3W4MissionTypes@@A		; s_eMISSION_LEAD
PUBLIC	?s_eMISSION_DIE_ANIMATION@@3W4MissionTypes@@A	; s_eMISSION_DIE_ANIMATION
PUBLIC	?s_eMISSION_BEGIN_COMBAT@@3W4MissionTypes@@A	; s_eMISSION_BEGIN_COMBAT
PUBLIC	?s_eMISSION_END_COMBAT@@3W4MissionTypes@@A	; s_eMISSION_END_COMBAT
PUBLIC	?s_eMISSION_AIRSTRIKE@@3W4MissionTypes@@A	; s_eMISSION_AIRSTRIKE
PUBLIC	?s_eMISSION_SURRENDER@@3W4MissionTypes@@A	; s_eMISSION_SURRENDER
PUBLIC	?s_eMISSION_CAPTURED@@3W4MissionTypes@@A	; s_eMISSION_CAPTURED
PUBLIC	?s_eMISSION_IDLE@@3W4MissionTypes@@A		; s_eMISSION_IDLE
PUBLIC	?s_eMISSION_DIE@@3W4MissionTypes@@A		; s_eMISSION_DIE
PUBLIC	?s_eMISSION_DAMAGE@@3W4MissionTypes@@A		; s_eMISSION_DAMAGE
PUBLIC	?s_eMISSION_MULTI_SELECT@@3W4MissionTypes@@A	; s_eMISSION_MULTI_SELECT
PUBLIC	?s_eMISSION_MULTI_DESELECT@@3W4MissionTypes@@A	; s_eMISSION_MULTI_DESELECT
PUBLIC	?s_eMISSION_WAIT_FOR@@3W4MissionTypes@@A	; s_eMISSION_WAIT_FOR
PUBLIC	?s_eMISSION_SPREAD_RELIGION@@3W4MissionTypes@@A	; s_eMISSION_SPREAD_RELIGION
PUBLIC	?s_eMISSION_ENHANCE_RELIGION@@3W4MissionTypes@@A ; s_eMISSION_ENHANCE_RELIGION
PUBLIC	?s_eMISSION_REMOVE_HERESY@@3W4MissionTypes@@A	; s_eMISSION_REMOVE_HERESY
PUBLIC	?s_eMISSION_ESTABLISH_TRADE_ROUTE@@3W4MissionTypes@@A ; s_eMISSION_ESTABLISH_TRADE_ROUTE
PUBLIC	?s_eMISSION_PLUNDER_TRADE_ROUTE@@3W4MissionTypes@@A ; s_eMISSION_PLUNDER_TRADE_ROUTE
PUBLIC	?s_eMISSION_GREAT_WORK@@3W4MissionTypes@@A	; s_eMISSION_GREAT_WORK
PUBLIC	?s_eMISSION_CHANGE_TRADE_UNIT_HOME_CITY@@3W4MissionTypes@@A ; s_eMISSION_CHANGE_TRADE_UNIT_HOME_CITY
PUBLIC	?s_eMISSION_SELL_EXOTIC_GOODS@@3W4MissionTypes@@A ; s_eMISSION_SELL_EXOTIC_GOODS
PUBLIC	?s_eMISSION_GIVE_POLICIES@@3W4MissionTypes@@A	; s_eMISSION_GIVE_POLICIES
PUBLIC	?s_eMISSION_ONE_SHOT_TOURISM@@3W4MissionTypes@@A ; s_eMISSION_ONE_SHOT_TOURISM
PUBLIC	?s_eMISSION_CHANGE_ADMIRAL_PORT@@3W4MissionTypes@@A ; s_eMISSION_CHANGE_ADMIRAL_PORT
PUBLIC	?s_uiNUM_MISSION_TYPES@@3IA			; s_uiNUM_MISSION_TYPES
_BSS	SEGMENT
?s_eARTIFACT_ANCIENT_RUIN@@3W4GreatWorkArtifactClass@@A DD 01H DUP (?) ; s_eARTIFACT_ANCIENT_RUIN
?s_eARTIFACT_BARBARIAN_CAMP@@3W4GreatWorkArtifactClass@@A DD 01H DUP (?) ; s_eARTIFACT_BARBARIAN_CAMP
?s_eARTIFACT_BATTLE_RANGED@@3W4GreatWorkArtifactClass@@A DD 01H DUP (?) ; s_eARTIFACT_BATTLE_RANGED
?s_eARTIFACT_BATTLE_MELEE@@3W4GreatWorkArtifactClass@@A DD 01H DUP (?) ; s_eARTIFACT_BATTLE_MELEE
?s_eARTIFACT_RAZED_CITY@@3W4GreatWorkArtifactClass@@A DD 01H DUP (?) ; s_eARTIFACT_RAZED_CITY
?s_eARTIFACT_WRITING@@3W4GreatWorkArtifactClass@@A DD 01H DUP (?) ; s_eARTIFACT_WRITING
?s_uiNUM_MISSION_TYPES@@3IA DD 01H DUP (?)		; s_uiNUM_MISSION_TYPES
_BSS	ENDS
CONST	SEGMENT
$SG218568 DB	'ARTIFACT_ANCIENT_RUIN', 00H
	ORG $+2
$SG218574 DB	'ARTIFACT_BARBARIAN_CAMP', 00H
$SG218580 DB	'ARTIFACT_BATTLE_RANGED', 00H
	ORG $+1
$SG218586 DB	'ARTIFACT_BATTLE_MELEE', 00H
	ORG $+2
$SG218592 DB	'ARTIFACT_RAZED_CITY', 00H
$SG218598 DB	'ARTIFACT_WRITING', 00H
	ORG $+3
$SG218601 DB	'SELECT Type, ID from GreatWorkArtifactClasses', 00H
	ORG $+2
$SG218624 DB	'ArtifactType - %s is used in the DLL but does not exist '
	DB	'in the database.', 00H
	ORG $+3
$SG218626 DB	'Gamecore.log', 00H
	ORG $+3
$SG219943 DB	'GREAT_WORK_SLOT_ART_ARTIFACT', 00H
	ORG $+3
$SG219949 DB	'GREAT_WORK_SLOT_LITERATURE', 00H
	ORG $+1
$SG219955 DB	'GREAT_WORK_SLOT_MUSIC', 00H
	ORG $+2
$SG219958 DB	'SELECT Type, ID from GreatWorkSlots', 00H
	ORG $+4
$SG219976 DB	'GreatWorkSlotType - %s is used in the DLL but does not e'
	DB	'xist in the database.', 00H
	ORG $+2
$SG219978 DB	'Gamecore.log', 00H
	ORG $+3
$SG221295 DB	'MISSION_MOVE_TO', 00H
$SG221301 DB	'MISSION_ROUTE_TO', 00H
	ORG $+3
$SG221307 DB	'MISSION_MOVE_TO_UNIT', 00H
	ORG $+3
$SG221313 DB	'MISSION_SWAP_UNITS', 00H
	ORG $+1
$SG221319 DB	'MISSION_SKIP', 00H
	ORG $+3
$SG221325 DB	'MISSION_SLEEP', 00H
	ORG $+2
$SG221331 DB	'MISSION_ALERT', 00H
	ORG $+2
$SG221337 DB	'MISSION_FORTIFY', 00H
$SG221343 DB	'MISSION_GARRISON', 00H
	ORG $+3
$SG221349 DB	'MISSION_SET_UP_FOR_RANGED_ATTACK', 00H
	ORG $+3
$SG221355 DB	'MISSION_EMBARK', 00H
	ORG $+1
$SG221361 DB	'MISSION_DISEMBARK', 00H
	ORG $+2
$SG221367 DB	'MISSION_AIRPATROL', 00H
	ORG $+2
$SG221373 DB	'MISSION_HEAL', 00H
	ORG $+3
$SG221379 DB	'MISSION_AIRLIFT', 00H
$SG221385 DB	'MISSION_NUKE', 00H
	ORG $+3
$SG221391 DB	'MISSION_PARADROP', 00H
	ORG $+3
$SG221397 DB	'MISSION_AIR_SWEEP', 00H
	ORG $+2
$SG221403 DB	'MISSION_REBASE', 00H
	ORG $+1
$SG221409 DB	'MISSION_RANGE_ATTACK', 00H
	ORG $+3
$SG221415 DB	'MISSION_PILLAGE', 00H
$SG221421 DB	'MISSION_FOUND', 00H
	ORG $+2
$SG221427 DB	'MISSION_JOIN', 00H
	ORG $+3
$SG221433 DB	'MISSION_CONSTRUCT', 00H
	ORG $+2
$SG221439 DB	'MISSION_DISCOVER', 00H
	ORG $+3
$SG221445 DB	'MISSION_HURRY', 00H
	ORG $+2
$SG221451 DB	'MISSION_TRADE', 00H
	ORG $+2
$SG221457 DB	'MISSION_BUY_CITY_STATE', 00H
	ORG $+1
$SG221463 DB	'MISSION_REPAIR_FLEET', 00H
	ORG $+3
$SG221469 DB	'MISSION_SPACESHIP', 00H
	ORG $+2
$SG221475 DB	'MISSION_CULTURE_BOMB', 00H
	ORG $+3
$SG221481 DB	'MISSION_FOUND_RELIGION', 00H
	ORG $+1
$SG221487 DB	'MISSION_GOLDEN_AGE', 00H
	ORG $+1
$SG221493 DB	'MISSION_BUILD', 00H
	ORG $+2
$SG221499 DB	'MISSION_LEAD', 00H
	ORG $+3
$SG221505 DB	'MISSION_DIE_ANIMATION', 00H
	ORG $+2
$SG221511 DB	'MISSION_BEGIN_COMBAT', 00H
	ORG $+3
$SG221517 DB	'MISSION_END_COMBAT', 00H
	ORG $+1
$SG221523 DB	'MISSION_AIRSTRIKE', 00H
	ORG $+2
$SG221529 DB	'MISSION_SURRENDER', 00H
	ORG $+2
$SG221535 DB	'MISSION_CAPTURED', 00H
	ORG $+3
$SG221541 DB	'MISSION_IDLE', 00H
	ORG $+3
$SG221547 DB	'MISSION_DIE', 00H
$SG221553 DB	'MISSION_DAMAGE', 00H
	ORG $+1
$SG221559 DB	'MISSION_MULTI_SELECT', 00H
	ORG $+3
$SG221565 DB	'MISSION_MULTI_DESELECT', 00H
	ORG $+1
$SG221571 DB	'MISSION_WAIT_FOR', 00H
	ORG $+3
$SG221577 DB	'MISSION_SPREAD_RELIGION', 00H
$SG221583 DB	'MISSION_ENHANCE_RELIGION', 00H
	ORG $+3
$SG221589 DB	'MISSION_REMOVE_HERESY', 00H
	ORG $+2
$SG221595 DB	'MISSION_ESTABLISH_TRADE_ROUTE', 00H
	ORG $+2
$SG221601 DB	'MISSION_PLUNDER_TRADE_ROUTE', 00H
$SG221607 DB	'MISSION_CREATE_GREAT_WORK', 00H
	ORG $+2
$SG221613 DB	'MISSION_CHANGE_TRADE_UNIT_HOME_CITY', 00H
$SG221619 DB	'MISSION_SELL_EXOTIC_GOODS', 00H
	ORG $+2
$SG221625 DB	'MISSION_GIVE_POLICIES', 00H
	ORG $+2
$SG221631 DB	'MISSION_ONE_SHOT_TOURISM', 00H
	ORG $+3
$SG221637 DB	'MISSION_CHANGE_ADMIRAL_PORT', 00H
$SG221640 DB	'SELECT Type, ID from Missions', 00H
	ORG $+2
$SG221651 DB	'Missions', 00H
	ORG $+3
$SG221662 DB	'MissionType - %s is used in the DLL but does not exist i'
	DB	'n the database.', 00H
$SG221664 DB	'Gamecore.log', 00H
CONST	ENDS
_DATA	SEGMENT
?s_eGREAT_WORK_SLOT_ART_ARTIFACT@@3W4GreatWorkSlotType@@A DD 0ffffffffH ; s_eGREAT_WORK_SLOT_ART_ARTIFACT
?s_eGREAT_WORK_SLOT_LITERATURE@@3W4GreatWorkSlotType@@A DD 0ffffffffH ; s_eGREAT_WORK_SLOT_LITERATURE
?s_eGREAT_WORK_SLOT_MUSIC@@3W4GreatWorkSlotType@@A DD 0ffffffffH ; s_eGREAT_WORK_SLOT_MUSIC
?s_eMISSION_MOVE_TO@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_MOVE_TO
?s_eMISSION_ROUTE_TO@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_ROUTE_TO
?s_eMISSION_MOVE_TO_UNIT@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_MOVE_TO_UNIT
?s_eMISSION_SWAP_UNITS@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_SWAP_UNITS
?s_eMISSION_SKIP@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_SKIP
?s_eMISSION_SLEEP@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_SLEEP
?s_eMISSION_ALERT@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_ALERT
?s_eMISSION_FORTIFY@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_FORTIFY
?s_eMISSION_GARRISON@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_GARRISON
?s_eMISSION_SET_UP_FOR_RANGED_ATTACK@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_SET_UP_FOR_RANGED_ATTACK
?s_eMISSION_EMBARK@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_EMBARK
?s_eMISSION_DISEMBARK@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_DISEMBARK
?s_eMISSION_AIRPATROL@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_AIRPATROL
?s_eMISSION_HEAL@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_HEAL
?s_eMISSION_AIRLIFT@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_AIRLIFT
?s_eMISSION_NUKE@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_NUKE
?s_eMISSION_PARADROP@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_PARADROP
?s_eMISSION_AIR_SWEEP@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_AIR_SWEEP
?s_eMISSION_REBASE@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_REBASE
?s_eMISSION_RANGE_ATTACK@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_RANGE_ATTACK
?s_eMISSION_PILLAGE@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_PILLAGE
?s_eMISSION_FOUND@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_FOUND
?s_eMISSION_JOIN@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_JOIN
?s_eMISSION_CONSTRUCT@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_CONSTRUCT
?s_eMISSION_DISCOVER@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_DISCOVER
?s_eMISSION_HURRY@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_HURRY
?s_eMISSION_TRADE@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_TRADE
?s_eMISSION_BUY_CITY_STATE@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_BUY_CITY_STATE
?s_eMISSION_REPAIR_FLEET@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_REPAIR_FLEET
?s_eMISSION_SPACESHIP@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_SPACESHIP
?s_eMISSION_CULTURE_BOMB@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_CULTURE_BOMB
?s_eMISSION_FOUND_RELIGION@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_FOUND_RELIGION
?s_eMISSION_GOLDEN_AGE@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_GOLDEN_AGE
?s_eMISSION_BUILD@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_BUILD
?s_eMISSION_LEAD@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_LEAD
?s_eMISSION_DIE_ANIMATION@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_DIE_ANIMATION
?s_eMISSION_BEGIN_COMBAT@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_BEGIN_COMBAT
?s_eMISSION_END_COMBAT@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_END_COMBAT
?s_eMISSION_AIRSTRIKE@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_AIRSTRIKE
?s_eMISSION_SURRENDER@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_SURRENDER
?s_eMISSION_CAPTURED@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_CAPTURED
?s_eMISSION_IDLE@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_IDLE
?s_eMISSION_DIE@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_DIE
?s_eMISSION_DAMAGE@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_DAMAGE
?s_eMISSION_MULTI_SELECT@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_MULTI_SELECT
?s_eMISSION_MULTI_DESELECT@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_MULTI_DESELECT
?s_eMISSION_WAIT_FOR@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_WAIT_FOR
?s_eMISSION_SPREAD_RELIGION@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_SPREAD_RELIGION
?s_eMISSION_ENHANCE_RELIGION@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_ENHANCE_RELIGION
?s_eMISSION_REMOVE_HERESY@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_REMOVE_HERESY
?s_eMISSION_ESTABLISH_TRADE_ROUTE@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_ESTABLISH_TRADE_ROUTE
?s_eMISSION_PLUNDER_TRADE_ROUTE@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_PLUNDER_TRADE_ROUTE
?s_eMISSION_GREAT_WORK@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_GREAT_WORK
?s_eMISSION_CHANGE_TRADE_UNIT_HOME_CITY@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_CHANGE_TRADE_UNIT_HOME_CITY
?s_eMISSION_SELL_EXOTIC_GOODS@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_SELL_EXOTIC_GOODS
?s_eMISSION_GIVE_POLICIES@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_GIVE_POLICIES
?s_eMISSION_ONE_SHOT_TOURISM@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_ONE_SHOT_TOURISM
?s_eMISSION_CHANGE_ADMIRAL_PORT@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_CHANGE_ADMIRAL_PORT
_DATA	ENDS
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R2exception@std@@8
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx

; 371  : 		{	// construct from message string

	push	esi
	lea	eax, DWORD PTR __Message$[esp]
	push	eax
	mov	esi, ecx
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	mov	DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@

; 372  : 		}

	mov	eax, esi
	pop	esi
	ret	4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
EXTRN	__imp_??1exception@std@@UAE@XZ:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx

; 380  : 		{	// destroy the object

	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@

; 381  : 		}

	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogtpy
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN6@scalar
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@scalar:
	mov	eax, esi
	pop	esi
	ret	4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 59   : 	return (_Where);

	mov	eax, DWORD PTR __Where$[esp-4]

; 60   : 	}

	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
; Function compile flags: /Ogtpy
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 64   : 	}

	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??_7logic_error@std@@6B@			; std::logic_error::`vftable'
PUBLIC	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
PUBLIC	??_R4logic_error@std@@6B@			; std::logic_error::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	??_R3logic_error@std@@8				; std::logic_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2logic_error@std@@8				; std::logic_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@logic_error@std@@8		; std::logic_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?what@logic_error@std@@UBEPBDXZ			; std::logic_error::what
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z:PROC
EXTRN	__imp_??0exception@std@@QAE@XZ:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_Elogic_error@std@@UAEPAXI@Z:PROC		; std::logic_error::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@logic_error@std@@8
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
rdata$r	SEGMENT
??_R1A@?0A@EA@logic_error@std@@8 DD FLAT:??_R0?AVlogic_error@std@@@8 ; std::logic_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2logic_error@std@@8
rdata$r	SEGMENT
??_R2logic_error@std@@8 DD FLAT:??_R1A@?0A@EA@logic_error@std@@8 ; std::logic_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3logic_error@std@@8
rdata$r	SEGMENT
??_R3logic_error@std@@8 DD 00H				; std::logic_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4logic_error@std@@6B@
rdata$r	SEGMENT
??_R4logic_error@std@@6B@ DD 00H			; std::logic_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	FLAT:??_R3logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT
??_7logic_error@std@@6B@ DD FLAT:??_R4logic_error@std@@6B@ ; std::logic_error::`vftable'
	DD	FLAT:??_Elogic_error@std@@UAEPAXI@Z
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0
__ehfuncinfo$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Message$ = 8						; size = 4
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::logic_error::logic_error, COMDAT
; _this$ = ecx

; 26   : 		{	// construct from message string

	push	-1
	push	__ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR _this$[esp+20], esi
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	mov	eax, DWORD PTR __Message$[esp+16]
	push	eax
	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR __$EHRec$[esp+32], 0
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z

; 27   : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	mov	eax, esi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:
	mov	eax, OFFSET __ehfuncinfo$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::logic_error::logic_error
PUBLIC	??1logic_error@std@@UAE@XZ			; std::logic_error::~logic_error
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT
??1logic_error@std@@UAE@XZ PROC				; std::logic_error::~logic_error, COMDAT
; _this$ = ecx

; 30   : 		{	// destroy the object

	push	esi
	mov	esi, ecx

; 31   : 		}

	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, esi
	pop	esi
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
??1logic_error@std@@UAE@XZ ENDP				; std::logic_error::~logic_error
_TEXT	ENDS
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@logic_error@std@@UBEPBDXZ PROC			; std::logic_error::what, COMDAT
; _this$ = ecx

; 35   : 		return (_Str.c_str());

	add	ecx, 12					; 0000000cH
	jmp	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
?what@logic_error@std@@UBEPBDXZ ENDP			; std::logic_error::what
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Glogic_error@std@@UAEPAXI@Z PROC			; std::logic_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, esi
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN6@scalar@2
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@scalar@2:
	mov	eax, esi
	pop	esi
	ret	4
??_Glogic_error@std@@UAEPAXI@Z ENDP			; std::logic_error::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_7length_error@std@@6B@			; std::length_error::`vftable'
PUBLIC	??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::length_error::length_error
PUBLIC	??_R4length_error@std@@6B@			; std::length_error::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVlength_error@std@@@8			; std::length_error `RTTI Type Descriptor'
PUBLIC	??_R3length_error@std@@8			; std::length_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2length_error@std@@8			; std::length_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@length_error@std@@8		; std::length_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_Elength_error@std@@UAEPAXI@Z:PROC		; std::length_error::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@length_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@length_error@std@@8 DD FLAT:??_R0?AVlength_error@std@@@8 ; std::length_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3length_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2length_error@std@@8
rdata$r	SEGMENT
??_R2length_error@std@@8 DD FLAT:??_R1A@?0A@EA@length_error@std@@8 ; std::length_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@logic_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3length_error@std@@8
rdata$r	SEGMENT
??_R3length_error@std@@8 DD 00H				; std::length_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2length_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT
??_R0?AVlength_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::length_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlength_error@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4length_error@std@@6B@
rdata$r	SEGMENT
??_R4length_error@std@@6B@ DD 00H			; std::length_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVlength_error@std@@@8
	DD	FLAT:??_R3length_error@std@@8
rdata$r	ENDS
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT
??_7length_error@std@@6B@ DD FLAT:??_R4length_error@std@@6B@ ; std::length_error::`vftable'
	DD	FLAT:??_Elength_error@std@@UAEPAXI@Z
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::length_error::length_error, COMDAT
; _this$ = ecx

; 105  : 		{	// construct from message string

	mov	eax, DWORD PTR __Message$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
	mov	DWORD PTR [esi], OFFSET ??_7length_error@std@@6B@

; 106  : 		}

	mov	eax, esi
	pop	esi
	ret	4
??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::length_error::length_error
_TEXT	ENDS
PUBLIC	??1length_error@std@@UAE@XZ			; std::length_error::~length_error
; Function compile flags: /Ogtpy
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT
??1length_error@std@@UAE@XZ PROC			; std::length_error::~length_error, COMDAT
; _this$ = ecx

; 109  : 		{	// destroy the object

	push	esi
	mov	esi, ecx

; 110  : 		}

	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, esi
	pop	esi
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
??1length_error@std@@UAE@XZ ENDP			; std::length_error::~length_error
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Glength_error@std@@UAEPAXI@Z PROC			; std::length_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, esi
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN8@scalar@3
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN8@scalar@3:
	mov	eax, esi
	pop	esi
	ret	4
??_Glength_error@std@@UAEPAXI@Z ENDP			; std::length_error::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@XZ ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@XZ PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *>, COMDAT
; _this$ = ecx
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@XZ ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *>
_TEXT	ENDS
PUBLIC	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@XZ ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@XZ PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>, COMDAT
; _this$ = ecx
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@XZ ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>
_TEXT	ENDS
PUBLIC	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@QAE@XZ ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@QAE@XZ PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *>, COMDAT
; _this$ = ecx
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@QAE@XZ ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *>
_TEXT	ENDS
PUBLIC	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@QAE@XZ ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@QAE@XZ PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>, COMDAT
; _this$ = ecx
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@QAE@XZ ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>
_TEXT	ENDS
PUBLIC	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>, COMDAT
; _this$ = ecx
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
_TEXT	ENDS
PUBLIC	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>, COMDAT
; _this$ = ecx
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>
_TEXT	ENDS
PUBLIC	?getARTIFACT_ANCIENT_RUIN@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ ; CvTypes::getARTIFACT_ANCIENT_RUIN
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\desktop\lekmod files\lekmod dll versions\v29\lekmod_dll\cvgamecoredll_expansion2\cvtypes.cpp
;	COMDAT ?getARTIFACT_ANCIENT_RUIN@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ
_TEXT	SEGMENT
?getARTIFACT_ANCIENT_RUIN@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ PROC ; CvTypes::getARTIFACT_ANCIENT_RUIN, COMDAT

; 265  : 	return s_eARTIFACT_ANCIENT_RUIN;

	mov	eax, DWORD PTR ?s_eARTIFACT_ANCIENT_RUIN@@3W4GreatWorkArtifactClass@@A ; s_eARTIFACT_ANCIENT_RUIN

; 266  : }

	ret	0
?getARTIFACT_ANCIENT_RUIN@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ ENDP ; CvTypes::getARTIFACT_ANCIENT_RUIN
_TEXT	ENDS
PUBLIC	?getARTIFACT_BARBARIAN_CAMP@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ ; CvTypes::getARTIFACT_BARBARIAN_CAMP
; Function compile flags: /Ogtpy
;	COMDAT ?getARTIFACT_BARBARIAN_CAMP@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ
_TEXT	SEGMENT
?getARTIFACT_BARBARIAN_CAMP@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ PROC ; CvTypes::getARTIFACT_BARBARIAN_CAMP, COMDAT

; 270  : 	return s_eARTIFACT_BARBARIAN_CAMP;

	mov	eax, DWORD PTR ?s_eARTIFACT_BARBARIAN_CAMP@@3W4GreatWorkArtifactClass@@A ; s_eARTIFACT_BARBARIAN_CAMP

; 271  : }

	ret	0
?getARTIFACT_BARBARIAN_CAMP@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ ENDP ; CvTypes::getARTIFACT_BARBARIAN_CAMP
_TEXT	ENDS
PUBLIC	?getARTIFACT_BATTLE_RANGED@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ ; CvTypes::getARTIFACT_BATTLE_RANGED
; Function compile flags: /Ogtpy
;	COMDAT ?getARTIFACT_BATTLE_RANGED@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ
_TEXT	SEGMENT
?getARTIFACT_BATTLE_RANGED@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ PROC ; CvTypes::getARTIFACT_BATTLE_RANGED, COMDAT

; 275  : 	return s_eARTIFACT_BATTLE_RANGED;

	mov	eax, DWORD PTR ?s_eARTIFACT_BATTLE_RANGED@@3W4GreatWorkArtifactClass@@A ; s_eARTIFACT_BATTLE_RANGED

; 276  : }

	ret	0
?getARTIFACT_BATTLE_RANGED@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ ENDP ; CvTypes::getARTIFACT_BATTLE_RANGED
_TEXT	ENDS
PUBLIC	?getARTIFACT_BATTLE_MELEE@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ ; CvTypes::getARTIFACT_BATTLE_MELEE
; Function compile flags: /Ogtpy
;	COMDAT ?getARTIFACT_BATTLE_MELEE@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ
_TEXT	SEGMENT
?getARTIFACT_BATTLE_MELEE@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ PROC ; CvTypes::getARTIFACT_BATTLE_MELEE, COMDAT

; 280  : 	return s_eARTIFACT_BATTLE_MELEE;

	mov	eax, DWORD PTR ?s_eARTIFACT_BATTLE_MELEE@@3W4GreatWorkArtifactClass@@A ; s_eARTIFACT_BATTLE_MELEE

; 281  : }

	ret	0
?getARTIFACT_BATTLE_MELEE@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ ENDP ; CvTypes::getARTIFACT_BATTLE_MELEE
_TEXT	ENDS
PUBLIC	?getARTIFACT_RAZED_CITY@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ ; CvTypes::getARTIFACT_RAZED_CITY
; Function compile flags: /Ogtpy
;	COMDAT ?getARTIFACT_RAZED_CITY@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ
_TEXT	SEGMENT
?getARTIFACT_RAZED_CITY@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ PROC ; CvTypes::getARTIFACT_RAZED_CITY, COMDAT

; 285  : 	return s_eARTIFACT_RAZED_CITY;

	mov	eax, DWORD PTR ?s_eARTIFACT_RAZED_CITY@@3W4GreatWorkArtifactClass@@A ; s_eARTIFACT_RAZED_CITY

; 286  : }

	ret	0
?getARTIFACT_RAZED_CITY@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ ENDP ; CvTypes::getARTIFACT_RAZED_CITY
_TEXT	ENDS
PUBLIC	?getARTIFACT_WRITING@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ ; CvTypes::getARTIFACT_WRITING
; Function compile flags: /Ogtpy
;	COMDAT ?getARTIFACT_WRITING@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ
_TEXT	SEGMENT
?getARTIFACT_WRITING@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ PROC ; CvTypes::getARTIFACT_WRITING, COMDAT

; 290  : 	return s_eARTIFACT_WRITING;

	mov	eax, DWORD PTR ?s_eARTIFACT_WRITING@@3W4GreatWorkArtifactClass@@A ; s_eARTIFACT_WRITING

; 291  : }

	ret	0
?getARTIFACT_WRITING@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ ENDP ; CvTypes::getARTIFACT_WRITING
_TEXT	ENDS
PUBLIC	?getGREAT_WORK_SLOT_ART_ARTIFACT@CvTypes@@YA?BW4GreatWorkSlotType@@XZ ; CvTypes::getGREAT_WORK_SLOT_ART_ARTIFACT
; Function compile flags: /Ogtpy
;	COMDAT ?getGREAT_WORK_SLOT_ART_ARTIFACT@CvTypes@@YA?BW4GreatWorkSlotType@@XZ
_TEXT	SEGMENT
?getGREAT_WORK_SLOT_ART_ARTIFACT@CvTypes@@YA?BW4GreatWorkSlotType@@XZ PROC ; CvTypes::getGREAT_WORK_SLOT_ART_ARTIFACT, COMDAT

; 298  : 	return s_eGREAT_WORK_SLOT_ART_ARTIFACT;

	mov	eax, DWORD PTR ?s_eGREAT_WORK_SLOT_ART_ARTIFACT@@3W4GreatWorkSlotType@@A ; s_eGREAT_WORK_SLOT_ART_ARTIFACT

; 299  : }

	ret	0
?getGREAT_WORK_SLOT_ART_ARTIFACT@CvTypes@@YA?BW4GreatWorkSlotType@@XZ ENDP ; CvTypes::getGREAT_WORK_SLOT_ART_ARTIFACT
_TEXT	ENDS
PUBLIC	?getGREAT_WORK_SLOT_LITERATURE@CvTypes@@YA?BW4GreatWorkSlotType@@XZ ; CvTypes::getGREAT_WORK_SLOT_LITERATURE
; Function compile flags: /Ogtpy
;	COMDAT ?getGREAT_WORK_SLOT_LITERATURE@CvTypes@@YA?BW4GreatWorkSlotType@@XZ
_TEXT	SEGMENT
?getGREAT_WORK_SLOT_LITERATURE@CvTypes@@YA?BW4GreatWorkSlotType@@XZ PROC ; CvTypes::getGREAT_WORK_SLOT_LITERATURE, COMDAT

; 303  : 	return s_eGREAT_WORK_SLOT_LITERATURE;

	mov	eax, DWORD PTR ?s_eGREAT_WORK_SLOT_LITERATURE@@3W4GreatWorkSlotType@@A ; s_eGREAT_WORK_SLOT_LITERATURE

; 304  : }

	ret	0
?getGREAT_WORK_SLOT_LITERATURE@CvTypes@@YA?BW4GreatWorkSlotType@@XZ ENDP ; CvTypes::getGREAT_WORK_SLOT_LITERATURE
_TEXT	ENDS
PUBLIC	?getGREAT_WORK_SLOT_MUSIC@CvTypes@@YA?BW4GreatWorkSlotType@@XZ ; CvTypes::getGREAT_WORK_SLOT_MUSIC
; Function compile flags: /Ogtpy
;	COMDAT ?getGREAT_WORK_SLOT_MUSIC@CvTypes@@YA?BW4GreatWorkSlotType@@XZ
_TEXT	SEGMENT
?getGREAT_WORK_SLOT_MUSIC@CvTypes@@YA?BW4GreatWorkSlotType@@XZ PROC ; CvTypes::getGREAT_WORK_SLOT_MUSIC, COMDAT

; 308  : 	return s_eGREAT_WORK_SLOT_MUSIC;

	mov	eax, DWORD PTR ?s_eGREAT_WORK_SLOT_MUSIC@@3W4GreatWorkSlotType@@A ; s_eGREAT_WORK_SLOT_MUSIC

; 309  : }

	ret	0
?getGREAT_WORK_SLOT_MUSIC@CvTypes@@YA?BW4GreatWorkSlotType@@XZ ENDP ; CvTypes::getGREAT_WORK_SLOT_MUSIC
_TEXT	ENDS
PUBLIC	?getMISSION_MOVE_TO@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_MOVE_TO
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_MOVE_TO@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_MOVE_TO@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_MOVE_TO, COMDAT

; 315  : 	return s_eMISSION_MOVE_TO;

	mov	eax, DWORD PTR ?s_eMISSION_MOVE_TO@@3W4MissionTypes@@A ; s_eMISSION_MOVE_TO

; 316  : }

	ret	0
?getMISSION_MOVE_TO@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_MOVE_TO
_TEXT	ENDS
PUBLIC	?getMISSION_ROUTE_TO@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_ROUTE_TO
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_ROUTE_TO@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_ROUTE_TO@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_ROUTE_TO, COMDAT

; 319  : 	return s_eMISSION_ROUTE_TO;

	mov	eax, DWORD PTR ?s_eMISSION_ROUTE_TO@@3W4MissionTypes@@A ; s_eMISSION_ROUTE_TO

; 320  : }

	ret	0
?getMISSION_ROUTE_TO@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_ROUTE_TO
_TEXT	ENDS
PUBLIC	?getMISSION_MOVE_TO_UNIT@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_MOVE_TO_UNIT
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_MOVE_TO_UNIT@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_MOVE_TO_UNIT@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_MOVE_TO_UNIT, COMDAT

; 323  : 	return s_eMISSION_MOVE_TO_UNIT;

	mov	eax, DWORD PTR ?s_eMISSION_MOVE_TO_UNIT@@3W4MissionTypes@@A ; s_eMISSION_MOVE_TO_UNIT

; 324  : }

	ret	0
?getMISSION_MOVE_TO_UNIT@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_MOVE_TO_UNIT
_TEXT	ENDS
PUBLIC	?getMISSION_SWAP_UNITS@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_SWAP_UNITS
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_SWAP_UNITS@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_SWAP_UNITS@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_SWAP_UNITS, COMDAT

; 327  : 	return s_eMISSION_SWAP_UNITS;

	mov	eax, DWORD PTR ?s_eMISSION_SWAP_UNITS@@3W4MissionTypes@@A ; s_eMISSION_SWAP_UNITS

; 328  : }

	ret	0
?getMISSION_SWAP_UNITS@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_SWAP_UNITS
_TEXT	ENDS
PUBLIC	?getMISSION_SKIP@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_SKIP
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_SKIP@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_SKIP@CvTypes@@YA?BW4MissionTypes@@XZ PROC	; CvTypes::getMISSION_SKIP, COMDAT

; 331  : 	return s_eMISSION_SKIP;

	mov	eax, DWORD PTR ?s_eMISSION_SKIP@@3W4MissionTypes@@A ; s_eMISSION_SKIP

; 332  : }

	ret	0
?getMISSION_SKIP@CvTypes@@YA?BW4MissionTypes@@XZ ENDP	; CvTypes::getMISSION_SKIP
_TEXT	ENDS
PUBLIC	?getMISSION_SLEEP@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_SLEEP
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_SLEEP@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_SLEEP@CvTypes@@YA?BW4MissionTypes@@XZ PROC	; CvTypes::getMISSION_SLEEP, COMDAT

; 335  : 	return s_eMISSION_SLEEP;

	mov	eax, DWORD PTR ?s_eMISSION_SLEEP@@3W4MissionTypes@@A ; s_eMISSION_SLEEP

; 336  : }

	ret	0
?getMISSION_SLEEP@CvTypes@@YA?BW4MissionTypes@@XZ ENDP	; CvTypes::getMISSION_SLEEP
_TEXT	ENDS
PUBLIC	?getMISSION_ALERT@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_ALERT
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_ALERT@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_ALERT@CvTypes@@YA?BW4MissionTypes@@XZ PROC	; CvTypes::getMISSION_ALERT, COMDAT

; 339  : 	return s_eMISSION_ALERT;

	mov	eax, DWORD PTR ?s_eMISSION_ALERT@@3W4MissionTypes@@A ; s_eMISSION_ALERT

; 340  : }

	ret	0
?getMISSION_ALERT@CvTypes@@YA?BW4MissionTypes@@XZ ENDP	; CvTypes::getMISSION_ALERT
_TEXT	ENDS
PUBLIC	?getMISSION_FORTIFY@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_FORTIFY
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_FORTIFY@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_FORTIFY@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_FORTIFY, COMDAT

; 343  : 	return s_eMISSION_FORTIFY;

	mov	eax, DWORD PTR ?s_eMISSION_FORTIFY@@3W4MissionTypes@@A ; s_eMISSION_FORTIFY

; 344  : }

	ret	0
?getMISSION_FORTIFY@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_FORTIFY
_TEXT	ENDS
PUBLIC	?getMISSION_GARRISON@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_GARRISON
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_GARRISON@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_GARRISON@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_GARRISON, COMDAT

; 347  : 	return s_eMISSION_GARRISON;

	mov	eax, DWORD PTR ?s_eMISSION_GARRISON@@3W4MissionTypes@@A ; s_eMISSION_GARRISON

; 348  : }

	ret	0
?getMISSION_GARRISON@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_GARRISON
_TEXT	ENDS
PUBLIC	?getMISSION_SET_UP_FOR_RANGED_ATTACK@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_SET_UP_FOR_RANGED_ATTACK
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_SET_UP_FOR_RANGED_ATTACK@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_SET_UP_FOR_RANGED_ATTACK@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_SET_UP_FOR_RANGED_ATTACK, COMDAT

; 351  : 	return s_eMISSION_SET_UP_FOR_RANGED_ATTACK;

	mov	eax, DWORD PTR ?s_eMISSION_SET_UP_FOR_RANGED_ATTACK@@3W4MissionTypes@@A ; s_eMISSION_SET_UP_FOR_RANGED_ATTACK

; 352  : }

	ret	0
?getMISSION_SET_UP_FOR_RANGED_ATTACK@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_SET_UP_FOR_RANGED_ATTACK
_TEXT	ENDS
PUBLIC	?getMISSION_EMBARK@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_EMBARK
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_EMBARK@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_EMBARK@CvTypes@@YA?BW4MissionTypes@@XZ PROC	; CvTypes::getMISSION_EMBARK, COMDAT

; 355  : 	return s_eMISSION_EMBARK;

	mov	eax, DWORD PTR ?s_eMISSION_EMBARK@@3W4MissionTypes@@A ; s_eMISSION_EMBARK

; 356  : }

	ret	0
?getMISSION_EMBARK@CvTypes@@YA?BW4MissionTypes@@XZ ENDP	; CvTypes::getMISSION_EMBARK
_TEXT	ENDS
PUBLIC	?getMISSION_DISEMBARK@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_DISEMBARK
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_DISEMBARK@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_DISEMBARK@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_DISEMBARK, COMDAT

; 359  : 	return s_eMISSION_DISEMBARK;

	mov	eax, DWORD PTR ?s_eMISSION_DISEMBARK@@3W4MissionTypes@@A ; s_eMISSION_DISEMBARK

; 360  : }

	ret	0
?getMISSION_DISEMBARK@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_DISEMBARK
_TEXT	ENDS
PUBLIC	?getMISSION_AIRPATROL@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_AIRPATROL
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_AIRPATROL@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_AIRPATROL@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_AIRPATROL, COMDAT

; 363  : 	return s_eMISSION_AIRPATROL;

	mov	eax, DWORD PTR ?s_eMISSION_AIRPATROL@@3W4MissionTypes@@A ; s_eMISSION_AIRPATROL

; 364  : }

	ret	0
?getMISSION_AIRPATROL@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_AIRPATROL
_TEXT	ENDS
PUBLIC	?getMISSION_HEAL@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_HEAL
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_HEAL@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_HEAL@CvTypes@@YA?BW4MissionTypes@@XZ PROC	; CvTypes::getMISSION_HEAL, COMDAT

; 367  : 	return s_eMISSION_HEAL;

	mov	eax, DWORD PTR ?s_eMISSION_HEAL@@3W4MissionTypes@@A ; s_eMISSION_HEAL

; 368  : }

	ret	0
?getMISSION_HEAL@CvTypes@@YA?BW4MissionTypes@@XZ ENDP	; CvTypes::getMISSION_HEAL
_TEXT	ENDS
PUBLIC	?getMISSION_AIRLIFT@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_AIRLIFT
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_AIRLIFT@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_AIRLIFT@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_AIRLIFT, COMDAT

; 371  : 	return s_eMISSION_AIRLIFT;

	mov	eax, DWORD PTR ?s_eMISSION_AIRLIFT@@3W4MissionTypes@@A ; s_eMISSION_AIRLIFT

; 372  : }

	ret	0
?getMISSION_AIRLIFT@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_AIRLIFT
_TEXT	ENDS
PUBLIC	?getMISSION_NUKE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_NUKE
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_NUKE@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_NUKE@CvTypes@@YA?BW4MissionTypes@@XZ PROC	; CvTypes::getMISSION_NUKE, COMDAT

; 375  : 	return s_eMISSION_NUKE;

	mov	eax, DWORD PTR ?s_eMISSION_NUKE@@3W4MissionTypes@@A ; s_eMISSION_NUKE

; 376  : }

	ret	0
?getMISSION_NUKE@CvTypes@@YA?BW4MissionTypes@@XZ ENDP	; CvTypes::getMISSION_NUKE
_TEXT	ENDS
PUBLIC	?getMISSION_PARADROP@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_PARADROP
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_PARADROP@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_PARADROP@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_PARADROP, COMDAT

; 379  : 	return s_eMISSION_PARADROP;

	mov	eax, DWORD PTR ?s_eMISSION_PARADROP@@3W4MissionTypes@@A ; s_eMISSION_PARADROP

; 380  : }

	ret	0
?getMISSION_PARADROP@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_PARADROP
_TEXT	ENDS
PUBLIC	?getMISSION_AIR_SWEEP@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_AIR_SWEEP
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_AIR_SWEEP@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_AIR_SWEEP@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_AIR_SWEEP, COMDAT

; 383  : 	return s_eMISSION_AIR_SWEEP;

	mov	eax, DWORD PTR ?s_eMISSION_AIR_SWEEP@@3W4MissionTypes@@A ; s_eMISSION_AIR_SWEEP

; 384  : }

	ret	0
?getMISSION_AIR_SWEEP@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_AIR_SWEEP
_TEXT	ENDS
PUBLIC	?getMISSION_REBASE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_REBASE
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_REBASE@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_REBASE@CvTypes@@YA?BW4MissionTypes@@XZ PROC	; CvTypes::getMISSION_REBASE, COMDAT

; 387  : 	return s_eMISSION_REBASE;

	mov	eax, DWORD PTR ?s_eMISSION_REBASE@@3W4MissionTypes@@A ; s_eMISSION_REBASE

; 388  : }

	ret	0
?getMISSION_REBASE@CvTypes@@YA?BW4MissionTypes@@XZ ENDP	; CvTypes::getMISSION_REBASE
_TEXT	ENDS
PUBLIC	?getMISSION_RANGE_ATTACK@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_RANGE_ATTACK
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_RANGE_ATTACK@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_RANGE_ATTACK@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_RANGE_ATTACK, COMDAT

; 391  : 	return s_eMISSION_RANGE_ATTACK;

	mov	eax, DWORD PTR ?s_eMISSION_RANGE_ATTACK@@3W4MissionTypes@@A ; s_eMISSION_RANGE_ATTACK

; 392  : }

	ret	0
?getMISSION_RANGE_ATTACK@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_RANGE_ATTACK
_TEXT	ENDS
PUBLIC	?getMISSION_PILLAGE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_PILLAGE
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_PILLAGE@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_PILLAGE@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_PILLAGE, COMDAT

; 395  : 	return s_eMISSION_PILLAGE;

	mov	eax, DWORD PTR ?s_eMISSION_PILLAGE@@3W4MissionTypes@@A ; s_eMISSION_PILLAGE

; 396  : }

	ret	0
?getMISSION_PILLAGE@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_PILLAGE
_TEXT	ENDS
PUBLIC	?getMISSION_FOUND@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_FOUND
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_FOUND@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_FOUND@CvTypes@@YA?BW4MissionTypes@@XZ PROC	; CvTypes::getMISSION_FOUND, COMDAT

; 399  : 	return s_eMISSION_FOUND;

	mov	eax, DWORD PTR ?s_eMISSION_FOUND@@3W4MissionTypes@@A ; s_eMISSION_FOUND

; 400  : }

	ret	0
?getMISSION_FOUND@CvTypes@@YA?BW4MissionTypes@@XZ ENDP	; CvTypes::getMISSION_FOUND
_TEXT	ENDS
PUBLIC	?getMISSION_JOIN@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_JOIN
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_JOIN@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_JOIN@CvTypes@@YA?BW4MissionTypes@@XZ PROC	; CvTypes::getMISSION_JOIN, COMDAT

; 403  : 	return s_eMISSION_JOIN;

	mov	eax, DWORD PTR ?s_eMISSION_JOIN@@3W4MissionTypes@@A ; s_eMISSION_JOIN

; 404  : }

	ret	0
?getMISSION_JOIN@CvTypes@@YA?BW4MissionTypes@@XZ ENDP	; CvTypes::getMISSION_JOIN
_TEXT	ENDS
PUBLIC	?getMISSION_CONSTRUCT@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_CONSTRUCT
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_CONSTRUCT@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_CONSTRUCT@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_CONSTRUCT, COMDAT

; 407  : 	return s_eMISSION_CONSTRUCT;

	mov	eax, DWORD PTR ?s_eMISSION_CONSTRUCT@@3W4MissionTypes@@A ; s_eMISSION_CONSTRUCT

; 408  : }

	ret	0
?getMISSION_CONSTRUCT@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_CONSTRUCT
_TEXT	ENDS
PUBLIC	?getMISSION_DISCOVER@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_DISCOVER
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_DISCOVER@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_DISCOVER@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_DISCOVER, COMDAT

; 411  : 	return s_eMISSION_DISCOVER;

	mov	eax, DWORD PTR ?s_eMISSION_DISCOVER@@3W4MissionTypes@@A ; s_eMISSION_DISCOVER

; 412  : }

	ret	0
?getMISSION_DISCOVER@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_DISCOVER
_TEXT	ENDS
PUBLIC	?getMISSION_HURRY@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_HURRY
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_HURRY@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_HURRY@CvTypes@@YA?BW4MissionTypes@@XZ PROC	; CvTypes::getMISSION_HURRY, COMDAT

; 415  : 	return s_eMISSION_HURRY;

	mov	eax, DWORD PTR ?s_eMISSION_HURRY@@3W4MissionTypes@@A ; s_eMISSION_HURRY

; 416  : }

	ret	0
?getMISSION_HURRY@CvTypes@@YA?BW4MissionTypes@@XZ ENDP	; CvTypes::getMISSION_HURRY
_TEXT	ENDS
PUBLIC	?getMISSION_TRADE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_TRADE
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_TRADE@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_TRADE@CvTypes@@YA?BW4MissionTypes@@XZ PROC	; CvTypes::getMISSION_TRADE, COMDAT

; 419  : 	return s_eMISSION_TRADE;

	mov	eax, DWORD PTR ?s_eMISSION_TRADE@@3W4MissionTypes@@A ; s_eMISSION_TRADE

; 420  : }

	ret	0
?getMISSION_TRADE@CvTypes@@YA?BW4MissionTypes@@XZ ENDP	; CvTypes::getMISSION_TRADE
_TEXT	ENDS
PUBLIC	?getMISSION_REPAIR_FLEET@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_REPAIR_FLEET
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_REPAIR_FLEET@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_REPAIR_FLEET@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_REPAIR_FLEET, COMDAT

; 423  : 	return s_eMISSION_REPAIR_FLEET;

	mov	eax, DWORD PTR ?s_eMISSION_REPAIR_FLEET@@3W4MissionTypes@@A ; s_eMISSION_REPAIR_FLEET

; 424  : }

	ret	0
?getMISSION_REPAIR_FLEET@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_REPAIR_FLEET
_TEXT	ENDS
PUBLIC	?getMISSION_BUY_CITY_STATE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_BUY_CITY_STATE
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_BUY_CITY_STATE@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_BUY_CITY_STATE@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_BUY_CITY_STATE, COMDAT

; 427  : 	return s_eMISSION_BUY_CITY_STATE;

	mov	eax, DWORD PTR ?s_eMISSION_BUY_CITY_STATE@@3W4MissionTypes@@A ; s_eMISSION_BUY_CITY_STATE

; 428  : }

	ret	0
?getMISSION_BUY_CITY_STATE@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_BUY_CITY_STATE
_TEXT	ENDS
PUBLIC	?getMISSION_SPACESHIP@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_SPACESHIP
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_SPACESHIP@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_SPACESHIP@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_SPACESHIP, COMDAT

; 431  : 	return s_eMISSION_SPACESHIP;

	mov	eax, DWORD PTR ?s_eMISSION_SPACESHIP@@3W4MissionTypes@@A ; s_eMISSION_SPACESHIP

; 432  : }

	ret	0
?getMISSION_SPACESHIP@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_SPACESHIP
_TEXT	ENDS
PUBLIC	?getMISSION_CULTURE_BOMB@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_CULTURE_BOMB
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_CULTURE_BOMB@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_CULTURE_BOMB@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_CULTURE_BOMB, COMDAT

; 435  : 	return s_eMISSION_CULTURE_BOMB;

	mov	eax, DWORD PTR ?s_eMISSION_CULTURE_BOMB@@3W4MissionTypes@@A ; s_eMISSION_CULTURE_BOMB

; 436  : }

	ret	0
?getMISSION_CULTURE_BOMB@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_CULTURE_BOMB
_TEXT	ENDS
PUBLIC	?getMISSION_FOUND_RELIGION@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_FOUND_RELIGION
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_FOUND_RELIGION@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_FOUND_RELIGION@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_FOUND_RELIGION, COMDAT

; 439  : 	return s_eMISSION_FOUND_RELIGION;

	mov	eax, DWORD PTR ?s_eMISSION_FOUND_RELIGION@@3W4MissionTypes@@A ; s_eMISSION_FOUND_RELIGION

; 440  : }

	ret	0
?getMISSION_FOUND_RELIGION@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_FOUND_RELIGION
_TEXT	ENDS
PUBLIC	?getMISSION_GOLDEN_AGE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_GOLDEN_AGE
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_GOLDEN_AGE@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_GOLDEN_AGE@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_GOLDEN_AGE, COMDAT

; 443  : 	return s_eMISSION_GOLDEN_AGE;

	mov	eax, DWORD PTR ?s_eMISSION_GOLDEN_AGE@@3W4MissionTypes@@A ; s_eMISSION_GOLDEN_AGE

; 444  : }

	ret	0
?getMISSION_GOLDEN_AGE@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_GOLDEN_AGE
_TEXT	ENDS
PUBLIC	?getMISSION_BUILD@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_BUILD
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_BUILD@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_BUILD@CvTypes@@YA?BW4MissionTypes@@XZ PROC	; CvTypes::getMISSION_BUILD, COMDAT

; 447  : 	return s_eMISSION_BUILD;

	mov	eax, DWORD PTR ?s_eMISSION_BUILD@@3W4MissionTypes@@A ; s_eMISSION_BUILD

; 448  : }

	ret	0
?getMISSION_BUILD@CvTypes@@YA?BW4MissionTypes@@XZ ENDP	; CvTypes::getMISSION_BUILD
_TEXT	ENDS
PUBLIC	?getMISSION_LEAD@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_LEAD
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_LEAD@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_LEAD@CvTypes@@YA?BW4MissionTypes@@XZ PROC	; CvTypes::getMISSION_LEAD, COMDAT

; 451  : 	return s_eMISSION_LEAD;

	mov	eax, DWORD PTR ?s_eMISSION_LEAD@@3W4MissionTypes@@A ; s_eMISSION_LEAD

; 452  : }

	ret	0
?getMISSION_LEAD@CvTypes@@YA?BW4MissionTypes@@XZ ENDP	; CvTypes::getMISSION_LEAD
_TEXT	ENDS
PUBLIC	?getMISSION_DIE_ANIMATION@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_DIE_ANIMATION
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_DIE_ANIMATION@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_DIE_ANIMATION@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_DIE_ANIMATION, COMDAT

; 455  : 	return s_eMISSION_DIE_ANIMATION;

	mov	eax, DWORD PTR ?s_eMISSION_DIE_ANIMATION@@3W4MissionTypes@@A ; s_eMISSION_DIE_ANIMATION

; 456  : }

	ret	0
?getMISSION_DIE_ANIMATION@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_DIE_ANIMATION
_TEXT	ENDS
PUBLIC	?getMISSION_BEGIN_COMBAT@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_BEGIN_COMBAT
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_BEGIN_COMBAT@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_BEGIN_COMBAT@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_BEGIN_COMBAT, COMDAT

; 459  : 	return s_eMISSION_BEGIN_COMBAT;

	mov	eax, DWORD PTR ?s_eMISSION_BEGIN_COMBAT@@3W4MissionTypes@@A ; s_eMISSION_BEGIN_COMBAT

; 460  : }

	ret	0
?getMISSION_BEGIN_COMBAT@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_BEGIN_COMBAT
_TEXT	ENDS
PUBLIC	?getMISSION_END_COMBAT@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_END_COMBAT
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_END_COMBAT@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_END_COMBAT@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_END_COMBAT, COMDAT

; 463  : 	return s_eMISSION_END_COMBAT;

	mov	eax, DWORD PTR ?s_eMISSION_END_COMBAT@@3W4MissionTypes@@A ; s_eMISSION_END_COMBAT

; 464  : }

	ret	0
?getMISSION_END_COMBAT@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_END_COMBAT
_TEXT	ENDS
PUBLIC	?getMISSION_AIRSTRIKE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_AIRSTRIKE
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_AIRSTRIKE@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_AIRSTRIKE@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_AIRSTRIKE, COMDAT

; 467  : 	return s_eMISSION_AIRSTRIKE;

	mov	eax, DWORD PTR ?s_eMISSION_AIRSTRIKE@@3W4MissionTypes@@A ; s_eMISSION_AIRSTRIKE

; 468  : }

	ret	0
?getMISSION_AIRSTRIKE@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_AIRSTRIKE
_TEXT	ENDS
PUBLIC	?getMISSION_SURRENDER@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_SURRENDER
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_SURRENDER@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_SURRENDER@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_SURRENDER, COMDAT

; 471  : 	return s_eMISSION_SURRENDER;

	mov	eax, DWORD PTR ?s_eMISSION_SURRENDER@@3W4MissionTypes@@A ; s_eMISSION_SURRENDER

; 472  : }

	ret	0
?getMISSION_SURRENDER@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_SURRENDER
_TEXT	ENDS
PUBLIC	?getMISSION_CAPTURED@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_CAPTURED
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_CAPTURED@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_CAPTURED@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_CAPTURED, COMDAT

; 475  : 	return s_eMISSION_CAPTURED;

	mov	eax, DWORD PTR ?s_eMISSION_CAPTURED@@3W4MissionTypes@@A ; s_eMISSION_CAPTURED

; 476  : }

	ret	0
?getMISSION_CAPTURED@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_CAPTURED
_TEXT	ENDS
PUBLIC	?getMISSION_IDLE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_IDLE
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_IDLE@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_IDLE@CvTypes@@YA?BW4MissionTypes@@XZ PROC	; CvTypes::getMISSION_IDLE, COMDAT

; 479  : 	return s_eMISSION_IDLE;

	mov	eax, DWORD PTR ?s_eMISSION_IDLE@@3W4MissionTypes@@A ; s_eMISSION_IDLE

; 480  : }

	ret	0
?getMISSION_IDLE@CvTypes@@YA?BW4MissionTypes@@XZ ENDP	; CvTypes::getMISSION_IDLE
_TEXT	ENDS
PUBLIC	?getMISSION_DIE@CvTypes@@YA?BW4MissionTypes@@XZ	; CvTypes::getMISSION_DIE
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_DIE@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_DIE@CvTypes@@YA?BW4MissionTypes@@XZ PROC	; CvTypes::getMISSION_DIE, COMDAT

; 483  : 	return s_eMISSION_DIE;

	mov	eax, DWORD PTR ?s_eMISSION_DIE@@3W4MissionTypes@@A ; s_eMISSION_DIE

; 484  : }

	ret	0
?getMISSION_DIE@CvTypes@@YA?BW4MissionTypes@@XZ ENDP	; CvTypes::getMISSION_DIE
_TEXT	ENDS
PUBLIC	?getMISSION_DAMAGE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_DAMAGE
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_DAMAGE@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_DAMAGE@CvTypes@@YA?BW4MissionTypes@@XZ PROC	; CvTypes::getMISSION_DAMAGE, COMDAT

; 487  : 	return s_eMISSION_DAMAGE;

	mov	eax, DWORD PTR ?s_eMISSION_DAMAGE@@3W4MissionTypes@@A ; s_eMISSION_DAMAGE

; 488  : }

	ret	0
?getMISSION_DAMAGE@CvTypes@@YA?BW4MissionTypes@@XZ ENDP	; CvTypes::getMISSION_DAMAGE
_TEXT	ENDS
PUBLIC	?getMISSION_MULTI_SELECT@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_MULTI_SELECT
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_MULTI_SELECT@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_MULTI_SELECT@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_MULTI_SELECT, COMDAT

; 491  : 	return s_eMISSION_MULTI_SELECT;

	mov	eax, DWORD PTR ?s_eMISSION_MULTI_SELECT@@3W4MissionTypes@@A ; s_eMISSION_MULTI_SELECT

; 492  : }

	ret	0
?getMISSION_MULTI_SELECT@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_MULTI_SELECT
_TEXT	ENDS
PUBLIC	?getMISSION_MULTI_DESELECT@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_MULTI_DESELECT
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_MULTI_DESELECT@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_MULTI_DESELECT@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_MULTI_DESELECT, COMDAT

; 495  : 	return s_eMISSION_MULTI_DESELECT;

	mov	eax, DWORD PTR ?s_eMISSION_MULTI_DESELECT@@3W4MissionTypes@@A ; s_eMISSION_MULTI_DESELECT

; 496  : }

	ret	0
?getMISSION_MULTI_DESELECT@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_MULTI_DESELECT
_TEXT	ENDS
PUBLIC	?getMISSION_WAIT_FOR@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_WAIT_FOR
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_WAIT_FOR@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_WAIT_FOR@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_WAIT_FOR, COMDAT

; 499  : 	return s_eMISSION_WAIT_FOR;

	mov	eax, DWORD PTR ?s_eMISSION_WAIT_FOR@@3W4MissionTypes@@A ; s_eMISSION_WAIT_FOR

; 500  : }

	ret	0
?getMISSION_WAIT_FOR@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_WAIT_FOR
_TEXT	ENDS
PUBLIC	?getMISSION_SPREAD_RELIGION@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_SPREAD_RELIGION
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_SPREAD_RELIGION@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_SPREAD_RELIGION@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_SPREAD_RELIGION, COMDAT

; 503  : 	return s_eMISSION_SPREAD_RELIGION;

	mov	eax, DWORD PTR ?s_eMISSION_SPREAD_RELIGION@@3W4MissionTypes@@A ; s_eMISSION_SPREAD_RELIGION

; 504  : }

	ret	0
?getMISSION_SPREAD_RELIGION@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_SPREAD_RELIGION
_TEXT	ENDS
PUBLIC	?getMISSION_ENHANCE_RELIGION@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_ENHANCE_RELIGION
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_ENHANCE_RELIGION@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_ENHANCE_RELIGION@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_ENHANCE_RELIGION, COMDAT

; 507  : 	return s_eMISSION_ENHANCE_RELIGION;

	mov	eax, DWORD PTR ?s_eMISSION_ENHANCE_RELIGION@@3W4MissionTypes@@A ; s_eMISSION_ENHANCE_RELIGION

; 508  : }

	ret	0
?getMISSION_ENHANCE_RELIGION@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_ENHANCE_RELIGION
_TEXT	ENDS
PUBLIC	?getMISSION_REMOVE_HERESY@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_REMOVE_HERESY
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_REMOVE_HERESY@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_REMOVE_HERESY@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_REMOVE_HERESY, COMDAT

; 511  : 	return s_eMISSION_REMOVE_HERESY;

	mov	eax, DWORD PTR ?s_eMISSION_REMOVE_HERESY@@3W4MissionTypes@@A ; s_eMISSION_REMOVE_HERESY

; 512  : }

	ret	0
?getMISSION_REMOVE_HERESY@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_REMOVE_HERESY
_TEXT	ENDS
PUBLIC	?getMISSION_ESTABLISH_TRADE_ROUTE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_ESTABLISH_TRADE_ROUTE
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_ESTABLISH_TRADE_ROUTE@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_ESTABLISH_TRADE_ROUTE@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_ESTABLISH_TRADE_ROUTE, COMDAT

; 515  : 	return s_eMISSION_ESTABLISH_TRADE_ROUTE;

	mov	eax, DWORD PTR ?s_eMISSION_ESTABLISH_TRADE_ROUTE@@3W4MissionTypes@@A ; s_eMISSION_ESTABLISH_TRADE_ROUTE

; 516  : }

	ret	0
?getMISSION_ESTABLISH_TRADE_ROUTE@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_ESTABLISH_TRADE_ROUTE
_TEXT	ENDS
PUBLIC	?getMISSION_PLUNDER_TRADE_ROUTE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_PLUNDER_TRADE_ROUTE
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_PLUNDER_TRADE_ROUTE@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_PLUNDER_TRADE_ROUTE@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_PLUNDER_TRADE_ROUTE, COMDAT

; 519  : 	return s_eMISSION_PLUNDER_TRADE_ROUTE;

	mov	eax, DWORD PTR ?s_eMISSION_PLUNDER_TRADE_ROUTE@@3W4MissionTypes@@A ; s_eMISSION_PLUNDER_TRADE_ROUTE

; 520  : }

	ret	0
?getMISSION_PLUNDER_TRADE_ROUTE@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_PLUNDER_TRADE_ROUTE
_TEXT	ENDS
PUBLIC	?getMISSION_GREAT_WORK@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_GREAT_WORK
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_GREAT_WORK@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_GREAT_WORK@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_GREAT_WORK, COMDAT

; 523  : 	return s_eMISSION_GREAT_WORK;

	mov	eax, DWORD PTR ?s_eMISSION_GREAT_WORK@@3W4MissionTypes@@A ; s_eMISSION_GREAT_WORK

; 524  : }

	ret	0
?getMISSION_GREAT_WORK@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_GREAT_WORK
_TEXT	ENDS
PUBLIC	?getMISSION_CHANGE_TRADE_UNIT_HOME_CITY@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_CHANGE_TRADE_UNIT_HOME_CITY
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_CHANGE_TRADE_UNIT_HOME_CITY@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_CHANGE_TRADE_UNIT_HOME_CITY@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_CHANGE_TRADE_UNIT_HOME_CITY, COMDAT

; 527  : 	return s_eMISSION_CHANGE_TRADE_UNIT_HOME_CITY;

	mov	eax, DWORD PTR ?s_eMISSION_CHANGE_TRADE_UNIT_HOME_CITY@@3W4MissionTypes@@A ; s_eMISSION_CHANGE_TRADE_UNIT_HOME_CITY

; 528  : }

	ret	0
?getMISSION_CHANGE_TRADE_UNIT_HOME_CITY@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_CHANGE_TRADE_UNIT_HOME_CITY
_TEXT	ENDS
PUBLIC	?getMISSION_CHANGE_ADMIRAL_PORT@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_CHANGE_ADMIRAL_PORT
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_CHANGE_ADMIRAL_PORT@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_CHANGE_ADMIRAL_PORT@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_CHANGE_ADMIRAL_PORT, COMDAT

; 531  : 	return s_eMISSION_CHANGE_ADMIRAL_PORT;

	mov	eax, DWORD PTR ?s_eMISSION_CHANGE_ADMIRAL_PORT@@3W4MissionTypes@@A ; s_eMISSION_CHANGE_ADMIRAL_PORT

; 532  : }

	ret	0
?getMISSION_CHANGE_ADMIRAL_PORT@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_CHANGE_ADMIRAL_PORT
_TEXT	ENDS
PUBLIC	?getMISSION_SELL_EXOTIC_GOODS@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_SELL_EXOTIC_GOODS
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_SELL_EXOTIC_GOODS@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_SELL_EXOTIC_GOODS@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_SELL_EXOTIC_GOODS, COMDAT

; 535  : 	return s_eMISSION_SELL_EXOTIC_GOODS;

	mov	eax, DWORD PTR ?s_eMISSION_SELL_EXOTIC_GOODS@@3W4MissionTypes@@A ; s_eMISSION_SELL_EXOTIC_GOODS

; 536  : }

	ret	0
?getMISSION_SELL_EXOTIC_GOODS@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_SELL_EXOTIC_GOODS
_TEXT	ENDS
PUBLIC	?getNUM_MISSION_TYPES@CvTypes@@YA?BIXZ		; CvTypes::getNUM_MISSION_TYPES
; Function compile flags: /Ogtpy
;	COMDAT ?getNUM_MISSION_TYPES@CvTypes@@YA?BIXZ
_TEXT	SEGMENT
?getNUM_MISSION_TYPES@CvTypes@@YA?BIXZ PROC		; CvTypes::getNUM_MISSION_TYPES, COMDAT

; 539  : 	return s_uiNUM_MISSION_TYPES;

	mov	eax, DWORD PTR ?s_uiNUM_MISSION_TYPES@@3IA ; s_uiNUM_MISSION_TYPES

; 540  : }

	ret	0
?getNUM_MISSION_TYPES@CvTypes@@YA?BIXZ ENDP		; CvTypes::getNUM_MISSION_TYPES
_TEXT	ENDS
PUBLIC	?getMISSION_GIVE_POLICIES@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_GIVE_POLICIES
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_GIVE_POLICIES@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_GIVE_POLICIES@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_GIVE_POLICIES, COMDAT

; 543  : 	return s_eMISSION_GIVE_POLICIES;

	mov	eax, DWORD PTR ?s_eMISSION_GIVE_POLICIES@@3W4MissionTypes@@A ; s_eMISSION_GIVE_POLICIES

; 544  : }

	ret	0
?getMISSION_GIVE_POLICIES@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_GIVE_POLICIES
_TEXT	ENDS
PUBLIC	?getMISSION_ONE_SHOT_TOURISM@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_ONE_SHOT_TOURISM
; Function compile flags: /Ogtpy
;	COMDAT ?getMISSION_ONE_SHOT_TOURISM@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_ONE_SHOT_TOURISM@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_ONE_SHOT_TOURISM, COMDAT

; 547  : 	return s_eMISSION_ONE_SHOT_TOURISM;

	mov	eax, DWORD PTR ?s_eMISSION_ONE_SHOT_TOURISM@@3W4MissionTypes@@A ; s_eMISSION_ONE_SHOT_TOURISM

; 548  : }

	ret	0
?getMISSION_ONE_SHOT_TOURISM@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_ONE_SHOT_TOURISM
_TEXT	ENDS
PUBLIC	??0?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@QAE@XZ ; stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xhash
;	COMDAT ??0?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@QAE@XZ
_TEXT	SEGMENT
??0?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@QAE@XZ PROC ; stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx

; 159  : 	_Hash_compare()

	mov	eax, ecx

; 160  : 		{	// construct with default hasher and equality comparator
; 161  : 		}

	ret	0
??0?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@QAE@XZ ENDP ; stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >, COMDAT
; _this$ = ecx

; 119  : 	allocator() _THROW0()

	mov	eax, ecx

; 120  : 		{	// construct default allocator (do nothing)
; 121  : 		}

	ret	0
??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >
_TEXT	ENDS
PUBLIC	??8?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QBE_NABV012@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Const_iterator<0>::operator==
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ??8?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QBE_NABV012@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Const_iterator<0>::operator==, COMDAT
; _this$ = ecx

; 291  : 
; 292  :  #if _HAS_ITERATOR_DEBUGGING
; 293  : 			_Compat(_Right);
; 294  :  #else
; 295  : 			_SCL_SECURE_TRAITS_VALIDATE(this->_Has_container() && this->_Same_container(_Right));
; 296  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 297  : 
; 298  : 			return (_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	cl
	mov	al, cl

; 299  : 			}

	ret	4
??8?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QBE_NABV012@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Const_iterator<0>::operator==
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >, COMDAT
; _this$ = ecx

; 119  : 	allocator() _THROW0()

	mov	eax, ecx

; 120  : 		{	// construct default allocator (do nothing)
; 121  : 		}

	ret	0
??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >
_TEXT	ENDS
PUBLIC	??8?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QBE_NABV012@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Const_iterator<0>::operator==
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ??8?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QBE_NABV012@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Const_iterator<0>::operator==, COMDAT
; _this$ = ecx

; 291  : 
; 292  :  #if _HAS_ITERATOR_DEBUGGING
; 293  : 			_Compat(_Right);
; 294  :  #else
; 295  : 			_SCL_SECURE_TRAITS_VALIDATE(this->_Has_container() && this->_Same_container(_Right));
; 296  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 297  : 
; 298  : 			return (_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	cl
	mov	al, cl

; 299  : 			}

	ret	4
??8?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QBE_NABV012@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Const_iterator<0>::operator==
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >, COMDAT
; _this$ = ecx

; 119  : 	allocator() _THROW0()

	mov	eax, ecx

; 120  : 		{	// construct default allocator (do nothing)
; 121  : 		}

	ret	0
??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >
_TEXT	ENDS
PUBLIC	??8?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QBE_NABV012@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Const_iterator<0>::operator==
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ??8?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QBE_NABV012@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Const_iterator<0>::operator==, COMDAT
; _this$ = ecx

; 291  : 
; 292  :  #if _HAS_ITERATOR_DEBUGGING
; 293  : 			_Compat(_Right);
; 294  :  #else
; 295  : 			_SCL_SECURE_TRAITS_VALIDATE(this->_Has_container() && this->_Same_container(_Right));
; 296  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 297  : 
; 298  : 			return (_Ptr == _Right._Ptr);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	cl
	mov	al, cl

; 299  : 			}

	ret	4
??8?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QBE_NABV012@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Const_iterator<0>::operator==
_TEXT	ENDS
PUBLIC	?_Get_iter_from_vec@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QBE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@ABV345@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Get_iter_from_vec
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xhash
;	COMDAT ?_Get_iter_from_vec@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QBE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@ABV345@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Iter$ = 12						; size = 4
?_Get_iter_from_vec@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QBE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@ABV345@@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Get_iter_from_vec, COMDAT
; _this$ = ecx

; 321  : 	return (_Iter);

	mov	eax, DWORD PTR __Iter$[esp-4]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 322  : 	}

	ret	8
?_Get_iter_from_vec@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QBE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@ABV345@@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Get_iter_from_vec
_TEXT	ENDS
PUBLIC	?bucket_count@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEIXZ ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::bucket_count
; Function compile flags: /Ogtpy
;	COMDAT ?bucket_count@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEIXZ
_TEXT	SEGMENT
?bucket_count@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEIXZ PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::bucket_count, COMDAT
; _this$ = ecx

; 451  : 		return (_Maxidx);

	mov	eax, DWORD PTR [ecx+36]

; 452  : 		}

	ret	0
?bucket_count@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEIXZ ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::bucket_count
_TEXT	ENDS
PUBLIC	?max_load_factor@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEMXZ ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::max_load_factor
EXTRN	__fltused:DWORD
; Function compile flags: /Ogtpy
;	COMDAT ?max_load_factor@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEMXZ
_TEXT	SEGMENT
?max_load_factor@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEMXZ PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::max_load_factor, COMDAT
; _this$ = ecx

; 513  : 		return (_Max_bucket_size);

	fld	DWORD PTR [ecx+40]

; 514  : 		}

	ret	0
?max_load_factor@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEMXZ ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::max_load_factor
_TEXT	ENDS
PUBLIC	??0?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@@Z ; std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0>::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\unordered_map
;	COMDAT ??0?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@@Z
_TEXT	SEGMENT
__Traits$ = 8						; size = 4
??0?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@@Z PROC ; std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0>::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0>, COMDAT
; _this$ = ecx

; 45   : 		{	// construct with specified comparator

	mov	eax, ecx
	mov	ecx, DWORD PTR __Traits$[esp-4]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR [eax], dx

; 46   : 		}

	ret	4
??0?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@@Z ENDP ; std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0>::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0>
_TEXT	ENDS
PUBLIC	?_Kfn@?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@SAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@3@@Z ; std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0>::_Kfn
; Function compile flags: /Ogtpy
;	COMDAT ?_Kfn@?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@SAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@3@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@SAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@3@@Z PROC ; std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0>::_Kfn, COMDAT

; 71   : 		return (_Val.first);

	mov	eax, DWORD PTR __Val$[esp-4]

; 72   : 		}

	ret	0
?_Kfn@?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@SAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@3@@Z ENDP ; std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0>::_Kfn
_TEXT	ENDS
PUBLIC	?_Nextnode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Nextnode
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ?_Nextnode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Nextnode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Nextnode, COMDAT

; 115  : 		return ((_Nodepref)(*_Pnode)._Next);

	mov	eax, DWORD PTR __Pnode$[esp-4]

; 116  : 		}

	ret	0
?_Nextnode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Nextnode
_TEXT	ENDS
PUBLIC	??1?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_empty<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::~_Container_base_aux_alloc_empty<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??1?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@@std@@IAE@XZ
_TEXT	SEGMENT
??1?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_empty<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::~_Container_base_aux_alloc_empty<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >, COMDAT
; _this$ = ecx

; 627  : 	~_Container_base_aux_alloc_empty() { }

	ret	0
??1?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::~_Container_base_aux_alloc_empty<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >
_TEXT	ENDS
PUBLIC	??A?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAEAAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@1@I@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::operator[]
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??A?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAEAAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@1@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAEAAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@1@I@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::operator[], COMDAT
; _this$ = ecx

; 775  : 
; 776  :  #if _HAS_ITERATOR_DEBUGGING
; 777  : 		if (size() <= _Pos)
; 778  : 			{
; 779  : 			_DEBUG_ERROR("vector subscript out of range");
; 780  : 			_SCL_SECURE_OUT_OF_RANGE;
; 781  : 			}
; 782  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 783  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 784  : 
; 785  : 		return (*(_Myfirst + _Pos));

	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR __Pos$[esp-4]
	lea	eax, DWORD PTR [eax+ecx*4]

; 786  : 		}

	ret	4
??A?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAEAAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@1@I@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::operator[]
_TEXT	ENDS
PUBLIC	??1?$_Container_base_aux_alloc_empty@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_empty<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::~_Container_base_aux_alloc_empty<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??1?$_Container_base_aux_alloc_empty@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@@std@@IAE@XZ
_TEXT	SEGMENT
??1?$_Container_base_aux_alloc_empty@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_empty<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::~_Container_base_aux_alloc_empty<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >, COMDAT
; _this$ = ecx

; 627  : 	~_Container_base_aux_alloc_empty() { }

	ret	0
??1?$_Container_base_aux_alloc_empty@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::~_Container_base_aux_alloc_empty<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
_TEXT	ENDS
PUBLIC	??0?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@_N@std@@QAE@ABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@1@AB_N@Z ; std::pair<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,bool>::pair<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,bool>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\utility
;	COMDAT ??0?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@_N@std@@QAE@ABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@1@AB_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@_N@std@@QAE@ABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@1@AB_N@Z PROC ; std::pair<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,bool>::pair<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,bool>, COMDAT
; _this$ = ecx

; 50   : 		{	// construct from specified values

	mov	eax, ecx
	mov	ecx, DWORD PTR __Val1$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Val2$[esp-4]
	mov	DWORD PTR [eax], edx
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax+4], dl

; 51   : 		}

	ret	8
??0?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@_N@std@@QAE@ABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@1@AB_N@Z ENDP ; std::pair<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,bool>::pair<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,bool>
_TEXT	ENDS
PUBLIC	?_Get_iter_from_vec@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QBE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@ABV345@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::_Get_iter_from_vec
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xhash
;	COMDAT ?_Get_iter_from_vec@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QBE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@ABV345@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Iter$ = 12						; size = 4
?_Get_iter_from_vec@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QBE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@ABV345@@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::_Get_iter_from_vec, COMDAT
; _this$ = ecx

; 321  : 	return (_Iter);

	mov	eax, DWORD PTR __Iter$[esp-4]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 322  : 	}

	ret	8
?_Get_iter_from_vec@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QBE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@ABV345@@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::_Get_iter_from_vec
_TEXT	ENDS
PUBLIC	?bucket_count@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEIXZ ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::bucket_count
; Function compile flags: /Ogtpy
;	COMDAT ?bucket_count@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEIXZ
_TEXT	SEGMENT
?bucket_count@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEIXZ PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::bucket_count, COMDAT
; _this$ = ecx

; 451  : 		return (_Maxidx);

	mov	eax, DWORD PTR [ecx+36]

; 452  : 		}

	ret	0
?bucket_count@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEIXZ ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::bucket_count
_TEXT	ENDS
PUBLIC	?max_load_factor@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEMXZ ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::max_load_factor
; Function compile flags: /Ogtpy
;	COMDAT ?max_load_factor@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEMXZ
_TEXT	SEGMENT
?max_load_factor@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEMXZ PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::max_load_factor, COMDAT
; _this$ = ecx

; 513  : 		return (_Max_bucket_size);

	fld	DWORD PTR [ecx+40]

; 514  : 		}

	ret	0
?max_load_factor@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEMXZ ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::max_load_factor
_TEXT	ENDS
PUBLIC	??0?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@@Z ; std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0>::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\unordered_map
;	COMDAT ??0?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@@Z
_TEXT	SEGMENT
__Traits$ = 8						; size = 4
??0?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@@Z PROC ; std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0>::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0>, COMDAT
; _this$ = ecx

; 45   : 		{	// construct with specified comparator

	mov	eax, ecx
	mov	ecx, DWORD PTR __Traits$[esp-4]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR [eax], dx

; 46   : 		}

	ret	4
??0?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@@Z ENDP ; std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0>::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0>
_TEXT	ENDS
PUBLIC	?_Kfn@?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@SAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@3@@Z ; std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0>::_Kfn
; Function compile flags: /Ogtpy
;	COMDAT ?_Kfn@?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@SAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@3@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@SAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@3@@Z PROC ; std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0>::_Kfn, COMDAT

; 71   : 		return (_Val.first);

	mov	eax, DWORD PTR __Val$[esp-4]

; 72   : 		}

	ret	0
?_Kfn@?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@SAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@3@@Z ENDP ; std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0>::_Kfn
_TEXT	ENDS
PUBLIC	?_Nextnode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Nextnode
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ?_Nextnode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Nextnode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Nextnode, COMDAT

; 115  : 		return ((_Nodepref)(*_Pnode)._Next);

	mov	eax, DWORD PTR __Pnode$[esp-4]

; 116  : 		}

	ret	0
?_Nextnode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Nextnode
_TEXT	ENDS
PUBLIC	??1?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_empty<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::~_Container_base_aux_alloc_empty<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??1?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@@std@@IAE@XZ
_TEXT	SEGMENT
??1?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_empty<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::~_Container_base_aux_alloc_empty<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >, COMDAT
; _this$ = ecx

; 627  : 	~_Container_base_aux_alloc_empty() { }

	ret	0
??1?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::~_Container_base_aux_alloc_empty<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >
_TEXT	ENDS
PUBLIC	??A?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAEAAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@1@I@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::operator[]
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??A?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAEAAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@1@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAEAAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@1@I@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::operator[], COMDAT
; _this$ = ecx

; 775  : 
; 776  :  #if _HAS_ITERATOR_DEBUGGING
; 777  : 		if (size() <= _Pos)
; 778  : 			{
; 779  : 			_DEBUG_ERROR("vector subscript out of range");
; 780  : 			_SCL_SECURE_OUT_OF_RANGE;
; 781  : 			}
; 782  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 783  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 784  : 
; 785  : 		return (*(_Myfirst + _Pos));

	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR __Pos$[esp-4]
	lea	eax, DWORD PTR [eax+ecx*4]

; 786  : 		}

	ret	4
??A?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAEAAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@1@I@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::operator[]
_TEXT	ENDS
PUBLIC	??1?$_Container_base_aux_alloc_empty@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_empty<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::~_Container_base_aux_alloc_empty<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??1?$_Container_base_aux_alloc_empty@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@@std@@IAE@XZ
_TEXT	SEGMENT
??1?$_Container_base_aux_alloc_empty@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_empty<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::~_Container_base_aux_alloc_empty<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >, COMDAT
; _this$ = ecx

; 627  : 	~_Container_base_aux_alloc_empty() { }

	ret	0
??1?$_Container_base_aux_alloc_empty@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::~_Container_base_aux_alloc_empty<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
_TEXT	ENDS
PUBLIC	??0?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@_N@std@@QAE@ABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@1@AB_N@Z ; std::pair<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,bool>::pair<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,bool>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\utility
;	COMDAT ??0?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@_N@std@@QAE@ABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@1@AB_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@_N@std@@QAE@ABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@1@AB_N@Z PROC ; std::pair<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,bool>::pair<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,bool>, COMDAT
; _this$ = ecx

; 50   : 		{	// construct from specified values

	mov	eax, ecx
	mov	ecx, DWORD PTR __Val1$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Val2$[esp-4]
	mov	DWORD PTR [eax], edx
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax+4], dl

; 51   : 		}

	ret	8
??0?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@_N@std@@QAE@ABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@1@AB_N@Z ENDP ; std::pair<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,bool>::pair<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,bool>
_TEXT	ENDS
PUBLIC	?_Get_iter_from_vec@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QBE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@ABV345@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Get_iter_from_vec
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xhash
;	COMDAT ?_Get_iter_from_vec@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QBE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@ABV345@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Iter$ = 12						; size = 4
?_Get_iter_from_vec@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QBE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@ABV345@@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Get_iter_from_vec, COMDAT
; _this$ = ecx

; 321  : 	return (_Iter);

	mov	eax, DWORD PTR __Iter$[esp-4]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 322  : 	}

	ret	8
?_Get_iter_from_vec@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QBE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@ABV345@@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Get_iter_from_vec
_TEXT	ENDS
PUBLIC	?bucket_count@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEIXZ ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::bucket_count
; Function compile flags: /Ogtpy
;	COMDAT ?bucket_count@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEIXZ
_TEXT	SEGMENT
?bucket_count@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEIXZ PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::bucket_count, COMDAT
; _this$ = ecx

; 451  : 		return (_Maxidx);

	mov	eax, DWORD PTR [ecx+36]

; 452  : 		}

	ret	0
?bucket_count@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEIXZ ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::bucket_count
_TEXT	ENDS
PUBLIC	?max_load_factor@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEMXZ ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::max_load_factor
; Function compile flags: /Ogtpy
;	COMDAT ?max_load_factor@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEMXZ
_TEXT	SEGMENT
?max_load_factor@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEMXZ PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::max_load_factor, COMDAT
; _this$ = ecx

; 513  : 		return (_Max_bucket_size);

	fld	DWORD PTR [ecx+40]

; 514  : 		}

	ret	0
?max_load_factor@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEMXZ ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::max_load_factor
_TEXT	ENDS
PUBLIC	??0?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@@Z ; std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0>::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\unordered_map
;	COMDAT ??0?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@@Z
_TEXT	SEGMENT
__Traits$ = 8						; size = 4
??0?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@@Z PROC ; std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0>::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0>, COMDAT
; _this$ = ecx

; 45   : 		{	// construct with specified comparator

	mov	eax, ecx
	mov	ecx, DWORD PTR __Traits$[esp-4]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR [eax], dx

; 46   : 		}

	ret	4
??0?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@@Z ENDP ; std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0>::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0>
_TEXT	ENDS
PUBLIC	?_Kfn@?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@SAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@3@@Z ; std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0>::_Kfn
; Function compile flags: /Ogtpy
;	COMDAT ?_Kfn@?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@SAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@3@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@SAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@3@@Z PROC ; std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0>::_Kfn, COMDAT

; 71   : 		return (_Val.first);

	mov	eax, DWORD PTR __Val$[esp-4]

; 72   : 		}

	ret	0
?_Kfn@?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@SAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@3@@Z ENDP ; std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0>::_Kfn
_TEXT	ENDS
PUBLIC	?_Nextnode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Nextnode
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ?_Nextnode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Nextnode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Nextnode, COMDAT

; 115  : 		return ((_Nodepref)(*_Pnode)._Next);

	mov	eax, DWORD PTR __Pnode$[esp-4]

; 116  : 		}

	ret	0
?_Nextnode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Nextnode
_TEXT	ENDS
PUBLIC	??1?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_empty<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::~_Container_base_aux_alloc_empty<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??1?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@@std@@IAE@XZ
_TEXT	SEGMENT
??1?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_empty<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::~_Container_base_aux_alloc_empty<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >, COMDAT
; _this$ = ecx

; 627  : 	~_Container_base_aux_alloc_empty() { }

	ret	0
??1?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::~_Container_base_aux_alloc_empty<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >
_TEXT	ENDS
PUBLIC	??A?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAEAAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@1@I@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::operator[]
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??A?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAEAAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@1@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAEAAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@1@I@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::operator[], COMDAT
; _this$ = ecx

; 775  : 
; 776  :  #if _HAS_ITERATOR_DEBUGGING
; 777  : 		if (size() <= _Pos)
; 778  : 			{
; 779  : 			_DEBUG_ERROR("vector subscript out of range");
; 780  : 			_SCL_SECURE_OUT_OF_RANGE;
; 781  : 			}
; 782  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 783  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 784  : 
; 785  : 		return (*(_Myfirst + _Pos));

	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR __Pos$[esp-4]
	lea	eax, DWORD PTR [eax+ecx*4]

; 786  : 		}

	ret	4
??A?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAEAAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@1@I@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::operator[]
_TEXT	ENDS
PUBLIC	??1?$_Container_base_aux_alloc_empty@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_empty<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::~_Container_base_aux_alloc_empty<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??1?$_Container_base_aux_alloc_empty@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@@std@@IAE@XZ
_TEXT	SEGMENT
??1?$_Container_base_aux_alloc_empty@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_empty<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::~_Container_base_aux_alloc_empty<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >, COMDAT
; _this$ = ecx

; 627  : 	~_Container_base_aux_alloc_empty() { }

	ret	0
??1?$_Container_base_aux_alloc_empty@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::~_Container_base_aux_alloc_empty<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
_TEXT	ENDS
PUBLIC	??0?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@QAE@ABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@1@AB_N@Z ; std::pair<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,bool>::pair<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,bool>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\utility
;	COMDAT ??0?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@QAE@ABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@1@AB_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@QAE@ABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@1@AB_N@Z PROC ; std::pair<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,bool>::pair<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,bool>, COMDAT
; _this$ = ecx

; 50   : 		{	// construct from specified values

	mov	eax, ecx
	mov	ecx, DWORD PTR __Val1$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Val2$[esp-4]
	mov	DWORD PTR [eax], edx
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax+4], dl

; 51   : 		}

	ret	8
??0?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@QAE@ABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@1@AB_N@Z ENDP ; std::pair<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,bool>::pair<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,bool>
_TEXT	ENDS
PUBLIC	??R?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z ; std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator()
EXTRN	__imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z:PROC
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\functional
;	COMDAT ??R?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z PROC ; std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator(), COMDAT
; _this$ = ecx

; 110  : 		return (_Left == _Right);

	mov	eax, DWORD PTR __Right$[esp-4]
	mov	ecx, DWORD PTR __Left$[esp-4]
	push	eax
	push	ecx
	call	DWORD PTR __imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
	add	esp, 8

; 111  : 		}

	ret	8
??R?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z ENDP ; std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator()
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >, COMDAT
; _this$ = ecx

; 123  : 	allocator(const allocator<_Ty>&) _THROW0()

	mov	eax, ecx

; 124  : 		{	// construct by copying (do nothing)
; 125  : 		}

	ret	4
??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >
_TEXT	ENDS
PUBLIC	?_Prevnode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Prevnode
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ?_Prevnode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Prevnode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Prevnode, COMDAT

; 120  : 		return ((_Nodepref)(*_Pnode)._Prev);

	mov	eax, DWORD PTR __Pnode$[esp-4]
	add	eax, 4

; 121  : 		}

	ret	0
?_Prevnode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Prevnode
_TEXT	ENDS
PUBLIC	?_Myval@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@KAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Myval
; Function compile flags: /Ogtpy
;	COMDAT ?_Myval@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@KAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@KAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Myval, COMDAT

; 125  : 		return ((_Vref)(*_Pnode)._Myval);

	mov	eax, DWORD PTR __Pnode$[esp-4]
	add	eax, 8

; 126  : 		}

	ret	0
?_Myval@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@KAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Myval
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@I@Z ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node>::deallocate
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?deallocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@I@Z PROC ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 140  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 141  : 		}

	ret	8
?deallocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@I@Z ENDP ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	??0?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >, COMDAT
; _this$ = ecx

; 123  : 	allocator(const allocator<_Ty>&) _THROW0()

	mov	eax, ecx

; 124  : 		{	// construct by copying (do nothing)
; 125  : 		}

	ret	4
??0?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@I@Z ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >::deallocate
; Function compile flags: /Ogtpy
;	COMDAT ?deallocate@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@I@Z PROC ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >::deallocate, COMDAT
; _this$ = ecx

; 140  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 141  : 		}

	ret	8
?deallocate@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@I@Z ENDP ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >::deallocate
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QBEIXZ ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >::max_size
; Function compile flags: /Ogtpy
;	COMDAT ?max_size@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QBEIXZ PROC ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >::max_size, COMDAT
; _this$ = ecx

; 165  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 166  : 		return (0 < _Count ? _Count : 1);

	mov	eax, 1073741823				; 3fffffffH

; 167  : 		}

	ret	0
?max_size@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >::max_size
_TEXT	ENDS
PUBLIC	??0?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Const_iterator<0>::_Const_iterator<0>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ??0?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Const_iterator<0>::_Const_iterator<0>, COMDAT
; _this$ = ecx

; 163  : 			{	// construct with null node pointer

	mov	eax, ecx
	mov	DWORD PTR [eax], 0

; 164  : 			}

	ret	0
??0?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Const_iterator<0>::_Const_iterator<0>
_TEXT	ENDS
PUBLIC	??0?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Const_iterator<0>::_Const_iterator<0>
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Const_iterator<0>::_Const_iterator<0>, COMDAT
; _this$ = ecx

; 184  : 			{	// construct with node pointer _Pnode

	mov	eax, ecx
	mov	ecx, DWORD PTR __Pnode$[esp-4]
	mov	DWORD PTR [eax], ecx

; 185  : 			}

	ret	4
??0?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Const_iterator<0>::_Const_iterator<0>
_TEXT	ENDS
PUBLIC	??F?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEAAV012@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Const_iterator<0>::operator--
; Function compile flags: /Ogtpy
;	COMDAT ??F?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??F?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEAAV012@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Const_iterator<0>::operator--, COMDAT
; _this$ = ecx

; 262  : 			{	// predecrement

	mov	eax, ecx

; 263  : 
; 264  :  #if _HAS_ITERATOR_DEBUGGING
; 265  : 			if (this->_Mycont == 0
; 266  : 				|| _Ptr == 0
; 267  : 				|| (_Ptr = _Prevnode(_Ptr))
; 268  : 					== ((_Myt *)this->_Mycont)->_Myhead)
; 269  : 				{
; 270  : 				_DEBUG_ERROR("list iterator not decrementable");
; 271  : 				_SCL_SECURE_TRAITS_OUT_OF_RANGE;
; 272  : 				}
; 273  :  #else /* _HAS_ITERATOR_DEBUGGING */
; 274  : 			_SCL_SECURE_TRAITS_VALIDATE(this->_Has_container());
; 275  : 			_Ptr = _Prevnode(_Ptr);

	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx

; 276  : 			_SCL_SECURE_TRAITS_VALIDATE_RANGE(_Ptr != ((_Myt *)(this->_Getmycont()))->_Myhead);
; 277  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 278  : 
; 279  : 			return (*this);
; 280  : 			}

	ret	0
??F?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEAAV012@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Const_iterator<0>::operator--
_TEXT	ENDS
PUBLIC	?_Mynode@?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QBEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@3@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Const_iterator<0>::_Mynode
; Function compile flags: /Ogtpy
;	COMDAT ?_Mynode@?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QBEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@3@XZ
_TEXT	SEGMENT
?_Mynode@?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QBEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@3@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Const_iterator<0>::_Mynode, COMDAT
; _this$ = ecx

; 308  : 			return (_Ptr);

	mov	eax, DWORD PTR [ecx]

; 309  : 			}

	ret	0
?_Mynode@?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QBEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@3@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Const_iterator<0>::_Mynode
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >, COMDAT
; _this$ = ecx

; 123  : 	allocator(const allocator<_Ty>&) _THROW0()

	mov	eax, ecx

; 124  : 		{	// construct by copying (do nothing)
; 125  : 		}

	ret	4
??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >
_TEXT	ENDS
PUBLIC	?_Prevnode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Prevnode
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ?_Prevnode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Prevnode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Prevnode, COMDAT

; 120  : 		return ((_Nodepref)(*_Pnode)._Prev);

	mov	eax, DWORD PTR __Pnode$[esp-4]
	add	eax, 4

; 121  : 		}

	ret	0
?_Prevnode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Prevnode
_TEXT	ENDS
PUBLIC	?_Myval@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@KAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Myval
; Function compile flags: /Ogtpy
;	COMDAT ?_Myval@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@KAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@KAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Myval, COMDAT

; 125  : 		return ((_Vref)(*_Pnode)._Myval);

	mov	eax, DWORD PTR __Pnode$[esp-4]
	add	eax, 8

; 126  : 		}

	ret	0
?_Myval@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@KAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Myval
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@I@Z ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node>::deallocate
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?deallocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@I@Z PROC ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 140  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 141  : 		}

	ret	8
?deallocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@I@Z ENDP ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	??0?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >, COMDAT
; _this$ = ecx

; 123  : 	allocator(const allocator<_Ty>&) _THROW0()

	mov	eax, ecx

; 124  : 		{	// construct by copying (do nothing)
; 125  : 		}

	ret	4
??0?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@I@Z ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >::deallocate
; Function compile flags: /Ogtpy
;	COMDAT ?deallocate@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@I@Z PROC ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >::deallocate, COMDAT
; _this$ = ecx

; 140  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 141  : 		}

	ret	8
?deallocate@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@I@Z ENDP ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >::deallocate
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QBEIXZ ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >::max_size
; Function compile flags: /Ogtpy
;	COMDAT ?max_size@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QBEIXZ PROC ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >::max_size, COMDAT
; _this$ = ecx

; 165  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 166  : 		return (0 < _Count ? _Count : 1);

	mov	eax, 1073741823				; 3fffffffH

; 167  : 		}

	ret	0
?max_size@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >::max_size
_TEXT	ENDS
PUBLIC	??0?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Const_iterator<0>::_Const_iterator<0>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ??0?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Const_iterator<0>::_Const_iterator<0>, COMDAT
; _this$ = ecx

; 163  : 			{	// construct with null node pointer

	mov	eax, ecx
	mov	DWORD PTR [eax], 0

; 164  : 			}

	ret	0
??0?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Const_iterator<0>::_Const_iterator<0>
_TEXT	ENDS
PUBLIC	??0?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Const_iterator<0>::_Const_iterator<0>
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Const_iterator<0>::_Const_iterator<0>, COMDAT
; _this$ = ecx

; 184  : 			{	// construct with node pointer _Pnode

	mov	eax, ecx
	mov	ecx, DWORD PTR __Pnode$[esp-4]
	mov	DWORD PTR [eax], ecx

; 185  : 			}

	ret	4
??0?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Const_iterator<0>::_Const_iterator<0>
_TEXT	ENDS
PUBLIC	??F?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEAAV012@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Const_iterator<0>::operator--
; Function compile flags: /Ogtpy
;	COMDAT ??F?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??F?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEAAV012@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Const_iterator<0>::operator--, COMDAT
; _this$ = ecx

; 262  : 			{	// predecrement

	mov	eax, ecx

; 263  : 
; 264  :  #if _HAS_ITERATOR_DEBUGGING
; 265  : 			if (this->_Mycont == 0
; 266  : 				|| _Ptr == 0
; 267  : 				|| (_Ptr = _Prevnode(_Ptr))
; 268  : 					== ((_Myt *)this->_Mycont)->_Myhead)
; 269  : 				{
; 270  : 				_DEBUG_ERROR("list iterator not decrementable");
; 271  : 				_SCL_SECURE_TRAITS_OUT_OF_RANGE;
; 272  : 				}
; 273  :  #else /* _HAS_ITERATOR_DEBUGGING */
; 274  : 			_SCL_SECURE_TRAITS_VALIDATE(this->_Has_container());
; 275  : 			_Ptr = _Prevnode(_Ptr);

	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx

; 276  : 			_SCL_SECURE_TRAITS_VALIDATE_RANGE(_Ptr != ((_Myt *)(this->_Getmycont()))->_Myhead);
; 277  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 278  : 
; 279  : 			return (*this);
; 280  : 			}

	ret	0
??F?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEAAV012@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Const_iterator<0>::operator--
_TEXT	ENDS
PUBLIC	?_Mynode@?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QBEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@3@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Const_iterator<0>::_Mynode
; Function compile flags: /Ogtpy
;	COMDAT ?_Mynode@?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QBEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@3@XZ
_TEXT	SEGMENT
?_Mynode@?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QBEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@3@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Const_iterator<0>::_Mynode, COMDAT
; _this$ = ecx

; 308  : 			return (_Ptr);

	mov	eax, DWORD PTR [ecx]

; 309  : 			}

	ret	0
?_Mynode@?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QBEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@3@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Const_iterator<0>::_Mynode
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >, COMDAT
; _this$ = ecx

; 123  : 	allocator(const allocator<_Ty>&) _THROW0()

	mov	eax, ecx

; 124  : 		{	// construct by copying (do nothing)
; 125  : 		}

	ret	4
??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >
_TEXT	ENDS
PUBLIC	?_Prevnode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Prevnode
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ?_Prevnode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Prevnode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Prevnode, COMDAT

; 120  : 		return ((_Nodepref)(*_Pnode)._Prev);

	mov	eax, DWORD PTR __Pnode$[esp-4]
	add	eax, 4

; 121  : 		}

	ret	0
?_Prevnode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Prevnode
_TEXT	ENDS
PUBLIC	?_Myval@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@KAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Myval
; Function compile flags: /Ogtpy
;	COMDAT ?_Myval@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@KAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@KAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Myval, COMDAT

; 125  : 		return ((_Vref)(*_Pnode)._Myval);

	mov	eax, DWORD PTR __Pnode$[esp-4]
	add	eax, 8

; 126  : 		}

	ret	0
?_Myval@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@KAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Myval
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@I@Z ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node>::deallocate
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?deallocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@I@Z PROC ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 140  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 141  : 		}

	ret	8
?deallocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@I@Z ENDP ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	??0?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >, COMDAT
; _this$ = ecx

; 123  : 	allocator(const allocator<_Ty>&) _THROW0()

	mov	eax, ecx

; 124  : 		{	// construct by copying (do nothing)
; 125  : 		}

	ret	4
??0?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@I@Z ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >::deallocate
; Function compile flags: /Ogtpy
;	COMDAT ?deallocate@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@I@Z PROC ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >::deallocate, COMDAT
; _this$ = ecx

; 140  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 141  : 		}

	ret	8
?deallocate@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@I@Z ENDP ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >::deallocate
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QBEIXZ ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >::max_size
; Function compile flags: /Ogtpy
;	COMDAT ?max_size@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QBEIXZ PROC ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >::max_size, COMDAT
; _this$ = ecx

; 165  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 166  : 		return (0 < _Count ? _Count : 1);

	mov	eax, 1073741823				; 3fffffffH

; 167  : 		}

	ret	0
?max_size@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >::max_size
_TEXT	ENDS
PUBLIC	??0?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Const_iterator<0>::_Const_iterator<0>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ??0?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Const_iterator<0>::_Const_iterator<0>, COMDAT
; _this$ = ecx

; 163  : 			{	// construct with null node pointer

	mov	eax, ecx
	mov	DWORD PTR [eax], 0

; 164  : 			}

	ret	0
??0?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Const_iterator<0>::_Const_iterator<0>
_TEXT	ENDS
PUBLIC	??0?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Const_iterator<0>::_Const_iterator<0>
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Const_iterator<0>::_Const_iterator<0>, COMDAT
; _this$ = ecx

; 184  : 			{	// construct with node pointer _Pnode

	mov	eax, ecx
	mov	ecx, DWORD PTR __Pnode$[esp-4]
	mov	DWORD PTR [eax], ecx

; 185  : 			}

	ret	4
??0?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Const_iterator<0>::_Const_iterator<0>
_TEXT	ENDS
PUBLIC	??F?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEAAV012@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Const_iterator<0>::operator--
; Function compile flags: /Ogtpy
;	COMDAT ??F?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??F?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEAAV012@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Const_iterator<0>::operator--, COMDAT
; _this$ = ecx

; 262  : 			{	// predecrement

	mov	eax, ecx

; 263  : 
; 264  :  #if _HAS_ITERATOR_DEBUGGING
; 265  : 			if (this->_Mycont == 0
; 266  : 				|| _Ptr == 0
; 267  : 				|| (_Ptr = _Prevnode(_Ptr))
; 268  : 					== ((_Myt *)this->_Mycont)->_Myhead)
; 269  : 				{
; 270  : 				_DEBUG_ERROR("list iterator not decrementable");
; 271  : 				_SCL_SECURE_TRAITS_OUT_OF_RANGE;
; 272  : 				}
; 273  :  #else /* _HAS_ITERATOR_DEBUGGING */
; 274  : 			_SCL_SECURE_TRAITS_VALIDATE(this->_Has_container());
; 275  : 			_Ptr = _Prevnode(_Ptr);

	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx

; 276  : 			_SCL_SECURE_TRAITS_VALIDATE_RANGE(_Ptr != ((_Myt *)(this->_Getmycont()))->_Myhead);
; 277  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 278  : 
; 279  : 			return (*this);
; 280  : 			}

	ret	0
??F?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEAAV012@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Const_iterator<0>::operator--
_TEXT	ENDS
PUBLIC	?_Mynode@?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QBEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@3@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Const_iterator<0>::_Mynode
; Function compile flags: /Ogtpy
;	COMDAT ?_Mynode@?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QBEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@3@XZ
_TEXT	SEGMENT
?_Mynode@?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QBEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@3@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Const_iterator<0>::_Mynode, COMDAT
; _this$ = ecx

; 308  : 			return (_Ptr);

	mov	eax, DWORD PTR [ecx]

; 309  : 			}

	ret	0
?_Mynode@?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QBEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@3@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Const_iterator<0>::_Mynode
_TEXT	ENDS
PUBLIC	?size@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QBEIXZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::size
; Function compile flags: /Ogtpy
;	COMDAT ?size@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QBEIXZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::size, COMDAT
; _this$ = ecx

; 620  : 		return (_Mysize);

	mov	eax, DWORD PTR [ecx+8]

; 621  : 		}

	ret	0
?size@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QBEIXZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::size
_TEXT	ENDS
PUBLIC	__TI3?AVlength_error@std@@
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@KAXXZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Xlen
PUBLIC	__CTA3?AVlength_error@std@@
PUBLIC	__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
PUBLIC	??0length_error@std@@QAE@ABV01@@Z		; std::length_error::length_error
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
PUBLIC	??0logic_error@std@@QAE@ABV01@@Z		; std::logic_error::logic_error
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlength_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0length_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT
__CTA3?AVlength_error@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT
__TI3?AVlength_error@std@@ DD 00H
	DD	FLAT:??1length_error@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVlength_error@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@KAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@KAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@KAXXZ$2
__ehfuncinfo$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@KAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@KAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@KAXXZ
_TEXT	SEGMENT
$T226580 = -80						; size = 28
$T226579 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@KAXXZ PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Xlen, COMDAT

; 1259 : 		{	// report a length_error

	push	-1
	push	__ehhandler$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@KAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 68					; 00000044H

; 1260 : 		_THROW(length_error, "vector<T> too long");

	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T226580[esp+84]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T226579[esp+80]
	mov	DWORD PTR __$EHRec$[esp+88], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	lea	eax, DWORD PTR $T226580[esp+80]
	push	eax
	lea	ecx, DWORD PTR $T226579[esp+96]
	mov	BYTE PTR __$EHRec$[esp+92], 1
	mov	DWORD PTR $T226579[esp+84], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T226579[esp+84]
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+96], 0
	mov	DWORD PTR $T226579[esp+88], OFFSET ??_7length_error@std@@6B@
	call	__CxxThrowException@8
$LN13@Xlen:
$LN12@Xlen:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@KAXXZ$0:
	lea	ecx, DWORD PTR $T226580[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@KAXXZ$2:
	lea	ecx, DWORD PTR $T226579[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@KAXXZ:
	mov	eax, OFFSET __ehfuncinfo$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@KAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@KAXXZ ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Xlen
PUBLIC	??0?$_Container_base_aux_alloc_empty@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@@std@@IAE@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@1@@Z ; std::_Container_base_aux_alloc_empty<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Container_base_aux_alloc_empty<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??0?$_Container_base_aux_alloc_empty@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@@std@@IAE@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??0?$_Container_base_aux_alloc_empty@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@@std@@IAE@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@1@@Z PROC ; std::_Container_base_aux_alloc_empty<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Container_base_aux_alloc_empty<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >, COMDAT
; _this$ = ecx

; 618  : 	explicit _Container_base_aux_alloc_empty(_Alloc) { }

	mov	eax, ecx
	ret	4
??0?$_Container_base_aux_alloc_empty@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@@std@@IAE@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@1@@Z ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Container_base_aux_alloc_empty<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
_TEXT	ENDS
PUBLIC	?size@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QBEIXZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ?size@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QBEIXZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::size, COMDAT
; _this$ = ecx

; 620  : 		return (_Mysize);

	mov	eax, DWORD PTR [ecx+8]

; 621  : 		}

	ret	0
?size@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QBEIXZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::size
_TEXT	ENDS
PUBLIC	?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@KAXXZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Xlen
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
xdata$x	SEGMENT
__unwindtable$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@KAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@KAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@KAXXZ$2
__ehfuncinfo$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@KAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@KAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@KAXXZ
_TEXT	SEGMENT
$T226612 = -80						; size = 28
$T226611 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@KAXXZ PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Xlen, COMDAT

; 1259 : 		{	// report a length_error

	push	-1
	push	__ehhandler$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@KAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 68					; 00000044H

; 1260 : 		_THROW(length_error, "vector<T> too long");

	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T226612[esp+84]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T226611[esp+80]
	mov	DWORD PTR __$EHRec$[esp+88], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	lea	eax, DWORD PTR $T226612[esp+80]
	push	eax
	lea	ecx, DWORD PTR $T226611[esp+96]
	mov	BYTE PTR __$EHRec$[esp+92], 1
	mov	DWORD PTR $T226611[esp+84], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T226611[esp+84]
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+96], 0
	mov	DWORD PTR $T226611[esp+88], OFFSET ??_7length_error@std@@6B@
	call	__CxxThrowException@8
$LN13@Xlen@2:
$LN12@Xlen@2:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@KAXXZ$0:
	lea	ecx, DWORD PTR $T226612[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@KAXXZ$2:
	lea	ecx, DWORD PTR $T226611[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@KAXXZ:
	mov	eax, OFFSET __ehfuncinfo$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@KAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@KAXXZ ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Xlen
PUBLIC	??0?$_Container_base_aux_alloc_empty@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@@std@@IAE@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@1@@Z ; std::_Container_base_aux_alloc_empty<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Container_base_aux_alloc_empty<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??0?$_Container_base_aux_alloc_empty@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@@std@@IAE@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??0?$_Container_base_aux_alloc_empty@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@@std@@IAE@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@1@@Z PROC ; std::_Container_base_aux_alloc_empty<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Container_base_aux_alloc_empty<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >, COMDAT
; _this$ = ecx

; 618  : 	explicit _Container_base_aux_alloc_empty(_Alloc) { }

	mov	eax, ecx
	ret	4
??0?$_Container_base_aux_alloc_empty@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@@std@@IAE@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@1@@Z ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Container_base_aux_alloc_empty<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
_TEXT	ENDS
PUBLIC	?size@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QBEIXZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ?size@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QBEIXZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::size, COMDAT
; _this$ = ecx

; 620  : 		return (_Mysize);

	mov	eax, DWORD PTR [ecx+8]

; 621  : 		}

	ret	0
?size@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QBEIXZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::size
_TEXT	ENDS
PUBLIC	?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@KAXXZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Xlen
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
xdata$x	SEGMENT
__unwindtable$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@KAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@KAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@KAXXZ$2
__ehfuncinfo$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@KAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@KAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@KAXXZ
_TEXT	SEGMENT
$T226643 = -80						; size = 28
$T226642 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@KAXXZ PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Xlen, COMDAT

; 1259 : 		{	// report a length_error

	push	-1
	push	__ehhandler$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@KAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 68					; 00000044H

; 1260 : 		_THROW(length_error, "vector<T> too long");

	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T226643[esp+84]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T226642[esp+80]
	mov	DWORD PTR __$EHRec$[esp+88], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	lea	eax, DWORD PTR $T226643[esp+80]
	push	eax
	lea	ecx, DWORD PTR $T226642[esp+96]
	mov	BYTE PTR __$EHRec$[esp+92], 1
	mov	DWORD PTR $T226642[esp+84], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T226642[esp+84]
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+96], 0
	mov	DWORD PTR $T226642[esp+88], OFFSET ??_7length_error@std@@6B@
	call	__CxxThrowException@8
$LN13@Xlen@3:
$LN12@Xlen@3:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@KAXXZ$0:
	lea	ecx, DWORD PTR $T226643[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@KAXXZ$2:
	lea	ecx, DWORD PTR $T226642[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@KAXXZ:
	mov	eax, OFFSET __ehfuncinfo$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@KAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@KAXXZ ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Xlen
PUBLIC	??0?$_Container_base_aux_alloc_empty@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@@std@@IAE@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@1@@Z ; std::_Container_base_aux_alloc_empty<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Container_base_aux_alloc_empty<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??0?$_Container_base_aux_alloc_empty@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@@std@@IAE@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??0?$_Container_base_aux_alloc_empty@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@@std@@IAE@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@1@@Z PROC ; std::_Container_base_aux_alloc_empty<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Container_base_aux_alloc_empty<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >, COMDAT
; _this$ = ecx

; 618  : 	explicit _Container_base_aux_alloc_empty(_Alloc) { }

	mov	eax, ecx
	ret	4
??0?$_Container_base_aux_alloc_empty@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@@std@@IAE@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@1@@Z ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Container_base_aux_alloc_empty<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >::max_size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@QBEIXZ PROC ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >::max_size, COMDAT
; _this$ = ecx

; 165  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 166  : 		return (0 < _Count ? _Count : 1);

	mov	eax, 134217727				; 07ffffffH

; 167  : 		}

	ret	0
?max_size@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >::max_size
_TEXT	ENDS
PUBLIC	??0?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@1@@Z ; std::_Container_base_aux_alloc_empty<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Container_base_aux_alloc_empty<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??0?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??0?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@1@@Z PROC ; std::_Container_base_aux_alloc_empty<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Container_base_aux_alloc_empty<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >, COMDAT
; _this$ = ecx

; 618  : 	explicit _Container_base_aux_alloc_empty(_Alloc) { }

	mov	eax, ecx
	ret	4
??0?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@1@@Z ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Container_base_aux_alloc_empty<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >::max_size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@QBEIXZ PROC ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >::max_size, COMDAT
; _this$ = ecx

; 165  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 166  : 		return (0 < _Count ? _Count : 1);

	mov	eax, 134217727				; 07ffffffH

; 167  : 		}

	ret	0
?max_size@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >::max_size
_TEXT	ENDS
PUBLIC	??0?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@1@@Z ; std::_Container_base_aux_alloc_empty<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Container_base_aux_alloc_empty<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??0?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??0?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@1@@Z PROC ; std::_Container_base_aux_alloc_empty<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Container_base_aux_alloc_empty<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >, COMDAT
; _this$ = ecx

; 618  : 	explicit _Container_base_aux_alloc_empty(_Alloc) { }

	mov	eax, ecx
	ret	4
??0?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@1@@Z ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Container_base_aux_alloc_empty<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >::max_size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@QBEIXZ PROC ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >::max_size, COMDAT
; _this$ = ecx

; 165  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 166  : 		return (0 < _Count ? _Count : 1);

	mov	eax, 134217727				; 07ffffffH

; 167  : 		}

	ret	0
?max_size@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >::max_size
_TEXT	ENDS
PUBLIC	??0?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@1@@Z ; std::_Container_base_aux_alloc_empty<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Container_base_aux_alloc_empty<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??0?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??0?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@1@@Z PROC ; std::_Container_base_aux_alloc_empty<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Container_base_aux_alloc_empty<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >, COMDAT
; _this$ = ecx

; 618  : 	explicit _Container_base_aux_alloc_empty(_Alloc) { }

	mov	eax, ecx
	ret	4
??0?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@1@@Z ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Container_base_aux_alloc_empty<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >
_TEXT	ENDS
PUBLIC	?capacity@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QBEIXZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::capacity
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?capacity@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QBEIXZ PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::capacity, COMDAT
; _this$ = ecx

; 635  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

	mov	edx, DWORD PTR [ecx+4]
	test	edx, edx
	jne	SHORT $LN3@capacity
	xor	eax, eax

; 636  : 		}

	ret	0
$LN3@capacity:

; 635  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

	mov	eax, DWORD PTR [ecx+12]
	sub	eax, edx
	sar	eax, 2

; 636  : 		}

	ret	0
?capacity@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QBEIXZ ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::capacity
_TEXT	ENDS
PUBLIC	?size@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QBEIXZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::size
; Function compile flags: /Ogtpy
;	COMDAT ?size@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QBEIXZ PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::size, COMDAT
; _this$ = ecx

; 726  : 		return (_Mylast - _Myfirst);

	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2

; 727  : 		}

	ret	0
?size@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QBEIXZ ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::size
_TEXT	ENDS
PUBLIC	?capacity@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QBEIXZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::capacity
; Function compile flags: /Ogtpy
;	COMDAT ?capacity@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QBEIXZ PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::capacity, COMDAT
; _this$ = ecx

; 635  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

	mov	edx, DWORD PTR [ecx+4]
	test	edx, edx
	jne	SHORT $LN3@capacity@2
	xor	eax, eax

; 636  : 		}

	ret	0
$LN3@capacity@2:

; 635  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

	mov	eax, DWORD PTR [ecx+12]
	sub	eax, edx
	sar	eax, 2

; 636  : 		}

	ret	0
?capacity@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QBEIXZ ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::capacity
_TEXT	ENDS
PUBLIC	?size@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QBEIXZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::size
; Function compile flags: /Ogtpy
;	COMDAT ?size@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QBEIXZ PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::size, COMDAT
; _this$ = ecx

; 726  : 		return (_Mylast - _Myfirst);

	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2

; 727  : 		}

	ret	0
?size@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QBEIXZ ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::size
_TEXT	ENDS
PUBLIC	?capacity@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QBEIXZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::capacity
; Function compile flags: /Ogtpy
;	COMDAT ?capacity@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QBEIXZ PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::capacity, COMDAT
; _this$ = ecx

; 635  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

	mov	edx, DWORD PTR [ecx+4]
	test	edx, edx
	jne	SHORT $LN3@capacity@3
	xor	eax, eax

; 636  : 		}

	ret	0
$LN3@capacity@3:

; 635  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

	mov	eax, DWORD PTR [ecx+12]
	sub	eax, edx
	sar	eax, 2

; 636  : 		}

	ret	0
?capacity@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QBEIXZ ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::capacity
_TEXT	ENDS
PUBLIC	?size@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QBEIXZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::size
; Function compile flags: /Ogtpy
;	COMDAT ?size@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QBEIXZ PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::size, COMDAT
; _this$ = ecx

; 726  : 		return (_Mylast - _Myfirst);

	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2

; 727  : 		}

	ret	0
?size@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QBEIXZ ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::size
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@1@@Z ; std::_Vector_const_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Vector_const_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@1@@Z PROC ; std::_Vector_const_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Vector_const_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >, COMDAT
; _this$ = ecx

; 84   : 	explicit _Vector_const_iterator(_Tptr _Ptr)

	mov	eax, ecx

; 85   : 		{	// construct with pointer _Ptr
; 86   : 		_Myptr = _Ptr;

	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 87   : 		}

	ret	4
??0?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@1@@Z ENDP ; std::_Vector_const_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Vector_const_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::operator==
; Function compile flags: /Ogtpy
;	COMDAT ??8?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::operator==, COMDAT
; _this$ = ecx

; 204  : 
; 205  :  #if _HAS_ITERATOR_DEBUGGING
; 206  : 		_Compat(_Right);
; 207  :  #else
; 208  : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));
; 209  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 210  : 
; 211  : 		return (_Myptr == _Right._Myptr);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	cl
	mov	al, cl

; 212  : 		}

	ret	4
??8?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::operator==
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@1@@Z ; std::_Vector_const_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Vector_const_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@1@@Z PROC ; std::_Vector_const_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Vector_const_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >, COMDAT
; _this$ = ecx

; 84   : 	explicit _Vector_const_iterator(_Tptr _Ptr)

	mov	eax, ecx

; 85   : 		{	// construct with pointer _Ptr
; 86   : 		_Myptr = _Ptr;

	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 87   : 		}

	ret	4
??0?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@1@@Z ENDP ; std::_Vector_const_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Vector_const_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::operator==
; Function compile flags: /Ogtpy
;	COMDAT ??8?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::operator==, COMDAT
; _this$ = ecx

; 204  : 
; 205  :  #if _HAS_ITERATOR_DEBUGGING
; 206  : 		_Compat(_Right);
; 207  :  #else
; 208  : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));
; 209  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 210  : 
; 211  : 		return (_Myptr == _Right._Myptr);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	cl
	mov	al, cl

; 212  : 		}

	ret	4
??8?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::operator==
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@1@@Z ; std::_Vector_const_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Vector_const_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@1@@Z PROC ; std::_Vector_const_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Vector_const_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >, COMDAT
; _this$ = ecx

; 84   : 	explicit _Vector_const_iterator(_Tptr _Ptr)

	mov	eax, ecx

; 85   : 		{	// construct with pointer _Ptr
; 86   : 		_Myptr = _Ptr;

	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 87   : 		}

	ret	4
??0?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@1@@Z ENDP ; std::_Vector_const_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Vector_const_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::operator==
; Function compile flags: /Ogtpy
;	COMDAT ??8?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::operator==, COMDAT
; _this$ = ecx

; 204  : 
; 205  :  #if _HAS_ITERATOR_DEBUGGING
; 206  : 		_Compat(_Right);
; 207  :  #else
; 208  : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));
; 209  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 210  : 
; 211  : 		return (_Myptr == _Right._Myptr);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	cl
	mov	al, cl

; 212  : 		}

	ret	4
??8?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::operator==
_TEXT	ENDS
PUBLIC	??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@ABU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@1@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *><std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\utility
;	COMDAT ??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@ABU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@1@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@ABU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@1@@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *><std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *>, COMDAT
; _this$ = ecx

; 57   : 		{	// construct from compatible pair

	push	esi
	push	edi
	mov	edi, DWORD PTR __Right$[esp+4]
	push	edi
	mov	esi, ecx
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR [edi+28]
	mov	DWORD PTR [esi+28], eax
	pop	edi

; 58   : 		}

	mov	eax, esi
	pop	esi
	ret	4
??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@ABU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@1@@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *><std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *>
_TEXT	ENDS
PUBLIC	??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ		; sprintf_s<256>
EXTRN	__imp__vsprintf_s:PROC
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdio.h
;	COMDAT ??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Format$ = 12						; size = 4
??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ PROC		; sprintf_s<256>, COMDAT

; 322  : __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_1_ARGLIST(int, sprintf_s, vsprintf_s, char, _Dest, _In_z_ _Printf_format_string_ const char *, _Format)

	mov	ecx, DWORD PTR __Format$[esp-4]
	mov	edx, DWORD PTR __Dest$[esp-4]
	lea	eax, DWORD PTR __Format$[esp]
	push	eax
	push	ecx
	push	256					; 00000100H
	push	edx
	call	DWORD PTR __imp__vsprintf_s
	add	esp, 16					; 00000010H
	ret	0
??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ ENDP		; sprintf_s<256>
_TEXT	ENDS
PUBLIC	??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@QAE@ABU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@1@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *><std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\utility
;	COMDAT ??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@QAE@ABU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@1@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@QAE@ABU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@1@@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *><std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *>, COMDAT
; _this$ = ecx

; 57   : 		{	// construct from compatible pair

	push	esi
	push	edi
	mov	edi, DWORD PTR __Right$[esp+4]
	push	edi
	mov	esi, ecx
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR [edi+28]
	mov	DWORD PTR [esi+28], eax
	pop	edi

; 58   : 		}

	mov	eax, esi
	pop	esi
	ret	4
??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@QAE@ABU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@1@@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *><std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *>
_TEXT	ENDS
PUBLIC	??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@ABU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@1@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *><std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
; Function compile flags: /Ogtpy
;	COMDAT ??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@ABU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@1@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@ABU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@1@@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *><std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>, COMDAT
; _this$ = ecx

; 57   : 		{	// construct from compatible pair

	push	esi
	push	edi
	mov	edi, DWORD PTR __Right$[esp+4]
	push	edi
	mov	esi, ecx
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR [edi+28]
	mov	DWORD PTR [esi+28], eax
	pop	edi

; 58   : 		}

	mov	eax, esi
	pop	esi
	ret	4
??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@ABU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@1@@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *><std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@1@@Z ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> ><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@1@@Z PROC ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> ><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >, COMDAT
; _this$ = ecx

; 128  : 		allocator(const allocator<_Other>&) _THROW0()

	mov	eax, ecx

; 129  : 		{	// construct from a related allocator (do nothing)
; 130  : 		}

	ret	4
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@1@@Z ENDP ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> ><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@1@@Z ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> ><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >
; Function compile flags: /Ogtpy
;	COMDAT ??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@1@@Z PROC ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> ><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >, COMDAT
; _this$ = ecx

; 128  : 		allocator(const allocator<_Other>&) _THROW0()

	mov	eax, ecx

; 129  : 		{	// construct from a related allocator (do nothing)
; 130  : 		}

	ret	4
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@1@@Z ENDP ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> ><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@1@@Z ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> ><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >
; Function compile flags: /Ogtpy
;	COMDAT ??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@1@@Z PROC ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> ><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >, COMDAT
; _this$ = ecx

; 128  : 		allocator(const allocator<_Other>&) _THROW0()

	mov	eax, ecx

; 129  : 		{	// construct from a related allocator (do nothing)
; 130  : 		}

	ret	4
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@1@@Z ENDP ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> ><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >
_TEXT	ENDS
PUBLIC	??$?8U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@U01@@std@@YA_NABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@0@0@Z ; std::operator==<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >
; Function compile flags: /Ogtpy
;	COMDAT ??$?8U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@U01@@std@@YA_NABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@0@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$?8U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@U01@@std@@YA_NABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@0@0@Z PROC ; std::operator==<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >, COMDAT

; 175  : 	return (true);

	mov	al, 1

; 176  : 	}

	ret	0
??$?8U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@U01@@std@@YA_NABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@0@0@Z ENDP ; std::operator==<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >
_TEXT	ENDS
PUBLIC	??$_Destroy@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@YAXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@@Z ; std::_Destroy<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Destroy@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@YAXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@YAXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@@Z PROC ; std::_Destroy<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node *>, COMDAT

; 59   : 	_DESTRUCTOR(_Ty, _Ptr);
; 60   : 	}

	ret	0
??$_Destroy@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@YAXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@@Z ENDP ; std::_Destroy<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node *>
_TEXT	ENDS
PUBLIC	??$?8U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@U01@@std@@YA_NABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@0@0@Z ; std::operator==<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >
; Function compile flags: /Ogtpy
;	COMDAT ??$?8U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@U01@@std@@YA_NABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@0@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$?8U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@U01@@std@@YA_NABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@0@0@Z PROC ; std::operator==<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >, COMDAT

; 175  : 	return (true);

	mov	al, 1

; 176  : 	}

	ret	0
??$?8U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@U01@@std@@YA_NABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@0@0@Z ENDP ; std::operator==<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >
_TEXT	ENDS
PUBLIC	??$_Destroy@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@YAXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@@Z ; std::_Destroy<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Destroy@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@YAXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@YAXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@@Z PROC ; std::_Destroy<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node *>, COMDAT

; 59   : 	_DESTRUCTOR(_Ty, _Ptr);
; 60   : 	}

	ret	0
??$_Destroy@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@YAXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@@Z ENDP ; std::_Destroy<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node *>
_TEXT	ENDS
PUBLIC	??$?8U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@U01@@std@@YA_NABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@0@0@Z ; std::operator==<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >
; Function compile flags: /Ogtpy
;	COMDAT ??$?8U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@U01@@std@@YA_NABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@0@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$?8U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@U01@@std@@YA_NABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@0@0@Z PROC ; std::operator==<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >, COMDAT

; 175  : 	return (true);

	mov	al, 1

; 176  : 	}

	ret	0
??$?8U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@U01@@std@@YA_NABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@0@0@Z ENDP ; std::operator==<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >
_TEXT	ENDS
PUBLIC	??$_Destroy@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@YAXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@@Z ; std::_Destroy<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Destroy@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@YAXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@YAXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@@Z PROC ; std::_Destroy<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node *>, COMDAT

; 59   : 	_DESTRUCTOR(_Ty, _Ptr);
; 60   : 	}

	ret	0
??$_Destroy@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@YAXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@@Z ENDP ; std::_Destroy<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node *>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@1@@Z ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node *>::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node *><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >
; Function compile flags: /Ogtpy
;	COMDAT ??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@1@@Z PROC ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node *>::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node *><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >, COMDAT
; _this$ = ecx

; 128  : 		allocator(const allocator<_Other>&) _THROW0()

	mov	eax, ecx

; 129  : 		{	// construct from a related allocator (do nothing)
; 130  : 		}

	ret	4
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@1@@Z ENDP ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node *>::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node *><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??$_Allocate@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@YAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IPAU120@@Z ; std::_Allocate<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node>
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
EXTRN	??2@YAPAXI@Z:PROC				; operator new
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@YAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IPAU120@@Z
_TEXT	SEGMENT
$T226781 = -12						; size = 12
$T226785 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@YAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IPAU120@@Z PROC ; std::_Allocate<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node>, COMDAT

; 37   : 	if (_Count <= 0)

	mov	ecx, DWORD PTR __Count$[esp-4]
	sub	esp, 12					; 0000000cH
	test	ecx, ecx
	ja	SHORT $LN3@Allocate

; 38   : 		_Count = 0;

	xor	ecx, ecx
$LN1@Allocate:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	lea	edx, DWORD PTR [ecx+ecx*4]
	add	edx, edx
	add	edx, edx
	add	edx, edx
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 44   : 	}

	add	esp, 12					; 0000000cH
	ret	0
$LN3@Allocate:

; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	ecx
	cmp	eax, 40					; 00000028H
	jae	SHORT $LN1@Allocate

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	lea	eax, DWORD PTR $T226785[esp+8]
	push	eax
	lea	ecx, DWORD PTR $T226781[esp+16]
	mov	DWORD PTR $T226785[esp+12], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T226781[esp+16]
	push	ecx
	mov	DWORD PTR $T226781[esp+20], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN9@Allocate:
$LN8@Allocate:
	int	3
??$_Allocate@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@YAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node>
_TEXT	ENDS
PUBLIC	??$_Construct@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@ABQAU120@@Z ; std::_Construct<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node *,std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Construct@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@ABQAU120@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@ABQAU120@@Z PROC ; std::_Construct<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node *,std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node *>, COMDAT

; 51   : 	void _FARQ *_Vptr = _Ptr;
; 52   : 	::new (_Vptr) _T1(_Val);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	test	eax, eax
	je	SHORT $LN3@Construct
	mov	ecx, DWORD PTR __Val$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN3@Construct:

; 53   : 	}

	ret	0
??$_Construct@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node *,std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node *>
_TEXT	ENDS
PUBLIC	??$_Allocate@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IPAV120@@Z ; std::_Allocate<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Allocate@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IPAV120@@Z
_TEXT	SEGMENT
$T226800 = -12						; size = 12
$T226804 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IPAV120@@Z PROC ; std::_Allocate<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >, COMDAT

; 37   : 	if (_Count <= 0)

	mov	ecx, DWORD PTR __Count$[esp-4]
	sub	esp, 12					; 0000000cH
	test	ecx, ecx
	ja	SHORT $LN3@Allocate@2

; 38   : 		_Count = 0;

	xor	ecx, ecx
$LN1@Allocate@2:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	lea	edx, DWORD PTR [ecx*4]
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 44   : 	}

	add	esp, 12					; 0000000cH
	ret	0
$LN3@Allocate@2:

; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	ecx
	cmp	eax, 4
	jae	SHORT $LN1@Allocate@2

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	lea	eax, DWORD PTR $T226804[esp+8]
	push	eax
	lea	ecx, DWORD PTR $T226800[esp+16]
	mov	DWORD PTR $T226804[esp+12], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T226800[esp+16]
	push	ecx
	mov	DWORD PTR $T226800[esp+20], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN9@Allocate@2:
$LN8@Allocate@2:
	int	3
??$_Allocate@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IPAV120@@Z ENDP ; std::_Allocate<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@1@@Z ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node *>::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node *><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >
; Function compile flags: /Ogtpy
;	COMDAT ??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@1@@Z PROC ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node *>::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node *><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >, COMDAT
; _this$ = ecx

; 128  : 		allocator(const allocator<_Other>&) _THROW0()

	mov	eax, ecx

; 129  : 		{	// construct from a related allocator (do nothing)
; 130  : 		}

	ret	4
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@1@@Z ENDP ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node *>::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node *><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@YAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IPAU120@@Z ; std::_Allocate<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Allocate@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@YAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IPAU120@@Z
_TEXT	SEGMENT
$T226813 = -12						; size = 12
$T226817 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@YAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IPAU120@@Z PROC ; std::_Allocate<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node>, COMDAT

; 37   : 	if (_Count <= 0)

	mov	ecx, DWORD PTR __Count$[esp-4]
	sub	esp, 12					; 0000000cH
	test	ecx, ecx
	ja	SHORT $LN3@Allocate@3

; 38   : 		_Count = 0;

	xor	ecx, ecx
$LN1@Allocate@3:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	lea	edx, DWORD PTR [ecx+ecx*4]
	add	edx, edx
	add	edx, edx
	add	edx, edx
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 44   : 	}

	add	esp, 12					; 0000000cH
	ret	0
$LN3@Allocate@3:

; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	ecx
	cmp	eax, 40					; 00000028H
	jae	SHORT $LN1@Allocate@3

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	lea	eax, DWORD PTR $T226817[esp+8]
	push	eax
	lea	ecx, DWORD PTR $T226813[esp+16]
	mov	DWORD PTR $T226817[esp+12], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T226813[esp+16]
	push	ecx
	mov	DWORD PTR $T226813[esp+20], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN9@Allocate@3:
$LN8@Allocate@3:
	int	3
??$_Allocate@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@YAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node>
_TEXT	ENDS
PUBLIC	??$_Construct@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@ABQAU120@@Z ; std::_Construct<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node *,std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Construct@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@ABQAU120@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@ABQAU120@@Z PROC ; std::_Construct<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node *,std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node *>, COMDAT

; 51   : 	void _FARQ *_Vptr = _Ptr;
; 52   : 	::new (_Vptr) _T1(_Val);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	test	eax, eax
	je	SHORT $LN3@Construct@2
	mov	ecx, DWORD PTR __Val$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN3@Construct@2:

; 53   : 	}

	ret	0
??$_Construct@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node *,std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node *>
_TEXT	ENDS
PUBLIC	??$_Allocate@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IPAV120@@Z ; std::_Allocate<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Allocate@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IPAV120@@Z
_TEXT	SEGMENT
$T226832 = -12						; size = 12
$T226836 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IPAV120@@Z PROC ; std::_Allocate<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >, COMDAT

; 37   : 	if (_Count <= 0)

	mov	ecx, DWORD PTR __Count$[esp-4]
	sub	esp, 12					; 0000000cH
	test	ecx, ecx
	ja	SHORT $LN3@Allocate@4

; 38   : 		_Count = 0;

	xor	ecx, ecx
$LN1@Allocate@4:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	lea	edx, DWORD PTR [ecx*4]
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 44   : 	}

	add	esp, 12					; 0000000cH
	ret	0
$LN3@Allocate@4:

; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	ecx
	cmp	eax, 4
	jae	SHORT $LN1@Allocate@4

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	lea	eax, DWORD PTR $T226836[esp+8]
	push	eax
	lea	ecx, DWORD PTR $T226832[esp+16]
	mov	DWORD PTR $T226836[esp+12], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T226832[esp+16]
	push	ecx
	mov	DWORD PTR $T226832[esp+20], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN9@Allocate@4:
$LN8@Allocate@4:
	int	3
??$_Allocate@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IPAV120@@Z ENDP ; std::_Allocate<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@1@@Z ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node *>::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node *><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >
; Function compile flags: /Ogtpy
;	COMDAT ??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@1@@Z PROC ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node *>::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node *><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >, COMDAT
; _this$ = ecx

; 128  : 		allocator(const allocator<_Other>&) _THROW0()

	mov	eax, ecx

; 129  : 		{	// construct from a related allocator (do nothing)
; 130  : 		}

	ret	4
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@1@@Z ENDP ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node *>::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node *><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@YAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IPAU120@@Z ; std::_Allocate<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Allocate@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@YAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IPAU120@@Z
_TEXT	SEGMENT
$T226845 = -12						; size = 12
$T226849 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@YAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IPAU120@@Z PROC ; std::_Allocate<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node>, COMDAT

; 37   : 	if (_Count <= 0)

	mov	ecx, DWORD PTR __Count$[esp-4]
	sub	esp, 12					; 0000000cH
	test	ecx, ecx
	ja	SHORT $LN3@Allocate@5

; 38   : 		_Count = 0;

	xor	ecx, ecx
$LN1@Allocate@5:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	lea	edx, DWORD PTR [ecx+ecx*4]
	add	edx, edx
	add	edx, edx
	add	edx, edx
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 44   : 	}

	add	esp, 12					; 0000000cH
	ret	0
$LN3@Allocate@5:

; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	ecx
	cmp	eax, 40					; 00000028H
	jae	SHORT $LN1@Allocate@5

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	lea	eax, DWORD PTR $T226849[esp+8]
	push	eax
	lea	ecx, DWORD PTR $T226845[esp+16]
	mov	DWORD PTR $T226849[esp+12], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T226845[esp+16]
	push	ecx
	mov	DWORD PTR $T226845[esp+20], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN9@Allocate@5:
$LN8@Allocate@5:
	int	3
??$_Allocate@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@YAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node>
_TEXT	ENDS
PUBLIC	??$_Construct@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@ABQAU120@@Z ; std::_Construct<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node *,std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Construct@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@ABQAU120@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@ABQAU120@@Z PROC ; std::_Construct<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node *,std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node *>, COMDAT

; 51   : 	void _FARQ *_Vptr = _Ptr;
; 52   : 	::new (_Vptr) _T1(_Val);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	test	eax, eax
	je	SHORT $LN3@Construct@3
	mov	ecx, DWORD PTR __Val$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN3@Construct@3:

; 53   : 	}

	ret	0
??$_Construct@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node *,std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node *>
_TEXT	ENDS
PUBLIC	??$_Allocate@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IPAV120@@Z ; std::_Allocate<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Allocate@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IPAV120@@Z
_TEXT	SEGMENT
$T226864 = -12						; size = 12
$T226868 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IPAV120@@Z PROC ; std::_Allocate<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >, COMDAT

; 37   : 	if (_Count <= 0)

	mov	ecx, DWORD PTR __Count$[esp-4]
	sub	esp, 12					; 0000000cH
	test	ecx, ecx
	ja	SHORT $LN3@Allocate@6

; 38   : 		_Count = 0;

	xor	ecx, ecx
$LN1@Allocate@6:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	lea	edx, DWORD PTR [ecx*4]
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 44   : 	}

	add	esp, 12					; 0000000cH
	ret	0
$LN3@Allocate@6:

; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	ecx
	cmp	eax, 4
	jae	SHORT $LN1@Allocate@6

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	lea	eax, DWORD PTR $T226868[esp+8]
	push	eax
	lea	ecx, DWORD PTR $T226864[esp+16]
	mov	DWORD PTR $T226868[esp+12], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T226864[esp+16]
	push	ecx
	mov	DWORD PTR $T226864[esp+20], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN9@Allocate@6:
$LN8@Allocate@6:
	int	3
??$_Allocate@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IPAV120@@Z ENDP ; std::_Allocate<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@1@@Z ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node>::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >
; Function compile flags: /Ogtpy
;	COMDAT ??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@1@@Z PROC ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node>::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >, COMDAT
; _this$ = ecx

; 128  : 		allocator(const allocator<_Other>&) _THROW0()

	mov	eax, ecx

; 129  : 		{	// construct from a related allocator (do nothing)
; 130  : 		}

	ret	4
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@1@@Z ENDP ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node>::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@1@@Z ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node>::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >
; Function compile flags: /Ogtpy
;	COMDAT ??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@1@@Z PROC ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node>::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >, COMDAT
; _this$ = ecx

; 128  : 		allocator(const allocator<_Other>&) _THROW0()

	mov	eax, ecx

; 129  : 		{	// construct from a related allocator (do nothing)
; 130  : 		}

	ret	4
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@1@@Z ENDP ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node>::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@1@@Z ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node>::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >
; Function compile flags: /Ogtpy
;	COMDAT ??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@1@@Z PROC ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node>::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >, COMDAT
; _this$ = ecx

; 128  : 		allocator(const allocator<_Other>&) _THROW0()

	mov	eax, ecx

; 129  : 		{	// construct from a related allocator (do nothing)
; 130  : 		}

	ret	4
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@1@@Z ENDP ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node>::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@ABU01@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>
; Function compile flags: /Ogtpy
;	COMDAT ??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@ABU01@@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>, COMDAT
; _this$ = ecx
	push	esi
	push	edi
	mov	edi, DWORD PTR ___that$[esp+4]
	push	edi
	mov	esi, ecx
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR [edi+28]
	mov	DWORD PTR [esi+28], eax
	pop	edi
	mov	eax, esi
	pop	esi
	ret	4
??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@ABU01@@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@QAE@ABU01@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>
; Function compile flags: /Ogtpy
;	COMDAT ??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@QAE@ABU01@@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>, COMDAT
; _this$ = ecx
	push	esi
	push	edi
	mov	edi, DWORD PTR ___that$[esp+4]
	push	edi
	mov	esi, ecx
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR [edi+28]
	mov	DWORD PTR [esi+28], eax
	pop	edi
	mov	eax, esi
	pop	esi
	ret	4
??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@QAE@ABU01@@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@ABU01@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>
; Function compile flags: /Ogtpy
;	COMDAT ??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@ABU01@@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>, COMDAT
; _this$ = ecx
	push	esi
	push	edi
	mov	edi, DWORD PTR ___that$[esp+4]
	push	edi
	mov	esi, ecx
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR [edi+28]
	mov	DWORD PTR [esi+28], eax
	pop	edi
	mov	eax, esi
	pop	esi
	ret	4
??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@ABU01@@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>
_TEXT	ENDS
PUBLIC	??1_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ ; std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node::~_Node
; Function compile flags: /Ogtpy
;	COMDAT ??1_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ PROC ; std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node::~_Node, COMDAT
; _this$ = ecx
	add	ecx, 8
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
??1_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ ENDP ; std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node::~_Node
_TEXT	ENDS
PUBLIC	??1_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ ; std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node::~_Node
; Function compile flags: /Ogtpy
;	COMDAT ??1_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ PROC ; std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node::~_Node, COMDAT
; _this$ = ecx
	add	ecx, 8
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
??1_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ ENDP ; std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node::~_Node
_TEXT	ENDS
PUBLIC	??1_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ ; std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node::~_Node
; Function compile flags: /Ogtpy
;	COMDAT ??1_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ PROC ; std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node::~_Node, COMDAT
; _this$ = ecx
	add	ecx, 8
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
??1_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ ENDP ; std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node::~_Node
_TEXT	ENDS
PUBLIC	??0?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABQAW4GreatWorkArtifactClass@@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\utility
;	COMDAT ??0?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABQAW4GreatWorkArtifactClass@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABQAW4GreatWorkArtifactClass@@@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *>, COMDAT
; _this$ = ecx

; 50   : 		{	// construct from specified values

	mov	eax, DWORD PTR __Val1$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR __Val2$[esp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [esi+28], edx

; 51   : 		}

	mov	eax, esi
	pop	esi
	ret	8
??0?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABQAW4GreatWorkArtifactClass@@@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *>
_TEXT	ENDS
PUBLIC	??0?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABQAW4GreatWorkSlotType@@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *>
; Function compile flags: /Ogtpy
;	COMDAT ??0?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABQAW4GreatWorkSlotType@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABQAW4GreatWorkSlotType@@@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *>, COMDAT
; _this$ = ecx

; 50   : 		{	// construct from specified values

	mov	eax, DWORD PTR __Val1$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR __Val2$[esp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [esi+28], edx

; 51   : 		}

	mov	eax, esi
	pop	esi
	ret	8
??0?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABQAW4GreatWorkSlotType@@@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *>
_TEXT	ENDS
PUBLIC	??0?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABQAW4MissionTypes@@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
; Function compile flags: /Ogtpy
;	COMDAT ??0?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABQAW4MissionTypes@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABQAW4MissionTypes@@@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>, COMDAT
; _this$ = ecx

; 50   : 		{	// construct from specified values

	mov	eax, DWORD PTR __Val1$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR __Val2$[esp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [esi+28], edx

; 51   : 		}

	mov	eax, esi
	pop	esi
	ret	8
??0?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABQAW4MissionTypes@@@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
_TEXT	ENDS
PUBLIC	??$_Iter_cat@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@@Z ; std::_Iter_cat<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Const_iterator<0> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Iter_cat@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@@Z PROC ; std::_Iter_cat<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Const_iterator<0> >, COMDAT

; 953  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 954  : 	return (_Cat);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 955  : 	}

	ret	0
??$_Iter_cat@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@@Z ENDP ; std::_Iter_cat<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Const_iterator<0> >
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@0@Z ; std::_Ptr_cat<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Ptr_cat@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@0@Z PROC ; std::_Ptr_cat<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *>, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@0@Z ENDP ; std::_Ptr_cat<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *>
_TEXT	ENDS
PUBLIC	??$_Iter_cat@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@@Z ; std::_Iter_cat<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Const_iterator<0> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Iter_cat@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@@Z PROC ; std::_Iter_cat<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Const_iterator<0> >, COMDAT

; 953  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 954  : 	return (_Cat);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 955  : 	}

	ret	0
??$_Iter_cat@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@@Z ENDP ; std::_Iter_cat<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Const_iterator<0> >
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@0@Z ; std::_Ptr_cat<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Ptr_cat@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@0@Z PROC ; std::_Ptr_cat<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *>, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@0@Z ENDP ; std::_Ptr_cat<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *>
_TEXT	ENDS
PUBLIC	??$_Iter_cat@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@@Z ; std::_Iter_cat<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Const_iterator<0> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Iter_cat@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@@Z PROC ; std::_Iter_cat<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Const_iterator<0> >, COMDAT

; 953  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 954  : 	return (_Cat);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 955  : 	}

	ret	0
??$_Iter_cat@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@@Z ENDP ; std::_Iter_cat<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Const_iterator<0> >
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@0@Z ; std::_Ptr_cat<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Ptr_cat@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@0@Z PROC ; std::_Ptr_cat<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *>, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@0@Z ENDP ; std::_Ptr_cat<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *>
_TEXT	ENDS
PUBLIC	??$_Iter_random@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@0@Z ; std::_Iter_random<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Iter_random@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Iter_random@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@0@Z PROC ; std::_Iter_random<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *>, COMDAT

; 994  : 	typename _Iter_random_helper<
; 995  : 		iterator_traits<_Iter1>::iterator_category, 
; 996  : 		iterator_traits<_Iter2>::iterator_category>::_Iter_random_cat _Cat;
; 997  : 	return (_Cat);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 998  : 	}

	ret	0
??$_Iter_random@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@0@Z ENDP ; std::_Iter_random<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *>
_TEXT	ENDS
PUBLIC	??$_Copy_opt@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@Urandom_access_iterator_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Copy_opt@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@Urandom_access_iterator_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Copy_opt@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@Urandom_access_iterator_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_opt<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::random_access_iterator_tag>, COMDAT

; 2470 : 	_DEBUG_RANGE(_First, _Last);
; 2471 : 	for (; _First != _Last; ++_Dest, ++_First)

	mov	ecx, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	ecx, edx
	je	SHORT $LN1@Copy_opt
	push	esi
$LL3@Copy_opt:

; 2472 : 		*_Dest = *_First;

	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
	add	ecx, 4
	add	eax, 4
	cmp	ecx, edx
	jne	SHORT $LL3@Copy_opt
	pop	esi
$LN1@Copy_opt:

; 2473 : 	return (_Dest);
; 2474 : 	}

	ret	0
??$_Copy_opt@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@Urandom_access_iterator_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_opt<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	??$_Iter_random@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@0@Z ; std::_Iter_random<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Iter_random@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Iter_random@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@0@Z PROC ; std::_Iter_random<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *>, COMDAT

; 994  : 	typename _Iter_random_helper<
; 995  : 		iterator_traits<_Iter1>::iterator_category, 
; 996  : 		iterator_traits<_Iter2>::iterator_category>::_Iter_random_cat _Cat;
; 997  : 	return (_Cat);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 998  : 	}

	ret	0
??$_Iter_random@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@0@Z ENDP ; std::_Iter_random<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *>
_TEXT	ENDS
PUBLIC	??$_Copy_opt@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@Urandom_access_iterator_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Copy_opt@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@Urandom_access_iterator_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Copy_opt@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@Urandom_access_iterator_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_opt<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::random_access_iterator_tag>, COMDAT

; 2470 : 	_DEBUG_RANGE(_First, _Last);
; 2471 : 	for (; _First != _Last; ++_Dest, ++_First)

	mov	ecx, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	ecx, edx
	je	SHORT $LN1@Copy_opt@2
	push	esi
$LL3@Copy_opt@2:

; 2472 : 		*_Dest = *_First;

	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
	add	ecx, 4
	add	eax, 4
	cmp	ecx, edx
	jne	SHORT $LL3@Copy_opt@2
	pop	esi
$LN1@Copy_opt@2:

; 2473 : 	return (_Dest);
; 2474 : 	}

	ret	0
??$_Copy_opt@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@Urandom_access_iterator_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_opt<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	??$_Iter_random@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@0@Z ; std::_Iter_random<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Iter_random@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Iter_random@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@0@Z PROC ; std::_Iter_random<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *>, COMDAT

; 994  : 	typename _Iter_random_helper<
; 995  : 		iterator_traits<_Iter1>::iterator_category, 
; 996  : 		iterator_traits<_Iter2>::iterator_category>::_Iter_random_cat _Cat;
; 997  : 	return (_Cat);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 998  : 	}

	ret	0
??$_Iter_random@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@0@Z ENDP ; std::_Iter_random<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *>
_TEXT	ENDS
PUBLIC	??$_Copy_opt@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@Urandom_access_iterator_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Copy_opt@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@Urandom_access_iterator_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Copy_opt@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@Urandom_access_iterator_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_opt<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::random_access_iterator_tag>, COMDAT

; 2470 : 	_DEBUG_RANGE(_First, _Last);
; 2471 : 	for (; _First != _Last; ++_Dest, ++_First)

	mov	ecx, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	ecx, edx
	je	SHORT $LN1@Copy_opt@3
	push	esi
$LL3@Copy_opt@3:

; 2472 : 		*_Dest = *_First;

	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
	add	ecx, 4
	add	eax, 4
	cmp	ecx, edx
	jne	SHORT $LL3@Copy_opt@3
	pop	esi
$LN1@Copy_opt@3:

; 2473 : 	return (_Dest);
; 2474 : 	}

	ret	0
??$_Copy_opt@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@Urandom_access_iterator_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_opt<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	??$_Fill@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V123@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@0ABV120@@Z ; std::_Fill<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Fill@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V123@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@0ABV120@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$_Fill@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V123@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@0ABV120@@Z PROC ; std::_Fill<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >, COMDAT

; 3157 : 	_DEBUG_RANGE(_First, _Last);
; 3158 : 	for (; _First != _Last; ++_First)

	mov	eax, DWORD PTR __First$[esp-4]
	mov	ecx, DWORD PTR __Last$[esp-4]
	cmp	eax, ecx
	je	SHORT $LN1@Fill
	mov	edx, DWORD PTR __Val$[esp-4]
	push	esi
$LL3@Fill:

; 3159 : 		*_First = _Val;

	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [eax], esi
	add	eax, 4
	cmp	eax, ecx
	jne	SHORT $LL3@Fill
	pop	esi
$LN1@Fill:

; 3160 : 	}

	ret	0
??$_Fill@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V123@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@0ABV120@@Z ENDP ; std::_Fill<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >
_TEXT	ENDS
PUBLIC	??$_Move_cat@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@YA?AU_Undefined_move_tag@0@ABQAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@@Z ; std::_Move_cat<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Move_cat@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@YA?AU_Undefined_move_tag@0@ABQAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
??$_Move_cat@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@YA?AU_Undefined_move_tag@0@ABQAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@@Z PROC ; std::_Move_cat<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *>, COMDAT

; 1200 : 	{

	push	ecx

; 1201 : 		typename _Move_operation_category<typename iterator_traits<_Iter>::value_type>::_Move_cat _Cat;
; 1202 : 		return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1203 : 	}

	pop	ecx
	ret	0
??$_Move_cat@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@YA?AU_Undefined_move_tag@0@ABQAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@@Z ENDP ; std::_Move_cat<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *>
_TEXT	ENDS
PUBLIC	??$_Fill@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V123@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@0ABV120@@Z ; std::_Fill<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Fill@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V123@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@0ABV120@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$_Fill@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V123@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@0ABV120@@Z PROC ; std::_Fill<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >, COMDAT

; 3157 : 	_DEBUG_RANGE(_First, _Last);
; 3158 : 	for (; _First != _Last; ++_First)

	mov	eax, DWORD PTR __First$[esp-4]
	mov	ecx, DWORD PTR __Last$[esp-4]
	cmp	eax, ecx
	je	SHORT $LN1@Fill@2
	mov	edx, DWORD PTR __Val$[esp-4]
	push	esi
$LL3@Fill@2:

; 3159 : 		*_First = _Val;

	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [eax], esi
	add	eax, 4
	cmp	eax, ecx
	jne	SHORT $LL3@Fill@2
	pop	esi
$LN1@Fill@2:

; 3160 : 	}

	ret	0
??$_Fill@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V123@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@0ABV120@@Z ENDP ; std::_Fill<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >
_TEXT	ENDS
PUBLIC	??$_Move_cat@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@YA?AU_Undefined_move_tag@0@ABQAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@@Z ; std::_Move_cat<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Move_cat@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@YA?AU_Undefined_move_tag@0@ABQAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
??$_Move_cat@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@YA?AU_Undefined_move_tag@0@ABQAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@@Z PROC ; std::_Move_cat<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *>, COMDAT

; 1200 : 	{

	push	ecx

; 1201 : 		typename _Move_operation_category<typename iterator_traits<_Iter>::value_type>::_Move_cat _Cat;
; 1202 : 		return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1203 : 	}

	pop	ecx
	ret	0
??$_Move_cat@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@YA?AU_Undefined_move_tag@0@ABQAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@@Z ENDP ; std::_Move_cat<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *>
_TEXT	ENDS
PUBLIC	??$_Fill@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V123@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@0ABV120@@Z ; std::_Fill<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Fill@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V123@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@0ABV120@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$_Fill@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V123@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@0ABV120@@Z PROC ; std::_Fill<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >, COMDAT

; 3157 : 	_DEBUG_RANGE(_First, _Last);
; 3158 : 	for (; _First != _Last; ++_First)

	mov	eax, DWORD PTR __First$[esp-4]
	mov	ecx, DWORD PTR __Last$[esp-4]
	cmp	eax, ecx
	je	SHORT $LN1@Fill@3
	mov	edx, DWORD PTR __Val$[esp-4]
	push	esi
$LL3@Fill@3:

; 3159 : 		*_First = _Val;

	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [eax], esi
	add	eax, 4
	cmp	eax, ecx
	jne	SHORT $LL3@Fill@3
	pop	esi
$LN1@Fill@3:

; 3160 : 	}

	ret	0
??$_Fill@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V123@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@0ABV120@@Z ENDP ; std::_Fill<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >
_TEXT	ENDS
PUBLIC	??$_Move_cat@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@YA?AU_Undefined_move_tag@0@ABQAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@@Z ; std::_Move_cat<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Move_cat@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@YA?AU_Undefined_move_tag@0@ABQAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
??$_Move_cat@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@YA?AU_Undefined_move_tag@0@ABQAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@@Z PROC ; std::_Move_cat<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *>, COMDAT

; 1200 : 	{

	push	ecx

; 1201 : 		typename _Move_operation_category<typename iterator_traits<_Iter>::value_type>::_Move_cat _Cat;
; 1202 : 		return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1203 : 	}

	pop	ecx
	ret	0
??$_Move_cat@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@YA?AU_Undefined_move_tag@0@ABQAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@@Z ENDP ; std::_Move_cat<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *>
_TEXT	ENDS
PUBLIC	??$_Copy_backward_opt@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@Urandom_access_iterator_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Copy_backward_opt@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@Urandom_access_iterator_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Copy_backward_opt@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@Urandom_access_iterator_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_backward_opt<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::random_access_iterator_tag>, COMDAT

; 2674 : 	_DEBUG_RANGE(_First, _Last);
; 2675 : 	while (_First != _Last)

	mov	edx, DWORD PTR __First$[esp-4]
	mov	ecx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	edx, ecx
	je	SHORT $LN1@Copy_backw
	push	esi
$LL2@Copy_backw:

; 2676 : 		*--_Dest = *--_Last;

	mov	esi, DWORD PTR [ecx-4]
	sub	ecx, 4
	sub	eax, 4
	mov	DWORD PTR [eax], esi
	cmp	ecx, edx
	jne	SHORT $LL2@Copy_backw
	pop	esi
$LN1@Copy_backw:

; 2677 : 	return (_Dest);
; 2678 : 	}

	ret	0
??$_Copy_backward_opt@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@Urandom_access_iterator_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_backward_opt<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	??$_Copy_backward_opt@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@Urandom_access_iterator_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Copy_backward_opt@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@Urandom_access_iterator_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Copy_backward_opt@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@Urandom_access_iterator_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_backward_opt<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::random_access_iterator_tag>, COMDAT

; 2674 : 	_DEBUG_RANGE(_First, _Last);
; 2675 : 	while (_First != _Last)

	mov	edx, DWORD PTR __First$[esp-4]
	mov	ecx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	edx, ecx
	je	SHORT $LN1@Copy_backw@2
	push	esi
$LL2@Copy_backw@2:

; 2676 : 		*--_Dest = *--_Last;

	mov	esi, DWORD PTR [ecx-4]
	sub	ecx, 4
	sub	eax, 4
	mov	DWORD PTR [eax], esi
	cmp	ecx, edx
	jne	SHORT $LL2@Copy_backw@2
	pop	esi
$LN1@Copy_backw@2:

; 2677 : 	return (_Dest);
; 2678 : 	}

	ret	0
??$_Copy_backward_opt@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@Urandom_access_iterator_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_backward_opt<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	??$_Copy_backward_opt@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@Urandom_access_iterator_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Copy_backward_opt@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@Urandom_access_iterator_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Copy_backward_opt@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@Urandom_access_iterator_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_backward_opt<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::random_access_iterator_tag>, COMDAT

; 2674 : 	_DEBUG_RANGE(_First, _Last);
; 2675 : 	while (_First != _Last)

	mov	edx, DWORD PTR __First$[esp-4]
	mov	ecx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	edx, ecx
	je	SHORT $LN1@Copy_backw@3
	push	esi
$LL2@Copy_backw@3:

; 2676 : 		*--_Dest = *--_Last;

	mov	esi, DWORD PTR [ecx-4]
	sub	ecx, 4
	sub	eax, 4
	mov	DWORD PTR [eax], esi
	cmp	ecx, edx
	jne	SHORT $LL2@Copy_backw@3
	pop	esi
$LN1@Copy_backw@3:

; 2677 : 	return (_Dest);
; 2678 : 	}

	ret	0
??$_Copy_backward_opt@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@Urandom_access_iterator_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_backward_opt<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	??$_Construct@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V123@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@ABV120@@Z ; std::_Construct<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Construct@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V123@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@ABV120@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V123@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@ABV120@@Z PROC ; std::_Construct<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >, COMDAT

; 51   : 	void _FARQ *_Vptr = _Ptr;
; 52   : 	::new (_Vptr) _T1(_Val);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	test	eax, eax
	je	SHORT $LN3@Construct@4
	mov	ecx, DWORD PTR __Val$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN3@Construct@4:

; 53   : 	}

	ret	0
??$_Construct@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V123@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@ABV120@@Z ENDP ; std::_Construct<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >
_TEXT	ENDS
PUBLIC	??$_Destroy@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@@Z ; std::_Destroy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Destroy@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@@Z PROC ; std::_Destroy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >, COMDAT

; 59   : 	_DESTRUCTOR(_Ty, _Ptr);
; 60   : 	}

	ret	0
??$_Destroy@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@@Z ENDP ; std::_Destroy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >
_TEXT	ENDS
PUBLIC	??$_Construct@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V123@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@ABV120@@Z ; std::_Construct<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Construct@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V123@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@ABV120@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V123@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@ABV120@@Z PROC ; std::_Construct<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >, COMDAT

; 51   : 	void _FARQ *_Vptr = _Ptr;
; 52   : 	::new (_Vptr) _T1(_Val);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	test	eax, eax
	je	SHORT $LN3@Construct@5
	mov	ecx, DWORD PTR __Val$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN3@Construct@5:

; 53   : 	}

	ret	0
??$_Construct@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V123@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@ABV120@@Z ENDP ; std::_Construct<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >
_TEXT	ENDS
PUBLIC	??$_Destroy@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@@Z ; std::_Destroy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Destroy@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@@Z PROC ; std::_Destroy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >, COMDAT

; 59   : 	_DESTRUCTOR(_Ty, _Ptr);
; 60   : 	}

	ret	0
??$_Destroy@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@@Z ENDP ; std::_Destroy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >
_TEXT	ENDS
PUBLIC	??$_Construct@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V123@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@ABV120@@Z ; std::_Construct<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Construct@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V123@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@ABV120@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V123@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@ABV120@@Z PROC ; std::_Construct<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >, COMDAT

; 51   : 	void _FARQ *_Vptr = _Ptr;
; 52   : 	::new (_Vptr) _T1(_Val);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	test	eax, eax
	je	SHORT $LN3@Construct@6
	mov	ecx, DWORD PTR __Val$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN3@Construct@6:

; 53   : 	}

	ret	0
??$_Construct@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V123@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@ABV120@@Z ENDP ; std::_Construct<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >
_TEXT	ENDS
PUBLIC	??$_Destroy@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@@Z ; std::_Destroy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Destroy@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@@Z PROC ; std::_Destroy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >, COMDAT

; 59   : 	_DESTRUCTOR(_Ty, _Ptr);
; 60   : 	}

	ret	0
??$_Destroy@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@@Z ENDP ; std::_Destroy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >
_TEXT	ENDS
EXTRN	__imp_??0exception@std@@QAE@ABV01@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0logic_error@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0logic_error@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0logic_error@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0logic_error@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0logic_error@std@@QAE@ABV01@@Z PROC			; std::logic_error::logic_error, COMDAT
; _this$ = ecx
	push	-1
	push	__ehhandler$??0logic_error@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi
	push	edi
	mov	edi, DWORD PTR ___that$[esp+20]
	mov	esi, ecx
	push	edi
	mov	DWORD PTR _this$[esp+28], esi
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	add	edi, 12					; 0000000cH
	push	edi
	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR __$EHRec$[esp+36], 0
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	pop	edi
	mov	eax, esi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0logic_error@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??0logic_error@std@@QAE@ABV01@@Z:
	mov	eax, OFFSET __ehfuncinfo$??0logic_error@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0logic_error@std@@QAE@ABV01@@Z ENDP			; std::logic_error::logic_error
PUBLIC	??0_Size_type_nosscl@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Size_type_nosscl::_Size_type_nosscl
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xstring
;	COMDAT ??0_Size_type_nosscl@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@I@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??0_Size_type_nosscl@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Size_type_nosscl::_Size_type_nosscl, COMDAT
; _this$ = ecx

; 536  :     _Size_type_nosscl(size_t _Val): _Value(_Val) { }

	mov	eax, ecx
	mov	ecx, DWORD PTR __Val$[esp-4]
	mov	DWORD PTR [eax], ecx
	ret	4
??0_Size_type_nosscl@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Size_type_nosscl::_Size_type_nosscl
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0length_error@std@@QAE@ABV01@@Z PROC			; std::length_error::length_error, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR ___that$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	??0logic_error@std@@QAE@ABV01@@Z
	mov	DWORD PTR [esi], OFFSET ??_7length_error@std@@6B@
	mov	eax, esi
	pop	esi
	ret	4
??0length_error@std@@QAE@ABV01@@Z ENDP			; std::length_error::length_error
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR ___that$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
	mov	eax, esi
	pop	esi
	ret	4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??9?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QBE_NABV012@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Const_iterator<0>::operator!=
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ??9?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QBE_NABV012@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Const_iterator<0>::operator!=, COMDAT
; _this$ = ecx

; 303  : 			return (!(*this == _Right));

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	setne	cl
	mov	al, cl

; 304  : 			}

	ret	4
??9?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QBE_NABV012@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Const_iterator<0>::operator!=
_TEXT	ENDS
PUBLIC	??9?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QBE_NABV012@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Const_iterator<0>::operator!=
; Function compile flags: /Ogtpy
;	COMDAT ??9?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QBE_NABV012@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Const_iterator<0>::operator!=, COMDAT
; _this$ = ecx

; 303  : 			return (!(*this == _Right));

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	setne	cl
	mov	al, cl

; 304  : 			}

	ret	4
??9?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QBE_NABV012@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Const_iterator<0>::operator!=
_TEXT	ENDS
PUBLIC	??9?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QBE_NABV012@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Const_iterator<0>::operator!=
; Function compile flags: /Ogtpy
;	COMDAT ??9?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QBE_NABV012@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Const_iterator<0>::operator!=, COMDAT
; _this$ = ecx

; 303  : 			return (!(*this == _Right));

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	setne	cl
	mov	al, cl

; 304  : 			}

	ret	4
??9?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QBE_NABV012@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Const_iterator<0>::operator!=
_TEXT	ENDS
PUBLIC	??R?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@std@@QBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator()
EXTRN	__imp_??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDU_Size_type_nosscl@01@@Z:PROC
EXTRN	__imp_?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ:PROC
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\functional
;	COMDAT ??R?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@std@@QBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
??R?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@std@@QBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator(), COMDAT
; _this$ = ecx

; 1283 : 		size_t _Val = 2166136261U;
; 1284 : 		size_t _First = 0;
; 1285 : 		size_t _Last = _Keyval.size();

	mov	ecx, DWORD PTR __Keyval$[esp-4]
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	ebp, -2128831035			; 811c9dc5H
	xor	esi, esi
	call	DWORD PTR __imp_?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
	mov	ebx, eax

; 1286 : 		size_t _Stride = 1 + _Last / 10;

	mov	eax, -858993459				; cccccccdH
	mul	ebx
	mov	edi, edx
	shr	edi, 3
	inc	edi

; 1287 : 
; 1288 : 		if (_Stride < _Last)

	cmp	edi, ebx
	jae	SHORT $LN4@operator

; 1289 : 			_Last -= _Stride;

	sub	ebx, edi
$LN4@operator:

; 1290 : 		for(; _First < _Last; _First += _Stride)

	test	ebx, ebx
	jbe	SHORT $LN11@operator
	npad	2
$LL3@operator:

; 1291 : 			_Val = 16777619U * _Val ^ (size_t)_Keyval[_First];

	push	ecx
	mov	ecx, DWORD PTR __Keyval$[esp+16]
	mov	eax, esp
	mov	DWORD PTR [eax], esi
	call	DWORD PTR __imp_??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDU_Size_type_nosscl@01@@Z
	imul	ebp, 16777619				; 01000193H
	movsx	eax, BYTE PTR [eax]
	add	esi, edi
	xor	ebp, eax
	cmp	esi, ebx
	jb	SHORT $LL3@operator
$LN11@operator:

; 1292 : 		return (_Val);
; 1293 : 		}

	pop	edi
	pop	esi
	mov	eax, ebp
	pop	ebp
	pop	ebx
	ret	4
??R?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@std@@QBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator()
_TEXT	ENDS
PUBLIC	??E?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEAAV012@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Const_iterator<0>::operator++
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ??E?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??E?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEAAV012@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Const_iterator<0>::operator++, COMDAT
; _this$ = ecx

; 235  : 			{	// preincrement

	mov	eax, ecx

; 236  : 
; 237  :  #if _HAS_ITERATOR_DEBUGGING
; 238  : 			if (this->_Mycont == 0
; 239  : 				|| _Ptr == 0
; 240  : 				|| _Ptr == ((_Myt *)this->_Mycont)->_Myhead)
; 241  : 				{
; 242  : 				_DEBUG_ERROR("list iterator not incrementable");
; 243  : 				_SCL_SECURE_TRAITS_OUT_OF_RANGE;
; 244  : 				}
; 245  :  #else
; 246  : 			_SCL_SECURE_TRAITS_VALIDATE(this->_Has_container());
; 247  : 			_SCL_SECURE_TRAITS_VALIDATE_RANGE(_Ptr != ((_Myt *)(this->_Getmycont()))->_Myhead);
; 248  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 249  : 
; 250  : 			_Ptr = _Nextnode(_Ptr);

	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 251  : 			return (*this);
; 252  : 			}

	ret	0
??E?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEAAV012@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Const_iterator<0>::operator++
_TEXT	ENDS
PUBLIC	??E?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEAAV012@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Const_iterator<0>::operator++
; Function compile flags: /Ogtpy
;	COMDAT ??E?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??E?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEAAV012@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Const_iterator<0>::operator++, COMDAT
; _this$ = ecx

; 235  : 			{	// preincrement

	mov	eax, ecx

; 236  : 
; 237  :  #if _HAS_ITERATOR_DEBUGGING
; 238  : 			if (this->_Mycont == 0
; 239  : 				|| _Ptr == 0
; 240  : 				|| _Ptr == ((_Myt *)this->_Mycont)->_Myhead)
; 241  : 				{
; 242  : 				_DEBUG_ERROR("list iterator not incrementable");
; 243  : 				_SCL_SECURE_TRAITS_OUT_OF_RANGE;
; 244  : 				}
; 245  :  #else
; 246  : 			_SCL_SECURE_TRAITS_VALIDATE(this->_Has_container());
; 247  : 			_SCL_SECURE_TRAITS_VALIDATE_RANGE(_Ptr != ((_Myt *)(this->_Getmycont()))->_Myhead);
; 248  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 249  : 
; 250  : 			_Ptr = _Nextnode(_Ptr);

	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 251  : 			return (*this);
; 252  : 			}

	ret	0
??E?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEAAV012@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Const_iterator<0>::operator++
_TEXT	ENDS
PUBLIC	??E?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEAAV012@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Const_iterator<0>::operator++
; Function compile flags: /Ogtpy
;	COMDAT ??E?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??E?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEAAV012@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Const_iterator<0>::operator++, COMDAT
; _this$ = ecx

; 235  : 			{	// preincrement

	mov	eax, ecx

; 236  : 
; 237  :  #if _HAS_ITERATOR_DEBUGGING
; 238  : 			if (this->_Mycont == 0
; 239  : 				|| _Ptr == 0
; 240  : 				|| _Ptr == ((_Myt *)this->_Mycont)->_Myhead)
; 241  : 				{
; 242  : 				_DEBUG_ERROR("list iterator not incrementable");
; 243  : 				_SCL_SECURE_TRAITS_OUT_OF_RANGE;
; 244  : 				}
; 245  :  #else
; 246  : 			_SCL_SECURE_TRAITS_VALIDATE(this->_Has_container());
; 247  : 			_SCL_SECURE_TRAITS_VALIDATE_RANGE(_Ptr != ((_Myt *)(this->_Getmycont()))->_Myhead);
; 248  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 249  : 
; 250  : 			_Ptr = _Nextnode(_Ptr);

	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 251  : 			return (*this);
; 252  : 			}

	ret	0
??E?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEAAV012@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Const_iterator<0>::operator++
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE@XZ ; std::_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::~_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE@XZ PROC ; std::_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::~_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >, COMDAT
; _this$ = ecx
	ret	0
??1?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE@XZ ENDP ; std::_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::~_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE@XZ ; std::_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::~_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE@XZ PROC ; std::_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::~_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >, COMDAT
; _this$ = ecx
	ret	0
??1?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE@XZ ENDP ; std::_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::~_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE@XZ ; std::_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::~_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE@XZ PROC ; std::_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::~_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >, COMDAT
; _this$ = ecx
	ret	0
??1?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE@XZ ENDP ; std::_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::~_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
_TEXT	ENDS
PUBLIC	??1?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ ; std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::~_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ PROC ; std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::~_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >, COMDAT
; _this$ = ecx
	ret	0
??1?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ ENDP ; std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::~_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >
_TEXT	ENDS
PUBLIC	??1?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ ; std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::~_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ PROC ; std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::~_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >, COMDAT
; _this$ = ecx
	ret	0
??1?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ ENDP ; std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::~_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >
_TEXT	ENDS
PUBLIC	??1?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ ; std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::~_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ PROC ; std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::~_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >, COMDAT
; _this$ = ecx
	ret	0
??1?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ ENDP ; std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::~_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >
_TEXT	ENDS
PUBLIC	??R?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@QBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator()
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xhash
;	COMDAT ??R?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@QBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
_TEXT	SEGMENT
__Keyval1$ = 8						; size = 4
__Keyval2$ = 12						; size = 4
??R?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@QBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z PROC ; stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator(), COMDAT
; _this$ = ecx

; 180  : 		return (!_Keyeqobj(_Keyval1, _Keyval2));

	mov	eax, DWORD PTR __Keyval2$[esp-4]
	mov	ecx, DWORD PTR __Keyval1$[esp-4]
	push	eax
	push	ecx
	call	DWORD PTR __imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
	xor	edx, edx
	add	esp, 8
	test	al, al
	sete	dl
	mov	al, dl

; 181  : 		}

	ret	8
??R?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@QBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ENDP ; stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator()
_TEXT	ENDS
PUBLIC	?max_size@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QBEIXZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::max_size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?max_size@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QBEIXZ PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::max_size, COMDAT
; _this$ = ecx

; 731  : 		return (this->_Alval.max_size());

	mov	eax, 1073741823				; 3fffffffH

; 732  : 		}

	ret	0
?max_size@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QBEIXZ ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::max_size
_TEXT	ENDS
PUBLIC	??0?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>::_Iterator<0>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ??0?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>::_Iterator<0>, COMDAT
; _this$ = ecx

; 348  : 		_Iterator()

	mov	eax, ecx
	mov	DWORD PTR [eax], 0

; 349  : 			{	// construct with null node
; 350  : 			}

	ret	0
??0?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>::_Iterator<0>
_TEXT	ENDS
PUBLIC	??0?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>::_Iterator<0>
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>::_Iterator<0>, COMDAT
; _this$ = ecx

; 367  : 			{	// construct with node pointer _Pnode

	mov	eax, ecx
	mov	ecx, DWORD PTR __Pnode$[esp-4]
	mov	DWORD PTR [eax], ecx

; 368  : 			}

	ret	4
??0?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>::_Iterator<0>
_TEXT	ENDS
PUBLIC	??F?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEAAV012@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>::operator--
; Function compile flags: /Ogtpy
;	COMDAT ??F?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??F?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEAAV012@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>::operator--, COMDAT
; _this$ = ecx

; 416  : 			{	// predecrement

	mov	eax, ecx

; 417  : 			--(*(_Mybase_iter *)this);

	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx

; 418  : 			return (*this);
; 419  : 			}

	ret	0
??F?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEAAV012@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>::operator--
_TEXT	ENDS
PUBLIC	??D?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QBEABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Const_iterator<0>::operator*
; Function compile flags: /Ogtpy
;	COMDAT ??D?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QBEABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@XZ
_TEXT	SEGMENT
??D?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QBEABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Const_iterator<0>::operator*, COMDAT
; _this$ = ecx

; 212  : 
; 213  :  #if _HAS_ITERATOR_DEBUGGING
; 214  : 			if (this->_Mycont == 0
; 215  : 				|| _Ptr == 0
; 216  : 				|| _Ptr == ((_Myt *)this->_Mycont)->_Myhead)
; 217  : 				{
; 218  : 				_DEBUG_ERROR("list iterator not dereferencable");
; 219  : 				_SCL_SECURE_TRAITS_OUT_OF_RANGE;
; 220  : 				}
; 221  :  #else
; 222  : 			_SCL_SECURE_TRAITS_VALIDATE(this->_Has_container());
; 223  : 			_SCL_SECURE_TRAITS_VALIDATE_RANGE(_Ptr != ((_Myt *)(this->_Getmycont()))->_Myhead);
; 224  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 225  : 
; 226  : 			return (_Myval(_Ptr));

	mov	eax, DWORD PTR [ecx]
	add	eax, 8

; 227  : 			}

	ret	0
??D?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QBEABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Const_iterator<0>::operator*
_TEXT	ENDS
PUBLIC	?max_size@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QBEIXZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::max_size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?max_size@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QBEIXZ PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::max_size, COMDAT
; _this$ = ecx

; 731  : 		return (this->_Alval.max_size());

	mov	eax, 1073741823				; 3fffffffH

; 732  : 		}

	ret	0
?max_size@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QBEIXZ ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::max_size
_TEXT	ENDS
PUBLIC	??0?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>::_Iterator<0>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ??0?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>::_Iterator<0>, COMDAT
; _this$ = ecx

; 348  : 		_Iterator()

	mov	eax, ecx
	mov	DWORD PTR [eax], 0

; 349  : 			{	// construct with null node
; 350  : 			}

	ret	0
??0?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>::_Iterator<0>
_TEXT	ENDS
PUBLIC	??0?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>::_Iterator<0>
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>::_Iterator<0>, COMDAT
; _this$ = ecx

; 367  : 			{	// construct with node pointer _Pnode

	mov	eax, ecx
	mov	ecx, DWORD PTR __Pnode$[esp-4]
	mov	DWORD PTR [eax], ecx

; 368  : 			}

	ret	4
??0?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>::_Iterator<0>
_TEXT	ENDS
PUBLIC	??F?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEAAV012@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>::operator--
; Function compile flags: /Ogtpy
;	COMDAT ??F?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??F?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEAAV012@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>::operator--, COMDAT
; _this$ = ecx

; 416  : 			{	// predecrement

	mov	eax, ecx

; 417  : 			--(*(_Mybase_iter *)this);

	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx

; 418  : 			return (*this);
; 419  : 			}

	ret	0
??F?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEAAV012@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>::operator--
_TEXT	ENDS
PUBLIC	??D?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QBEABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Const_iterator<0>::operator*
; Function compile flags: /Ogtpy
;	COMDAT ??D?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QBEABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@XZ
_TEXT	SEGMENT
??D?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QBEABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Const_iterator<0>::operator*, COMDAT
; _this$ = ecx

; 212  : 
; 213  :  #if _HAS_ITERATOR_DEBUGGING
; 214  : 			if (this->_Mycont == 0
; 215  : 				|| _Ptr == 0
; 216  : 				|| _Ptr == ((_Myt *)this->_Mycont)->_Myhead)
; 217  : 				{
; 218  : 				_DEBUG_ERROR("list iterator not dereferencable");
; 219  : 				_SCL_SECURE_TRAITS_OUT_OF_RANGE;
; 220  : 				}
; 221  :  #else
; 222  : 			_SCL_SECURE_TRAITS_VALIDATE(this->_Has_container());
; 223  : 			_SCL_SECURE_TRAITS_VALIDATE_RANGE(_Ptr != ((_Myt *)(this->_Getmycont()))->_Myhead);
; 224  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 225  : 
; 226  : 			return (_Myval(_Ptr));

	mov	eax, DWORD PTR [ecx]
	add	eax, 8

; 227  : 			}

	ret	0
??D?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QBEABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Const_iterator<0>::operator*
_TEXT	ENDS
PUBLIC	?max_size@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QBEIXZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::max_size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?max_size@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QBEIXZ PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::max_size, COMDAT
; _this$ = ecx

; 731  : 		return (this->_Alval.max_size());

	mov	eax, 1073741823				; 3fffffffH

; 732  : 		}

	ret	0
?max_size@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QBEIXZ ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::max_size
_TEXT	ENDS
PUBLIC	??0?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>::_Iterator<0>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ??0?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>::_Iterator<0>, COMDAT
; _this$ = ecx

; 348  : 		_Iterator()

	mov	eax, ecx
	mov	DWORD PTR [eax], 0

; 349  : 			{	// construct with null node
; 350  : 			}

	ret	0
??0?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>::_Iterator<0>
_TEXT	ENDS
PUBLIC	??0?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>::_Iterator<0>
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>::_Iterator<0>, COMDAT
; _this$ = ecx

; 367  : 			{	// construct with node pointer _Pnode

	mov	eax, ecx
	mov	ecx, DWORD PTR __Pnode$[esp-4]
	mov	DWORD PTR [eax], ecx

; 368  : 			}

	ret	4
??0?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>::_Iterator<0>
_TEXT	ENDS
PUBLIC	??F?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEAAV012@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>::operator--
; Function compile flags: /Ogtpy
;	COMDAT ??F?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??F?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEAAV012@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>::operator--, COMDAT
; _this$ = ecx

; 416  : 			{	// predecrement

	mov	eax, ecx

; 417  : 			--(*(_Mybase_iter *)this);

	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx

; 418  : 			return (*this);
; 419  : 			}

	ret	0
??F?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEAAV012@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>::operator--
_TEXT	ENDS
PUBLIC	??D?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QBEABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Const_iterator<0>::operator*
; Function compile flags: /Ogtpy
;	COMDAT ??D?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QBEABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@XZ
_TEXT	SEGMENT
??D?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QBEABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Const_iterator<0>::operator*, COMDAT
; _this$ = ecx

; 212  : 
; 213  :  #if _HAS_ITERATOR_DEBUGGING
; 214  : 			if (this->_Mycont == 0
; 215  : 				|| _Ptr == 0
; 216  : 				|| _Ptr == ((_Myt *)this->_Mycont)->_Myhead)
; 217  : 				{
; 218  : 				_DEBUG_ERROR("list iterator not dereferencable");
; 219  : 				_SCL_SECURE_TRAITS_OUT_OF_RANGE;
; 220  : 				}
; 221  :  #else
; 222  : 			_SCL_SECURE_TRAITS_VALIDATE(this->_Has_container());
; 223  : 			_SCL_SECURE_TRAITS_VALIDATE_RANGE(_Ptr != ((_Myt *)(this->_Getmycont()))->_Myhead);
; 224  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 225  : 
; 226  : 			return (_Myval(_Ptr));

	mov	eax, DWORD PTR [ecx]
	add	eax, 8

; 227  : 			}

	ret	0
??D?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QBEABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Const_iterator<0>::operator*
_TEXT	ENDS
PUBLIC	??R?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@QBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator()
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xhash
;	COMDAT ??R?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@QBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
??R?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@QBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator(), COMDAT
; _this$ = ecx

; 175  : 		return ((size_t)_Hashobj(_Keyval));

	jmp	??R?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@std@@QBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator()
??R?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@QBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator()
_TEXT	ENDS
PUBLIC	?size@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEIXZ ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::size
; Function compile flags: /Ogtpy
;	COMDAT ?size@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEIXZ PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::size, COMDAT
; _this$ = ecx

; 417  : 		return (_List.size());

	mov	eax, DWORD PTR [ecx+12]

; 418  : 		}

	ret	0
?size@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEIXZ ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::size
_TEXT	ENDS
PUBLIC	?_Make_iter@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QBE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Make_iter
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ?_Make_iter@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QBE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QBE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Make_iter, COMDAT
; _this$ = ecx

; 580  : 		return (iterator(_Where._Ptr));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	ecx, DWORD PTR __Where$[esp-4]
	mov	DWORD PTR [eax], ecx

; 581  : 		}

	ret	8
?_Make_iter@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QBE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Make_iter
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node *>::destroy
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z PROC ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node *>::destroy, COMDAT
; _this$ = ecx

; 160  : 		_Destroy(_Ptr);
; 161  : 		}

	ret	4
?destroy@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z ENDP ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node *>::destroy
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAE@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@1@@Z ; std::_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??0?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAE@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAE@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@1@@Z PROC ; std::_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >, COMDAT
; _this$ = ecx

; 425  : 		{	// construct allocator from _Al

	mov	eax, ecx

; 426  : 		}

	ret	4
??0?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAE@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@1@@Z ENDP ; std::_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
_TEXT	ENDS
PUBLIC	??E?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE?AV012@H@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Const_iterator<0>::operator++
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ??E?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE?AV012@H@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Const_iterator<0>::operator++, COMDAT
; _this$ = ecx

; 256  : 			_Myt_iter _Tmp = *this;

	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], edx

; 257  : 			++*this;

	mov	edx, DWORD PTR [edx]
	mov	DWORD PTR [ecx], edx

; 258  : 			return (_Tmp);
; 259  : 			}

	ret	8
??E?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE?AV012@H@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Const_iterator<0>::operator++
_TEXT	ENDS
PUBLIC	?size@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEIXZ ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xhash
;	COMDAT ?size@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEIXZ PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::size, COMDAT
; _this$ = ecx

; 417  : 		return (_List.size());

	mov	eax, DWORD PTR [ecx+12]

; 418  : 		}

	ret	0
?size@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEIXZ ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::size
_TEXT	ENDS
PUBLIC	?_Make_iter@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QBE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Make_iter
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ?_Make_iter@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QBE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QBE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Make_iter, COMDAT
; _this$ = ecx

; 580  : 		return (iterator(_Where._Ptr));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	ecx, DWORD PTR __Where$[esp-4]
	mov	DWORD PTR [eax], ecx

; 581  : 		}

	ret	8
?_Make_iter@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QBE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Make_iter
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node *>::destroy
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z PROC ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node *>::destroy, COMDAT
; _this$ = ecx

; 160  : 		_Destroy(_Ptr);
; 161  : 		}

	ret	4
?destroy@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z ENDP ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node *>::destroy
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAE@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@1@@Z ; std::_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??0?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAE@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAE@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@1@@Z PROC ; std::_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >, COMDAT
; _this$ = ecx

; 425  : 		{	// construct allocator from _Al

	mov	eax, ecx

; 426  : 		}

	ret	4
??0?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAE@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@1@@Z ENDP ; std::_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
_TEXT	ENDS
PUBLIC	??E?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE?AV012@H@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Const_iterator<0>::operator++
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ??E?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE?AV012@H@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Const_iterator<0>::operator++, COMDAT
; _this$ = ecx

; 256  : 			_Myt_iter _Tmp = *this;

	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], edx

; 257  : 			++*this;

	mov	edx, DWORD PTR [edx]
	mov	DWORD PTR [ecx], edx

; 258  : 			return (_Tmp);
; 259  : 			}

	ret	8
??E?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE?AV012@H@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Const_iterator<0>::operator++
_TEXT	ENDS
PUBLIC	?size@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEIXZ ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xhash
;	COMDAT ?size@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEIXZ PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::size, COMDAT
; _this$ = ecx

; 417  : 		return (_List.size());

	mov	eax, DWORD PTR [ecx+12]

; 418  : 		}

	ret	0
?size@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEIXZ ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::size
_TEXT	ENDS
PUBLIC	?_Make_iter@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QBE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Make_iter
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ?_Make_iter@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QBE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QBE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Make_iter, COMDAT
; _this$ = ecx

; 580  : 		return (iterator(_Where._Ptr));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	ecx, DWORD PTR __Where$[esp-4]
	mov	DWORD PTR [eax], ecx

; 581  : 		}

	ret	8
?_Make_iter@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QBE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Make_iter
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node *>::destroy
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z PROC ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node *>::destroy, COMDAT
; _this$ = ecx

; 160  : 		_Destroy(_Ptr);
; 161  : 		}

	ret	4
?destroy@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z ENDP ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node *>::destroy
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAE@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@1@@Z ; std::_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??0?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAE@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAE@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@1@@Z PROC ; std::_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >, COMDAT
; _this$ = ecx

; 425  : 		{	// construct allocator from _Al

	mov	eax, ecx

; 426  : 		}

	ret	4
??0?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAE@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@1@@Z ENDP ; std::_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
_TEXT	ENDS
PUBLIC	??E?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE?AV012@H@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Const_iterator<0>::operator++
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ??E?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE?AV012@H@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Const_iterator<0>::operator++, COMDAT
; _this$ = ecx

; 256  : 			_Myt_iter _Tmp = *this;

	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], edx

; 257  : 			++*this;

	mov	edx, DWORD PTR [edx]
	mov	DWORD PTR [ecx], edx

; 258  : 			return (_Tmp);
; 259  : 			}

	ret	8
??E?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE?AV012@H@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Const_iterator<0>::operator++
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@I@Z ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node>::allocate
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@I@Z PROC ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node>::allocate, COMDAT
; _this$ = ecx

; 145  : 		return (_Allocate(_Count, (pointer)0));

	mov	eax, DWORD PTR __Count$[esp-4]
	push	0
	push	eax
	call	??$_Allocate@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@YAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IPAU120@@Z ; std::_Allocate<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node>
	add	esp, 8

; 146  : 		}

	ret	4
?allocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@I@Z ENDP ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node>::allocate
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@ABQAU342@@Z ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node *>::construct
; Function compile flags: /Ogtpy
;	COMDAT ?construct@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@ABQAU342@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@ABQAU342@@Z PROC ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node *>::construct, COMDAT
; _this$ = ecx

; 155  : 		_Construct(_Ptr, _Val);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	test	eax, eax
	je	SHORT $LN5@construct
	mov	ecx, DWORD PTR __Val$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN5@construct:

; 156  : 		}

	ret	8
?construct@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@ABQAU342@@Z ENDP ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node *>::construct
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@I@Z ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >::allocate
; Function compile flags: /Ogtpy
;	COMDAT ?allocate@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@I@Z PROC ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >::allocate, COMDAT
; _this$ = ecx

; 145  : 		return (_Allocate(_Count, (pointer)0));

	mov	eax, DWORD PTR __Count$[esp-4]
	push	0
	push	eax
	call	??$_Allocate@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IPAV120@@Z ; std::_Allocate<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >
	add	esp, 8

; 146  : 		}

	ret	4
?allocate@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@I@Z ENDP ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >::allocate
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@I@Z ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node>::allocate
; Function compile flags: /Ogtpy
;	COMDAT ?allocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@I@Z PROC ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node>::allocate, COMDAT
; _this$ = ecx

; 145  : 		return (_Allocate(_Count, (pointer)0));

	mov	eax, DWORD PTR __Count$[esp-4]
	push	0
	push	eax
	call	??$_Allocate@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@YAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IPAU120@@Z ; std::_Allocate<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node>
	add	esp, 8

; 146  : 		}

	ret	4
?allocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@I@Z ENDP ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node>::allocate
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@ABQAU342@@Z ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node *>::construct
; Function compile flags: /Ogtpy
;	COMDAT ?construct@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@ABQAU342@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@ABQAU342@@Z PROC ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node *>::construct, COMDAT
; _this$ = ecx

; 155  : 		_Construct(_Ptr, _Val);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	test	eax, eax
	je	SHORT $LN5@construct@2
	mov	ecx, DWORD PTR __Val$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN5@construct@2:

; 156  : 		}

	ret	8
?construct@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@ABQAU342@@Z ENDP ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node *>::construct
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@I@Z ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >::allocate
; Function compile flags: /Ogtpy
;	COMDAT ?allocate@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@I@Z PROC ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >::allocate, COMDAT
; _this$ = ecx

; 145  : 		return (_Allocate(_Count, (pointer)0));

	mov	eax, DWORD PTR __Count$[esp-4]
	push	0
	push	eax
	call	??$_Allocate@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IPAV120@@Z ; std::_Allocate<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >
	add	esp, 8

; 146  : 		}

	ret	4
?allocate@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@I@Z ENDP ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >::allocate
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@I@Z ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node>::allocate
; Function compile flags: /Ogtpy
;	COMDAT ?allocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@I@Z PROC ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node>::allocate, COMDAT
; _this$ = ecx

; 145  : 		return (_Allocate(_Count, (pointer)0));

	mov	eax, DWORD PTR __Count$[esp-4]
	push	0
	push	eax
	call	??$_Allocate@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@YAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IPAU120@@Z ; std::_Allocate<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node>
	add	esp, 8

; 146  : 		}

	ret	4
?allocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@I@Z ENDP ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node>::allocate
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@ABQAU342@@Z ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node *>::construct
; Function compile flags: /Ogtpy
;	COMDAT ?construct@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@ABQAU342@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@ABQAU342@@Z PROC ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node *>::construct, COMDAT
; _this$ = ecx

; 155  : 		_Construct(_Ptr, _Val);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	test	eax, eax
	je	SHORT $LN5@construct@3
	mov	ecx, DWORD PTR __Val$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN5@construct@3:

; 156  : 		}

	ret	8
?construct@?$allocator@PAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@ABQAU342@@Z ENDP ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node *>::construct
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@I@Z ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >::allocate
; Function compile flags: /Ogtpy
;	COMDAT ?allocate@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@I@Z PROC ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >::allocate, COMDAT
; _this$ = ecx

; 145  : 		return (_Allocate(_Count, (pointer)0));

	mov	eax, DWORD PTR __Count$[esp-4]
	push	0
	push	eax
	call	??$_Allocate@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IPAV120@@Z ; std::_Allocate<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >
	add	esp, 8

; 146  : 		}

	ret	4
?allocate@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@I@Z ENDP ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >::allocate
_TEXT	ENDS
PUBLIC	?max_size@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QBEIXZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::max_size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ?max_size@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QBEIXZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::max_size, COMDAT
; _this$ = ecx

; 625  : 		return (this->_Alval.max_size());

	mov	eax, 134217727				; 07ffffffH

; 626  : 		}

	ret	0
?max_size@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QBEIXZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::max_size
_TEXT	ENDS
PUBLIC	??0?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@1@@Z ; std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@1@@Z PROC ; std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >, COMDAT
; _this$ = ecx

; 47   : 		{	// construct allocator from _Al

	mov	eax, ecx

; 48   : 		}

	ret	4
??0?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@1@@Z ENDP ; std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >
_TEXT	ENDS
PUBLIC	?max_size@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QBEIXZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::max_size
; Function compile flags: /Ogtpy
;	COMDAT ?max_size@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QBEIXZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::max_size, COMDAT
; _this$ = ecx

; 625  : 		return (this->_Alval.max_size());

	mov	eax, 134217727				; 07ffffffH

; 626  : 		}

	ret	0
?max_size@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QBEIXZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::max_size
_TEXT	ENDS
PUBLIC	??0?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@1@@Z ; std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@1@@Z PROC ; std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >, COMDAT
; _this$ = ecx

; 47   : 		{	// construct allocator from _Al

	mov	eax, ecx

; 48   : 		}

	ret	4
??0?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@1@@Z ENDP ; std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >
_TEXT	ENDS
PUBLIC	?max_size@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QBEIXZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::max_size
; Function compile flags: /Ogtpy
;	COMDAT ?max_size@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QBEIXZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::max_size, COMDAT
; _this$ = ecx

; 625  : 		return (this->_Alval.max_size());

	mov	eax, 134217727				; 07ffffffH

; 626  : 		}

	ret	0
?max_size@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QBEIXZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::max_size
_TEXT	ENDS
PUBLIC	??0?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@1@@Z ; std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@1@@Z PROC ; std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >, COMDAT
; _this$ = ecx

; 47   : 		{	// construct allocator from _Al

	mov	eax, ecx

; 48   : 		}

	ret	4
??0?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@1@@Z ENDP ; std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@1@@Z ; std::_Vector_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Vector_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??0?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@1@@Z PROC ; std::_Vector_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Vector_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >, COMDAT
; _this$ = ecx

; 333  : 		{	// construct with pointer _Ptr

	mov	eax, ecx
	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 334  : 		}

	ret	4
??0?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@1@@Z ENDP ; std::_Vector_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Vector_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::operator!=
; Function compile flags: /Ogtpy
;	COMDAT ??9?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::operator!=, COMDAT
; _this$ = ecx

; 216  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	setne	cl
	mov	al, cl

; 217  : 		}

	ret	4
??9?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::operator!=
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@1@@Z ; std::_Vector_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Vector_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@1@@Z PROC ; std::_Vector_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Vector_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >, COMDAT
; _this$ = ecx

; 333  : 		{	// construct with pointer _Ptr

	mov	eax, ecx
	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 334  : 		}

	ret	4
??0?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@1@@Z ENDP ; std::_Vector_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Vector_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::operator!=
; Function compile flags: /Ogtpy
;	COMDAT ??9?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::operator!=, COMDAT
; _this$ = ecx

; 216  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	setne	cl
	mov	al, cl

; 217  : 		}

	ret	4
??9?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::operator!=
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@1@@Z ; std::_Vector_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Vector_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@1@@Z PROC ; std::_Vector_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Vector_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >, COMDAT
; _this$ = ecx

; 333  : 		{	// construct with pointer _Ptr

	mov	eax, ecx
	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 334  : 		}

	ret	4
??0?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@1@@Z ENDP ; std::_Vector_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Vector_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::operator!=
; Function compile flags: /Ogtpy
;	COMDAT ??9?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::operator!=, COMDAT
; _this$ = ecx

; 216  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	setne	cl
	mov	al, cl

; 217  : 		}

	ret	4
??9?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::operator!=
_TEXT	ENDS
PUBLIC	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkArtifactClass@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkArtifactClass@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkArtifactClass@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkArtifactClass@@@Z$0
__ehfuncinfo$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkArtifactClass@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkArtifactClass@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkArtifactClass@@@Z
_TEXT	SEGMENT
$T227637 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Val1$ = 12						; size = 28
__Val2$ = 40						; size = 4
??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkArtifactClass@@@Z PROC ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *>, COMDAT

; 133  : 	{	// return pair composed from arguments

	push	-1
	push	__ehhandler$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkArtifactClass@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi
	mov	DWORD PTR $T227637[esp+20], 0

; 134  : 	return (pair<_Ty1, _Ty2>(_Val1, _Val2));

	mov	esi, DWORD PTR ___$ReturnUdt$[esp+16]
	lea	eax, DWORD PTR __Val1$[esp+16]
	push	eax
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[esp+32], 1
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR __Val2$[esp+16]
	mov	DWORD PTR [esi+28], ecx
	lea	ecx, DWORD PTR __Val1$[esp+16]
	mov	DWORD PTR $T227637[esp+20], 1
	mov	BYTE PTR __$EHRec$[esp+28], 0
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 135  : 	}

	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	mov	eax, esi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkArtifactClass@@@Z$0:
	lea	ecx, DWORD PTR __Val1$[ebp-4]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkArtifactClass@@@Z$1:
	mov	eax, DWORD PTR $T227637[ebp]
	and	eax, 1
	je	$LN5@make_pair
	and	DWORD PTR $T227637[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp-4]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@XZ
$LN5@make_pair:
	ret	0
__ehhandler$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkArtifactClass@@@Z:
	mov	eax, OFFSET __ehfuncinfo$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkArtifactClass@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkArtifactClass@@@Z ENDP ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *>
PUBLIC	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkSlotType@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkSlotType@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkSlotType@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkSlotType@@@Z$0
__ehfuncinfo$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkSlotType@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkSlotType@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkSlotType@@@Z
_TEXT	SEGMENT
$T227654 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Val1$ = 12						; size = 28
__Val2$ = 40						; size = 4
??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkSlotType@@@Z PROC ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *>, COMDAT

; 133  : 	{	// return pair composed from arguments

	push	-1
	push	__ehhandler$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkSlotType@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi
	mov	DWORD PTR $T227654[esp+20], 0

; 134  : 	return (pair<_Ty1, _Ty2>(_Val1, _Val2));

	mov	esi, DWORD PTR ___$ReturnUdt$[esp+16]
	lea	eax, DWORD PTR __Val1$[esp+16]
	push	eax
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[esp+32], 1
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR __Val2$[esp+16]
	mov	DWORD PTR [esi+28], ecx
	lea	ecx, DWORD PTR __Val1$[esp+16]
	mov	DWORD PTR $T227654[esp+20], 1
	mov	BYTE PTR __$EHRec$[esp+28], 0
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 135  : 	}

	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	mov	eax, esi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkSlotType@@@Z$0:
	lea	ecx, DWORD PTR __Val1$[ebp-4]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkSlotType@@@Z$1:
	mov	eax, DWORD PTR $T227654[ebp]
	and	eax, 1
	je	$LN5@make_pair@2
	and	DWORD PTR $T227654[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp-4]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@QAE@XZ
$LN5@make_pair@2:
	ret	0
__ehhandler$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkSlotType@@@Z:
	mov	eax, OFFSET __ehfuncinfo$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkSlotType@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkSlotType@@@Z ENDP ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *>
PUBLIC	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z$0
__ehfuncinfo$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z
_TEXT	SEGMENT
$T227671 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Val1$ = 12						; size = 28
__Val2$ = 40						; size = 4
??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z PROC ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>, COMDAT

; 133  : 	{	// return pair composed from arguments

	push	-1
	push	__ehhandler$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi
	mov	DWORD PTR $T227671[esp+20], 0

; 134  : 	return (pair<_Ty1, _Ty2>(_Val1, _Val2));

	mov	esi, DWORD PTR ___$ReturnUdt$[esp+16]
	lea	eax, DWORD PTR __Val1$[esp+16]
	push	eax
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[esp+32], 1
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR __Val2$[esp+16]
	mov	DWORD PTR [esi+28], ecx
	lea	ecx, DWORD PTR __Val1$[esp+16]
	mov	DWORD PTR $T227671[esp+20], 1
	mov	BYTE PTR __$EHRec$[esp+28], 0
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 135  : 	}

	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	mov	eax, esi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z$0:
	lea	ecx, DWORD PTR __Val1$[ebp-4]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z$1:
	mov	eax, DWORD PTR $T227671[ebp]
	and	eax, 1
	je	$LN5@make_pair@3
	and	DWORD PTR $T227671[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp-4]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
$LN5@make_pair@3:
	ret	0
__ehhandler$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z:
	mov	eax, OFFSET __ehfuncinfo$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ENDP ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
PUBLIC	??$_Construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@U12@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@ABU10@@Z ; std::_Construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$??$_Construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@U12@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@ABU10@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@U12@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@ABU10@@Z$0
__ehfuncinfo$??$_Construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@U12@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@ABU10@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@U12@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@ABU10@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@U12@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@ABU10@@Z
_TEXT	SEGMENT
$T227687 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Vptr$ = 8						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@U12@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@ABU10@@Z PROC ; std::_Construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >, COMDAT

; 50   : 	{	// construct object at _Ptr with value _Val

	push	-1
	push	__ehhandler$??$_Construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@U12@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@ABU10@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi

; 51   : 	void _FARQ *_Vptr = _Ptr;

	mov	esi, DWORD PTR __Ptr$[esp+16]
	mov	DWORD PTR __Vptr$[esp+16], esi

; 52   : 	::new (_Vptr) _T1(_Val);

	mov	DWORD PTR $T227687[esp+20], esi
	mov	DWORD PTR __$EHRec$[esp+28], 0
	test	esi, esi
	je	SHORT $LN3@Construct@7
	push	edi
	mov	edi, DWORD PTR __Val$[esp+20]
	push	edi
	mov	ecx, esi
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR [edi+28]
	mov	DWORD PTR [esi+28], eax
	pop	edi
$LN3@Construct@7:

; 53   : 	}

	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@U12@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@ABU10@@Z$0:
	mov	eax, DWORD PTR __Vptr$[ebp-4]
	push	eax
	mov	ecx, DWORD PTR $T227687[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@U12@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@ABU10@@Z:
	mov	eax, OFFSET __ehfuncinfo$??$_Construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@U12@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@ABU10@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@U12@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@ABU10@@Z ENDP ; std::_Construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >
PUBLIC	??$unchecked_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@00@Z ; stdext::unchecked_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$unchecked_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$unchecked_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@00@Z PROC ; stdext::unchecked_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *>, COMDAT

; 3605 : 		return (_STD _Copy_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3606 : 			_STD _Iter_random(_First, _Dest), _STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	ecx, edx
	je	SHORT $LN7@unchecked_
	push	esi
$LL9@unchecked_:
	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
	add	ecx, 4
	add	eax, 4
	cmp	ecx, edx
	jne	SHORT $LL9@unchecked_
	pop	esi
$LN7@unchecked_:

; 3607 : 	}

	ret	0
??$unchecked_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@00@Z ENDP ; stdext::unchecked_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *>
_TEXT	ENDS
PUBLIC	??$_Construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@U12@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@ABU10@@Z ; std::_Construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$??$_Construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@U12@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@ABU10@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@U12@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@ABU10@@Z$0
__ehfuncinfo$??$_Construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@U12@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@ABU10@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@U12@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@ABU10@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@U12@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@ABU10@@Z
_TEXT	SEGMENT
$T227735 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Vptr$ = 8						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@U12@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@ABU10@@Z PROC ; std::_Construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >, COMDAT

; 50   : 	{	// construct object at _Ptr with value _Val

	push	-1
	push	__ehhandler$??$_Construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@U12@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@ABU10@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi

; 51   : 	void _FARQ *_Vptr = _Ptr;

	mov	esi, DWORD PTR __Ptr$[esp+16]
	mov	DWORD PTR __Vptr$[esp+16], esi

; 52   : 	::new (_Vptr) _T1(_Val);

	mov	DWORD PTR $T227735[esp+20], esi
	mov	DWORD PTR __$EHRec$[esp+28], 0
	test	esi, esi
	je	SHORT $LN3@Construct@8
	push	edi
	mov	edi, DWORD PTR __Val$[esp+20]
	push	edi
	mov	ecx, esi
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR [edi+28]
	mov	DWORD PTR [esi+28], eax
	pop	edi
$LN3@Construct@8:

; 53   : 	}

	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@U12@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@ABU10@@Z$0:
	mov	eax, DWORD PTR __Vptr$[ebp-4]
	push	eax
	mov	ecx, DWORD PTR $T227735[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@U12@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@ABU10@@Z:
	mov	eax, OFFSET __ehfuncinfo$??$_Construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@U12@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@ABU10@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@U12@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@ABU10@@Z ENDP ; std::_Construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >
PUBLIC	??$unchecked_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@00@Z ; stdext::unchecked_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$unchecked_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$unchecked_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@00@Z PROC ; stdext::unchecked_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *>, COMDAT

; 3605 : 		return (_STD _Copy_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3606 : 			_STD _Iter_random(_First, _Dest), _STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	ecx, edx
	je	SHORT $LN7@unchecked_@2
	push	esi
$LL9@unchecked_@2:
	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
	add	ecx, 4
	add	eax, 4
	cmp	ecx, edx
	jne	SHORT $LL9@unchecked_@2
	pop	esi
$LN7@unchecked_@2:

; 3607 : 	}

	ret	0
??$unchecked_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@00@Z ENDP ; stdext::unchecked_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *>
_TEXT	ENDS
PUBLIC	??$_Construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@U12@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@ABU10@@Z ; std::_Construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$??$_Construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@U12@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@ABU10@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@U12@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@ABU10@@Z$0
__ehfuncinfo$??$_Construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@U12@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@ABU10@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@U12@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@ABU10@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@U12@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@ABU10@@Z
_TEXT	SEGMENT
$T227783 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Vptr$ = 8						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@U12@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@ABU10@@Z PROC ; std::_Construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >, COMDAT

; 50   : 	{	// construct object at _Ptr with value _Val

	push	-1
	push	__ehhandler$??$_Construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@U12@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@ABU10@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi

; 51   : 	void _FARQ *_Vptr = _Ptr;

	mov	esi, DWORD PTR __Ptr$[esp+16]
	mov	DWORD PTR __Vptr$[esp+16], esi

; 52   : 	::new (_Vptr) _T1(_Val);

	mov	DWORD PTR $T227783[esp+20], esi
	mov	DWORD PTR __$EHRec$[esp+28], 0
	test	esi, esi
	je	SHORT $LN3@Construct@9
	push	edi
	mov	edi, DWORD PTR __Val$[esp+20]
	push	edi
	mov	ecx, esi
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR [edi+28]
	mov	DWORD PTR [esi+28], eax
	pop	edi
$LN3@Construct@9:

; 53   : 	}

	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@U12@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@ABU10@@Z$0:
	mov	eax, DWORD PTR __Vptr$[ebp-4]
	push	eax
	mov	ecx, DWORD PTR $T227783[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@U12@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@ABU10@@Z:
	mov	eax, OFFSET __ehfuncinfo$??$_Construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@U12@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@ABU10@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@U12@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@ABU10@@Z ENDP ; std::_Construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >
PUBLIC	??$unchecked_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@00@Z ; stdext::unchecked_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$unchecked_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$unchecked_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@00@Z PROC ; stdext::unchecked_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *>, COMDAT

; 3605 : 		return (_STD _Copy_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3606 : 			_STD _Iter_random(_First, _Dest), _STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	ecx, edx
	je	SHORT $LN7@unchecked_@3
	push	esi
$LL9@unchecked_@3:
	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
	add	ecx, 4
	add	eax, 4
	cmp	ecx, edx
	jne	SHORT $LL9@unchecked_@3
	pop	esi
$LN7@unchecked_@3:

; 3607 : 	}

	ret	0
??$unchecked_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@00@Z ENDP ; stdext::unchecked_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *>
_TEXT	ENDS
PUBLIC	??$fill@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V123@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@0ABV120@@Z ; std::fill<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >
; Function compile flags: /Ogtpy
;	COMDAT ??$fill@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V123@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@0ABV120@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$fill@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V123@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@0ABV120@@Z PROC ; std::fill<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >, COMDAT

; 3187 : 	_Fill(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Val);

	mov	eax, DWORD PTR __First$[esp-4]
	mov	ecx, DWORD PTR __Last$[esp-4]
	cmp	eax, ecx
	je	SHORT $LN3@fill
	mov	edx, DWORD PTR __Val$[esp-4]
	push	esi
$LL5@fill:
	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [eax], esi
	add	eax, 4
	cmp	eax, ecx
	jne	SHORT $LL5@fill
	pop	esi
$LN3@fill:

; 3188 : 	}

	ret	0
??$fill@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V123@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@0ABV120@@Z ENDP ; std::fill<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >
_TEXT	ENDS
PUBLIC	??$fill@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V123@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@0ABV120@@Z ; std::fill<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >
; Function compile flags: /Ogtpy
;	COMDAT ??$fill@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V123@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@0ABV120@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$fill@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V123@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@0ABV120@@Z PROC ; std::fill<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >, COMDAT

; 3187 : 	_Fill(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Val);

	mov	eax, DWORD PTR __First$[esp-4]
	mov	ecx, DWORD PTR __Last$[esp-4]
	cmp	eax, ecx
	je	SHORT $LN3@fill@2
	mov	edx, DWORD PTR __Val$[esp-4]
	push	esi
$LL5@fill@2:
	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [eax], esi
	add	eax, 4
	cmp	eax, ecx
	jne	SHORT $LL5@fill@2
	pop	esi
$LN3@fill@2:

; 3188 : 	}

	ret	0
??$fill@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V123@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@0ABV120@@Z ENDP ; std::fill<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >
_TEXT	ENDS
PUBLIC	??$fill@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V123@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@0ABV120@@Z ; std::fill<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >
; Function compile flags: /Ogtpy
;	COMDAT ??$fill@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V123@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@0ABV120@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$fill@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V123@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@0ABV120@@Z PROC ; std::fill<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >, COMDAT

; 3187 : 	_Fill(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Val);

	mov	eax, DWORD PTR __First$[esp-4]
	mov	ecx, DWORD PTR __Last$[esp-4]
	cmp	eax, ecx
	je	SHORT $LN3@fill@3
	mov	edx, DWORD PTR __Val$[esp-4]
	push	esi
$LL5@fill@3:
	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [eax], esi
	add	eax, 4
	cmp	eax, ecx
	jne	SHORT $LL5@fill@3
	pop	esi
$LN3@fill@3:

; 3188 : 	}

	ret	0
??$fill@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V123@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@0ABV120@@Z ENDP ; std::fill<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >
_TEXT	ENDS
PUBLIC	??_G_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEPAXI@Z ; std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node::`scalar deleting destructor'
; Function compile flags: /Ogtpy
;	COMDAT ??_G_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEPAXI@Z PROC ; std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	lea	ecx, DWORD PTR [esi+8]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN10@scalar@4
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN10@scalar@4:
	mov	eax, esi
	pop	esi
	ret	4
??_G_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEPAXI@Z ENDP ; std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_G_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEPAXI@Z ; std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node::`scalar deleting destructor'
; Function compile flags: /Ogtpy
;	COMDAT ??_G_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEPAXI@Z PROC ; std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	lea	ecx, DWORD PTR [esi+8]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN10@scalar@5
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN10@scalar@5:
	mov	eax, esi
	pop	esi
	ret	4
??_G_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEPAXI@Z ENDP ; std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_G_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEPAXI@Z ; std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node::`scalar deleting destructor'
; Function compile flags: /Ogtpy
;	COMDAT ??_G_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEPAXI@Z PROC ; std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	lea	ecx, DWORD PTR [esi+8]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN10@scalar@6
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN10@scalar@6:
	mov	eax, esi
	pop	esi
	ret	4
??_G_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEPAXI@Z ENDP ; std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??$_Move_backward_opt@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@Urandom_access_iterator_tag@3@U_Undefined_move_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Move_backward_opt<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::random_access_iterator_tag,std::_Undefined_move_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Move_backward_opt@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@Urandom_access_iterator_tag@3@U_Undefined_move_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__First_dest_cat$ = 20					; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Move_backward_opt@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@Urandom_access_iterator_tag@3@U_Undefined_move_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Move_backward_opt<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::random_access_iterator_tag,std::_Undefined_move_tag>, COMDAT

; 2753 : 	return _Copy_backward_opt(_First, _Last, _Dest,
; 2754 : 		_First_dest_cat, _Ptr_cat(_First, _Dest), _Range_checked_iterator_tag());

	mov	ecx, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	edx, ecx
	je	SHORT $LN5@Move_backw
	push	esi
$LL6@Move_backw:
	mov	esi, DWORD PTR [ecx-4]
	sub	ecx, 4
	sub	eax, 4
	mov	DWORD PTR [eax], esi
	cmp	ecx, edx
	jne	SHORT $LL6@Move_backw
	pop	esi
$LN5@Move_backw:

; 2755 : 	}

	ret	0
??$_Move_backward_opt@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@Urandom_access_iterator_tag@3@U_Undefined_move_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Move_backward_opt<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::random_access_iterator_tag,std::_Undefined_move_tag>
_TEXT	ENDS
PUBLIC	??$_Move_backward_opt@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@Urandom_access_iterator_tag@3@U_Undefined_move_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Move_backward_opt<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::random_access_iterator_tag,std::_Undefined_move_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Move_backward_opt@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@Urandom_access_iterator_tag@3@U_Undefined_move_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__First_dest_cat$ = 20					; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Move_backward_opt@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@Urandom_access_iterator_tag@3@U_Undefined_move_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Move_backward_opt<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::random_access_iterator_tag,std::_Undefined_move_tag>, COMDAT

; 2753 : 	return _Copy_backward_opt(_First, _Last, _Dest,
; 2754 : 		_First_dest_cat, _Ptr_cat(_First, _Dest), _Range_checked_iterator_tag());

	mov	ecx, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	edx, ecx
	je	SHORT $LN5@Move_backw@2
	push	esi
$LL6@Move_backw@2:
	mov	esi, DWORD PTR [ecx-4]
	sub	ecx, 4
	sub	eax, 4
	mov	DWORD PTR [eax], esi
	cmp	ecx, edx
	jne	SHORT $LL6@Move_backw@2
	pop	esi
$LN5@Move_backw@2:

; 2755 : 	}

	ret	0
??$_Move_backward_opt@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@Urandom_access_iterator_tag@3@U_Undefined_move_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Move_backward_opt<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::random_access_iterator_tag,std::_Undefined_move_tag>
_TEXT	ENDS
PUBLIC	??$_Move_backward_opt@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@Urandom_access_iterator_tag@3@U_Undefined_move_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Move_backward_opt<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::random_access_iterator_tag,std::_Undefined_move_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Move_backward_opt@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@Urandom_access_iterator_tag@3@U_Undefined_move_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__First_dest_cat$ = 20					; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Move_backward_opt@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@Urandom_access_iterator_tag@3@U_Undefined_move_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Move_backward_opt<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::random_access_iterator_tag,std::_Undefined_move_tag>, COMDAT

; 2753 : 	return _Copy_backward_opt(_First, _Last, _Dest,
; 2754 : 		_First_dest_cat, _Ptr_cat(_First, _Dest), _Range_checked_iterator_tag());

	mov	ecx, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	edx, ecx
	je	SHORT $LN5@Move_backw@3
	push	esi
$LL6@Move_backw@3:
	mov	esi, DWORD PTR [ecx-4]
	sub	ecx, 4
	sub	eax, 4
	mov	DWORD PTR [eax], esi
	cmp	ecx, edx
	jne	SHORT $LL6@Move_backw@3
	pop	esi
$LN5@Move_backw@3:

; 2755 : 	}

	ret	0
??$_Move_backward_opt@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@Urandom_access_iterator_tag@3@U_Undefined_move_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Move_backward_opt<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::random_access_iterator_tag,std::_Undefined_move_tag>
_TEXT	ENDS
PUBLIC	?construct@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@ABV342@@Z ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >::construct
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?construct@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@ABV342@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@ABV342@@Z PROC ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >::construct, COMDAT
; _this$ = ecx

; 155  : 		_Construct(_Ptr, _Val);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	test	eax, eax
	je	SHORT $LN5@construct@4
	mov	ecx, DWORD PTR __Val$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN5@construct@4:

; 156  : 		}

	ret	8
?construct@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@ABV342@@Z ENDP ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >::construct
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >::destroy
; Function compile flags: /Ogtpy
;	COMDAT ?destroy@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z PROC ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >::destroy, COMDAT
; _this$ = ecx

; 160  : 		_Destroy(_Ptr);
; 161  : 		}

	ret	4
?destroy@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z ENDP ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >::destroy
_TEXT	ENDS
PUBLIC	?construct@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@ABV342@@Z ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >::construct
; Function compile flags: /Ogtpy
;	COMDAT ?construct@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@ABV342@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@ABV342@@Z PROC ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >::construct, COMDAT
; _this$ = ecx

; 155  : 		_Construct(_Ptr, _Val);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	test	eax, eax
	je	SHORT $LN5@construct@5
	mov	ecx, DWORD PTR __Val$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN5@construct@5:

; 156  : 		}

	ret	8
?construct@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@ABV342@@Z ENDP ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >::construct
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >::destroy
; Function compile flags: /Ogtpy
;	COMDAT ?destroy@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z PROC ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >::destroy, COMDAT
; _this$ = ecx

; 160  : 		_Destroy(_Ptr);
; 161  : 		}

	ret	4
?destroy@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z ENDP ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >::destroy
_TEXT	ENDS
PUBLIC	?construct@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@ABV342@@Z ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >::construct
; Function compile flags: /Ogtpy
;	COMDAT ?construct@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@ABV342@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@ABV342@@Z PROC ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >::construct, COMDAT
; _this$ = ecx

; 155  : 		_Construct(_Ptr, _Val);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	test	eax, eax
	je	SHORT $LN5@construct@6
	mov	ecx, DWORD PTR __Val$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN5@construct@6:

; 156  : 		}

	ret	8
?construct@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@ABV342@@Z ENDP ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >::construct
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >::destroy
; Function compile flags: /Ogtpy
;	COMDAT ?destroy@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z PROC ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >::destroy, COMDAT
; _this$ = ecx

; 160  : 		_Destroy(_Ptr);
; 161  : 		}

	ret	4
?destroy@?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z ENDP ; std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >::destroy
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >, COMDAT

; 125  : 	_DEBUG_RANGE(_First, _Last);
; 126  : 	_DEBUG_POINTER(_Dest);
; 127  : 	_FwdIt _Next = _Dest;
; 128  : 
; 129  : 	_TRY_BEGIN
; 130  : 	for (; _First != _Last; ++_Dest, ++_First)

	mov	ecx, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	ecx, edx
	je	SHORT $LN4@Uninit_cop
	push	esi
$LL6@Uninit_cop:

; 131  : 		_Al.construct(_Dest, *_First);

	test	eax, eax
	je	SHORT $LN5@Uninit_cop
	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
$LN5@Uninit_cop:
	add	ecx, 4
	add	eax, 4
	cmp	ecx, edx
	jne	SHORT $LL6@Uninit_cop
	pop	esi
$LN4@Uninit_cop:

; 132  : 	_CATCH_ALL
; 133  : 	for (; _Next != _Dest; ++_Next)
; 134  : 		_Al.destroy(_Next);
; 135  : 	_RERAISE;
; 136  : 	_CATCH_END
; 137  : 	return (_Dest);
; 138  : 	}

	ret	0
??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >, COMDAT

; 125  : 	_DEBUG_RANGE(_First, _Last);
; 126  : 	_DEBUG_POINTER(_Dest);
; 127  : 	_FwdIt _Next = _Dest;
; 128  : 
; 129  : 	_TRY_BEGIN
; 130  : 	for (; _First != _Last; ++_Dest, ++_First)

	mov	ecx, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	ecx, edx
	je	SHORT $LN4@Uninit_cop@2
	push	esi
$LL6@Uninit_cop@2:

; 131  : 		_Al.construct(_Dest, *_First);

	test	eax, eax
	je	SHORT $LN5@Uninit_cop@2
	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
$LN5@Uninit_cop@2:
	add	ecx, 4
	add	eax, 4
	cmp	ecx, edx
	jne	SHORT $LL6@Uninit_cop@2
	pop	esi
$LN4@Uninit_cop@2:

; 132  : 	_CATCH_ALL
; 133  : 	for (; _Next != _Dest; ++_Next)
; 134  : 		_Al.destroy(_Next);
; 135  : 	_RERAISE;
; 136  : 	_CATCH_END
; 137  : 	return (_Dest);
; 138  : 	}

	ret	0
??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >, COMDAT

; 125  : 	_DEBUG_RANGE(_First, _Last);
; 126  : 	_DEBUG_POINTER(_Dest);
; 127  : 	_FwdIt _Next = _Dest;
; 128  : 
; 129  : 	_TRY_BEGIN
; 130  : 	for (; _First != _Last; ++_Dest, ++_First)

	mov	ecx, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	ecx, edx
	je	SHORT $LN4@Uninit_cop@3
	push	esi
$LL6@Uninit_cop@3:

; 131  : 		_Al.construct(_Dest, *_First);

	test	eax, eax
	je	SHORT $LN5@Uninit_cop@3
	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
$LN5@Uninit_cop@3:
	add	ecx, 4
	add	eax, 4
	cmp	ecx, edx
	jne	SHORT $LL6@Uninit_cop@3
	pop	esi
$LN4@Uninit_cop@3:

; 132  : 	_CATCH_ALL
; 133  : 	for (; _Next != _Dest; ++_Next)
; 134  : 		_Al.destroy(_Next);
; 135  : 	_RERAISE;
; 136  : 	_CATCH_END
; 137  : 	return (_Dest);
; 138  : 	}

	ret	0
??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
_TEXT	ENDS
PUBLIC	??E?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEAAV012@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>::operator++
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ??E?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??E?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEAAV012@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>::operator++, COMDAT
; _this$ = ecx

; 403  : 			{	// preincrement

	mov	eax, ecx

; 404  : 			++(*(_Mybase_iter *)this);

	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 405  : 			return (*this);
; 406  : 			}

	ret	0
??E?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEAAV012@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>::operator++
_TEXT	ENDS
PUBLIC	??E?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEAAV012@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>::operator++
; Function compile flags: /Ogtpy
;	COMDAT ??E?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??E?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEAAV012@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>::operator++, COMDAT
; _this$ = ecx

; 403  : 			{	// preincrement

	mov	eax, ecx

; 404  : 			++(*(_Mybase_iter *)this);

	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 405  : 			return (*this);
; 406  : 			}

	ret	0
??E?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEAAV012@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>::operator++
_TEXT	ENDS
PUBLIC	??E?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEAAV012@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>::operator++
; Function compile flags: /Ogtpy
;	COMDAT ??E?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??E?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEAAV012@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>::operator++, COMDAT
; _this$ = ecx

; 403  : 			{	// preincrement

	mov	eax, ecx

; 404  : 			++(*(_Mybase_iter *)this);

	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 405  : 			return (*this);
; 406  : 			}

	ret	0
??E?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEAAV012@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>::operator++
_TEXT	ENDS
PUBLIC	?begin@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::begin
; Function compile flags: /Ogtpy
;	COMDAT ?begin@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::begin, COMDAT
; _this$ = ecx

; 560  : 		return (iterator(_Nextnode(_Myhead)));

	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 561  : 		}

	ret	4
?begin@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::begin
_TEXT	ENDS
PUBLIC	?end@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::end, COMDAT
; _this$ = ecx

; 570  : 		return (iterator(_Myhead));

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 571  : 		}

	ret	4
?end@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::end
_TEXT	ENDS
PUBLIC	??D?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QBEAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>::operator*
; Function compile flags: /Ogtpy
;	COMDAT ??D?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QBEAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@XZ
_TEXT	SEGMENT
??D?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QBEAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>::operator*, COMDAT
; _this$ = ecx

; 394  : 			return ((reference)**(_Mybase_iter *)this);

	mov	eax, DWORD PTR [ecx]
	add	eax, 8

; 395  : 			}

	ret	0
??D?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QBEAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>::operator*
_TEXT	ENDS
PUBLIC	?begin@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::begin
; Function compile flags: /Ogtpy
;	COMDAT ?begin@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::begin, COMDAT
; _this$ = ecx

; 560  : 		return (iterator(_Nextnode(_Myhead)));

	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 561  : 		}

	ret	4
?begin@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::begin
_TEXT	ENDS
PUBLIC	?end@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::end, COMDAT
; _this$ = ecx

; 570  : 		return (iterator(_Myhead));

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 571  : 		}

	ret	4
?end@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::end
_TEXT	ENDS
PUBLIC	??D?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QBEAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>::operator*
; Function compile flags: /Ogtpy
;	COMDAT ??D?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QBEAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@XZ
_TEXT	SEGMENT
??D?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QBEAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>::operator*, COMDAT
; _this$ = ecx

; 394  : 			return ((reference)**(_Mybase_iter *)this);

	mov	eax, DWORD PTR [ecx]
	add	eax, 8

; 395  : 			}

	ret	0
??D?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QBEAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>::operator*
_TEXT	ENDS
PUBLIC	?begin@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::begin
; Function compile flags: /Ogtpy
;	COMDAT ?begin@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::begin, COMDAT
; _this$ = ecx

; 560  : 		return (iterator(_Nextnode(_Myhead)));

	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 561  : 		}

	ret	4
?begin@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::begin
_TEXT	ENDS
PUBLIC	?end@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::end, COMDAT
; _this$ = ecx

; 570  : 		return (iterator(_Myhead));

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 571  : 		}

	ret	4
?end@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::end
_TEXT	ENDS
PUBLIC	??D?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QBEAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>::operator*
; Function compile flags: /Ogtpy
;	COMDAT ??D?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QBEAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@XZ
_TEXT	SEGMENT
??D?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QBEAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>::operator*, COMDAT
; _this$ = ecx

; 394  : 			return ((reference)**(_Mybase_iter *)this);

	mov	eax, DWORD PTR [ecx]
	add	eax, 8

; 395  : 			}

	ret	0
??D?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QBEAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>::operator*
_TEXT	ENDS
PUBLIC	??1?$_List_ptr@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ ; std::_List_ptr<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::~_List_ptr<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_List_ptr@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_List_ptr@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ PROC ; std::_List_ptr<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::~_List_ptr<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >, COMDAT
; _this$ = ecx
	ret	0
??1?$_List_ptr@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ ENDP ; std::_List_ptr<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::~_List_ptr<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >
_TEXT	ENDS
PUBLIC	??1?$_List_ptr@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ ; std::_List_ptr<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::~_List_ptr<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_List_ptr@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_List_ptr@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ PROC ; std::_List_ptr<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::~_List_ptr<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >, COMDAT
; _this$ = ecx
	ret	0
??1?$_List_ptr@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ ENDP ; std::_List_ptr<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::~_List_ptr<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >
_TEXT	ENDS
PUBLIC	??1?$_List_ptr@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ ; std::_List_ptr<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::~_List_ptr<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_List_ptr@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_List_ptr@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ PROC ; std::_List_ptr<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::~_List_ptr<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >, COMDAT
; _this$ = ecx
	ret	0
??1?$_List_ptr@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ ENDP ; std::_List_ptr<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::~_List_ptr<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >
_TEXT	ENDS
PUBLIC	__real@4f800000
PUBLIC	?load_factor@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEMXZ ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::load_factor
;	COMDAT __real@4f800000
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xhash
CONST	SEGMENT
__real@4f800000 DD 04f800000r			; 4.29497e+009
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ?load_factor@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEMXZ
_TEXT	SEGMENT
tv139 = -4						; size = 4
tv132 = -4						; size = 4
tv129 = -4						; size = 4
?load_factor@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEMXZ PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::load_factor, COMDAT
; _this$ = ecx

; 507  : 		{	// return elements per bucket

	push	ecx

; 508  : 		return ((float)size() / (float)bucket_count());

	mov	eax, DWORD PTR [ecx+12]
	fild	DWORD PTR [ecx+12]
	test	eax, eax
	jge	SHORT $LN9@load_facto
	fadd	DWORD PTR __real@4f800000
$LN9@load_facto:
	mov	ecx, DWORD PTR [ecx+36]
	mov	DWORD PTR tv132[esp+4], ecx
	fild	DWORD PTR tv132[esp+4]
	test	ecx, ecx
	jge	SHORT $LN10@load_facto
	fadd	DWORD PTR __real@4f800000
$LN10@load_facto:
	fdivp	ST(1), ST(0)
	fstp	DWORD PTR tv129[esp+4]
	fld	DWORD PTR tv129[esp+4]

; 509  : 		}

	pop	ecx
	ret	0
?load_factor@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEMXZ ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::load_factor
_TEXT	ENDS
PUBLIC	?_Hashval@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Hashval
; Function compile flags: /Ogtpy
;	COMDAT ?_Hashval@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Hashval@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Hashval, COMDAT
; _this$ = ecx

; 822  : 		size_type _Num = this->comp(_Keyval) & _Mask;

	mov	eax, DWORD PTR __Keyval$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	??R?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@std@@QBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator()
	mov	ecx, DWORD PTR [esi+32]
	mov	edx, eax
	mov	eax, ecx
	and	eax, edx

; 823  : 		if (_Maxidx <= _Num)

	cmp	DWORD PTR [esi+36], eax
	pop	esi
	ja	SHORT $LN1@Hashval

; 824  : 			_Num -= (_Mask >> 1) + 1;

	shr	ecx, 1
	or	edx, -1
	sub	edx, ecx
	add	eax, edx
$LN1@Hashval:

; 825  : 		return (_Num);
; 826  : 		}

	ret	4
?_Hashval@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Hashval
_TEXT	ENDS
PUBLIC	?load_factor@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEMXZ ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::load_factor
; Function compile flags: /Ogtpy
;	COMDAT ?load_factor@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEMXZ
_TEXT	SEGMENT
tv139 = -4						; size = 4
tv132 = -4						; size = 4
tv129 = -4						; size = 4
?load_factor@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEMXZ PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::load_factor, COMDAT
; _this$ = ecx

; 507  : 		{	// return elements per bucket

	push	ecx

; 508  : 		return ((float)size() / (float)bucket_count());

	mov	eax, DWORD PTR [ecx+12]
	fild	DWORD PTR [ecx+12]
	test	eax, eax
	jge	SHORT $LN9@load_facto@2
	fadd	DWORD PTR __real@4f800000
$LN9@load_facto@2:
	mov	ecx, DWORD PTR [ecx+36]
	mov	DWORD PTR tv132[esp+4], ecx
	fild	DWORD PTR tv132[esp+4]
	test	ecx, ecx
	jge	SHORT $LN10@load_facto@2
	fadd	DWORD PTR __real@4f800000
$LN10@load_facto@2:
	fdivp	ST(1), ST(0)
	fstp	DWORD PTR tv129[esp+4]
	fld	DWORD PTR tv129[esp+4]

; 509  : 		}

	pop	ecx
	ret	0
?load_factor@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEMXZ ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::load_factor
_TEXT	ENDS
PUBLIC	?_Hashval@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@IBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::_Hashval
; Function compile flags: /Ogtpy
;	COMDAT ?_Hashval@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@IBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Hashval@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@IBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::_Hashval, COMDAT
; _this$ = ecx

; 822  : 		size_type _Num = this->comp(_Keyval) & _Mask;

	mov	eax, DWORD PTR __Keyval$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	??R?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@std@@QBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator()
	mov	ecx, DWORD PTR [esi+32]
	mov	edx, eax
	mov	eax, ecx
	and	eax, edx

; 823  : 		if (_Maxidx <= _Num)

	cmp	DWORD PTR [esi+36], eax
	pop	esi
	ja	SHORT $LN1@Hashval@2

; 824  : 			_Num -= (_Mask >> 1) + 1;

	shr	ecx, 1
	or	edx, -1
	sub	edx, ecx
	add	eax, edx
$LN1@Hashval@2:

; 825  : 		return (_Num);
; 826  : 		}

	ret	4
?_Hashval@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@IBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::_Hashval
_TEXT	ENDS
PUBLIC	?load_factor@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEMXZ ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::load_factor
; Function compile flags: /Ogtpy
;	COMDAT ?load_factor@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEMXZ
_TEXT	SEGMENT
tv139 = -4						; size = 4
tv132 = -4						; size = 4
tv129 = -4						; size = 4
?load_factor@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEMXZ PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::load_factor, COMDAT
; _this$ = ecx

; 507  : 		{	// return elements per bucket

	push	ecx

; 508  : 		return ((float)size() / (float)bucket_count());

	mov	eax, DWORD PTR [ecx+12]
	fild	DWORD PTR [ecx+12]
	test	eax, eax
	jge	SHORT $LN9@load_facto@3
	fadd	DWORD PTR __real@4f800000
$LN9@load_facto@3:
	mov	ecx, DWORD PTR [ecx+36]
	mov	DWORD PTR tv132[esp+4], ecx
	fild	DWORD PTR tv132[esp+4]
	test	ecx, ecx
	jge	SHORT $LN10@load_facto@3
	fadd	DWORD PTR __real@4f800000
$LN10@load_facto@3:
	fdivp	ST(1), ST(0)
	fstp	DWORD PTR tv129[esp+4]
	fld	DWORD PTR tv129[esp+4]

; 509  : 		}

	pop	ecx
	ret	0
?load_factor@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QBEMXZ ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::load_factor
_TEXT	ENDS
PUBLIC	?_Hashval@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Hashval
; Function compile flags: /Ogtpy
;	COMDAT ?_Hashval@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Hashval@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Hashval, COMDAT
; _this$ = ecx

; 822  : 		size_type _Num = this->comp(_Keyval) & _Mask;

	mov	eax, DWORD PTR __Keyval$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	??R?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@std@@QBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator()
	mov	ecx, DWORD PTR [esi+32]
	mov	edx, eax
	mov	eax, ecx
	and	eax, edx

; 823  : 		if (_Maxidx <= _Num)

	cmp	DWORD PTR [esi+36], eax
	pop	esi
	ja	SHORT $LN1@Hashval@3

; 824  : 			_Num -= (_Mask >> 1) + 1;

	shr	ecx, 1
	or	edx, -1
	sub	edx, ecx
	add	eax, edx
$LN1@Hashval@3:

; 825  : 		return (_Num);
; 826  : 		}

	ret	4
?_Hashval@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Hashval
_TEXT	ENDS
PUBLIC	?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Buynode
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@XZ
_TEXT	SEGMENT
?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Buynode, COMDAT
; _this$ = ecx

; 1172 : 		_Nodeptr _Pnode = this->_Alnod.allocate(1);

	push	40					; 00000028H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 1173 : 		int _Linkcnt = 0;
; 1174 : 
; 1175 : 		_TRY_BEGIN
; 1176 : 		this->_Alptr.construct(&_Nextnode(_Pnode), _Pnode);

	test	eax, eax
	je	SHORT $LN26@Buynode
	mov	DWORD PTR [eax], eax
$LN26@Buynode:

; 1177 : 		++_Linkcnt;
; 1178 : 		this->_Alptr.construct(&_Prevnode(_Pnode), _Pnode);

	lea	ecx, DWORD PTR [eax+4]
	test	ecx, ecx
	je	SHORT $LN36@Buynode
	mov	DWORD PTR [ecx], eax
$LN36@Buynode:

; 1179 : 		_CATCH_ALL
; 1180 : 		if (0 < _Linkcnt)
; 1181 : 			this->_Alptr.destroy(&_Nextnode(_Pnode));
; 1182 : 		this->_Alnod.deallocate(_Pnode, 1);
; 1183 : 		_RERAISE;
; 1184 : 		_CATCH_END
; 1185 : 		return (_Pnode);
; 1186 : 		}

	ret	0
?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Buynode
_TEXT	ENDS
PUBLIC	?_Buy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAE_NI@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Buy
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Buy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAE_NI@Z
_TEXT	SEGMENT
__Capacity$ = 8						; size = 4
?_Buy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAE_NI@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Buy, COMDAT
; _this$ = ecx

; 1102 : 		{	// allocate array with _Capacity elements

	push	esi

; 1103 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	xor	eax, eax
	push	edi

; 1104 : 		if (_Capacity == 0)

	mov	edi, DWORD PTR __Capacity$[esp+4]
	mov	esi, ecx
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi+12], eax
	cmp	edi, eax
	jne	SHORT $LN4@Buy
	pop	edi

; 1105 : 			return (false);

	xor	al, al
	pop	esi

; 1115 : 		}

	ret	4
$LN4@Buy:

; 1106 : 		else if (max_size() < _Capacity)

	cmp	edi, 1073741823				; 3fffffffH
	jbe	SHORT $LN2@Buy

; 1107 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@KAXXZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Xlen
$LN16@Buy:
$LN2@Buy:

; 1108 : 		else
; 1109 : 			{	// nonempty array, allocate storage
; 1110 : 			_Myfirst = this->_Alval.allocate(_Capacity);

	push	eax
	push	edi
	call	??$_Allocate@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IPAV120@@Z ; std::_Allocate<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >
	mov	DWORD PTR [esi+4], eax

; 1111 : 			_Mylast = _Myfirst;

	mov	DWORD PTR [esi+8], eax
	add	esp, 8

; 1112 : 			_Myend = _Myfirst + _Capacity;

	lea	eax, DWORD PTR [eax+edi*4]
	mov	DWORD PTR [esi+12], eax
	pop	edi

; 1113 : 			}
; 1114 : 		return (true);

	mov	al, 1
	pop	esi

; 1115 : 		}

	ret	4
$LN15@Buy:
?_Buy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAE_NI@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Buy
_TEXT	ENDS
PUBLIC	?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Buynode
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@XZ
_TEXT	SEGMENT
?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Buynode, COMDAT
; _this$ = ecx

; 1172 : 		_Nodeptr _Pnode = this->_Alnod.allocate(1);

	push	40					; 00000028H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 1173 : 		int _Linkcnt = 0;
; 1174 : 
; 1175 : 		_TRY_BEGIN
; 1176 : 		this->_Alptr.construct(&_Nextnode(_Pnode), _Pnode);

	test	eax, eax
	je	SHORT $LN26@Buynode@2
	mov	DWORD PTR [eax], eax
$LN26@Buynode@2:

; 1177 : 		++_Linkcnt;
; 1178 : 		this->_Alptr.construct(&_Prevnode(_Pnode), _Pnode);

	lea	ecx, DWORD PTR [eax+4]
	test	ecx, ecx
	je	SHORT $LN36@Buynode@2
	mov	DWORD PTR [ecx], eax
$LN36@Buynode@2:

; 1179 : 		_CATCH_ALL
; 1180 : 		if (0 < _Linkcnt)
; 1181 : 			this->_Alptr.destroy(&_Nextnode(_Pnode));
; 1182 : 		this->_Alnod.deallocate(_Pnode, 1);
; 1183 : 		_RERAISE;
; 1184 : 		_CATCH_END
; 1185 : 		return (_Pnode);
; 1186 : 		}

	ret	0
?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Buynode
_TEXT	ENDS
PUBLIC	?_Buy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAE_NI@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Buy
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Buy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAE_NI@Z
_TEXT	SEGMENT
__Capacity$ = 8						; size = 4
?_Buy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAE_NI@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Buy, COMDAT
; _this$ = ecx

; 1102 : 		{	// allocate array with _Capacity elements

	push	esi

; 1103 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	xor	eax, eax
	push	edi

; 1104 : 		if (_Capacity == 0)

	mov	edi, DWORD PTR __Capacity$[esp+4]
	mov	esi, ecx
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi+12], eax
	cmp	edi, eax
	jne	SHORT $LN4@Buy@2
	pop	edi

; 1105 : 			return (false);

	xor	al, al
	pop	esi

; 1115 : 		}

	ret	4
$LN4@Buy@2:

; 1106 : 		else if (max_size() < _Capacity)

	cmp	edi, 1073741823				; 3fffffffH
	jbe	SHORT $LN2@Buy@2

; 1107 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@KAXXZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Xlen
$LN16@Buy@2:
$LN2@Buy@2:

; 1108 : 		else
; 1109 : 			{	// nonempty array, allocate storage
; 1110 : 			_Myfirst = this->_Alval.allocate(_Capacity);

	push	eax
	push	edi
	call	??$_Allocate@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IPAV120@@Z ; std::_Allocate<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >
	mov	DWORD PTR [esi+4], eax

; 1111 : 			_Mylast = _Myfirst;

	mov	DWORD PTR [esi+8], eax
	add	esp, 8

; 1112 : 			_Myend = _Myfirst + _Capacity;

	lea	eax, DWORD PTR [eax+edi*4]
	mov	DWORD PTR [esi+12], eax
	pop	edi

; 1113 : 			}
; 1114 : 		return (true);

	mov	al, 1
	pop	esi

; 1115 : 		}

	ret	4
$LN15@Buy@2:
?_Buy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAE_NI@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Buy
_TEXT	ENDS
PUBLIC	?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Buynode
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@XZ
_TEXT	SEGMENT
?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Buynode, COMDAT
; _this$ = ecx

; 1172 : 		_Nodeptr _Pnode = this->_Alnod.allocate(1);

	push	40					; 00000028H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 1173 : 		int _Linkcnt = 0;
; 1174 : 
; 1175 : 		_TRY_BEGIN
; 1176 : 		this->_Alptr.construct(&_Nextnode(_Pnode), _Pnode);

	test	eax, eax
	je	SHORT $LN26@Buynode@3
	mov	DWORD PTR [eax], eax
$LN26@Buynode@3:

; 1177 : 		++_Linkcnt;
; 1178 : 		this->_Alptr.construct(&_Prevnode(_Pnode), _Pnode);

	lea	ecx, DWORD PTR [eax+4]
	test	ecx, ecx
	je	SHORT $LN36@Buynode@3
	mov	DWORD PTR [ecx], eax
$LN36@Buynode@3:

; 1179 : 		_CATCH_ALL
; 1180 : 		if (0 < _Linkcnt)
; 1181 : 			this->_Alptr.destroy(&_Nextnode(_Pnode));
; 1182 : 		this->_Alnod.deallocate(_Pnode, 1);
; 1183 : 		_RERAISE;
; 1184 : 		_CATCH_END
; 1185 : 		return (_Pnode);
; 1186 : 		}

	ret	0
?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Buynode
_TEXT	ENDS
PUBLIC	?_Buy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAE_NI@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Buy
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Buy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAE_NI@Z
_TEXT	SEGMENT
__Capacity$ = 8						; size = 4
?_Buy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAE_NI@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Buy, COMDAT
; _this$ = ecx

; 1102 : 		{	// allocate array with _Capacity elements

	push	esi

; 1103 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	xor	eax, eax
	push	edi

; 1104 : 		if (_Capacity == 0)

	mov	edi, DWORD PTR __Capacity$[esp+4]
	mov	esi, ecx
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi+12], eax
	cmp	edi, eax
	jne	SHORT $LN4@Buy@3
	pop	edi

; 1105 : 			return (false);

	xor	al, al
	pop	esi

; 1115 : 		}

	ret	4
$LN4@Buy@3:

; 1106 : 		else if (max_size() < _Capacity)

	cmp	edi, 1073741823				; 3fffffffH
	jbe	SHORT $LN2@Buy@3

; 1107 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@KAXXZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Xlen
$LN16@Buy@3:
$LN2@Buy@3:

; 1108 : 		else
; 1109 : 			{	// nonempty array, allocate storage
; 1110 : 			_Myfirst = this->_Alval.allocate(_Capacity);

	push	eax
	push	edi
	call	??$_Allocate@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IPAV120@@Z ; std::_Allocate<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >
	mov	DWORD PTR [esi+4], eax

; 1111 : 			_Mylast = _Myfirst;

	mov	DWORD PTR [esi+8], eax
	add	esp, 8

; 1112 : 			_Myend = _Myfirst + _Capacity;

	lea	eax, DWORD PTR [eax+edi*4]
	mov	DWORD PTR [esi+12], eax
	pop	edi

; 1113 : 			}
; 1114 : 		return (true);

	mov	al, 1
	pop	esi

; 1115 : 		}

	ret	4
$LN15@Buy@3:
?_Buy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAE_NI@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Buy
_TEXT	ENDS
PUBLIC	??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEXI@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Incsize
;	COMDAT ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
CONST	SEGMENT
??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@ DB 'list<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEXI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEXI@Z$2
__ehfuncinfo$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	ENDS
;	COMDAT ?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEXI@Z
_TEXT	SEGMENT
$T228802 = -80						; size = 28
$T228801 = -52						; size = 40
__$EHRec$ = -12						; size = 12
__Count$ = 8						; size = 4
?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEXI@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Incsize, COMDAT
; _this$ = ecx

; 1239 : 		{	// alter element count, with checking

	mov	eax, DWORD PTR fs:0

; 1240 : 		if (max_size() - _Mysize < _Count)

	mov	edx, DWORD PTR __Count$[esp-4]
	push	-1
	push	__ehhandler$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEXI@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	mov	eax, DWORD PTR [ecx+8]
	sub	esp, 68					; 00000044H
	push	esi
	mov	esi, 134217727				; 07ffffffH
	sub	esi, eax
	cmp	esi, edx
	pop	esi
	jae	SHORT $LN1@Incsize

; 1241 : 			_THROW(length_error, "list<T> too long");

	push	OFFSET ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T228802[esp+84]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T228801[esp+80]
	mov	DWORD PTR __$EHRec$[esp+88], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	lea	eax, DWORD PTR $T228802[esp+80]
	push	eax
	lea	ecx, DWORD PTR $T228801[esp+96]
	mov	BYTE PTR __$EHRec$[esp+92], 1
	mov	DWORD PTR $T228801[esp+84], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T228801[esp+84]
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+96], 0
	mov	DWORD PTR $T228801[esp+88], OFFSET ??_7length_error@std@@6B@
	call	__CxxThrowException@8
$LN20@Incsize:
$LN1@Incsize:

; 1242 : 		_Mysize += _Count;

	add	eax, edx
	mov	DWORD PTR [ecx+8], eax

; 1243 : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+80]
	mov	DWORD PTR fs:0, ecx
	add	esp, 80					; 00000050H
	ret	4
$LN19@Incsize:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEXI@Z$0:
	lea	ecx, DWORD PTR $T228802[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEXI@Z$2:
	lea	ecx, DWORD PTR $T228801[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEXI@Z:
	mov	eax, OFFSET __ehfuncinfo$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEXI@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Incsize
PUBLIC	??0?$_List_ptr@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@1@@Z ; std::_List_ptr<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_List_ptr<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_List_ptr@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_List_ptr@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@1@@Z PROC ; std::_List_ptr<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_List_ptr<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >, COMDAT
; _this$ = ecx

; 67   : 		{	// construct base, and allocator from _Al

	mov	eax, ecx

; 68   : 		}

	ret	4
??0?$_List_ptr@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@1@@Z ENDP ; std::_List_ptr<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_List_ptr<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >
_TEXT	ENDS
PUBLIC	?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEXI@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Incsize
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
xdata$x	SEGMENT
__unwindtable$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEXI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEXI@Z$2
__ehfuncinfo$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	ENDS
;	COMDAT ?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEXI@Z
_TEXT	SEGMENT
$T228877 = -80						; size = 28
$T228876 = -52						; size = 40
__$EHRec$ = -12						; size = 12
__Count$ = 8						; size = 4
?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEXI@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Incsize, COMDAT
; _this$ = ecx

; 1239 : 		{	// alter element count, with checking

	mov	eax, DWORD PTR fs:0

; 1240 : 		if (max_size() - _Mysize < _Count)

	mov	edx, DWORD PTR __Count$[esp-4]
	push	-1
	push	__ehhandler$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEXI@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	mov	eax, DWORD PTR [ecx+8]
	sub	esp, 68					; 00000044H
	push	esi
	mov	esi, 134217727				; 07ffffffH
	sub	esi, eax
	cmp	esi, edx
	pop	esi
	jae	SHORT $LN1@Incsize@2

; 1241 : 			_THROW(length_error, "list<T> too long");

	push	OFFSET ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T228877[esp+84]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T228876[esp+80]
	mov	DWORD PTR __$EHRec$[esp+88], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	lea	eax, DWORD PTR $T228877[esp+80]
	push	eax
	lea	ecx, DWORD PTR $T228876[esp+96]
	mov	BYTE PTR __$EHRec$[esp+92], 1
	mov	DWORD PTR $T228876[esp+84], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T228876[esp+84]
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+96], 0
	mov	DWORD PTR $T228876[esp+88], OFFSET ??_7length_error@std@@6B@
	call	__CxxThrowException@8
$LN20@Incsize@2:
$LN1@Incsize@2:

; 1242 : 		_Mysize += _Count;

	add	eax, edx
	mov	DWORD PTR [ecx+8], eax

; 1243 : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+80]
	mov	DWORD PTR fs:0, ecx
	add	esp, 80					; 00000050H
	ret	4
$LN19@Incsize@2:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEXI@Z$0:
	lea	ecx, DWORD PTR $T228877[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEXI@Z$2:
	lea	ecx, DWORD PTR $T228876[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEXI@Z:
	mov	eax, OFFSET __ehfuncinfo$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEXI@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Incsize
PUBLIC	??0?$_List_ptr@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@1@@Z ; std::_List_ptr<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_List_ptr<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_List_ptr@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_List_ptr@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@1@@Z PROC ; std::_List_ptr<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_List_ptr<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >, COMDAT
; _this$ = ecx

; 67   : 		{	// construct base, and allocator from _Al

	mov	eax, ecx

; 68   : 		}

	ret	4
??0?$_List_ptr@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@1@@Z ENDP ; std::_List_ptr<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_List_ptr<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >
_TEXT	ENDS
PUBLIC	?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEXI@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Incsize
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
xdata$x	SEGMENT
__unwindtable$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEXI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEXI@Z$2
__ehfuncinfo$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	ENDS
;	COMDAT ?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEXI@Z
_TEXT	SEGMENT
$T228952 = -80						; size = 28
$T228951 = -52						; size = 40
__$EHRec$ = -12						; size = 12
__Count$ = 8						; size = 4
?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEXI@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Incsize, COMDAT
; _this$ = ecx

; 1239 : 		{	// alter element count, with checking

	mov	eax, DWORD PTR fs:0

; 1240 : 		if (max_size() - _Mysize < _Count)

	mov	edx, DWORD PTR __Count$[esp-4]
	push	-1
	push	__ehhandler$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEXI@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	mov	eax, DWORD PTR [ecx+8]
	sub	esp, 68					; 00000044H
	push	esi
	mov	esi, 134217727				; 07ffffffH
	sub	esi, eax
	cmp	esi, edx
	pop	esi
	jae	SHORT $LN1@Incsize@3

; 1241 : 			_THROW(length_error, "list<T> too long");

	push	OFFSET ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T228952[esp+84]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T228951[esp+80]
	mov	DWORD PTR __$EHRec$[esp+88], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	lea	eax, DWORD PTR $T228952[esp+80]
	push	eax
	lea	ecx, DWORD PTR $T228951[esp+96]
	mov	BYTE PTR __$EHRec$[esp+92], 1
	mov	DWORD PTR $T228951[esp+84], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T228951[esp+84]
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+96], 0
	mov	DWORD PTR $T228951[esp+88], OFFSET ??_7length_error@std@@6B@
	call	__CxxThrowException@8
$LN20@Incsize@3:
$LN1@Incsize@3:

; 1242 : 		_Mysize += _Count;

	add	eax, edx
	mov	DWORD PTR [ecx+8], eax

; 1243 : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+80]
	mov	DWORD PTR fs:0, ecx
	add	esp, 80					; 00000050H
	ret	4
$LN19@Incsize@3:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEXI@Z$0:
	lea	ecx, DWORD PTR $T228952[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEXI@Z$2:
	lea	ecx, DWORD PTR $T228951[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEXI@Z:
	mov	eax, OFFSET __ehfuncinfo$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEXI@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Incsize
PUBLIC	??0?$_List_ptr@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@1@@Z ; std::_List_ptr<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_List_ptr<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_List_ptr@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_List_ptr@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@1@@Z PROC ; std::_List_ptr<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_List_ptr<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >, COMDAT
; _this$ = ecx

; 67   : 		{	// construct base, and allocator from _Al

	mov	eax, ecx

; 68   : 		}

	ret	4
??0?$_List_ptr@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@1@@Z ENDP ; std::_List_ptr<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_List_ptr<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >
_TEXT	ENDS
PUBLIC	?construct@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@ABU32@@Z ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >::construct
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?construct@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@ABU32@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@ABU32@@Z PROC ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >::construct, COMDAT
; _this$ = ecx

; 155  : 		_Construct(_Ptr, _Val);

	mov	eax, DWORD PTR __Val$[esp-4]
	mov	ecx, DWORD PTR __Ptr$[esp-4]
	push	eax
	push	ecx
	call	??$_Construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@U12@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@ABU10@@Z ; std::_Construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >
	add	esp, 8

; 156  : 		}

	ret	8
?construct@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@ABU32@@Z ENDP ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >::construct
_TEXT	ENDS
PUBLIC	?begin@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@XZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::begin
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?begin@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@XZ PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::begin, COMDAT
; _this$ = ecx

; 667  : 		return (iterator(_Myfirst));

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 668  : 		}

	ret	4
?begin@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@XZ ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@XZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@XZ PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::end, COMDAT
; _this$ = ecx

; 677  : 		return (iterator(_Mylast));

	mov	ecx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 678  : 		}

	ret	4
?end@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@XZ ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::end
_TEXT	ENDS
PUBLIC	?construct@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@ABU32@@Z ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >::construct
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?construct@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@ABU32@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@ABU32@@Z PROC ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >::construct, COMDAT
; _this$ = ecx

; 155  : 		_Construct(_Ptr, _Val);

	mov	eax, DWORD PTR __Val$[esp-4]
	mov	ecx, DWORD PTR __Ptr$[esp-4]
	push	eax
	push	ecx
	call	??$_Construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@U12@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@ABU10@@Z ; std::_Construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >
	add	esp, 8

; 156  : 		}

	ret	8
?construct@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@ABU32@@Z ENDP ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >::construct
_TEXT	ENDS
PUBLIC	?begin@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@XZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::begin
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?begin@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@XZ PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::begin, COMDAT
; _this$ = ecx

; 667  : 		return (iterator(_Myfirst));

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 668  : 		}

	ret	4
?begin@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@XZ ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@XZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@XZ PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::end, COMDAT
; _this$ = ecx

; 677  : 		return (iterator(_Mylast));

	mov	ecx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 678  : 		}

	ret	4
?end@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@XZ ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::end
_TEXT	ENDS
PUBLIC	?construct@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@ABU32@@Z ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >::construct
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?construct@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@ABU32@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@ABU32@@Z PROC ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >::construct, COMDAT
; _this$ = ecx

; 155  : 		_Construct(_Ptr, _Val);

	mov	eax, DWORD PTR __Val$[esp-4]
	mov	ecx, DWORD PTR __Ptr$[esp-4]
	push	eax
	push	ecx
	call	??$_Construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@U12@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@ABU10@@Z ; std::_Construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >
	add	esp, 8

; 156  : 		}

	ret	8
?construct@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@ABU32@@Z ENDP ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >::construct
_TEXT	ENDS
PUBLIC	?begin@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@XZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::begin
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?begin@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@XZ PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::begin, COMDAT
; _this$ = ecx

; 667  : 		return (iterator(_Myfirst));

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 668  : 		}

	ret	4
?begin@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@XZ ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@XZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@XZ PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::end, COMDAT
; _this$ = ecx

; 677  : 		return (iterator(_Mylast));

	mov	ecx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 678  : 		}

	ret	4
?end@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@XZ ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::end
_TEXT	ENDS
PUBLIC	?_Make_iter@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QBE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@V?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Make_iter
; Function compile flags: /Ogtpy
;	COMDAT ?_Make_iter@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QBE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@V?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QBE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@V?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Make_iter, COMDAT
; _this$ = ecx

; 687  : 		return (iterator(_Where._Myptr));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	ecx, DWORD PTR __Where$[esp-4]
	mov	DWORD PTR [eax], ecx

; 688  : 		}

	ret	8
?_Make_iter@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QBE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@V?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Make_iter
_TEXT	ENDS
PUBLIC	?_Make_iter@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QBE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@V?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Make_iter
; Function compile flags: /Ogtpy
;	COMDAT ?_Make_iter@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QBE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@V?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QBE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@V?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Make_iter, COMDAT
; _this$ = ecx

; 687  : 		return (iterator(_Where._Myptr));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	ecx, DWORD PTR __Where$[esp-4]
	mov	DWORD PTR [eax], ecx

; 688  : 		}

	ret	8
?_Make_iter@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QBE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@V?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Make_iter
_TEXT	ENDS
PUBLIC	?_Make_iter@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QBE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@V?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Make_iter
; Function compile flags: /Ogtpy
;	COMDAT ?_Make_iter@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QBE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@V?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QBE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@V?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Make_iter, COMDAT
; _this$ = ecx

; 687  : 		return (iterator(_Where._Myptr));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	ecx, DWORD PTR __Where$[esp-4]
	mov	DWORD PTR [eax], ecx

; 688  : 		}

	ret	8
?_Make_iter@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QBE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@V?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Make_iter
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@YAXPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@@Z ; std::_Destroy<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Destroy@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@YAXPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@YAXPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@@Z PROC ; std::_Destroy<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node>, COMDAT

; 59   : 	_DESTRUCTOR(_Ty, _Ptr);

	mov	ecx, DWORD PTR __Ptr$[esp-4]
	add	ecx, 8
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
??$_Destroy@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@YAXPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@@Z ENDP ; std::_Destroy<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node>
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@YAXPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@@Z ; std::_Destroy<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Destroy@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@YAXPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@YAXPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@@Z PROC ; std::_Destroy<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node>, COMDAT

; 59   : 	_DESTRUCTOR(_Ty, _Ptr);

	mov	ecx, DWORD PTR __Ptr$[esp-4]
	add	ecx, 8
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
??$_Destroy@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@YAXPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@@Z ENDP ; std::_Destroy<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node>
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@YAXPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@@Z ; std::_Destroy<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Destroy@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@YAXPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@YAXPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@@Z PROC ; std::_Destroy<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node>, COMDAT

; 59   : 	_DESTRUCTOR(_Ty, _Ptr);

	mov	ecx, DWORD PTR __Ptr$[esp-4]
	add	ecx, 8
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
??$_Destroy@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@YAXPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@@Z ENDP ; std::_Destroy<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node>
_TEXT	ENDS
PUBLIC	??$_Unchecked_move_backward@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@00@Z ; stdext::_Unchecked_move_backward<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Unchecked_move_backward@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Unchecked_move_backward@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@00@Z PROC ; stdext::_Unchecked_move_backward<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *>, COMDAT

; 3695 : 		return (_STD _Move_backward_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3696 : 			_STD _Iter_random(_First, _Dest), _STD _Move_cat(_Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	edx, ecx
	je	SHORT $LN11@Unchecked_
	push	esi
$LL12@Unchecked_:
	mov	esi, DWORD PTR [ecx-4]
	sub	ecx, 4
	sub	eax, 4
	mov	DWORD PTR [eax], esi
	cmp	ecx, edx
	jne	SHORT $LL12@Unchecked_
	pop	esi
$LN11@Unchecked_:

; 3697 : 	}

	ret	0
??$_Unchecked_move_backward@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@00@Z ENDP ; stdext::_Unchecked_move_backward<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *>
_TEXT	ENDS
PUBLIC	??$_Unchecked_move_backward@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@00@Z ; stdext::_Unchecked_move_backward<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Unchecked_move_backward@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Unchecked_move_backward@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@00@Z PROC ; stdext::_Unchecked_move_backward<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *>, COMDAT

; 3695 : 		return (_STD _Move_backward_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3696 : 			_STD _Iter_random(_First, _Dest), _STD _Move_cat(_Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	edx, ecx
	je	SHORT $LN11@Unchecked_@2
	push	esi
$LL12@Unchecked_@2:
	mov	esi, DWORD PTR [ecx-4]
	sub	ecx, 4
	sub	eax, 4
	mov	DWORD PTR [eax], esi
	cmp	ecx, edx
	jne	SHORT $LL12@Unchecked_@2
	pop	esi
$LN11@Unchecked_@2:

; 3697 : 	}

	ret	0
??$_Unchecked_move_backward@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@00@Z ENDP ; stdext::_Unchecked_move_backward<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *>
_TEXT	ENDS
PUBLIC	??$_Unchecked_move_backward@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@00@Z ; stdext::_Unchecked_move_backward<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Unchecked_move_backward@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Unchecked_move_backward@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@00@Z PROC ; stdext::_Unchecked_move_backward<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *>, COMDAT

; 3695 : 		return (_STD _Move_backward_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3696 : 			_STD _Iter_random(_First, _Dest), _STD _Move_cat(_Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	edx, ecx
	je	SHORT $LN11@Unchecked_@3
	push	esi
$LL12@Unchecked_@3:
	mov	esi, DWORD PTR [ecx-4]
	sub	ecx, 4
	sub	eax, 4
	mov	DWORD PTR [eax], esi
	cmp	ecx, edx
	jne	SHORT $LL12@Unchecked_@3
	pop	esi
$LN11@Unchecked_@3:

; 3697 : 	}

	ret	0
??$_Unchecked_move_backward@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@00@Z ENDP ; stdext::_Unchecked_move_backward<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@0AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@0AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@0AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >, COMDAT

; 233  : 	for (; _First != _Last; ++_First)
; 234  : 		_Al.destroy(_First);
; 235  : 	}

	ret	0
??$_Destroy_range@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@0AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@0AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Destroy_range@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@0AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@0AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >, COMDAT

; 233  : 	for (; _First != _Last; ++_First)
; 234  : 		_Al.destroy(_First);
; 235  : 	}

	ret	0
??$_Destroy_range@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@0AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@0AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Destroy_range@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@0AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@0AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >, COMDAT

; 233  : 	for (; _First != _Last; ++_First)
; 234  : 		_Al.destroy(_First);
; 235  : 	}

	ret	0
??$_Destroy_range@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@0AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
_TEXT	ENDS
PUBLIC	??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,unsigned int,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_fill_n<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,unsigned int,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >, COMDAT

; 394  : 
; 395  :  #if _HAS_ITERATOR_DEBUGGING
; 396  : //	if (_Count < 0)
; 397  : //		_DEBUG_ERROR("negative count in uninitialized fill");
; 398  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 399  : 
; 400  : 	_FwdIt _Next = _First;
; 401  : 
; 402  : 	_TRY_BEGIN
; 403  : 	for (; 0 < _Count; --_Count, ++_First)

	mov	ecx, DWORD PTR __Count$[esp-4]
	test	ecx, ecx
	jbe	SHORT $LN4@Uninit_fil
	mov	edx, DWORD PTR __Val$[esp-4]
	mov	eax, DWORD PTR __First$[esp-4]
	push	esi
$LL6@Uninit_fil:

; 404  : 		_Al.construct(_First, _Val);

	test	eax, eax
	je	SHORT $LN5@Uninit_fil
	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [eax], esi
$LN5@Uninit_fil:
	dec	ecx
	add	eax, 4
	test	ecx, ecx
	ja	SHORT $LL6@Uninit_fil
	pop	esi
$LN4@Uninit_fil:

; 405  : 	_CATCH_ALL
; 406  : 	for (; _Next != _First; ++_Next)
; 407  : 		_Al.destroy(_Next);
; 408  : 	_RERAISE;
; 409  : 	_CATCH_END
; 410  : 	}

	ret	0
??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_fill_n<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,unsigned int,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
_TEXT	ENDS
PUBLIC	??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,unsigned int,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_fill_n<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,unsigned int,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >, COMDAT

; 394  : 
; 395  :  #if _HAS_ITERATOR_DEBUGGING
; 396  : //	if (_Count < 0)
; 397  : //		_DEBUG_ERROR("negative count in uninitialized fill");
; 398  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 399  : 
; 400  : 	_FwdIt _Next = _First;
; 401  : 
; 402  : 	_TRY_BEGIN
; 403  : 	for (; 0 < _Count; --_Count, ++_First)

	mov	ecx, DWORD PTR __Count$[esp-4]
	test	ecx, ecx
	jbe	SHORT $LN4@Uninit_fil@2
	mov	edx, DWORD PTR __Val$[esp-4]
	mov	eax, DWORD PTR __First$[esp-4]
	push	esi
$LL6@Uninit_fil@2:

; 404  : 		_Al.construct(_First, _Val);

	test	eax, eax
	je	SHORT $LN5@Uninit_fil@2
	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [eax], esi
$LN5@Uninit_fil@2:
	dec	ecx
	add	eax, 4
	test	ecx, ecx
	ja	SHORT $LL6@Uninit_fil@2
	pop	esi
$LN4@Uninit_fil@2:

; 405  : 	_CATCH_ALL
; 406  : 	for (; _Next != _First; ++_Next)
; 407  : 		_Al.destroy(_Next);
; 408  : 	_RERAISE;
; 409  : 	_CATCH_END
; 410  : 	}

	ret	0
??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_fill_n<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,unsigned int,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
_TEXT	ENDS
PUBLIC	??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,unsigned int,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_fill_n<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,unsigned int,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >, COMDAT

; 394  : 
; 395  :  #if _HAS_ITERATOR_DEBUGGING
; 396  : //	if (_Count < 0)
; 397  : //		_DEBUG_ERROR("negative count in uninitialized fill");
; 398  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 399  : 
; 400  : 	_FwdIt _Next = _First;
; 401  : 
; 402  : 	_TRY_BEGIN
; 403  : 	for (; 0 < _Count; --_Count, ++_First)

	mov	ecx, DWORD PTR __Count$[esp-4]
	test	ecx, ecx
	jbe	SHORT $LN4@Uninit_fil@3
	mov	edx, DWORD PTR __Val$[esp-4]
	mov	eax, DWORD PTR __First$[esp-4]
	push	esi
$LL6@Uninit_fil@3:

; 404  : 		_Al.construct(_First, _Val);

	test	eax, eax
	je	SHORT $LN5@Uninit_fil@3
	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [eax], esi
$LN5@Uninit_fil@3:
	dec	ecx
	add	eax, 4
	test	ecx, ecx
	ja	SHORT $LL6@Uninit_fil@3
	pop	esi
$LN4@Uninit_fil@3:

; 405  : 	_CATCH_ALL
; 406  : 	for (; _Next != _First; ++_Next)
; 407  : 		_Al.destroy(_Next);
; 408  : 	_RERAISE;
; 409  : 	_CATCH_END
; 410  : 	}

	ret	0
??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_fill_n<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,unsigned int,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
_TEXT	ENDS
PUBLIC	??$unchecked_uninitialized_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@Z ; stdext::unchecked_uninitialized_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
; Function compile flags: /Ogtpy
;	COMDAT ??$unchecked_uninitialized_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@Z
_TEXT	SEGMENT
$T229479 = -4						; size = 1
__Cat$229484 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@Z PROC ; stdext::unchecked_uninitialized_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >, COMDAT

; 819  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

	push	ecx

; 820  : 	return (_STD _Uninit_copy(_CHECKED_BASE(_First),
; 821  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 822  : 		_STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T229479[esp+4], 0
	mov	eax, DWORD PTR $T229479[esp+4]
	mov	ecx, DWORD PTR __Cat$229484[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >

; 823  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$unchecked_uninitialized_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@Z ENDP ; stdext::unchecked_uninitialized_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
_TEXT	ENDS
PUBLIC	??$unchecked_uninitialized_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@Z ; stdext::unchecked_uninitialized_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
; Function compile flags: /Ogtpy
;	COMDAT ??$unchecked_uninitialized_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@Z
_TEXT	SEGMENT
$T229488 = -4						; size = 1
__Cat$229493 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@Z PROC ; stdext::unchecked_uninitialized_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >, COMDAT

; 819  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

	push	ecx

; 820  : 	return (_STD _Uninit_copy(_CHECKED_BASE(_First),
; 821  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 822  : 		_STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T229488[esp+4], 0
	mov	eax, DWORD PTR $T229488[esp+4]
	mov	ecx, DWORD PTR __Cat$229493[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >

; 823  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$unchecked_uninitialized_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@Z ENDP ; stdext::unchecked_uninitialized_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
_TEXT	ENDS
PUBLIC	??$unchecked_uninitialized_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@Z ; stdext::unchecked_uninitialized_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
; Function compile flags: /Ogtpy
;	COMDAT ??$unchecked_uninitialized_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@Z
_TEXT	SEGMENT
$T229497 = -4						; size = 1
__Cat$229502 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@Z PROC ; stdext::unchecked_uninitialized_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >, COMDAT

; 819  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

	push	ecx

; 820  : 	return (_STD _Uninit_copy(_CHECKED_BASE(_First),
; 821  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 822  : 		_STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T229497[esp+4], 0
	mov	eax, DWORD PTR $T229497[esp+4]
	mov	ecx, DWORD PTR __Cat$229502[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >

; 823  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$unchecked_uninitialized_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@Z ENDP ; stdext::unchecked_uninitialized_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
_TEXT	ENDS
PUBLIC	?begin@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@XZ ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::begin
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xhash
;	COMDAT ?begin@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@XZ PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::begin, COMDAT
; _this$ = ecx

; 377  : 		return (_List.begin());

	mov	eax, DWORD PTR [ecx+8]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 378  : 		}

	ret	4
?begin@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@XZ ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@XZ ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@XZ PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::end, COMDAT
; _this$ = ecx

; 387  : 		return (_List.end());

	mov	ecx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 388  : 		}

	ret	4
?end@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@XZ ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::end
_TEXT	ENDS
PUBLIC	??C?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QBEPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>::operator->
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ??C?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QBEPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@XZ
_TEXT	SEGMENT
??C?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QBEPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>::operator->, COMDAT
; _this$ = ecx

; 399  : 			return (&**this);

	mov	eax, DWORD PTR [ecx]
	add	eax, 8

; 400  : 			}

	ret	0
??C?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QBEPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>::operator->
_TEXT	ENDS
PUBLIC	?begin@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@XZ ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::begin
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xhash
;	COMDAT ?begin@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@XZ PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::begin, COMDAT
; _this$ = ecx

; 377  : 		return (_List.begin());

	mov	eax, DWORD PTR [ecx+8]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 378  : 		}

	ret	4
?begin@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@XZ ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@XZ ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@XZ PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::end, COMDAT
; _this$ = ecx

; 387  : 		return (_List.end());

	mov	ecx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 388  : 		}

	ret	4
?end@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@XZ ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::end
_TEXT	ENDS
PUBLIC	??C?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QBEPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>::operator->
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ??C?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QBEPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@XZ
_TEXT	SEGMENT
??C?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QBEPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>::operator->, COMDAT
; _this$ = ecx

; 399  : 			return (&**this);

	mov	eax, DWORD PTR [ecx]
	add	eax, 8

; 400  : 			}

	ret	0
??C?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QBEPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>::operator->
_TEXT	ENDS
PUBLIC	?begin@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@XZ ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::begin
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xhash
;	COMDAT ?begin@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@XZ PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::begin, COMDAT
; _this$ = ecx

; 377  : 		return (_List.begin());

	mov	eax, DWORD PTR [ecx+8]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 378  : 		}

	ret	4
?begin@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@XZ ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@XZ ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@XZ PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::end, COMDAT
; _this$ = ecx

; 387  : 		return (_List.end());

	mov	ecx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 388  : 		}

	ret	4
?end@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@XZ ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::end
_TEXT	ENDS
PUBLIC	??C?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QBEPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>::operator->
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ??C?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QBEPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@XZ
_TEXT	SEGMENT
??C?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QBEPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>::operator->, COMDAT
; _this$ = ecx

; 399  : 			return (&**this);

	mov	eax, DWORD PTR [ecx]
	add	eax, 8

; 400  : 			}

	ret	0
??C?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QBEPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>::operator->
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::lower_bound
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xhash
;	COMDAT ?lower_bound@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z
_TEXT	SEGMENT
$T229694 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 637  : 		{	// find leftmost not less than _Keyval in mutable hash table

	push	ecx
	push	ebx
	push	ebp

; 638  : 		size_type _Bucket = _Hashval(_Keyval);

	mov	ebp, DWORD PTR __Keyval$[esp+8]
	push	esi
	push	edi
	push	ebp
	mov	ebx, ecx
	call	??R?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@std@@QBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator()
	mov	ecx, DWORD PTR [ebx+32]
	mov	edi, ecx
	and	edi, eax
	cmp	DWORD PTR [ebx+36], edi
	ja	SHORT $LN9@lower_boun
	shr	ecx, 1
	or	eax, -1
	sub	eax, ecx
	add	edi, eax
$LN9@lower_boun:

; 639  : 		iterator _Where;
; 640  : 		for (_Where = _Get_iter_from_vec(_Vec[_Bucket]); _Vec[_Bucket + 1] != _Where; ++_Where)

	mov	ecx, DWORD PTR [ebx+20]
	mov	esi, DWORD PTR [ecx+edi*4]
	lea	eax, DWORD PTR [ecx+edi*4]
	mov	DWORD PTR __Where$[esp+16], esi
	cmp	DWORD PTR [eax+4], esi
	je	SHORT $LN2@lower_boun
$LL24@lower_boun:

; 641  : 			if (!this->comp(this->_Kfn(*_Where), _Keyval))

	lea	edx, DWORD PTR [esi+8]
	push	ebp
	push	edx
	call	DWORD PTR __imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
	add	esp, 8
	test	al, al
	jne	SHORT $LN75@lower_boun
	mov	esi, DWORD PTR [esi]
	mov	eax, DWORD PTR [ebx+20]
	cmp	DWORD PTR [eax+edi*4+4], esi
	jne	SHORT $LL24@lower_boun

; 639  : 		iterator _Where;
; 640  : 		for (_Where = _Get_iter_from_vec(_Vec[_Bucket]); _Vec[_Bucket + 1] != _Where; ++_Where)

	mov	DWORD PTR __Where$[esp+16], esi
$LN2@lower_boun:

; 644  : 		return (end());

	mov	ecx, DWORD PTR [ebx+8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+16]
	pop	edi
	pop	esi
	pop	ebp
	mov	DWORD PTR [eax], ecx
	pop	ebx

; 645  : 		}

	pop	ecx
	ret	8
$LN75@lower_boun:

; 639  : 		iterator _Where;
; 640  : 		for (_Where = _Get_iter_from_vec(_Vec[_Bucket]); _Vec[_Bucket + 1] != _Where; ++_Where)

	mov	DWORD PTR __Where$[esp+16], esi

; 642  : 				return (this->comp(_Keyval,
; 643  : 					this->_Kfn(*_Where)) ? end() : _Where);

	add	esi, 8
	push	esi
	push	ebp
	call	DWORD PTR __imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
	add	esp, 8
	test	al, al
	jne	SHORT $LN7@lower_boun
	mov	ecx, DWORD PTR [ebx+8]
	pop	edi
	lea	eax, DWORD PTR $T229694[esp+16]
	pop	esi
	mov	DWORD PTR $T229694[esp+12], ecx
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+8]
	pop	ebp
	mov	DWORD PTR [eax], edx
	pop	ebx

; 645  : 		}

	pop	ecx
	ret	8
$LN7@lower_boun:
	pop	edi

; 642  : 				return (this->comp(_Keyval,
; 643  : 					this->_Kfn(*_Where)) ? end() : _Where);

	lea	eax, DWORD PTR __Where$[esp+12]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+12]
	pop	esi
	pop	ebp
	mov	DWORD PTR [eax], edx
	pop	ebx

; 645  : 		}

	pop	ecx
	ret	8
?lower_bound@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::lower_bound
; Function compile flags: /Ogtpy
;	COMDAT ?lower_bound@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z
_TEXT	SEGMENT
$T229861 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 637  : 		{	// find leftmost not less than _Keyval in mutable hash table

	push	ecx
	push	ebx
	push	ebp

; 638  : 		size_type _Bucket = _Hashval(_Keyval);

	mov	ebp, DWORD PTR __Keyval$[esp+8]
	push	esi
	push	edi
	push	ebp
	mov	ebx, ecx
	call	??R?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@std@@QBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator()
	mov	ecx, DWORD PTR [ebx+32]
	mov	edi, ecx
	and	edi, eax
	cmp	DWORD PTR [ebx+36], edi
	ja	SHORT $LN9@lower_boun@2
	shr	ecx, 1
	or	eax, -1
	sub	eax, ecx
	add	edi, eax
$LN9@lower_boun@2:

; 639  : 		iterator _Where;
; 640  : 		for (_Where = _Get_iter_from_vec(_Vec[_Bucket]); _Vec[_Bucket + 1] != _Where; ++_Where)

	mov	ecx, DWORD PTR [ebx+20]
	mov	esi, DWORD PTR [ecx+edi*4]
	lea	eax, DWORD PTR [ecx+edi*4]
	mov	DWORD PTR __Where$[esp+16], esi
	cmp	DWORD PTR [eax+4], esi
	je	SHORT $LN2@lower_boun@2
$LL24@lower_boun@2:

; 641  : 			if (!this->comp(this->_Kfn(*_Where), _Keyval))

	lea	edx, DWORD PTR [esi+8]
	push	ebp
	push	edx
	call	DWORD PTR __imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
	add	esp, 8
	test	al, al
	jne	SHORT $LN75@lower_boun@2
	mov	esi, DWORD PTR [esi]
	mov	eax, DWORD PTR [ebx+20]
	cmp	DWORD PTR [eax+edi*4+4], esi
	jne	SHORT $LL24@lower_boun@2

; 639  : 		iterator _Where;
; 640  : 		for (_Where = _Get_iter_from_vec(_Vec[_Bucket]); _Vec[_Bucket + 1] != _Where; ++_Where)

	mov	DWORD PTR __Where$[esp+16], esi
$LN2@lower_boun@2:

; 644  : 		return (end());

	mov	ecx, DWORD PTR [ebx+8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+16]
	pop	edi
	pop	esi
	pop	ebp
	mov	DWORD PTR [eax], ecx
	pop	ebx

; 645  : 		}

	pop	ecx
	ret	8
$LN75@lower_boun@2:

; 639  : 		iterator _Where;
; 640  : 		for (_Where = _Get_iter_from_vec(_Vec[_Bucket]); _Vec[_Bucket + 1] != _Where; ++_Where)

	mov	DWORD PTR __Where$[esp+16], esi

; 642  : 				return (this->comp(_Keyval,
; 643  : 					this->_Kfn(*_Where)) ? end() : _Where);

	add	esi, 8
	push	esi
	push	ebp
	call	DWORD PTR __imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
	add	esp, 8
	test	al, al
	jne	SHORT $LN7@lower_boun@2
	mov	ecx, DWORD PTR [ebx+8]
	pop	edi
	lea	eax, DWORD PTR $T229861[esp+16]
	pop	esi
	mov	DWORD PTR $T229861[esp+12], ecx
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+8]
	pop	ebp
	mov	DWORD PTR [eax], edx
	pop	ebx

; 645  : 		}

	pop	ecx
	ret	8
$LN7@lower_boun@2:
	pop	edi

; 642  : 				return (this->comp(_Keyval,
; 643  : 					this->_Kfn(*_Where)) ? end() : _Where);

	lea	eax, DWORD PTR __Where$[esp+12]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+12]
	pop	esi
	pop	ebp
	mov	DWORD PTR [eax], edx
	pop	ebx

; 645  : 		}

	pop	ecx
	ret	8
?lower_bound@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::lower_bound
; Function compile flags: /Ogtpy
;	COMDAT ?lower_bound@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z
_TEXT	SEGMENT
$T230028 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 637  : 		{	// find leftmost not less than _Keyval in mutable hash table

	push	ecx
	push	ebx
	push	ebp

; 638  : 		size_type _Bucket = _Hashval(_Keyval);

	mov	ebp, DWORD PTR __Keyval$[esp+8]
	push	esi
	push	edi
	push	ebp
	mov	ebx, ecx
	call	??R?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@std@@QBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator()
	mov	ecx, DWORD PTR [ebx+32]
	mov	edi, ecx
	and	edi, eax
	cmp	DWORD PTR [ebx+36], edi
	ja	SHORT $LN9@lower_boun@3
	shr	ecx, 1
	or	eax, -1
	sub	eax, ecx
	add	edi, eax
$LN9@lower_boun@3:

; 639  : 		iterator _Where;
; 640  : 		for (_Where = _Get_iter_from_vec(_Vec[_Bucket]); _Vec[_Bucket + 1] != _Where; ++_Where)

	mov	ecx, DWORD PTR [ebx+20]
	mov	esi, DWORD PTR [ecx+edi*4]
	lea	eax, DWORD PTR [ecx+edi*4]
	mov	DWORD PTR __Where$[esp+16], esi
	cmp	DWORD PTR [eax+4], esi
	je	SHORT $LN2@lower_boun@3
$LL24@lower_boun@3:

; 641  : 			if (!this->comp(this->_Kfn(*_Where), _Keyval))

	lea	edx, DWORD PTR [esi+8]
	push	ebp
	push	edx
	call	DWORD PTR __imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
	add	esp, 8
	test	al, al
	jne	SHORT $LN75@lower_boun@3
	mov	esi, DWORD PTR [esi]
	mov	eax, DWORD PTR [ebx+20]
	cmp	DWORD PTR [eax+edi*4+4], esi
	jne	SHORT $LL24@lower_boun@3

; 639  : 		iterator _Where;
; 640  : 		for (_Where = _Get_iter_from_vec(_Vec[_Bucket]); _Vec[_Bucket + 1] != _Where; ++_Where)

	mov	DWORD PTR __Where$[esp+16], esi
$LN2@lower_boun@3:

; 644  : 		return (end());

	mov	ecx, DWORD PTR [ebx+8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+16]
	pop	edi
	pop	esi
	pop	ebp
	mov	DWORD PTR [eax], ecx
	pop	ebx

; 645  : 		}

	pop	ecx
	ret	8
$LN75@lower_boun@3:

; 639  : 		iterator _Where;
; 640  : 		for (_Where = _Get_iter_from_vec(_Vec[_Bucket]); _Vec[_Bucket + 1] != _Where; ++_Where)

	mov	DWORD PTR __Where$[esp+16], esi

; 642  : 				return (this->comp(_Keyval,
; 643  : 					this->_Kfn(*_Where)) ? end() : _Where);

	add	esi, 8
	push	esi
	push	ebp
	call	DWORD PTR __imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
	add	esp, 8
	test	al, al
	jne	SHORT $LN7@lower_boun@3
	mov	ecx, DWORD PTR [ebx+8]
	pop	edi
	lea	eax, DWORD PTR $T230028[esp+16]
	pop	esi
	mov	DWORD PTR $T230028[esp+12], ecx
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+8]
	pop	ebp
	mov	DWORD PTR [eax], edx
	pop	ebx

; 645  : 		}

	pop	ecx
	ret	8
$LN7@lower_boun@3:
	pop	edi

; 642  : 				return (this->comp(_Keyval,
; 643  : 					this->_Kfn(*_Where)) ? end() : _Where);

	lea	eax, DWORD PTR __Where$[esp+12]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+12]
	pop	esi
	pop	ebp
	mov	DWORD PTR [eax], edx
	pop	ebx

; 645  : 		}

	pop	ecx
	ret	8
?lower_bound@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	??1?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ ; std::_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::~_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ PROC ; std::_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::~_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >, COMDAT
; _this$ = ecx
	ret	0
??1?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ ENDP ; std::_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::~_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >
_TEXT	ENDS
PUBLIC	??1?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ ; std::_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::~_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ PROC ; std::_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::~_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >, COMDAT
; _this$ = ecx
	ret	0
??1?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ ENDP ; std::_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::~_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >
_TEXT	ENDS
PUBLIC	??1?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ ; std::_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::~_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ PROC ; std::_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::~_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >, COMDAT
; _this$ = ecx
	ret	0
??1?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ ENDP ; std::_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::~_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >
_TEXT	ENDS
PUBLIC	??0?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE@ABV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@1@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??0?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE@ABV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
??0?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE@ABV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@1@@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >, COMDAT
; _this$ = ecx

; 476  : 		{	// construct empty vector with allocator

	mov	eax, ecx

; 477  : 		_Buy(0);

	xor	ecx, ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx

; 478  : 		}

	ret	4
??0?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE@ABV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@1@@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
_TEXT	ENDS
PUBLIC	??0?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE@ABV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@1@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE@ABV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
??0?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE@ABV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@1@@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >, COMDAT
; _this$ = ecx

; 476  : 		{	// construct empty vector with allocator

	mov	eax, ecx

; 477  : 		_Buy(0);

	xor	ecx, ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx

; 478  : 		}

	ret	4
??0?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE@ABV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@1@@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
_TEXT	ENDS
PUBLIC	??0?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE@ABV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@1@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE@ABV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
??0?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE@ABV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@1@@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >, COMDAT
; _this$ = ecx

; 476  : 		{	// construct empty vector with allocator

	mov	eax, ecx

; 477  : 		_Buy(0);

	xor	ecx, ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx

; 478  : 		}

	ret	4
??0?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE@ABV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@1@@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
_TEXT	ENDS
PUBLIC	??0?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@1@@Z ; std::_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ??0?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@1@@Z PROC ; std::_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >, COMDAT
; _this$ = ecx

; 85   : 		{	// construct base, and allocator from _Al

	mov	eax, ecx

; 86   : 		}

	ret	4
??0?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@1@@Z ENDP ; std::_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node>::destroy
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?destroy@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z PROC ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node>::destroy, COMDAT
; _this$ = ecx

; 160  : 		_Destroy(_Ptr);

	mov	ecx, DWORD PTR __Ptr$[esp-4]
	add	ecx, 8
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 161  : 		}

	ret	4
?destroy@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z ENDP ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node>::destroy
_TEXT	ENDS
PUBLIC	??0?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@1@@Z ; std::_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ??0?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@1@@Z PROC ; std::_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >, COMDAT
; _this$ = ecx

; 85   : 		{	// construct base, and allocator from _Al

	mov	eax, ecx

; 86   : 		}

	ret	4
??0?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@1@@Z ENDP ; std::_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node>::destroy
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?destroy@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z PROC ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node>::destroy, COMDAT
; _this$ = ecx

; 160  : 		_Destroy(_Ptr);

	mov	ecx, DWORD PTR __Ptr$[esp-4]
	add	ecx, 8
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 161  : 		}

	ret	4
?destroy@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z ENDP ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node>::destroy
_TEXT	ENDS
PUBLIC	??0?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@1@@Z ; std::_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ??0?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@1@@Z PROC ; std::_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >, COMDAT
; _this$ = ecx

; 85   : 		{	// construct base, and allocator from _Al

	mov	eax, ecx

; 86   : 		}

	ret	4
??0?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@1@@Z ENDP ; std::_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node>::destroy
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?destroy@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z PROC ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node>::destroy, COMDAT
; _this$ = ecx

; 160  : 		_Destroy(_Ptr);

	mov	ecx, DWORD PTR __Ptr$[esp-4]
	add	ecx, 8
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 161  : 		}

	ret	4
?destroy@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z ENDP ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node>::destroy
_TEXT	ENDS
PUBLIC	?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Buynode
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z$0
__unwindtable$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z$2
__ehfuncinfo$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	ENDS
;	COMDAT ?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Next$ = 8						; size = 4
__Prev$ = 12						; size = 4
__Val$ = 16						; size = 4
?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Buynode, COMDAT
; _this$ = ecx

; 1190 : 		{	// allocate a node and set links and value

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp

; 1191 : 		_Nodeptr _Pnode = this->_Alnod.allocate(1);

	push	40					; 00000028H
	call	??2@YAPAXI@Z				; operator new
	mov	esi, eax
	add	esp, 4
	mov	DWORD PTR __Pnode$[ebp], esi

; 1192 : 		int _Linkcnt = 0;
; 1193 : 
; 1194 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1195 : 		this->_Alptr.construct(&_Nextnode(_Pnode), _Next);

	test	esi, esi
	je	SHORT $LN27@Buynode@4
	mov	eax, DWORD PTR __Next$[ebp]
	mov	DWORD PTR [esi], eax
$LN27@Buynode@4:

; 1196 : 		++_Linkcnt;
; 1197 : 		this->_Alptr.construct(&_Prevnode(_Pnode), _Prev);

	lea	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN37@Buynode@4
	mov	ecx, DWORD PTR __Prev$[ebp]
	mov	DWORD PTR [eax], ecx
$LN37@Buynode@4:

; 1198 : 		++_Linkcnt;
; 1199 : 		this->_Alval.construct(&_Myval(_Pnode), _Val);

	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	lea	eax, DWORD PTR [esi+8]
	push	eax
	call	??$_Construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@U12@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@ABU10@@Z ; std::_Construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >

; 1207 : 		_CATCH_END
; 1208 : 		return (_Pnode);
; 1209 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	add	esp, 8
	pop	edi
	mov	eax, esi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
__catch$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z$0:

; 1200 : 		_CATCH_ALL
; 1201 : 		if (1 < _Linkcnt)
; 1202 : 			this->_Alptr.destroy(&_Prevnode(_Pnode));
; 1203 : 		if (0 < _Linkcnt)
; 1204 : 			this->_Alptr.destroy(&_Nextnode(_Pnode));
; 1205 : 		this->_Alnod.deallocate(_Pnode, 1);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1206 : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN54@Buynode@4:
$LN53@Buynode@4:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z:
	mov	eax, OFFSET __ehfuncinfo$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Buynode
PUBLIC	?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Buynode
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z$0
__unwindtable$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z$2
__ehfuncinfo$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	ENDS
;	COMDAT ?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Next$ = 8						; size = 4
__Prev$ = 12						; size = 4
__Val$ = 16						; size = 4
?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Buynode, COMDAT
; _this$ = ecx

; 1190 : 		{	// allocate a node and set links and value

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp

; 1191 : 		_Nodeptr _Pnode = this->_Alnod.allocate(1);

	push	40					; 00000028H
	call	??2@YAPAXI@Z				; operator new
	mov	esi, eax
	add	esp, 4
	mov	DWORD PTR __Pnode$[ebp], esi

; 1192 : 		int _Linkcnt = 0;
; 1193 : 
; 1194 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1195 : 		this->_Alptr.construct(&_Nextnode(_Pnode), _Next);

	test	esi, esi
	je	SHORT $LN27@Buynode@5
	mov	eax, DWORD PTR __Next$[ebp]
	mov	DWORD PTR [esi], eax
$LN27@Buynode@5:

; 1196 : 		++_Linkcnt;
; 1197 : 		this->_Alptr.construct(&_Prevnode(_Pnode), _Prev);

	lea	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN37@Buynode@5
	mov	ecx, DWORD PTR __Prev$[ebp]
	mov	DWORD PTR [eax], ecx
$LN37@Buynode@5:

; 1198 : 		++_Linkcnt;
; 1199 : 		this->_Alval.construct(&_Myval(_Pnode), _Val);

	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	lea	eax, DWORD PTR [esi+8]
	push	eax
	call	??$_Construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@U12@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@ABU10@@Z ; std::_Construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >

; 1207 : 		_CATCH_END
; 1208 : 		return (_Pnode);
; 1209 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	add	esp, 8
	pop	edi
	mov	eax, esi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
__catch$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z$0:

; 1200 : 		_CATCH_ALL
; 1201 : 		if (1 < _Linkcnt)
; 1202 : 			this->_Alptr.destroy(&_Prevnode(_Pnode));
; 1203 : 		if (0 < _Linkcnt)
; 1204 : 			this->_Alptr.destroy(&_Nextnode(_Pnode));
; 1205 : 		this->_Alnod.deallocate(_Pnode, 1);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1206 : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN54@Buynode@5:
$LN53@Buynode@5:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z:
	mov	eax, OFFSET __ehfuncinfo$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Buynode
PUBLIC	?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Buynode
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z$0
__unwindtable$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z$2
__ehfuncinfo$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	ENDS
;	COMDAT ?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Next$ = 8						; size = 4
__Prev$ = 12						; size = 4
__Val$ = 16						; size = 4
?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Buynode, COMDAT
; _this$ = ecx

; 1190 : 		{	// allocate a node and set links and value

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp

; 1191 : 		_Nodeptr _Pnode = this->_Alnod.allocate(1);

	push	40					; 00000028H
	call	??2@YAPAXI@Z				; operator new
	mov	esi, eax
	add	esp, 4
	mov	DWORD PTR __Pnode$[ebp], esi

; 1192 : 		int _Linkcnt = 0;
; 1193 : 
; 1194 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1195 : 		this->_Alptr.construct(&_Nextnode(_Pnode), _Next);

	test	esi, esi
	je	SHORT $LN27@Buynode@6
	mov	eax, DWORD PTR __Next$[ebp]
	mov	DWORD PTR [esi], eax
$LN27@Buynode@6:

; 1196 : 		++_Linkcnt;
; 1197 : 		this->_Alptr.construct(&_Prevnode(_Pnode), _Prev);

	lea	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN37@Buynode@6
	mov	ecx, DWORD PTR __Prev$[ebp]
	mov	DWORD PTR [eax], ecx
$LN37@Buynode@6:

; 1198 : 		++_Linkcnt;
; 1199 : 		this->_Alval.construct(&_Myval(_Pnode), _Val);

	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	lea	eax, DWORD PTR [esi+8]
	push	eax
	call	??$_Construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@U12@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@ABU10@@Z ; std::_Construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >

; 1207 : 		_CATCH_END
; 1208 : 		return (_Pnode);
; 1209 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	add	esp, 8
	pop	edi
	mov	eax, esi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
__catch$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z$0:

; 1200 : 		_CATCH_ALL
; 1201 : 		if (1 < _Linkcnt)
; 1202 : 			this->_Alptr.destroy(&_Prevnode(_Pnode));
; 1203 : 		if (0 < _Linkcnt)
; 1204 : 			this->_Alptr.destroy(&_Nextnode(_Pnode));
; 1205 : 		this->_Alnod.deallocate(_Pnode, 1);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1206 : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN54@Buynode@6:
$LN53@Buynode@6:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z:
	mov	eax, OFFSET __ehfuncinfo$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Buynode
PUBLIC	??$_Destroy_range@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@0AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@0AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@0AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >, COMDAT

; 225  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 226  : 	}

	ret	0
??$_Destroy_range@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@0AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@0AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Destroy_range@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@0AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@0AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >, COMDAT

; 225  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 226  : 	}

	ret	0
??$_Destroy_range@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@0AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@0AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Destroy_range@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@0AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@0AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >, COMDAT

; 225  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 226  : 	}

	ret	0
??$_Destroy_range@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@0AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
_TEXT	ENDS
PUBLIC	??$unchecked_uninitialized_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@stdext@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IABV123@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@Z ; stdext::unchecked_uninitialized_fill_n<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,unsigned int,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$unchecked_uninitialized_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@stdext@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IABV123@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@Z
_TEXT	SEGMENT
$T231165 = -4						; size = 1
__Cat$231169 = -4					; size = 1
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@stdext@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IABV123@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@Z PROC ; stdext::unchecked_uninitialized_fill_n<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,unsigned int,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >, COMDAT

; 940  : 	{	// copy _Count *_Val to raw _First, using _Al

	push	ecx

; 941  : 	_STD _Uninit_fill_n(_First, _Count, _Val, _Al,
; 942  : 		_STD _Ptr_cat(_First, _First), _STD _Range_checked_iterator_tag());

	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T231165[esp+4], 0
	mov	eax, DWORD PTR $T231165[esp+4]
	mov	ecx, DWORD PTR __Cat$231169[esp+4]
	push	eax
	mov	eax, DWORD PTR __Val$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Count$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,unsigned int,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >

; 943  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$unchecked_uninitialized_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@stdext@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IABV123@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@Z ENDP ; stdext::unchecked_uninitialized_fill_n<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,unsigned int,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
_TEXT	ENDS
PUBLIC	??$unchecked_uninitialized_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@stdext@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IABV123@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@Z ; stdext::unchecked_uninitialized_fill_n<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,unsigned int,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
; Function compile flags: /Ogtpy
;	COMDAT ??$unchecked_uninitialized_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@stdext@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IABV123@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@Z
_TEXT	SEGMENT
$T231174 = -4						; size = 1
__Cat$231178 = -4					; size = 1
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@stdext@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IABV123@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@Z PROC ; stdext::unchecked_uninitialized_fill_n<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,unsigned int,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >, COMDAT

; 940  : 	{	// copy _Count *_Val to raw _First, using _Al

	push	ecx

; 941  : 	_STD _Uninit_fill_n(_First, _Count, _Val, _Al,
; 942  : 		_STD _Ptr_cat(_First, _First), _STD _Range_checked_iterator_tag());

	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T231174[esp+4], 0
	mov	eax, DWORD PTR $T231174[esp+4]
	mov	ecx, DWORD PTR __Cat$231178[esp+4]
	push	eax
	mov	eax, DWORD PTR __Val$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Count$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,unsigned int,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >

; 943  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$unchecked_uninitialized_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@stdext@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IABV123@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@Z ENDP ; stdext::unchecked_uninitialized_fill_n<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,unsigned int,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
_TEXT	ENDS
PUBLIC	??$unchecked_uninitialized_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@stdext@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IABV123@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@Z ; stdext::unchecked_uninitialized_fill_n<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,unsigned int,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
; Function compile flags: /Ogtpy
;	COMDAT ??$unchecked_uninitialized_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@stdext@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IABV123@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@Z
_TEXT	SEGMENT
$T231183 = -4						; size = 1
__Cat$231187 = -4					; size = 1
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@stdext@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IABV123@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@Z PROC ; stdext::unchecked_uninitialized_fill_n<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,unsigned int,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >, COMDAT

; 940  : 	{	// copy _Count *_Val to raw _First, using _Al

	push	ecx

; 941  : 	_STD _Uninit_fill_n(_First, _Count, _Val, _Al,
; 942  : 		_STD _Ptr_cat(_First, _First), _STD _Range_checked_iterator_tag());

	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T231183[esp+4], 0
	mov	eax, DWORD PTR $T231183[esp+4]
	mov	ecx, DWORD PTR __Cat$231187[esp+4]
	push	eax
	mov	eax, DWORD PTR __Val$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Count$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,unsigned int,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >

; 943  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$unchecked_uninitialized_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@stdext@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IABV123@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@Z ENDP ; stdext::unchecked_uninitialized_fill_n<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,unsigned int,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@U_Undefined_move_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_move<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >,std::_Undefined_move_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Uninit_move@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@U_Undefined_move_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T231201 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$231204 = 16					; size = 1
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_move@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@U_Undefined_move_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_move<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >,std::_Undefined_move_tag>, COMDAT

; 206  : 	{	// move defaults to copy if there is not a more effecient way

	push	ecx

; 207  : 	return (_STDEXT unchecked_uninitialized_copy(_First, _Last, _Dest, _Al));

	mov	ecx, DWORD PTR __Cat$231204[esp]
	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T231201[esp+4], 0
	mov	eax, DWORD PTR $T231201[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >

; 208  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$_Uninit_move@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@U_Undefined_move_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_move<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >,std::_Undefined_move_tag>
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@U_Undefined_move_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_move<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >,std::_Undefined_move_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Uninit_move@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@U_Undefined_move_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T231220 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$231223 = 16					; size = 1
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_move@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@U_Undefined_move_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_move<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >,std::_Undefined_move_tag>, COMDAT

; 206  : 	{	// move defaults to copy if there is not a more effecient way

	push	ecx

; 207  : 	return (_STDEXT unchecked_uninitialized_copy(_First, _Last, _Dest, _Al));

	mov	ecx, DWORD PTR __Cat$231223[esp]
	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T231220[esp+4], 0
	mov	eax, DWORD PTR $T231220[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >

; 208  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$_Uninit_move@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@U_Undefined_move_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_move<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >,std::_Undefined_move_tag>
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@U_Undefined_move_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_move<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >,std::_Undefined_move_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Uninit_move@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@U_Undefined_move_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T231239 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$231242 = 16					; size = 1
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_move@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@U_Undefined_move_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_move<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >,std::_Undefined_move_tag>, COMDAT

; 206  : 	{	// move defaults to copy if there is not a more effecient way

	push	ecx

; 207  : 	return (_STDEXT unchecked_uninitialized_copy(_First, _Last, _Dest, _Al));

	mov	ecx, DWORD PTR __Cat$231242[esp]
	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T231239[esp+4], 0
	mov	eax, DWORD PTR $T231239[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >

; 208  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$_Uninit_move@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@U_Undefined_move_tag@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_move<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >,std::_Undefined_move_tag>
_TEXT	ENDS
PUBLIC	?find@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::find
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xhash
;	COMDAT ?find@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::find, COMDAT
; _this$ = ecx

; 620  : 		return (lower_bound(_Keyval));

	mov	eax, DWORD PTR __Keyval$[esp-4]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[esp]
	push	eax
	push	esi
	call	?lower_bound@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::lower_bound
	mov	eax, esi
	pop	esi

; 621  : 		}

	ret	8
?find@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::find
_TEXT	ENDS
PUBLIC	?find@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::find
; Function compile flags: /Ogtpy
;	COMDAT ?find@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::find, COMDAT
; _this$ = ecx

; 620  : 		return (lower_bound(_Keyval));

	mov	eax, DWORD PTR __Keyval$[esp-4]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[esp]
	push	eax
	push	esi
	call	?lower_bound@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::lower_bound
	mov	eax, esi
	pop	esi

; 621  : 		}

	ret	8
?find@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::find
_TEXT	ENDS
PUBLIC	?find@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::find
; Function compile flags: /Ogtpy
;	COMDAT ?find@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::find, COMDAT
; _this$ = ecx

; 620  : 		return (lower_bound(_Keyval));

	mov	eax, DWORD PTR __Keyval$[esp-4]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[esp]
	push	eax
	push	esi
	call	?lower_bound@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::lower_bound
	mov	eax, esi
	pop	esi

; 621  : 		}

	ret	8
?find@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::find
_TEXT	ENDS
PUBLIC	??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@1@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@1@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >, COMDAT
; _this$ = ecx

; 441  : 		{	// construct empty list, allocator

	push	esi
	mov	esi, ecx
	call	?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Buynode
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], 0

; 442  : 		}

	mov	eax, esi
	pop	esi
	ret	4
??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@1@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >
_TEXT	ENDS
PUBLIC	?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::erase
; Function compile flags: /Ogtpy
;	COMDAT ?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::erase, COMDAT
; _this$ = ecx

; 786  : 		{	// erase element at _Where

	push	esi

; 787  : 
; 788  :  #if _HAS_ITERATOR_DEBUGGING
; 789  : 		if (_Where._Mycont != this || _Where._Ptr == _Myhead)
; 790  : 			_DEBUG_ERROR("list erase iterator outside range");
; 791  : 		_Nodeptr _Pnode = (_Where++)._Mynode();
; 792  : 		_Orphan_ptr(*this, _Pnode);
; 793  : 
; 794  :  #else /* _HAS_ITERATOR_DEBUGGING */
; 795  : 		_Nodeptr _Pnode = (_Where++)._Mynode();

	mov	esi, DWORD PTR __Where$[esp]
	push	edi
	mov	edi, ecx
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR __Where$[esp+4], ecx

; 796  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 797  : 
; 798  : 		if (_Pnode != _Myhead)

	cmp	esi, DWORD PTR [edi+4]
	je	SHORT $LN45@erase

; 799  : 			{	// not list head, safe to erase
; 800  : 			_Nextnode(_Prevnode(_Pnode)) = _Nextnode(_Pnode);

	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 801  : 			_Prevnode(_Nextnode(_Pnode)) = _Prevnode(_Pnode);

	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [esi+4]

; 802  : 			this->_Alnod.destroy(_Pnode);

	lea	ecx, DWORD PTR [esi+8]
	mov	DWORD PTR [edx+4], eax
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 803  : 			this->_Alnod.deallocate(_Pnode, 1);

	push	esi
	call	??3@YAXPAX@Z				; operator delete

; 804  : 			--_Mysize;
; 805  : 			}
; 806  : 		return (_Make_iter(_Where));

	mov	ecx, DWORD PTR __Where$[esp+8]
	add	esp, 4
	dec	DWORD PTR [edi+8]
$LN45@erase:
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+4]
	pop	edi
	mov	DWORD PTR [eax], ecx
	pop	esi

; 807  : 		}

	ret	8
?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::erase
_TEXT	ENDS
PUBLIC	??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@1@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@1@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >, COMDAT
; _this$ = ecx

; 441  : 		{	// construct empty list, allocator

	push	esi
	mov	esi, ecx
	call	?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Buynode
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], 0

; 442  : 		}

	mov	eax, esi
	pop	esi
	ret	4
??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@1@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >
_TEXT	ENDS
PUBLIC	?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::erase
; Function compile flags: /Ogtpy
;	COMDAT ?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::erase, COMDAT
; _this$ = ecx

; 786  : 		{	// erase element at _Where

	push	esi

; 787  : 
; 788  :  #if _HAS_ITERATOR_DEBUGGING
; 789  : 		if (_Where._Mycont != this || _Where._Ptr == _Myhead)
; 790  : 			_DEBUG_ERROR("list erase iterator outside range");
; 791  : 		_Nodeptr _Pnode = (_Where++)._Mynode();
; 792  : 		_Orphan_ptr(*this, _Pnode);
; 793  : 
; 794  :  #else /* _HAS_ITERATOR_DEBUGGING */
; 795  : 		_Nodeptr _Pnode = (_Where++)._Mynode();

	mov	esi, DWORD PTR __Where$[esp]
	push	edi
	mov	edi, ecx
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR __Where$[esp+4], ecx

; 796  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 797  : 
; 798  : 		if (_Pnode != _Myhead)

	cmp	esi, DWORD PTR [edi+4]
	je	SHORT $LN45@erase@2

; 799  : 			{	// not list head, safe to erase
; 800  : 			_Nextnode(_Prevnode(_Pnode)) = _Nextnode(_Pnode);

	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 801  : 			_Prevnode(_Nextnode(_Pnode)) = _Prevnode(_Pnode);

	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [esi+4]

; 802  : 			this->_Alnod.destroy(_Pnode);

	lea	ecx, DWORD PTR [esi+8]
	mov	DWORD PTR [edx+4], eax
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 803  : 			this->_Alnod.deallocate(_Pnode, 1);

	push	esi
	call	??3@YAXPAX@Z				; operator delete

; 804  : 			--_Mysize;
; 805  : 			}
; 806  : 		return (_Make_iter(_Where));

	mov	ecx, DWORD PTR __Where$[esp+8]
	add	esp, 4
	dec	DWORD PTR [edi+8]
$LN45@erase@2:
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+4]
	pop	edi
	mov	DWORD PTR [eax], ecx
	pop	esi

; 807  : 		}

	ret	8
?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::erase
_TEXT	ENDS
PUBLIC	??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@1@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@1@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >, COMDAT
; _this$ = ecx

; 441  : 		{	// construct empty list, allocator

	push	esi
	mov	esi, ecx
	call	?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Buynode
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], 0

; 442  : 		}

	mov	eax, esi
	pop	esi
	ret	4
??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@1@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >
_TEXT	ENDS
PUBLIC	?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::erase
; Function compile flags: /Ogtpy
;	COMDAT ?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::erase, COMDAT
; _this$ = ecx

; 786  : 		{	// erase element at _Where

	push	esi

; 787  : 
; 788  :  #if _HAS_ITERATOR_DEBUGGING
; 789  : 		if (_Where._Mycont != this || _Where._Ptr == _Myhead)
; 790  : 			_DEBUG_ERROR("list erase iterator outside range");
; 791  : 		_Nodeptr _Pnode = (_Where++)._Mynode();
; 792  : 		_Orphan_ptr(*this, _Pnode);
; 793  : 
; 794  :  #else /* _HAS_ITERATOR_DEBUGGING */
; 795  : 		_Nodeptr _Pnode = (_Where++)._Mynode();

	mov	esi, DWORD PTR __Where$[esp]
	push	edi
	mov	edi, ecx
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR __Where$[esp+4], ecx

; 796  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 797  : 
; 798  : 		if (_Pnode != _Myhead)

	cmp	esi, DWORD PTR [edi+4]
	je	SHORT $LN45@erase@3

; 799  : 			{	// not list head, safe to erase
; 800  : 			_Nextnode(_Prevnode(_Pnode)) = _Nextnode(_Pnode);

	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx

; 801  : 			_Prevnode(_Nextnode(_Pnode)) = _Prevnode(_Pnode);

	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [esi+4]

; 802  : 			this->_Alnod.destroy(_Pnode);

	lea	ecx, DWORD PTR [esi+8]
	mov	DWORD PTR [edx+4], eax
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 803  : 			this->_Alnod.deallocate(_Pnode, 1);

	push	esi
	call	??3@YAXPAX@Z				; operator delete

; 804  : 			--_Mysize;
; 805  : 			}
; 806  : 		return (_Make_iter(_Where));

	mov	ecx, DWORD PTR __Where$[esp+8]
	add	esp, 4
	dec	DWORD PTR [edi+8]
$LN45@erase@3:
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+4]
	pop	edi
	mov	DWORD PTR [eax], ecx
	pop	esi

; 807  : 		}

	ret	8
?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::erase
_TEXT	ENDS
PUBLIC	?_Insert@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Insert
; Function compile flags: /Ogtpy
;	COMDAT ?_Insert@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z
_TEXT	SEGMENT
__Where$ = 8						; size = 4
__Val$ = 12						; size = 4
?_Insert@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Insert, COMDAT
; _this$ = ecx

; 711  : 
; 712  :  #if _HAS_ITERATOR_DEBUGGING
; 713  : 		if (_Where._Mycont != this)
; 714  : 			_DEBUG_ERROR("list insert iterator outside range");
; 715  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 716  : 
; 717  : 		_Nodeptr _Pnode = _Where._Mynode();
; 718  : 		_Nodeptr _Newnode = _Buynode(_Pnode, _Prevnode(_Pnode), _Val);

	mov	eax, DWORD PTR __Where$[esp-4]
	mov	edx, DWORD PTR [eax+4]
	push	ebx
	push	esi
	push	edi
	mov	edi, ecx
	mov	ecx, DWORD PTR __Val$[esp+8]
	lea	ebx, DWORD PTR [eax+4]
	push	ecx
	push	edx
	push	eax
	mov	ecx, edi
	call	?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Buynode

; 719  : 		_Incsize(1);

	push	1
	mov	ecx, edi
	mov	esi, eax
	call	?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEXI@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Incsize

; 720  : 		_Prevnode(_Pnode) = _Newnode;

	mov	DWORD PTR [ebx], esi

; 721  : 		_Nextnode(_Prevnode(_Newnode)) = _Newnode;

	mov	eax, DWORD PTR [esi+4]
	pop	edi
	mov	DWORD PTR [eax], esi
	pop	esi
	pop	ebx

; 722  : 		}

	ret	8
?_Insert@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Insert
_TEXT	ENDS
PUBLIC	?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::clear
; Function compile flags: /Ogtpy
;	COMDAT ?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXXZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::clear, COMDAT
; _this$ = ecx

; 825  : 		{	// erase all

	push	esi
	push	edi
	mov	edi, ecx

; 826  : 
; 827  :  #if _HAS_ITERATOR_DEBUGGING
; 828  : 		this->_Orphan_ptr(*this, 0);
; 829  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 830  : 
; 831  : 		_Nodeptr _Pnext;
; 832  : 		_Nodeptr _Pnode = _Nextnode(_Myhead);

	mov	eax, DWORD PTR [edi+4]
	mov	esi, DWORD PTR [eax]

; 833  : 		_Nextnode(_Myhead) = _Myhead;

	mov	DWORD PTR [eax], eax

; 834  : 		_Prevnode(_Myhead) = _Myhead;

	mov	eax, DWORD PTR [edi+4]
	mov	DWORD PTR [eax+4], eax

; 835  : 		_Mysize = 0;

	mov	DWORD PTR [edi+8], 0

; 836  : 
; 837  : 		for (; _Pnode != _Myhead; _Pnode = _Pnext)

	cmp	esi, DWORD PTR [edi+4]
	je	SHORT $LN1@clear
	push	ebx
	npad	2
$LL3@clear:

; 838  : 			{	// delete an element
; 839  : 			_Pnext = _Nextnode(_Pnode);

	mov	ebx, DWORD PTR [esi]

; 840  : 			this->_Alnod.destroy(_Pnode);

	lea	ecx, DWORD PTR [esi+8]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 841  : 			this->_Alnod.deallocate(_Pnode, 1);

	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	esi, ebx
	cmp	ebx, DWORD PTR [edi+4]
	jne	SHORT $LL3@clear
	pop	ebx
$LN1@clear:
	pop	edi
	pop	esi

; 842  : 			}
; 843  : 		}

	ret	0
?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXXZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::clear
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@0@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Destroy
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Destroy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@0@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Destroy, COMDAT
; _this$ = ecx

; 1119 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1120 : 		}

	ret	8
?_Destroy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@0@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Destroy
_TEXT	ENDS
PUBLIC	?_Insert@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Insert
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ?_Insert@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z
_TEXT	SEGMENT
__Where$ = 8						; size = 4
__Val$ = 12						; size = 4
?_Insert@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Insert, COMDAT
; _this$ = ecx

; 711  : 
; 712  :  #if _HAS_ITERATOR_DEBUGGING
; 713  : 		if (_Where._Mycont != this)
; 714  : 			_DEBUG_ERROR("list insert iterator outside range");
; 715  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 716  : 
; 717  : 		_Nodeptr _Pnode = _Where._Mynode();
; 718  : 		_Nodeptr _Newnode = _Buynode(_Pnode, _Prevnode(_Pnode), _Val);

	mov	eax, DWORD PTR __Where$[esp-4]
	mov	edx, DWORD PTR [eax+4]
	push	ebx
	push	esi
	push	edi
	mov	edi, ecx
	mov	ecx, DWORD PTR __Val$[esp+8]
	lea	ebx, DWORD PTR [eax+4]
	push	ecx
	push	edx
	push	eax
	mov	ecx, edi
	call	?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Buynode

; 719  : 		_Incsize(1);

	push	1
	mov	ecx, edi
	mov	esi, eax
	call	?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEXI@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Incsize

; 720  : 		_Prevnode(_Pnode) = _Newnode;

	mov	DWORD PTR [ebx], esi

; 721  : 		_Nextnode(_Prevnode(_Newnode)) = _Newnode;

	mov	eax, DWORD PTR [esi+4]
	pop	edi
	mov	DWORD PTR [eax], esi
	pop	esi
	pop	ebx

; 722  : 		}

	ret	8
?_Insert@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Insert
_TEXT	ENDS
PUBLIC	?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::clear
; Function compile flags: /Ogtpy
;	COMDAT ?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXXZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::clear, COMDAT
; _this$ = ecx

; 825  : 		{	// erase all

	push	esi
	push	edi
	mov	edi, ecx

; 826  : 
; 827  :  #if _HAS_ITERATOR_DEBUGGING
; 828  : 		this->_Orphan_ptr(*this, 0);
; 829  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 830  : 
; 831  : 		_Nodeptr _Pnext;
; 832  : 		_Nodeptr _Pnode = _Nextnode(_Myhead);

	mov	eax, DWORD PTR [edi+4]
	mov	esi, DWORD PTR [eax]

; 833  : 		_Nextnode(_Myhead) = _Myhead;

	mov	DWORD PTR [eax], eax

; 834  : 		_Prevnode(_Myhead) = _Myhead;

	mov	eax, DWORD PTR [edi+4]
	mov	DWORD PTR [eax+4], eax

; 835  : 		_Mysize = 0;

	mov	DWORD PTR [edi+8], 0

; 836  : 
; 837  : 		for (; _Pnode != _Myhead; _Pnode = _Pnext)

	cmp	esi, DWORD PTR [edi+4]
	je	SHORT $LN1@clear@2
	push	ebx
	npad	2
$LL3@clear@2:

; 838  : 			{	// delete an element
; 839  : 			_Pnext = _Nextnode(_Pnode);

	mov	ebx, DWORD PTR [esi]

; 840  : 			this->_Alnod.destroy(_Pnode);

	lea	ecx, DWORD PTR [esi+8]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 841  : 			this->_Alnod.deallocate(_Pnode, 1);

	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	esi, ebx
	cmp	ebx, DWORD PTR [edi+4]
	jne	SHORT $LL3@clear@2
	pop	ebx
$LN1@clear@2:
	pop	edi
	pop	esi

; 842  : 			}
; 843  : 		}

	ret	0
?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXXZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::clear
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@0@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Destroy
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Destroy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@0@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Destroy, COMDAT
; _this$ = ecx

; 1119 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1120 : 		}

	ret	8
?_Destroy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@0@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Destroy
_TEXT	ENDS
PUBLIC	?_Insert@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Insert
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ?_Insert@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z
_TEXT	SEGMENT
__Where$ = 8						; size = 4
__Val$ = 12						; size = 4
?_Insert@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Insert, COMDAT
; _this$ = ecx

; 711  : 
; 712  :  #if _HAS_ITERATOR_DEBUGGING
; 713  : 		if (_Where._Mycont != this)
; 714  : 			_DEBUG_ERROR("list insert iterator outside range");
; 715  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 716  : 
; 717  : 		_Nodeptr _Pnode = _Where._Mynode();
; 718  : 		_Nodeptr _Newnode = _Buynode(_Pnode, _Prevnode(_Pnode), _Val);

	mov	eax, DWORD PTR __Where$[esp-4]
	mov	edx, DWORD PTR [eax+4]
	push	ebx
	push	esi
	push	edi
	mov	edi, ecx
	mov	ecx, DWORD PTR __Val$[esp+8]
	lea	ebx, DWORD PTR [eax+4]
	push	ecx
	push	edx
	push	eax
	mov	ecx, edi
	call	?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Buynode

; 719  : 		_Incsize(1);

	push	1
	mov	ecx, edi
	mov	esi, eax
	call	?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEXI@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Incsize

; 720  : 		_Prevnode(_Pnode) = _Newnode;

	mov	DWORD PTR [ebx], esi

; 721  : 		_Nextnode(_Prevnode(_Newnode)) = _Newnode;

	mov	eax, DWORD PTR [esi+4]
	pop	edi
	mov	DWORD PTR [eax], esi
	pop	esi
	pop	ebx

; 722  : 		}

	ret	8
?_Insert@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Insert
_TEXT	ENDS
PUBLIC	?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::clear
; Function compile flags: /Ogtpy
;	COMDAT ?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXXZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::clear, COMDAT
; _this$ = ecx

; 825  : 		{	// erase all

	push	esi
	push	edi
	mov	edi, ecx

; 826  : 
; 827  :  #if _HAS_ITERATOR_DEBUGGING
; 828  : 		this->_Orphan_ptr(*this, 0);
; 829  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 830  : 
; 831  : 		_Nodeptr _Pnext;
; 832  : 		_Nodeptr _Pnode = _Nextnode(_Myhead);

	mov	eax, DWORD PTR [edi+4]
	mov	esi, DWORD PTR [eax]

; 833  : 		_Nextnode(_Myhead) = _Myhead;

	mov	DWORD PTR [eax], eax

; 834  : 		_Prevnode(_Myhead) = _Myhead;

	mov	eax, DWORD PTR [edi+4]
	mov	DWORD PTR [eax+4], eax

; 835  : 		_Mysize = 0;

	mov	DWORD PTR [edi+8], 0

; 836  : 
; 837  : 		for (; _Pnode != _Myhead; _Pnode = _Pnext)

	cmp	esi, DWORD PTR [edi+4]
	je	SHORT $LN1@clear@3
	push	ebx
	npad	2
$LL3@clear@3:

; 838  : 			{	// delete an element
; 839  : 			_Pnext = _Nextnode(_Pnode);

	mov	ebx, DWORD PTR [esi]

; 840  : 			this->_Alnod.destroy(_Pnode);

	lea	ecx, DWORD PTR [esi+8]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 841  : 			this->_Alnod.deallocate(_Pnode, 1);

	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	esi, ebx
	cmp	ebx, DWORD PTR [edi+4]
	jne	SHORT $LL3@clear@3
	pop	ebx
$LN1@clear@3:
	pop	edi
	pop	esi

; 842  : 			}
; 843  : 		}

	ret	0
?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXXZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::clear
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@0@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Destroy
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Destroy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@0@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Destroy, COMDAT
; _this$ = ecx

; 1119 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1120 : 		}

	ret	8
?_Destroy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@0@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Destroy
_TEXT	ENDS
PUBLIC	?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@0@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::erase
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@0@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::erase, COMDAT
; _this$ = ecx

; 810  : 		{	// erase [_First, _Last)

	push	esi

; 811  : 		if (_First == begin() && _Last == end())

	mov	esi, DWORD PTR __First$[esp]
	push	edi
	mov	edi, ecx
	mov	eax, DWORD PTR [edi+4]
	mov	ecx, DWORD PTR __Last$[esp+4]
	cmp	esi, DWORD PTR [eax]
	jne	SHORT $LN85@erase@4
	cmp	ecx, eax
	jne	SHORT $LN85@erase@4

; 812  : 			{	// erase all and return fresh iterator
; 813  : 			clear();

	mov	ecx, edi
	call	?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::clear

; 814  : 			return (end());

	mov	ecx, DWORD PTR [edi+4]

; 820  : 			return (_Make_iter(_Last));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp+4]
	pop	edi
	mov	DWORD PTR [eax], ecx
	pop	esi

; 821  : 			}
; 822  : 		}

	ret	12					; 0000000cH
$LN85@erase@4:

; 815  : 			}
; 816  : 		else
; 817  : 			{	// erase subrange
; 818  : 			while (_First != _Last)

	cmp	esi, ecx
	je	SHORT $LN1@erase@4
	push	ebx
$LL2@erase@4:

; 819  : 				_First = erase(_First);

	mov	ebx, DWORD PTR [esi]
	cmp	esi, DWORD PTR [edi+4]
	je	SHORT $LN35@erase@4
	mov	edx, DWORD PTR [esi+4]
	lea	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [edx], ebx
	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], edx
	lea	ecx, DWORD PTR [esi+8]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	mov	ecx, DWORD PTR __Last$[esp+12]
	add	esp, 4
	dec	DWORD PTR [edi+8]
$LN35@erase@4:
	mov	esi, ebx
	mov	DWORD PTR __First$[esp+8], esi
	cmp	ebx, ecx
	jne	SHORT $LL2@erase@4
	pop	ebx
$LN1@erase@4:

; 820  : 			return (_Make_iter(_Last));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp+4]
	pop	edi
	mov	DWORD PTR [eax], ecx
	pop	esi

; 821  : 			}
; 822  : 		}

	ret	12					; 0000000cH
?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@0@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::erase
_TEXT	ENDS
PUBLIC	?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@0@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::erase
; Function compile flags: /Ogtpy
;	COMDAT ?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@0@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::erase, COMDAT
; _this$ = ecx

; 810  : 		{	// erase [_First, _Last)

	push	esi

; 811  : 		if (_First == begin() && _Last == end())

	mov	esi, DWORD PTR __First$[esp]
	push	edi
	mov	edi, ecx
	mov	eax, DWORD PTR [edi+4]
	mov	ecx, DWORD PTR __Last$[esp+4]
	cmp	esi, DWORD PTR [eax]
	jne	SHORT $LN85@erase@5
	cmp	ecx, eax
	jne	SHORT $LN85@erase@5

; 812  : 			{	// erase all and return fresh iterator
; 813  : 			clear();

	mov	ecx, edi
	call	?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::clear

; 814  : 			return (end());

	mov	ecx, DWORD PTR [edi+4]

; 820  : 			return (_Make_iter(_Last));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp+4]
	pop	edi
	mov	DWORD PTR [eax], ecx
	pop	esi

; 821  : 			}
; 822  : 		}

	ret	12					; 0000000cH
$LN85@erase@5:

; 815  : 			}
; 816  : 		else
; 817  : 			{	// erase subrange
; 818  : 			while (_First != _Last)

	cmp	esi, ecx
	je	SHORT $LN1@erase@5
	push	ebx
$LL2@erase@5:

; 819  : 				_First = erase(_First);

	mov	ebx, DWORD PTR [esi]
	cmp	esi, DWORD PTR [edi+4]
	je	SHORT $LN35@erase@5
	mov	edx, DWORD PTR [esi+4]
	lea	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [edx], ebx
	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], edx
	lea	ecx, DWORD PTR [esi+8]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	mov	ecx, DWORD PTR __Last$[esp+12]
	add	esp, 4
	dec	DWORD PTR [edi+8]
$LN35@erase@5:
	mov	esi, ebx
	mov	DWORD PTR __First$[esp+8], esi
	cmp	ebx, ecx
	jne	SHORT $LL2@erase@5
	pop	ebx
$LN1@erase@5:

; 820  : 			return (_Make_iter(_Last));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp+4]
	pop	edi
	mov	DWORD PTR [eax], ecx
	pop	esi

; 821  : 			}
; 822  : 		}

	ret	12					; 0000000cH
?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@0@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::erase
_TEXT	ENDS
PUBLIC	?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@0@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::erase
; Function compile flags: /Ogtpy
;	COMDAT ?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@0@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::erase, COMDAT
; _this$ = ecx

; 810  : 		{	// erase [_First, _Last)

	push	esi

; 811  : 		if (_First == begin() && _Last == end())

	mov	esi, DWORD PTR __First$[esp]
	push	edi
	mov	edi, ecx
	mov	eax, DWORD PTR [edi+4]
	mov	ecx, DWORD PTR __Last$[esp+4]
	cmp	esi, DWORD PTR [eax]
	jne	SHORT $LN85@erase@6
	cmp	ecx, eax
	jne	SHORT $LN85@erase@6

; 812  : 			{	// erase all and return fresh iterator
; 813  : 			clear();

	mov	ecx, edi
	call	?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::clear

; 814  : 			return (end());

	mov	ecx, DWORD PTR [edi+4]

; 820  : 			return (_Make_iter(_Last));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp+4]
	pop	edi
	mov	DWORD PTR [eax], ecx
	pop	esi

; 821  : 			}
; 822  : 		}

	ret	12					; 0000000cH
$LN85@erase@6:

; 815  : 			}
; 816  : 		else
; 817  : 			{	// erase subrange
; 818  : 			while (_First != _Last)

	cmp	esi, ecx
	je	SHORT $LN1@erase@6
	push	ebx
$LL2@erase@6:

; 819  : 				_First = erase(_First);

	mov	ebx, DWORD PTR [esi]
	cmp	esi, DWORD PTR [edi+4]
	je	SHORT $LN35@erase@6
	mov	edx, DWORD PTR [esi+4]
	lea	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [edx], ebx
	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], edx
	lea	ecx, DWORD PTR [esi+8]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	mov	ecx, DWORD PTR __Last$[esp+12]
	add	esp, 4
	dec	DWORD PTR [edi+8]
$LN35@erase@6:
	mov	esi, ebx
	mov	DWORD PTR __First$[esp+8], esi
	cmp	ebx, ecx
	jne	SHORT $LL2@erase@6
	pop	ebx
$LN1@erase@6:

; 820  : 			return (_Make_iter(_Last));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp+4]
	pop	edi
	mov	DWORD PTR [eax], ecx
	pop	esi

; 821  : 			}
; 822  : 		}

	ret	12					; 0000000cH
?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@0@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::erase
_TEXT	ENDS
PUBLIC	?erase@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@V?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@0@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::erase
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?erase@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@V?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Last_arg$ = 16					; size = 4
?erase@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@V?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@0@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::erase, COMDAT
; _this$ = ecx

; 1029 : 		iterator _First = _Make_iter(_First_arg);
; 1030 : 		iterator _Last = _Make_iter(_Last_arg);
; 1031 : 
; 1032 : 		if (_First != _Last)

	mov	edx, DWORD PTR __Last_arg$[esp-4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	push	esi
	mov	esi, DWORD PTR __First_arg$[esp]
	mov	DWORD PTR [eax], esi
	cmp	esi, edx
	je	SHORT $LN1@erase@7
	push	edi

; 1033 : 			{	// worth doing, copy down over hole
; 1034 : 
; 1035 :  #if _HAS_ITERATOR_DEBUGGING
; 1036 : 			if (_Last < _First || _First._Mycont != this
; 1037 : 				|| _First._Myptr < _Myfirst || _Mylast < _Last._Myptr)
; 1038 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1039 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1040 : 				_VEC_ITER_BASE(_First));
; 1041 : 			_Orphan_range(_First._Myptr, _Mylast);
; 1042 : 
; 1043 :  #else /* _HAS_ITERATOR_DEBUGGING */
; 1044 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1045 : 				_VEC_ITER_BASE(_First));

	mov	edi, DWORD PTR [ecx+8]
	cmp	edx, edi
	je	SHORT $LN26@erase@7
	push	ebx
	npad	4
$LL28@erase@7:
	mov	ebx, DWORD PTR [edx]
	mov	DWORD PTR [esi], ebx
	add	edx, 4
	add	esi, 4
	cmp	edx, edi
	jne	SHORT $LL28@erase@7
	pop	ebx
$LN26@erase@7:

; 1046 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1047 : 
; 1048 : 			_Destroy(_Ptr, _Mylast);
; 1049 : 			_Mylast = _Ptr;

	mov	DWORD PTR [ecx+8], esi
	pop	edi
$LN1@erase@7:
	pop	esi

; 1050 : 			}
; 1051 : #if _HAS_ITERATOR_DEBUGGING
; 1052 :         return (iterator(_First._Myptr, this));
; 1053 : #else
; 1054 : 		return (_First);
; 1055 : #endif
; 1056 : 		}

	ret	12					; 0000000cH
?erase@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@V?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@0@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::erase
_TEXT	ENDS
PUBLIC	?erase@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@V?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@0@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::erase
; Function compile flags: /Ogtpy
;	COMDAT ?erase@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@V?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Last_arg$ = 16					; size = 4
?erase@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@V?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@0@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::erase, COMDAT
; _this$ = ecx

; 1029 : 		iterator _First = _Make_iter(_First_arg);
; 1030 : 		iterator _Last = _Make_iter(_Last_arg);
; 1031 : 
; 1032 : 		if (_First != _Last)

	mov	edx, DWORD PTR __Last_arg$[esp-4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	push	esi
	mov	esi, DWORD PTR __First_arg$[esp]
	mov	DWORD PTR [eax], esi
	cmp	esi, edx
	je	SHORT $LN1@erase@8
	push	edi

; 1033 : 			{	// worth doing, copy down over hole
; 1034 : 
; 1035 :  #if _HAS_ITERATOR_DEBUGGING
; 1036 : 			if (_Last < _First || _First._Mycont != this
; 1037 : 				|| _First._Myptr < _Myfirst || _Mylast < _Last._Myptr)
; 1038 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1039 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1040 : 				_VEC_ITER_BASE(_First));
; 1041 : 			_Orphan_range(_First._Myptr, _Mylast);
; 1042 : 
; 1043 :  #else /* _HAS_ITERATOR_DEBUGGING */
; 1044 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1045 : 				_VEC_ITER_BASE(_First));

	mov	edi, DWORD PTR [ecx+8]
	cmp	edx, edi
	je	SHORT $LN26@erase@8
	push	ebx
	npad	4
$LL28@erase@8:
	mov	ebx, DWORD PTR [edx]
	mov	DWORD PTR [esi], ebx
	add	edx, 4
	add	esi, 4
	cmp	edx, edi
	jne	SHORT $LL28@erase@8
	pop	ebx
$LN26@erase@8:

; 1046 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1047 : 
; 1048 : 			_Destroy(_Ptr, _Mylast);
; 1049 : 			_Mylast = _Ptr;

	mov	DWORD PTR [ecx+8], esi
	pop	edi
$LN1@erase@8:
	pop	esi

; 1050 : 			}
; 1051 : #if _HAS_ITERATOR_DEBUGGING
; 1052 :         return (iterator(_First._Myptr, this));
; 1053 : #else
; 1054 : 		return (_First);
; 1055 : #endif
; 1056 : 		}

	ret	12					; 0000000cH
?erase@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@V?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@0@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::erase
_TEXT	ENDS
PUBLIC	?erase@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@V?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@0@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::erase
; Function compile flags: /Ogtpy
;	COMDAT ?erase@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@V?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Last_arg$ = 16					; size = 4
?erase@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@V?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@0@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::erase, COMDAT
; _this$ = ecx

; 1029 : 		iterator _First = _Make_iter(_First_arg);
; 1030 : 		iterator _Last = _Make_iter(_Last_arg);
; 1031 : 
; 1032 : 		if (_First != _Last)

	mov	edx, DWORD PTR __Last_arg$[esp-4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	push	esi
	mov	esi, DWORD PTR __First_arg$[esp]
	mov	DWORD PTR [eax], esi
	cmp	esi, edx
	je	SHORT $LN1@erase@9
	push	edi

; 1033 : 			{	// worth doing, copy down over hole
; 1034 : 
; 1035 :  #if _HAS_ITERATOR_DEBUGGING
; 1036 : 			if (_Last < _First || _First._Mycont != this
; 1037 : 				|| _First._Myptr < _Myfirst || _Mylast < _Last._Myptr)
; 1038 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1039 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1040 : 				_VEC_ITER_BASE(_First));
; 1041 : 			_Orphan_range(_First._Myptr, _Mylast);
; 1042 : 
; 1043 :  #else /* _HAS_ITERATOR_DEBUGGING */
; 1044 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1045 : 				_VEC_ITER_BASE(_First));

	mov	edi, DWORD PTR [ecx+8]
	cmp	edx, edi
	je	SHORT $LN26@erase@9
	push	ebx
	npad	4
$LL28@erase@9:
	mov	ebx, DWORD PTR [edx]
	mov	DWORD PTR [esi], ebx
	add	edx, 4
	add	esi, 4
	cmp	edx, edi
	jne	SHORT $LL28@erase@9
	pop	ebx
$LN26@erase@9:

; 1046 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1047 : 
; 1048 : 			_Destroy(_Ptr, _Mylast);
; 1049 : 			_Mylast = _Ptr;

	mov	DWORD PTR [ecx+8], esi
	pop	edi
$LN1@erase@9:
	pop	esi

; 1050 : 			}
; 1051 : #if _HAS_ITERATOR_DEBUGGING
; 1052 :         return (iterator(_First._Myptr, this));
; 1053 : #else
; 1054 : 		return (_First);
; 1055 : #endif
; 1056 : 		}

	ret	12					; 0000000cH
?erase@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@V?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@0@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::erase
_TEXT	ENDS
PUBLIC	?_Ufill@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAV342@IABV342@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Ufill
; Function compile flags: /Ogtpy
;	COMDAT ?_Ufill@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAV342@IABV342@@Z
_TEXT	SEGMENT
$T233067 = -4						; size = 1
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Cat$233071 = 16					; size = 1
__Val$ = 16						; size = 4
?_Ufill@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAV342@IABV342@@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Ufill, COMDAT
; _this$ = ecx

; 1253 : 		{	// copy initializing _Count * _Val, using allocator

	push	ecx

; 1254 : 		_STDEXT unchecked_uninitialized_fill_n(_Ptr, _Count, _Val, this->_Alval);

	mov	edx, DWORD PTR __Cat$233071[esp]
	push	esi
	mov	esi, DWORD PTR __Count$[esp+4]
	push	edi
	mov	edi, DWORD PTR __Ptr$[esp+8]
	mov	BYTE PTR $T233067[esp+12], 0
	mov	eax, DWORD PTR $T233067[esp+12]
	push	eax
	mov	eax, DWORD PTR __Val$[esp+12]
	push	edx
	push	ecx
	push	eax
	push	esi
	push	edi
	call	??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,unsigned int,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
	add	esp, 24					; 00000018H

; 1255 : 		return (_Ptr + _Count);

	lea	eax, DWORD PTR [edi+esi*4]
	pop	edi
	pop	esi

; 1256 : 		}

	pop	ecx
	ret	12					; 0000000cH
?_Ufill@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAV342@IABV342@@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Ufill
_TEXT	ENDS
PUBLIC	?_Ufill@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAV342@IABV342@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Ufill
; Function compile flags: /Ogtpy
;	COMDAT ?_Ufill@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAV342@IABV342@@Z
_TEXT	SEGMENT
$T233085 = -4						; size = 1
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Cat$233089 = 16					; size = 1
__Val$ = 16						; size = 4
?_Ufill@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAV342@IABV342@@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Ufill, COMDAT
; _this$ = ecx

; 1253 : 		{	// copy initializing _Count * _Val, using allocator

	push	ecx

; 1254 : 		_STDEXT unchecked_uninitialized_fill_n(_Ptr, _Count, _Val, this->_Alval);

	mov	edx, DWORD PTR __Cat$233089[esp]
	push	esi
	mov	esi, DWORD PTR __Count$[esp+4]
	push	edi
	mov	edi, DWORD PTR __Ptr$[esp+8]
	mov	BYTE PTR $T233085[esp+12], 0
	mov	eax, DWORD PTR $T233085[esp+12]
	push	eax
	mov	eax, DWORD PTR __Val$[esp+12]
	push	edx
	push	ecx
	push	eax
	push	esi
	push	edi
	call	??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,unsigned int,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
	add	esp, 24					; 00000018H

; 1255 : 		return (_Ptr + _Count);

	lea	eax, DWORD PTR [edi+esi*4]
	pop	edi
	pop	esi

; 1256 : 		}

	pop	ecx
	ret	12					; 0000000cH
?_Ufill@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAV342@IABV342@@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Ufill
_TEXT	ENDS
PUBLIC	?_Ufill@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAV342@IABV342@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Ufill
; Function compile flags: /Ogtpy
;	COMDAT ?_Ufill@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAV342@IABV342@@Z
_TEXT	SEGMENT
$T233103 = -4						; size = 1
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Cat$233107 = 16					; size = 1
__Val$ = 16						; size = 4
?_Ufill@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAV342@IABV342@@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Ufill, COMDAT
; _this$ = ecx

; 1253 : 		{	// copy initializing _Count * _Val, using allocator

	push	ecx

; 1254 : 		_STDEXT unchecked_uninitialized_fill_n(_Ptr, _Count, _Val, this->_Alval);

	mov	edx, DWORD PTR __Cat$233107[esp]
	push	esi
	mov	esi, DWORD PTR __Count$[esp+4]
	push	edi
	mov	edi, DWORD PTR __Ptr$[esp+8]
	mov	BYTE PTR $T233103[esp+12], 0
	mov	eax, DWORD PTR $T233103[esp+12]
	push	eax
	mov	eax, DWORD PTR __Val$[esp+12]
	push	edx
	push	ecx
	push	eax
	push	esi
	push	edi
	call	??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,unsigned int,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
	add	esp, 24					; 00000018H

; 1255 : 		return (_Ptr + _Count);

	lea	eax, DWORD PTR [edi+esi*4]
	pop	edi
	pop	esi

; 1256 : 		}

	pop	ecx
	ret	12					; 0000000cH
?_Ufill@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAV342@IABV342@@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Ufill
_TEXT	ENDS
PUBLIC	??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Insert<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Const_iterator<0> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	SEGMENT
__catchsym$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z$0
__unwindtable$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z$2
__ehfuncinfo$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z
_TEXT	SEGMENT
$T233112 = -24						; size = 4
_this$ = -24						; size = 4
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Where$ = 8						; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Insert<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Const_iterator<0> >, COMDAT
; _this$ = ecx

; 762  : 		void _Insert(const_iterator _Where,

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 12					; 0000000cH

; 763  : 			_Iter _First, _Iter _Last, forward_iterator_tag)
; 764  : 		{	// insert [_First, _Last) at _Where, forward iterators
; 765  : 
; 766  :  #if _HAS_ITERATOR_DEBUGGING
; 767  : 		_DEBUG_RANGE(_First, _Last);
; 768  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 769  : 
; 770  : 		_Iter _Next = _First;

	mov	eax, DWORD PTR __First$[ebp]
	push	ebx
	push	esi
	push	edi
	mov	ebx, ecx
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ebx
	mov	DWORD PTR __Next$[ebp], eax

; 771  : 
; 772  : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 773  : 		for (; _First != _Last; ++_First)

$LL14@Insert:
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Insert

; 774  : 			_Insert(_Where, *_First);

	mov	ecx, DWORD PTR __Where$[ebp]
	add	eax, 8
	lea	edi, DWORD PTR [ecx+4]
	push	eax
	mov	eax, DWORD PTR [edi]
	push	eax
	push	ecx
	mov	ecx, ebx
	call	?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Buynode
	push	1
	mov	ecx, ebx
	mov	esi, eax
	call	?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEXI@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Incsize
	mov	DWORD PTR [edi], esi
	mov	ecx, DWORD PTR [esi+4]
	mov	DWORD PTR [ecx], esi
	mov	edx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __First$[ebp], eax
	jmp	SHORT $LL14@Insert
__catch$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z$0:

; 775  : 		_CATCH_ALL
; 776  : 		for (; _Next != _First; ++_Next)

	mov	esi, DWORD PTR __Next$[ebp]
	cmp	esi, DWORD PTR __First$[ebp]
	je	SHORT $LN1@Insert
	mov	edi, DWORD PTR _this$[ebp]
$LL38@Insert:

; 777  : 			{	// undo inserts
; 778  : 			const_iterator _Before = _Where;
; 779  : 			erase(--_Before);

	mov	eax, DWORD PTR __Where$[ebp]
	mov	eax, DWORD PTR [eax+4]
	push	eax
	lea	ecx, DWORD PTR $T233112[ebp]
	push	ecx
	mov	ecx, edi
	call	?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::erase
	mov	esi, DWORD PTR [esi]
	cmp	esi, DWORD PTR __First$[ebp]
	jne	SHORT $LL38@Insert
$LN1@Insert:

; 780  : 			}
; 781  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN56@Insert:
$LN4@Insert:

; 782  : 		_CATCH_END
; 783  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN55@Insert:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z:
	mov	eax, OFFSET __ehfuncinfo$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Insert<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Const_iterator<0> >
PUBLIC	??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Insert<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Const_iterator<0> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z$0
__unwindtable$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z$2
__ehfuncinfo$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z
_TEXT	SEGMENT
$T233214 = -24						; size = 4
_this$ = -24						; size = 4
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Where$ = 8						; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Insert<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Const_iterator<0> >, COMDAT
; _this$ = ecx

; 762  : 		void _Insert(const_iterator _Where,

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 12					; 0000000cH

; 763  : 			_Iter _First, _Iter _Last, forward_iterator_tag)
; 764  : 		{	// insert [_First, _Last) at _Where, forward iterators
; 765  : 
; 766  :  #if _HAS_ITERATOR_DEBUGGING
; 767  : 		_DEBUG_RANGE(_First, _Last);
; 768  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 769  : 
; 770  : 		_Iter _Next = _First;

	mov	eax, DWORD PTR __First$[ebp]
	push	ebx
	push	esi
	push	edi
	mov	ebx, ecx
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ebx
	mov	DWORD PTR __Next$[ebp], eax

; 771  : 
; 772  : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 773  : 		for (; _First != _Last; ++_First)

$LL14@Insert@2:
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Insert@2

; 774  : 			_Insert(_Where, *_First);

	mov	ecx, DWORD PTR __Where$[ebp]
	add	eax, 8
	lea	edi, DWORD PTR [ecx+4]
	push	eax
	mov	eax, DWORD PTR [edi]
	push	eax
	push	ecx
	mov	ecx, ebx
	call	?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Buynode
	push	1
	mov	ecx, ebx
	mov	esi, eax
	call	?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEXI@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Incsize
	mov	DWORD PTR [edi], esi
	mov	ecx, DWORD PTR [esi+4]
	mov	DWORD PTR [ecx], esi
	mov	edx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __First$[ebp], eax
	jmp	SHORT $LL14@Insert@2
__catch$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z$0:

; 775  : 		_CATCH_ALL
; 776  : 		for (; _Next != _First; ++_Next)

	mov	esi, DWORD PTR __Next$[ebp]
	cmp	esi, DWORD PTR __First$[ebp]
	je	SHORT $LN1@Insert@2
	mov	edi, DWORD PTR _this$[ebp]
$LL38@Insert@2:

; 777  : 			{	// undo inserts
; 778  : 			const_iterator _Before = _Where;
; 779  : 			erase(--_Before);

	mov	eax, DWORD PTR __Where$[ebp]
	mov	eax, DWORD PTR [eax+4]
	push	eax
	lea	ecx, DWORD PTR $T233214[ebp]
	push	ecx
	mov	ecx, edi
	call	?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::erase
	mov	esi, DWORD PTR [esi]
	cmp	esi, DWORD PTR __First$[ebp]
	jne	SHORT $LL38@Insert@2
$LN1@Insert@2:

; 780  : 			}
; 781  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN56@Insert@2:
$LN4@Insert@2:

; 782  : 		_CATCH_END
; 783  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN55@Insert@2:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z:
	mov	eax, OFFSET __ehfuncinfo$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Insert<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Const_iterator<0> >
PUBLIC	??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Insert<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Const_iterator<0> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z$0
__unwindtable$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z$2
__ehfuncinfo$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z
_TEXT	SEGMENT
$T233316 = -24						; size = 4
_this$ = -24						; size = 4
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Where$ = 8						; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Insert<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Const_iterator<0> >, COMDAT
; _this$ = ecx

; 762  : 		void _Insert(const_iterator _Where,

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 12					; 0000000cH

; 763  : 			_Iter _First, _Iter _Last, forward_iterator_tag)
; 764  : 		{	// insert [_First, _Last) at _Where, forward iterators
; 765  : 
; 766  :  #if _HAS_ITERATOR_DEBUGGING
; 767  : 		_DEBUG_RANGE(_First, _Last);
; 768  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 769  : 
; 770  : 		_Iter _Next = _First;

	mov	eax, DWORD PTR __First$[ebp]
	push	ebx
	push	esi
	push	edi
	mov	ebx, ecx
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ebx
	mov	DWORD PTR __Next$[ebp], eax

; 771  : 
; 772  : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 773  : 		for (; _First != _Last; ++_First)

$LL14@Insert@3:
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Insert@3

; 774  : 			_Insert(_Where, *_First);

	mov	ecx, DWORD PTR __Where$[ebp]
	add	eax, 8
	lea	edi, DWORD PTR [ecx+4]
	push	eax
	mov	eax, DWORD PTR [edi]
	push	eax
	push	ecx
	mov	ecx, ebx
	call	?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Buynode
	push	1
	mov	ecx, ebx
	mov	esi, eax
	call	?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEXI@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Incsize
	mov	DWORD PTR [edi], esi
	mov	ecx, DWORD PTR [esi+4]
	mov	DWORD PTR [ecx], esi
	mov	edx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __First$[ebp], eax
	jmp	SHORT $LL14@Insert@3
__catch$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z$0:

; 775  : 		_CATCH_ALL
; 776  : 		for (; _Next != _First; ++_Next)

	mov	esi, DWORD PTR __Next$[ebp]
	cmp	esi, DWORD PTR __First$[ebp]
	je	SHORT $LN1@Insert@3
	mov	edi, DWORD PTR _this$[ebp]
$LL38@Insert@3:

; 777  : 			{	// undo inserts
; 778  : 			const_iterator _Before = _Where;
; 779  : 			erase(--_Before);

	mov	eax, DWORD PTR __Where$[ebp]
	mov	eax, DWORD PTR [eax+4]
	push	eax
	lea	ecx, DWORD PTR $T233316[ebp]
	push	ecx
	mov	ecx, edi
	call	?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::erase
	mov	esi, DWORD PTR [esi]
	cmp	esi, DWORD PTR __First$[ebp]
	jne	SHORT $LL38@Insert@3
$LN1@Insert@3:

; 780  : 			}
; 781  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN56@Insert@3:
$LN4@Insert@3:

; 782  : 		_CATCH_END
; 783  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN55@Insert@3:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z:
	mov	eax, OFFSET __ehfuncinfo$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Insert<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Const_iterator<0> >
PUBLIC	??$_Unchecked_uninitialized_move@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@Z ; stdext::_Unchecked_uninitialized_move<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$_Unchecked_uninitialized_move@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@Z
_TEXT	SEGMENT
$T233445 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$233448 = 16					; size = 1
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Unchecked_uninitialized_move@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@Z PROC ; stdext::_Unchecked_uninitialized_move<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >, COMDAT

; 861  : 	{	// move [_First, _Last) to raw _Dest, using _Al

	push	ecx

; 862  : 	return (_STD _Uninit_move(_CHECKED_BASE(_First),
; 863  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 864  : 		_STD _Move_cat(_Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Cat$233448[esp]
	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T233445[esp+4], 0
	mov	eax, DWORD PTR $T233445[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >

; 865  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$_Unchecked_uninitialized_move@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@Z ENDP ; stdext::_Unchecked_uninitialized_move<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
_TEXT	ENDS
PUBLIC	??$_Unchecked_uninitialized_move@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@Z ; stdext::_Unchecked_uninitialized_move<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Unchecked_uninitialized_move@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@Z
_TEXT	SEGMENT
$T233486 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$233480 = 16					; size = 1
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Unchecked_uninitialized_move@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@Z PROC ; stdext::_Unchecked_uninitialized_move<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >, COMDAT

; 861  : 	{	// move [_First, _Last) to raw _Dest, using _Al

	push	ecx

; 862  : 	return (_STD _Uninit_move(_CHECKED_BASE(_First),
; 863  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 864  : 		_STD _Move_cat(_Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Cat$233480[esp]
	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T233486[esp+4], 0
	mov	eax, DWORD PTR $T233486[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >

; 865  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$_Unchecked_uninitialized_move@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@Z ENDP ; stdext::_Unchecked_uninitialized_move<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
_TEXT	ENDS
PUBLIC	??$_Unchecked_uninitialized_move@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@Z ; stdext::_Unchecked_uninitialized_move<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Unchecked_uninitialized_move@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@Z
_TEXT	SEGMENT
$T233517 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$233521 = 16					; size = 1
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Unchecked_uninitialized_move@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@Z PROC ; stdext::_Unchecked_uninitialized_move<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >, COMDAT

; 861  : 	{	// move [_First, _Last) to raw _Dest, using _Al

	push	ecx

; 862  : 	return (_STD _Uninit_move(_CHECKED_BASE(_First),
; 863  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 864  : 		_STD _Move_cat(_Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Cat$233521[esp]
	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T233517[esp+4], 0
	mov	eax, DWORD PTR $T233517[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >

; 865  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$_Unchecked_uninitialized_move@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@Z ENDP ; stdext::_Unchecked_uninitialized_move<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
_TEXT	ENDS
PUBLIC	?insert@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::insert
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ?insert@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Val$ = 16						; size = 4
?insert@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::insert, COMDAT
; _this$ = ecx

; 704  : 		_Insert(_Where, _Val);

	mov	eax, DWORD PTR __Where$[esp-4]
	mov	edx, DWORD PTR [eax+4]
	push	ebx
	push	esi
	push	edi
	mov	edi, ecx
	mov	ecx, DWORD PTR __Val$[esp+8]
	lea	ebx, DWORD PTR [eax+4]
	push	ecx
	push	edx
	push	eax
	mov	ecx, edi
	call	?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Buynode
	push	1
	mov	ecx, edi
	mov	esi, eax
	call	?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEXI@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Incsize
	mov	DWORD PTR [ebx], esi
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [eax], esi

; 705  : 		return (_Make_iter(--_Where));

	mov	ecx, DWORD PTR __Where$[esp+8]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+8]
	pop	edi
	pop	esi
	mov	DWORD PTR [eax], edx
	pop	ebx

; 706  : 		}

	ret	12					; 0000000cH
?insert@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::insert
_TEXT	ENDS
PUBLIC	?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEXXZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Tidy
; Function compile flags: /Ogtpy
;	COMDAT ?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEXXZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Tidy, COMDAT
; _this$ = ecx

; 1212 : 		{	// free all storage

	push	esi
	mov	esi, ecx

; 1213 : 		clear();

	call	?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::clear

; 1214 : 		this->_Alptr.destroy(&_Nextnode(_Myhead));
; 1215 : 		this->_Alptr.destroy(&_Prevnode(_Myhead));
; 1216 : 		this->_Alnod.deallocate(_Myhead, 1);

	mov	eax, DWORD PTR [esi+4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1217 : 		_Myhead = 0;

	mov	DWORD PTR [esi+4], 0
	pop	esi

; 1218 : 		}

	ret	0
?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEXXZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Tidy
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXXZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Tidy
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Tidy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXXZ PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	esi
	mov	esi, ecx

; 1124 : 		if (_Myfirst != 0)

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN4@Tidy

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);
; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@Tidy:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 1135 : 		}

	ret	0
?_Tidy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXXZ ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Tidy
_TEXT	ENDS
PUBLIC	?insert@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::insert
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ?insert@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Val$ = 16						; size = 4
?insert@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::insert, COMDAT
; _this$ = ecx

; 704  : 		_Insert(_Where, _Val);

	mov	eax, DWORD PTR __Where$[esp-4]
	mov	edx, DWORD PTR [eax+4]
	push	ebx
	push	esi
	push	edi
	mov	edi, ecx
	mov	ecx, DWORD PTR __Val$[esp+8]
	lea	ebx, DWORD PTR [eax+4]
	push	ecx
	push	edx
	push	eax
	mov	ecx, edi
	call	?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Buynode
	push	1
	mov	ecx, edi
	mov	esi, eax
	call	?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEXI@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Incsize
	mov	DWORD PTR [ebx], esi
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [eax], esi

; 705  : 		return (_Make_iter(--_Where));

	mov	ecx, DWORD PTR __Where$[esp+8]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+8]
	pop	edi
	pop	esi
	mov	DWORD PTR [eax], edx
	pop	ebx

; 706  : 		}

	ret	12					; 0000000cH
?insert@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::insert
_TEXT	ENDS
PUBLIC	?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEXXZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Tidy
; Function compile flags: /Ogtpy
;	COMDAT ?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEXXZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Tidy, COMDAT
; _this$ = ecx

; 1212 : 		{	// free all storage

	push	esi
	mov	esi, ecx

; 1213 : 		clear();

	call	?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::clear

; 1214 : 		this->_Alptr.destroy(&_Nextnode(_Myhead));
; 1215 : 		this->_Alptr.destroy(&_Prevnode(_Myhead));
; 1216 : 		this->_Alnod.deallocate(_Myhead, 1);

	mov	eax, DWORD PTR [esi+4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1217 : 		_Myhead = 0;

	mov	DWORD PTR [esi+4], 0
	pop	esi

; 1218 : 		}

	ret	0
?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEXXZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Tidy
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXXZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Tidy
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Tidy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXXZ PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	esi
	mov	esi, ecx

; 1124 : 		if (_Myfirst != 0)

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN4@Tidy@2

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);
; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@Tidy@2:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 1135 : 		}

	ret	0
?_Tidy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXXZ ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Tidy
_TEXT	ENDS
PUBLIC	?insert@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::insert
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ?insert@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Val$ = 16						; size = 4
?insert@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::insert, COMDAT
; _this$ = ecx

; 704  : 		_Insert(_Where, _Val);

	mov	eax, DWORD PTR __Where$[esp-4]
	mov	edx, DWORD PTR [eax+4]
	push	ebx
	push	esi
	push	edi
	mov	edi, ecx
	mov	ecx, DWORD PTR __Val$[esp+8]
	lea	ebx, DWORD PTR [eax+4]
	push	ecx
	push	edx
	push	eax
	mov	ecx, edi
	call	?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Buynode
	push	1
	mov	ecx, edi
	mov	esi, eax
	call	?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEXI@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Incsize
	mov	DWORD PTR [ebx], esi
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [eax], esi

; 705  : 		return (_Make_iter(--_Where));

	mov	ecx, DWORD PTR __Where$[esp+8]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+8]
	pop	edi
	pop	esi
	mov	DWORD PTR [eax], edx
	pop	ebx

; 706  : 		}

	ret	12					; 0000000cH
?insert@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::insert
_TEXT	ENDS
PUBLIC	?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEXXZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Tidy
; Function compile flags: /Ogtpy
;	COMDAT ?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEXXZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Tidy, COMDAT
; _this$ = ecx

; 1212 : 		{	// free all storage

	push	esi
	mov	esi, ecx

; 1213 : 		clear();

	call	?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::clear

; 1214 : 		this->_Alptr.destroy(&_Nextnode(_Myhead));
; 1215 : 		this->_Alptr.destroy(&_Prevnode(_Myhead));
; 1216 : 		this->_Alnod.deallocate(_Myhead, 1);

	mov	eax, DWORD PTR [esi+4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1217 : 		_Myhead = 0;

	mov	DWORD PTR [esi+4], 0
	pop	esi

; 1218 : 		}

	ret	0
?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEXXZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Tidy
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXXZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Tidy
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Tidy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXXZ PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	esi
	mov	esi, ecx

; 1124 : 		if (_Myfirst != 0)

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN4@Tidy@3

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);
; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@Tidy@3:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 1135 : 		}

	ret	0
?_Tidy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXXZ ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Tidy
_TEXT	ENDS
PUBLIC	??$insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::insert<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Const_iterator<0> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ??$insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00@Z
_TEXT	SEGMENT
__Where$ = 8						; size = 4
__First$ = 12						; size = 4
$T233773 = 16						; size = 1
__Last$ = 16						; size = 4
??$insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::insert<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Const_iterator<0> >, COMDAT
; _this$ = ecx

; 731  : 		{	// insert [_First, _Last) at _Where
; 732  : 		_Insert(_Where, _First, _Last, _Iter_cat(_First));

	mov	eax, DWORD PTR $T233773[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	push	eax
	mov	eax, DWORD PTR __First$[esp]
	push	edx
	mov	edx, DWORD PTR __Where$[esp+4]
	push	eax
	push	edx
	call	??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Insert<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Const_iterator<0> >

; 733  : 		}

	ret	12					; 0000000cH
??$insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::insert<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Const_iterator<0> >
_TEXT	ENDS
PUBLIC	??$insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::insert<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Const_iterator<0> >
; Function compile flags: /Ogtpy
;	COMDAT ??$insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00@Z
_TEXT	SEGMENT
__Where$ = 8						; size = 4
__First$ = 12						; size = 4
$T233782 = 16						; size = 1
__Last$ = 16						; size = 4
??$insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::insert<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Const_iterator<0> >, COMDAT
; _this$ = ecx

; 731  : 		{	// insert [_First, _Last) at _Where
; 732  : 		_Insert(_Where, _First, _Last, _Iter_cat(_First));

	mov	eax, DWORD PTR $T233782[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	push	eax
	mov	eax, DWORD PTR __First$[esp]
	push	edx
	mov	edx, DWORD PTR __Where$[esp+4]
	push	eax
	push	edx
	call	??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Insert<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Const_iterator<0> >

; 733  : 		}

	ret	12					; 0000000cH
??$insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::insert<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Const_iterator<0> >
_TEXT	ENDS
PUBLIC	??$insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::insert<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Const_iterator<0> >
; Function compile flags: /Ogtpy
;	COMDAT ??$insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00@Z
_TEXT	SEGMENT
__Where$ = 8						; size = 4
__First$ = 12						; size = 4
$T233791 = 16						; size = 1
__Last$ = 16						; size = 4
??$insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::insert<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Const_iterator<0> >, COMDAT
; _this$ = ecx

; 731  : 		{	// insert [_First, _Last) at _Where
; 732  : 		_Insert(_Where, _First, _Last, _Iter_cat(_First));

	mov	eax, DWORD PTR $T233791[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	push	eax
	mov	eax, DWORD PTR __First$[esp]
	push	edx
	mov	edx, DWORD PTR __Where$[esp+4]
	push	eax
	push	edx
	call	??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Insert<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Const_iterator<0> >

; 733  : 		}

	ret	12					; 0000000cH
??$insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::insert<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Const_iterator<0> >
_TEXT	ENDS
PUBLIC	??$_Umove@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@1@PAV231@00@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Umove<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??$_Umove@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@1@PAV231@00@Z
_TEXT	SEGMENT
$T233843 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$233847 = 16					; size = 1
__Ptr$ = 16						; size = 4
??$_Umove@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@1@PAV231@00@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Umove<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *>, COMDAT
; _this$ = ecx

; 1145 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

	push	ecx

; 1146 : 		{	// move initializing [_First, _Last), using allocator
; 1147 : 		return (_STDEXT _Unchecked_uninitialized_move(_First, _Last,
; 1148 : 			_Ptr, this->_Alval));

	mov	edx, DWORD PTR __Cat$233847[esp]
	mov	BYTE PTR $T233843[esp+4], 0
	mov	eax, DWORD PTR $T233843[esp+4]
	push	eax
	mov	eax, DWORD PTR __Ptr$[esp+4]
	push	edx
	mov	edx, DWORD PTR __First$[esp+8]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >

; 1149 : 		}

	add	esp, 28					; 0000001cH
	ret	12					; 0000000cH
??$_Umove@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@1@PAV231@00@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Umove<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *>
_TEXT	ENDS
PUBLIC	??$_Umove@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@1@PAV231@00@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Umove<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Umove@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@1@PAV231@00@Z
_TEXT	SEGMENT
$T233898 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$233902 = 16					; size = 1
__Ptr$ = 16						; size = 4
??$_Umove@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@1@PAV231@00@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Umove<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *>, COMDAT
; _this$ = ecx

; 1145 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

	push	ecx

; 1146 : 		{	// move initializing [_First, _Last), using allocator
; 1147 : 		return (_STDEXT _Unchecked_uninitialized_move(_First, _Last,
; 1148 : 			_Ptr, this->_Alval));

	mov	edx, DWORD PTR __Cat$233902[esp]
	mov	BYTE PTR $T233898[esp+4], 0
	mov	eax, DWORD PTR $T233898[esp+4]
	push	eax
	mov	eax, DWORD PTR __Ptr$[esp+4]
	push	edx
	mov	edx, DWORD PTR __First$[esp+8]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >

; 1149 : 		}

	add	esp, 28					; 0000001cH
	ret	12					; 0000000cH
??$_Umove@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@1@PAV231@00@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Umove<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *>
_TEXT	ENDS
PUBLIC	??$_Umove@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@1@PAV231@00@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Umove<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Umove@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@1@PAV231@00@Z
_TEXT	SEGMENT
$T233953 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$233957 = 16					; size = 1
__Ptr$ = 16						; size = 4
??$_Umove@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@1@PAV231@00@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Umove<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *>, COMDAT
; _this$ = ecx

; 1145 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

	push	ecx

; 1146 : 		{	// move initializing [_First, _Last), using allocator
; 1147 : 		return (_STDEXT _Unchecked_uninitialized_move(_First, _Last,
; 1148 : 			_Ptr, this->_Alval));

	mov	edx, DWORD PTR __Cat$233957[esp]
	mov	BYTE PTR $T233953[esp+4], 0
	mov	eax, DWORD PTR $T233953[esp+4]
	push	eax
	mov	eax, DWORD PTR __Ptr$[esp+4]
	push	edx
	mov	edx, DWORD PTR __First$[esp+8]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >

; 1149 : 		}

	add	esp, 28					; 0000001cH
	ret	12					; 0000000cH
??$_Umove@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@1@PAV231@00@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Umove<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *>
_TEXT	ENDS
PUBLIC	??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::~list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::~list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >, COMDAT
; _this$ = ecx

; 520  : 		{	// destroy the object

	push	esi
	mov	esi, ecx

; 521  : 		_Tidy();

	call	?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::clear
	mov	eax, DWORD PTR [esi+4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	DWORD PTR [esi+4], 0
	pop	esi

; 522  : 		}

	ret	0
??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::~list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >
_TEXT	ENDS
PUBLIC	??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE@XZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::~vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE@XZ PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::~vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >, COMDAT
; _this$ = ecx

; 558  : 		{	// destroy the object

	push	esi
	mov	esi, ecx

; 559  : 		_Tidy();

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN6@vector
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@vector:
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 560  : 		}

	ret	0
??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE@XZ ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::~vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
_TEXT	ENDS
PUBLIC	??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::~list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::~list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >, COMDAT
; _this$ = ecx

; 520  : 		{	// destroy the object

	push	esi
	mov	esi, ecx

; 521  : 		_Tidy();

	call	?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::clear
	mov	eax, DWORD PTR [esi+4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	DWORD PTR [esi+4], 0
	pop	esi

; 522  : 		}

	ret	0
??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::~list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >
_TEXT	ENDS
PUBLIC	??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE@XZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::~vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE@XZ PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::~vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >, COMDAT
; _this$ = ecx

; 558  : 		{	// destroy the object

	push	esi
	mov	esi, ecx

; 559  : 		_Tidy();

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN6@vector@2
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@vector@2:
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 560  : 		}

	ret	0
??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE@XZ ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::~vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
_TEXT	ENDS
PUBLIC	??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::~list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::~list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >, COMDAT
; _this$ = ecx

; 520  : 		{	// destroy the object

	push	esi
	mov	esi, ecx

; 521  : 		_Tidy();

	call	?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::clear
	mov	eax, DWORD PTR [esi+4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	DWORD PTR [esi+4], 0
	pop	esi

; 522  : 		}

	ret	0
??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::~list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >
_TEXT	ENDS
PUBLIC	??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE@XZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::~vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE@XZ PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::~vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >, COMDAT
; _this$ = ecx

; 558  : 		{	// destroy the object

	push	esi
	mov	esi, ecx

; 559  : 		_Tidy();

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN6@vector@3
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@vector@3:
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 560  : 		}

	ret	0
??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE@XZ ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::~vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
_TEXT	ENDS
PUBLIC	?_Splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@00I_N@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Splice
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ?_Splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@00I_N@Z
_TEXT	SEGMENT
__Where$ = 8						; size = 4
__Right$ = 12						; size = 4
__First$ = 16						; size = 4
__Last$ = 20						; size = 4
__Count$ = 24						; size = 4
__Keep$ = 28						; size = 1
?_Splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@00I_N@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Splice, COMDAT
; _this$ = ecx

; 1126 : 		{	// splice _Right [_First, _Last) before _Where

	push	esi

; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 		if (_Where._Mycont != this)
; 1129 : 			_DEBUG_ERROR("list splice iterator outside range");
; 1130 : 		if (this->_Alval == _Right._Alval)
; 1131 : 			{	// same allocator, just relink
; 1132 : 			if (!_Keep && this != &_Right)
; 1133 : 				for (const_iterator _Next = _First; _Next != _Last; )
; 1134 : 					_Orphan_ptr(_Right, (_Next++)._Ptr);
; 1135 : 
; 1136 :  #else /* _HAS_ITERATOR_DEBUGGING */
; 1137 :         _Keep;                  // unused in this branch
; 1138 : 		if (this->_Alval == _Right._Alval)
; 1139 : 			{	// same allocator, just relink
; 1140 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1141 : 
; 1142 : 			if (this != &_Right)

	mov	esi, DWORD PTR __Right$[esp]
	cmp	ecx, esi
	je	SHORT $LN2@Splice
	push	edi

; 1143 : 				{	// splicing from another list, adjust counts
; 1144 : 				_Incsize(_Count);

	mov	edi, DWORD PTR __Count$[esp+4]
	push	edi
	call	?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEXI@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Incsize

; 1145 : 				_Right._Mysize -= _Count;

	sub	DWORD PTR [esi+8], edi
	pop	edi
$LN2@Splice:

; 1146 : 				}
; 1147 : 			_Nextnode(_Prevnode(_First._Mynode())) = _Last._Mynode();

	mov	eax, DWORD PTR __First$[esp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Last$[esp]
	mov	DWORD PTR [ecx], edx

; 1148 : 			_Nextnode(_Prevnode(_Last._Mynode())) = _Where._Mynode();

	mov	eax, DWORD PTR __Last$[esp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Where$[esp]
	mov	DWORD PTR [ecx], edx

; 1149 : 			_Nextnode(_Prevnode(_Where._Mynode())) = _First._Mynode();

	mov	eax, DWORD PTR __Where$[esp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __First$[esp]
	mov	DWORD PTR [ecx], edx

; 1150 : 			_Nodeptr _Pnode = _Prevnode(_Where._Mynode());

	mov	eax, DWORD PTR __Where$[esp]

; 1151 : 			_Prevnode(_Where._Mynode()) = _Prevnode(_Last._Mynode());

	mov	edx, DWORD PTR __Last$[esp]
	mov	edx, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [eax+4], edx

; 1152 : 			_Prevnode(_Last._Mynode()) = _Prevnode(_First._Mynode());

	mov	eax, DWORD PTR __First$[esp]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR __Last$[esp]
	mov	DWORD PTR [eax+4], edx

; 1153 : 			_Prevnode(_First._Mynode()) = _Pnode;

	mov	edx, DWORD PTR __First$[esp]
	mov	DWORD PTR [edx+4], ecx
	pop	esi

; 1154 : 			}
; 1155 : 		else
; 1156 : 			{	// different allocator, copy nodes then erase source
; 1157 : 			insert(_Where, _First, _Last);
; 1158 : 			_Right.erase(_First, _Last);
; 1159 : 			}
; 1160 :         }

	ret	24					; 00000018H
?_Splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@00I_N@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Splice
_TEXT	ENDS
PUBLIC	?_Splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@00I_N@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Splice
; Function compile flags: /Ogtpy
;	COMDAT ?_Splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@00I_N@Z
_TEXT	SEGMENT
__Where$ = 8						; size = 4
__Right$ = 12						; size = 4
__First$ = 16						; size = 4
__Last$ = 20						; size = 4
__Count$ = 24						; size = 4
__Keep$ = 28						; size = 1
?_Splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@00I_N@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Splice, COMDAT
; _this$ = ecx

; 1126 : 		{	// splice _Right [_First, _Last) before _Where

	push	esi

; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 		if (_Where._Mycont != this)
; 1129 : 			_DEBUG_ERROR("list splice iterator outside range");
; 1130 : 		if (this->_Alval == _Right._Alval)
; 1131 : 			{	// same allocator, just relink
; 1132 : 			if (!_Keep && this != &_Right)
; 1133 : 				for (const_iterator _Next = _First; _Next != _Last; )
; 1134 : 					_Orphan_ptr(_Right, (_Next++)._Ptr);
; 1135 : 
; 1136 :  #else /* _HAS_ITERATOR_DEBUGGING */
; 1137 :         _Keep;                  // unused in this branch
; 1138 : 		if (this->_Alval == _Right._Alval)
; 1139 : 			{	// same allocator, just relink
; 1140 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1141 : 
; 1142 : 			if (this != &_Right)

	mov	esi, DWORD PTR __Right$[esp]
	cmp	ecx, esi
	je	SHORT $LN2@Splice@2
	push	edi

; 1143 : 				{	// splicing from another list, adjust counts
; 1144 : 				_Incsize(_Count);

	mov	edi, DWORD PTR __Count$[esp+4]
	push	edi
	call	?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEXI@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Incsize

; 1145 : 				_Right._Mysize -= _Count;

	sub	DWORD PTR [esi+8], edi
	pop	edi
$LN2@Splice@2:

; 1146 : 				}
; 1147 : 			_Nextnode(_Prevnode(_First._Mynode())) = _Last._Mynode();

	mov	eax, DWORD PTR __First$[esp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Last$[esp]
	mov	DWORD PTR [ecx], edx

; 1148 : 			_Nextnode(_Prevnode(_Last._Mynode())) = _Where._Mynode();

	mov	eax, DWORD PTR __Last$[esp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Where$[esp]
	mov	DWORD PTR [ecx], edx

; 1149 : 			_Nextnode(_Prevnode(_Where._Mynode())) = _First._Mynode();

	mov	eax, DWORD PTR __Where$[esp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __First$[esp]
	mov	DWORD PTR [ecx], edx

; 1150 : 			_Nodeptr _Pnode = _Prevnode(_Where._Mynode());

	mov	eax, DWORD PTR __Where$[esp]

; 1151 : 			_Prevnode(_Where._Mynode()) = _Prevnode(_Last._Mynode());

	mov	edx, DWORD PTR __Last$[esp]
	mov	edx, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [eax+4], edx

; 1152 : 			_Prevnode(_Last._Mynode()) = _Prevnode(_First._Mynode());

	mov	eax, DWORD PTR __First$[esp]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR __Last$[esp]
	mov	DWORD PTR [eax+4], edx

; 1153 : 			_Prevnode(_First._Mynode()) = _Pnode;

	mov	edx, DWORD PTR __First$[esp]
	mov	DWORD PTR [edx+4], ecx
	pop	esi

; 1154 : 			}
; 1155 : 		else
; 1156 : 			{	// different allocator, copy nodes then erase source
; 1157 : 			insert(_Where, _First, _Last);
; 1158 : 			_Right.erase(_First, _Last);
; 1159 : 			}
; 1160 :         }

	ret	24					; 00000018H
?_Splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@00I_N@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Splice
_TEXT	ENDS
PUBLIC	?_Splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@00I_N@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Splice
; Function compile flags: /Ogtpy
;	COMDAT ?_Splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@00I_N@Z
_TEXT	SEGMENT
__Where$ = 8						; size = 4
__Right$ = 12						; size = 4
__First$ = 16						; size = 4
__Last$ = 20						; size = 4
__Count$ = 24						; size = 4
__Keep$ = 28						; size = 1
?_Splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@00I_N@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Splice, COMDAT
; _this$ = ecx

; 1126 : 		{	// splice _Right [_First, _Last) before _Where

	push	esi

; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 		if (_Where._Mycont != this)
; 1129 : 			_DEBUG_ERROR("list splice iterator outside range");
; 1130 : 		if (this->_Alval == _Right._Alval)
; 1131 : 			{	// same allocator, just relink
; 1132 : 			if (!_Keep && this != &_Right)
; 1133 : 				for (const_iterator _Next = _First; _Next != _Last; )
; 1134 : 					_Orphan_ptr(_Right, (_Next++)._Ptr);
; 1135 : 
; 1136 :  #else /* _HAS_ITERATOR_DEBUGGING */
; 1137 :         _Keep;                  // unused in this branch
; 1138 : 		if (this->_Alval == _Right._Alval)
; 1139 : 			{	// same allocator, just relink
; 1140 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1141 : 
; 1142 : 			if (this != &_Right)

	mov	esi, DWORD PTR __Right$[esp]
	cmp	ecx, esi
	je	SHORT $LN2@Splice@3
	push	edi

; 1143 : 				{	// splicing from another list, adjust counts
; 1144 : 				_Incsize(_Count);

	mov	edi, DWORD PTR __Count$[esp+4]
	push	edi
	call	?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEXI@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Incsize

; 1145 : 				_Right._Mysize -= _Count;

	sub	DWORD PTR [esi+8], edi
	pop	edi
$LN2@Splice@3:

; 1146 : 				}
; 1147 : 			_Nextnode(_Prevnode(_First._Mynode())) = _Last._Mynode();

	mov	eax, DWORD PTR __First$[esp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Last$[esp]
	mov	DWORD PTR [ecx], edx

; 1148 : 			_Nextnode(_Prevnode(_Last._Mynode())) = _Where._Mynode();

	mov	eax, DWORD PTR __Last$[esp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Where$[esp]
	mov	DWORD PTR [ecx], edx

; 1149 : 			_Nextnode(_Prevnode(_Where._Mynode())) = _First._Mynode();

	mov	eax, DWORD PTR __Where$[esp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __First$[esp]
	mov	DWORD PTR [ecx], edx

; 1150 : 			_Nodeptr _Pnode = _Prevnode(_Where._Mynode());

	mov	eax, DWORD PTR __Where$[esp]

; 1151 : 			_Prevnode(_Where._Mynode()) = _Prevnode(_Last._Mynode());

	mov	edx, DWORD PTR __Last$[esp]
	mov	edx, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [eax+4], edx

; 1152 : 			_Prevnode(_Last._Mynode()) = _Prevnode(_First._Mynode());

	mov	eax, DWORD PTR __First$[esp]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR __Last$[esp]
	mov	DWORD PTR [eax+4], edx

; 1153 : 			_Prevnode(_First._Mynode()) = _Pnode;

	mov	edx, DWORD PTR __First$[esp]
	mov	DWORD PTR [edx+4], ecx
	pop	esi

; 1154 : 			}
; 1155 : 		else
; 1156 : 			{	// different allocator, copy nodes then erase source
; 1157 : 			insert(_Where, _First, _Last);
; 1158 : 			_Right.erase(_First, _Last);
; 1159 : 			}
; 1160 :         }

	ret	24					; 00000018H
?_Splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@00I_N@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Splice
_TEXT	ENDS
PUBLIC	?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Insert_n
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z$2
__catchsym$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z$0
__unwindtable$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z$4
	DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z$5
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z
_TEXT	SEGMENT
__Capacity$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Cat$234575 = 8					; size = 1
__Cat$234505 = 8					; size = 1
__Where$ = 8						; size = 4
__Tmp$223707 = 12					; size = 4
__Tmp$223697 = 12					; size = 4
__Newvec$223682 = 12					; size = 4
__Count$ = 12						; size = 4
tv515 = 16						; size = 4
$T234571 = 16						; size = 1
$T234502 = 16						; size = 1
__Val$ = 16						; size = 4
?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Insert_n, COMDAT
; _this$ = ecx

; 1153 : 		{	// insert _Count * _Val at _Where

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	ebx
	push	esi
	mov	esi, ecx

; 1154 : 
; 1155 :  #if _HAS_ITERATOR_DEBUGGING
; 1156 : 		if (_Where._Mycont != this
; 1157 : 			|| _Where._Myptr < _Myfirst || _Mylast < _Where._Myptr)
; 1158 : 			_DEBUG_ERROR("vector insert iterator outside range");
; 1159 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1160 : 
; 1161 : 		size_type _Capacity = capacity();

	mov	edx, DWORD PTR [esi+4]
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp
	test	edx, edx
	jne	SHORT $LN29@Insert_n
	xor	ecx, ecx
	jmp	SHORT $LN30@Insert_n
$LN29@Insert_n:
	mov	eax, DWORD PTR [esi+12]
	sub	eax, edx
	sar	eax, 2
	mov	ecx, eax
$LN30@Insert_n:

; 1162 : 
; 1163 : 		if (_Count == 0)

	mov	edi, DWORD PTR __Count$[ebp]
	test	edi, edi
	je	$LN1@Insert_n

; 1164 : 			;
; 1165 : 		else if (max_size() - size() < _Count)

	mov	ebx, DWORD PTR [esi+8]
	mov	eax, ebx
	sub	eax, edx
	sar	eax, 2
	mov	edx, 1073741823				; 3fffffffH
	sub	edx, eax
	cmp	edx, edi
	jae	SHORT $LN12@Insert_n

; 1166 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@KAXXZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Xlen
$LN87@Insert_n:
$LN12@Insert_n:

; 1167 : 		else if (_Capacity < size() + _Count)

	lea	edx, DWORD PTR [eax+edi]
	cmp	ecx, edx
	jae	$LN10@Insert_n

; 1168 : 			{	// not enough room, reallocate
; 1169 : 			_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1170 : 				? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	mov	eax, ecx
	shr	eax, 1
	mov	ebx, 1073741823				; 3fffffffH
	sub	ebx, eax
	cmp	ebx, ecx
	jae	SHORT $LN17@Insert_n
	mov	DWORD PTR __Capacity$[ebp], 0
	mov	ecx, DWORD PTR __Capacity$[ebp]
	jmp	SHORT $LN18@Insert_n
$LN17@Insert_n:
	add	ecx, eax
	mov	DWORD PTR __Capacity$[ebp], ecx
$LN18@Insert_n:

; 1171 : 			if (_Capacity < size() + _Count)

	cmp	ecx, edx
	jae	SHORT $LN9@Insert_n

; 1172 : 				_Capacity = size() + _Count;

	mov	DWORD PTR __Capacity$[ebp], edx
	mov	ecx, edx
$LN9@Insert_n:

; 1173 : 			pointer _Newvec = this->_Alval.allocate(_Capacity);

	push	0
	push	ecx
	call	??$_Allocate@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IPAV120@@Z ; std::_Allocate<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >

; 1174 : 			size_type _Whereoff = _VEC_ITER_BASE(_Where) - _Myfirst;

	mov	ebx, DWORD PTR __Where$[ebp]
	sub	ebx, DWORD PTR [esi+4]

; 1175 : 			int _Ncopied = 0;
; 1176 : 
; 1177 : 			_TRY_BEGIN
; 1178 : 			_Ufill(_Newvec + _Whereoff, _Count, _Val);	// add new stuff

	mov	ecx, DWORD PTR __Val$[ebp]
	add	esp, 8
	push	ecx
	sar	ebx, 2
	push	edi
	lea	edx, DWORD PTR [eax+ebx*4]
	push	edx
	mov	ecx, esi
	mov	DWORD PTR __Newvec$223682[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	call	?_Ufill@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAV342@IABV342@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Ufill

; 1179 : 			++_Ncopied;
; 1180 : 			_Umove(this->_Myfirst, _VEC_ITER_BASE(_Where),
; 1181 : 				_Newvec);	// move prefix

	mov	edx, DWORD PTR __Cat$234505[ebp]
	mov	eax, DWORD PTR [esi+4]
	mov	BYTE PTR $T234502[ebp], 0
	mov	ecx, DWORD PTR $T234502[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Newvec$223682[ebp]
	push	edx
	mov	edx, DWORD PTR __Where$[ebp]
	push	esi
	push	ecx
	push	edx
	push	eax
	call	??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >

; 1182 : 			++_Ncopied;
; 1183 : 			_Umove(_VEC_ITER_BASE(_Where), this->_Mylast,
; 1184 : 				_Newvec + (_Whereoff + _Count));	// move suffix

	mov	eax, DWORD PTR [esi+8]
	add	esp, 24					; 00000018H
	mov	BYTE PTR $T234571[ebp], 0
	mov	edx, DWORD PTR $T234571[ebp]
	push	edx
	mov	edx, DWORD PTR __Cat$234575[ebp]
	push	edx
	lea	ecx, DWORD PTR [ebx+edi]
	mov	ebx, DWORD PTR __Newvec$223682[ebp]
	push	esi
	lea	ecx, DWORD PTR [ebx+ecx*4]
	push	ecx
	push	eax
	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	call	??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >

; 1192 : 			_CATCH_END
; 1193 : 
; 1194 : 			_Count += size();

	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [esi+8]
	sub	ecx, eax
	sar	ecx, 2
	add	esp, 24					; 00000018H
	add	edi, ecx

; 1195 : 			if (_Myfirst != 0)

	test	eax, eax
	je	SHORT $LN81@Insert_n

; 1196 : 				{	// destroy and deallocate old array
; 1197 : 				_Destroy(_Myfirst, _Mylast);
; 1198 : 				this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN81@Insert_n:

; 1199 : 				}
; 1200 : 
; 1201 :  #if _HAS_ITERATOR_DEBUGGING
; 1202 : 			this->_Orphan_all();
; 1203 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1204 : 
; 1205 : 			_Myend = _Newvec + _Capacity;

	mov	edx, DWORD PTR __Capacity$[ebp]
	lea	eax, DWORD PTR [ebx+edx*4]

; 1206 : 			_Mylast = _Newvec + _Count;

	lea	ecx, DWORD PTR [ebx+edi*4]
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+8], ecx

; 1207 : 			_Myfirst = _Newvec;

	mov	DWORD PTR [esi+4], ebx

; 1249 : 			}
; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
__catch$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z$0:

; 1185 : 			_CATCH_ALL
; 1186 : 			if (1 < _Ncopied)
; 1187 : 				_Destroy(_Newvec, _Newvec + _Whereoff);
; 1188 : 			if (0 < _Ncopied)
; 1189 : 				_Destroy(_Newvec + _Whereoff, _Newvec + _Whereoff + _Count);
; 1190 : 			this->_Alval.deallocate(_Newvec, _Capacity);

	mov	edx, DWORD PTR __Newvec$223682[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
__catch$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z$2:

; 1191 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN88@Insert_n:
$LN10@Insert_n:

; 1208 : 			}
; 1209 : 		else if ((size_type)(_Mylast - _VEC_ITER_BASE(_Where)) < _Count)

	mov	eax, DWORD PTR __Where$[ebp]
	mov	ecx, ebx
	sub	ecx, eax
	sar	ecx, 2
	cmp	ecx, edi
	jae	SHORT $LN3@Insert_n

; 1210 : 			{	// new stuff spills off end
; 1211 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	edx, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR __Tmp$223697[ebp], ecx

; 1212 : 
; 1213 : 			_Umove(_VEC_ITER_BASE(_Where), _Mylast,
; 1214 : 				_VEC_ITER_BASE(_Where) + _Count);	// copy suffix

	lea	ecx, DWORD PTR [edi*4]
	mov	DWORD PTR tv515[ebp], ecx
	add	ecx, eax
	push	ecx
	push	ebx
	push	eax
	mov	ecx, esi
	call	??$_Umove@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@1@PAV231@00@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Umove<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *>

; 1215 : 
; 1216 : 			_TRY_BEGIN
; 1217 : 			_Ufill(_Mylast, _Count - (_Mylast - _VEC_ITER_BASE(_Where)),
; 1218 : 				_Tmp);	// insert new stuff off end

	mov	eax, DWORD PTR [esi+8]
	mov	ecx, eax
	sub	ecx, DWORD PTR __Where$[ebp]
	lea	edx, DWORD PTR __Tmp$223697[ebp]
	sar	ecx, 2
	push	edx
	sub	edi, ecx
	push	edi
	push	eax
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[ebp+12], 2
	call	?_Ufill@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAV342@IABV342@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Ufill

; 1219 : 			_CATCH_ALL
; 1220 : 			_Destroy(_VEC_ITER_BASE(_Where) + _Count, _Mylast + _Count);
; 1221 : 			_RERAISE;
; 1222 : 			_CATCH_END
; 1223 : 
; 1224 : 			_Mylast += _Count;

	mov	eax, DWORD PTR tv515[ebp]
	add	DWORD PTR [esi+8], eax
	mov	esi, DWORD PTR [esi+8]

; 1225 : 
; 1226 :  #if _HAS_ITERATOR_DEBUGGING
; 1227 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1228 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1229 : 
; 1230 : 			std::fill(_VEC_ITER_BASE(_Where), _Mylast - _Count,
; 1231 : 				_Tmp);	// insert up to old end

	lea	edx, DWORD PTR __Tmp$223697[ebp]
	push	edx
	sub	esi, eax
	mov	eax, DWORD PTR __Where$[ebp]
	push	esi
	push	eax
	call	??$fill@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V123@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@0ABV120@@Z ; std::fill<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >
	add	esp, 12					; 0000000cH

; 1249 : 			}
; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN3@Insert_n:

; 1232 : 			}
; 1233 : 		else
; 1234 : 			{	// new stuff can all be assigned
; 1235 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [ecx]

; 1236 : 
; 1237 : 			pointer _Oldend = _Mylast;
; 1238 : 			_Mylast = _Umove(_Oldend - _Count, _Oldend,
; 1239 : 				_Mylast);	// copy suffix

	lea	eax, DWORD PTR [edi*4]
	push	ebx
	mov	edi, ebx
	sub	edi, eax
	push	ebx
	push	edi
	mov	ecx, esi
	mov	DWORD PTR __Tmp$223707[ebp], edx
	mov	DWORD PTR tv515[ebp], eax
	call	??$_Umove@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@1@PAV231@00@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Umove<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *>

; 1240 : 
; 1241 :  #if _HAS_ITERATOR_DEBUGGING
; 1242 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1243 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1244 : 
; 1245 : 			_STDEXT _Unchecked_move_backward(_VEC_ITER_BASE(_Where), _Oldend - _Count,
; 1246 : 				_Oldend);	// copy hole

	push	ebx
	mov	DWORD PTR [esi+8], eax
	mov	eax, DWORD PTR __Where$[ebp]
	push	edi
	push	eax
	call	??$_Unchecked_move_backward@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@00@Z ; stdext::_Unchecked_move_backward<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *>

; 1247 : 			std::fill(_VEC_ITER_BASE(_Where), _VEC_ITER_BASE(_Where) + _Count,
; 1248 : 				_Tmp);	// insert into hole

	mov	eax, DWORD PTR __Where$[ebp]
	mov	edx, DWORD PTR tv515[ebp]
	lea	ecx, DWORD PTR __Tmp$223707[ebp]
	push	ecx
	add	edx, eax
	push	edx
	push	eax
	call	??$fill@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V123@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@0ABV120@@Z ; std::fill<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >
	add	esp, 24					; 00000018H
$LN1@Insert_n:

; 1249 : 			}
; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN86@Insert_n:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z:
	mov	eax, OFFSET __ehfuncinfo$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Insert_n
PUBLIC	?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Insert_n
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z$2
__catchsym$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z$0
__unwindtable$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z$4
	DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z$5
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z
_TEXT	SEGMENT
__Capacity$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Cat$234810 = 8					; size = 1
__Cat$234738 = 8					; size = 1
__Where$ = 8						; size = 4
__Tmp$223761 = 12					; size = 4
__Tmp$223751 = 12					; size = 4
__Newvec$223736 = 12					; size = 4
__Count$ = 12						; size = 4
tv515 = 16						; size = 4
$T234806 = 16						; size = 1
$T234734 = 16						; size = 1
__Val$ = 16						; size = 4
?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Insert_n, COMDAT
; _this$ = ecx

; 1153 : 		{	// insert _Count * _Val at _Where

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	ebx
	push	esi
	mov	esi, ecx

; 1154 : 
; 1155 :  #if _HAS_ITERATOR_DEBUGGING
; 1156 : 		if (_Where._Mycont != this
; 1157 : 			|| _Where._Myptr < _Myfirst || _Mylast < _Where._Myptr)
; 1158 : 			_DEBUG_ERROR("vector insert iterator outside range");
; 1159 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1160 : 
; 1161 : 		size_type _Capacity = capacity();

	mov	edx, DWORD PTR [esi+4]
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp
	test	edx, edx
	jne	SHORT $LN29@Insert_n@2
	xor	ecx, ecx
	jmp	SHORT $LN30@Insert_n@2
$LN29@Insert_n@2:
	mov	eax, DWORD PTR [esi+12]
	sub	eax, edx
	sar	eax, 2
	mov	ecx, eax
$LN30@Insert_n@2:

; 1162 : 
; 1163 : 		if (_Count == 0)

	mov	edi, DWORD PTR __Count$[ebp]
	test	edi, edi
	je	$LN1@Insert_n@2

; 1164 : 			;
; 1165 : 		else if (max_size() - size() < _Count)

	mov	ebx, DWORD PTR [esi+8]
	mov	eax, ebx
	sub	eax, edx
	sar	eax, 2
	mov	edx, 1073741823				; 3fffffffH
	sub	edx, eax
	cmp	edx, edi
	jae	SHORT $LN12@Insert_n@2

; 1166 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@KAXXZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Xlen
$LN87@Insert_n@2:
$LN12@Insert_n@2:

; 1167 : 		else if (_Capacity < size() + _Count)

	lea	edx, DWORD PTR [eax+edi]
	cmp	ecx, edx
	jae	$LN10@Insert_n@2

; 1168 : 			{	// not enough room, reallocate
; 1169 : 			_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1170 : 				? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	mov	eax, ecx
	shr	eax, 1
	mov	ebx, 1073741823				; 3fffffffH
	sub	ebx, eax
	cmp	ebx, ecx
	jae	SHORT $LN17@Insert_n@2
	mov	DWORD PTR __Capacity$[ebp], 0
	mov	ecx, DWORD PTR __Capacity$[ebp]
	jmp	SHORT $LN18@Insert_n@2
$LN17@Insert_n@2:
	add	ecx, eax
	mov	DWORD PTR __Capacity$[ebp], ecx
$LN18@Insert_n@2:

; 1171 : 			if (_Capacity < size() + _Count)

	cmp	ecx, edx
	jae	SHORT $LN9@Insert_n@2

; 1172 : 				_Capacity = size() + _Count;

	mov	DWORD PTR __Capacity$[ebp], edx
	mov	ecx, edx
$LN9@Insert_n@2:

; 1173 : 			pointer _Newvec = this->_Alval.allocate(_Capacity);

	push	0
	push	ecx
	call	??$_Allocate@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IPAV120@@Z ; std::_Allocate<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >

; 1174 : 			size_type _Whereoff = _VEC_ITER_BASE(_Where) - _Myfirst;

	mov	ebx, DWORD PTR __Where$[ebp]
	sub	ebx, DWORD PTR [esi+4]

; 1175 : 			int _Ncopied = 0;
; 1176 : 
; 1177 : 			_TRY_BEGIN
; 1178 : 			_Ufill(_Newvec + _Whereoff, _Count, _Val);	// add new stuff

	mov	ecx, DWORD PTR __Val$[ebp]
	add	esp, 8
	push	ecx
	sar	ebx, 2
	push	edi
	lea	edx, DWORD PTR [eax+ebx*4]
	push	edx
	mov	ecx, esi
	mov	DWORD PTR __Newvec$223736[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	call	?_Ufill@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAV342@IABV342@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Ufill

; 1179 : 			++_Ncopied;
; 1180 : 			_Umove(this->_Myfirst, _VEC_ITER_BASE(_Where),
; 1181 : 				_Newvec);	// move prefix

	mov	edx, DWORD PTR __Cat$234738[ebp]
	mov	eax, DWORD PTR [esi+4]
	mov	BYTE PTR $T234734[ebp], 0
	mov	ecx, DWORD PTR $T234734[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Newvec$223736[ebp]
	push	edx
	mov	edx, DWORD PTR __Where$[ebp]
	push	esi
	push	ecx
	push	edx
	push	eax
	call	??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >

; 1182 : 			++_Ncopied;
; 1183 : 			_Umove(_VEC_ITER_BASE(_Where), this->_Mylast,
; 1184 : 				_Newvec + (_Whereoff + _Count));	// move suffix

	mov	eax, DWORD PTR [esi+8]
	add	esp, 24					; 00000018H
	mov	BYTE PTR $T234806[ebp], 0
	mov	edx, DWORD PTR $T234806[ebp]
	push	edx
	mov	edx, DWORD PTR __Cat$234810[ebp]
	push	edx
	lea	ecx, DWORD PTR [ebx+edi]
	mov	ebx, DWORD PTR __Newvec$223736[ebp]
	push	esi
	lea	ecx, DWORD PTR [ebx+ecx*4]
	push	ecx
	push	eax
	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	call	??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >

; 1192 : 			_CATCH_END
; 1193 : 
; 1194 : 			_Count += size();

	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [esi+8]
	sub	ecx, eax
	sar	ecx, 2
	add	esp, 24					; 00000018H
	add	edi, ecx

; 1195 : 			if (_Myfirst != 0)

	test	eax, eax
	je	SHORT $LN81@Insert_n@2

; 1196 : 				{	// destroy and deallocate old array
; 1197 : 				_Destroy(_Myfirst, _Mylast);
; 1198 : 				this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN81@Insert_n@2:

; 1199 : 				}
; 1200 : 
; 1201 :  #if _HAS_ITERATOR_DEBUGGING
; 1202 : 			this->_Orphan_all();
; 1203 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1204 : 
; 1205 : 			_Myend = _Newvec + _Capacity;

	mov	edx, DWORD PTR __Capacity$[ebp]
	lea	eax, DWORD PTR [ebx+edx*4]

; 1206 : 			_Mylast = _Newvec + _Count;

	lea	ecx, DWORD PTR [ebx+edi*4]
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+8], ecx

; 1207 : 			_Myfirst = _Newvec;

	mov	DWORD PTR [esi+4], ebx

; 1249 : 			}
; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
__catch$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z$0:

; 1185 : 			_CATCH_ALL
; 1186 : 			if (1 < _Ncopied)
; 1187 : 				_Destroy(_Newvec, _Newvec + _Whereoff);
; 1188 : 			if (0 < _Ncopied)
; 1189 : 				_Destroy(_Newvec + _Whereoff, _Newvec + _Whereoff + _Count);
; 1190 : 			this->_Alval.deallocate(_Newvec, _Capacity);

	mov	edx, DWORD PTR __Newvec$223736[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
__catch$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z$2:

; 1191 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN88@Insert_n@2:
$LN10@Insert_n@2:

; 1208 : 			}
; 1209 : 		else if ((size_type)(_Mylast - _VEC_ITER_BASE(_Where)) < _Count)

	mov	eax, DWORD PTR __Where$[ebp]
	mov	ecx, ebx
	sub	ecx, eax
	sar	ecx, 2
	cmp	ecx, edi
	jae	SHORT $LN3@Insert_n@2

; 1210 : 			{	// new stuff spills off end
; 1211 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	edx, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR __Tmp$223751[ebp], ecx

; 1212 : 
; 1213 : 			_Umove(_VEC_ITER_BASE(_Where), _Mylast,
; 1214 : 				_VEC_ITER_BASE(_Where) + _Count);	// copy suffix

	lea	ecx, DWORD PTR [edi*4]
	mov	DWORD PTR tv515[ebp], ecx
	add	ecx, eax
	push	ecx
	push	ebx
	push	eax
	mov	ecx, esi
	call	??$_Umove@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@1@PAV231@00@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Umove<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *>

; 1215 : 
; 1216 : 			_TRY_BEGIN
; 1217 : 			_Ufill(_Mylast, _Count - (_Mylast - _VEC_ITER_BASE(_Where)),
; 1218 : 				_Tmp);	// insert new stuff off end

	mov	eax, DWORD PTR [esi+8]
	mov	ecx, eax
	sub	ecx, DWORD PTR __Where$[ebp]
	lea	edx, DWORD PTR __Tmp$223751[ebp]
	sar	ecx, 2
	push	edx
	sub	edi, ecx
	push	edi
	push	eax
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[ebp+12], 2
	call	?_Ufill@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAV342@IABV342@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Ufill

; 1219 : 			_CATCH_ALL
; 1220 : 			_Destroy(_VEC_ITER_BASE(_Where) + _Count, _Mylast + _Count);
; 1221 : 			_RERAISE;
; 1222 : 			_CATCH_END
; 1223 : 
; 1224 : 			_Mylast += _Count;

	mov	eax, DWORD PTR tv515[ebp]
	add	DWORD PTR [esi+8], eax
	mov	esi, DWORD PTR [esi+8]

; 1225 : 
; 1226 :  #if _HAS_ITERATOR_DEBUGGING
; 1227 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1228 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1229 : 
; 1230 : 			std::fill(_VEC_ITER_BASE(_Where), _Mylast - _Count,
; 1231 : 				_Tmp);	// insert up to old end

	lea	edx, DWORD PTR __Tmp$223751[ebp]
	push	edx
	sub	esi, eax
	mov	eax, DWORD PTR __Where$[ebp]
	push	esi
	push	eax
	call	??$fill@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V123@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@0ABV120@@Z ; std::fill<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >
	add	esp, 12					; 0000000cH

; 1249 : 			}
; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN3@Insert_n@2:

; 1232 : 			}
; 1233 : 		else
; 1234 : 			{	// new stuff can all be assigned
; 1235 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [ecx]

; 1236 : 
; 1237 : 			pointer _Oldend = _Mylast;
; 1238 : 			_Mylast = _Umove(_Oldend - _Count, _Oldend,
; 1239 : 				_Mylast);	// copy suffix

	lea	eax, DWORD PTR [edi*4]
	push	ebx
	mov	edi, ebx
	sub	edi, eax
	push	ebx
	push	edi
	mov	ecx, esi
	mov	DWORD PTR __Tmp$223761[ebp], edx
	mov	DWORD PTR tv515[ebp], eax
	call	??$_Umove@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@1@PAV231@00@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Umove<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *>

; 1240 : 
; 1241 :  #if _HAS_ITERATOR_DEBUGGING
; 1242 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1243 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1244 : 
; 1245 : 			_STDEXT _Unchecked_move_backward(_VEC_ITER_BASE(_Where), _Oldend - _Count,
; 1246 : 				_Oldend);	// copy hole

	push	ebx
	mov	DWORD PTR [esi+8], eax
	mov	eax, DWORD PTR __Where$[ebp]
	push	edi
	push	eax
	call	??$_Unchecked_move_backward@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@00@Z ; stdext::_Unchecked_move_backward<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *>

; 1247 : 			std::fill(_VEC_ITER_BASE(_Where), _VEC_ITER_BASE(_Where) + _Count,
; 1248 : 				_Tmp);	// insert into hole

	mov	eax, DWORD PTR __Where$[ebp]
	mov	edx, DWORD PTR tv515[ebp]
	lea	ecx, DWORD PTR __Tmp$223761[ebp]
	push	ecx
	add	edx, eax
	push	edx
	push	eax
	call	??$fill@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V123@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@0ABV120@@Z ; std::fill<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >
	add	esp, 24					; 00000018H
$LN1@Insert_n@2:

; 1249 : 			}
; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN86@Insert_n@2:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z:
	mov	eax, OFFSET __ehfuncinfo$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Insert_n
PUBLIC	?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Insert_n
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z$2
__catchsym$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z$0
__unwindtable$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z$4
	DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z$5
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z
_TEXT	SEGMENT
__Capacity$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Cat$235046 = 8					; size = 1
__Cat$234974 = 8					; size = 1
__Where$ = 8						; size = 4
__Tmp$223815 = 12					; size = 4
__Tmp$223805 = 12					; size = 4
__Newvec$223790 = 12					; size = 4
__Count$ = 12						; size = 4
tv515 = 16						; size = 4
$T235042 = 16						; size = 1
$T234970 = 16						; size = 1
__Val$ = 16						; size = 4
?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Insert_n, COMDAT
; _this$ = ecx

; 1153 : 		{	// insert _Count * _Val at _Where

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	ebx
	push	esi
	mov	esi, ecx

; 1154 : 
; 1155 :  #if _HAS_ITERATOR_DEBUGGING
; 1156 : 		if (_Where._Mycont != this
; 1157 : 			|| _Where._Myptr < _Myfirst || _Mylast < _Where._Myptr)
; 1158 : 			_DEBUG_ERROR("vector insert iterator outside range");
; 1159 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1160 : 
; 1161 : 		size_type _Capacity = capacity();

	mov	edx, DWORD PTR [esi+4]
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp
	test	edx, edx
	jne	SHORT $LN29@Insert_n@3
	xor	ecx, ecx
	jmp	SHORT $LN30@Insert_n@3
$LN29@Insert_n@3:
	mov	eax, DWORD PTR [esi+12]
	sub	eax, edx
	sar	eax, 2
	mov	ecx, eax
$LN30@Insert_n@3:

; 1162 : 
; 1163 : 		if (_Count == 0)

	mov	edi, DWORD PTR __Count$[ebp]
	test	edi, edi
	je	$LN1@Insert_n@3

; 1164 : 			;
; 1165 : 		else if (max_size() - size() < _Count)

	mov	ebx, DWORD PTR [esi+8]
	mov	eax, ebx
	sub	eax, edx
	sar	eax, 2
	mov	edx, 1073741823				; 3fffffffH
	sub	edx, eax
	cmp	edx, edi
	jae	SHORT $LN12@Insert_n@3

; 1166 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@KAXXZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Xlen
$LN87@Insert_n@3:
$LN12@Insert_n@3:

; 1167 : 		else if (_Capacity < size() + _Count)

	lea	edx, DWORD PTR [eax+edi]
	cmp	ecx, edx
	jae	$LN10@Insert_n@3

; 1168 : 			{	// not enough room, reallocate
; 1169 : 			_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1170 : 				? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	mov	eax, ecx
	shr	eax, 1
	mov	ebx, 1073741823				; 3fffffffH
	sub	ebx, eax
	cmp	ebx, ecx
	jae	SHORT $LN17@Insert_n@3
	mov	DWORD PTR __Capacity$[ebp], 0
	mov	ecx, DWORD PTR __Capacity$[ebp]
	jmp	SHORT $LN18@Insert_n@3
$LN17@Insert_n@3:
	add	ecx, eax
	mov	DWORD PTR __Capacity$[ebp], ecx
$LN18@Insert_n@3:

; 1171 : 			if (_Capacity < size() + _Count)

	cmp	ecx, edx
	jae	SHORT $LN9@Insert_n@3

; 1172 : 				_Capacity = size() + _Count;

	mov	DWORD PTR __Capacity$[ebp], edx
	mov	ecx, edx
$LN9@Insert_n@3:

; 1173 : 			pointer _Newvec = this->_Alval.allocate(_Capacity);

	push	0
	push	ecx
	call	??$_Allocate@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IPAV120@@Z ; std::_Allocate<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >

; 1174 : 			size_type _Whereoff = _VEC_ITER_BASE(_Where) - _Myfirst;

	mov	ebx, DWORD PTR __Where$[ebp]
	sub	ebx, DWORD PTR [esi+4]

; 1175 : 			int _Ncopied = 0;
; 1176 : 
; 1177 : 			_TRY_BEGIN
; 1178 : 			_Ufill(_Newvec + _Whereoff, _Count, _Val);	// add new stuff

	mov	ecx, DWORD PTR __Val$[ebp]
	add	esp, 8
	push	ecx
	sar	ebx, 2
	push	edi
	lea	edx, DWORD PTR [eax+ebx*4]
	push	edx
	mov	ecx, esi
	mov	DWORD PTR __Newvec$223790[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	call	?_Ufill@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAV342@IABV342@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Ufill

; 1179 : 			++_Ncopied;
; 1180 : 			_Umove(this->_Myfirst, _VEC_ITER_BASE(_Where),
; 1181 : 				_Newvec);	// move prefix

	mov	edx, DWORD PTR __Cat$234974[ebp]
	mov	eax, DWORD PTR [esi+4]
	mov	BYTE PTR $T234970[ebp], 0
	mov	ecx, DWORD PTR $T234970[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Newvec$223790[ebp]
	push	edx
	mov	edx, DWORD PTR __Where$[ebp]
	push	esi
	push	ecx
	push	edx
	push	eax
	call	??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >

; 1182 : 			++_Ncopied;
; 1183 : 			_Umove(_VEC_ITER_BASE(_Where), this->_Mylast,
; 1184 : 				_Newvec + (_Whereoff + _Count));	// move suffix

	mov	eax, DWORD PTR [esi+8]
	add	esp, 24					; 00000018H
	mov	BYTE PTR $T235042[ebp], 0
	mov	edx, DWORD PTR $T235042[ebp]
	push	edx
	mov	edx, DWORD PTR __Cat$235046[ebp]
	push	edx
	lea	ecx, DWORD PTR [ebx+edi]
	mov	ebx, DWORD PTR __Newvec$223790[ebp]
	push	esi
	lea	ecx, DWORD PTR [ebx+ecx*4]
	push	ecx
	push	eax
	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	call	??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >

; 1192 : 			_CATCH_END
; 1193 : 
; 1194 : 			_Count += size();

	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [esi+8]
	sub	ecx, eax
	sar	ecx, 2
	add	esp, 24					; 00000018H
	add	edi, ecx

; 1195 : 			if (_Myfirst != 0)

	test	eax, eax
	je	SHORT $LN81@Insert_n@3

; 1196 : 				{	// destroy and deallocate old array
; 1197 : 				_Destroy(_Myfirst, _Mylast);
; 1198 : 				this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN81@Insert_n@3:

; 1199 : 				}
; 1200 : 
; 1201 :  #if _HAS_ITERATOR_DEBUGGING
; 1202 : 			this->_Orphan_all();
; 1203 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1204 : 
; 1205 : 			_Myend = _Newvec + _Capacity;

	mov	edx, DWORD PTR __Capacity$[ebp]
	lea	eax, DWORD PTR [ebx+edx*4]

; 1206 : 			_Mylast = _Newvec + _Count;

	lea	ecx, DWORD PTR [ebx+edi*4]
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+8], ecx

; 1207 : 			_Myfirst = _Newvec;

	mov	DWORD PTR [esi+4], ebx

; 1249 : 			}
; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
__catch$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z$0:

; 1185 : 			_CATCH_ALL
; 1186 : 			if (1 < _Ncopied)
; 1187 : 				_Destroy(_Newvec, _Newvec + _Whereoff);
; 1188 : 			if (0 < _Ncopied)
; 1189 : 				_Destroy(_Newvec + _Whereoff, _Newvec + _Whereoff + _Count);
; 1190 : 			this->_Alval.deallocate(_Newvec, _Capacity);

	mov	edx, DWORD PTR __Newvec$223790[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
__catch$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z$2:

; 1191 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN88@Insert_n@3:
$LN10@Insert_n@3:

; 1208 : 			}
; 1209 : 		else if ((size_type)(_Mylast - _VEC_ITER_BASE(_Where)) < _Count)

	mov	eax, DWORD PTR __Where$[ebp]
	mov	ecx, ebx
	sub	ecx, eax
	sar	ecx, 2
	cmp	ecx, edi
	jae	SHORT $LN3@Insert_n@3

; 1210 : 			{	// new stuff spills off end
; 1211 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	edx, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR __Tmp$223805[ebp], ecx

; 1212 : 
; 1213 : 			_Umove(_VEC_ITER_BASE(_Where), _Mylast,
; 1214 : 				_VEC_ITER_BASE(_Where) + _Count);	// copy suffix

	lea	ecx, DWORD PTR [edi*4]
	mov	DWORD PTR tv515[ebp], ecx
	add	ecx, eax
	push	ecx
	push	ebx
	push	eax
	mov	ecx, esi
	call	??$_Umove@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@1@PAV231@00@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Umove<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *>

; 1215 : 
; 1216 : 			_TRY_BEGIN
; 1217 : 			_Ufill(_Mylast, _Count - (_Mylast - _VEC_ITER_BASE(_Where)),
; 1218 : 				_Tmp);	// insert new stuff off end

	mov	eax, DWORD PTR [esi+8]
	mov	ecx, eax
	sub	ecx, DWORD PTR __Where$[ebp]
	lea	edx, DWORD PTR __Tmp$223805[ebp]
	sar	ecx, 2
	push	edx
	sub	edi, ecx
	push	edi
	push	eax
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[ebp+12], 2
	call	?_Ufill@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAV342@IABV342@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Ufill

; 1219 : 			_CATCH_ALL
; 1220 : 			_Destroy(_VEC_ITER_BASE(_Where) + _Count, _Mylast + _Count);
; 1221 : 			_RERAISE;
; 1222 : 			_CATCH_END
; 1223 : 
; 1224 : 			_Mylast += _Count;

	mov	eax, DWORD PTR tv515[ebp]
	add	DWORD PTR [esi+8], eax
	mov	esi, DWORD PTR [esi+8]

; 1225 : 
; 1226 :  #if _HAS_ITERATOR_DEBUGGING
; 1227 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1228 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1229 : 
; 1230 : 			std::fill(_VEC_ITER_BASE(_Where), _Mylast - _Count,
; 1231 : 				_Tmp);	// insert up to old end

	lea	edx, DWORD PTR __Tmp$223805[ebp]
	push	edx
	sub	esi, eax
	mov	eax, DWORD PTR __Where$[ebp]
	push	esi
	push	eax
	call	??$fill@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V123@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@0ABV120@@Z ; std::fill<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >
	add	esp, 12					; 0000000cH

; 1249 : 			}
; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN3@Insert_n@3:

; 1232 : 			}
; 1233 : 		else
; 1234 : 			{	// new stuff can all be assigned
; 1235 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [ecx]

; 1236 : 
; 1237 : 			pointer _Oldend = _Mylast;
; 1238 : 			_Mylast = _Umove(_Oldend - _Count, _Oldend,
; 1239 : 				_Mylast);	// copy suffix

	lea	eax, DWORD PTR [edi*4]
	push	ebx
	mov	edi, ebx
	sub	edi, eax
	push	ebx
	push	edi
	mov	ecx, esi
	mov	DWORD PTR __Tmp$223815[ebp], edx
	mov	DWORD PTR tv515[ebp], eax
	call	??$_Umove@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@1@PAV231@00@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Umove<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *>

; 1240 : 
; 1241 :  #if _HAS_ITERATOR_DEBUGGING
; 1242 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1243 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1244 : 
; 1245 : 			_STDEXT _Unchecked_move_backward(_VEC_ITER_BASE(_Where), _Oldend - _Count,
; 1246 : 				_Oldend);	// copy hole

	push	ebx
	mov	DWORD PTR [esi+8], eax
	mov	eax, DWORD PTR __Where$[ebp]
	push	edi
	push	eax
	call	??$_Unchecked_move_backward@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@00@Z ; stdext::_Unchecked_move_backward<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *>

; 1247 : 			std::fill(_VEC_ITER_BASE(_Where), _VEC_ITER_BASE(_Where) + _Count,
; 1248 : 				_Tmp);	// insert into hole

	mov	eax, DWORD PTR __Where$[ebp]
	mov	edx, DWORD PTR tv515[ebp]
	lea	ecx, DWORD PTR __Tmp$223815[ebp]
	push	ecx
	add	edx, eax
	push	edx
	push	eax
	call	??$fill@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V123@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@0ABV120@@Z ; std::fill<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >
	add	esp, 24					; 00000018H
$LN1@Insert_n@3:

; 1249 : 			}
; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN86@Insert_n@3:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z:
	mov	eax, OFFSET __ehfuncinfo$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Insert_n
PUBLIC	??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::~_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xhash
;	COMDAT ??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ
_TEXT	SEGMENT
??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::~_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >, COMDAT
; _this$ = ecx

; 365  : 		{	// destroy hash table

	push	esi
	mov	esi, ecx

; 366  : 		}

	mov	eax, DWORD PTR [esi+20]
	push	edi
	xor	edi, edi
	cmp	eax, edi
	je	SHORT $LN10@Hash
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN10@Hash:
	mov	DWORD PTR [esi+20], edi
	mov	DWORD PTR [esi+24], edi
	mov	DWORD PTR [esi+28], edi
	add	esi, 4
	mov	ecx, esi
	call	?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::clear
	mov	eax, DWORD PTR [esi+4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	DWORD PTR [esi+4], edi
	pop	edi
	pop	esi
	ret	0
??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::~_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >
_TEXT	ENDS
PUBLIC	??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::~_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ
_TEXT	SEGMENT
??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::~_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >, COMDAT
; _this$ = ecx

; 365  : 		{	// destroy hash table

	push	esi
	mov	esi, ecx

; 366  : 		}

	mov	eax, DWORD PTR [esi+20]
	push	edi
	xor	edi, edi
	cmp	eax, edi
	je	SHORT $LN10@Hash@2
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN10@Hash@2:
	mov	DWORD PTR [esi+20], edi
	mov	DWORD PTR [esi+24], edi
	mov	DWORD PTR [esi+28], edi
	add	esi, 4
	mov	ecx, esi
	call	?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::clear
	mov	eax, DWORD PTR [esi+4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	DWORD PTR [esi+4], edi
	pop	edi
	pop	esi
	ret	0
??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::~_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >
_TEXT	ENDS
PUBLIC	??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::~_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ
_TEXT	SEGMENT
??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::~_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >, COMDAT
; _this$ = ecx

; 365  : 		{	// destroy hash table

	push	esi
	mov	esi, ecx

; 366  : 		}

	mov	eax, DWORD PTR [esi+20]
	push	edi
	xor	edi, edi
	cmp	eax, edi
	je	SHORT $LN10@Hash@3
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN10@Hash@3:
	mov	DWORD PTR [esi+20], edi
	mov	DWORD PTR [esi+24], edi
	mov	DWORD PTR [esi+28], edi
	add	esi, 4
	mov	ecx, esi
	call	?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::clear
	mov	eax, DWORD PTR [esi+4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	DWORD PTR [esi+4], edi
	pop	edi
	pop	esi
	ret	0
??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::~_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >
_TEXT	ENDS
PUBLIC	?splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@0@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::splice
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ?splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@0@Z
_TEXT	SEGMENT
__Where$ = 8						; size = 4
__Right$ = 12						; size = 4
__First$ = 16						; size = 4
?splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@0@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::splice, COMDAT
; _this$ = ecx

; 884  : 
; 885  :  #if _HAS_ITERATOR_DEBUGGING
; 886  : 		if (_First == _Right.end())
; 887  : 			_DEBUG_ERROR("list splice iterator outside range");
; 888  : 		else
; 889  : 
; 890  :  #else /* _HAS_ITERATOR_DEBUGGING */
; 891  : 		if (_First != _Right.end())

	mov	eax, DWORD PTR __First$[esp-4]
	push	esi
	mov	esi, DWORD PTR __Right$[esp]
	cmp	eax, DWORD PTR [esi+4]
	je	SHORT $LN2@splice

; 892  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 893  : 
; 894  : 			{	// element exists, try splice
; 895  : 			const_iterator _Last = _First;
; 896  : 			++_Last;

	mov	edx, DWORD PTR [eax]
	push	edi

; 897  : 			if (this != &_Right
; 898  : 				|| (_Where != _First && _Where != _Last))

	mov	edi, DWORD PTR __Where$[esp+4]
	cmp	ecx, esi
	jne	SHORT $LN1@splice
	cmp	edi, eax
	je	SHORT $LN28@splice
	cmp	edi, edx
	je	SHORT $LN28@splice
$LN1@splice:

; 899  : 				_Splice(_Where, _Right, _First, _Last, 1);

	push	0
	push	1
	push	edx
	push	eax
	push	esi
	push	edi
	call	?_Splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@00I_N@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Splice
$LN28@splice:
	pop	edi
$LN2@splice:
	pop	esi

; 900  : 			}
; 901  : 		}

	ret	12					; 0000000cH
?splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@0@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::splice
_TEXT	ENDS
PUBLIC	?splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@0@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::splice
; Function compile flags: /Ogtpy
;	COMDAT ?splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@0@Z
_TEXT	SEGMENT
__Where$ = 8						; size = 4
__Right$ = 12						; size = 4
__First$ = 16						; size = 4
?splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@0@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::splice, COMDAT
; _this$ = ecx

; 884  : 
; 885  :  #if _HAS_ITERATOR_DEBUGGING
; 886  : 		if (_First == _Right.end())
; 887  : 			_DEBUG_ERROR("list splice iterator outside range");
; 888  : 		else
; 889  : 
; 890  :  #else /* _HAS_ITERATOR_DEBUGGING */
; 891  : 		if (_First != _Right.end())

	mov	eax, DWORD PTR __First$[esp-4]
	push	esi
	mov	esi, DWORD PTR __Right$[esp]
	cmp	eax, DWORD PTR [esi+4]
	je	SHORT $LN2@splice@2

; 892  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 893  : 
; 894  : 			{	// element exists, try splice
; 895  : 			const_iterator _Last = _First;
; 896  : 			++_Last;

	mov	edx, DWORD PTR [eax]
	push	edi

; 897  : 			if (this != &_Right
; 898  : 				|| (_Where != _First && _Where != _Last))

	mov	edi, DWORD PTR __Where$[esp+4]
	cmp	ecx, esi
	jne	SHORT $LN1@splice@2
	cmp	edi, eax
	je	SHORT $LN28@splice@2
	cmp	edi, edx
	je	SHORT $LN28@splice@2
$LN1@splice@2:

; 899  : 				_Splice(_Where, _Right, _First, _Last, 1);

	push	0
	push	1
	push	edx
	push	eax
	push	esi
	push	edi
	call	?_Splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@00I_N@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Splice
$LN28@splice@2:
	pop	edi
$LN2@splice@2:
	pop	esi

; 900  : 			}
; 901  : 		}

	ret	12					; 0000000cH
?splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@0@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::splice
_TEXT	ENDS
PUBLIC	?splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@0@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::splice
; Function compile flags: /Ogtpy
;	COMDAT ?splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@0@Z
_TEXT	SEGMENT
__Where$ = 8						; size = 4
__Right$ = 12						; size = 4
__First$ = 16						; size = 4
?splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@0@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::splice, COMDAT
; _this$ = ecx

; 884  : 
; 885  :  #if _HAS_ITERATOR_DEBUGGING
; 886  : 		if (_First == _Right.end())
; 887  : 			_DEBUG_ERROR("list splice iterator outside range");
; 888  : 		else
; 889  : 
; 890  :  #else /* _HAS_ITERATOR_DEBUGGING */
; 891  : 		if (_First != _Right.end())

	mov	eax, DWORD PTR __First$[esp-4]
	push	esi
	mov	esi, DWORD PTR __Right$[esp]
	cmp	eax, DWORD PTR [esi+4]
	je	SHORT $LN2@splice@3

; 892  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 893  : 
; 894  : 			{	// element exists, try splice
; 895  : 			const_iterator _Last = _First;
; 896  : 			++_Last;

	mov	edx, DWORD PTR [eax]
	push	edi

; 897  : 			if (this != &_Right
; 898  : 				|| (_Where != _First && _Where != _Last))

	mov	edi, DWORD PTR __Where$[esp+4]
	cmp	ecx, esi
	jne	SHORT $LN1@splice@3
	cmp	edi, eax
	je	SHORT $LN28@splice@3
	cmp	edi, edx
	je	SHORT $LN28@splice@3
$LN1@splice@3:

; 899  : 				_Splice(_Where, _Right, _First, _Last, 1);

	push	0
	push	1
	push	edx
	push	eax
	push	esi
	push	edi
	call	?_Splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@00I_N@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Splice
$LN28@splice@3:
	pop	edi
$LN2@splice@3:
	pop	esi

; 900  : 			}
; 901  : 		}

	ret	12					; 0000000cH
?splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@0@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::splice
_TEXT	ENDS
PUBLIC	?insert@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::insert
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?insert@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z
_TEXT	SEGMENT
__Where$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
?insert@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::insert, COMDAT
; _this$ = ecx

; 883  : 		_Insert_n(_Where, _Count, _Val);

	mov	eax, DWORD PTR __Val$[esp-4]
	mov	edx, DWORD PTR __Count$[esp-4]
	push	eax
	mov	eax, DWORD PTR __Where$[esp]
	push	edx
	push	eax
	call	?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Insert_n

; 884  : 		}

	ret	12					; 0000000cH
?insert@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::insert
_TEXT	ENDS
PUBLIC	?insert@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::insert
; Function compile flags: /Ogtpy
;	COMDAT ?insert@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z
_TEXT	SEGMENT
__Where$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
?insert@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::insert, COMDAT
; _this$ = ecx

; 883  : 		_Insert_n(_Where, _Count, _Val);

	mov	eax, DWORD PTR __Val$[esp-4]
	mov	edx, DWORD PTR __Count$[esp-4]
	push	eax
	mov	eax, DWORD PTR __Where$[esp]
	push	edx
	push	eax
	call	?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Insert_n

; 884  : 		}

	ret	12					; 0000000cH
?insert@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::insert
_TEXT	ENDS
PUBLIC	?insert@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::insert
; Function compile flags: /Ogtpy
;	COMDAT ?insert@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z
_TEXT	SEGMENT
__Where$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
?insert@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::insert, COMDAT
; _this$ = ecx

; 883  : 		_Insert_n(_Where, _Count, _Val);

	mov	eax, DWORD PTR __Val$[esp-4]
	mov	edx, DWORD PTR __Count$[esp-4]
	push	eax
	mov	eax, DWORD PTR __Where$[esp]
	push	edx
	push	eax
	call	?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Insert_n

; 884  : 		}

	ret	12					; 0000000cH
?insert@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::insert
_TEXT	ENDS
PUBLIC	??1?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@tr1@std@@QAE@XZ ; std::tr1::unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::~unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@tr1@std@@QAE@XZ
_TEXT	SEGMENT
??1?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@tr1@std@@QAE@XZ PROC ; std::tr1::unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::~unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >, COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	mov	eax, DWORD PTR [esi+20]
	push	edi
	xor	edi, edi
	cmp	eax, edi
	je	SHORT $LN13@unordered_
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN13@unordered_:
	mov	DWORD PTR [esi+20], edi
	mov	DWORD PTR [esi+24], edi
	mov	DWORD PTR [esi+28], edi
	add	esi, 4
	mov	ecx, esi
	call	?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::clear
	mov	eax, DWORD PTR [esi+4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	DWORD PTR [esi+4], edi
	pop	edi
	pop	esi
	ret	0
??1?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@tr1@std@@QAE@XZ ENDP ; std::tr1::unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::~unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >
_TEXT	ENDS
PUBLIC	??1?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@tr1@std@@QAE@XZ ; std::tr1::unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::~unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@tr1@std@@QAE@XZ
_TEXT	SEGMENT
??1?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@tr1@std@@QAE@XZ PROC ; std::tr1::unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::~unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >, COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	mov	eax, DWORD PTR [esi+20]
	push	edi
	xor	edi, edi
	cmp	eax, edi
	je	SHORT $LN13@unordered_@2
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN13@unordered_@2:
	mov	DWORD PTR [esi+20], edi
	mov	DWORD PTR [esi+24], edi
	mov	DWORD PTR [esi+28], edi
	add	esi, 4
	mov	ecx, esi
	call	?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::clear
	mov	eax, DWORD PTR [esi+4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	DWORD PTR [esi+4], edi
	pop	edi
	pop	esi
	ret	0
??1?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@tr1@std@@QAE@XZ ENDP ; std::tr1::unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::~unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >
_TEXT	ENDS
PUBLIC	??1?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@tr1@std@@QAE@XZ ; std::tr1::unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::~unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@tr1@std@@QAE@XZ
_TEXT	SEGMENT
??1?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@tr1@std@@QAE@XZ PROC ; std::tr1::unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::~unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >, COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	mov	eax, DWORD PTR [esi+20]
	push	edi
	xor	edi, edi
	cmp	eax, edi
	je	SHORT $LN13@unordered_@3
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN13@unordered_@3:
	mov	DWORD PTR [esi+20], edi
	mov	DWORD PTR [esi+24], edi
	mov	DWORD PTR [esi+28], edi
	add	esi, 4
	mov	ecx, esi
	call	?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::clear
	mov	eax, DWORD PTR [esi+4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	DWORD PTR [esi+4], edi
	pop	edi
	pop	esi
	ret	0
??1?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@tr1@std@@QAE@XZ ENDP ; std::tr1::unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::~unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >
_TEXT	ENDS
PUBLIC	?_Assign_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Assign_n
; Function compile flags: /Ogtpy
;	COMDAT ?_Assign_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
__Tmp$ = 12						; size = 4
__Val$ = 12						; size = 4
?_Assign_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Assign_n, COMDAT
; _this$ = ecx

; 1096 : 		_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	eax, DWORD PTR __Val$[esp-4]
	mov	edx, DWORD PTR [eax]
	push	esi

; 1097 : 		erase(begin(), end());

	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR __Tmp$[esp], edx
	mov	edx, DWORD PTR [ecx+8]
	cmp	esi, edx
	je	SHORT $LN15@Assign_n
	mov	eax, edx
	cmp	edx, edx
	je	SHORT $LN40@Assign_n
	push	edi
	npad	4
$LL42@Assign_n:
	mov	edi, DWORD PTR [eax]
	mov	DWORD PTR [esi], edi
	add	eax, 4
	add	esi, 4
	cmp	eax, edx
	jne	SHORT $LL42@Assign_n
	pop	edi
$LN40@Assign_n:
	mov	DWORD PTR [ecx+8], esi
$LN15@Assign_n:

; 1098 : 		insert(begin(), _Count, _Tmp);

	mov	eax, DWORD PTR [ecx+4]
	lea	edx, DWORD PTR __Tmp$[esp]
	push	edx
	mov	edx, DWORD PTR __Count$[esp+4]
	push	edx
	push	eax
	call	?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Insert_n
	pop	esi

; 1099 : 		}

	ret	8
?_Assign_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Assign_n
_TEXT	ENDS
PUBLIC	?_Assign_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Assign_n
; Function compile flags: /Ogtpy
;	COMDAT ?_Assign_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
__Tmp$ = 12						; size = 4
__Val$ = 12						; size = 4
?_Assign_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Assign_n, COMDAT
; _this$ = ecx

; 1096 : 		_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	eax, DWORD PTR __Val$[esp-4]
	mov	edx, DWORD PTR [eax]
	push	esi

; 1097 : 		erase(begin(), end());

	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR __Tmp$[esp], edx
	mov	edx, DWORD PTR [ecx+8]
	cmp	esi, edx
	je	SHORT $LN15@Assign_n@2
	mov	eax, edx
	cmp	edx, edx
	je	SHORT $LN40@Assign_n@2
	push	edi
	npad	4
$LL42@Assign_n@2:
	mov	edi, DWORD PTR [eax]
	mov	DWORD PTR [esi], edi
	add	eax, 4
	add	esi, 4
	cmp	eax, edx
	jne	SHORT $LL42@Assign_n@2
	pop	edi
$LN40@Assign_n@2:
	mov	DWORD PTR [ecx+8], esi
$LN15@Assign_n@2:

; 1098 : 		insert(begin(), _Count, _Tmp);

	mov	eax, DWORD PTR [ecx+4]
	lea	edx, DWORD PTR __Tmp$[esp]
	push	edx
	mov	edx, DWORD PTR __Count$[esp+4]
	push	edx
	push	eax
	call	?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Insert_n
	pop	esi

; 1099 : 		}

	ret	8
?_Assign_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Assign_n
_TEXT	ENDS
PUBLIC	?_Assign_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Assign_n
; Function compile flags: /Ogtpy
;	COMDAT ?_Assign_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
__Tmp$ = 12						; size = 4
__Val$ = 12						; size = 4
?_Assign_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Assign_n, COMDAT
; _this$ = ecx

; 1096 : 		_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	eax, DWORD PTR __Val$[esp-4]
	mov	edx, DWORD PTR [eax]
	push	esi

; 1097 : 		erase(begin(), end());

	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR __Tmp$[esp], edx
	mov	edx, DWORD PTR [ecx+8]
	cmp	esi, edx
	je	SHORT $LN15@Assign_n@3
	mov	eax, edx
	cmp	edx, edx
	je	SHORT $LN40@Assign_n@3
	push	edi
	npad	4
$LL42@Assign_n@3:
	mov	edi, DWORD PTR [eax]
	mov	DWORD PTR [esi], edi
	add	eax, 4
	add	esi, 4
	cmp	eax, edx
	jne	SHORT $LL42@Assign_n@3
	pop	edi
$LN40@Assign_n@3:
	mov	DWORD PTR [ecx+8], esi
$LN15@Assign_n@3:

; 1098 : 		insert(begin(), _Count, _Tmp);

	mov	eax, DWORD PTR [ecx+4]
	lea	edx, DWORD PTR __Tmp$[esp]
	push	edx
	mov	edx, DWORD PTR __Count$[esp+4]
	push	edx
	push	eax
	call	?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Insert_n
	pop	esi

; 1099 : 		}

	ret	8
?_Assign_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Assign_n
_TEXT	ENDS
PUBLIC	?assign@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::assign
; Function compile flags: /Ogtpy
;	COMDAT ?assign@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
__Val$ = 12						; size = 4
?assign@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::assign, COMDAT
; _this$ = ecx

; 871  : 		_Assign_n(_Count, _Val);

	jmp	?_Assign_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Assign_n
?assign@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::assign
_TEXT	ENDS
PUBLIC	?assign@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::assign
; Function compile flags: /Ogtpy
;	COMDAT ?assign@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
__Val$ = 12						; size = 4
?assign@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::assign, COMDAT
; _this$ = ecx

; 871  : 		_Assign_n(_Count, _Val);

	jmp	?_Assign_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Assign_n
?assign@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::assign
_TEXT	ENDS
PUBLIC	?assign@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::assign
; Function compile flags: /Ogtpy
;	COMDAT ?assign@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
__Val$ = 12						; size = 4
?assign@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::assign, COMDAT
; _this$ = ecx

; 871  : 		_Assign_n(_Count, _Val);

	jmp	?_Assign_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Assign_n
?assign@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::assign
_TEXT	ENDS
PUBLIC	?_Init@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXI@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Init
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xhash
;	COMDAT ?_Init@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXI@Z
_TEXT	SEGMENT
$T236205 = -4						; size = 4
__Buckets$ = 8						; size = 4
?_Init@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXI@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Init, COMDAT
; _this$ = ecx

; 829  : 		{	// initialize hash table with _Buckets buckets, leave list alone

	push	ecx
	push	esi
	push	edi

; 830  : 		_Vec.assign(_Buckets + 1, end());

	mov	edi, DWORD PTR __Buckets$[esp+8]
	mov	esi, ecx
	mov	eax, DWORD PTR [esi+8]
	lea	ecx, DWORD PTR $T236205[esp+12]
	push	ecx
	lea	edx, DWORD PTR [edi+1]
	push	edx
	lea	ecx, DWORD PTR [esi+16]
	mov	DWORD PTR $T236205[esp+20], eax
	call	?_Assign_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Assign_n

; 831  : 		_Mask = _Buckets - 1;

	lea	eax, DWORD PTR [edi-1]

; 832  : 		_Maxidx = _Buckets;

	mov	DWORD PTR [esi+36], edi
	pop	edi
	mov	DWORD PTR [esi+32], eax
	pop	esi

; 833  : 		}

	pop	ecx
	ret	4
?_Init@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXI@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Init
_TEXT	ENDS
PUBLIC	?_Init@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXI@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::_Init
; Function compile flags: /Ogtpy
;	COMDAT ?_Init@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXI@Z
_TEXT	SEGMENT
$T236237 = -4						; size = 4
__Buckets$ = 8						; size = 4
?_Init@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXI@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::_Init, COMDAT
; _this$ = ecx

; 829  : 		{	// initialize hash table with _Buckets buckets, leave list alone

	push	ecx
	push	esi
	push	edi

; 830  : 		_Vec.assign(_Buckets + 1, end());

	mov	edi, DWORD PTR __Buckets$[esp+8]
	mov	esi, ecx
	mov	eax, DWORD PTR [esi+8]
	lea	ecx, DWORD PTR $T236237[esp+12]
	push	ecx
	lea	edx, DWORD PTR [edi+1]
	push	edx
	lea	ecx, DWORD PTR [esi+16]
	mov	DWORD PTR $T236237[esp+20], eax
	call	?_Assign_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Assign_n

; 831  : 		_Mask = _Buckets - 1;

	lea	eax, DWORD PTR [edi-1]

; 832  : 		_Maxidx = _Buckets;

	mov	DWORD PTR [esi+36], edi
	pop	edi
	mov	DWORD PTR [esi+32], eax
	pop	esi

; 833  : 		}

	pop	ecx
	ret	4
?_Init@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXI@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::_Init
_TEXT	ENDS
PUBLIC	?_Init@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXI@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Init
; Function compile flags: /Ogtpy
;	COMDAT ?_Init@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXI@Z
_TEXT	SEGMENT
$T236269 = -4						; size = 4
__Buckets$ = 8						; size = 4
?_Init@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXI@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Init, COMDAT
; _this$ = ecx

; 829  : 		{	// initialize hash table with _Buckets buckets, leave list alone

	push	ecx
	push	esi
	push	edi

; 830  : 		_Vec.assign(_Buckets + 1, end());

	mov	edi, DWORD PTR __Buckets$[esp+8]
	mov	esi, ecx
	mov	eax, DWORD PTR [esi+8]
	lea	ecx, DWORD PTR $T236269[esp+12]
	push	ecx
	lea	edx, DWORD PTR [edi+1]
	push	edx
	lea	ecx, DWORD PTR [esi+16]
	mov	DWORD PTR $T236269[esp+20], eax
	call	?_Assign_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Assign_n

; 831  : 		_Mask = _Buckets - 1;

	lea	eax, DWORD PTR [edi-1]

; 832  : 		_Maxidx = _Buckets;

	mov	DWORD PTR [esi+36], edi
	pop	edi
	mov	DWORD PTR [esi+32], eax
	pop	esi

; 833  : 		}

	pop	ecx
	ret	4
?_Init@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXI@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Init
_TEXT	ENDS
PUBLIC	??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@@Z$1
__ehfuncinfo$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xhash
xdata$x	ENDS
;	COMDAT ??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
$T236597 = 8						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >, COMDAT
; _this$ = ecx

; 343  : 		{	// construct empty hash table

	push	-1
	push	__ehhandler$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	mov	eax, DWORD PTR __Parg$[esp+12]
	push	esi
	mov	esi, ecx
	mov	cx, WORD PTR [eax]
	push	edi
	mov	WORD PTR [esi], cx
	lea	edi, DWORD PTR [esi+4]
	mov	ecx, edi
	mov	DWORD PTR _this$[esp+24], esi
	call	?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Buynode
	mov	DWORD PTR [edi+4], eax
	xor	eax, eax
	mov	DWORD PTR [edi+8], eax
	lea	ecx, DWORD PTR [esi+16]
	mov	DWORD PTR __$EHRec$[esp+32], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], eax

; 344  : 		_Init();

	mov	edx, DWORD PTR [esi+8]
	lea	eax, DWORD PTR $T236597[esp+20]
	push	eax
	push	9
	mov	BYTE PTR __$EHRec$[esp+40], 1
	mov	DWORD PTR [esi+40], 1082130432		; 40800000H
	mov	DWORD PTR $T236597[esp+28], edx
	call	?_Assign_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Assign_n

; 345  : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR [esi+32], 7
	mov	DWORD PTR [esi+36], 8
	pop	edi
	mov	eax, esi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::~list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >
__unwindfunclet$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE@XZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::~vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
__ehhandler$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@@Z:
	mov	eax, OFFSET __ehfuncinfo$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >
PUBLIC	?_Reinsert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXXZ ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Reinsert
PUBLIC	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Insert
; Function compile flags: /Ogtpy
;	COMDAT ?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@4@@Z
_TEXT	SEGMENT
tv988 = -4						; size = 4
tv985 = -4						; size = 4
$T237031 = -4						; size = 4
__Bucket$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
tv948 = 12						; size = 4
__Tmp$237467 = 12					; size = 4
$T237008 = 12						; size = 4
$T236621 = 12						; size = 4
__Val$ = 12						; size = 4
__Where$ = 16						; size = 4
?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@4@@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 836  : 		{	// try to insert (possibly existing) node with value _Val

	push	ecx
	push	ebx

; 837  : 		size_type _Bucket = _Hashval(this->_Kfn(_Val));

	mov	ebx, DWORD PTR __Val$[esp+4]
	push	ebp
	push	esi
	push	edi
	push	ebx
	mov	edi, ecx
	call	??R?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@std@@QBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator()
	mov	edx, DWORD PTR [edi+32]
	mov	ecx, edx
	and	ecx, eax
	cmp	DWORD PTR [edi+36], ecx
	ja	SHORT $LN23@Insert@4
	shr	edx, 1
	or	eax, -1
	sub	eax, edx
	add	ecx, eax
$LN23@Insert@4:

; 838  : 		iterator _Plist = _Get_iter_from_vec(_Vec[_Bucket + 1]);

	lea	eax, DWORD PTR [ecx*4]
	mov	ebp, ecx
	mov	ecx, DWORD PTR [edi+20]
	mov	esi, DWORD PTR [eax+ecx+4]
	mov	DWORD PTR tv948[esp+16], eax
	add	eax, ecx
	mov	DWORD PTR __Bucket$[esp+20], ebp

; 839  : 
; 840  : 		for (; _Plist != _Get_iter_from_vec(_Vec[_Bucket]); )

	cmp	esi, DWORD PTR [eax]
	je	SHORT $LN17@Insert@4
$LL18@Insert@4:

; 841  : 			if (this->comp(this->_Kfn(_Val), this->_Kfn(*--_Plist)))

	mov	esi, DWORD PTR [esi+4]
	lea	edx, DWORD PTR [esi+8]
	push	edx
	push	ebx
	call	DWORD PTR __imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
	add	esp, 8
	test	al, al
	jne	SHORT $LN16@Insert@4
	mov	eax, DWORD PTR [edi+20]
	mov	ecx, DWORD PTR tv948[esp+16]
	cmp	esi, DWORD PTR [ecx+eax]
	jne	SHORT $LL18@Insert@4
$LN17@Insert@4:

; 854  : 				}
; 855  : 
; 856  : 		if (_Where != end())

	mov	edx, DWORD PTR __Where$[esp+16]
	cmp	edx, DWORD PTR [edi+8]
	je	SHORT $LN10@Insert@4

; 857  : 			_List.splice(_Plist, _List, _Where);	// move element into place

	cmp	edx, DWORD PTR [edi+8]
	lea	ecx, DWORD PTR [edi+4]
	je	$LN289@Insert@4
	mov	eax, DWORD PTR [edx]
	cmp	ecx, ecx
	jne	SHORT $LN106@Insert@4
	cmp	esi, edx
	je	$LN289@Insert@4
	cmp	esi, eax
	je	$LN289@Insert@4
$LN106@Insert@4:
	push	0
	push	1
	push	eax
	push	edx
	push	ecx
	push	esi
	call	?_Splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@00I_N@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Splice

; 858  : 		else

	mov	edx, DWORD PTR __Where$[esp+16]
	jmp	SHORT $LN289@Insert@4
$LN16@Insert@4:

; 842  : 				;	// still too high in bucket list
; 843  : 			else if (_Multi
; 844  : 				|| this->comp(this->_Kfn(*_Plist), this->_Kfn(_Val)))

	lea	edx, DWORD PTR [esi+8]
	push	ebx
	push	edx
	call	DWORD PTR __imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
	add	esp, 8
	test	al, al
	jne	SHORT $LN14@Insert@4

; 845  : 				{	// found insertion point, back up to it
; 846  : 				++_Plist;

	mov	esi, DWORD PTR [esi]

; 847  : 				break;

	jmp	SHORT $LN17@Insert@4
$LN14@Insert@4:

; 848  : 				}
; 849  : 			else
; 850  : 				{	// discard new list element and return existing
; 851  : 				if (_Where != end())

	mov	eax, DWORD PTR __Where$[esp+16]
	cmp	eax, DWORD PTR [edi+8]
	je	SHORT $LN11@Insert@4

; 852  : 					_List.erase(_Where);

	push	eax
	lea	eax, DWORD PTR $T236621[esp+20]
	push	eax
	lea	ecx, DWORD PTR [edi+4]
	call	?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::erase
$LN11@Insert@4:

; 853  : 				return (_Pairib(_Plist, false));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp+16]
	pop	edi
	mov	DWORD PTR [eax], esi
	pop	esi
	pop	ebp
	mov	BYTE PTR [eax+4], 0
	pop	ebx

; 884  : 		}

	pop	ecx
	ret	12					; 0000000cH
$LN10@Insert@4:

; 859  : 			_Where = _List.insert(_Plist, _Val);	// insert new element

	mov	ecx, DWORD PTR [esi+4]
	push	ebx
	push	ecx
	lea	ebp, DWORD PTR [edi+4]
	push	esi
	mov	ecx, ebp
	call	?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Buynode
	push	1
	mov	ecx, ebp
	mov	ebx, eax
	call	?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEXI@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Incsize
	mov	ebp, DWORD PTR __Bucket$[esp+20]
	mov	DWORD PTR [esi+4], ebx
	mov	edx, DWORD PTR [ebx+4]
	mov	DWORD PTR [edx], ebx
	mov	edx, DWORD PTR [esi+4]
	mov	DWORD PTR __Where$[esp+16], edx
$LN289@Insert@4:

; 860  : 		for (; _Plist == _Get_iter_from_vec(_Vec[_Bucket]); --_Bucket)

	mov	ecx, DWORD PTR [edi+20]
	mov	eax, DWORD PTR tv948[esp+16]
	cmp	esi, DWORD PTR [eax+ecx]
	jne	SHORT $LN290@Insert@4
	jmp	SHORT $LN8@Insert@4
	npad	2
$LL287@Insert@4:
	mov	edx, DWORD PTR __Where$[esp+16]
$LN8@Insert@4:

; 861  : 			{	// update end iterators if new first bucket element
; 862  : 			_Vec[_Bucket] = _Where;

	mov	ecx, DWORD PTR [edi+20]
	mov	DWORD PTR [eax+ecx], edx

; 863  : 			if (_Bucket == 0)

	test	ebp, ebp
	je	SHORT $LN288@Insert@4
	mov	edx, DWORD PTR [edi+20]
	dec	ebp
	lea	eax, DWORD PTR [ebp*4]
	cmp	esi, DWORD PTR [eax+edx]
	je	SHORT $LL287@Insert@4
$LN288@Insert@4:

; 860  : 		for (; _Plist == _Get_iter_from_vec(_Vec[_Bucket]); --_Bucket)

	mov	edx, DWORD PTR __Where$[esp+16]
$LN290@Insert@4:

; 864  : 				break;
; 865  : 			}
; 866  : 
; 867  : 		if (max_load_factor() < load_factor())

	mov	ecx, DWORD PTR [edi+12]
	fild	DWORD PTR [edi+12]
	mov	eax, DWORD PTR [edi+40]
	mov	esi, DWORD PTR [edi+36]
	mov	DWORD PTR $T237008[esp+16], eax
	test	ecx, ecx
	jge	SHORT $LN291@Insert@4
	fadd	DWORD PTR __real@4f800000
$LN291@Insert@4:
	mov	eax, esi
	mov	DWORD PTR tv985[esp+20], eax
	fild	DWORD PTR tv985[esp+20]
	test	eax, eax
	jge	SHORT $LN292@Insert@4
	fadd	DWORD PTR __real@4f800000
$LN292@Insert@4:
	fdivp	ST(1), ST(0)
	fstp	DWORD PTR $T237031[esp+20]
	fld	DWORD PTR $T237008[esp+16]
	fld	DWORD PTR $T237031[esp+20]
	fcompp
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN4@Insert@4

; 868  :  #if _HAS_INCREMENTAL_HASH
; 869  : 			_Grow();	// too dense, need to grow hash table
; 870  : 
; 871  :  #else /* _HAS_INCREMENTAL_HASH */
; 872  : 			{	// rehash to bigger table
; 873  : 			size_type _Maxsize = _Vec.max_size() / 2;
; 874  : 			size_type _Newsize = bucket_count();
; 875  : 
; 876  : 			for (int _Idx = 0; _Idx < 3 && _Newsize < _Maxsize; ++_Idx)

	xor	eax, eax
	npad	7
$LL3@Insert@4:
	cmp	esi, 536870911				; 1fffffffH
	jae	SHORT $LN1@Insert@4
	inc	eax

; 877  : 				_Newsize *= 2;	// multiply safely by 8

	add	esi, esi
	cmp	eax, 3
	jl	SHORT $LL3@Insert@4
$LN1@Insert@4:

; 878  : 			_Init(_Newsize);

	mov	edx, DWORD PTR [edi+8]
	mov	ebx, DWORD PTR [edi+20]
	lea	ecx, DWORD PTR [edi+16]
	mov	DWORD PTR __Tmp$237467[esp+16], edx
	mov	edx, DWORD PTR [ecx+8]
	cmp	ebx, edx
	je	SHORT $LN209@Insert@4
	mov	eax, edx
	cmp	edx, edx
	je	SHORT $LN234@Insert@4
	npad	6
$LL236@Insert@4:
	mov	ebp, DWORD PTR [eax]
	mov	DWORD PTR [ebx], ebp
	add	eax, 4
	add	ebx, 4
	cmp	eax, edx
	jne	SHORT $LL236@Insert@4
$LN234@Insert@4:
	mov	DWORD PTR [ecx+8], ebx
$LN209@Insert@4:
	mov	eax, DWORD PTR [ecx+4]
	lea	edx, DWORD PTR __Tmp$237467[esp+16]
	push	edx
	lea	edx, DWORD PTR [esi+1]
	push	edx
	push	eax
	call	?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Insert_n
	lea	eax, DWORD PTR [esi-1]

; 879  : 			_Reinsert();

	mov	ecx, edi
	mov	DWORD PTR [edi+32], eax
	mov	DWORD PTR [edi+36], esi
	call	?_Reinsert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXXZ ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Reinsert
	mov	edx, DWORD PTR __Where$[esp+16]
$LN4@Insert@4:

; 880  : 			}
; 881  : #endif /* _HAS_INCREMENTAL_HASH */
; 882  : 
; 883  : 		return (_Pairib(_Where, true));	// return iterator for new element

	mov	eax, DWORD PTR ___$ReturnUdt$[esp+16]
	pop	edi
	pop	esi
	pop	ebp
	mov	DWORD PTR [eax], edx
	mov	BYTE PTR [eax+4], 1
	pop	ebx

; 884  : 		}

	pop	ecx
	ret	12					; 0000000cH
?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@4@@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Insert
_TEXT	ENDS
PUBLIC	??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@@Z$1
__ehfuncinfo$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xhash
xdata$x	ENDS
;	COMDAT ??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
$T237857 = 8						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >, COMDAT
; _this$ = ecx

; 343  : 		{	// construct empty hash table

	push	-1
	push	__ehhandler$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	mov	eax, DWORD PTR __Parg$[esp+12]
	push	esi
	mov	esi, ecx
	mov	cx, WORD PTR [eax]
	push	edi
	mov	WORD PTR [esi], cx
	lea	edi, DWORD PTR [esi+4]
	mov	ecx, edi
	mov	DWORD PTR _this$[esp+24], esi
	call	?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Buynode
	mov	DWORD PTR [edi+4], eax
	xor	eax, eax
	mov	DWORD PTR [edi+8], eax
	lea	ecx, DWORD PTR [esi+16]
	mov	DWORD PTR __$EHRec$[esp+32], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], eax

; 344  : 		_Init();

	mov	edx, DWORD PTR [esi+8]
	lea	eax, DWORD PTR $T237857[esp+20]
	push	eax
	push	9
	mov	BYTE PTR __$EHRec$[esp+40], 1
	mov	DWORD PTR [esi+40], 1082130432		; 40800000H
	mov	DWORD PTR $T237857[esp+28], edx
	call	?_Assign_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Assign_n

; 345  : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR [esi+32], 7
	mov	DWORD PTR [esi+36], 8
	pop	edi
	mov	eax, esi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::~list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >
__unwindfunclet$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE@XZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::~vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
__ehhandler$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@@Z:
	mov	eax, OFFSET __ehfuncinfo$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >
PUBLIC	?_Reinsert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXXZ ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::_Reinsert
PUBLIC	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::_Insert
; Function compile flags: /Ogtpy
;	COMDAT ?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@4@@Z
_TEXT	SEGMENT
tv988 = -4						; size = 4
tv985 = -4						; size = 4
$T238290 = -4						; size = 4
__Bucket$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
tv948 = 12						; size = 4
__Tmp$238704 = 12					; size = 4
$T238267 = 12						; size = 4
$T237880 = 12						; size = 4
__Val$ = 12						; size = 4
__Where$ = 16						; size = 4
?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@4@@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 836  : 		{	// try to insert (possibly existing) node with value _Val

	push	ecx
	push	ebx

; 837  : 		size_type _Bucket = _Hashval(this->_Kfn(_Val));

	mov	ebx, DWORD PTR __Val$[esp+4]
	push	ebp
	push	esi
	push	edi
	push	ebx
	mov	edi, ecx
	call	??R?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@std@@QBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator()
	mov	edx, DWORD PTR [edi+32]
	mov	ecx, edx
	and	ecx, eax
	cmp	DWORD PTR [edi+36], ecx
	ja	SHORT $LN23@Insert@5
	shr	edx, 1
	or	eax, -1
	sub	eax, edx
	add	ecx, eax
$LN23@Insert@5:

; 838  : 		iterator _Plist = _Get_iter_from_vec(_Vec[_Bucket + 1]);

	lea	eax, DWORD PTR [ecx*4]
	mov	ebp, ecx
	mov	ecx, DWORD PTR [edi+20]
	mov	esi, DWORD PTR [eax+ecx+4]
	mov	DWORD PTR tv948[esp+16], eax
	add	eax, ecx
	mov	DWORD PTR __Bucket$[esp+20], ebp

; 839  : 
; 840  : 		for (; _Plist != _Get_iter_from_vec(_Vec[_Bucket]); )

	cmp	esi, DWORD PTR [eax]
	je	SHORT $LN17@Insert@5
$LL18@Insert@5:

; 841  : 			if (this->comp(this->_Kfn(_Val), this->_Kfn(*--_Plist)))

	mov	esi, DWORD PTR [esi+4]
	lea	edx, DWORD PTR [esi+8]
	push	edx
	push	ebx
	call	DWORD PTR __imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
	add	esp, 8
	test	al, al
	jne	SHORT $LN16@Insert@5
	mov	eax, DWORD PTR [edi+20]
	mov	ecx, DWORD PTR tv948[esp+16]
	cmp	esi, DWORD PTR [ecx+eax]
	jne	SHORT $LL18@Insert@5
$LN17@Insert@5:

; 854  : 				}
; 855  : 
; 856  : 		if (_Where != end())

	mov	edx, DWORD PTR __Where$[esp+16]
	cmp	edx, DWORD PTR [edi+8]
	je	SHORT $LN10@Insert@5

; 857  : 			_List.splice(_Plist, _List, _Where);	// move element into place

	cmp	edx, DWORD PTR [edi+8]
	lea	ecx, DWORD PTR [edi+4]
	je	$LN289@Insert@5
	mov	eax, DWORD PTR [edx]
	cmp	ecx, ecx
	jne	SHORT $LN106@Insert@5
	cmp	esi, edx
	je	$LN289@Insert@5
	cmp	esi, eax
	je	$LN289@Insert@5
$LN106@Insert@5:
	push	0
	push	1
	push	eax
	push	edx
	push	ecx
	push	esi
	call	?_Splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@00I_N@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Splice

; 858  : 		else

	mov	edx, DWORD PTR __Where$[esp+16]
	jmp	SHORT $LN289@Insert@5
$LN16@Insert@5:

; 842  : 				;	// still too high in bucket list
; 843  : 			else if (_Multi
; 844  : 				|| this->comp(this->_Kfn(*_Plist), this->_Kfn(_Val)))

	lea	edx, DWORD PTR [esi+8]
	push	ebx
	push	edx
	call	DWORD PTR __imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
	add	esp, 8
	test	al, al
	jne	SHORT $LN14@Insert@5

; 845  : 				{	// found insertion point, back up to it
; 846  : 				++_Plist;

	mov	esi, DWORD PTR [esi]

; 847  : 				break;

	jmp	SHORT $LN17@Insert@5
$LN14@Insert@5:

; 848  : 				}
; 849  : 			else
; 850  : 				{	// discard new list element and return existing
; 851  : 				if (_Where != end())

	mov	eax, DWORD PTR __Where$[esp+16]
	cmp	eax, DWORD PTR [edi+8]
	je	SHORT $LN11@Insert@5

; 852  : 					_List.erase(_Where);

	push	eax
	lea	eax, DWORD PTR $T237880[esp+20]
	push	eax
	lea	ecx, DWORD PTR [edi+4]
	call	?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::erase
$LN11@Insert@5:

; 853  : 				return (_Pairib(_Plist, false));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp+16]
	pop	edi
	mov	DWORD PTR [eax], esi
	pop	esi
	pop	ebp
	mov	BYTE PTR [eax+4], 0
	pop	ebx

; 884  : 		}

	pop	ecx
	ret	12					; 0000000cH
$LN10@Insert@5:

; 859  : 			_Where = _List.insert(_Plist, _Val);	// insert new element

	mov	ecx, DWORD PTR [esi+4]
	push	ebx
	push	ecx
	lea	ebp, DWORD PTR [edi+4]
	push	esi
	mov	ecx, ebp
	call	?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Buynode
	push	1
	mov	ecx, ebp
	mov	ebx, eax
	call	?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEXI@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Incsize
	mov	ebp, DWORD PTR __Bucket$[esp+20]
	mov	DWORD PTR [esi+4], ebx
	mov	edx, DWORD PTR [ebx+4]
	mov	DWORD PTR [edx], ebx
	mov	edx, DWORD PTR [esi+4]
	mov	DWORD PTR __Where$[esp+16], edx
$LN289@Insert@5:

; 860  : 		for (; _Plist == _Get_iter_from_vec(_Vec[_Bucket]); --_Bucket)

	mov	ecx, DWORD PTR [edi+20]
	mov	eax, DWORD PTR tv948[esp+16]
	cmp	esi, DWORD PTR [eax+ecx]
	jne	SHORT $LN290@Insert@5
	jmp	SHORT $LN8@Insert@5
	npad	2
$LL287@Insert@5:
	mov	edx, DWORD PTR __Where$[esp+16]
$LN8@Insert@5:

; 861  : 			{	// update end iterators if new first bucket element
; 862  : 			_Vec[_Bucket] = _Where;

	mov	ecx, DWORD PTR [edi+20]
	mov	DWORD PTR [eax+ecx], edx

; 863  : 			if (_Bucket == 0)

	test	ebp, ebp
	je	SHORT $LN288@Insert@5
	mov	edx, DWORD PTR [edi+20]
	dec	ebp
	lea	eax, DWORD PTR [ebp*4]
	cmp	esi, DWORD PTR [eax+edx]
	je	SHORT $LL287@Insert@5
$LN288@Insert@5:

; 860  : 		for (; _Plist == _Get_iter_from_vec(_Vec[_Bucket]); --_Bucket)

	mov	edx, DWORD PTR __Where$[esp+16]
$LN290@Insert@5:

; 864  : 				break;
; 865  : 			}
; 866  : 
; 867  : 		if (max_load_factor() < load_factor())

	mov	ecx, DWORD PTR [edi+12]
	fild	DWORD PTR [edi+12]
	mov	eax, DWORD PTR [edi+40]
	mov	esi, DWORD PTR [edi+36]
	mov	DWORD PTR $T238267[esp+16], eax
	test	ecx, ecx
	jge	SHORT $LN291@Insert@5
	fadd	DWORD PTR __real@4f800000
$LN291@Insert@5:
	mov	eax, esi
	mov	DWORD PTR tv985[esp+20], eax
	fild	DWORD PTR tv985[esp+20]
	test	eax, eax
	jge	SHORT $LN292@Insert@5
	fadd	DWORD PTR __real@4f800000
$LN292@Insert@5:
	fdivp	ST(1), ST(0)
	fstp	DWORD PTR $T238290[esp+20]
	fld	DWORD PTR $T238267[esp+16]
	fld	DWORD PTR $T238290[esp+20]
	fcompp
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN4@Insert@5

; 868  :  #if _HAS_INCREMENTAL_HASH
; 869  : 			_Grow();	// too dense, need to grow hash table
; 870  : 
; 871  :  #else /* _HAS_INCREMENTAL_HASH */
; 872  : 			{	// rehash to bigger table
; 873  : 			size_type _Maxsize = _Vec.max_size() / 2;
; 874  : 			size_type _Newsize = bucket_count();
; 875  : 
; 876  : 			for (int _Idx = 0; _Idx < 3 && _Newsize < _Maxsize; ++_Idx)

	xor	eax, eax
	npad	7
$LL3@Insert@5:
	cmp	esi, 536870911				; 1fffffffH
	jae	SHORT $LN1@Insert@5
	inc	eax

; 877  : 				_Newsize *= 2;	// multiply safely by 8

	add	esi, esi
	cmp	eax, 3
	jl	SHORT $LL3@Insert@5
$LN1@Insert@5:

; 878  : 			_Init(_Newsize);

	mov	edx, DWORD PTR [edi+8]
	mov	ebx, DWORD PTR [edi+20]
	lea	ecx, DWORD PTR [edi+16]
	mov	DWORD PTR __Tmp$238704[esp+16], edx
	mov	edx, DWORD PTR [ecx+8]
	cmp	ebx, edx
	je	SHORT $LN209@Insert@5
	mov	eax, edx
	cmp	edx, edx
	je	SHORT $LN234@Insert@5
	npad	6
$LL236@Insert@5:
	mov	ebp, DWORD PTR [eax]
	mov	DWORD PTR [ebx], ebp
	add	eax, 4
	add	ebx, 4
	cmp	eax, edx
	jne	SHORT $LL236@Insert@5
$LN234@Insert@5:
	mov	DWORD PTR [ecx+8], ebx
$LN209@Insert@5:
	mov	eax, DWORD PTR [ecx+4]
	lea	edx, DWORD PTR __Tmp$238704[esp+16]
	push	edx
	lea	edx, DWORD PTR [esi+1]
	push	edx
	push	eax
	call	?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Insert_n
	lea	eax, DWORD PTR [esi-1]

; 879  : 			_Reinsert();

	mov	ecx, edi
	mov	DWORD PTR [edi+32], eax
	mov	DWORD PTR [edi+36], esi
	call	?_Reinsert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXXZ ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::_Reinsert
	mov	edx, DWORD PTR __Where$[esp+16]
$LN4@Insert@5:

; 880  : 			}
; 881  : #endif /* _HAS_INCREMENTAL_HASH */
; 882  : 
; 883  : 		return (_Pairib(_Where, true));	// return iterator for new element

	mov	eax, DWORD PTR ___$ReturnUdt$[esp+16]
	pop	edi
	pop	esi
	pop	ebp
	mov	DWORD PTR [eax], edx
	mov	BYTE PTR [eax+4], 1
	pop	ebx

; 884  : 		}

	pop	ecx
	ret	12					; 0000000cH
?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@4@@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::_Insert
_TEXT	ENDS
PUBLIC	??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@@Z$1
__ehfuncinfo$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xhash
xdata$x	ENDS
;	COMDAT ??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
$T239116 = 8						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >, COMDAT
; _this$ = ecx

; 343  : 		{	// construct empty hash table

	push	-1
	push	__ehhandler$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	mov	eax, DWORD PTR __Parg$[esp+12]
	push	esi
	mov	esi, ecx
	mov	cx, WORD PTR [eax]
	push	edi
	mov	WORD PTR [esi], cx
	lea	edi, DWORD PTR [esi+4]
	mov	ecx, edi
	mov	DWORD PTR _this$[esp+24], esi
	call	?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Buynode
	mov	DWORD PTR [edi+4], eax
	xor	eax, eax
	mov	DWORD PTR [edi+8], eax
	lea	ecx, DWORD PTR [esi+16]
	mov	DWORD PTR __$EHRec$[esp+32], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], eax

; 344  : 		_Init();

	mov	edx, DWORD PTR [esi+8]
	lea	eax, DWORD PTR $T239116[esp+20]
	push	eax
	push	9
	mov	BYTE PTR __$EHRec$[esp+40], 1
	mov	DWORD PTR [esi+40], 1082130432		; 40800000H
	mov	DWORD PTR $T239116[esp+28], edx
	call	?_Assign_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Assign_n

; 345  : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR [esi+32], 7
	mov	DWORD PTR [esi+36], 8
	pop	edi
	mov	eax, esi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::~list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >
__unwindfunclet$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE@XZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::~vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
__ehhandler$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@@Z:
	mov	eax, OFFSET __ehfuncinfo$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >
PUBLIC	?_Reinsert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXXZ ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Reinsert
PUBLIC	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
; Function compile flags: /Ogtpy
;	COMDAT ?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z
_TEXT	SEGMENT
tv988 = -4						; size = 4
tv985 = -4						; size = 4
$T239549 = -4						; size = 4
__Bucket$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
tv948 = 12						; size = 4
__Tmp$239952 = 12					; size = 4
$T239526 = 12						; size = 4
$T239139 = 12						; size = 4
__Val$ = 12						; size = 4
__Where$ = 16						; size = 4
?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 836  : 		{	// try to insert (possibly existing) node with value _Val

	push	ecx
	push	ebx

; 837  : 		size_type _Bucket = _Hashval(this->_Kfn(_Val));

	mov	ebx, DWORD PTR __Val$[esp+4]
	push	ebp
	push	esi
	push	edi
	push	ebx
	mov	edi, ecx
	call	??R?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@std@@QBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator()
	mov	edx, DWORD PTR [edi+32]
	mov	ecx, edx
	and	ecx, eax
	cmp	DWORD PTR [edi+36], ecx
	ja	SHORT $LN23@Insert@6
	shr	edx, 1
	or	eax, -1
	sub	eax, edx
	add	ecx, eax
$LN23@Insert@6:

; 838  : 		iterator _Plist = _Get_iter_from_vec(_Vec[_Bucket + 1]);

	lea	eax, DWORD PTR [ecx*4]
	mov	ebp, ecx
	mov	ecx, DWORD PTR [edi+20]
	mov	esi, DWORD PTR [eax+ecx+4]
	mov	DWORD PTR tv948[esp+16], eax
	add	eax, ecx
	mov	DWORD PTR __Bucket$[esp+20], ebp

; 839  : 
; 840  : 		for (; _Plist != _Get_iter_from_vec(_Vec[_Bucket]); )

	cmp	esi, DWORD PTR [eax]
	je	SHORT $LN17@Insert@6
$LL18@Insert@6:

; 841  : 			if (this->comp(this->_Kfn(_Val), this->_Kfn(*--_Plist)))

	mov	esi, DWORD PTR [esi+4]
	lea	edx, DWORD PTR [esi+8]
	push	edx
	push	ebx
	call	DWORD PTR __imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
	add	esp, 8
	test	al, al
	jne	SHORT $LN16@Insert@6
	mov	eax, DWORD PTR [edi+20]
	mov	ecx, DWORD PTR tv948[esp+16]
	cmp	esi, DWORD PTR [ecx+eax]
	jne	SHORT $LL18@Insert@6
$LN17@Insert@6:

; 854  : 				}
; 855  : 
; 856  : 		if (_Where != end())

	mov	edx, DWORD PTR __Where$[esp+16]
	cmp	edx, DWORD PTR [edi+8]
	je	SHORT $LN10@Insert@6

; 857  : 			_List.splice(_Plist, _List, _Where);	// move element into place

	cmp	edx, DWORD PTR [edi+8]
	lea	ecx, DWORD PTR [edi+4]
	je	$LN289@Insert@6
	mov	eax, DWORD PTR [edx]
	cmp	ecx, ecx
	jne	SHORT $LN106@Insert@6
	cmp	esi, edx
	je	$LN289@Insert@6
	cmp	esi, eax
	je	$LN289@Insert@6
$LN106@Insert@6:
	push	0
	push	1
	push	eax
	push	edx
	push	ecx
	push	esi
	call	?_Splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@00I_N@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Splice

; 858  : 		else

	mov	edx, DWORD PTR __Where$[esp+16]
	jmp	SHORT $LN289@Insert@6
$LN16@Insert@6:

; 842  : 				;	// still too high in bucket list
; 843  : 			else if (_Multi
; 844  : 				|| this->comp(this->_Kfn(*_Plist), this->_Kfn(_Val)))

	lea	edx, DWORD PTR [esi+8]
	push	ebx
	push	edx
	call	DWORD PTR __imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
	add	esp, 8
	test	al, al
	jne	SHORT $LN14@Insert@6

; 845  : 				{	// found insertion point, back up to it
; 846  : 				++_Plist;

	mov	esi, DWORD PTR [esi]

; 847  : 				break;

	jmp	SHORT $LN17@Insert@6
$LN14@Insert@6:

; 848  : 				}
; 849  : 			else
; 850  : 				{	// discard new list element and return existing
; 851  : 				if (_Where != end())

	mov	eax, DWORD PTR __Where$[esp+16]
	cmp	eax, DWORD PTR [edi+8]
	je	SHORT $LN11@Insert@6

; 852  : 					_List.erase(_Where);

	push	eax
	lea	eax, DWORD PTR $T239139[esp+20]
	push	eax
	lea	ecx, DWORD PTR [edi+4]
	call	?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::erase
$LN11@Insert@6:

; 853  : 				return (_Pairib(_Plist, false));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp+16]
	pop	edi
	mov	DWORD PTR [eax], esi
	pop	esi
	pop	ebp
	mov	BYTE PTR [eax+4], 0
	pop	ebx

; 884  : 		}

	pop	ecx
	ret	12					; 0000000cH
$LN10@Insert@6:

; 859  : 			_Where = _List.insert(_Plist, _Val);	// insert new element

	mov	ecx, DWORD PTR [esi+4]
	push	ebx
	push	ecx
	lea	ebp, DWORD PTR [edi+4]
	push	esi
	mov	ecx, ebp
	call	?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Buynode
	push	1
	mov	ecx, ebp
	mov	ebx, eax
	call	?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEXI@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Incsize
	mov	ebp, DWORD PTR __Bucket$[esp+20]
	mov	DWORD PTR [esi+4], ebx
	mov	edx, DWORD PTR [ebx+4]
	mov	DWORD PTR [edx], ebx
	mov	edx, DWORD PTR [esi+4]
	mov	DWORD PTR __Where$[esp+16], edx
$LN289@Insert@6:

; 860  : 		for (; _Plist == _Get_iter_from_vec(_Vec[_Bucket]); --_Bucket)

	mov	ecx, DWORD PTR [edi+20]
	mov	eax, DWORD PTR tv948[esp+16]
	cmp	esi, DWORD PTR [eax+ecx]
	jne	SHORT $LN290@Insert@6
	jmp	SHORT $LN8@Insert@6
	npad	2
$LL287@Insert@6:
	mov	edx, DWORD PTR __Where$[esp+16]
$LN8@Insert@6:

; 861  : 			{	// update end iterators if new first bucket element
; 862  : 			_Vec[_Bucket] = _Where;

	mov	ecx, DWORD PTR [edi+20]
	mov	DWORD PTR [eax+ecx], edx

; 863  : 			if (_Bucket == 0)

	test	ebp, ebp
	je	SHORT $LN288@Insert@6
	mov	edx, DWORD PTR [edi+20]
	dec	ebp
	lea	eax, DWORD PTR [ebp*4]
	cmp	esi, DWORD PTR [eax+edx]
	je	SHORT $LL287@Insert@6
$LN288@Insert@6:

; 860  : 		for (; _Plist == _Get_iter_from_vec(_Vec[_Bucket]); --_Bucket)

	mov	edx, DWORD PTR __Where$[esp+16]
$LN290@Insert@6:

; 864  : 				break;
; 865  : 			}
; 866  : 
; 867  : 		if (max_load_factor() < load_factor())

	mov	ecx, DWORD PTR [edi+12]
	fild	DWORD PTR [edi+12]
	mov	eax, DWORD PTR [edi+40]
	mov	esi, DWORD PTR [edi+36]
	mov	DWORD PTR $T239526[esp+16], eax
	test	ecx, ecx
	jge	SHORT $LN291@Insert@6
	fadd	DWORD PTR __real@4f800000
$LN291@Insert@6:
	mov	eax, esi
	mov	DWORD PTR tv985[esp+20], eax
	fild	DWORD PTR tv985[esp+20]
	test	eax, eax
	jge	SHORT $LN292@Insert@6
	fadd	DWORD PTR __real@4f800000
$LN292@Insert@6:
	fdivp	ST(1), ST(0)
	fstp	DWORD PTR $T239549[esp+20]
	fld	DWORD PTR $T239526[esp+16]
	fld	DWORD PTR $T239549[esp+20]
	fcompp
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN4@Insert@6

; 868  :  #if _HAS_INCREMENTAL_HASH
; 869  : 			_Grow();	// too dense, need to grow hash table
; 870  : 
; 871  :  #else /* _HAS_INCREMENTAL_HASH */
; 872  : 			{	// rehash to bigger table
; 873  : 			size_type _Maxsize = _Vec.max_size() / 2;
; 874  : 			size_type _Newsize = bucket_count();
; 875  : 
; 876  : 			for (int _Idx = 0; _Idx < 3 && _Newsize < _Maxsize; ++_Idx)

	xor	eax, eax
	npad	7
$LL3@Insert@6:
	cmp	esi, 536870911				; 1fffffffH
	jae	SHORT $LN1@Insert@6
	inc	eax

; 877  : 				_Newsize *= 2;	// multiply safely by 8

	add	esi, esi
	cmp	eax, 3
	jl	SHORT $LL3@Insert@6
$LN1@Insert@6:

; 878  : 			_Init(_Newsize);

	mov	edx, DWORD PTR [edi+8]
	mov	ebx, DWORD PTR [edi+20]
	lea	ecx, DWORD PTR [edi+16]
	mov	DWORD PTR __Tmp$239952[esp+16], edx
	mov	edx, DWORD PTR [ecx+8]
	cmp	ebx, edx
	je	SHORT $LN209@Insert@6
	mov	eax, edx
	cmp	edx, edx
	je	SHORT $LN234@Insert@6
	npad	6
$LL236@Insert@6:
	mov	ebp, DWORD PTR [eax]
	mov	DWORD PTR [ebx], ebp
	add	eax, 4
	add	ebx, 4
	cmp	eax, edx
	jne	SHORT $LL236@Insert@6
$LN234@Insert@6:
	mov	DWORD PTR [ecx+8], ebx
$LN209@Insert@6:
	mov	eax, DWORD PTR [ecx+4]
	lea	edx, DWORD PTR __Tmp$239952[esp+16]
	push	edx
	lea	edx, DWORD PTR [esi+1]
	push	edx
	push	eax
	call	?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Insert_n
	lea	eax, DWORD PTR [esi-1]

; 879  : 			_Reinsert();

	mov	ecx, edi
	mov	DWORD PTR [edi+32], eax
	mov	DWORD PTR [edi+36], esi
	call	?_Reinsert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXXZ ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Reinsert
	mov	edx, DWORD PTR __Where$[esp+16]
$LN4@Insert@6:

; 880  : 			}
; 881  : #endif /* _HAS_INCREMENTAL_HASH */
; 882  : 
; 883  : 		return (_Pairib(_Where, true));	// return iterator for new element

	mov	eax, DWORD PTR ___$ReturnUdt$[esp+16]
	pop	edi
	pop	esi
	pop	ebp
	mov	DWORD PTR [eax], edx
	mov	BYTE PTR [eax+4], 1
	pop	ebx

; 884  : 		}

	pop	ecx
	ret	12					; 0000000cH
?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Reinsert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXXZ
_TEXT	SEGMENT
$T240080 = -8						; size = 8
?_Reinsert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXXZ PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Reinsert, COMDAT
; _this$ = ecx

; 887  : 		{	// insert elements at beginning of list into table

	sub	esp, 8
	push	esi
	mov	esi, ecx

; 888  : 		iterator _First;
; 889  : 		for (; (_First = _List.begin()) != _Get_iter_from_vec(_Vec[0]); )

	mov	eax, DWORD PTR [esi+8]
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [esi+20]
	cmp	eax, DWORD PTR [ecx]
	je	SHORT $LN1@Reinsert
$LL2@Reinsert:

; 890  : 			_Insert(*_First, _First);

	push	eax
	add	eax, 8
	push	eax
	lea	edx, DWORD PTR $T240080[esp+20]
	push	edx
	mov	ecx, esi
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Insert
	mov	eax, DWORD PTR [esi+8]
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [esi+20]
	cmp	eax, DWORD PTR [ecx]
	jne	SHORT $LL2@Reinsert
$LN1@Reinsert:
	pop	esi

; 891  : 		}

	add	esp, 8
	ret	0
?_Reinsert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXXZ ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Reinsert
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Reinsert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXXZ
_TEXT	SEGMENT
$T240148 = -8						; size = 8
?_Reinsert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXXZ PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::_Reinsert, COMDAT
; _this$ = ecx

; 887  : 		{	// insert elements at beginning of list into table

	sub	esp, 8
	push	esi
	mov	esi, ecx

; 888  : 		iterator _First;
; 889  : 		for (; (_First = _List.begin()) != _Get_iter_from_vec(_Vec[0]); )

	mov	eax, DWORD PTR [esi+8]
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [esi+20]
	cmp	eax, DWORD PTR [ecx]
	je	SHORT $LN1@Reinsert@2
$LL2@Reinsert@2:

; 890  : 			_Insert(*_First, _First);

	push	eax
	add	eax, 8
	push	eax
	lea	edx, DWORD PTR $T240148[esp+20]
	push	edx
	mov	ecx, esi
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::_Insert
	mov	eax, DWORD PTR [esi+8]
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [esi+20]
	cmp	eax, DWORD PTR [ecx]
	jne	SHORT $LL2@Reinsert@2
$LN1@Reinsert@2:
	pop	esi

; 891  : 		}

	add	esp, 8
	ret	0
?_Reinsert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXXZ ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::_Reinsert
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_Reinsert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXXZ
_TEXT	SEGMENT
$T240216 = -8						; size = 8
?_Reinsert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXXZ PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Reinsert, COMDAT
; _this$ = ecx

; 887  : 		{	// insert elements at beginning of list into table

	sub	esp, 8
	push	esi
	mov	esi, ecx

; 888  : 		iterator _First;
; 889  : 		for (; (_First = _List.begin()) != _Get_iter_from_vec(_Vec[0]); )

	mov	eax, DWORD PTR [esi+8]
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [esi+20]
	cmp	eax, DWORD PTR [ecx]
	je	SHORT $LN1@Reinsert@3
$LL2@Reinsert@3:

; 890  : 			_Insert(*_First, _First);

	push	eax
	add	eax, 8
	push	eax
	lea	edx, DWORD PTR $T240216[esp+20]
	push	edx
	mov	ecx, esi
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	eax, DWORD PTR [esi+8]
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [esi+20]
	cmp	eax, DWORD PTR [ecx]
	jne	SHORT $LL2@Reinsert@3
$LN1@Reinsert@3:
	pop	esi

; 891  : 		}

	add	esp, 8
	ret	0
?_Reinsert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXXZ ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Reinsert
_TEXT	ENDS
PUBLIC	??0?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@tr1@std@@QAE@XZ ; std::tr1::unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\unordered_map
;	COMDAT ??0?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@tr1@std@@QAE@XZ
_TEXT	SEGMENT
$T240283 = -2						; size = 2
$T240282 = -2						; size = 1
??0?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@tr1@std@@QAE@XZ PROC ; std::tr1::unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >, COMDAT
; _this$ = ecx

; 118  : 		{	// construct empty map from defaults

	push	ecx
	push	esi
	mov	esi, ecx
	lea	eax, DWORD PTR $T240282[esp+8]
	push	eax
	lea	ecx, DWORD PTR $T240283[esp+12]
	push	ecx
	mov	ecx, esi
	call	??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >

; 119  : 		}

	mov	eax, esi
	pop	esi
	pop	ecx
	ret	0
??0?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@tr1@std@@QAE@XZ ENDP ; std::tr1::unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >
_TEXT	ENDS
PUBLIC	?insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::insert
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xhash
;	COMDAT ?insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@4@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Val$ = 12						; size = 4
?insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@4@@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::insert, COMDAT
; _this$ = ecx

; 545  : 		return (_Insert(_Val, end()));

	mov	eax, DWORD PTR [ecx+8]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[esp]
	push	eax
	mov	eax, DWORD PTR __Val$[esp+4]
	push	eax
	push	esi
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Insert
	mov	eax, esi
	pop	esi

; 546  : 		}

	ret	8
?insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@4@@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::insert
_TEXT	ENDS
PUBLIC	??0?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@tr1@std@@QAE@XZ ; std::tr1::unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\unordered_map
;	COMDAT ??0?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@tr1@std@@QAE@XZ
_TEXT	SEGMENT
$T240324 = -2						; size = 2
$T240323 = -2						; size = 1
??0?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@tr1@std@@QAE@XZ PROC ; std::tr1::unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >, COMDAT
; _this$ = ecx

; 118  : 		{	// construct empty map from defaults

	push	ecx
	push	esi
	mov	esi, ecx
	lea	eax, DWORD PTR $T240323[esp+8]
	push	eax
	lea	ecx, DWORD PTR $T240324[esp+12]
	push	ecx
	mov	ecx, esi
	call	??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >

; 119  : 		}

	mov	eax, esi
	pop	esi
	pop	ecx
	ret	0
??0?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@tr1@std@@QAE@XZ ENDP ; std::tr1::unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >
_TEXT	ENDS
PUBLIC	?insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::insert
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xhash
;	COMDAT ?insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@4@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Val$ = 12						; size = 4
?insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@4@@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::insert, COMDAT
; _this$ = ecx

; 545  : 		return (_Insert(_Val, end()));

	mov	eax, DWORD PTR [ecx+8]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[esp]
	push	eax
	mov	eax, DWORD PTR __Val$[esp+4]
	push	eax
	push	esi
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::_Insert
	mov	eax, esi
	pop	esi

; 546  : 		}

	ret	8
?insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@4@@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::insert
_TEXT	ENDS
PUBLIC	??0?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@tr1@std@@QAE@XZ ; std::tr1::unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\unordered_map
;	COMDAT ??0?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@tr1@std@@QAE@XZ
_TEXT	SEGMENT
$T240365 = -2						; size = 2
$T240364 = -2						; size = 1
??0?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@tr1@std@@QAE@XZ PROC ; std::tr1::unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >, COMDAT
; _this$ = ecx

; 118  : 		{	// construct empty map from defaults

	push	ecx
	push	esi
	mov	esi, ecx
	lea	eax, DWORD PTR $T240364[esp+8]
	push	eax
	lea	ecx, DWORD PTR $T240365[esp+12]
	push	ecx
	mov	ecx, esi
	call	??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >

; 119  : 		}

	mov	eax, esi
	pop	esi
	pop	ecx
	ret	0
??0?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@tr1@std@@QAE@XZ ENDP ; std::tr1::unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >
_TEXT	ENDS
PUBLIC	?insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::insert
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xhash
;	COMDAT ?insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Val$ = 12						; size = 4
?insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::insert, COMDAT
; _this$ = ecx

; 545  : 		return (_Insert(_Val, end()));

	mov	eax, DWORD PTR [ecx+8]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[esp]
	push	eax
	mov	eax, DWORD PTR __Val$[esp+4]
	push	eax
	push	esi
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	eax, esi
	pop	esi

; 546  : 		}

	ret	8
?insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::insert
_TEXT	ENDS
PUBLIC	?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z ; CvTypes::AcquireTypes
EXTRN	__imp_?Count@Connection@Database@@QAEHPBD_N@Z:PROC
EXTRN	__imp_??1Results@Database@@UAE@XZ:PROC
EXTRN	?GetInstance@FILogFileMgr@@SAAAV1@XZ:PROC	; FILogFileMgr::GetInstance
EXTRN	__imp_?GetInt@Results@Database@@QAEHH@Z:PROC
EXTRN	__imp_?GetText@Results@Database@@QAEPBDH@Z:PROC
EXTRN	__imp_?Step@Results@Database@@QAE_NXZ:PROC
EXTRN	__imp_?Execute@Connection@Database@@QBE_NAAVResults@2@PBDH@Z:PROC
EXTRN	__imp_??0Results@Database@@QAE@PBD@Z:PROC
EXTRN	_memset:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__ehfuncinfo$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z DD 019930522H
	DD	08fH
	DD	FLAT:__unwindtable$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$5
	DD	03H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$6
	DD	00H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$8
	DD	05H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$9
	DD	00H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$11
	DD	07H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$12
	DD	00H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$14
	DD	09H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$15
	DD	00H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$17
	DD	0bH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$18
	DD	00H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$19
	DD	0dH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$20
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$21
	DD	0fH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$23
	DD	010H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$24
	DD	0fH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$26
	DD	012H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$27
	DD	0fH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$29
	DD	014H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$30
	DD	0fH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$31
	DD	016H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$32
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$33
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$35
	DD	019H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$36
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$38
	DD	01bH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$39
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$41
	DD	01dH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$42
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$44
	DD	01fH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$45
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$47
	DD	021H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$48
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$50
	DD	023H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$51
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$53
	DD	025H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$54
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$56
	DD	027H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$57
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$59
	DD	029H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$60
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$62
	DD	02bH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$63
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$65
	DD	02dH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$66
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$68
	DD	02fH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$69
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$71
	DD	031H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$72
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$74
	DD	033H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$75
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$77
	DD	035H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$78
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$80
	DD	037H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$81
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$83
	DD	039H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$84
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$86
	DD	03bH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$87
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$89
	DD	03dH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$90
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$92
	DD	03fH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$93
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$95
	DD	041H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$96
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$98
	DD	043H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$99
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$101
	DD	045H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$102
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$104
	DD	047H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$105
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$107
	DD	049H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$108
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$110
	DD	04bH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$111
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$113
	DD	04dH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$114
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$116
	DD	04fH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$117
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$119
	DD	051H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$120
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$122
	DD	053H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$123
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$125
	DD	055H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$126
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$128
	DD	057H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$129
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$131
	DD	059H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$132
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$134
	DD	05bH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$135
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$137
	DD	05dH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$138
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$140
	DD	05fH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$141
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$143
	DD	061H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$144
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$146
	DD	063H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$147
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$149
	DD	065H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$150
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$152
	DD	067H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$153
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$155
	DD	069H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$156
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$158
	DD	06bH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$159
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$161
	DD	06dH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$162
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$164
	DD	06fH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$165
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$167
	DD	071H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$168
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$170
	DD	073H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$171
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$173
	DD	075H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$174
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$176
	DD	077H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$177
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$179
	DD	079H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$180
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$182
	DD	07bH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$183
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$185
	DD	07dH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$186
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$188
	DD	07fH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$189
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$191
	DD	081H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$192
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$194
	DD	083H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$195
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$197
	DD	085H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$198
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$200
	DD	087H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$201
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$203
	DD	089H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$204
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$206
	DD	08bH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$207
	DD	018H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$208
	DD	08dH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$209
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\desktop\lekmod files\lekmod dll versions\v29\lekmod_dll\cvgamecoredll_expansion2\cvtypes.cpp
xdata$x	ENDS
;	COMDAT ?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z
_TEXT	SEGMENT
$T242370 = -556						; size = 2
$T242369 = -556						; size = 1
$T241712 = -556						; size = 2
$T241711 = -556						; size = 1
$T240901 = -556						; size = 2
$T240900 = -556						; size = 1
_it$221645 = -556					; size = 4
$T240676 = -556						; size = 8
$T240674 = -556						; size = 4
$T240672 = -556						; size = 8
$T240670 = -556						; size = 4
$T240668 = -556						; size = 8
$T240666 = -556						; size = 4
$T240664 = -556						; size = 8
$T240662 = -556						; size = 4
$T240660 = -556						; size = 8
$T240658 = -556						; size = 4
$T240656 = -556						; size = 8
$T240654 = -556						; size = 4
$T240652 = -556						; size = 8
$T240650 = -556						; size = 4
$T240648 = -556						; size = 8
$T240646 = -556						; size = 4
$T240644 = -556						; size = 8
$T240642 = -556						; size = 4
$T240640 = -556						; size = 8
$T240638 = -556						; size = 4
$T240636 = -556						; size = 8
$T240634 = -556						; size = 4
$T240632 = -556						; size = 8
$T240630 = -556						; size = 4
$T240628 = -556						; size = 8
$T240626 = -556						; size = 4
$T240624 = -556						; size = 8
$T240622 = -556						; size = 4
$T240620 = -556						; size = 8
$T240618 = -556						; size = 4
$T240616 = -556						; size = 8
$T240614 = -556						; size = 4
$T240612 = -556						; size = 8
$T240610 = -556						; size = 4
$T240608 = -556						; size = 8
$T240606 = -556						; size = 4
$T240604 = -556						; size = 8
$T240602 = -556						; size = 4
$T240600 = -556						; size = 8
$T240598 = -556						; size = 4
$T240596 = -556						; size = 8
$T240594 = -556						; size = 4
$T240592 = -556						; size = 8
$T240590 = -556						; size = 4
$T240588 = -556						; size = 8
$T240586 = -556						; size = 4
$T240584 = -556						; size = 8
$T240582 = -556						; size = 4
$T240580 = -556						; size = 8
$T240578 = -556						; size = 4
$T240576 = -556						; size = 8
$T240574 = -556						; size = 4
$T240572 = -556						; size = 8
$T240570 = -556						; size = 4
$T240568 = -556						; size = 8
$T240566 = -556						; size = 4
$T240564 = -556						; size = 8
$T240562 = -556						; size = 4
$T240560 = -556						; size = 8
$T240558 = -556						; size = 4
$T240556 = -556						; size = 8
$T240554 = -556						; size = 4
$T240552 = -556						; size = 8
$T240550 = -556						; size = 4
$T240548 = -556						; size = 8
$T240546 = -556						; size = 4
$T240544 = -556						; size = 8
$T240542 = -556						; size = 4
$T240540 = -556						; size = 8
$T240538 = -556						; size = 4
$T240536 = -556						; size = 8
$T240534 = -556						; size = 4
$T240532 = -556						; size = 8
$T240530 = -556						; size = 4
$T240528 = -556						; size = 8
$T240526 = -556						; size = 4
$T240524 = -556						; size = 8
$T240522 = -556						; size = 4
$T240520 = -556						; size = 8
$T240518 = -556						; size = 4
$T240516 = -556						; size = 8
$T240514 = -556						; size = 4
$T240512 = -556						; size = 8
$T240510 = -556						; size = 4
$T240508 = -556						; size = 8
$T240506 = -556						; size = 4
$T240504 = -556						; size = 8
$T240502 = -556						; size = 4
$T240500 = -556						; size = 8
$T240498 = -556						; size = 4
$T240496 = -556						; size = 8
$T240494 = -556						; size = 4
$T240492 = -556						; size = 8
$T240490 = -556						; size = 4
$T240488 = -556						; size = 8
$T240486 = -556						; size = 4
$T240484 = -556						; size = 8
$T240482 = -556						; size = 4
$T240480 = -556						; size = 8
$T240478 = -556						; size = 4
$T240476 = -556						; size = 8
$T240474 = -556						; size = 4
$T240472 = -556						; size = 8
$T240470 = -556						; size = 4
$T240468 = -556						; size = 8
$T240466 = -556						; size = 4
$T240464 = -556						; size = 8
$T240462 = -556						; size = 4
$T240460 = -556						; size = 8
$T240458 = -556						; size = 4
$T240456 = -556						; size = 8
$T240454 = -556						; size = 4
$T240452 = -556						; size = 8
$T240450 = -556						; size = 4
$T240448 = -556						; size = 8
$T240446 = -556						; size = 4
_it$219963 = -556					; size = 4
$T240442 = -556						; size = 8
$T240440 = -556						; size = 4
$T240438 = -556						; size = 8
$T240436 = -556						; size = 4
$T240434 = -556						; size = 8
$T240432 = -556						; size = 4
_it$218606 = -556					; size = 4
$T240428 = -556						; size = 8
$T240426 = -556						; size = 4
$T240424 = -556						; size = 8
$T240422 = -556						; size = 4
$T240420 = -556						; size = 8
$T240418 = -556						; size = 4
$T240416 = -556						; size = 8
$T240414 = -556						; size = 4
$T240412 = -556						; size = 8
$T240410 = -556						; size = 4
$T240408 = -556						; size = 8
$T240406 = -556						; size = 4
_strMissionType$221644 = -548				; size = 28
$T240673 = -548						; size = 32
$T240669 = -548						; size = 32
$T240665 = -548						; size = 32
$T240661 = -548						; size = 32
$T240657 = -548						; size = 32
$T240653 = -548						; size = 32
$T240649 = -548						; size = 32
$T240645 = -548						; size = 32
$T240641 = -548						; size = 32
$T240637 = -548						; size = 32
$T240633 = -548						; size = 32
$T240629 = -548						; size = 32
$T240625 = -548						; size = 32
$T240621 = -548						; size = 32
$T240617 = -548						; size = 32
$T240613 = -548						; size = 32
$T240609 = -548						; size = 32
$T240605 = -548						; size = 32
$T240601 = -548						; size = 32
$T240597 = -548						; size = 32
$T240593 = -548						; size = 32
$T240589 = -548						; size = 32
$T240585 = -548						; size = 32
$T240581 = -548						; size = 32
$T240577 = -548						; size = 32
$T240573 = -548						; size = 32
$T240569 = -548						; size = 32
$T240565 = -548						; size = 32
$T240561 = -548						; size = 32
$T240557 = -548						; size = 32
$T240553 = -548						; size = 32
$T240549 = -548						; size = 32
$T240545 = -548						; size = 32
$T240541 = -548						; size = 32
$T240537 = -548						; size = 32
$T240533 = -548						; size = 32
$T240529 = -548						; size = 32
$T240525 = -548						; size = 32
$T240521 = -548						; size = 32
$T240517 = -548						; size = 32
$T240513 = -548						; size = 32
$T240509 = -548						; size = 32
$T240505 = -548						; size = 32
$T240501 = -548						; size = 32
$T240497 = -548						; size = 32
$T240493 = -548						; size = 32
$T240489 = -548						; size = 32
$T240485 = -548						; size = 32
$T240481 = -548						; size = 32
$T240477 = -548						; size = 32
$T240473 = -548						; size = 32
$T240469 = -548						; size = 32
$T240465 = -548						; size = 32
$T240461 = -548						; size = 32
$T240457 = -548						; size = 32
$T240453 = -548						; size = 32
$T240449 = -548						; size = 32
$T240445 = -548						; size = 32
_strType$219962 = -548					; size = 28
$T240439 = -548						; size = 32
$T240435 = -548						; size = 32
$T240431 = -548						; size = 32
_strArtifactType$218605 = -548				; size = 28
$T240425 = -548						; size = 32
$T240421 = -548						; size = 32
$T240417 = -548						; size = 32
$T240413 = -548						; size = 32
$T240409 = -548						; size = 32
$T240405 = -548						; size = 32
$T240675 = -516						; size = 32
$T240671 = -516						; size = 32
$T240667 = -516						; size = 32
$T240663 = -516						; size = 32
$T240659 = -516						; size = 32
$T240655 = -516						; size = 32
$T240651 = -516						; size = 32
$T240647 = -516						; size = 32
$T240643 = -516						; size = 32
$T240639 = -516						; size = 32
$T240635 = -516						; size = 32
$T240631 = -516						; size = 32
$T240627 = -516						; size = 32
$T240623 = -516						; size = 32
$T240619 = -516						; size = 32
$T240615 = -516						; size = 32
$T240611 = -516						; size = 32
$T240607 = -516						; size = 32
$T240603 = -516						; size = 32
$T240599 = -516						; size = 32
$T240595 = -516						; size = 32
$T240591 = -516						; size = 32
$T240587 = -516						; size = 32
$T240583 = -516						; size = 32
$T240579 = -516						; size = 32
$T240575 = -516						; size = 32
$T240571 = -516						; size = 32
$T240567 = -516						; size = 32
$T240563 = -516						; size = 32
$T240559 = -516						; size = 32
$T240555 = -516						; size = 32
$T240551 = -516						; size = 32
$T240547 = -516						; size = 32
$T240543 = -516						; size = 32
$T240539 = -516						; size = 32
$T240535 = -516						; size = 32
$T240531 = -516						; size = 32
$T240527 = -516						; size = 32
$T240523 = -516						; size = 32
$T240519 = -516						; size = 32
$T240515 = -516						; size = 32
$T240511 = -516						; size = 32
$T240507 = -516						; size = 32
$T240503 = -516						; size = 32
$T240499 = -516						; size = 32
$T240495 = -516						; size = 32
$T240491 = -516						; size = 32
$T240487 = -516						; size = 32
$T240483 = -516						; size = 32
$T240479 = -516						; size = 32
$T240475 = -516						; size = 32
$T240471 = -516						; size = 32
$T240467 = -516						; size = 32
$T240463 = -516						; size = 32
$T240459 = -516						; size = 32
$T240455 = -516						; size = 32
$T240451 = -516						; size = 32
$T240447 = -516						; size = 32
$T240441 = -516						; size = 32
$T240437 = -516						; size = 32
$T240433 = -516						; size = 32
$T240427 = -516						; size = 32
$T240423 = -516						; size = 32
$T240419 = -516						; size = 32
$T240415 = -516						; size = 32
$T240411 = -516						; size = 32
$T240407 = -516						; size = 32
_kMissionTypesLookupTable$221088 = -484			; size = 44
_kTypeLookupTable$219736 = -440				; size = 44
_kArtifactTypeLookupTable$218361 = -440			; size = 44
_kResults$219956 = -396					; size = 64
_kResults$218599 = -396					; size = 64
_kResults$221638 = -332					; size = 64
_msg$221661 = -268					; size = 256
_msg$219975 = -268					; size = 256
_msg$218618 = -268					; size = 256
__$EHRec$ = -12						; size = 12
_db$ = 8						; size = 4
?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z PROC ; CvTypes::AcquireTypes, COMDAT

; 88   : {

	push	-1
	push	__ehhandler$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 544				; 00000220H
	push	ebx
	push	ebp
	push	esi
	push	edi

; 89   : 
; 90   : 	//ArtifactType
; 91   : 	{
; 92   : 		typedef std::tr1::unordered_map<std::string, GreatWorkArtifactClass*> LookupTable;
; 93   : 		LookupTable kArtifactTypeLookupTable;

	lea	eax, DWORD PTR $T240900[esp+572]
	push	eax
	lea	ecx, DWORD PTR $T240901[esp+576]
	push	ecx
	lea	ecx, DWORD PTR _kArtifactTypeLookupTable$218361[esp+580]
	call	??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >

; 94   : 		kArtifactTypeLookupTable.insert(make_pair(std::string("ARTIFACT_ANCIENT_RUIN"), &s_eARTIFACT_ANCIENT_RUIN));

	push	OFFSET ?s_eARTIFACT_ANCIENT_RUIN@@3W4GreatWorkArtifactClass@@A ; s_eARTIFACT_ANCIENT_RUIN
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240406[esp+604], esp
	push	OFFSET $SG218568
	mov	DWORD PTR __$EHRec$[esp+616], 0
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	edx, DWORD PTR $T240407[esp+604]
	push	edx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkArtifactClass@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240405[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 1
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR [esi+28]
	mov	DWORD PTR $T240405[esp+600], eax
	mov	ecx, DWORD PTR _kArtifactTypeLookupTable$218361[esp+580]
	push	ecx
	lea	edx, DWORD PTR $T240405[esp+576]
	push	edx
	lea	eax, DWORD PTR $T240408[esp+580]
	push	eax
	lea	ecx, DWORD PTR _kArtifactTypeLookupTable$218361[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 2
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240405[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240407[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 0
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 95   : 		kArtifactTypeLookupTable.insert(make_pair(std::string("ARTIFACT_BARBARIAN_CAMP"), &s_eARTIFACT_BARBARIAN_CAMP));

	push	OFFSET ?s_eARTIFACT_BARBARIAN_CAMP@@3W4GreatWorkArtifactClass@@A ; s_eARTIFACT_BARBARIAN_CAMP
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240410[esp+604], esp
	push	OFFSET $SG218574
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T240411[esp+604]
	push	ecx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkArtifactClass@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	mov	bl, 3
	push	esi
	lea	ecx, DWORD PTR $T240409[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], bl
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR [esi+28]
	mov	DWORD PTR $T240409[esp+600], edx
	mov	eax, DWORD PTR _kArtifactTypeLookupTable$218361[esp+580]
	push	eax
	lea	ecx, DWORD PTR $T240409[esp+576]
	push	ecx
	lea	edx, DWORD PTR $T240412[esp+580]
	push	edx
	lea	ecx, DWORD PTR _kArtifactTypeLookupTable$218361[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 4
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240409[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240411[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 0
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 96   : 		kArtifactTypeLookupTable.insert(make_pair(std::string("ARTIFACT_BATTLE_RANGED"), &s_eARTIFACT_BATTLE_RANGED));

	push	OFFSET ?s_eARTIFACT_BATTLE_RANGED@@3W4GreatWorkArtifactClass@@A ; s_eARTIFACT_BATTLE_RANGED
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240414[esp+604], esp
	push	OFFSET $SG218580
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	eax, DWORD PTR $T240415[esp+604]
	push	eax
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkArtifactClass@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	mov	bl, 5
	push	esi
	lea	ecx, DWORD PTR $T240413[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], bl
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR [esi+28]
	mov	DWORD PTR $T240413[esp+600], ecx
	mov	edx, DWORD PTR _kArtifactTypeLookupTable$218361[esp+580]
	push	edx
	lea	eax, DWORD PTR $T240413[esp+576]
	push	eax
	lea	ecx, DWORD PTR $T240416[esp+580]
	push	ecx
	lea	ecx, DWORD PTR _kArtifactTypeLookupTable$218361[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 6
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240413[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240415[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 0
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 97   : 		kArtifactTypeLookupTable.insert(make_pair(std::string("ARTIFACT_BATTLE_MELEE"), &s_eARTIFACT_BATTLE_MELEE));

	push	OFFSET ?s_eARTIFACT_BATTLE_MELEE@@3W4GreatWorkArtifactClass@@A ; s_eARTIFACT_BATTLE_MELEE
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240418[esp+604], esp
	push	OFFSET $SG218586
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	edx, DWORD PTR $T240419[esp+604]
	push	edx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkArtifactClass@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	mov	bl, 7
	push	esi
	lea	ecx, DWORD PTR $T240417[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], bl
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR [esi+28]
	mov	DWORD PTR $T240417[esp+600], eax
	mov	ecx, DWORD PTR _kArtifactTypeLookupTable$218361[esp+580]
	push	ecx
	lea	edx, DWORD PTR $T240417[esp+576]
	push	edx
	lea	eax, DWORD PTR $T240420[esp+580]
	push	eax
	lea	ecx, DWORD PTR _kArtifactTypeLookupTable$218361[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 8
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240417[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240419[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 0
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 98   : 		kArtifactTypeLookupTable.insert(make_pair(std::string("ARTIFACT_RAZED_CITY"), &s_eARTIFACT_RAZED_CITY));

	push	OFFSET ?s_eARTIFACT_RAZED_CITY@@3W4GreatWorkArtifactClass@@A ; s_eARTIFACT_RAZED_CITY
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240422[esp+604], esp
	push	OFFSET $SG218592
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T240423[esp+604]
	push	ecx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkArtifactClass@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	mov	bl, 9
	push	esi
	lea	ecx, DWORD PTR $T240421[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], bl
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR [esi+28]
	mov	DWORD PTR $T240421[esp+600], edx
	mov	eax, DWORD PTR _kArtifactTypeLookupTable$218361[esp+580]
	push	eax
	lea	ecx, DWORD PTR $T240421[esp+576]
	push	ecx
	lea	edx, DWORD PTR $T240424[esp+580]
	push	edx
	lea	ecx, DWORD PTR _kArtifactTypeLookupTable$218361[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 10		; 0000000aH
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240421[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240423[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 0
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 99   : 		kArtifactTypeLookupTable.insert(make_pair(std::string("ARTIFACT_WRITING"), &s_eARTIFACT_WRITING));

	push	OFFSET ?s_eARTIFACT_WRITING@@3W4GreatWorkArtifactClass@@A ; s_eARTIFACT_WRITING
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240426[esp+604], esp
	push	OFFSET $SG218598
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	eax, DWORD PTR $T240427[esp+604]
	push	eax
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkArtifactClass@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	mov	bl, 11					; 0000000bH
	push	esi
	lea	ecx, DWORD PTR $T240425[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], bl
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR [esi+28]
	mov	DWORD PTR $T240425[esp+600], ecx
	mov	edx, DWORD PTR _kArtifactTypeLookupTable$218361[esp+580]
	push	edx
	lea	eax, DWORD PTR $T240425[esp+576]
	push	eax
	lea	ecx, DWORD PTR $T240428[esp+580]
	push	ecx
	lea	ecx, DWORD PTR _kArtifactTypeLookupTable$218361[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 12		; 0000000cH
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240425[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240427[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 0
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 100  : 
; 101  : 		Database::Results kResults;

	mov	edi, DWORD PTR __imp_??0Results@Database@@QAE@PBD@Z
	push	0
	lea	ecx, DWORD PTR _kResults$218599[esp+576]
	call	edi

; 102  : 		if(db.Execute(kResults, "SELECT Type, ID from GreatWorkArtifactClasses"))

	mov	ecx, DWORD PTR _db$[esp+568]
	mov	ebp, DWORD PTR __imp_?Execute@Connection@Database@@QBE_NAAVResults@2@PBDH@Z
	push	-1
	push	OFFSET $SG218601
	lea	edx, DWORD PTR _kResults$218599[esp+580]
	mov	bl, 13					; 0000000dH
	push	edx
	mov	BYTE PTR __$EHRec$[esp+592], bl
	call	ebp
	test	al, al
	je	$LN23@AcquireTyp

; 103  : 		{
; 104  : 			while(kResults.Step())

	lea	ecx, DWORD PTR _kResults$218599[esp+572]
	call	DWORD PTR __imp_?Step@Results@Database@@QAE_NXZ
	test	al, al
	je	$LN23@AcquireTyp
	npad	3
$LL24@AcquireTyp:

; 105  : 			{
; 106  : 				std::string strArtifactType = kResults.GetText(0);

	push	0
	lea	ecx, DWORD PTR _kResults$218599[esp+576]
	call	DWORD PTR __imp_?GetText@Results@Database@@QAEPBDH@Z
	push	eax
	lea	ecx, DWORD PTR _strArtifactType$218605[esp+576]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z

; 107  : 				LookupTable::iterator it = kArtifactTypeLookupTable.find(strArtifactType);

	lea	eax, DWORD PTR _strArtifactType$218605[esp+572]
	push	eax
	lea	ecx, DWORD PTR _it$218606[esp+576]
	push	ecx
	lea	ecx, DWORD PTR _kArtifactTypeLookupTable$218361[esp+580]
	mov	BYTE PTR __$EHRec$[esp+588], 14		; 0000000eH
	call	?lower_bound@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::lower_bound

; 108  : 				if(it != kArtifactTypeLookupTable.end())

	mov	esi, DWORD PTR _it$218606[esp+572]
	cmp	esi, DWORD PTR _kArtifactTypeLookupTable$218361[esp+580]
	je	SHORT $LN22@AcquireTyp

; 109  : 				{
; 110  : 					(*it->second) = static_cast<GreatWorkArtifactClass>(kResults.GetInt(1));

	push	1
	lea	ecx, DWORD PTR _kResults$218599[esp+576]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHH@Z
	mov	edx, DWORD PTR [esi+36]
	mov	DWORD PTR [edx], eax
$LN22@AcquireTyp:

; 111  : 				}
; 112  : 			}

	lea	ecx, DWORD PTR _strArtifactType$218605[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR _kResults$218599[esp+572]
	call	DWORD PTR __imp_?Step@Results@Database@@QAE_NXZ
	test	al, al
	jne	SHORT $LL24@AcquireTyp
$LN23@AcquireTyp:

; 113  : 		}
; 114  : 
; 115  : 		for(LookupTable::iterator it = kArtifactTypeLookupTable.begin(); it != kArtifactTypeLookupTable.end(); ++it)

	mov	eax, DWORD PTR _kArtifactTypeLookupTable$218361[esp+580]
	mov	esi, DWORD PTR [eax]
	cmp	esi, eax
	je	$LN1906@AcquireTyp
	npad	4
$LL393@AcquireTyp:

; 116  : 		{
; 117  : 			if((*it->second) == NO_GREAT_WORK_ARTIFACT_CLASS)

	mov	ecx, DWORD PTR [esi+36]
	xor	ebx, ebx
	cmp	DWORD PTR [ecx], ebx
	jne	SHORT $LN20@AcquireTyp

; 118  : 			{
; 119  : 				char msg[256] = {0};

	push	255					; 000000ffH
	lea	edx, DWORD PTR _msg$218618[esp+577]
	push	ebx
	push	edx
	mov	BYTE PTR _msg$218618[esp+584], bl
	call	_memset
	add	esp, 12					; 0000000cH

; 120  : 				sprintf_s(msg, "ArtifactType - %s is used in the DLL but does not exist in the database.", it->first.c_str());

	lea	ecx, DWORD PTR [esi+8]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	eax, DWORD PTR _msg$218618[esp+576]
	push	OFFSET $SG218624
	push	eax
	call	??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ	; sprintf_s<256>
	add	esp, 12					; 0000000cH

; 121  : 				FILogFile* pLog = LOGFILEMGR.GetLog("Gamecore.log", FILogFile::kDontTimeStamp);

	call	?GetInstance@FILogFileMgr@@SAAAV1@XZ	; FILogFileMgr::GetInstance
	mov	edx, DWORD PTR [eax]
	push	ebx
	push	1
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+12]
	push	OFFSET $SG218626
	call	eax

; 122  : 				pLog->WarningMsg(msg);

	mov	ecx, DWORD PTR [eax]
	lea	edx, DWORD PTR _msg$218618[esp+572]
	push	edx
	push	eax
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	mov	eax, DWORD PTR _kArtifactTypeLookupTable$218361[esp+588]
	add	esp, 8
$LN20@AcquireTyp:
	mov	esi, DWORD PTR [esi]
	cmp	esi, eax
	jne	SHORT $LL393@AcquireTyp

; 113  : 		}
; 114  : 
; 115  : 		for(LookupTable::iterator it = kArtifactTypeLookupTable.begin(); it != kArtifactTypeLookupTable.end(); ++it)

	jmp	SHORT $LN19@AcquireTyp
$LN1906@AcquireTyp:
	xor	ebx, ebx
$LN19@AcquireTyp:

; 123  : 				CvAssertMsg(false, msg);
; 124  : 			}
; 125  : 		}
; 126  : 	}

	lea	ecx, DWORD PTR _kResults$218599[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 0
	call	DWORD PTR __imp_??1Results@Database@@UAE@XZ
	mov	eax, DWORD PTR _kArtifactTypeLookupTable$218361[esp+592]
	mov	DWORD PTR __$EHRec$[esp+580], -1
	cmp	eax, ebx
	je	SHORT $LN437@AcquireTyp
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN437@AcquireTyp:
	mov	eax, DWORD PTR _kArtifactTypeLookupTable$218361[esp+580]
	mov	DWORD PTR _kArtifactTypeLookupTable$218361[esp+592], ebx
	mov	DWORD PTR _kArtifactTypeLookupTable$218361[esp+596], ebx
	mov	DWORD PTR _kArtifactTypeLookupTable$218361[esp+600], ebx
	mov	esi, DWORD PTR [eax]
	mov	DWORD PTR [eax], eax
	mov	eax, DWORD PTR _kArtifactTypeLookupTable$218361[esp+580]
	mov	DWORD PTR [eax+4], eax
	mov	eax, DWORD PTR _kArtifactTypeLookupTable$218361[esp+580]
	mov	DWORD PTR _kArtifactTypeLookupTable$218361[esp+584], ebx
	cmp	esi, eax
	je	SHORT $LN443@AcquireTyp
	npad	1
$LL445@AcquireTyp:
	mov	ebx, DWORD PTR [esi]
	lea	ecx, DWORD PTR [esi+8]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	mov	eax, DWORD PTR _kArtifactTypeLookupTable$218361[esp+584]
	add	esp, 4
	mov	esi, ebx
	cmp	ebx, eax
	jne	SHORT $LL445@AcquireTyp
$LN443@AcquireTyp:
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 127  : 
; 128  : 	//GreatWorkSlots
; 129  : 	{
; 130  : 		typedef std::tr1::unordered_map<std::string, GreatWorkSlotType*> LookupTable;
; 131  : 		LookupTable kTypeLookupTable;

	lea	ecx, DWORD PTR $T241711[esp+572]
	push	ecx
	lea	edx, DWORD PTR $T241712[esp+576]
	push	edx
	lea	ecx, DWORD PTR _kTypeLookupTable$219736[esp+580]
	call	??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >

; 132  : 		kTypeLookupTable.insert(make_pair(std::string("GREAT_WORK_SLOT_ART_ARTIFACT"), &s_eGREAT_WORK_SLOT_ART_ARTIFACT));

	push	OFFSET ?s_eGREAT_WORK_SLOT_ART_ARTIFACT@@3W4GreatWorkSlotType@@A ; s_eGREAT_WORK_SLOT_ART_ARTIFACT
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240432[esp+604], esp
	push	OFFSET $SG219943
	mov	DWORD PTR __$EHRec$[esp+616], 15	; 0000000fH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	eax, DWORD PTR $T240433[esp+604]
	push	eax
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkSlotType@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	mov	bl, 16					; 00000010H
	push	esi
	lea	ecx, DWORD PTR $T240431[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], bl
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR [esi+28]
	mov	DWORD PTR $T240431[esp+600], ecx
	mov	edx, DWORD PTR _kTypeLookupTable$219736[esp+580]
	push	edx
	lea	eax, DWORD PTR $T240431[esp+576]
	push	eax
	lea	ecx, DWORD PTR $T240434[esp+580]
	push	ecx
	lea	ecx, DWORD PTR _kTypeLookupTable$219736[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 17		; 00000011H
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240431[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240433[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 15		; 0000000fH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 133  : 		kTypeLookupTable.insert(make_pair(std::string("GREAT_WORK_SLOT_LITERATURE"), &s_eGREAT_WORK_SLOT_LITERATURE));

	push	OFFSET ?s_eGREAT_WORK_SLOT_LITERATURE@@3W4GreatWorkSlotType@@A ; s_eGREAT_WORK_SLOT_LITERATURE
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240436[esp+604], esp
	push	OFFSET $SG219949
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	edx, DWORD PTR $T240437[esp+604]
	push	edx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkSlotType@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	mov	bl, 18					; 00000012H
	push	esi
	lea	ecx, DWORD PTR $T240435[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], bl
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR [esi+28]
	mov	DWORD PTR $T240435[esp+600], eax
	mov	ecx, DWORD PTR _kTypeLookupTable$219736[esp+580]
	push	ecx
	lea	edx, DWORD PTR $T240435[esp+576]
	push	edx
	lea	eax, DWORD PTR $T240438[esp+580]
	push	eax
	lea	ecx, DWORD PTR _kTypeLookupTable$219736[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 19		; 00000013H
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240435[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240437[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 15		; 0000000fH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 134  : 		kTypeLookupTable.insert(make_pair(std::string("GREAT_WORK_SLOT_MUSIC"), &s_eGREAT_WORK_SLOT_MUSIC));

	push	OFFSET ?s_eGREAT_WORK_SLOT_MUSIC@@3W4GreatWorkSlotType@@A ; s_eGREAT_WORK_SLOT_MUSIC
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240440[esp+604], esp
	push	OFFSET $SG219955
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T240441[esp+604]
	push	ecx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkSlotType@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	mov	bl, 20					; 00000014H
	push	esi
	lea	ecx, DWORD PTR $T240439[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], bl
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR [esi+28]
	mov	DWORD PTR $T240439[esp+600], edx
	mov	eax, DWORD PTR _kTypeLookupTable$219736[esp+580]
	push	eax
	lea	ecx, DWORD PTR $T240439[esp+576]
	push	ecx
	lea	edx, DWORD PTR $T240442[esp+580]
	push	edx
	lea	ecx, DWORD PTR _kTypeLookupTable$219736[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 21		; 00000015H
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240439[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240441[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 15		; 0000000fH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 135  : 
; 136  : 		Database::Results kResults;

	push	0
	lea	ecx, DWORD PTR _kResults$219956[esp+576]
	call	edi

; 137  : 		if(db.Execute(kResults, "SELECT Type, ID from GreatWorkSlots"))

	mov	ecx, DWORD PTR _db$[esp+568]
	push	-1
	push	OFFSET $SG219958
	lea	eax, DWORD PTR _kResults$219956[esp+580]
	mov	bl, 22					; 00000016H
	push	eax
	mov	BYTE PTR __$EHRec$[esp+592], bl
	call	ebp
	test	al, al
	je	$LN15@AcquireTyp

; 138  : 		{
; 139  : 			while(kResults.Step())

	lea	ecx, DWORD PTR _kResults$219956[esp+572]
	call	DWORD PTR __imp_?Step@Results@Database@@QAE_NXZ
	test	al, al
	je	$LN15@AcquireTyp
$LN16@AcquireTyp:

; 140  : 			{
; 141  : 				std::string strType = kResults.GetText(0);

	push	0
	lea	ecx, DWORD PTR _kResults$219956[esp+576]
	call	DWORD PTR __imp_?GetText@Results@Database@@QAEPBDH@Z
	push	eax
	lea	ecx, DWORD PTR _strType$219962[esp+576]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z

; 142  : 				LookupTable::iterator it = kTypeLookupTable.find(strType);

	lea	ecx, DWORD PTR _strType$219962[esp+572]
	push	ecx
	lea	edx, DWORD PTR _it$219963[esp+576]
	push	edx
	lea	ecx, DWORD PTR _kTypeLookupTable$219736[esp+580]
	mov	BYTE PTR __$EHRec$[esp+588], 23		; 00000017H
	call	?lower_bound@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::lower_bound

; 143  : 				if(it != kTypeLookupTable.end())

	mov	esi, DWORD PTR _it$219963[esp+572]
	cmp	esi, DWORD PTR _kTypeLookupTable$219736[esp+580]
	je	SHORT $LN14@AcquireTyp

; 144  : 				{
; 145  : 					(*it->second) = static_cast<GreatWorkSlotType>(kResults.GetInt(1));

	push	1
	lea	ecx, DWORD PTR _kResults$219956[esp+576]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHH@Z
	mov	ecx, DWORD PTR [esi+36]
	mov	DWORD PTR [ecx], eax
$LN14@AcquireTyp:

; 146  : 				}
; 147  : 			}

	lea	ecx, DWORD PTR _strType$219962[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR _kResults$219956[esp+572]
	call	DWORD PTR __imp_?Step@Results@Database@@QAE_NXZ
	test	al, al
	jne	SHORT $LN16@AcquireTyp
$LN15@AcquireTyp:

; 148  : 		}
; 149  : 
; 150  : 		for(LookupTable::iterator it = kTypeLookupTable.begin(); it != kTypeLookupTable.end(); ++it)

	mov	eax, DWORD PTR _kTypeLookupTable$219736[esp+580]
	mov	esi, DWORD PTR [eax]
	cmp	esi, eax
	je	$LN11@AcquireTyp
$LL575@AcquireTyp:

; 151  : 		{
; 152  : 			if((*it->second) == NO_GREAT_WORK_SLOT)

	mov	edx, DWORD PTR [esi+36]
	cmp	DWORD PTR [edx], -1
	jne	SHORT $LN12@AcquireTyp

; 153  : 			{
; 154  : 				char msg[256] = {0};

	push	255					; 000000ffH
	lea	eax, DWORD PTR _msg$219975[esp+577]
	push	0
	push	eax
	mov	BYTE PTR _msg$219975[esp+584], 0
	call	_memset
	add	esp, 12					; 0000000cH

; 155  : 				sprintf_s(msg, "GreatWorkSlotType - %s is used in the DLL but does not exist in the database.", it->first.c_str());

	lea	ecx, DWORD PTR [esi+8]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _msg$219975[esp+576]
	push	OFFSET $SG219976
	push	ecx
	call	??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ	; sprintf_s<256>
	add	esp, 12					; 0000000cH

; 156  : 				FILogFile* pLog = LOGFILEMGR.GetLog("Gamecore.log", FILogFile::kDontTimeStamp);

	call	?GetInstance@FILogFileMgr@@SAAAV1@XZ	; FILogFileMgr::GetInstance
	mov	edx, DWORD PTR [eax]
	push	0
	push	1
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+12]
	push	OFFSET $SG219978
	call	eax

; 157  : 				pLog->WarningMsg(msg);

	mov	ecx, DWORD PTR [eax]
	lea	edx, DWORD PTR _msg$219975[esp+572]
	push	edx
	push	eax
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	mov	eax, DWORD PTR _kTypeLookupTable$219736[esp+588]
	add	esp, 8
$LN12@AcquireTyp:
	mov	esi, DWORD PTR [esi]
	cmp	esi, eax
	jne	SHORT $LL575@AcquireTyp
$LN11@AcquireTyp:

; 158  : 				CvAssertMsg(false, msg);
; 159  : 			}
; 160  : 		}
; 161  : 	}

	lea	ecx, DWORD PTR _kResults$219956[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 15		; 0000000fH
	call	DWORD PTR __imp_??1Results@Database@@UAE@XZ
	mov	eax, DWORD PTR _kTypeLookupTable$219736[esp+592]
	xor	ebx, ebx
	mov	DWORD PTR __$EHRec$[esp+580], -1
	cmp	eax, ebx
	je	SHORT $LN619@AcquireTyp
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN619@AcquireTyp:
	mov	eax, DWORD PTR _kTypeLookupTable$219736[esp+580]
	mov	DWORD PTR _kTypeLookupTable$219736[esp+592], ebx
	mov	DWORD PTR _kTypeLookupTable$219736[esp+596], ebx
	mov	DWORD PTR _kTypeLookupTable$219736[esp+600], ebx
	mov	esi, DWORD PTR [eax]
	mov	DWORD PTR [eax], eax
	mov	eax, DWORD PTR _kTypeLookupTable$219736[esp+580]
	mov	DWORD PTR [eax+4], eax
	mov	eax, DWORD PTR _kTypeLookupTable$219736[esp+580]
	mov	DWORD PTR _kTypeLookupTable$219736[esp+584], ebx
	cmp	esi, eax
	je	SHORT $LN625@AcquireTyp
$LL627@AcquireTyp:
	mov	ebx, DWORD PTR [esi]
	lea	ecx, DWORD PTR [esi+8]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	mov	eax, DWORD PTR _kTypeLookupTable$219736[esp+584]
	add	esp, 4
	mov	esi, ebx
	cmp	ebx, eax
	jne	SHORT $LL627@AcquireTyp
$LN625@AcquireTyp:
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 162  : 
; 163  : 	//MissionTypes
; 164  : 	{
; 165  : 		typedef std::tr1::unordered_map<std::string, MissionTypes*> LookupTable;
; 166  : 		LookupTable kMissionTypesLookupTable;

	lea	ecx, DWORD PTR $T242369[esp+572]
	push	ecx
	lea	edx, DWORD PTR $T242370[esp+576]
	push	edx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	call	??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >

; 167  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_MOVE_TO"), &s_eMISSION_MOVE_TO));

	push	OFFSET ?s_eMISSION_MOVE_TO@@3W4MissionTypes@@A ; s_eMISSION_MOVE_TO
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240446[esp+604], esp
	mov	ebx, 24					; 00000018H
	push	OFFSET $SG221295
	mov	DWORD PTR __$EHRec$[esp+616], ebx
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	eax, DWORD PTR $T240447[esp+604]
	push	eax
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240445[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 25		; 00000019H
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR [esi+28]
	mov	DWORD PTR $T240445[esp+600], ecx
	mov	edx, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	edx
	lea	eax, DWORD PTR $T240445[esp+576]
	push	eax
	lea	ecx, DWORD PTR $T240448[esp+580]
	push	ecx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 26		; 0000001aH
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240445[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 25		; 00000019H
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240447[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 168  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_ROUTE_TO"), &s_eMISSION_ROUTE_TO));

	push	OFFSET ?s_eMISSION_ROUTE_TO@@3W4MissionTypes@@A ; s_eMISSION_ROUTE_TO
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240450[esp+604], esp
	push	OFFSET $SG221301
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	edx, DWORD PTR $T240451[esp+604]
	push	edx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240449[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 27		; 0000001bH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR [esi+28]
	mov	DWORD PTR $T240449[esp+600], eax
	mov	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	ecx
	lea	edx, DWORD PTR $T240449[esp+576]
	push	edx
	lea	eax, DWORD PTR $T240452[esp+580]
	push	eax
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 28		; 0000001cH
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240449[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 27		; 0000001bH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240451[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 169  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_MOVE_TO_UNIT"), &s_eMISSION_MOVE_TO_UNIT));

	push	OFFSET ?s_eMISSION_MOVE_TO_UNIT@@3W4MissionTypes@@A ; s_eMISSION_MOVE_TO_UNIT
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240454[esp+604], esp
	push	OFFSET $SG221307
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T240455[esp+604]
	push	ecx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240453[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 29		; 0000001dH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR [esi+28]
	mov	DWORD PTR $T240453[esp+600], edx
	mov	eax, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	eax
	lea	ecx, DWORD PTR $T240453[esp+576]
	push	ecx
	lea	edx, DWORD PTR $T240456[esp+580]
	push	edx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 30		; 0000001eH
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240453[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 29		; 0000001dH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240455[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 170  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_SWAP_UNITS"), &s_eMISSION_SWAP_UNITS));

	push	OFFSET ?s_eMISSION_SWAP_UNITS@@3W4MissionTypes@@A ; s_eMISSION_SWAP_UNITS
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240458[esp+604], esp
	push	OFFSET $SG221313
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	eax, DWORD PTR $T240459[esp+604]
	push	eax
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240457[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 31		; 0000001fH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR [esi+28]
	mov	DWORD PTR $T240457[esp+600], ecx
	mov	edx, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	edx
	lea	eax, DWORD PTR $T240457[esp+576]
	push	eax
	lea	ecx, DWORD PTR $T240460[esp+580]
	push	ecx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 32		; 00000020H
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240457[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 31		; 0000001fH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240459[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 171  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_SKIP"), &s_eMISSION_SKIP));

	push	OFFSET ?s_eMISSION_SKIP@@3W4MissionTypes@@A ; s_eMISSION_SKIP
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240462[esp+604], esp
	push	OFFSET $SG221319
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	edx, DWORD PTR $T240463[esp+604]
	push	edx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	mov	BYTE PTR __$EHRec$[esp+580], 33		; 00000021H
	push	esi
	lea	ecx, DWORD PTR $T240461[esp+576]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR [esi+28]
	mov	DWORD PTR $T240461[esp+600], eax
	mov	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	ecx
	lea	edx, DWORD PTR $T240461[esp+576]
	push	edx
	lea	eax, DWORD PTR $T240464[esp+580]
	push	eax
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 34		; 00000022H
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240461[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 33		; 00000021H
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240463[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 172  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_SLEEP"), &s_eMISSION_SLEEP));

	push	OFFSET ?s_eMISSION_SLEEP@@3W4MissionTypes@@A ; s_eMISSION_SLEEP
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240466[esp+604], esp
	push	OFFSET $SG221325
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T240467[esp+604]
	push	ecx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240465[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 35		; 00000023H
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR [esi+28]
	mov	DWORD PTR $T240465[esp+600], edx
	mov	eax, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	eax
	lea	ecx, DWORD PTR $T240465[esp+576]
	push	ecx
	lea	edx, DWORD PTR $T240468[esp+580]
	push	edx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 36		; 00000024H
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240465[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 35		; 00000023H
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240467[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 173  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_ALERT"), &s_eMISSION_ALERT));

	push	OFFSET ?s_eMISSION_ALERT@@3W4MissionTypes@@A ; s_eMISSION_ALERT
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240470[esp+604], esp
	push	OFFSET $SG221331
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	eax, DWORD PTR $T240471[esp+604]
	push	eax
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240469[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 37		; 00000025H
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR [esi+28]
	mov	DWORD PTR $T240469[esp+600], ecx
	mov	edx, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	edx
	lea	eax, DWORD PTR $T240469[esp+576]
	lea	ecx, DWORD PTR $T240472[esp+576]
	push	eax
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+592], 38		; 00000026H
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240469[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 37		; 00000025H
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240471[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 174  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_FORTIFY"), &s_eMISSION_FORTIFY));

	push	OFFSET ?s_eMISSION_FORTIFY@@3W4MissionTypes@@A ; s_eMISSION_FORTIFY
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240474[esp+604], esp
	push	OFFSET $SG221337
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	edx, DWORD PTR $T240475[esp+604]
	push	edx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240473[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 39		; 00000027H
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR [esi+28]
	mov	DWORD PTR $T240473[esp+600], eax
	mov	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	ecx
	lea	edx, DWORD PTR $T240473[esp+576]
	push	edx
	lea	eax, DWORD PTR $T240476[esp+580]
	push	eax
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 40		; 00000028H
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240473[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 39		; 00000027H
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240475[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 175  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_GARRISON"), &s_eMISSION_GARRISON));

	push	OFFSET ?s_eMISSION_GARRISON@@3W4MissionTypes@@A ; s_eMISSION_GARRISON
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240478[esp+604], esp
	push	OFFSET $SG221343
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T240479[esp+604]
	push	ecx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240477[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 41		; 00000029H
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR [esi+28]
	mov	DWORD PTR $T240477[esp+600], edx
	mov	eax, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	eax
	lea	ecx, DWORD PTR $T240477[esp+576]
	push	ecx
	lea	edx, DWORD PTR $T240480[esp+580]
	push	edx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 42		; 0000002aH
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240477[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 41		; 00000029H
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240479[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 176  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_SET_UP_FOR_RANGED_ATTACK"), &s_eMISSION_SET_UP_FOR_RANGED_ATTACK));

	push	OFFSET ?s_eMISSION_SET_UP_FOR_RANGED_ATTACK@@3W4MissionTypes@@A ; s_eMISSION_SET_UP_FOR_RANGED_ATTACK
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240482[esp+604], esp
	push	OFFSET $SG221349
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	eax, DWORD PTR $T240483[esp+604]
	push	eax
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240481[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 43		; 0000002bH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR [esi+28]
	mov	DWORD PTR $T240481[esp+600], ecx
	mov	edx, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	edx
	lea	eax, DWORD PTR $T240481[esp+576]
	push	eax
	lea	ecx, DWORD PTR $T240484[esp+580]
	push	ecx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 44		; 0000002cH
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240481[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 43		; 0000002bH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240483[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 177  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_EMBARK"), &s_eMISSION_EMBARK));

	push	OFFSET ?s_eMISSION_EMBARK@@3W4MissionTypes@@A ; s_eMISSION_EMBARK
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240486[esp+604], esp
	push	OFFSET $SG221355
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	edx, DWORD PTR $T240487[esp+604]
	push	edx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240485[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 45		; 0000002dH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR [esi+28]
	mov	DWORD PTR $T240485[esp+600], eax
	mov	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	ecx
	lea	edx, DWORD PTR $T240485[esp+576]
	push	edx
	lea	eax, DWORD PTR $T240488[esp+580]
	push	eax
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 46		; 0000002eH
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240485[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 45		; 0000002dH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240487[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 178  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_DISEMBARK"), &s_eMISSION_DISEMBARK));

	push	OFFSET ?s_eMISSION_DISEMBARK@@3W4MissionTypes@@A ; s_eMISSION_DISEMBARK
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240490[esp+604], esp
	push	OFFSET $SG221361
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T240491[esp+604]
	push	ecx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240489[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 47		; 0000002fH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR [esi+28]
	mov	DWORD PTR $T240489[esp+600], edx
	mov	eax, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	eax
	lea	ecx, DWORD PTR $T240489[esp+576]
	push	ecx
	lea	edx, DWORD PTR $T240492[esp+580]
	push	edx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 48		; 00000030H
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240489[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 47		; 0000002fH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240491[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 179  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_AIRPATROL"), &s_eMISSION_AIRPATROL));

	push	OFFSET ?s_eMISSION_AIRPATROL@@3W4MissionTypes@@A ; s_eMISSION_AIRPATROL
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240494[esp+604], esp
	push	OFFSET $SG221367
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	eax, DWORD PTR $T240495[esp+604]
	push	eax
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240493[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 49		; 00000031H
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR [esi+28]
	mov	DWORD PTR $T240493[esp+600], ecx
	mov	edx, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	edx
	lea	eax, DWORD PTR $T240493[esp+576]
	push	eax
	lea	ecx, DWORD PTR $T240496[esp+580]
	push	ecx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 50		; 00000032H
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240493[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 49		; 00000031H
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240495[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 180  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_HEAL"), &s_eMISSION_HEAL));

	push	OFFSET ?s_eMISSION_HEAL@@3W4MissionTypes@@A ; s_eMISSION_HEAL
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240498[esp+604], esp
	push	OFFSET $SG221373
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	edx, DWORD PTR $T240499[esp+604]
	push	edx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240497[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 51		; 00000033H
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR [esi+28]
	mov	DWORD PTR $T240497[esp+600], eax
	mov	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	ecx
	lea	edx, DWORD PTR $T240497[esp+576]
	push	edx
	lea	eax, DWORD PTR $T240500[esp+580]
	push	eax
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 52		; 00000034H
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240497[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 51		; 00000033H
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[esp+580], bl
	lea	ecx, DWORD PTR $T240499[esp+572]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 181  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_AIRLIFT"), &s_eMISSION_AIRLIFT));

	push	OFFSET ?s_eMISSION_AIRLIFT@@3W4MissionTypes@@A ; s_eMISSION_AIRLIFT
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240502[esp+604], esp
	push	OFFSET $SG221379
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T240503[esp+604]
	push	ecx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240501[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 53		; 00000035H
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR [esi+28]
	mov	DWORD PTR $T240501[esp+600], edx
	mov	eax, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	eax
	lea	ecx, DWORD PTR $T240501[esp+576]
	push	ecx
	lea	edx, DWORD PTR $T240504[esp+580]
	push	edx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 54		; 00000036H
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240501[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 53		; 00000035H
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240503[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 182  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_NUKE"), &s_eMISSION_NUKE));

	push	OFFSET ?s_eMISSION_NUKE@@3W4MissionTypes@@A ; s_eMISSION_NUKE
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240506[esp+604], esp
	push	OFFSET $SG221385
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	eax, DWORD PTR $T240507[esp+604]
	push	eax
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240505[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 55		; 00000037H
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR [esi+28]
	mov	DWORD PTR $T240505[esp+600], ecx
	mov	edx, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	edx
	lea	eax, DWORD PTR $T240505[esp+576]
	push	eax
	lea	ecx, DWORD PTR $T240508[esp+580]
	push	ecx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 56		; 00000038H
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240505[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 55		; 00000037H
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240507[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 183  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_PARADROP"), &s_eMISSION_PARADROP));

	push	OFFSET ?s_eMISSION_PARADROP@@3W4MissionTypes@@A ; s_eMISSION_PARADROP
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240510[esp+604], esp
	push	OFFSET $SG221391
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	edx, DWORD PTR $T240511[esp+604]
	push	edx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240509[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 57		; 00000039H
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR [esi+28]
	mov	DWORD PTR $T240509[esp+600], eax
	mov	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	ecx
	lea	edx, DWORD PTR $T240509[esp+576]
	push	edx
	lea	eax, DWORD PTR $T240512[esp+580]
	push	eax
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 58		; 0000003aH
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240509[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 57		; 00000039H
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240511[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 184  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_AIR_SWEEP"), &s_eMISSION_AIR_SWEEP));

	push	OFFSET ?s_eMISSION_AIR_SWEEP@@3W4MissionTypes@@A ; s_eMISSION_AIR_SWEEP
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240514[esp+604], esp
	push	OFFSET $SG221397
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T240515[esp+604]
	push	ecx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240513[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 59		; 0000003bH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR [esi+28]
	mov	DWORD PTR $T240513[esp+600], edx
	mov	eax, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	eax
	lea	ecx, DWORD PTR $T240513[esp+576]
	push	ecx
	lea	edx, DWORD PTR $T240516[esp+580]
	push	edx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 60		; 0000003cH
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240513[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 59		; 0000003bH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240515[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 185  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_REBASE"), &s_eMISSION_REBASE));

	push	OFFSET ?s_eMISSION_REBASE@@3W4MissionTypes@@A ; s_eMISSION_REBASE
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240518[esp+604], esp
	push	OFFSET $SG221403
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	eax, DWORD PTR $T240519[esp+604]
	push	eax
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240517[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 61		; 0000003dH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR [esi+28]
	mov	DWORD PTR $T240517[esp+600], ecx
	mov	edx, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	edx
	lea	eax, DWORD PTR $T240517[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 62		; 0000003eH
	push	eax
	lea	ecx, DWORD PTR $T240520[esp+580]
	push	ecx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240517[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 61		; 0000003dH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240519[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 186  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_RANGE_ATTACK"), &s_eMISSION_RANGE_ATTACK));

	push	OFFSET ?s_eMISSION_RANGE_ATTACK@@3W4MissionTypes@@A ; s_eMISSION_RANGE_ATTACK
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240522[esp+604], esp
	push	OFFSET $SG221409
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	edx, DWORD PTR $T240523[esp+604]
	push	edx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240521[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 63		; 0000003fH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR [esi+28]
	mov	DWORD PTR $T240521[esp+600], eax
	mov	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	ecx
	lea	edx, DWORD PTR $T240521[esp+576]
	push	edx
	lea	eax, DWORD PTR $T240524[esp+580]
	push	eax
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 64		; 00000040H
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240521[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 63		; 0000003fH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240523[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 187  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_PILLAGE"), &s_eMISSION_PILLAGE));

	push	OFFSET ?s_eMISSION_PILLAGE@@3W4MissionTypes@@A ; s_eMISSION_PILLAGE
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240526[esp+604], esp
	push	OFFSET $SG221415
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T240527[esp+604]
	push	ecx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240525[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 65		; 00000041H
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR [esi+28]
	mov	DWORD PTR $T240525[esp+600], edx
	mov	eax, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	eax
	lea	ecx, DWORD PTR $T240525[esp+576]
	push	ecx
	lea	edx, DWORD PTR $T240528[esp+580]
	push	edx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 66		; 00000042H
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240525[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 65		; 00000041H
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240527[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 188  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_FOUND"), &s_eMISSION_FOUND));

	push	OFFSET ?s_eMISSION_FOUND@@3W4MissionTypes@@A ; s_eMISSION_FOUND
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240530[esp+604], esp
	push	OFFSET $SG221421
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	eax, DWORD PTR $T240531[esp+604]
	push	eax
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240529[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 67		; 00000043H
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR [esi+28]
	mov	DWORD PTR $T240529[esp+600], ecx
	mov	edx, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	edx
	lea	eax, DWORD PTR $T240529[esp+576]
	push	eax
	lea	ecx, DWORD PTR $T240532[esp+580]
	push	ecx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 68		; 00000044H
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240529[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 67		; 00000043H
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240531[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 189  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_JOIN"), &s_eMISSION_JOIN));

	push	OFFSET ?s_eMISSION_JOIN@@3W4MissionTypes@@A ; s_eMISSION_JOIN
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240534[esp+604], esp
	push	OFFSET $SG221427
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	edx, DWORD PTR $T240535[esp+604]
	push	edx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240533[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 69		; 00000045H
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR [esi+28]
	mov	DWORD PTR $T240533[esp+600], eax
	mov	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	ecx
	lea	edx, DWORD PTR $T240533[esp+576]
	push	edx
	lea	eax, DWORD PTR $T240536[esp+580]
	push	eax
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 70		; 00000046H
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240533[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 69		; 00000045H
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240535[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 190  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_CONSTRUCT"), &s_eMISSION_CONSTRUCT));

	push	OFFSET ?s_eMISSION_CONSTRUCT@@3W4MissionTypes@@A ; s_eMISSION_CONSTRUCT
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240538[esp+604], esp
	push	OFFSET $SG221433
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T240539[esp+604]
	push	ecx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240537[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 71		; 00000047H
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR [esi+28]
	mov	DWORD PTR $T240537[esp+600], edx
	mov	eax, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	eax
	lea	ecx, DWORD PTR $T240537[esp+576]
	push	ecx
	lea	edx, DWORD PTR $T240540[esp+580]
	push	edx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 72		; 00000048H
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240537[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 71		; 00000047H
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240539[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 191  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_DISCOVER"), &s_eMISSION_DISCOVER));

	push	OFFSET ?s_eMISSION_DISCOVER@@3W4MissionTypes@@A ; s_eMISSION_DISCOVER
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240542[esp+604], esp
	push	OFFSET $SG221439
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	eax, DWORD PTR $T240543[esp+604]
	push	eax
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240541[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 73		; 00000049H
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR [esi+28]
	mov	DWORD PTR $T240541[esp+600], ecx
	mov	edx, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	edx
	lea	eax, DWORD PTR $T240541[esp+576]
	push	eax
	lea	ecx, DWORD PTR $T240544[esp+580]
	push	ecx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 74		; 0000004aH
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240541[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 73		; 00000049H
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240543[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 192  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_HURRY"), &s_eMISSION_HURRY));

	push	OFFSET ?s_eMISSION_HURRY@@3W4MissionTypes@@A ; s_eMISSION_HURRY
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240546[esp+604], esp
	push	OFFSET $SG221445
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	edx, DWORD PTR $T240547[esp+604]
	push	edx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240545[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 75		; 0000004bH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR [esi+28]
	mov	DWORD PTR $T240545[esp+600], eax
	mov	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	ecx
	lea	edx, DWORD PTR $T240545[esp+576]
	push	edx
	lea	eax, DWORD PTR $T240548[esp+580]
	push	eax
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 76		; 0000004cH
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[esp+580], 75		; 0000004bH
	lea	ecx, DWORD PTR $T240545[esp+572]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240547[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 193  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_TRADE"), &s_eMISSION_TRADE));

	push	OFFSET ?s_eMISSION_TRADE@@3W4MissionTypes@@A ; s_eMISSION_TRADE
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240550[esp+604], esp
	push	OFFSET $SG221451
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T240551[esp+604]
	push	ecx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240549[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 77		; 0000004dH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR [esi+28]
	mov	DWORD PTR $T240549[esp+600], edx
	mov	eax, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	eax
	lea	ecx, DWORD PTR $T240549[esp+576]
	push	ecx
	lea	edx, DWORD PTR $T240552[esp+580]
	push	edx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 78		; 0000004eH
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240549[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 77		; 0000004dH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240551[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 194  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_BUY_CITY_STATE"), &s_eMISSION_BUY_CITY_STATE));

	push	OFFSET ?s_eMISSION_BUY_CITY_STATE@@3W4MissionTypes@@A ; s_eMISSION_BUY_CITY_STATE
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240554[esp+604], esp
	push	OFFSET $SG221457
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	eax, DWORD PTR $T240555[esp+604]
	push	eax
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240553[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 79		; 0000004fH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR [esi+28]
	mov	DWORD PTR $T240553[esp+600], ecx
	mov	edx, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	edx
	lea	eax, DWORD PTR $T240553[esp+576]
	push	eax
	lea	ecx, DWORD PTR $T240556[esp+580]
	push	ecx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 80		; 00000050H
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240553[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 79		; 0000004fH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240555[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 195  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_REPAIR_FLEET"), &s_eMISSION_REPAIR_FLEET));

	push	OFFSET ?s_eMISSION_REPAIR_FLEET@@3W4MissionTypes@@A ; s_eMISSION_REPAIR_FLEET
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240558[esp+604], esp
	push	OFFSET $SG221463
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	edx, DWORD PTR $T240559[esp+604]
	push	edx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240557[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 81		; 00000051H
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR [esi+28]
	mov	DWORD PTR $T240557[esp+600], eax
	mov	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	ecx
	lea	edx, DWORD PTR $T240557[esp+576]
	push	edx
	lea	eax, DWORD PTR $T240560[esp+580]
	push	eax
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 82		; 00000052H
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240557[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 81		; 00000051H
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240559[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 196  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_SPACESHIP"), &s_eMISSION_SPACESHIP));

	push	OFFSET ?s_eMISSION_SPACESHIP@@3W4MissionTypes@@A ; s_eMISSION_SPACESHIP
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240562[esp+604], esp
	push	OFFSET $SG221469
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T240563[esp+604]
	push	ecx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240561[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 83		; 00000053H
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR [esi+28]
	mov	DWORD PTR $T240561[esp+600], edx
	mov	eax, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	eax
	lea	ecx, DWORD PTR $T240561[esp+576]
	push	ecx
	lea	edx, DWORD PTR $T240564[esp+580]
	push	edx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 84		; 00000054H
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240561[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 83		; 00000053H
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240563[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 197  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_CULTURE_BOMB"), &s_eMISSION_CULTURE_BOMB));

	push	OFFSET ?s_eMISSION_CULTURE_BOMB@@3W4MissionTypes@@A ; s_eMISSION_CULTURE_BOMB
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240566[esp+604], esp
	push	OFFSET $SG221475
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	eax, DWORD PTR $T240567[esp+604]
	push	eax
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240565[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 85		; 00000055H
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR [esi+28]
	mov	DWORD PTR $T240565[esp+600], ecx
	mov	edx, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	mov	BYTE PTR __$EHRec$[esp+580], 86		; 00000056H
	push	edx
	lea	eax, DWORD PTR $T240565[esp+576]
	push	eax
	lea	ecx, DWORD PTR $T240568[esp+580]
	push	ecx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240565[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 85		; 00000055H
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240567[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 198  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_FOUND_RELIGION"), &s_eMISSION_FOUND_RELIGION));

	push	OFFSET ?s_eMISSION_FOUND_RELIGION@@3W4MissionTypes@@A ; s_eMISSION_FOUND_RELIGION
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240570[esp+604], esp
	push	OFFSET $SG221481
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	edx, DWORD PTR $T240571[esp+604]
	push	edx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240569[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 87		; 00000057H
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR [esi+28]
	mov	DWORD PTR $T240569[esp+600], eax
	mov	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	ecx
	lea	edx, DWORD PTR $T240569[esp+576]
	push	edx
	lea	eax, DWORD PTR $T240572[esp+580]
	push	eax
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 88		; 00000058H
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240569[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 87		; 00000057H
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240571[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 199  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_GOLDEN_AGE"), &s_eMISSION_GOLDEN_AGE));

	push	OFFSET ?s_eMISSION_GOLDEN_AGE@@3W4MissionTypes@@A ; s_eMISSION_GOLDEN_AGE
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240574[esp+604], esp
	push	OFFSET $SG221487
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T240575[esp+604]
	push	ecx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240573[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 89		; 00000059H
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR [esi+28]
	mov	DWORD PTR $T240573[esp+600], edx
	mov	eax, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	eax
	lea	ecx, DWORD PTR $T240573[esp+576]
	push	ecx
	lea	edx, DWORD PTR $T240576[esp+580]
	push	edx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 90		; 0000005aH
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240573[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 89		; 00000059H
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240575[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 200  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_BUILD"), &s_eMISSION_BUILD));

	push	OFFSET ?s_eMISSION_BUILD@@3W4MissionTypes@@A ; s_eMISSION_BUILD
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240578[esp+604], esp
	push	OFFSET $SG221493
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	eax, DWORD PTR $T240579[esp+604]
	push	eax
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240577[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 91		; 0000005bH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR [esi+28]
	mov	DWORD PTR $T240577[esp+600], ecx
	mov	edx, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	edx
	lea	eax, DWORD PTR $T240577[esp+576]
	push	eax
	lea	ecx, DWORD PTR $T240580[esp+580]
	push	ecx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 92		; 0000005cH
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240577[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 91		; 0000005bH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240579[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 201  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_LEAD"), &s_eMISSION_LEAD));

	push	OFFSET ?s_eMISSION_LEAD@@3W4MissionTypes@@A ; s_eMISSION_LEAD
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240582[esp+604], esp
	push	OFFSET $SG221499
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	edx, DWORD PTR $T240583[esp+604]
	push	edx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240581[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 93		; 0000005dH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR [esi+28]
	mov	DWORD PTR $T240581[esp+600], eax
	mov	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	ecx
	lea	edx, DWORD PTR $T240581[esp+576]
	push	edx
	lea	eax, DWORD PTR $T240584[esp+580]
	push	eax
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 94		; 0000005eH
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240581[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 93		; 0000005dH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240583[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 202  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_DIE_ANIMATION"), &s_eMISSION_DIE_ANIMATION));

	push	OFFSET ?s_eMISSION_DIE_ANIMATION@@3W4MissionTypes@@A ; s_eMISSION_DIE_ANIMATION
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240586[esp+604], esp
	push	OFFSET $SG221505
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T240587[esp+604]
	push	ecx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	mov	BYTE PTR __$EHRec$[esp+580], 95		; 0000005fH
	push	esi
	lea	ecx, DWORD PTR $T240585[esp+576]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR [esi+28]
	mov	DWORD PTR $T240585[esp+600], edx
	mov	eax, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	eax
	lea	ecx, DWORD PTR $T240585[esp+576]
	push	ecx
	lea	edx, DWORD PTR $T240588[esp+580]
	push	edx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 96		; 00000060H
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240585[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 95		; 0000005fH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240587[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 203  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_BEGIN_COMBAT"), &s_eMISSION_BEGIN_COMBAT));

	push	OFFSET ?s_eMISSION_BEGIN_COMBAT@@3W4MissionTypes@@A ; s_eMISSION_BEGIN_COMBAT
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240590[esp+604], esp
	push	OFFSET $SG221511
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	eax, DWORD PTR $T240591[esp+604]
	push	eax
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240589[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 97		; 00000061H
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR [esi+28]
	mov	DWORD PTR $T240589[esp+600], ecx
	mov	edx, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	edx
	lea	eax, DWORD PTR $T240589[esp+576]
	push	eax
	lea	ecx, DWORD PTR $T240592[esp+580]
	push	ecx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 98		; 00000062H
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240589[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 97		; 00000061H
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240591[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 204  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_END_COMBAT"), &s_eMISSION_END_COMBAT));

	push	OFFSET ?s_eMISSION_END_COMBAT@@3W4MissionTypes@@A ; s_eMISSION_END_COMBAT
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240594[esp+604], esp
	push	OFFSET $SG221517
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	edx, DWORD PTR $T240595[esp+604]
	push	edx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240593[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 99		; 00000063H
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR [esi+28]
	mov	DWORD PTR $T240593[esp+600], eax
	mov	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	ecx
	lea	edx, DWORD PTR $T240593[esp+576]
	push	edx
	lea	eax, DWORD PTR $T240596[esp+580]
	mov	BYTE PTR __$EHRec$[esp+588], 100	; 00000064H
	push	eax
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240593[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 99		; 00000063H
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240595[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 205  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_AIRSTRIKE"), &s_eMISSION_AIRSTRIKE));

	push	OFFSET ?s_eMISSION_AIRSTRIKE@@3W4MissionTypes@@A ; s_eMISSION_AIRSTRIKE
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240598[esp+604], esp
	push	OFFSET $SG221523
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T240599[esp+604]
	push	ecx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240597[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 101	; 00000065H
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR [esi+28]
	mov	DWORD PTR $T240597[esp+600], edx
	mov	eax, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	eax
	lea	ecx, DWORD PTR $T240597[esp+576]
	push	ecx
	lea	edx, DWORD PTR $T240600[esp+580]
	push	edx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 102	; 00000066H
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240597[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 101	; 00000065H
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240599[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 206  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_SURRENDER"), &s_eMISSION_SURRENDER));

	push	OFFSET ?s_eMISSION_SURRENDER@@3W4MissionTypes@@A ; s_eMISSION_SURRENDER
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240602[esp+604], esp
	push	OFFSET $SG221529
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	eax, DWORD PTR $T240603[esp+604]
	push	eax
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240601[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 103	; 00000067H
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR [esi+28]
	mov	DWORD PTR $T240601[esp+600], ecx
	mov	edx, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	edx
	lea	eax, DWORD PTR $T240601[esp+576]
	push	eax
	lea	ecx, DWORD PTR $T240604[esp+580]
	push	ecx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 104	; 00000068H
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240601[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 103	; 00000067H
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240603[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 207  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_CAPTURED"), &s_eMISSION_CAPTURED));

	push	OFFSET ?s_eMISSION_CAPTURED@@3W4MissionTypes@@A ; s_eMISSION_CAPTURED
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240606[esp+604], esp
	push	OFFSET $SG221535
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	edx, DWORD PTR $T240607[esp+604]
	push	edx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240605[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 105	; 00000069H
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR [esi+28]
	mov	DWORD PTR $T240605[esp+600], eax
	mov	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	ecx
	lea	edx, DWORD PTR $T240605[esp+576]
	push	edx
	lea	eax, DWORD PTR $T240608[esp+580]
	push	eax
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 106	; 0000006aH
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240605[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 105	; 00000069H
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240607[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 208  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_IDLE"), &s_eMISSION_IDLE));

	push	OFFSET ?s_eMISSION_IDLE@@3W4MissionTypes@@A ; s_eMISSION_IDLE
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240610[esp+604], esp
	push	OFFSET $SG221541
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T240611[esp+604]
	push	ecx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240609[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 107	; 0000006bH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR [esi+28]
	mov	DWORD PTR $T240609[esp+600], edx
	mov	eax, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	eax
	lea	ecx, DWORD PTR $T240609[esp+576]
	push	ecx
	lea	edx, DWORD PTR $T240612[esp+580]
	push	edx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 108	; 0000006cH
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240609[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 107	; 0000006bH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240611[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 209  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_DIE"), &s_eMISSION_DIE));

	push	OFFSET ?s_eMISSION_DIE@@3W4MissionTypes@@A ; s_eMISSION_DIE
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240614[esp+604], esp
	push	OFFSET $SG221547
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	eax, DWORD PTR $T240615[esp+604]
	push	eax
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240613[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 109	; 0000006dH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR [esi+28]
	mov	DWORD PTR $T240613[esp+600], ecx
	mov	edx, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	edx
	lea	eax, DWORD PTR $T240613[esp+576]
	push	eax
	lea	ecx, DWORD PTR $T240616[esp+580]
	push	ecx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 110	; 0000006eH
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240613[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 109	; 0000006dH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240615[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 210  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_DAMAGE"), &s_eMISSION_DAMAGE));

	push	OFFSET ?s_eMISSION_DAMAGE@@3W4MissionTypes@@A ; s_eMISSION_DAMAGE
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240618[esp+604], esp
	push	OFFSET $SG221553
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	edx, DWORD PTR $T240619[esp+604]
	push	edx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240617[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 111	; 0000006fH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR [esi+28]
	mov	DWORD PTR $T240617[esp+600], eax
	mov	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	ecx
	lea	edx, DWORD PTR $T240617[esp+576]
	push	edx
	lea	eax, DWORD PTR $T240620[esp+580]
	push	eax
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 112	; 00000070H
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240617[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 111	; 0000006fH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240619[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 211  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_MULTI_SELECT"), &s_eMISSION_MULTI_SELECT));

	push	OFFSET ?s_eMISSION_MULTI_SELECT@@3W4MissionTypes@@A ; s_eMISSION_MULTI_SELECT
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240622[esp+604], esp
	push	OFFSET $SG221559
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T240623[esp+604]
	push	ecx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240621[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 113	; 00000071H
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR [esi+28]
	mov	DWORD PTR $T240621[esp+600], edx
	mov	eax, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	eax
	lea	ecx, DWORD PTR $T240621[esp+576]
	push	ecx
	lea	edx, DWORD PTR $T240624[esp+580]
	push	edx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 114	; 00000072H
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240621[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 113	; 00000071H
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240623[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 212  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_MULTI_DESELECT"), &s_eMISSION_MULTI_DESELECT));

	push	OFFSET ?s_eMISSION_MULTI_DESELECT@@3W4MissionTypes@@A ; s_eMISSION_MULTI_DESELECT
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240626[esp+604], esp
	push	OFFSET $SG221565
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	eax, DWORD PTR $T240627[esp+604]
	push	eax
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240625[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 115	; 00000073H
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR [esi+28]
	mov	DWORD PTR $T240625[esp+600], ecx
	mov	edx, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	edx
	lea	eax, DWORD PTR $T240625[esp+576]
	push	eax
	lea	ecx, DWORD PTR $T240628[esp+580]
	push	ecx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 116	; 00000074H
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240625[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 115	; 00000073H
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240627[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 213  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_WAIT_FOR"), &s_eMISSION_WAIT_FOR));

	push	OFFSET ?s_eMISSION_WAIT_FOR@@3W4MissionTypes@@A ; s_eMISSION_WAIT_FOR
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240630[esp+604], esp
	push	OFFSET $SG221571
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	edx, DWORD PTR $T240631[esp+604]
	push	edx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240629[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 117	; 00000075H
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR [esi+28]
	mov	DWORD PTR $T240629[esp+600], eax
	mov	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	ecx
	lea	edx, DWORD PTR $T240629[esp+576]
	push	edx
	lea	eax, DWORD PTR $T240632[esp+580]
	push	eax
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 118	; 00000076H
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240629[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 117	; 00000075H
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240631[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 214  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_SPREAD_RELIGION"), &s_eMISSION_SPREAD_RELIGION));

	push	OFFSET ?s_eMISSION_SPREAD_RELIGION@@3W4MissionTypes@@A ; s_eMISSION_SPREAD_RELIGION
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240634[esp+604], esp
	push	OFFSET $SG221577
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T240635[esp+604]
	push	ecx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240633[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 119	; 00000077H
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR [esi+28]
	mov	DWORD PTR $T240633[esp+600], edx
	mov	eax, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	eax
	lea	ecx, DWORD PTR $T240633[esp+576]
	push	ecx
	lea	edx, DWORD PTR $T240636[esp+580]
	push	edx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 120	; 00000078H
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240633[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 119	; 00000077H
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240635[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 215  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_ENHANCE_RELIGION"), &s_eMISSION_ENHANCE_RELIGION));

	push	OFFSET ?s_eMISSION_ENHANCE_RELIGION@@3W4MissionTypes@@A ; s_eMISSION_ENHANCE_RELIGION
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240638[esp+604], esp
	push	OFFSET $SG221583
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	eax, DWORD PTR $T240639[esp+604]
	push	eax
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240637[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 121	; 00000079H
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR [esi+28]
	mov	DWORD PTR $T240637[esp+600], ecx
	mov	edx, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	edx
	lea	eax, DWORD PTR $T240637[esp+576]
	push	eax
	lea	ecx, DWORD PTR $T240640[esp+580]
	push	ecx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 122	; 0000007aH
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240637[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 121	; 00000079H
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240639[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 216  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_REMOVE_HERESY"), &s_eMISSION_REMOVE_HERESY));

	push	OFFSET ?s_eMISSION_REMOVE_HERESY@@3W4MissionTypes@@A ; s_eMISSION_REMOVE_HERESY
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240642[esp+604], esp
	push	OFFSET $SG221589
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	edx, DWORD PTR $T240643[esp+604]
	push	edx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240641[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 123	; 0000007bH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR [esi+28]
	mov	DWORD PTR $T240641[esp+600], eax
	mov	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	mov	BYTE PTR __$EHRec$[esp+580], 124	; 0000007cH
	push	ecx
	lea	edx, DWORD PTR $T240641[esp+576]
	push	edx
	lea	eax, DWORD PTR $T240644[esp+580]
	push	eax
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240641[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 123	; 0000007bH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240643[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 217  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_ESTABLISH_TRADE_ROUTE"), &s_eMISSION_ESTABLISH_TRADE_ROUTE));

	push	OFFSET ?s_eMISSION_ESTABLISH_TRADE_ROUTE@@3W4MissionTypes@@A ; s_eMISSION_ESTABLISH_TRADE_ROUTE
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240646[esp+604], esp
	push	OFFSET $SG221595
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T240647[esp+604]
	push	ecx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240645[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 125	; 0000007dH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR [esi+28]
	mov	DWORD PTR $T240645[esp+600], edx
	mov	eax, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	eax
	lea	ecx, DWORD PTR $T240645[esp+576]
	push	ecx
	lea	edx, DWORD PTR $T240648[esp+580]
	push	edx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 126	; 0000007eH
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240645[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 125	; 0000007dH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240647[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 218  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_PLUNDER_TRADE_ROUTE"), &s_eMISSION_PLUNDER_TRADE_ROUTE));

	push	OFFSET ?s_eMISSION_PLUNDER_TRADE_ROUTE@@3W4MissionTypes@@A ; s_eMISSION_PLUNDER_TRADE_ROUTE
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240650[esp+604], esp
	push	OFFSET $SG221601
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	eax, DWORD PTR $T240651[esp+604]
	push	eax
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240649[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 127	; 0000007fH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR [esi+28]
	mov	DWORD PTR $T240649[esp+600], ecx
	mov	edx, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	edx
	lea	eax, DWORD PTR $T240649[esp+576]
	push	eax
	lea	ecx, DWORD PTR $T240652[esp+580]
	push	ecx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 128	; 00000080H
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240649[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 127	; 0000007fH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240651[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 219  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_CREATE_GREAT_WORK"), &s_eMISSION_GREAT_WORK));

	push	OFFSET ?s_eMISSION_GREAT_WORK@@3W4MissionTypes@@A ; s_eMISSION_GREAT_WORK
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240654[esp+604], esp
	push	OFFSET $SG221607
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	edx, DWORD PTR $T240655[esp+604]
	push	edx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240653[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 129	; 00000081H
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR [esi+28]
	mov	DWORD PTR $T240653[esp+600], eax
	mov	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	ecx
	lea	edx, DWORD PTR $T240653[esp+576]
	push	edx
	lea	eax, DWORD PTR $T240656[esp+580]
	push	eax
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 130	; 00000082H
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240653[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 129	; 00000081H
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240655[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 220  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_CHANGE_TRADE_UNIT_HOME_CITY"), &s_eMISSION_CHANGE_TRADE_UNIT_HOME_CITY));

	push	OFFSET ?s_eMISSION_CHANGE_TRADE_UNIT_HOME_CITY@@3W4MissionTypes@@A ; s_eMISSION_CHANGE_TRADE_UNIT_HOME_CITY
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240658[esp+604], esp
	push	OFFSET $SG221613
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T240659[esp+604]
	push	ecx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240657[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 131	; 00000083H
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR [esi+28]
	mov	DWORD PTR $T240657[esp+600], edx
	mov	eax, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	eax
	lea	ecx, DWORD PTR $T240657[esp+576]
	push	ecx
	lea	edx, DWORD PTR $T240660[esp+580]
	push	edx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 132	; 00000084H
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240657[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 131	; 00000083H
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240659[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 221  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_SELL_EXOTIC_GOODS"), &s_eMISSION_SELL_EXOTIC_GOODS));

	push	OFFSET ?s_eMISSION_SELL_EXOTIC_GOODS@@3W4MissionTypes@@A ; s_eMISSION_SELL_EXOTIC_GOODS
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240662[esp+604], esp
	push	OFFSET $SG221619
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	eax, DWORD PTR $T240663[esp+604]
	push	eax
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	mov	BYTE PTR __$EHRec$[esp+580], 133	; 00000085H
	push	esi
	lea	ecx, DWORD PTR $T240661[esp+576]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR [esi+28]
	mov	DWORD PTR $T240661[esp+600], ecx
	mov	edx, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	edx
	lea	eax, DWORD PTR $T240661[esp+576]
	push	eax
	lea	ecx, DWORD PTR $T240664[esp+580]
	push	ecx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 134	; 00000086H
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240661[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 133	; 00000085H
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240663[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 222  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_GIVE_POLICIES"), &s_eMISSION_GIVE_POLICIES));

	push	OFFSET ?s_eMISSION_GIVE_POLICIES@@3W4MissionTypes@@A ; s_eMISSION_GIVE_POLICIES
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240666[esp+604], esp
	push	OFFSET $SG221625
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	edx, DWORD PTR $T240667[esp+604]
	push	edx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240665[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 135	; 00000087H
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR [esi+28]
	mov	DWORD PTR $T240665[esp+600], eax
	mov	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	ecx
	lea	edx, DWORD PTR $T240665[esp+576]
	push	edx
	lea	eax, DWORD PTR $T240668[esp+580]
	push	eax
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 136	; 00000088H
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240665[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 135	; 00000087H
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240667[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 223  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_ONE_SHOT_TOURISM"), &s_eMISSION_ONE_SHOT_TOURISM));

	push	OFFSET ?s_eMISSION_ONE_SHOT_TOURISM@@3W4MissionTypes@@A ; s_eMISSION_ONE_SHOT_TOURISM
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240670[esp+604], esp
	push	OFFSET $SG221631
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T240671[esp+604]
	push	ecx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240669[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 137	; 00000089H
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR [esi+28]
	mov	DWORD PTR $T240669[esp+600], edx
	mov	eax, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	eax
	lea	ecx, DWORD PTR $T240669[esp+576]
	push	ecx
	lea	edx, DWORD PTR $T240672[esp+580]
	push	edx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 138	; 0000008aH
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240669[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 137	; 00000089H
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240671[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 224  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_CHANGE_ADMIRAL_PORT"), &s_eMISSION_CHANGE_ADMIRAL_PORT));

	push	OFFSET ?s_eMISSION_CHANGE_ADMIRAL_PORT@@3W4MissionTypes@@A ; s_eMISSION_CHANGE_ADMIRAL_PORT
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T240674[esp+604], esp
	push	OFFSET $SG221637
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	eax, DWORD PTR $T240675[esp+604]
	push	eax
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	esi, eax
	push	esi
	lea	ecx, DWORD PTR $T240673[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 139	; 0000008bH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR [esi+28]
	mov	DWORD PTR $T240673[esp+600], ecx
	mov	edx, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	push	edx
	lea	eax, DWORD PTR $T240673[esp+576]
	push	eax
	lea	ecx, DWORD PTR $T240676[esp+580]
	push	ecx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	mov	BYTE PTR __$EHRec$[esp+592], 140	; 0000008cH
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	lea	ecx, DWORD PTR $T240673[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 139	; 0000008bH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T240675[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 225  : 
; 226  : 		Database::Results kResults;

	xor	esi, esi
	push	esi
	lea	ecx, DWORD PTR _kResults$221638[esp+576]
	call	edi

; 227  : 		if(db.Execute(kResults, "SELECT Type, ID from Missions"))

	mov	edi, DWORD PTR _db$[esp+568]
	push	-1
	push	OFFSET $SG221640
	lea	edx, DWORD PTR _kResults$221638[esp+580]
	push	edx
	mov	ecx, edi
	mov	BYTE PTR __$EHRec$[esp+592], 141	; 0000008dH
	call	ebp
	test	al, al
	je	$LN7@AcquireTyp

; 228  : 		{
; 229  : 			while(kResults.Step())

	lea	ecx, DWORD PTR _kResults$221638[esp+572]
	call	DWORD PTR __imp_?Step@Results@Database@@QAE_NXZ
	test	al, al
	je	$LN7@AcquireTyp
	npad	7
$LL8@AcquireTyp:

; 230  : 			{
; 231  : 				std::string strMissionType = kResults.GetText(0);

	push	esi
	lea	ecx, DWORD PTR _kResults$221638[esp+576]
	call	DWORD PTR __imp_?GetText@Results@Database@@QAEPBDH@Z
	push	eax
	lea	ecx, DWORD PTR _strMissionType$221644[esp+576]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z

; 232  : 				LookupTable::iterator it = kMissionTypesLookupTable.find(strMissionType);

	lea	eax, DWORD PTR _strMissionType$221644[esp+572]
	push	eax
	lea	ecx, DWORD PTR _it$221645[esp+576]
	push	ecx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	mov	BYTE PTR __$EHRec$[esp+588], 142	; 0000008eH
	call	?lower_bound@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::lower_bound

; 233  : 				if(it != kMissionTypesLookupTable.end())

	mov	ebp, DWORD PTR _it$221645[esp+572]
	cmp	ebp, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	je	SHORT $LN6@AcquireTyp

; 234  : 				{
; 235  : 					(*it->second) = static_cast<MissionTypes>(kResults.GetInt(1));

	push	1
	lea	ecx, DWORD PTR _kResults$221638[esp+576]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHH@Z
	mov	edx, DWORD PTR [ebp+36]
	mov	DWORD PTR [edx], eax
$LN6@AcquireTyp:

; 236  : 				}
; 237  : 			}

	lea	ecx, DWORD PTR _strMissionType$221644[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 141	; 0000008dH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR _kResults$221638[esp+572]
	call	DWORD PTR __imp_?Step@Results@Database@@QAE_NXZ
	test	al, al
	jne	SHORT $LL8@AcquireTyp
$LN7@AcquireTyp:

; 238  : 		}
; 239  : 
; 240  : 		int iNumTypes = db.Count("Missions", false);

	push	esi
	push	OFFSET $SG221651
	mov	ecx, edi
	call	DWORD PTR __imp_?Count@Connection@Database@@QAEHPBD_N@Z

; 241  : 		if(iNumTypes >= 0)

	cmp	eax, esi
	jl	SHORT $LN5@AcquireTyp

; 242  : 		{
; 243  : 			s_uiNUM_MISSION_TYPES = static_cast<unsigned int>(iNumTypes);

	mov	DWORD PTR ?s_uiNUM_MISSION_TYPES@@3IA, eax ; s_uiNUM_MISSION_TYPES
$LN5@AcquireTyp:

; 244  : 		}
; 245  : 
; 246  : 		for(LookupTable::iterator it = kMissionTypesLookupTable.begin(); it != kMissionTypesLookupTable.end(); ++it)

	mov	eax, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	mov	edi, DWORD PTR [eax]
	cmp	edi, eax
	je	$LN2@AcquireTyp
	npad	6
$LL1802@AcquireTyp:

; 247  : 		{
; 248  : 			if((*it->second) == NO_MISSION)

	mov	ecx, DWORD PTR [edi+36]
	cmp	DWORD PTR [ecx], -1
	jne	SHORT $LN3@AcquireTyp

; 249  : 			{
; 250  : 				char msg[256] = {0};

	push	255					; 000000ffH
	lea	edx, DWORD PTR _msg$221661[esp+577]
	push	esi
	push	edx
	mov	BYTE PTR _msg$221661[esp+584], 0
	call	_memset
	add	esp, 12					; 0000000cH

; 251  : 				sprintf_s(msg, "MissionType - %s is used in the DLL but does not exist in the database.", it->first.c_str());

	lea	ecx, DWORD PTR [edi+8]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	eax, DWORD PTR _msg$221661[esp+576]
	push	OFFSET $SG221662
	push	eax
	call	??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ	; sprintf_s<256>
	add	esp, 12					; 0000000cH

; 252  : 				FILogFile* pLog = LOGFILEMGR.GetLog("Gamecore.log", FILogFile::kDontTimeStamp);

	call	?GetInstance@FILogFileMgr@@SAAAV1@XZ	; FILogFileMgr::GetInstance
	mov	edx, DWORD PTR [eax]
	push	esi
	push	1
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+12]
	push	OFFSET $SG221664
	call	eax

; 253  : 				pLog->WarningMsg(msg);

	mov	ecx, DWORD PTR [eax]
	lea	edx, DWORD PTR _msg$221661[esp+572]
	push	edx
	push	eax
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	mov	eax, DWORD PTR _kMissionTypesLookupTable$221088[esp+588]
	add	esp, 8
$LN3@AcquireTyp:
	mov	edi, DWORD PTR [edi]
	cmp	edi, eax
	jne	SHORT $LL1802@AcquireTyp
$LN2@AcquireTyp:

; 254  : 				CvAssertMsg(false, msg);
; 255  : 			}
; 256  : 		}
; 257  : 	}

	lea	ecx, DWORD PTR _kResults$221638[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1Results@Database@@UAE@XZ
	mov	eax, DWORD PTR _kMissionTypesLookupTable$221088[esp+592]
	mov	DWORD PTR __$EHRec$[esp+580], -1
	cmp	eax, esi
	je	SHORT $LN1846@AcquireTyp
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1846@AcquireTyp:
	mov	eax, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	mov	DWORD PTR _kMissionTypesLookupTable$221088[esp+592], esi
	mov	DWORD PTR _kMissionTypesLookupTable$221088[esp+596], esi
	mov	DWORD PTR _kMissionTypesLookupTable$221088[esp+600], esi
	mov	edi, DWORD PTR [eax]
	mov	DWORD PTR [eax], eax
	mov	eax, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	mov	DWORD PTR [eax+4], eax
	mov	eax, DWORD PTR _kMissionTypesLookupTable$221088[esp+580]
	mov	DWORD PTR _kMissionTypesLookupTable$221088[esp+584], esi
	cmp	edi, eax
	je	SHORT $LN1852@AcquireTyp
	npad	1
$LL1854@AcquireTyp:
	mov	esi, DWORD PTR [edi]
	lea	ecx, DWORD PTR [edi+8]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	push	edi
	call	??3@YAXPAX@Z				; operator delete
	mov	eax, DWORD PTR _kMissionTypesLookupTable$221088[esp+584]
	add	esp, 4
	mov	edi, esi
	cmp	esi, eax
	jne	SHORT $LL1854@AcquireTyp
$LN1852@AcquireTyp:
	push	eax
	call	??3@YAXPAX@Z				; operator delete

; 258  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+576]
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebp
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	add	esp, 556				; 0000022cH
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$0:
	lea	ecx, DWORD PTR _kArtifactTypeLookupTable$218361[ebp]
	jmp	??1?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@tr1@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$2:
	lea	ecx, DWORD PTR $T240407[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$3:
	lea	ecx, DWORD PTR $T240405[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$5:
	lea	ecx, DWORD PTR $T240411[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$6:
	lea	ecx, DWORD PTR $T240409[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$8:
	lea	ecx, DWORD PTR $T240415[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$9:
	lea	ecx, DWORD PTR $T240413[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$11:
	lea	ecx, DWORD PTR $T240419[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$12:
	lea	ecx, DWORD PTR $T240417[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$14:
	lea	ecx, DWORD PTR $T240423[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$15:
	lea	ecx, DWORD PTR $T240421[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$17:
	lea	ecx, DWORD PTR $T240427[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$18:
	lea	ecx, DWORD PTR $T240425[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$19:
	lea	ecx, DWORD PTR _kResults$218599[ebp]
	jmp	DWORD PTR __imp_??1Results@Database@@UAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$20:
	lea	ecx, DWORD PTR _strArtifactType$218605[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$21:
	lea	ecx, DWORD PTR _kTypeLookupTable$219736[ebp]
	jmp	??1?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@tr1@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$23:
	lea	ecx, DWORD PTR $T240433[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$24:
	lea	ecx, DWORD PTR $T240431[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$26:
	lea	ecx, DWORD PTR $T240437[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$27:
	lea	ecx, DWORD PTR $T240435[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$29:
	lea	ecx, DWORD PTR $T240441[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$30:
	lea	ecx, DWORD PTR $T240439[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$31:
	lea	ecx, DWORD PTR _kResults$219956[ebp]
	jmp	DWORD PTR __imp_??1Results@Database@@UAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$32:
	lea	ecx, DWORD PTR _strType$219962[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$33:
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$221088[ebp]
	jmp	??1?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@tr1@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$35:
	lea	ecx, DWORD PTR $T240447[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$36:
	lea	ecx, DWORD PTR $T240445[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$38:
	lea	ecx, DWORD PTR $T240451[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$39:
	lea	ecx, DWORD PTR $T240449[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$41:
	lea	ecx, DWORD PTR $T240455[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$42:
	lea	ecx, DWORD PTR $T240453[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$44:
	lea	ecx, DWORD PTR $T240459[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$45:
	lea	ecx, DWORD PTR $T240457[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$47:
	lea	ecx, DWORD PTR $T240463[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$48:
	lea	ecx, DWORD PTR $T240461[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$50:
	lea	ecx, DWORD PTR $T240467[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$51:
	lea	ecx, DWORD PTR $T240465[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$53:
	lea	ecx, DWORD PTR $T240471[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$54:
	lea	ecx, DWORD PTR $T240469[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$56:
	lea	ecx, DWORD PTR $T240475[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$57:
	lea	ecx, DWORD PTR $T240473[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$59:
	lea	ecx, DWORD PTR $T240479[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$60:
	lea	ecx, DWORD PTR $T240477[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$62:
	lea	ecx, DWORD PTR $T240483[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$63:
	lea	ecx, DWORD PTR $T240481[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$65:
	lea	ecx, DWORD PTR $T240487[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$66:
	lea	ecx, DWORD PTR $T240485[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$68:
	lea	ecx, DWORD PTR $T240491[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$69:
	lea	ecx, DWORD PTR $T240489[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$71:
	lea	ecx, DWORD PTR $T240495[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$72:
	lea	ecx, DWORD PTR $T240493[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$74:
	lea	ecx, DWORD PTR $T240499[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$75:
	lea	ecx, DWORD PTR $T240497[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$77:
	lea	ecx, DWORD PTR $T240503[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$78:
	lea	ecx, DWORD PTR $T240501[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$80:
	lea	ecx, DWORD PTR $T240507[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$81:
	lea	ecx, DWORD PTR $T240505[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$83:
	lea	ecx, DWORD PTR $T240511[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$84:
	lea	ecx, DWORD PTR $T240509[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$86:
	lea	ecx, DWORD PTR $T240515[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$87:
	lea	ecx, DWORD PTR $T240513[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$89:
	lea	ecx, DWORD PTR $T240519[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$90:
	lea	ecx, DWORD PTR $T240517[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$92:
	lea	ecx, DWORD PTR $T240523[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$93:
	lea	ecx, DWORD PTR $T240521[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$95:
	lea	ecx, DWORD PTR $T240527[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$96:
	lea	ecx, DWORD PTR $T240525[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$98:
	lea	ecx, DWORD PTR $T240531[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$99:
	lea	ecx, DWORD PTR $T240529[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$101:
	lea	ecx, DWORD PTR $T240535[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$102:
	lea	ecx, DWORD PTR $T240533[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$104:
	lea	ecx, DWORD PTR $T240539[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$105:
	lea	ecx, DWORD PTR $T240537[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$107:
	lea	ecx, DWORD PTR $T240543[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$108:
	lea	ecx, DWORD PTR $T240541[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$110:
	lea	ecx, DWORD PTR $T240547[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$111:
	lea	ecx, DWORD PTR $T240545[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$113:
	lea	ecx, DWORD PTR $T240551[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$114:
	lea	ecx, DWORD PTR $T240549[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$116:
	lea	ecx, DWORD PTR $T240555[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$117:
	lea	ecx, DWORD PTR $T240553[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$119:
	lea	ecx, DWORD PTR $T240559[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$120:
	lea	ecx, DWORD PTR $T240557[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$122:
	lea	ecx, DWORD PTR $T240563[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$123:
	lea	ecx, DWORD PTR $T240561[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$125:
	lea	ecx, DWORD PTR $T240567[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$126:
	lea	ecx, DWORD PTR $T240565[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$128:
	lea	ecx, DWORD PTR $T240571[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$129:
	lea	ecx, DWORD PTR $T240569[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$131:
	lea	ecx, DWORD PTR $T240575[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$132:
	lea	ecx, DWORD PTR $T240573[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$134:
	lea	ecx, DWORD PTR $T240579[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$135:
	lea	ecx, DWORD PTR $T240577[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$137:
	lea	ecx, DWORD PTR $T240583[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$138:
	lea	ecx, DWORD PTR $T240581[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$140:
	lea	ecx, DWORD PTR $T240587[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$141:
	lea	ecx, DWORD PTR $T240585[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$143:
	lea	ecx, DWORD PTR $T240591[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$144:
	lea	ecx, DWORD PTR $T240589[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$146:
	lea	ecx, DWORD PTR $T240595[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$147:
	lea	ecx, DWORD PTR $T240593[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$149:
	lea	ecx, DWORD PTR $T240599[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$150:
	lea	ecx, DWORD PTR $T240597[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$152:
	lea	ecx, DWORD PTR $T240603[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$153:
	lea	ecx, DWORD PTR $T240601[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$155:
	lea	ecx, DWORD PTR $T240607[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$156:
	lea	ecx, DWORD PTR $T240605[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$158:
	lea	ecx, DWORD PTR $T240611[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$159:
	lea	ecx, DWORD PTR $T240609[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$161:
	lea	ecx, DWORD PTR $T240615[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$162:
	lea	ecx, DWORD PTR $T240613[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$164:
	lea	ecx, DWORD PTR $T240619[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$165:
	lea	ecx, DWORD PTR $T240617[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$167:
	lea	ecx, DWORD PTR $T240623[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$168:
	lea	ecx, DWORD PTR $T240621[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$170:
	lea	ecx, DWORD PTR $T240627[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$171:
	lea	ecx, DWORD PTR $T240625[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$173:
	lea	ecx, DWORD PTR $T240631[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$174:
	lea	ecx, DWORD PTR $T240629[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$176:
	lea	ecx, DWORD PTR $T240635[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$177:
	lea	ecx, DWORD PTR $T240633[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$179:
	lea	ecx, DWORD PTR $T240639[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$180:
	lea	ecx, DWORD PTR $T240637[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$182:
	lea	ecx, DWORD PTR $T240643[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$183:
	lea	ecx, DWORD PTR $T240641[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$185:
	lea	ecx, DWORD PTR $T240647[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$186:
	lea	ecx, DWORD PTR $T240645[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$188:
	lea	ecx, DWORD PTR $T240651[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$189:
	lea	ecx, DWORD PTR $T240649[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$191:
	lea	ecx, DWORD PTR $T240655[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$192:
	lea	ecx, DWORD PTR $T240653[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$194:
	lea	ecx, DWORD PTR $T240659[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$195:
	lea	ecx, DWORD PTR $T240657[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$197:
	lea	ecx, DWORD PTR $T240663[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$198:
	lea	ecx, DWORD PTR $T240661[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$200:
	lea	ecx, DWORD PTR $T240667[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$201:
	lea	ecx, DWORD PTR $T240665[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$203:
	lea	ecx, DWORD PTR $T240671[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$204:
	lea	ecx, DWORD PTR $T240669[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$206:
	lea	ecx, DWORD PTR $T240675[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$207:
	lea	ecx, DWORD PTR $T240673[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$208:
	lea	ecx, DWORD PTR _kResults$221638[ebp]
	jmp	DWORD PTR __imp_??1Results@Database@@UAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$209:
	lea	ecx, DWORD PTR _strMissionType$221644[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z ENDP ; CvTypes::AcquireTypes
END
