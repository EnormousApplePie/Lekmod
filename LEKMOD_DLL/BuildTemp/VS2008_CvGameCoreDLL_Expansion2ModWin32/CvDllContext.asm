; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	c:\Users\EnormousApplePie\Documents\GitHub\Lekmod\LEKMOD_DLL\CvGameCoreDLL_Expansion2\CvDllContext.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?s_pSingleton@CvDllGameContext@@0PAV1@A		; CvDllGameContext::s_pSingleton
PUBLIC	?s_hHeap@CvDllGameContext@@0PAXA		; CvDllGameContext::s_hHeap
_BSS	SEGMENT
?s_pSingleton@CvDllGameContext@@0PAV1@A DD 01H DUP (?)	; CvDllGameContext::s_pSingleton
_BSS	ENDS
_DATA	SEGMENT
_CIV5_XP2_DLL_VERSION DD FLAT:$SG217637
?s_hHeap@CvDllGameContext@@0PAXA DD 0ffffffffH		; CvDllGameContext::s_hHeap
_DATA	ENDS
CONST	SEGMENT
_CIV5_XP2_DLL_GUID DD 013c6ca53H
	DW	050ffH
	DW	04a66H
	DB	094H
	DB	01bH
	DB	05dH
	DB	05dH
	DB	0aaH
	DB	090H
	DB	0c6H
	DB	084H
$SG217637 DB	'1.0.0', 00H
$SG223398 DB	00H
$SG223400 DB	00H
$SG223379 DB	'net_message_debug.log', 00H
	ORG $+2
$SG223381 DB	00H, 00H
	ORG $+2
$SG223383 DB	'Game Random Number Generators are out of sync : local.se'
	DB	'ed=', 00H
$SG223390 DB	', remote.seed=', 00H
	ORG $+1
$SG223391 DB	0aH, 09H, 'local.callCount=', 00H
	ORG $+1
$SG223392 DB	', remote.callCount=', 00H
$SG223393 DB	0aH, 09H, 'local.resetCount=', 00H
$SG223394 DB	', remote.resetCount=', 00H
	ORG $+3
$SG223395 DB	0aH, 00H
	ORG $+2
$SG223842 DB	'At Call #', 00H
	ORG $+2
$SG223843 DB	' random number seeds are different.', 0aH, 00H
	ORG $+3
$SG223845 DB	'Call #', 00H
	ORG $+1
$SG223846 DB	0aH, 'Local:', 0aH, 00H
	ORG $+3
$SG223847 DB	0aH, 'Remote:', 0aH, 00H
	ORG $+2
$SG223848 DB	'Call #', 00H
	ORG $+1
$SG223849 DB	0aH, 'Local:', 0aH, 00H
	ORG $+3
$SG223850 DB	0aH, 'Remote:', 0aH, 00H
	ORG $+6
$SG223854 DB	0aH, 'Local random number generator called more than remo'
	DB	'te at call #', 00H
	ORG $+3
$SG223855 DB	0aH, 00H
	ORG $+2
$SG223857 DB	'Local CallStack:', 0aH, 00H
	ORG $+6
$SG223862 DB	0aH, 'remote random number generator called more than loc'
	DB	'al at call #', 00H
	ORG $+3
$SG223863 DB	0aH, 00H
	ORG $+2
$SG223865 DB	'remote CallStack:', 0aH, 00H
	ORG $+1
$SG223988 DB	0aH, 'First different callstack at call #', 00H
	ORG $+3
$SG223989 DB	0aH, 00H
	ORG $+2
$SG223990 DB	'Local :', 0aH, 00H
	ORG $+3
$SG223991 DB	'Remote :', 0aH, 00H
	ORG $+2
$SG223994 DB	0aH, 'Debug dump:', 0aH, 00H
	ORG $+2
$SG223995 DB	'Seed History -', 0aH, 00H
$SG224004 DB	09H, ' Call #', 00H
	ORG $+3
$SG224005 DB	' LOCAL=', 00H
$SG224008 DB	09H, 'REMOTE=', 00H
	ORG $+3
$SG224011 DB	0aH, 00H
	ORG $+2
$SG224012 DB	0aH, 'Local callstack history', 0aH, 00H
	ORG $+2
$SG224027 DB	'Last message repeated ', 00H
	ORG $+1
$SG224028 DB	' times', 0aH, 00H
$SG224029 DB	'Call #', 00H
	ORG $+1
$SG224030 DB	0aH, 00H
	ORG $+2
$SG224032 DB	0aH, 'Remote callstack history', 0aH, 00H
	ORG $+1
$SG224040 DB	'Last message repeated ', 00H
	ORG $+1
$SG224041 DB	' times', 0aH, 00H
$SG224042 DB	'Call #', 00H
	ORG $+1
$SG224043 DB	0aH, 00H
	ORG $+2
_guidICvUnknown DD 0d89ba82fH
	DW	09fa3H
	DW	04696H
	DB	0b3H
	DB	0f4H
	DB	052H
	DB	0bdH
	DB	0b1H
	DB	01H
	DB	0cfH
	DB	0b2H
_guidICvGameContext1 DD 0a309fa38H
	DW	0cf60H
	DW	04239H
	DB	0a1H
	DB	062H
	DB	085H
	DB	086H
	DB	0c0H
	DB	0d1H
	DB	0c7H
	DB	0d3H
_guidICvNetMessageHandler1 DD 055b80da7H
	DW	0d175H
	DW	04ea7H
	DB	0b5H
	DB	055H
	DB	0b9H
	DB	088H
	DB	045H
	DB	0ddH
	DB	0dcH
	DB	08eH
_guidICvGameContext2 DD 0cf7820cdH
	DW	0e960H
	DW	041efH
	DB	09cH
	DB	05aH
	DB	09dH
	DB	03H
	DB	0cH
	DB	03bH
	DB	0c3H
	DB	0bH
_guidICvGameContext3 DD 08921e7a6H
	DW	0a1fdH
	DW	04301H
	DB	094H
	DB	0b9H
	DB	0d5H
	DB	083H
	DB	0ccH
	DB	010H
	DB	02aH
	DB	011H
_guidICvEngineUtility4 DD 0dd8a29a2H
	DW	0e752H
	DW	04bf7H
	DB	09eH
	DB	0e0H
	DB	042H
	DB	0b8H
	DB	015H
	DB	05fH
	DB	017H
	DB	05fH
CONST	ENDS
PUBLIC	??_7ICvUnknown@@6B@				; ICvUnknown::`vftable'
PUBLIC	??0ICvUnknown@@QAE@XZ				; ICvUnknown::ICvUnknown
PUBLIC	??_R4ICvUnknown@@6B@				; ICvUnknown::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVICvUnknown@@@8				; ICvUnknown `RTTI Type Descriptor'
PUBLIC	??_R3ICvUnknown@@8				; ICvUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICvUnknown@@8				; ICvUnknown::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICvUnknown@@8			; ICvUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	__purecall:PROC
;	COMDAT ??_R1A@?0A@EA@ICvUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICvUnknown@@8 DD FLAT:??_R0?AVICvUnknown@@@8 ; ICvUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICvUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2ICvUnknown@@8
rdata$r	SEGMENT
??_R2ICvUnknown@@8 DD FLAT:??_R1A@?0A@EA@ICvUnknown@@8	; ICvUnknown::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ICvUnknown@@8
rdata$r	SEGMENT
??_R3ICvUnknown@@8 DD 00H				; ICvUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ICvUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVICvUnknown@@@8
_DATA	SEGMENT
??_R0?AVICvUnknown@@@8 DD FLAT:??_7type_info@@6B@	; ICvUnknown `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVICvUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ICvUnknown@@6B@
rdata$r	SEGMENT
??_R4ICvUnknown@@6B@ DD 00H				; ICvUnknown::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVICvUnknown@@@8
	DD	FLAT:??_R3ICvUnknown@@8
rdata$r	ENDS
;	COMDAT ??_7ICvUnknown@@6B@
CONST	SEGMENT
??_7ICvUnknown@@6B@ DD FLAT:??_R4ICvUnknown@@6B@	; ICvUnknown::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??0ICvUnknown@@QAE@XZ
_TEXT	SEGMENT
??0ICvUnknown@@QAE@XZ PROC				; ICvUnknown::ICvUnknown, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	DWORD PTR [eax], OFFSET ??_7ICvUnknown@@6B@
	ret	0
??0ICvUnknown@@QAE@XZ ENDP				; ICvUnknown::ICvUnknown
_TEXT	ENDS
PUBLIC	_IsEqualGUID
; Function compile flags: /Ogtpy
; File c:\program files\microsoft sdks\windows\v6.0a\include\guiddef.h
;	COMDAT _IsEqualGUID
_TEXT	SEGMENT
_rguid1$ = 8						; size = 4
_rguid2$ = 12						; size = 4
_IsEqualGUID PROC					; COMDAT

; 161  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

	mov	ecx, DWORD PTR _rguid2$[esp-4]
	mov	edx, DWORD PTR _rguid1$[esp-4]
	mov	eax, 16					; 00000010H
	push	esi
	npad	2
$LL4@IsEqualGUI:
	mov	esi, DWORD PTR [edx]
	cmp	esi, DWORD PTR [ecx]
	jne	SHORT $LN5@IsEqualGUI
	sub	eax, 4
	add	ecx, 4
	add	edx, 4
	cmp	eax, 4
	jae	SHORT $LL4@IsEqualGUI
	xor	eax, eax
	xor	edx, edx
	test	eax, eax
	sete	dl
	pop	esi
	mov	eax, edx

; 162  : }

	ret	0
$LN5@IsEqualGUI:

; 161  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

	movzx	eax, BYTE PTR [edx]
	movzx	esi, BYTE PTR [ecx]
	sub	eax, esi
	jne	SHORT $LN7@IsEqualGUI
	movzx	eax, BYTE PTR [edx+1]
	movzx	esi, BYTE PTR [ecx+1]
	sub	eax, esi
	jne	SHORT $LN7@IsEqualGUI
	movzx	eax, BYTE PTR [edx+2]
	movzx	esi, BYTE PTR [ecx+2]
	sub	eax, esi
	jne	SHORT $LN7@IsEqualGUI
	movzx	eax, BYTE PTR [edx+3]
	movzx	ecx, BYTE PTR [ecx+3]
	sub	eax, ecx
$LN7@IsEqualGUI:
	sar	eax, 31					; 0000001fH
	or	eax, 1
	xor	edx, edx
	test	eax, eax
	sete	dl
	pop	esi
	mov	eax, edx

; 162  : }

	ret	0
_IsEqualGUID ENDP
_TEXT	ENDS
PUBLIC	??_GCvDllNetworkSyncronization@@QAEPAXI@Z	; CvDllNetworkSyncronization::`scalar deleting destructor'
EXTRN	??3CvDllNetworkSyncronization@@SAXPAX@Z:PROC	; CvDllNetworkSyncronization::operator delete
EXTRN	??1CvDllNetworkSyncronization@@QAE@XZ:PROC	; CvDllNetworkSyncronization::~CvDllNetworkSyncronization
; Function compile flags: /Ogtpy
;	COMDAT ??_GCvDllNetworkSyncronization@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCvDllNetworkSyncronization@@QAEPAXI@Z PROC		; CvDllNetworkSyncronization::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	call	??1CvDllNetworkSyncronization@@QAE@XZ	; CvDllNetworkSyncronization::~CvDllNetworkSyncronization
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN4@scalar
	push	esi
	call	??3CvDllNetworkSyncronization@@SAXPAX@Z	; CvDllNetworkSyncronization::operator delete
	add	esp, 4
$LN4@scalar:
	mov	eax, esi
	pop	esi
	ret	4
??_GCvDllNetworkSyncronization@@QAEPAXI@Z ENDP		; CvDllNetworkSyncronization::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	_==
; Function compile flags: /Ogtpy
;	COMDAT _==
_TEXT	SEGMENT
_guidOne$ = 8						; size = 4
_guidOther$ = 12					; size = 4
_==	PROC						; COMDAT

; 194  :     return IsEqualGUID(guidOne,guidOther);

	jmp	_IsEqualGUID
_==	ENDP
_TEXT	ENDS
PUBLIC	??_GCvDllNetMessageHandler@@QAEPAXI@Z		; CvDllNetMessageHandler::`scalar deleting destructor'
EXTRN	??3CvDllNetMessageHandler@@SAXPAX@Z:PROC	; CvDllNetMessageHandler::operator delete
EXTRN	??1CvDllNetMessageHandler@@QAE@XZ:PROC		; CvDllNetMessageHandler::~CvDllNetMessageHandler
; Function compile flags: /Ogtpy
;	COMDAT ??_GCvDllNetMessageHandler@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCvDllNetMessageHandler@@QAEPAXI@Z PROC		; CvDllNetMessageHandler::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	call	??1CvDllNetMessageHandler@@QAE@XZ	; CvDllNetMessageHandler::~CvDllNetMessageHandler
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN4@scalar@2
	push	esi
	call	??3CvDllNetMessageHandler@@SAXPAX@Z	; CvDllNetMessageHandler::operator delete
	add	esp, 4
$LN4@scalar@2:
	mov	eax, esi
	pop	esi
	ret	4
??_GCvDllNetMessageHandler@@QAEPAXI@Z ENDP		; CvDllNetMessageHandler::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_GCvDllScriptSystemUtility@@QAEPAXI@Z		; CvDllScriptSystemUtility::`scalar deleting destructor'
EXTRN	??3CvDllScriptSystemUtility@@SAXPAX@Z:PROC	; CvDllScriptSystemUtility::operator delete
EXTRN	??1CvDllScriptSystemUtility@@QAE@XZ:PROC	; CvDllScriptSystemUtility::~CvDllScriptSystemUtility
; Function compile flags: /Ogtpy
;	COMDAT ??_GCvDllScriptSystemUtility@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCvDllScriptSystemUtility@@QAEPAXI@Z PROC		; CvDllScriptSystemUtility::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	call	??1CvDllScriptSystemUtility@@QAE@XZ	; CvDllScriptSystemUtility::~CvDllScriptSystemUtility
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN4@scalar@3
	push	esi
	call	??3CvDllScriptSystemUtility@@SAXPAX@Z	; CvDllScriptSystemUtility::operator delete
	add	esp, 4
$LN4@scalar@3:
	mov	eax, esi
	pop	esi
	ret	4
??_GCvDllScriptSystemUtility@@QAEPAXI@Z ENDP		; CvDllScriptSystemUtility::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_GCvDllWorldBuilderMapLoader@@QAEPAXI@Z	; CvDllWorldBuilderMapLoader::`scalar deleting destructor'
EXTRN	??3CvDllWorldBuilderMapLoader@@SAXPAX@Z:PROC	; CvDllWorldBuilderMapLoader::operator delete
EXTRN	??1CvDllWorldBuilderMapLoader@@QAE@XZ:PROC	; CvDllWorldBuilderMapLoader::~CvDllWorldBuilderMapLoader
; Function compile flags: /Ogtpy
;	COMDAT ??_GCvDllWorldBuilderMapLoader@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCvDllWorldBuilderMapLoader@@QAEPAXI@Z PROC		; CvDllWorldBuilderMapLoader::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	call	??1CvDllWorldBuilderMapLoader@@QAE@XZ	; CvDllWorldBuilderMapLoader::~CvDllWorldBuilderMapLoader
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN4@scalar@4
	push	esi
	call	??3CvDllWorldBuilderMapLoader@@SAXPAX@Z	; CvDllWorldBuilderMapLoader::operator delete
	add	esp, 4
$LN4@scalar@4:
	mov	eax, esi
	pop	esi
	ret	4
??_GCvDllWorldBuilderMapLoader@@QAEPAXI@Z ENDP		; CvDllWorldBuilderMapLoader::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_GCvDllNetInitInfo@@QAEPAXI@Z			; CvDllNetInitInfo::`scalar deleting destructor'
EXTRN	??3CvDllNetInitInfo@@SAXPAX@Z:PROC		; CvDllNetInitInfo::operator delete
EXTRN	??1CvDllNetInitInfo@@QAE@XZ:PROC		; CvDllNetInitInfo::~CvDllNetInitInfo
; Function compile flags: /Ogtpy
;	COMDAT ??_GCvDllNetInitInfo@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCvDllNetInitInfo@@QAEPAXI@Z PROC			; CvDllNetInitInfo::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	call	??1CvDllNetInitInfo@@QAE@XZ		; CvDllNetInitInfo::~CvDllNetInitInfo
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN4@scalar@5
	push	esi
	call	??3CvDllNetInitInfo@@SAXPAX@Z		; CvDllNetInitInfo::operator delete
	add	esp, 4
$LN4@scalar@5:
	mov	eax, esi
	pop	esi
	ret	4
??_GCvDllNetInitInfo@@QAEPAXI@Z ENDP			; CvDllNetInitInfo::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_GCvDllNetLoadGameInfo@@QAEPAXI@Z		; CvDllNetLoadGameInfo::`scalar deleting destructor'
EXTRN	??3CvDllNetLoadGameInfo@@SAXPAX@Z:PROC		; CvDllNetLoadGameInfo::operator delete
EXTRN	??1CvDllNetLoadGameInfo@@QAE@XZ:PROC		; CvDllNetLoadGameInfo::~CvDllNetLoadGameInfo
; Function compile flags: /Ogtpy
;	COMDAT ??_GCvDllNetLoadGameInfo@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCvDllNetLoadGameInfo@@QAEPAXI@Z PROC		; CvDllNetLoadGameInfo::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	call	??1CvDllNetLoadGameInfo@@QAE@XZ		; CvDllNetLoadGameInfo::~CvDllNetLoadGameInfo
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN4@scalar@6
	push	esi
	call	??3CvDllNetLoadGameInfo@@SAXPAX@Z	; CvDllNetLoadGameInfo::operator delete
	add	esp, 4
$LN4@scalar@6:
	mov	eax, esi
	pop	esi
	ret	4
??_GCvDllNetLoadGameInfo@@QAEPAXI@Z ENDP		; CvDllNetLoadGameInfo::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?GetDLLGUID@CvDllGameContext@@UAG?AU_GUID@@XZ	; CvDllGameContext::GetDLLGUID
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvdllcontext.cpp
;	COMDAT ?GetDLLGUID@CvDllGameContext@@UAG?AU_GUID@@XZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
___$ReturnUdt$ = 12					; size = 4
?GetDLLGUID@CvDllGameContext@@UAG?AU_GUID@@XZ PROC	; CvDllGameContext::GetDLLGUID, COMDAT

; 115  : 	return CIV5_XP2_DLL_GUID;

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	ecx, DWORD PTR _CIV5_XP2_DLL_GUID
	mov	edx, DWORD PTR _CIV5_XP2_DLL_GUID+4
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR _CIV5_XP2_DLL_GUID+8
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR _CIV5_XP2_DLL_GUID+12
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx

; 116  : }

	ret	8
?GetDLLGUID@CvDllGameContext@@UAG?AU_GUID@@XZ ENDP	; CvDllGameContext::GetDLLGUID
_TEXT	ENDS
PUBLIC	?GetDLLVersion@CvDllGameContext@@UAGPBDXZ	; CvDllGameContext::GetDLLVersion
; Function compile flags: /Ogtpy
;	COMDAT ?GetDLLVersion@CvDllGameContext@@UAGPBDXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetDLLVersion@CvDllGameContext@@UAGPBDXZ PROC		; CvDllGameContext::GetDLLVersion, COMDAT

; 121  : 	return CIV5_XP2_DLL_VERSION;

	mov	eax, DWORD PTR _CIV5_XP2_DLL_VERSION

; 122  : }

	ret	4
?GetDLLVersion@CvDllGameContext@@UAGPBDXZ ENDP		; CvDllGameContext::GetDLLVersion
_TEXT	ENDS
PUBLIC	?Destroy@CvDllGameContext@@MAGXXZ		; CvDllGameContext::Destroy
; Function compile flags: /Ogtpy
;	COMDAT ?Destroy@CvDllGameContext@@MAGXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Destroy@CvDllGameContext@@MAGXXZ PROC			; CvDllGameContext::Destroy, COMDAT

; 127  : 	//Do nothing, it's a singleton controlled by the DLL.
; 128  : }

	ret	4
?Destroy@CvDllGameContext@@MAGXXZ ENDP			; CvDllGameContext::Destroy
_TEXT	ENDS
PUBLIC	?GetSingleton@CvDllGameContext@@SAPAV1@XZ	; CvDllGameContext::GetSingleton
; Function compile flags: /Ogtpy
;	COMDAT ?GetSingleton@CvDllGameContext@@SAPAV1@XZ
_TEXT	SEGMENT
?GetSingleton@CvDllGameContext@@SAPAV1@XZ PROC		; CvDllGameContext::GetSingleton, COMDAT

; 160  : 	return s_pSingleton;

	mov	eax, DWORD PTR ?s_pSingleton@CvDllGameContext@@0PAV1@A ; CvDllGameContext::s_pSingleton

; 161  : }

	ret	0
?GetSingleton@CvDllGameContext@@SAPAV1@XZ ENDP		; CvDllGameContext::GetSingleton
_TEXT	ENDS
PUBLIC	?GetHeap@CvDllGameContext@@QAEPAXXZ		; CvDllGameContext::GetHeap
; Function compile flags: /Ogtpy
;	COMDAT ?GetHeap@CvDllGameContext@@QAEPAXXZ
_TEXT	SEGMENT
?GetHeap@CvDllGameContext@@QAEPAXXZ PROC		; CvDllGameContext::GetHeap, COMDAT
; _this$ = ecx

; 165  : 	return s_hHeap;

	mov	eax, DWORD PTR ?s_hHeap@CvDllGameContext@@0PAXA ; CvDllGameContext::s_hHeap

; 166  : }

	ret	0
?GetHeap@CvDllGameContext@@QAEPAXXZ ENDP		; CvDllGameContext::GetHeap
_TEXT	ENDS
PUBLIC	?Debug_GetHeap@CvDllGameContext@@UBGPAXXZ	; CvDllGameContext::Debug_GetHeap
; Function compile flags: /Ogtpy
;	COMDAT ?Debug_GetHeap@CvDllGameContext@@UBGPAXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Debug_GetHeap@CvDllGameContext@@UBGPAXXZ PROC		; CvDllGameContext::Debug_GetHeap, COMDAT

; 170  : 	return s_hHeap;

	mov	eax, DWORD PTR ?s_hHeap@CvDllGameContext@@0PAXA ; CvDllGameContext::s_hHeap

; 171  : }

	ret	4
?Debug_GetHeap@CvDllGameContext@@UBGPAXXZ ENDP		; CvDllGameContext::Debug_GetHeap
_TEXT	ENDS
PUBLIC	?Allocate@CvDllGameContext@@SAPAXI@Z		; CvDllGameContext::Allocate
EXTRN	__imp__HeapAlloc@12:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?Allocate@CvDllGameContext@@SAPAXI@Z
_TEXT	SEGMENT
_bytes$ = 8						; size = 4
?Allocate@CvDllGameContext@@SAPAXI@Z PROC		; CvDllGameContext::Allocate, COMDAT

; 179  : 	return HeapAlloc(s_hHeap, 0, bytes);

	mov	eax, DWORD PTR _bytes$[esp-4]
	mov	ecx, DWORD PTR ?s_hHeap@CvDllGameContext@@0PAXA ; CvDllGameContext::s_hHeap
	push	eax
	push	0
	push	ecx
	call	DWORD PTR __imp__HeapAlloc@12

; 180  : }

	ret	0
?Allocate@CvDllGameContext@@SAPAXI@Z ENDP		; CvDllGameContext::Allocate
_TEXT	ENDS
PUBLIC	?Free@CvDllGameContext@@SAXPAX@Z		; CvDllGameContext::Free
EXTRN	__imp__HeapFree@12:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?Free@CvDllGameContext@@SAXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?Free@CvDllGameContext@@SAXPAX@Z PROC			; CvDllGameContext::Free, COMDAT

; 188  : 	HeapFree(s_hHeap, 0, p);

	mov	eax, DWORD PTR _p$[esp-4]
	mov	ecx, DWORD PTR ?s_hHeap@CvDllGameContext@@0PAXA ; CvDllGameContext::s_hHeap
	push	eax
	push	0
	push	ecx
	call	DWORD PTR __imp__HeapFree@12

; 189  : }

	ret	0
?Free@CvDllGameContext@@SAXPAX@Z ENDP			; CvDllGameContext::Free
_TEXT	ENDS
PUBLIC	?GetNetworkSyncronizer@CvDllGameContext@@UAGPAVICvNetworkSyncronization1@@XZ ; CvDllGameContext::GetNetworkSyncronizer
; Function compile flags: /Ogtpy
;	COMDAT ?GetNetworkSyncronizer@CvDllGameContext@@UAGPAVICvNetworkSyncronization1@@XZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetNetworkSyncronizer@CvDllGameContext@@UAGPAVICvNetworkSyncronization1@@XZ PROC ; CvDllGameContext::GetNetworkSyncronizer, COMDAT

; 193  : 	return m_pNetworkSyncronizer;

	mov	eax, DWORD PTR _this$[esp-4]
	mov	eax, DWORD PTR [eax+4]

; 194  : }

	ret	4
?GetNetworkSyncronizer@CvDllGameContext@@UAGPAVICvNetworkSyncronization1@@XZ ENDP ; CvDllGameContext::GetNetworkSyncronizer
_TEXT	ENDS
PUBLIC	?GetWorldBuilderMapLoader@CvDllGameContext@@UAGPAVICvWorldBuilderMapLoader1@@XZ ; CvDllGameContext::GetWorldBuilderMapLoader
; Function compile flags: /Ogtpy
;	COMDAT ?GetWorldBuilderMapLoader@CvDllGameContext@@UAGPAVICvWorldBuilderMapLoader1@@XZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetWorldBuilderMapLoader@CvDllGameContext@@UAGPAVICvWorldBuilderMapLoader1@@XZ PROC ; CvDllGameContext::GetWorldBuilderMapLoader, COMDAT

; 203  : 	return m_pWorldBuilderMapLoader;

	mov	eax, DWORD PTR _this$[esp-4]
	mov	eax, DWORD PTR [eax+16]

; 204  : }

	ret	4
?GetWorldBuilderMapLoader@CvDllGameContext@@UAGPAVICvWorldBuilderMapLoader1@@XZ ENDP ; CvDllGameContext::GetWorldBuilderMapLoader
_TEXT	ENDS
PUBLIC	?GetPreGame@CvDllGameContext@@UAGPAVICvPreGame1@@XZ ; CvDllGameContext::GetPreGame
EXTRN	??3CvDllPreGame@@SAXPAX@Z:PROC			; CvDllPreGame::operator delete
EXTRN	??0CvDllPreGame@@QAE@XZ:PROC			; CvDllPreGame::CvDllPreGame
EXTRN	??2CvDllPreGame@@SAPAXI@Z:PROC			; CvDllPreGame::operator new
EXTRN	___CxxFrameHandler3:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetPreGame@CvDllGameContext@@UAGPAVICvPreGame1@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetPreGame@CvDllGameContext@@UAGPAVICvPreGame1@@XZ$0
__ehfuncinfo$?GetPreGame@CvDllGameContext@@UAGPAVICvPreGame1@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetPreGame@CvDllGameContext@@UAGPAVICvPreGame1@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?GetPreGame@CvDllGameContext@@UAGPAVICvPreGame1@@XZ
_TEXT	SEGMENT
$T227840 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
?GetPreGame@CvDllGameContext@@UAGPAVICvPreGame1@@XZ PROC ; CvDllGameContext::GetPreGame, COMDAT

; 207  : {

	push	-1
	push	__ehhandler$?GetPreGame@CvDllGameContext@@UAGPAVICvPreGame1@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx

; 208  : 	return new CvDllPreGame();

	push	4
	call	??2CvDllPreGame@@SAPAXI@Z		; CvDllPreGame::operator new
	add	esp, 4
	mov	DWORD PTR $T227840[esp+16], eax
	mov	DWORD PTR __$EHRec$[esp+24], 0
	test	eax, eax
	je	SHORT $LN3@GetPreGame
	mov	ecx, eax
	call	??0CvDllPreGame@@QAE@XZ			; CvDllPreGame::CvDllPreGame

; 209  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	4
$LN3@GetPreGame:
	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	xor	eax, eax
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetPreGame@CvDllGameContext@@UAGPAVICvPreGame1@@XZ$0:
	mov	eax, DWORD PTR $T227840[ebp]
	push	eax
	call	??3CvDllPreGame@@SAXPAX@Z		; CvDllPreGame::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetPreGame@CvDllGameContext@@UAGPAVICvPreGame1@@XZ:
	mov	eax, OFFSET __ehfuncinfo$?GetPreGame@CvDllGameContext@@UAGPAVICvPreGame1@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetPreGame@CvDllGameContext@@UAGPAVICvPreGame1@@XZ ENDP ; CvDllGameContext::GetPreGame
PUBLIC	?GetInfoTypeForString@CvDllGameContext@@UBGHPBD_N@Z ; CvDllGameContext::GetInfoTypeForString
EXTRN	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z:PROC ; CvGlobals::getInfoTypeForString
EXTRN	?gGlobals@@3VCvGlobals@@A:BYTE			; gGlobals
; Function compile flags: /Ogtpy
;	COMDAT ?GetInfoTypeForString@CvDllGameContext@@UBGHPBD_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_szType$ = 12						; size = 4
_hideAssert$ = 16					; size = 1
?GetInfoTypeForString@CvDllGameContext@@UBGHPBD_N@Z PROC ; CvDllGameContext::GetInfoTypeForString, COMDAT

; 248  : 	return GC.getInfoTypeForString(szType, hideAssert);

	mov	eax, DWORD PTR _hideAssert$[esp-4]
	mov	ecx, DWORD PTR _szType$[esp-4]
	push	eax
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString

; 249  : }

	ret	12					; 0000000cH
?GetInfoTypeForString@CvDllGameContext@@UBGHPBD_N@Z ENDP ; CvDllGameContext::GetInfoTypeForString
_TEXT	ENDS
PUBLIC	?GetInfoTypeForHash@CvDllGameContext@@UBGHI_N@Z	; CvDllGameContext::GetInfoTypeForHash
EXTRN	?getInfoTypeForHash@CvGlobals@@QBEHI_N@Z:PROC	; CvGlobals::getInfoTypeForHash
; Function compile flags: /Ogtpy
;	COMDAT ?GetInfoTypeForHash@CvDllGameContext@@UBGHI_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_uiHash$ = 12						; size = 4
_hideAssert$ = 16					; size = 1
?GetInfoTypeForHash@CvDllGameContext@@UBGHI_N@Z PROC	; CvDllGameContext::GetInfoTypeForHash, COMDAT

; 253  : 	return GC.getInfoTypeForHash(uiHash, hideAssert);

	mov	eax, DWORD PTR _hideAssert$[esp-4]
	mov	ecx, DWORD PTR _uiHash$[esp-4]
	push	eax
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForHash@CvGlobals@@QBEHI_N@Z ; CvGlobals::getInfoTypeForHash

; 254  : }

	ret	12					; 0000000cH
?GetInfoTypeForHash@CvDllGameContext@@UBGHI_N@Z ENDP	; CvDllGameContext::GetInfoTypeForHash
_TEXT	ENDS
PUBLIC	?GetCivilizationInfoIndex@CvDllGameContext@@UAG?AW4CivilizationTypes@@PBD@Z ; CvDllGameContext::GetCivilizationInfoIndex
EXTRN	?getCivilizationInfoIndex@CvGlobals@@QAE?AW4CivilizationTypes@@PBD@Z:PROC ; CvGlobals::getCivilizationInfoIndex
; Function compile flags: /Ogtpy
;	COMDAT ?GetCivilizationInfoIndex@CvDllGameContext@@UAG?AW4CivilizationTypes@@PBD@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pszType$ = 12						; size = 4
?GetCivilizationInfoIndex@CvDllGameContext@@UAG?AW4CivilizationTypes@@PBD@Z PROC ; CvDllGameContext::GetCivilizationInfoIndex, COMDAT

; 258  : 	return GC.getCivilizationInfoIndex(pszType);

	mov	eax, DWORD PTR _pszType$[esp-4]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getCivilizationInfoIndex@CvGlobals@@QAE?AW4CivilizationTypes@@PBD@Z ; CvGlobals::getCivilizationInfoIndex

; 259  : }

	ret	8
?GetCivilizationInfoIndex@CvDllGameContext@@UAG?AW4CivilizationTypes@@PBD@Z ENDP ; CvDllGameContext::GetCivilizationInfoIndex
_TEXT	ENDS
PUBLIC	?GetNumPlayableCivilizationInfos@CvDllGameContext@@UAGHXZ ; CvDllGameContext::GetNumPlayableCivilizationInfos
EXTRN	?getNumPlayableCivilizationInfos@CvGlobals@@QAEAAHXZ:PROC ; CvGlobals::getNumPlayableCivilizationInfos
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumPlayableCivilizationInfos@CvDllGameContext@@UAGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetNumPlayableCivilizationInfos@CvDllGameContext@@UAGHXZ PROC ; CvDllGameContext::GetNumPlayableCivilizationInfos, COMDAT

; 263  : 	return GC.getNumPlayableCivilizationInfos();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumPlayableCivilizationInfos@CvGlobals@@QAEAAHXZ ; CvGlobals::getNumPlayableCivilizationInfos
	mov	eax, DWORD PTR [eax]

; 264  : }

	ret	4
?GetNumPlayableCivilizationInfos@CvDllGameContext@@UAGHXZ ENDP ; CvDllGameContext::GetNumPlayableCivilizationInfos
_TEXT	ENDS
PUBLIC	?GetNumAIPlayableCivilizationInfos@CvDllGameContext@@UAGHXZ ; CvDllGameContext::GetNumAIPlayableCivilizationInfos
EXTRN	?getNumAIPlayableCivilizationInfos@CvGlobals@@QAEAAHXZ:PROC ; CvGlobals::getNumAIPlayableCivilizationInfos
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumAIPlayableCivilizationInfos@CvDllGameContext@@UAGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetNumAIPlayableCivilizationInfos@CvDllGameContext@@UAGHXZ PROC ; CvDllGameContext::GetNumAIPlayableCivilizationInfos, COMDAT

; 268  : 	return GC.getNumAIPlayableCivilizationInfos();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumAIPlayableCivilizationInfos@CvGlobals@@QAEAAHXZ ; CvGlobals::getNumAIPlayableCivilizationInfos
	mov	eax, DWORD PTR [eax]

; 269  : }

	ret	4
?GetNumAIPlayableCivilizationInfos@CvDllGameContext@@UAGHXZ ENDP ; CvDllGameContext::GetNumAIPlayableCivilizationInfos
_TEXT	ENDS
PUBLIC	?GetNumPlayableMinorCivs@CvDllGameContext@@UAGHXZ ; CvDllGameContext::GetNumPlayableMinorCivs
EXTRN	?GetNumPlayableMinorCivs@CvGlobals@@QBEHXZ:PROC	; CvGlobals::GetNumPlayableMinorCivs
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumPlayableMinorCivs@CvDllGameContext@@UAGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetNumPlayableMinorCivs@CvDllGameContext@@UAGHXZ PROC	; CvDllGameContext::GetNumPlayableMinorCivs, COMDAT

; 273  : 	return GC.GetNumPlayableMinorCivs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetNumPlayableMinorCivs@CvGlobals@@QBEHXZ ; CvGlobals::GetNumPlayableMinorCivs

; 274  : }

	ret	4
?GetNumPlayableMinorCivs@CvDllGameContext@@UAGHXZ ENDP	; CvDllGameContext::GetNumPlayableMinorCivs
_TEXT	ENDS
PUBLIC	?GetNumBuildInfos@CvDllGameContext@@UAGHXZ	; CvDllGameContext::GetNumBuildInfos
EXTRN	?getNumBuildInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumBuildInfos
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumBuildInfos@CvDllGameContext@@UAGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetNumBuildInfos@CvDllGameContext@@UAGHXZ PROC		; CvDllGameContext::GetNumBuildInfos, COMDAT

; 278  : 	return GC.getNumBuildInfos();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumBuildInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumBuildInfos

; 279  : }

	ret	4
?GetNumBuildInfos@CvDllGameContext@@UAGHXZ ENDP		; CvDllGameContext::GetNumBuildInfos
_TEXT	ENDS
PUBLIC	?GetNumBuildingInfos@CvDllGameContext@@UAGHXZ	; CvDllGameContext::GetNumBuildingInfos
EXTRN	?getNumBuildingInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumBuildingInfos
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumBuildingInfos@CvDllGameContext@@UAGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetNumBuildingInfos@CvDllGameContext@@UAGHXZ PROC	; CvDllGameContext::GetNumBuildingInfos, COMDAT

; 283  : 	return GC.getNumBuildingInfos();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumBuildingInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumBuildingInfos

; 284  : }

	ret	4
?GetNumBuildingInfos@CvDllGameContext@@UAGHXZ ENDP	; CvDllGameContext::GetNumBuildingInfos
_TEXT	ENDS
PUBLIC	?GetNumCivilizationInfos@CvDllGameContext@@UAGHXZ ; CvDllGameContext::GetNumCivilizationInfos
EXTRN	?getNumCivilizationInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumCivilizationInfos
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumCivilizationInfos@CvDllGameContext@@UAGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetNumCivilizationInfos@CvDllGameContext@@UAGHXZ PROC	; CvDllGameContext::GetNumCivilizationInfos, COMDAT

; 288  : 	return GC.getNumCivilizationInfos();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumCivilizationInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumCivilizationInfos

; 289  : }

	ret	4
?GetNumCivilizationInfos@CvDllGameContext@@UAGHXZ ENDP	; CvDllGameContext::GetNumCivilizationInfos
_TEXT	ENDS
PUBLIC	?GetNumClimateInfos@CvDllGameContext@@UAGHXZ	; CvDllGameContext::GetNumClimateInfos
EXTRN	?getNumClimateInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumClimateInfos
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumClimateInfos@CvDllGameContext@@UAGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetNumClimateInfos@CvDllGameContext@@UAGHXZ PROC	; CvDllGameContext::GetNumClimateInfos, COMDAT

; 293  : 	return GC.getNumClimateInfos();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumClimateInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumClimateInfos

; 294  : }

	ret	4
?GetNumClimateInfos@CvDllGameContext@@UAGHXZ ENDP	; CvDllGameContext::GetNumClimateInfos
_TEXT	ENDS
PUBLIC	?GetNumColorInfos@CvDllGameContext@@UAGHXZ	; CvDllGameContext::GetNumColorInfos
EXTRN	?GetNumColorInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::GetNumColorInfos
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumColorInfos@CvDllGameContext@@UAGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetNumColorInfos@CvDllGameContext@@UAGHXZ PROC		; CvDllGameContext::GetNumColorInfos, COMDAT

; 298  : 	return GC.GetNumColorInfos();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetNumColorInfos@CvGlobals@@QAEHXZ	; CvGlobals::GetNumColorInfos

; 299  : }

	ret	4
?GetNumColorInfos@CvDllGameContext@@UAGHXZ ENDP		; CvDllGameContext::GetNumColorInfos
_TEXT	ENDS
PUBLIC	?GetNumEraInfos@CvDllGameContext@@UAGHXZ	; CvDllGameContext::GetNumEraInfos
EXTRN	?getNumEraInfos@CvGlobals@@QAEHXZ:PROC		; CvGlobals::getNumEraInfos
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumEraInfos@CvDllGameContext@@UAGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetNumEraInfos@CvDllGameContext@@UAGHXZ PROC		; CvDllGameContext::GetNumEraInfos, COMDAT

; 303  : 	return GC.getNumEraInfos();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumEraInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumEraInfos

; 304  : }

	ret	4
?GetNumEraInfos@CvDllGameContext@@UAGHXZ ENDP		; CvDllGameContext::GetNumEraInfos
_TEXT	ENDS
PUBLIC	?GetNumFeatureInfos@CvDllGameContext@@UAGHXZ	; CvDllGameContext::GetNumFeatureInfos
EXTRN	?getNumFeatureInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumFeatureInfos
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumFeatureInfos@CvDllGameContext@@UAGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetNumFeatureInfos@CvDllGameContext@@UAGHXZ PROC	; CvDllGameContext::GetNumFeatureInfos, COMDAT

; 308  : 	return GC.getNumFeatureInfos();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumFeatureInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumFeatureInfos

; 309  : }

	ret	4
?GetNumFeatureInfos@CvDllGameContext@@UAGHXZ ENDP	; CvDllGameContext::GetNumFeatureInfos
_TEXT	ENDS
PUBLIC	?GetNumGameOptionInfos@CvDllGameContext@@UAGHXZ	; CvDllGameContext::GetNumGameOptionInfos
EXTRN	?getNumGameOptionInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumGameOptionInfos
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumGameOptionInfos@CvDllGameContext@@UAGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetNumGameOptionInfos@CvDllGameContext@@UAGHXZ PROC	; CvDllGameContext::GetNumGameOptionInfos, COMDAT

; 313  : 	return GC.getNumGameOptionInfos();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumGameOptionInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumGameOptionInfos

; 314  : }

	ret	4
?GetNumGameOptionInfos@CvDllGameContext@@UAGHXZ ENDP	; CvDllGameContext::GetNumGameOptionInfos
_TEXT	ENDS
PUBLIC	?GetNumGameSpeedInfos@CvDllGameContext@@UAGHXZ	; CvDllGameContext::GetNumGameSpeedInfos
EXTRN	?getNumGameSpeedInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumGameSpeedInfos
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumGameSpeedInfos@CvDllGameContext@@UAGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetNumGameSpeedInfos@CvDllGameContext@@UAGHXZ PROC	; CvDllGameContext::GetNumGameSpeedInfos, COMDAT

; 318  : 	return GC.getNumGameSpeedInfos();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumGameSpeedInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumGameSpeedInfos

; 319  : }

	ret	4
?GetNumGameSpeedInfos@CvDllGameContext@@UAGHXZ ENDP	; CvDllGameContext::GetNumGameSpeedInfos
_TEXT	ENDS
PUBLIC	?GetNumHandicapInfos@CvDllGameContext@@UAGHXZ	; CvDllGameContext::GetNumHandicapInfos
EXTRN	?getNumHandicapInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumHandicapInfos
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumHandicapInfos@CvDllGameContext@@UAGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetNumHandicapInfos@CvDllGameContext@@UAGHXZ PROC	; CvDllGameContext::GetNumHandicapInfos, COMDAT

; 323  : 	return GC.getNumHandicapInfos();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumHandicapInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumHandicapInfos

; 324  : }

	ret	4
?GetNumHandicapInfos@CvDllGameContext@@UAGHXZ ENDP	; CvDllGameContext::GetNumHandicapInfos
_TEXT	ENDS
PUBLIC	?GetNumImprovementInfos@CvDllGameContext@@UAGHXZ ; CvDllGameContext::GetNumImprovementInfos
EXTRN	?getNumImprovementInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumImprovementInfos
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumImprovementInfos@CvDllGameContext@@UAGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetNumImprovementInfos@CvDllGameContext@@UAGHXZ PROC	; CvDllGameContext::GetNumImprovementInfos, COMDAT

; 328  : 	return GC.getNumImprovementInfos();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumImprovementInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumImprovementInfos

; 329  : }

	ret	4
?GetNumImprovementInfos@CvDllGameContext@@UAGHXZ ENDP	; CvDllGameContext::GetNumImprovementInfos
_TEXT	ENDS
PUBLIC	?GetNumLeaderHeadInfos@CvDllGameContext@@UAGHXZ	; CvDllGameContext::GetNumLeaderHeadInfos
EXTRN	?getNumLeaderHeadInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumLeaderHeadInfos
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumLeaderHeadInfos@CvDllGameContext@@UAGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetNumLeaderHeadInfos@CvDllGameContext@@UAGHXZ PROC	; CvDllGameContext::GetNumLeaderHeadInfos, COMDAT

; 333  : 	return GC.getNumLeaderHeadInfos();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumLeaderHeadInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumLeaderHeadInfos

; 334  : }

	ret	4
?GetNumLeaderHeadInfos@CvDllGameContext@@UAGHXZ ENDP	; CvDllGameContext::GetNumLeaderHeadInfos
_TEXT	ENDS
PUBLIC	?GetNumMinorCivInfos@CvDllGameContext@@UAGHXZ	; CvDllGameContext::GetNumMinorCivInfos
EXTRN	?getNumMinorCivInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumMinorCivInfos
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumMinorCivInfos@CvDllGameContext@@UAGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetNumMinorCivInfos@CvDllGameContext@@UAGHXZ PROC	; CvDllGameContext::GetNumMinorCivInfos, COMDAT

; 338  : 	return GC.getNumMinorCivInfos();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumMinorCivInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumMinorCivInfos

; 339  : }

	ret	4
?GetNumMinorCivInfos@CvDllGameContext@@UAGHXZ ENDP	; CvDllGameContext::GetNumMinorCivInfos
_TEXT	ENDS
PUBLIC	?GetNumPlayerColorInfos@CvDllGameContext@@UAGHXZ ; CvDllGameContext::GetNumPlayerColorInfos
EXTRN	?GetNumPlayerColorInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::GetNumPlayerColorInfos
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumPlayerColorInfos@CvDllGameContext@@UAGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetNumPlayerColorInfos@CvDllGameContext@@UAGHXZ PROC	; CvDllGameContext::GetNumPlayerColorInfos, COMDAT

; 343  : 	return GC.GetNumPlayerColorInfos();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetNumPlayerColorInfos@CvGlobals@@QAEHXZ ; CvGlobals::GetNumPlayerColorInfos

; 344  : }

	ret	4
?GetNumPlayerColorInfos@CvDllGameContext@@UAGHXZ ENDP	; CvDllGameContext::GetNumPlayerColorInfos
_TEXT	ENDS
PUBLIC	?GetNumPolicyInfos@CvDllGameContext@@UAGHXZ	; CvDllGameContext::GetNumPolicyInfos
EXTRN	?getNumPolicyInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumPolicyInfos
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumPolicyInfos@CvDllGameContext@@UAGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetNumPolicyInfos@CvDllGameContext@@UAGHXZ PROC	; CvDllGameContext::GetNumPolicyInfos, COMDAT

; 348  : 	return GC.getNumPolicyInfos();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumPolicyInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumPolicyInfos

; 349  : }

	ret	4
?GetNumPolicyInfos@CvDllGameContext@@UAGHXZ ENDP	; CvDllGameContext::GetNumPolicyInfos
_TEXT	ENDS
PUBLIC	?GetNumPromotionInfos@CvDllGameContext@@UAGHXZ	; CvDllGameContext::GetNumPromotionInfos
EXTRN	?getNumPromotionInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumPromotionInfos
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumPromotionInfos@CvDllGameContext@@UAGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetNumPromotionInfos@CvDllGameContext@@UAGHXZ PROC	; CvDllGameContext::GetNumPromotionInfos, COMDAT

; 353  : 	return GC.getNumPromotionInfos();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumPromotionInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumPromotionInfos

; 354  : }

	ret	4
?GetNumPromotionInfos@CvDllGameContext@@UAGHXZ ENDP	; CvDllGameContext::GetNumPromotionInfos
_TEXT	ENDS
PUBLIC	?GetNumResourceInfos@CvDllGameContext@@UAGHXZ	; CvDllGameContext::GetNumResourceInfos
EXTRN	?getNumResourceInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumResourceInfos
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumResourceInfos@CvDllGameContext@@UAGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetNumResourceInfos@CvDllGameContext@@UAGHXZ PROC	; CvDllGameContext::GetNumResourceInfos, COMDAT

; 358  : 	return GC.getNumResourceInfos();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumResourceInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumResourceInfos

; 359  : }

	ret	4
?GetNumResourceInfos@CvDllGameContext@@UAGHXZ ENDP	; CvDllGameContext::GetNumResourceInfos
_TEXT	ENDS
PUBLIC	?GetNumSeaLevelInfos@CvDllGameContext@@UAGHXZ	; CvDllGameContext::GetNumSeaLevelInfos
EXTRN	?getNumSeaLevelInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumSeaLevelInfos
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumSeaLevelInfos@CvDllGameContext@@UAGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetNumSeaLevelInfos@CvDllGameContext@@UAGHXZ PROC	; CvDllGameContext::GetNumSeaLevelInfos, COMDAT

; 363  : 	return GC.getNumSeaLevelInfos();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumSeaLevelInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumSeaLevelInfos

; 364  : }

	ret	4
?GetNumSeaLevelInfos@CvDllGameContext@@UAGHXZ ENDP	; CvDllGameContext::GetNumSeaLevelInfos
_TEXT	ENDS
PUBLIC	?GetNumTechInfos@CvDllGameContext@@UAGHXZ	; CvDllGameContext::GetNumTechInfos
EXTRN	?getNumTechInfos@CvGlobals@@QAEHXZ:PROC		; CvGlobals::getNumTechInfos
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumTechInfos@CvDllGameContext@@UAGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetNumTechInfos@CvDllGameContext@@UAGHXZ PROC		; CvDllGameContext::GetNumTechInfos, COMDAT

; 368  : 	return GC.getNumTechInfos();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumTechInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumTechInfos

; 369  : }

	ret	4
?GetNumTechInfos@CvDllGameContext@@UAGHXZ ENDP		; CvDllGameContext::GetNumTechInfos
_TEXT	ENDS
PUBLIC	?GetNumTerrainInfos@CvDllGameContext@@UAGHXZ	; CvDllGameContext::GetNumTerrainInfos
EXTRN	?getNumTerrainInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumTerrainInfos
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumTerrainInfos@CvDllGameContext@@UAGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetNumTerrainInfos@CvDllGameContext@@UAGHXZ PROC	; CvDllGameContext::GetNumTerrainInfos, COMDAT

; 373  : 	return GC.getNumTerrainInfos();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumTerrainInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumTerrainInfos

; 374  : }

	ret	4
?GetNumTerrainInfos@CvDllGameContext@@UAGHXZ ENDP	; CvDllGameContext::GetNumTerrainInfos
_TEXT	ENDS
PUBLIC	?GetNumUnitCombatClassInfos@CvDllGameContext@@UAGHXZ ; CvDllGameContext::GetNumUnitCombatClassInfos
EXTRN	?getNumUnitCombatClassInfos@CvGlobals@@QAEHXZ:PROC ; CvGlobals::getNumUnitCombatClassInfos
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumUnitCombatClassInfos@CvDllGameContext@@UAGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetNumUnitCombatClassInfos@CvDllGameContext@@UAGHXZ PROC ; CvDllGameContext::GetNumUnitCombatClassInfos, COMDAT

; 378  : 	return GC.getNumUnitCombatClassInfos();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumUnitCombatClassInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumUnitCombatClassInfos

; 379  : }

	ret	4
?GetNumUnitCombatClassInfos@CvDllGameContext@@UAGHXZ ENDP ; CvDllGameContext::GetNumUnitCombatClassInfos
_TEXT	ENDS
PUBLIC	?GetNumUnitInfos@CvDllGameContext@@UAGHXZ	; CvDllGameContext::GetNumUnitInfos
EXTRN	?getNumUnitInfos@CvGlobals@@QAEHXZ:PROC		; CvGlobals::getNumUnitInfos
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumUnitInfos@CvDllGameContext@@UAGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetNumUnitInfos@CvDllGameContext@@UAGHXZ PROC		; CvDllGameContext::GetNumUnitInfos, COMDAT

; 383  : 	return GC.getNumUnitInfos();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumUnitInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumUnitInfos

; 384  : }

	ret	4
?GetNumUnitInfos@CvDllGameContext@@UAGHXZ ENDP		; CvDllGameContext::GetNumUnitInfos
_TEXT	ENDS
PUBLIC	?GetNumVictoryInfos@CvDllGameContext@@UAGHXZ	; CvDllGameContext::GetNumVictoryInfos
EXTRN	?getNumVictoryInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumVictoryInfos
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumVictoryInfos@CvDllGameContext@@UAGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetNumVictoryInfos@CvDllGameContext@@UAGHXZ PROC	; CvDllGameContext::GetNumVictoryInfos, COMDAT

; 388  : 	return GC.getNumVictoryInfos();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumVictoryInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumVictoryInfos

; 389  : }

	ret	4
?GetNumVictoryInfos@CvDllGameContext@@UAGHXZ ENDP	; CvDllGameContext::GetNumVictoryInfos
_TEXT	ENDS
PUBLIC	?GetNumWorldInfos@CvDllGameContext@@UAGHXZ	; CvDllGameContext::GetNumWorldInfos
EXTRN	?getNumWorldInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumWorldInfos
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumWorldInfos@CvDllGameContext@@UAGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetNumWorldInfos@CvDllGameContext@@UAGHXZ PROC		; CvDllGameContext::GetNumWorldInfos, COMDAT

; 393  : 	return GC.getNumWorldInfos();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumWorldInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumWorldInfos

; 394  : }

	ret	4
?GetNumWorldInfos@CvDllGameContext@@UAGHXZ ENDP		; CvDllGameContext::GetNumWorldInfos
_TEXT	ENDS
PUBLIC	?GetBuildInfo@CvDllGameContext@@UAGPAVICvBuildInfo1@@W4BuildTypes@@@Z ; CvDllGameContext::GetBuildInfo
EXTRN	??3CvDllBuildInfo@@SAXPAX@Z:PROC		; CvDllBuildInfo::operator delete
EXTRN	??0CvDllBuildInfo@@QAE@PAVCvBuildInfo@@@Z:PROC	; CvDllBuildInfo::CvDllBuildInfo
EXTRN	??2CvDllBuildInfo@@SAPAXI@Z:PROC		; CvDllBuildInfo::operator new
EXTRN	?getBuildInfo@CvGlobals@@QAEPAVCvBuildInfo@@W4BuildTypes@@@Z:PROC ; CvGlobals::getBuildInfo
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetBuildInfo@CvDllGameContext@@UAGPAVICvBuildInfo1@@W4BuildTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetBuildInfo@CvDllGameContext@@UAGPAVICvBuildInfo1@@W4BuildTypes@@@Z$0
__ehfuncinfo$?GetBuildInfo@CvDllGameContext@@UAGPAVICvBuildInfo1@@W4BuildTypes@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetBuildInfo@CvDllGameContext@@UAGPAVICvBuildInfo1@@W4BuildTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?GetBuildInfo@CvDllGameContext@@UAGPAVICvBuildInfo1@@W4BuildTypes@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
$T227947 = 12						; size = 4
_eBuildNum$ = 12					; size = 4
?GetBuildInfo@CvDllGameContext@@UAGPAVICvBuildInfo1@@W4BuildTypes@@@Z PROC ; CvDllGameContext::GetBuildInfo, COMDAT

; 397  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?GetBuildInfo@CvDllGameContext@@UAGPAVICvBuildInfo1@@W4BuildTypes@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp

; 398  : 	CvBuildInfo* pkInfo = GC.getBuildInfo(eBuildNum);

	mov	eax, DWORD PTR _eBuildNum$[esp+8]
	push	esi
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildInfo@CvGlobals@@QAEPAVCvBuildInfo@@W4BuildTypes@@@Z ; CvGlobals::getBuildInfo
	mov	esi, eax

; 399  : 	return (NULL != pkInfo)? new CvDllBuildInfo(pkInfo) : NULL;

	test	esi, esi
	je	SHORT $LN5@GetBuildIn
	push	12					; 0000000cH
	call	??2CvDllBuildInfo@@SAPAXI@Z		; CvDllBuildInfo::operator new
	add	esp, 4
	mov	DWORD PTR $T227947[esp+12], eax
	mov	DWORD PTR __$EHRec$[esp+24], 0
	test	eax, eax
	je	SHORT $LN5@GetBuildIn
	push	esi
	mov	ecx, eax
	call	??0CvDllBuildInfo@@QAE@PAVCvBuildInfo@@@Z ; CvDllBuildInfo::CvDllBuildInfo

; 400  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
$LN5@GetBuildIn:
	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	xor	eax, eax
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetBuildInfo@CvDllGameContext@@UAGPAVICvBuildInfo1@@W4BuildTypes@@@Z$0:
	mov	eax, DWORD PTR $T227947[ebp-4]
	push	eax
	call	??3CvDllBuildInfo@@SAXPAX@Z		; CvDllBuildInfo::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetBuildInfo@CvDllGameContext@@UAGPAVICvBuildInfo1@@W4BuildTypes@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?GetBuildInfo@CvDllGameContext@@UAGPAVICvBuildInfo1@@W4BuildTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetBuildInfo@CvDllGameContext@@UAGPAVICvBuildInfo1@@W4BuildTypes@@@Z ENDP ; CvDllGameContext::GetBuildInfo
PUBLIC	?GetBuildingInfo@CvDllGameContext@@UAGPAVICvBuildingInfo1@@W4BuildingTypes@@@Z ; CvDllGameContext::GetBuildingInfo
EXTRN	??3CvDllBuildingInfo@@SAXPAX@Z:PROC		; CvDllBuildingInfo::operator delete
EXTRN	??0CvDllBuildingInfo@@QAE@PAVCvBuildingEntry@@@Z:PROC ; CvDllBuildingInfo::CvDllBuildingInfo
EXTRN	??2CvDllBuildingInfo@@SAPAXI@Z:PROC		; CvDllBuildingInfo::operator new
EXTRN	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z:PROC ; CvGlobals::getBuildingInfo
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetBuildingInfo@CvDllGameContext@@UAGPAVICvBuildingInfo1@@W4BuildingTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetBuildingInfo@CvDllGameContext@@UAGPAVICvBuildingInfo1@@W4BuildingTypes@@@Z$0
__ehfuncinfo$?GetBuildingInfo@CvDllGameContext@@UAGPAVICvBuildingInfo1@@W4BuildingTypes@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetBuildingInfo@CvDllGameContext@@UAGPAVICvBuildingInfo1@@W4BuildingTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?GetBuildingInfo@CvDllGameContext@@UAGPAVICvBuildingInfo1@@W4BuildingTypes@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
$T227963 = 12						; size = 4
_eBuilding$ = 12					; size = 4
?GetBuildingInfo@CvDllGameContext@@UAGPAVICvBuildingInfo1@@W4BuildingTypes@@@Z PROC ; CvDllGameContext::GetBuildingInfo, COMDAT

; 403  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?GetBuildingInfo@CvDllGameContext@@UAGPAVICvBuildingInfo1@@W4BuildingTypes@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp

; 404  : 	CvBuildingEntry* pkEntry = GC.getBuildingInfo(eBuilding);

	mov	eax, DWORD PTR _eBuilding$[esp+8]
	push	esi
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	esi, eax

; 405  : 	return (NULL != pkEntry)? new CvDllBuildingInfo(pkEntry) : NULL;

	test	esi, esi
	je	SHORT $LN5@GetBuildin
	push	12					; 0000000cH
	call	??2CvDllBuildingInfo@@SAPAXI@Z		; CvDllBuildingInfo::operator new
	add	esp, 4
	mov	DWORD PTR $T227963[esp+12], eax
	mov	DWORD PTR __$EHRec$[esp+24], 0
	test	eax, eax
	je	SHORT $LN5@GetBuildin
	push	esi
	mov	ecx, eax
	call	??0CvDllBuildingInfo@@QAE@PAVCvBuildingEntry@@@Z ; CvDllBuildingInfo::CvDllBuildingInfo

; 406  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
$LN5@GetBuildin:
	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	xor	eax, eax
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetBuildingInfo@CvDllGameContext@@UAGPAVICvBuildingInfo1@@W4BuildingTypes@@@Z$0:
	mov	eax, DWORD PTR $T227963[ebp-4]
	push	eax
	call	??3CvDllBuildingInfo@@SAXPAX@Z		; CvDllBuildingInfo::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetBuildingInfo@CvDllGameContext@@UAGPAVICvBuildingInfo1@@W4BuildingTypes@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?GetBuildingInfo@CvDllGameContext@@UAGPAVICvBuildingInfo1@@W4BuildingTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetBuildingInfo@CvDllGameContext@@UAGPAVICvBuildingInfo1@@W4BuildingTypes@@@Z ENDP ; CvDllGameContext::GetBuildingInfo
PUBLIC	?GetCivilizationInfo@CvDllGameContext@@UAGPAVICvCivilizationInfo1@@W4CivilizationTypes@@@Z ; CvDllGameContext::GetCivilizationInfo
EXTRN	??3CvDllCivilizationInfo@@SAXPAX@Z:PROC		; CvDllCivilizationInfo::operator delete
EXTRN	??0CvDllCivilizationInfo@@QAE@PAVCvCivilizationInfo@@@Z:PROC ; CvDllCivilizationInfo::CvDllCivilizationInfo
EXTRN	??2CvDllCivilizationInfo@@SAPAXI@Z:PROC		; CvDllCivilizationInfo::operator new
EXTRN	?getCivilizationInfo@CvGlobals@@QAEPAVCvCivilizationInfo@@W4CivilizationTypes@@@Z:PROC ; CvGlobals::getCivilizationInfo
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetCivilizationInfo@CvDllGameContext@@UAGPAVICvCivilizationInfo1@@W4CivilizationTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetCivilizationInfo@CvDllGameContext@@UAGPAVICvCivilizationInfo1@@W4CivilizationTypes@@@Z$0
__ehfuncinfo$?GetCivilizationInfo@CvDllGameContext@@UAGPAVICvCivilizationInfo1@@W4CivilizationTypes@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetCivilizationInfo@CvDllGameContext@@UAGPAVICvCivilizationInfo1@@W4CivilizationTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?GetCivilizationInfo@CvDllGameContext@@UAGPAVICvCivilizationInfo1@@W4CivilizationTypes@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
$T227979 = 12						; size = 4
_eCivilizationNum$ = 12					; size = 4
?GetCivilizationInfo@CvDllGameContext@@UAGPAVICvCivilizationInfo1@@W4CivilizationTypes@@@Z PROC ; CvDllGameContext::GetCivilizationInfo, COMDAT

; 409  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?GetCivilizationInfo@CvDllGameContext@@UAGPAVICvCivilizationInfo1@@W4CivilizationTypes@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp

; 410  : 	CvCivilizationInfo* pkInfo = GC.getCivilizationInfo(eCivilizationNum);

	mov	eax, DWORD PTR _eCivilizationNum$[esp+8]
	push	esi
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getCivilizationInfo@CvGlobals@@QAEPAVCvCivilizationInfo@@W4CivilizationTypes@@@Z ; CvGlobals::getCivilizationInfo
	mov	esi, eax

; 411  : 	return (NULL != pkInfo)? new CvDllCivilizationInfo(pkInfo) : NULL;

	test	esi, esi
	je	SHORT $LN5@GetCiviliz
	push	12					; 0000000cH
	call	??2CvDllCivilizationInfo@@SAPAXI@Z	; CvDllCivilizationInfo::operator new
	add	esp, 4
	mov	DWORD PTR $T227979[esp+12], eax
	mov	DWORD PTR __$EHRec$[esp+24], 0
	test	eax, eax
	je	SHORT $LN5@GetCiviliz
	push	esi
	mov	ecx, eax
	call	??0CvDllCivilizationInfo@@QAE@PAVCvCivilizationInfo@@@Z ; CvDllCivilizationInfo::CvDllCivilizationInfo

; 412  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
$LN5@GetCiviliz:
	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	xor	eax, eax
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetCivilizationInfo@CvDllGameContext@@UAGPAVICvCivilizationInfo1@@W4CivilizationTypes@@@Z$0:
	mov	eax, DWORD PTR $T227979[ebp-4]
	push	eax
	call	??3CvDllCivilizationInfo@@SAXPAX@Z	; CvDllCivilizationInfo::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetCivilizationInfo@CvDllGameContext@@UAGPAVICvCivilizationInfo1@@W4CivilizationTypes@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?GetCivilizationInfo@CvDllGameContext@@UAGPAVICvCivilizationInfo1@@W4CivilizationTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetCivilizationInfo@CvDllGameContext@@UAGPAVICvCivilizationInfo1@@W4CivilizationTypes@@@Z ENDP ; CvDllGameContext::GetCivilizationInfo
PUBLIC	?GetColorInfo@CvDllGameContext@@UAGPAVICvColorInfo1@@W4ColorTypes@@@Z ; CvDllGameContext::GetColorInfo
EXTRN	??3CvDllColorInfo@@SAXPAX@Z:PROC		; CvDllColorInfo::operator delete
EXTRN	??0CvDllColorInfo@@QAE@PAVCvColorInfo@@@Z:PROC	; CvDllColorInfo::CvDllColorInfo
EXTRN	??2CvDllColorInfo@@SAPAXI@Z:PROC		; CvDllColorInfo::operator new
EXTRN	?GetColorInfo@CvGlobals@@QAEPAVCvColorInfo@@W4ColorTypes@@@Z:PROC ; CvGlobals::GetColorInfo
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetColorInfo@CvDllGameContext@@UAGPAVICvColorInfo1@@W4ColorTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetColorInfo@CvDllGameContext@@UAGPAVICvColorInfo1@@W4ColorTypes@@@Z$0
__ehfuncinfo$?GetColorInfo@CvDllGameContext@@UAGPAVICvColorInfo1@@W4ColorTypes@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetColorInfo@CvDllGameContext@@UAGPAVICvColorInfo1@@W4ColorTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?GetColorInfo@CvDllGameContext@@UAGPAVICvColorInfo1@@W4ColorTypes@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
$T227995 = 12						; size = 4
_e$ = 12						; size = 4
?GetColorInfo@CvDllGameContext@@UAGPAVICvColorInfo1@@W4ColorTypes@@@Z PROC ; CvDllGameContext::GetColorInfo, COMDAT

; 415  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?GetColorInfo@CvDllGameContext@@UAGPAVICvColorInfo1@@W4ColorTypes@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp

; 416  : 	CvColorInfo* pkInfo = GC.GetColorInfo(e);

	mov	eax, DWORD PTR _e$[esp+8]
	push	esi
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetColorInfo@CvGlobals@@QAEPAVCvColorInfo@@W4ColorTypes@@@Z ; CvGlobals::GetColorInfo
	mov	esi, eax

; 417  : 	return (NULL != pkInfo)? new CvDllColorInfo(pkInfo) : NULL;

	test	esi, esi
	je	SHORT $LN5@GetColorIn
	push	12					; 0000000cH
	call	??2CvDllColorInfo@@SAPAXI@Z		; CvDllColorInfo::operator new
	add	esp, 4
	mov	DWORD PTR $T227995[esp+12], eax
	mov	DWORD PTR __$EHRec$[esp+24], 0
	test	eax, eax
	je	SHORT $LN5@GetColorIn
	push	esi
	mov	ecx, eax
	call	??0CvDllColorInfo@@QAE@PAVCvColorInfo@@@Z ; CvDllColorInfo::CvDllColorInfo

; 418  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
$LN5@GetColorIn:
	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	xor	eax, eax
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetColorInfo@CvDllGameContext@@UAGPAVICvColorInfo1@@W4ColorTypes@@@Z$0:
	mov	eax, DWORD PTR $T227995[ebp-4]
	push	eax
	call	??3CvDllColorInfo@@SAXPAX@Z		; CvDllColorInfo::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetColorInfo@CvDllGameContext@@UAGPAVICvColorInfo1@@W4ColorTypes@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?GetColorInfo@CvDllGameContext@@UAGPAVICvColorInfo1@@W4ColorTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetColorInfo@CvDllGameContext@@UAGPAVICvColorInfo1@@W4ColorTypes@@@Z ENDP ; CvDllGameContext::GetColorInfo
PUBLIC	?GetEraInfo@CvDllGameContext@@UAGPAVICvEraInfo1@@W4EraTypes@@@Z ; CvDllGameContext::GetEraInfo
EXTRN	??3CvDllEraInfo@@SAXPAX@Z:PROC			; CvDllEraInfo::operator delete
EXTRN	??0CvDllEraInfo@@QAE@PAVCvEraInfo@@@Z:PROC	; CvDllEraInfo::CvDllEraInfo
EXTRN	??2CvDllEraInfo@@SAPAXI@Z:PROC			; CvDllEraInfo::operator new
EXTRN	?getEraInfo@CvGlobals@@QAEPAVCvEraInfo@@W4EraTypes@@@Z:PROC ; CvGlobals::getEraInfo
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetEraInfo@CvDllGameContext@@UAGPAVICvEraInfo1@@W4EraTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetEraInfo@CvDllGameContext@@UAGPAVICvEraInfo1@@W4EraTypes@@@Z$0
__ehfuncinfo$?GetEraInfo@CvDllGameContext@@UAGPAVICvEraInfo1@@W4EraTypes@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetEraInfo@CvDllGameContext@@UAGPAVICvEraInfo1@@W4EraTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?GetEraInfo@CvDllGameContext@@UAGPAVICvEraInfo1@@W4EraTypes@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
$T228011 = 12						; size = 4
_eEraNum$ = 12						; size = 4
?GetEraInfo@CvDllGameContext@@UAGPAVICvEraInfo1@@W4EraTypes@@@Z PROC ; CvDllGameContext::GetEraInfo, COMDAT

; 421  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?GetEraInfo@CvDllGameContext@@UAGPAVICvEraInfo1@@W4EraTypes@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp

; 422  : 	CvEraInfo* pkInfo = GC.getEraInfo(eEraNum);

	mov	eax, DWORD PTR _eEraNum$[esp+8]
	push	esi
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getEraInfo@CvGlobals@@QAEPAVCvEraInfo@@W4EraTypes@@@Z ; CvGlobals::getEraInfo
	mov	esi, eax

; 423  : 	return (NULL != pkInfo)? new CvDllEraInfo(pkInfo) : NULL;

	test	esi, esi
	je	SHORT $LN5@GetEraInfo
	push	12					; 0000000cH
	call	??2CvDllEraInfo@@SAPAXI@Z		; CvDllEraInfo::operator new
	add	esp, 4
	mov	DWORD PTR $T228011[esp+12], eax
	mov	DWORD PTR __$EHRec$[esp+24], 0
	test	eax, eax
	je	SHORT $LN5@GetEraInfo
	push	esi
	mov	ecx, eax
	call	??0CvDllEraInfo@@QAE@PAVCvEraInfo@@@Z	; CvDllEraInfo::CvDllEraInfo

; 424  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
$LN5@GetEraInfo:
	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	xor	eax, eax
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetEraInfo@CvDllGameContext@@UAGPAVICvEraInfo1@@W4EraTypes@@@Z$0:
	mov	eax, DWORD PTR $T228011[ebp-4]
	push	eax
	call	??3CvDllEraInfo@@SAXPAX@Z		; CvDllEraInfo::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetEraInfo@CvDllGameContext@@UAGPAVICvEraInfo1@@W4EraTypes@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?GetEraInfo@CvDllGameContext@@UAGPAVICvEraInfo1@@W4EraTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetEraInfo@CvDllGameContext@@UAGPAVICvEraInfo1@@W4EraTypes@@@Z ENDP ; CvDllGameContext::GetEraInfo
PUBLIC	?GetFeatureInfo@CvDllGameContext@@UAGPAVICvFeatureInfo1@@W4FeatureTypes@@@Z ; CvDllGameContext::GetFeatureInfo
EXTRN	??3CvDllFeatureInfo@@SAXPAX@Z:PROC		; CvDllFeatureInfo::operator delete
EXTRN	??0CvDllFeatureInfo@@QAE@PAVCvFeatureInfo@@@Z:PROC ; CvDllFeatureInfo::CvDllFeatureInfo
EXTRN	??2CvDllFeatureInfo@@SAPAXI@Z:PROC		; CvDllFeatureInfo::operator new
EXTRN	?getFeatureInfo@CvGlobals@@QAEPAVCvFeatureInfo@@W4FeatureTypes@@@Z:PROC ; CvGlobals::getFeatureInfo
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetFeatureInfo@CvDllGameContext@@UAGPAVICvFeatureInfo1@@W4FeatureTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetFeatureInfo@CvDllGameContext@@UAGPAVICvFeatureInfo1@@W4FeatureTypes@@@Z$0
__ehfuncinfo$?GetFeatureInfo@CvDllGameContext@@UAGPAVICvFeatureInfo1@@W4FeatureTypes@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetFeatureInfo@CvDllGameContext@@UAGPAVICvFeatureInfo1@@W4FeatureTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?GetFeatureInfo@CvDllGameContext@@UAGPAVICvFeatureInfo1@@W4FeatureTypes@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
$T228027 = 12						; size = 4
_eFeatureNum$ = 12					; size = 4
?GetFeatureInfo@CvDllGameContext@@UAGPAVICvFeatureInfo1@@W4FeatureTypes@@@Z PROC ; CvDllGameContext::GetFeatureInfo, COMDAT

; 427  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?GetFeatureInfo@CvDllGameContext@@UAGPAVICvFeatureInfo1@@W4FeatureTypes@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp

; 428  : 	CvFeatureInfo* pkInfo = GC.getFeatureInfo(eFeatureNum);

	mov	eax, DWORD PTR _eFeatureNum$[esp+8]
	push	esi
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getFeatureInfo@CvGlobals@@QAEPAVCvFeatureInfo@@W4FeatureTypes@@@Z ; CvGlobals::getFeatureInfo
	mov	esi, eax

; 429  : 	return (NULL != pkInfo)? new CvDllFeatureInfo(pkInfo) : NULL;

	test	esi, esi
	je	SHORT $LN5@GetFeature
	push	12					; 0000000cH
	call	??2CvDllFeatureInfo@@SAPAXI@Z		; CvDllFeatureInfo::operator new
	add	esp, 4
	mov	DWORD PTR $T228027[esp+12], eax
	mov	DWORD PTR __$EHRec$[esp+24], 0
	test	eax, eax
	je	SHORT $LN5@GetFeature
	push	esi
	mov	ecx, eax
	call	??0CvDllFeatureInfo@@QAE@PAVCvFeatureInfo@@@Z ; CvDllFeatureInfo::CvDllFeatureInfo

; 430  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
$LN5@GetFeature:
	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	xor	eax, eax
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetFeatureInfo@CvDllGameContext@@UAGPAVICvFeatureInfo1@@W4FeatureTypes@@@Z$0:
	mov	eax, DWORD PTR $T228027[ebp-4]
	push	eax
	call	??3CvDllFeatureInfo@@SAXPAX@Z		; CvDllFeatureInfo::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetFeatureInfo@CvDllGameContext@@UAGPAVICvFeatureInfo1@@W4FeatureTypes@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?GetFeatureInfo@CvDllGameContext@@UAGPAVICvFeatureInfo1@@W4FeatureTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetFeatureInfo@CvDllGameContext@@UAGPAVICvFeatureInfo1@@W4FeatureTypes@@@Z ENDP ; CvDllGameContext::GetFeatureInfo
PUBLIC	?GetGameOptionInfo@CvDllGameContext@@UAGPAVICvGameOptionInfo1@@W4GameOptionTypes@@@Z ; CvDllGameContext::GetGameOptionInfo
EXTRN	??3CvDllGameOptionInfo@@SAXPAX@Z:PROC		; CvDllGameOptionInfo::operator delete
EXTRN	??0CvDllGameOptionInfo@@QAE@PAVCvGameOptionInfo@@@Z:PROC ; CvDllGameOptionInfo::CvDllGameOptionInfo
EXTRN	??2CvDllGameOptionInfo@@SAPAXI@Z:PROC		; CvDllGameOptionInfo::operator new
EXTRN	?getGameOptionInfo@CvGlobals@@QAEPAVCvGameOptionInfo@@W4GameOptionTypes@@@Z:PROC ; CvGlobals::getGameOptionInfo
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetGameOptionInfo@CvDllGameContext@@UAGPAVICvGameOptionInfo1@@W4GameOptionTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetGameOptionInfo@CvDllGameContext@@UAGPAVICvGameOptionInfo1@@W4GameOptionTypes@@@Z$0
__ehfuncinfo$?GetGameOptionInfo@CvDllGameContext@@UAGPAVICvGameOptionInfo1@@W4GameOptionTypes@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetGameOptionInfo@CvDllGameContext@@UAGPAVICvGameOptionInfo1@@W4GameOptionTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?GetGameOptionInfo@CvDllGameContext@@UAGPAVICvGameOptionInfo1@@W4GameOptionTypes@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
$T228043 = 12						; size = 4
_eGameOptionNum$ = 12					; size = 4
?GetGameOptionInfo@CvDllGameContext@@UAGPAVICvGameOptionInfo1@@W4GameOptionTypes@@@Z PROC ; CvDllGameContext::GetGameOptionInfo, COMDAT

; 433  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?GetGameOptionInfo@CvDllGameContext@@UAGPAVICvGameOptionInfo1@@W4GameOptionTypes@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp

; 434  : 	CvGameOptionInfo* pkInfo = GC.getGameOptionInfo(eGameOptionNum);

	mov	eax, DWORD PTR _eGameOptionNum$[esp+8]
	push	esi
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getGameOptionInfo@CvGlobals@@QAEPAVCvGameOptionInfo@@W4GameOptionTypes@@@Z ; CvGlobals::getGameOptionInfo
	mov	esi, eax

; 435  : 	return (NULL != pkInfo)? new CvDllGameOptionInfo(pkInfo) : NULL;

	test	esi, esi
	je	SHORT $LN5@GetGameOpt
	push	12					; 0000000cH
	call	??2CvDllGameOptionInfo@@SAPAXI@Z	; CvDllGameOptionInfo::operator new
	add	esp, 4
	mov	DWORD PTR $T228043[esp+12], eax
	mov	DWORD PTR __$EHRec$[esp+24], 0
	test	eax, eax
	je	SHORT $LN5@GetGameOpt
	push	esi
	mov	ecx, eax
	call	??0CvDllGameOptionInfo@@QAE@PAVCvGameOptionInfo@@@Z ; CvDllGameOptionInfo::CvDllGameOptionInfo

; 436  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
$LN5@GetGameOpt:
	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	xor	eax, eax
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetGameOptionInfo@CvDllGameContext@@UAGPAVICvGameOptionInfo1@@W4GameOptionTypes@@@Z$0:
	mov	eax, DWORD PTR $T228043[ebp-4]
	push	eax
	call	??3CvDllGameOptionInfo@@SAXPAX@Z	; CvDllGameOptionInfo::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetGameOptionInfo@CvDllGameContext@@UAGPAVICvGameOptionInfo1@@W4GameOptionTypes@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?GetGameOptionInfo@CvDllGameContext@@UAGPAVICvGameOptionInfo1@@W4GameOptionTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetGameOptionInfo@CvDllGameContext@@UAGPAVICvGameOptionInfo1@@W4GameOptionTypes@@@Z ENDP ; CvDllGameContext::GetGameOptionInfo
PUBLIC	?GetGameSpeedInfo@CvDllGameContext@@UAGPAVICvGameSpeedInfo1@@W4GameSpeedTypes@@@Z ; CvDllGameContext::GetGameSpeedInfo
EXTRN	??3CvDllGameSpeedInfo@@SAXPAX@Z:PROC		; CvDllGameSpeedInfo::operator delete
EXTRN	??0CvDllGameSpeedInfo@@QAE@PAVCvGameSpeedInfo@@@Z:PROC ; CvDllGameSpeedInfo::CvDllGameSpeedInfo
EXTRN	??2CvDllGameSpeedInfo@@SAPAXI@Z:PROC		; CvDllGameSpeedInfo::operator new
EXTRN	?getGameSpeedInfo@CvGlobals@@QAEPAVCvGameSpeedInfo@@W4GameSpeedTypes@@@Z:PROC ; CvGlobals::getGameSpeedInfo
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetGameSpeedInfo@CvDllGameContext@@UAGPAVICvGameSpeedInfo1@@W4GameSpeedTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetGameSpeedInfo@CvDllGameContext@@UAGPAVICvGameSpeedInfo1@@W4GameSpeedTypes@@@Z$0
__ehfuncinfo$?GetGameSpeedInfo@CvDllGameContext@@UAGPAVICvGameSpeedInfo1@@W4GameSpeedTypes@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetGameSpeedInfo@CvDllGameContext@@UAGPAVICvGameSpeedInfo1@@W4GameSpeedTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?GetGameSpeedInfo@CvDllGameContext@@UAGPAVICvGameSpeedInfo1@@W4GameSpeedTypes@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
$T228059 = 12						; size = 4
_eGameSpeedNum$ = 12					; size = 4
?GetGameSpeedInfo@CvDllGameContext@@UAGPAVICvGameSpeedInfo1@@W4GameSpeedTypes@@@Z PROC ; CvDllGameContext::GetGameSpeedInfo, COMDAT

; 439  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?GetGameSpeedInfo@CvDllGameContext@@UAGPAVICvGameSpeedInfo1@@W4GameSpeedTypes@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp

; 440  : 	CvGameSpeedInfo* pkInfo = GC.getGameSpeedInfo(eGameSpeedNum);

	mov	eax, DWORD PTR _eGameSpeedNum$[esp+8]
	push	esi
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getGameSpeedInfo@CvGlobals@@QAEPAVCvGameSpeedInfo@@W4GameSpeedTypes@@@Z ; CvGlobals::getGameSpeedInfo
	mov	esi, eax

; 441  : 	return (NULL != pkInfo)? new CvDllGameSpeedInfo(pkInfo) : NULL;

	test	esi, esi
	je	SHORT $LN5@GetGameSpe
	push	12					; 0000000cH
	call	??2CvDllGameSpeedInfo@@SAPAXI@Z		; CvDllGameSpeedInfo::operator new
	add	esp, 4
	mov	DWORD PTR $T228059[esp+12], eax
	mov	DWORD PTR __$EHRec$[esp+24], 0
	test	eax, eax
	je	SHORT $LN5@GetGameSpe
	push	esi
	mov	ecx, eax
	call	??0CvDllGameSpeedInfo@@QAE@PAVCvGameSpeedInfo@@@Z ; CvDllGameSpeedInfo::CvDllGameSpeedInfo

; 442  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
$LN5@GetGameSpe:
	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	xor	eax, eax
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetGameSpeedInfo@CvDllGameContext@@UAGPAVICvGameSpeedInfo1@@W4GameSpeedTypes@@@Z$0:
	mov	eax, DWORD PTR $T228059[ebp-4]
	push	eax
	call	??3CvDllGameSpeedInfo@@SAXPAX@Z		; CvDllGameSpeedInfo::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetGameSpeedInfo@CvDllGameContext@@UAGPAVICvGameSpeedInfo1@@W4GameSpeedTypes@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?GetGameSpeedInfo@CvDllGameContext@@UAGPAVICvGameSpeedInfo1@@W4GameSpeedTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetGameSpeedInfo@CvDllGameContext@@UAGPAVICvGameSpeedInfo1@@W4GameSpeedTypes@@@Z ENDP ; CvDllGameContext::GetGameSpeedInfo
PUBLIC	?GetHandicapInfo@CvDllGameContext@@UAGPAVICvHandicapInfo1@@W4HandicapTypes@@@Z ; CvDllGameContext::GetHandicapInfo
EXTRN	??3CvDllHandicapInfo@@SAXPAX@Z:PROC		; CvDllHandicapInfo::operator delete
EXTRN	??0CvDllHandicapInfo@@QAE@PAVCvHandicapInfo@@@Z:PROC ; CvDllHandicapInfo::CvDllHandicapInfo
EXTRN	??2CvDllHandicapInfo@@SAPAXI@Z:PROC		; CvDllHandicapInfo::operator new
EXTRN	?getHandicapInfo@CvGlobals@@QAEPAVCvHandicapInfo@@W4HandicapTypes@@@Z:PROC ; CvGlobals::getHandicapInfo
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetHandicapInfo@CvDllGameContext@@UAGPAVICvHandicapInfo1@@W4HandicapTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetHandicapInfo@CvDllGameContext@@UAGPAVICvHandicapInfo1@@W4HandicapTypes@@@Z$0
__ehfuncinfo$?GetHandicapInfo@CvDllGameContext@@UAGPAVICvHandicapInfo1@@W4HandicapTypes@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetHandicapInfo@CvDllGameContext@@UAGPAVICvHandicapInfo1@@W4HandicapTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?GetHandicapInfo@CvDllGameContext@@UAGPAVICvHandicapInfo1@@W4HandicapTypes@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
$T228075 = 12						; size = 4
_eHandicapNum$ = 12					; size = 4
?GetHandicapInfo@CvDllGameContext@@UAGPAVICvHandicapInfo1@@W4HandicapTypes@@@Z PROC ; CvDllGameContext::GetHandicapInfo, COMDAT

; 445  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?GetHandicapInfo@CvDllGameContext@@UAGPAVICvHandicapInfo1@@W4HandicapTypes@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp

; 446  : 	CvHandicapInfo* pkInfo = GC.getHandicapInfo(eHandicapNum);

	mov	eax, DWORD PTR _eHandicapNum$[esp+8]
	push	esi
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getHandicapInfo@CvGlobals@@QAEPAVCvHandicapInfo@@W4HandicapTypes@@@Z ; CvGlobals::getHandicapInfo
	mov	esi, eax

; 447  : 	return (NULL != pkInfo)? new CvDllHandicapInfo(pkInfo) : NULL;

	test	esi, esi
	je	SHORT $LN5@GetHandica
	push	12					; 0000000cH
	call	??2CvDllHandicapInfo@@SAPAXI@Z		; CvDllHandicapInfo::operator new
	add	esp, 4
	mov	DWORD PTR $T228075[esp+12], eax
	mov	DWORD PTR __$EHRec$[esp+24], 0
	test	eax, eax
	je	SHORT $LN5@GetHandica
	push	esi
	mov	ecx, eax
	call	??0CvDllHandicapInfo@@QAE@PAVCvHandicapInfo@@@Z ; CvDllHandicapInfo::CvDllHandicapInfo

; 448  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
$LN5@GetHandica:
	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	xor	eax, eax
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetHandicapInfo@CvDllGameContext@@UAGPAVICvHandicapInfo1@@W4HandicapTypes@@@Z$0:
	mov	eax, DWORD PTR $T228075[ebp-4]
	push	eax
	call	??3CvDllHandicapInfo@@SAXPAX@Z		; CvDllHandicapInfo::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetHandicapInfo@CvDllGameContext@@UAGPAVICvHandicapInfo1@@W4HandicapTypes@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?GetHandicapInfo@CvDllGameContext@@UAGPAVICvHandicapInfo1@@W4HandicapTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetHandicapInfo@CvDllGameContext@@UAGPAVICvHandicapInfo1@@W4HandicapTypes@@@Z ENDP ; CvDllGameContext::GetHandicapInfo
PUBLIC	?GetInterfaceModeInfo@CvDllGameContext@@UAGPAVICvInterfaceModeInfo1@@W4InterfaceModeTypes@@@Z ; CvDllGameContext::GetInterfaceModeInfo
EXTRN	??3CvDllInterfaceModeInfo@@SAXPAX@Z:PROC	; CvDllInterfaceModeInfo::operator delete
EXTRN	??0CvDllInterfaceModeInfo@@QAE@PAVCvInterfaceModeInfo@@@Z:PROC ; CvDllInterfaceModeInfo::CvDllInterfaceModeInfo
EXTRN	??2CvDllInterfaceModeInfo@@SAPAXI@Z:PROC	; CvDllInterfaceModeInfo::operator new
EXTRN	?getInterfaceModeInfo@CvGlobals@@QAEPAVCvInterfaceModeInfo@@W4InterfaceModeTypes@@@Z:PROC ; CvGlobals::getInterfaceModeInfo
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetInterfaceModeInfo@CvDllGameContext@@UAGPAVICvInterfaceModeInfo1@@W4InterfaceModeTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetInterfaceModeInfo@CvDllGameContext@@UAGPAVICvInterfaceModeInfo1@@W4InterfaceModeTypes@@@Z$0
__ehfuncinfo$?GetInterfaceModeInfo@CvDllGameContext@@UAGPAVICvInterfaceModeInfo1@@W4InterfaceModeTypes@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetInterfaceModeInfo@CvDllGameContext@@UAGPAVICvInterfaceModeInfo1@@W4InterfaceModeTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?GetInterfaceModeInfo@CvDllGameContext@@UAGPAVICvInterfaceModeInfo1@@W4InterfaceModeTypes@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
$T228091 = 12						; size = 4
_e$ = 12						; size = 4
?GetInterfaceModeInfo@CvDllGameContext@@UAGPAVICvInterfaceModeInfo1@@W4InterfaceModeTypes@@@Z PROC ; CvDllGameContext::GetInterfaceModeInfo, COMDAT

; 451  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?GetInterfaceModeInfo@CvDllGameContext@@UAGPAVICvInterfaceModeInfo1@@W4InterfaceModeTypes@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp

; 452  : 	CvInterfaceModeInfo* pkInfo = GC.getInterfaceModeInfo(e);

	mov	eax, DWORD PTR _e$[esp+8]
	push	esi
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInterfaceModeInfo@CvGlobals@@QAEPAVCvInterfaceModeInfo@@W4InterfaceModeTypes@@@Z ; CvGlobals::getInterfaceModeInfo
	mov	esi, eax

; 453  : 	return (NULL != pkInfo)? new CvDllInterfaceModeInfo(pkInfo) : NULL;

	test	esi, esi
	je	SHORT $LN5@GetInterfa
	push	12					; 0000000cH
	call	??2CvDllInterfaceModeInfo@@SAPAXI@Z	; CvDllInterfaceModeInfo::operator new
	add	esp, 4
	mov	DWORD PTR $T228091[esp+12], eax
	mov	DWORD PTR __$EHRec$[esp+24], 0
	test	eax, eax
	je	SHORT $LN5@GetInterfa
	push	esi
	mov	ecx, eax
	call	??0CvDllInterfaceModeInfo@@QAE@PAVCvInterfaceModeInfo@@@Z ; CvDllInterfaceModeInfo::CvDllInterfaceModeInfo

; 454  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
$LN5@GetInterfa:
	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	xor	eax, eax
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetInterfaceModeInfo@CvDllGameContext@@UAGPAVICvInterfaceModeInfo1@@W4InterfaceModeTypes@@@Z$0:
	mov	eax, DWORD PTR $T228091[ebp-4]
	push	eax
	call	??3CvDllInterfaceModeInfo@@SAXPAX@Z	; CvDllInterfaceModeInfo::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetInterfaceModeInfo@CvDllGameContext@@UAGPAVICvInterfaceModeInfo1@@W4InterfaceModeTypes@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?GetInterfaceModeInfo@CvDllGameContext@@UAGPAVICvInterfaceModeInfo1@@W4InterfaceModeTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetInterfaceModeInfo@CvDllGameContext@@UAGPAVICvInterfaceModeInfo1@@W4InterfaceModeTypes@@@Z ENDP ; CvDllGameContext::GetInterfaceModeInfo
PUBLIC	?GetImprovementInfo@CvDllGameContext@@UAGPAVICvImprovementInfo1@@W4ImprovementTypes@@@Z ; CvDllGameContext::GetImprovementInfo
EXTRN	??3CvDllImprovementInfo@@SAXPAX@Z:PROC		; CvDllImprovementInfo::operator delete
EXTRN	??0CvDllImprovementInfo@@QAE@PAVCvImprovementEntry@@@Z:PROC ; CvDllImprovementInfo::CvDllImprovementInfo
EXTRN	??2CvDllImprovementInfo@@SAPAXI@Z:PROC		; CvDllImprovementInfo::operator new
EXTRN	?getImprovementInfo@CvGlobals@@QAEPAVCvImprovementEntry@@W4ImprovementTypes@@@Z:PROC ; CvGlobals::getImprovementInfo
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetImprovementInfo@CvDllGameContext@@UAGPAVICvImprovementInfo1@@W4ImprovementTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetImprovementInfo@CvDllGameContext@@UAGPAVICvImprovementInfo1@@W4ImprovementTypes@@@Z$0
__ehfuncinfo$?GetImprovementInfo@CvDllGameContext@@UAGPAVICvImprovementInfo1@@W4ImprovementTypes@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetImprovementInfo@CvDllGameContext@@UAGPAVICvImprovementInfo1@@W4ImprovementTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?GetImprovementInfo@CvDllGameContext@@UAGPAVICvImprovementInfo1@@W4ImprovementTypes@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
$T228107 = 12						; size = 4
_eImprovement$ = 12					; size = 4
?GetImprovementInfo@CvDllGameContext@@UAGPAVICvImprovementInfo1@@W4ImprovementTypes@@@Z PROC ; CvDllGameContext::GetImprovementInfo, COMDAT

; 457  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?GetImprovementInfo@CvDllGameContext@@UAGPAVICvImprovementInfo1@@W4ImprovementTypes@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp

; 458  : 	CvImprovementEntry* pkEntry = GC.getImprovementInfo(eImprovement);

	mov	eax, DWORD PTR _eImprovement$[esp+8]
	push	esi
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getImprovementInfo@CvGlobals@@QAEPAVCvImprovementEntry@@W4ImprovementTypes@@@Z ; CvGlobals::getImprovementInfo
	mov	esi, eax

; 459  : 	return (NULL != pkEntry)? new CvDllImprovementInfo(pkEntry) : NULL;

	test	esi, esi
	je	SHORT $LN5@GetImprove
	push	12					; 0000000cH
	call	??2CvDllImprovementInfo@@SAPAXI@Z	; CvDllImprovementInfo::operator new
	add	esp, 4
	mov	DWORD PTR $T228107[esp+12], eax
	mov	DWORD PTR __$EHRec$[esp+24], 0
	test	eax, eax
	je	SHORT $LN5@GetImprove
	push	esi
	mov	ecx, eax
	call	??0CvDllImprovementInfo@@QAE@PAVCvImprovementEntry@@@Z ; CvDllImprovementInfo::CvDllImprovementInfo

; 460  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
$LN5@GetImprove:
	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	xor	eax, eax
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetImprovementInfo@CvDllGameContext@@UAGPAVICvImprovementInfo1@@W4ImprovementTypes@@@Z$0:
	mov	eax, DWORD PTR $T228107[ebp-4]
	push	eax
	call	??3CvDllImprovementInfo@@SAXPAX@Z	; CvDllImprovementInfo::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetImprovementInfo@CvDllGameContext@@UAGPAVICvImprovementInfo1@@W4ImprovementTypes@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?GetImprovementInfo@CvDllGameContext@@UAGPAVICvImprovementInfo1@@W4ImprovementTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetImprovementInfo@CvDllGameContext@@UAGPAVICvImprovementInfo1@@W4ImprovementTypes@@@Z ENDP ; CvDllGameContext::GetImprovementInfo
PUBLIC	?GetLeaderHeadInfo@CvDllGameContext@@UAGPAVICvLeaderHeadInfo1@@W4LeaderHeadTypes@@@Z ; CvDllGameContext::GetLeaderHeadInfo
EXTRN	??3CvDllLeaderHeadInfo@@SAXPAX@Z:PROC		; CvDllLeaderHeadInfo::operator delete
EXTRN	??0CvDllLeaderHeadInfo@@QAE@PAVCvLeaderHeadInfo@@@Z:PROC ; CvDllLeaderHeadInfo::CvDllLeaderHeadInfo
EXTRN	??2CvDllLeaderHeadInfo@@SAPAXI@Z:PROC		; CvDllLeaderHeadInfo::operator new
EXTRN	?getLeaderHeadInfo@CvGlobals@@QAEPAVCvLeaderHeadInfo@@W4LeaderHeadTypes@@@Z:PROC ; CvGlobals::getLeaderHeadInfo
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetLeaderHeadInfo@CvDllGameContext@@UAGPAVICvLeaderHeadInfo1@@W4LeaderHeadTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetLeaderHeadInfo@CvDllGameContext@@UAGPAVICvLeaderHeadInfo1@@W4LeaderHeadTypes@@@Z$0
__ehfuncinfo$?GetLeaderHeadInfo@CvDllGameContext@@UAGPAVICvLeaderHeadInfo1@@W4LeaderHeadTypes@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetLeaderHeadInfo@CvDllGameContext@@UAGPAVICvLeaderHeadInfo1@@W4LeaderHeadTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?GetLeaderHeadInfo@CvDllGameContext@@UAGPAVICvLeaderHeadInfo1@@W4LeaderHeadTypes@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
$T228123 = 12						; size = 4
_eLeaderHeadNum$ = 12					; size = 4
?GetLeaderHeadInfo@CvDllGameContext@@UAGPAVICvLeaderHeadInfo1@@W4LeaderHeadTypes@@@Z PROC ; CvDllGameContext::GetLeaderHeadInfo, COMDAT

; 463  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?GetLeaderHeadInfo@CvDllGameContext@@UAGPAVICvLeaderHeadInfo1@@W4LeaderHeadTypes@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp

; 464  : 	CvLeaderHeadInfo* pkInfo = GC.getLeaderHeadInfo(eLeaderHeadNum);

	mov	eax, DWORD PTR _eLeaderHeadNum$[esp+8]
	push	esi
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLeaderHeadInfo@CvGlobals@@QAEPAVCvLeaderHeadInfo@@W4LeaderHeadTypes@@@Z ; CvGlobals::getLeaderHeadInfo
	mov	esi, eax

; 465  : 	return (NULL != pkInfo)? new CvDllLeaderHeadInfo(pkInfo) : NULL;

	test	esi, esi
	je	SHORT $LN5@GetLeaderH
	push	12					; 0000000cH
	call	??2CvDllLeaderHeadInfo@@SAPAXI@Z	; CvDllLeaderHeadInfo::operator new
	add	esp, 4
	mov	DWORD PTR $T228123[esp+12], eax
	mov	DWORD PTR __$EHRec$[esp+24], 0
	test	eax, eax
	je	SHORT $LN5@GetLeaderH
	push	esi
	mov	ecx, eax
	call	??0CvDllLeaderHeadInfo@@QAE@PAVCvLeaderHeadInfo@@@Z ; CvDllLeaderHeadInfo::CvDllLeaderHeadInfo

; 466  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
$LN5@GetLeaderH:
	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	xor	eax, eax
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetLeaderHeadInfo@CvDllGameContext@@UAGPAVICvLeaderHeadInfo1@@W4LeaderHeadTypes@@@Z$0:
	mov	eax, DWORD PTR $T228123[ebp-4]
	push	eax
	call	??3CvDllLeaderHeadInfo@@SAXPAX@Z	; CvDllLeaderHeadInfo::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetLeaderHeadInfo@CvDllGameContext@@UAGPAVICvLeaderHeadInfo1@@W4LeaderHeadTypes@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?GetLeaderHeadInfo@CvDllGameContext@@UAGPAVICvLeaderHeadInfo1@@W4LeaderHeadTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetLeaderHeadInfo@CvDllGameContext@@UAGPAVICvLeaderHeadInfo1@@W4LeaderHeadTypes@@@Z ENDP ; CvDllGameContext::GetLeaderHeadInfo
PUBLIC	?GetMinorCivInfo@CvDllGameContext@@UAGPAVICvMinorCivInfo1@@W4MinorCivTypes@@@Z ; CvDllGameContext::GetMinorCivInfo
EXTRN	??3CvDllMinorCivInfo@@SAXPAX@Z:PROC		; CvDllMinorCivInfo::operator delete
EXTRN	??0CvDllMinorCivInfo@@QAE@PAVCvMinorCivInfo@@@Z:PROC ; CvDllMinorCivInfo::CvDllMinorCivInfo
EXTRN	??2CvDllMinorCivInfo@@SAPAXI@Z:PROC		; CvDllMinorCivInfo::operator new
EXTRN	?getMinorCivInfo@CvGlobals@@QAEPAVCvMinorCivInfo@@W4MinorCivTypes@@@Z:PROC ; CvGlobals::getMinorCivInfo
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetMinorCivInfo@CvDllGameContext@@UAGPAVICvMinorCivInfo1@@W4MinorCivTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetMinorCivInfo@CvDllGameContext@@UAGPAVICvMinorCivInfo1@@W4MinorCivTypes@@@Z$0
__ehfuncinfo$?GetMinorCivInfo@CvDllGameContext@@UAGPAVICvMinorCivInfo1@@W4MinorCivTypes@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetMinorCivInfo@CvDllGameContext@@UAGPAVICvMinorCivInfo1@@W4MinorCivTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?GetMinorCivInfo@CvDllGameContext@@UAGPAVICvMinorCivInfo1@@W4MinorCivTypes@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
$T228139 = 12						; size = 4
_eMinorCiv$ = 12					; size = 4
?GetMinorCivInfo@CvDllGameContext@@UAGPAVICvMinorCivInfo1@@W4MinorCivTypes@@@Z PROC ; CvDllGameContext::GetMinorCivInfo, COMDAT

; 469  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?GetMinorCivInfo@CvDllGameContext@@UAGPAVICvMinorCivInfo1@@W4MinorCivTypes@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp

; 470  : 	CvMinorCivInfo* pkInfo = GC.getMinorCivInfo(eMinorCiv);

	mov	eax, DWORD PTR _eMinorCiv$[esp+8]
	push	esi
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getMinorCivInfo@CvGlobals@@QAEPAVCvMinorCivInfo@@W4MinorCivTypes@@@Z ; CvGlobals::getMinorCivInfo
	mov	esi, eax

; 471  : 	return (NULL != pkInfo)? new CvDllMinorCivInfo(pkInfo) : NULL;

	test	esi, esi
	je	SHORT $LN5@GetMinorCi
	push	12					; 0000000cH
	call	??2CvDllMinorCivInfo@@SAPAXI@Z		; CvDllMinorCivInfo::operator new
	add	esp, 4
	mov	DWORD PTR $T228139[esp+12], eax
	mov	DWORD PTR __$EHRec$[esp+24], 0
	test	eax, eax
	je	SHORT $LN5@GetMinorCi
	push	esi
	mov	ecx, eax
	call	??0CvDllMinorCivInfo@@QAE@PAVCvMinorCivInfo@@@Z ; CvDllMinorCivInfo::CvDllMinorCivInfo

; 472  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
$LN5@GetMinorCi:
	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	xor	eax, eax
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetMinorCivInfo@CvDllGameContext@@UAGPAVICvMinorCivInfo1@@W4MinorCivTypes@@@Z$0:
	mov	eax, DWORD PTR $T228139[ebp-4]
	push	eax
	call	??3CvDllMinorCivInfo@@SAXPAX@Z		; CvDllMinorCivInfo::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetMinorCivInfo@CvDllGameContext@@UAGPAVICvMinorCivInfo1@@W4MinorCivTypes@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?GetMinorCivInfo@CvDllGameContext@@UAGPAVICvMinorCivInfo1@@W4MinorCivTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetMinorCivInfo@CvDllGameContext@@UAGPAVICvMinorCivInfo1@@W4MinorCivTypes@@@Z ENDP ; CvDllGameContext::GetMinorCivInfo
PUBLIC	?GetMissionInfo@CvDllGameContext@@UAGPAVICvMissionInfo1@@W4MissionTypes@@@Z ; CvDllGameContext::GetMissionInfo
EXTRN	??3CvDllMissionInfo@@SAXPAX@Z:PROC		; CvDllMissionInfo::operator delete
EXTRN	??0CvDllMissionInfo@@QAE@PAVCvMissionInfo@@@Z:PROC ; CvDllMissionInfo::CvDllMissionInfo
EXTRN	??2CvDllMissionInfo@@SAPAXI@Z:PROC		; CvDllMissionInfo::operator new
EXTRN	?getMissionInfo@CvGlobals@@QAEPAVCvMissionInfo@@W4MissionTypes@@@Z:PROC ; CvGlobals::getMissionInfo
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetMissionInfo@CvDllGameContext@@UAGPAVICvMissionInfo1@@W4MissionTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetMissionInfo@CvDllGameContext@@UAGPAVICvMissionInfo1@@W4MissionTypes@@@Z$0
__ehfuncinfo$?GetMissionInfo@CvDllGameContext@@UAGPAVICvMissionInfo1@@W4MissionTypes@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetMissionInfo@CvDllGameContext@@UAGPAVICvMissionInfo1@@W4MissionTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?GetMissionInfo@CvDllGameContext@@UAGPAVICvMissionInfo1@@W4MissionTypes@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
$T228155 = 12						; size = 4
_eMission$ = 12						; size = 4
?GetMissionInfo@CvDllGameContext@@UAGPAVICvMissionInfo1@@W4MissionTypes@@@Z PROC ; CvDllGameContext::GetMissionInfo, COMDAT

; 475  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?GetMissionInfo@CvDllGameContext@@UAGPAVICvMissionInfo1@@W4MissionTypes@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp

; 476  : 	CvMissionInfo* pkInfo = GC.getMissionInfo(eMission);

	mov	eax, DWORD PTR _eMission$[esp+8]
	push	esi
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getMissionInfo@CvGlobals@@QAEPAVCvMissionInfo@@W4MissionTypes@@@Z ; CvGlobals::getMissionInfo
	mov	esi, eax

; 477  : 	return (NULL != pkInfo)? new CvDllMissionInfo(pkInfo) : NULL;

	test	esi, esi
	je	SHORT $LN5@GetMission
	push	12					; 0000000cH
	call	??2CvDllMissionInfo@@SAPAXI@Z		; CvDllMissionInfo::operator new
	add	esp, 4
	mov	DWORD PTR $T228155[esp+12], eax
	mov	DWORD PTR __$EHRec$[esp+24], 0
	test	eax, eax
	je	SHORT $LN5@GetMission
	push	esi
	mov	ecx, eax
	call	??0CvDllMissionInfo@@QAE@PAVCvMissionInfo@@@Z ; CvDllMissionInfo::CvDllMissionInfo

; 478  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
$LN5@GetMission:
	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	xor	eax, eax
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetMissionInfo@CvDllGameContext@@UAGPAVICvMissionInfo1@@W4MissionTypes@@@Z$0:
	mov	eax, DWORD PTR $T228155[ebp-4]
	push	eax
	call	??3CvDllMissionInfo@@SAXPAX@Z		; CvDllMissionInfo::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetMissionInfo@CvDllGameContext@@UAGPAVICvMissionInfo1@@W4MissionTypes@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?GetMissionInfo@CvDllGameContext@@UAGPAVICvMissionInfo1@@W4MissionTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetMissionInfo@CvDllGameContext@@UAGPAVICvMissionInfo1@@W4MissionTypes@@@Z ENDP ; CvDllGameContext::GetMissionInfo
PUBLIC	?GetPlayerColorInfo@CvDllGameContext@@UAGPAVICvPlayerColorInfo1@@W4PlayerColorTypes@@@Z ; CvDllGameContext::GetPlayerColorInfo
EXTRN	??3CvDllPlayerColorInfo@@SAXPAX@Z:PROC		; CvDllPlayerColorInfo::operator delete
EXTRN	??0CvDllPlayerColorInfo@@QAE@PAVCvPlayerColorInfo@@@Z:PROC ; CvDllPlayerColorInfo::CvDllPlayerColorInfo
EXTRN	??2CvDllPlayerColorInfo@@SAPAXI@Z:PROC		; CvDllPlayerColorInfo::operator new
EXTRN	?GetPlayerColorInfo@CvGlobals@@QAEPAVCvPlayerColorInfo@@W4PlayerColorTypes@@@Z:PROC ; CvGlobals::GetPlayerColorInfo
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetPlayerColorInfo@CvDllGameContext@@UAGPAVICvPlayerColorInfo1@@W4PlayerColorTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetPlayerColorInfo@CvDllGameContext@@UAGPAVICvPlayerColorInfo1@@W4PlayerColorTypes@@@Z$0
__ehfuncinfo$?GetPlayerColorInfo@CvDllGameContext@@UAGPAVICvPlayerColorInfo1@@W4PlayerColorTypes@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetPlayerColorInfo@CvDllGameContext@@UAGPAVICvPlayerColorInfo1@@W4PlayerColorTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?GetPlayerColorInfo@CvDllGameContext@@UAGPAVICvPlayerColorInfo1@@W4PlayerColorTypes@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
$T228171 = 12						; size = 4
_e$ = 12						; size = 4
?GetPlayerColorInfo@CvDllGameContext@@UAGPAVICvPlayerColorInfo1@@W4PlayerColorTypes@@@Z PROC ; CvDllGameContext::GetPlayerColorInfo, COMDAT

; 481  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?GetPlayerColorInfo@CvDllGameContext@@UAGPAVICvPlayerColorInfo1@@W4PlayerColorTypes@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp

; 482  : 	CvPlayerColorInfo* pkInfo = GC.GetPlayerColorInfo(e);

	mov	eax, DWORD PTR _e$[esp+8]
	push	esi
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetPlayerColorInfo@CvGlobals@@QAEPAVCvPlayerColorInfo@@W4PlayerColorTypes@@@Z ; CvGlobals::GetPlayerColorInfo
	mov	esi, eax

; 483  : 	return (NULL != pkInfo)? new CvDllPlayerColorInfo(pkInfo) : NULL;

	test	esi, esi
	je	SHORT $LN5@GetPlayerC
	push	12					; 0000000cH
	call	??2CvDllPlayerColorInfo@@SAPAXI@Z	; CvDllPlayerColorInfo::operator new
	add	esp, 4
	mov	DWORD PTR $T228171[esp+12], eax
	mov	DWORD PTR __$EHRec$[esp+24], 0
	test	eax, eax
	je	SHORT $LN5@GetPlayerC
	push	esi
	mov	ecx, eax
	call	??0CvDllPlayerColorInfo@@QAE@PAVCvPlayerColorInfo@@@Z ; CvDllPlayerColorInfo::CvDllPlayerColorInfo

; 484  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
$LN5@GetPlayerC:
	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	xor	eax, eax
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetPlayerColorInfo@CvDllGameContext@@UAGPAVICvPlayerColorInfo1@@W4PlayerColorTypes@@@Z$0:
	mov	eax, DWORD PTR $T228171[ebp-4]
	push	eax
	call	??3CvDllPlayerColorInfo@@SAXPAX@Z	; CvDllPlayerColorInfo::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetPlayerColorInfo@CvDllGameContext@@UAGPAVICvPlayerColorInfo1@@W4PlayerColorTypes@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?GetPlayerColorInfo@CvDllGameContext@@UAGPAVICvPlayerColorInfo1@@W4PlayerColorTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetPlayerColorInfo@CvDllGameContext@@UAGPAVICvPlayerColorInfo1@@W4PlayerColorTypes@@@Z ENDP ; CvDllGameContext::GetPlayerColorInfo
PUBLIC	?GetPlayerOptionInfo@CvDllGameContext@@UAGPAVICvPlayerOptionInfo1@@W4PlayerOptionTypes@@@Z ; CvDllGameContext::GetPlayerOptionInfo
EXTRN	??3CvDllPlayerOptionInfo@@SAXPAX@Z:PROC		; CvDllPlayerOptionInfo::operator delete
EXTRN	??0CvDllPlayerOptionInfo@@QAE@PAVCvPlayerOptionInfo@@@Z:PROC ; CvDllPlayerOptionInfo::CvDllPlayerOptionInfo
EXTRN	??2CvDllPlayerOptionInfo@@SAPAXI@Z:PROC		; CvDllPlayerOptionInfo::operator new
EXTRN	?getPlayerOptionInfo@CvGlobals@@QAEPAVCvPlayerOptionInfo@@W4PlayerOptionTypes@@@Z:PROC ; CvGlobals::getPlayerOptionInfo
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetPlayerOptionInfo@CvDllGameContext@@UAGPAVICvPlayerOptionInfo1@@W4PlayerOptionTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetPlayerOptionInfo@CvDllGameContext@@UAGPAVICvPlayerOptionInfo1@@W4PlayerOptionTypes@@@Z$0
__ehfuncinfo$?GetPlayerOptionInfo@CvDllGameContext@@UAGPAVICvPlayerOptionInfo1@@W4PlayerOptionTypes@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetPlayerOptionInfo@CvDllGameContext@@UAGPAVICvPlayerOptionInfo1@@W4PlayerOptionTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?GetPlayerOptionInfo@CvDllGameContext@@UAGPAVICvPlayerOptionInfo1@@W4PlayerOptionTypes@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
$T228187 = 12						; size = 4
_ePlayerOptionNum$ = 12					; size = 4
?GetPlayerOptionInfo@CvDllGameContext@@UAGPAVICvPlayerOptionInfo1@@W4PlayerOptionTypes@@@Z PROC ; CvDllGameContext::GetPlayerOptionInfo, COMDAT

; 487  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?GetPlayerOptionInfo@CvDllGameContext@@UAGPAVICvPlayerOptionInfo1@@W4PlayerOptionTypes@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp

; 488  : 	CvPlayerOptionInfo* pkInfo = GC.getPlayerOptionInfo(ePlayerOptionNum);

	mov	eax, DWORD PTR _ePlayerOptionNum$[esp+8]
	push	esi
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getPlayerOptionInfo@CvGlobals@@QAEPAVCvPlayerOptionInfo@@W4PlayerOptionTypes@@@Z ; CvGlobals::getPlayerOptionInfo
	mov	esi, eax

; 489  : 	return (NULL != pkInfo)? new CvDllPlayerOptionInfo(pkInfo) : NULL;

	test	esi, esi
	je	SHORT $LN5@GetPlayerO
	push	12					; 0000000cH
	call	??2CvDllPlayerOptionInfo@@SAPAXI@Z	; CvDllPlayerOptionInfo::operator new
	add	esp, 4
	mov	DWORD PTR $T228187[esp+12], eax
	mov	DWORD PTR __$EHRec$[esp+24], 0
	test	eax, eax
	je	SHORT $LN5@GetPlayerO
	push	esi
	mov	ecx, eax
	call	??0CvDllPlayerOptionInfo@@QAE@PAVCvPlayerOptionInfo@@@Z ; CvDllPlayerOptionInfo::CvDllPlayerOptionInfo

; 490  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
$LN5@GetPlayerO:
	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	xor	eax, eax
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetPlayerOptionInfo@CvDllGameContext@@UAGPAVICvPlayerOptionInfo1@@W4PlayerOptionTypes@@@Z$0:
	mov	eax, DWORD PTR $T228187[ebp-4]
	push	eax
	call	??3CvDllPlayerOptionInfo@@SAXPAX@Z	; CvDllPlayerOptionInfo::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetPlayerOptionInfo@CvDllGameContext@@UAGPAVICvPlayerOptionInfo1@@W4PlayerOptionTypes@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?GetPlayerOptionInfo@CvDllGameContext@@UAGPAVICvPlayerOptionInfo1@@W4PlayerOptionTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetPlayerOptionInfo@CvDllGameContext@@UAGPAVICvPlayerOptionInfo1@@W4PlayerOptionTypes@@@Z ENDP ; CvDllGameContext::GetPlayerOptionInfo
PUBLIC	?GetPolicyInfo@CvDllGameContext@@UAGPAVICvPolicyInfo1@@W4PolicyTypes@@@Z ; CvDllGameContext::GetPolicyInfo
EXTRN	??3CvDllPolicyInfo@@SAXPAX@Z:PROC		; CvDllPolicyInfo::operator delete
EXTRN	??0CvDllPolicyInfo@@QAE@PAVCvPolicyEntry@@@Z:PROC ; CvDllPolicyInfo::CvDllPolicyInfo
EXTRN	??2CvDllPolicyInfo@@SAPAXI@Z:PROC		; CvDllPolicyInfo::operator new
EXTRN	?getPolicyInfo@CvGlobals@@QAEPAVCvPolicyEntry@@W4PolicyTypes@@@Z:PROC ; CvGlobals::getPolicyInfo
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetPolicyInfo@CvDllGameContext@@UAGPAVICvPolicyInfo1@@W4PolicyTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetPolicyInfo@CvDllGameContext@@UAGPAVICvPolicyInfo1@@W4PolicyTypes@@@Z$0
__ehfuncinfo$?GetPolicyInfo@CvDllGameContext@@UAGPAVICvPolicyInfo1@@W4PolicyTypes@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetPolicyInfo@CvDllGameContext@@UAGPAVICvPolicyInfo1@@W4PolicyTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?GetPolicyInfo@CvDllGameContext@@UAGPAVICvPolicyInfo1@@W4PolicyTypes@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
$T228203 = 12						; size = 4
_ePolicy$ = 12						; size = 4
?GetPolicyInfo@CvDllGameContext@@UAGPAVICvPolicyInfo1@@W4PolicyTypes@@@Z PROC ; CvDllGameContext::GetPolicyInfo, COMDAT

; 493  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?GetPolicyInfo@CvDllGameContext@@UAGPAVICvPolicyInfo1@@W4PolicyTypes@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp

; 494  : 	CvPolicyEntry* pkInfo = GC.getPolicyInfo(ePolicy);

	mov	eax, DWORD PTR _ePolicy$[esp+8]
	push	esi
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getPolicyInfo@CvGlobals@@QAEPAVCvPolicyEntry@@W4PolicyTypes@@@Z ; CvGlobals::getPolicyInfo
	mov	esi, eax

; 495  : 	return (NULL != pkInfo)? new CvDllPolicyInfo(pkInfo) : NULL;

	test	esi, esi
	je	SHORT $LN5@GetPolicyI
	push	12					; 0000000cH
	call	??2CvDllPolicyInfo@@SAPAXI@Z		; CvDllPolicyInfo::operator new
	add	esp, 4
	mov	DWORD PTR $T228203[esp+12], eax
	mov	DWORD PTR __$EHRec$[esp+24], 0
	test	eax, eax
	je	SHORT $LN5@GetPolicyI
	push	esi
	mov	ecx, eax
	call	??0CvDllPolicyInfo@@QAE@PAVCvPolicyEntry@@@Z ; CvDllPolicyInfo::CvDllPolicyInfo

; 496  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
$LN5@GetPolicyI:
	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	xor	eax, eax
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetPolicyInfo@CvDllGameContext@@UAGPAVICvPolicyInfo1@@W4PolicyTypes@@@Z$0:
	mov	eax, DWORD PTR $T228203[ebp-4]
	push	eax
	call	??3CvDllPolicyInfo@@SAXPAX@Z		; CvDllPolicyInfo::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetPolicyInfo@CvDllGameContext@@UAGPAVICvPolicyInfo1@@W4PolicyTypes@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?GetPolicyInfo@CvDllGameContext@@UAGPAVICvPolicyInfo1@@W4PolicyTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetPolicyInfo@CvDllGameContext@@UAGPAVICvPolicyInfo1@@W4PolicyTypes@@@Z ENDP ; CvDllGameContext::GetPolicyInfo
PUBLIC	?GetPromotionInfo@CvDllGameContext@@UAGPAVICvPromotionInfo1@@W4PromotionTypes@@@Z ; CvDllGameContext::GetPromotionInfo
EXTRN	??3CvDllPromotionInfo@@SAXPAX@Z:PROC		; CvDllPromotionInfo::operator delete
EXTRN	??0CvDllPromotionInfo@@QAE@PAVCvPromotionEntry@@@Z:PROC ; CvDllPromotionInfo::CvDllPromotionInfo
EXTRN	??2CvDllPromotionInfo@@SAPAXI@Z:PROC		; CvDllPromotionInfo::operator new
EXTRN	?getPromotionInfo@CvGlobals@@QAEPAVCvPromotionEntry@@W4PromotionTypes@@@Z:PROC ; CvGlobals::getPromotionInfo
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetPromotionInfo@CvDllGameContext@@UAGPAVICvPromotionInfo1@@W4PromotionTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetPromotionInfo@CvDllGameContext@@UAGPAVICvPromotionInfo1@@W4PromotionTypes@@@Z$0
__ehfuncinfo$?GetPromotionInfo@CvDllGameContext@@UAGPAVICvPromotionInfo1@@W4PromotionTypes@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetPromotionInfo@CvDllGameContext@@UAGPAVICvPromotionInfo1@@W4PromotionTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?GetPromotionInfo@CvDllGameContext@@UAGPAVICvPromotionInfo1@@W4PromotionTypes@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
$T228219 = 12						; size = 4
_ePromotion$ = 12					; size = 4
?GetPromotionInfo@CvDllGameContext@@UAGPAVICvPromotionInfo1@@W4PromotionTypes@@@Z PROC ; CvDllGameContext::GetPromotionInfo, COMDAT

; 499  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?GetPromotionInfo@CvDllGameContext@@UAGPAVICvPromotionInfo1@@W4PromotionTypes@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp

; 500  : 	CvPromotionEntry* pkInfo = GC.getPromotionInfo(ePromotion);

	mov	eax, DWORD PTR _ePromotion$[esp+8]
	push	esi
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getPromotionInfo@CvGlobals@@QAEPAVCvPromotionEntry@@W4PromotionTypes@@@Z ; CvGlobals::getPromotionInfo
	mov	esi, eax

; 501  : 	return (NULL != pkInfo)? new CvDllPromotionInfo(pkInfo) : NULL;

	test	esi, esi
	je	SHORT $LN5@GetPromoti
	push	12					; 0000000cH
	call	??2CvDllPromotionInfo@@SAPAXI@Z		; CvDllPromotionInfo::operator new
	add	esp, 4
	mov	DWORD PTR $T228219[esp+12], eax
	mov	DWORD PTR __$EHRec$[esp+24], 0
	test	eax, eax
	je	SHORT $LN5@GetPromoti
	push	esi
	mov	ecx, eax
	call	??0CvDllPromotionInfo@@QAE@PAVCvPromotionEntry@@@Z ; CvDllPromotionInfo::CvDllPromotionInfo

; 502  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
$LN5@GetPromoti:
	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	xor	eax, eax
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetPromotionInfo@CvDllGameContext@@UAGPAVICvPromotionInfo1@@W4PromotionTypes@@@Z$0:
	mov	eax, DWORD PTR $T228219[ebp-4]
	push	eax
	call	??3CvDllPromotionInfo@@SAXPAX@Z		; CvDllPromotionInfo::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetPromotionInfo@CvDllGameContext@@UAGPAVICvPromotionInfo1@@W4PromotionTypes@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?GetPromotionInfo@CvDllGameContext@@UAGPAVICvPromotionInfo1@@W4PromotionTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetPromotionInfo@CvDllGameContext@@UAGPAVICvPromotionInfo1@@W4PromotionTypes@@@Z ENDP ; CvDllGameContext::GetPromotionInfo
PUBLIC	?GetResourceInfo@CvDllGameContext@@UAGPAVICvResourceInfo1@@W4ResourceTypes@@@Z ; CvDllGameContext::GetResourceInfo
EXTRN	??3CvDllResourceInfo@@SAXPAX@Z:PROC		; CvDllResourceInfo::operator delete
EXTRN	??0CvDllResourceInfo@@QAE@PAVCvResourceInfo@@@Z:PROC ; CvDllResourceInfo::CvDllResourceInfo
EXTRN	??2CvDllResourceInfo@@SAPAXI@Z:PROC		; CvDllResourceInfo::operator new
EXTRN	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z:PROC ; CvGlobals::getResourceInfo
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetResourceInfo@CvDllGameContext@@UAGPAVICvResourceInfo1@@W4ResourceTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetResourceInfo@CvDllGameContext@@UAGPAVICvResourceInfo1@@W4ResourceTypes@@@Z$0
__ehfuncinfo$?GetResourceInfo@CvDllGameContext@@UAGPAVICvResourceInfo1@@W4ResourceTypes@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetResourceInfo@CvDllGameContext@@UAGPAVICvResourceInfo1@@W4ResourceTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?GetResourceInfo@CvDllGameContext@@UAGPAVICvResourceInfo1@@W4ResourceTypes@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
$T228235 = 12						; size = 4
_eResourceNum$ = 12					; size = 4
?GetResourceInfo@CvDllGameContext@@UAGPAVICvResourceInfo1@@W4ResourceTypes@@@Z PROC ; CvDllGameContext::GetResourceInfo, COMDAT

; 505  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?GetResourceInfo@CvDllGameContext@@UAGPAVICvResourceInfo1@@W4ResourceTypes@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp

; 506  : 	CvResourceInfo* pkInfo = GC.getResourceInfo(eResourceNum);

	mov	eax, DWORD PTR _eResourceNum$[esp+8]
	push	esi
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z ; CvGlobals::getResourceInfo
	mov	esi, eax

; 507  : 	return (NULL != pkInfo)? new CvDllResourceInfo(pkInfo) : NULL;

	test	esi, esi
	je	SHORT $LN5@GetResourc
	push	12					; 0000000cH
	call	??2CvDllResourceInfo@@SAPAXI@Z		; CvDllResourceInfo::operator new
	add	esp, 4
	mov	DWORD PTR $T228235[esp+12], eax
	mov	DWORD PTR __$EHRec$[esp+24], 0
	test	eax, eax
	je	SHORT $LN5@GetResourc
	push	esi
	mov	ecx, eax
	call	??0CvDllResourceInfo@@QAE@PAVCvResourceInfo@@@Z ; CvDllResourceInfo::CvDllResourceInfo

; 508  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
$LN5@GetResourc:
	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	xor	eax, eax
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetResourceInfo@CvDllGameContext@@UAGPAVICvResourceInfo1@@W4ResourceTypes@@@Z$0:
	mov	eax, DWORD PTR $T228235[ebp-4]
	push	eax
	call	??3CvDllResourceInfo@@SAXPAX@Z		; CvDllResourceInfo::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetResourceInfo@CvDllGameContext@@UAGPAVICvResourceInfo1@@W4ResourceTypes@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?GetResourceInfo@CvDllGameContext@@UAGPAVICvResourceInfo1@@W4ResourceTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetResourceInfo@CvDllGameContext@@UAGPAVICvResourceInfo1@@W4ResourceTypes@@@Z ENDP ; CvDllGameContext::GetResourceInfo
PUBLIC	?GetTechInfo@CvDllGameContext@@UAGPAVICvTechInfo1@@W4TechTypes@@@Z ; CvDllGameContext::GetTechInfo
EXTRN	??3CvDllTechInfo@@SAXPAX@Z:PROC			; CvDllTechInfo::operator delete
EXTRN	??0CvDllTechInfo@@QAE@PAVCvTechEntry@@@Z:PROC	; CvDllTechInfo::CvDllTechInfo
EXTRN	??2CvDllTechInfo@@SAPAXI@Z:PROC			; CvDllTechInfo::operator new
EXTRN	?getTechInfo@CvGlobals@@QAEPAVCvTechEntry@@W4TechTypes@@@Z:PROC ; CvGlobals::getTechInfo
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetTechInfo@CvDllGameContext@@UAGPAVICvTechInfo1@@W4TechTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetTechInfo@CvDllGameContext@@UAGPAVICvTechInfo1@@W4TechTypes@@@Z$0
__ehfuncinfo$?GetTechInfo@CvDllGameContext@@UAGPAVICvTechInfo1@@W4TechTypes@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetTechInfo@CvDllGameContext@@UAGPAVICvTechInfo1@@W4TechTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?GetTechInfo@CvDllGameContext@@UAGPAVICvTechInfo1@@W4TechTypes@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
$T228251 = 12						; size = 4
_eTech$ = 12						; size = 4
?GetTechInfo@CvDllGameContext@@UAGPAVICvTechInfo1@@W4TechTypes@@@Z PROC ; CvDllGameContext::GetTechInfo, COMDAT

; 511  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?GetTechInfo@CvDllGameContext@@UAGPAVICvTechInfo1@@W4TechTypes@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp

; 512  : 	CvTechEntry* pkEntry = GC.getTechInfo(eTech);

	mov	eax, DWORD PTR _eTech$[esp+8]
	push	esi
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getTechInfo@CvGlobals@@QAEPAVCvTechEntry@@W4TechTypes@@@Z ; CvGlobals::getTechInfo
	mov	esi, eax

; 513  : 	return (NULL != pkEntry)? new CvDllTechInfo(pkEntry) : NULL;

	test	esi, esi
	je	SHORT $LN5@GetTechInf
	push	12					; 0000000cH
	call	??2CvDllTechInfo@@SAPAXI@Z		; CvDllTechInfo::operator new
	add	esp, 4
	mov	DWORD PTR $T228251[esp+12], eax
	mov	DWORD PTR __$EHRec$[esp+24], 0
	test	eax, eax
	je	SHORT $LN5@GetTechInf
	push	esi
	mov	ecx, eax
	call	??0CvDllTechInfo@@QAE@PAVCvTechEntry@@@Z ; CvDllTechInfo::CvDllTechInfo

; 514  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
$LN5@GetTechInf:
	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	xor	eax, eax
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetTechInfo@CvDllGameContext@@UAGPAVICvTechInfo1@@W4TechTypes@@@Z$0:
	mov	eax, DWORD PTR $T228251[ebp-4]
	push	eax
	call	??3CvDllTechInfo@@SAXPAX@Z		; CvDllTechInfo::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetTechInfo@CvDllGameContext@@UAGPAVICvTechInfo1@@W4TechTypes@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?GetTechInfo@CvDllGameContext@@UAGPAVICvTechInfo1@@W4TechTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetTechInfo@CvDllGameContext@@UAGPAVICvTechInfo1@@W4TechTypes@@@Z ENDP ; CvDllGameContext::GetTechInfo
PUBLIC	?GetTerrainInfo@CvDllGameContext@@UAGPAVICvTerrainInfo1@@W4TerrainTypes@@@Z ; CvDllGameContext::GetTerrainInfo
EXTRN	??3CvDllTerrainInfo@@SAXPAX@Z:PROC		; CvDllTerrainInfo::operator delete
EXTRN	??0CvDllTerrainInfo@@QAE@PAVCvTerrainInfo@@@Z:PROC ; CvDllTerrainInfo::CvDllTerrainInfo
EXTRN	??2CvDllTerrainInfo@@SAPAXI@Z:PROC		; CvDllTerrainInfo::operator new
EXTRN	?getTerrainInfo@CvGlobals@@QAEPAVCvTerrainInfo@@W4TerrainTypes@@@Z:PROC ; CvGlobals::getTerrainInfo
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetTerrainInfo@CvDllGameContext@@UAGPAVICvTerrainInfo1@@W4TerrainTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetTerrainInfo@CvDllGameContext@@UAGPAVICvTerrainInfo1@@W4TerrainTypes@@@Z$0
__ehfuncinfo$?GetTerrainInfo@CvDllGameContext@@UAGPAVICvTerrainInfo1@@W4TerrainTypes@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetTerrainInfo@CvDllGameContext@@UAGPAVICvTerrainInfo1@@W4TerrainTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?GetTerrainInfo@CvDllGameContext@@UAGPAVICvTerrainInfo1@@W4TerrainTypes@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
$T228267 = 12						; size = 4
_eTerrainNum$ = 12					; size = 4
?GetTerrainInfo@CvDllGameContext@@UAGPAVICvTerrainInfo1@@W4TerrainTypes@@@Z PROC ; CvDllGameContext::GetTerrainInfo, COMDAT

; 517  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?GetTerrainInfo@CvDllGameContext@@UAGPAVICvTerrainInfo1@@W4TerrainTypes@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp

; 518  : 	CvTerrainInfo* pkInfo = GC.getTerrainInfo(eTerrainNum);

	mov	eax, DWORD PTR _eTerrainNum$[esp+8]
	push	esi
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getTerrainInfo@CvGlobals@@QAEPAVCvTerrainInfo@@W4TerrainTypes@@@Z ; CvGlobals::getTerrainInfo
	mov	esi, eax

; 519  : 	return (NULL != pkInfo)? new CvDllTerrainInfo(pkInfo) : NULL;

	test	esi, esi
	je	SHORT $LN5@GetTerrain
	push	12					; 0000000cH
	call	??2CvDllTerrainInfo@@SAPAXI@Z		; CvDllTerrainInfo::operator new
	add	esp, 4
	mov	DWORD PTR $T228267[esp+12], eax
	mov	DWORD PTR __$EHRec$[esp+24], 0
	test	eax, eax
	je	SHORT $LN5@GetTerrain
	push	esi
	mov	ecx, eax
	call	??0CvDllTerrainInfo@@QAE@PAVCvTerrainInfo@@@Z ; CvDllTerrainInfo::CvDllTerrainInfo

; 520  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
$LN5@GetTerrain:
	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	xor	eax, eax
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetTerrainInfo@CvDllGameContext@@UAGPAVICvTerrainInfo1@@W4TerrainTypes@@@Z$0:
	mov	eax, DWORD PTR $T228267[ebp-4]
	push	eax
	call	??3CvDllTerrainInfo@@SAXPAX@Z		; CvDllTerrainInfo::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetTerrainInfo@CvDllGameContext@@UAGPAVICvTerrainInfo1@@W4TerrainTypes@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?GetTerrainInfo@CvDllGameContext@@UAGPAVICvTerrainInfo1@@W4TerrainTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetTerrainInfo@CvDllGameContext@@UAGPAVICvTerrainInfo1@@W4TerrainTypes@@@Z ENDP ; CvDllGameContext::GetTerrainInfo
PUBLIC	?GetUnitInfo@CvDllGameContext@@UAGPAVICvUnitInfo1@@W4UnitTypes@@@Z ; CvDllGameContext::GetUnitInfo
EXTRN	??3CvDllUnitInfo@@SAXPAX@Z:PROC			; CvDllUnitInfo::operator delete
EXTRN	??0CvDllUnitInfo@@QAE@PAVCvUnitEntry@@@Z:PROC	; CvDllUnitInfo::CvDllUnitInfo
EXTRN	??2CvDllUnitInfo@@SAPAXI@Z:PROC			; CvDllUnitInfo::operator new
EXTRN	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z:PROC ; CvGlobals::getUnitInfo
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetUnitInfo@CvDllGameContext@@UAGPAVICvUnitInfo1@@W4UnitTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetUnitInfo@CvDllGameContext@@UAGPAVICvUnitInfo1@@W4UnitTypes@@@Z$0
__ehfuncinfo$?GetUnitInfo@CvDllGameContext@@UAGPAVICvUnitInfo1@@W4UnitTypes@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetUnitInfo@CvDllGameContext@@UAGPAVICvUnitInfo1@@W4UnitTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?GetUnitInfo@CvDllGameContext@@UAGPAVICvUnitInfo1@@W4UnitTypes@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
$T228283 = 12						; size = 4
_eUnit$ = 12						; size = 4
?GetUnitInfo@CvDllGameContext@@UAGPAVICvUnitInfo1@@W4UnitTypes@@@Z PROC ; CvDllGameContext::GetUnitInfo, COMDAT

; 523  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?GetUnitInfo@CvDllGameContext@@UAGPAVICvUnitInfo1@@W4UnitTypes@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp

; 524  : 	CvUnitEntry* pkEntry = GC.getUnitInfo(eUnit);

	mov	eax, DWORD PTR _eUnit$[esp+8]
	push	esi
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z ; CvGlobals::getUnitInfo
	mov	esi, eax

; 525  : 	return (NULL != pkEntry)? new CvDllUnitInfo(pkEntry) : NULL;

	test	esi, esi
	je	SHORT $LN5@GetUnitInf
	push	12					; 0000000cH
	call	??2CvDllUnitInfo@@SAPAXI@Z		; CvDllUnitInfo::operator new
	add	esp, 4
	mov	DWORD PTR $T228283[esp+12], eax
	mov	DWORD PTR __$EHRec$[esp+24], 0
	test	eax, eax
	je	SHORT $LN5@GetUnitInf
	push	esi
	mov	ecx, eax
	call	??0CvDllUnitInfo@@QAE@PAVCvUnitEntry@@@Z ; CvDllUnitInfo::CvDllUnitInfo

; 526  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
$LN5@GetUnitInf:
	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	xor	eax, eax
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetUnitInfo@CvDllGameContext@@UAGPAVICvUnitInfo1@@W4UnitTypes@@@Z$0:
	mov	eax, DWORD PTR $T228283[ebp-4]
	push	eax
	call	??3CvDllUnitInfo@@SAXPAX@Z		; CvDllUnitInfo::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetUnitInfo@CvDllGameContext@@UAGPAVICvUnitInfo1@@W4UnitTypes@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?GetUnitInfo@CvDllGameContext@@UAGPAVICvUnitInfo1@@W4UnitTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetUnitInfo@CvDllGameContext@@UAGPAVICvUnitInfo1@@W4UnitTypes@@@Z ENDP ; CvDllGameContext::GetUnitInfo
PUBLIC	?GetUnitCombatClassInfo@CvDllGameContext@@UAGPAVICvUnitCombatClassInfo1@@W4UnitCombatTypes@@@Z ; CvDllGameContext::GetUnitCombatClassInfo
EXTRN	??3CvDllUnitCombatClassInfo@@SAXPAX@Z:PROC	; CvDllUnitCombatClassInfo::operator delete
EXTRN	??0CvDllUnitCombatClassInfo@@QAE@PAVCvBaseInfo@@@Z:PROC ; CvDllUnitCombatClassInfo::CvDllUnitCombatClassInfo
EXTRN	??2CvDllUnitCombatClassInfo@@SAPAXI@Z:PROC	; CvDllUnitCombatClassInfo::operator new
EXTRN	?getUnitCombatClassInfo@CvGlobals@@QAEPAVCvBaseInfo@@W4UnitCombatTypes@@@Z:PROC ; CvGlobals::getUnitCombatClassInfo
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetUnitCombatClassInfo@CvDllGameContext@@UAGPAVICvUnitCombatClassInfo1@@W4UnitCombatTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetUnitCombatClassInfo@CvDllGameContext@@UAGPAVICvUnitCombatClassInfo1@@W4UnitCombatTypes@@@Z$0
__ehfuncinfo$?GetUnitCombatClassInfo@CvDllGameContext@@UAGPAVICvUnitCombatClassInfo1@@W4UnitCombatTypes@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetUnitCombatClassInfo@CvDllGameContext@@UAGPAVICvUnitCombatClassInfo1@@W4UnitCombatTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?GetUnitCombatClassInfo@CvDllGameContext@@UAGPAVICvUnitCombatClassInfo1@@W4UnitCombatTypes@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
$T228299 = 12						; size = 4
_eUnitCombat$ = 12					; size = 4
?GetUnitCombatClassInfo@CvDllGameContext@@UAGPAVICvUnitCombatClassInfo1@@W4UnitCombatTypes@@@Z PROC ; CvDllGameContext::GetUnitCombatClassInfo, COMDAT

; 529  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?GetUnitCombatClassInfo@CvDllGameContext@@UAGPAVICvUnitCombatClassInfo1@@W4UnitCombatTypes@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp

; 530  : 	CvBaseInfo* pkEntry = GC.getUnitCombatClassInfo(eUnitCombat);

	mov	eax, DWORD PTR _eUnitCombat$[esp+8]
	push	esi
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getUnitCombatClassInfo@CvGlobals@@QAEPAVCvBaseInfo@@W4UnitCombatTypes@@@Z ; CvGlobals::getUnitCombatClassInfo
	mov	esi, eax

; 531  : 	return (NULL != pkEntry)? new CvDllUnitCombatClassInfo(pkEntry) : NULL;

	test	esi, esi
	je	SHORT $LN5@GetUnitCom
	push	12					; 0000000cH
	call	??2CvDllUnitCombatClassInfo@@SAPAXI@Z	; CvDllUnitCombatClassInfo::operator new
	add	esp, 4
	mov	DWORD PTR $T228299[esp+12], eax
	mov	DWORD PTR __$EHRec$[esp+24], 0
	test	eax, eax
	je	SHORT $LN5@GetUnitCom
	push	esi
	mov	ecx, eax
	call	??0CvDllUnitCombatClassInfo@@QAE@PAVCvBaseInfo@@@Z ; CvDllUnitCombatClassInfo::CvDllUnitCombatClassInfo

; 532  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
$LN5@GetUnitCom:
	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	xor	eax, eax
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetUnitCombatClassInfo@CvDllGameContext@@UAGPAVICvUnitCombatClassInfo1@@W4UnitCombatTypes@@@Z$0:
	mov	eax, DWORD PTR $T228299[ebp-4]
	push	eax
	call	??3CvDllUnitCombatClassInfo@@SAXPAX@Z	; CvDllUnitCombatClassInfo::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetUnitCombatClassInfo@CvDllGameContext@@UAGPAVICvUnitCombatClassInfo1@@W4UnitCombatTypes@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?GetUnitCombatClassInfo@CvDllGameContext@@UAGPAVICvUnitCombatClassInfo1@@W4UnitCombatTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetUnitCombatClassInfo@CvDllGameContext@@UAGPAVICvUnitCombatClassInfo1@@W4UnitCombatTypes@@@Z ENDP ; CvDllGameContext::GetUnitCombatClassInfo
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R2exception@std@@8
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx

; 371  : 		{	// construct from message string

	push	esi
	lea	eax, DWORD PTR __Message$[esp]
	push	eax
	mov	esi, ecx
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	mov	DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@

; 372  : 		}

	mov	eax, esi
	pop	esi
	ret	4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	?GetVictoryInfo@CvDllGameContext@@UAGPAVICvVictoryInfo1@@W4VictoryTypes@@@Z ; CvDllGameContext::GetVictoryInfo
EXTRN	??3CvDllVictoryInfo@@SAXPAX@Z:PROC		; CvDllVictoryInfo::operator delete
EXTRN	??0CvDllVictoryInfo@@QAE@PAVCvVictoryInfo@@@Z:PROC ; CvDllVictoryInfo::CvDllVictoryInfo
EXTRN	??2CvDllVictoryInfo@@SAPAXI@Z:PROC		; CvDllVictoryInfo::operator new
EXTRN	?getVictoryInfo@CvGlobals@@QAEPAVCvVictoryInfo@@W4VictoryTypes@@@Z:PROC ; CvGlobals::getVictoryInfo
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvdllcontext.cpp
xdata$x	SEGMENT
__unwindtable$?GetVictoryInfo@CvDllGameContext@@UAGPAVICvVictoryInfo1@@W4VictoryTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetVictoryInfo@CvDllGameContext@@UAGPAVICvVictoryInfo1@@W4VictoryTypes@@@Z$0
__ehfuncinfo$?GetVictoryInfo@CvDllGameContext@@UAGPAVICvVictoryInfo1@@W4VictoryTypes@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetVictoryInfo@CvDllGameContext@@UAGPAVICvVictoryInfo1@@W4VictoryTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?GetVictoryInfo@CvDllGameContext@@UAGPAVICvVictoryInfo1@@W4VictoryTypes@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
$T228318 = 12						; size = 4
_eVictoryType$ = 12					; size = 4
?GetVictoryInfo@CvDllGameContext@@UAGPAVICvVictoryInfo1@@W4VictoryTypes@@@Z PROC ; CvDllGameContext::GetVictoryInfo, COMDAT

; 535  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?GetVictoryInfo@CvDllGameContext@@UAGPAVICvVictoryInfo1@@W4VictoryTypes@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp

; 536  : 	CvVictoryInfo* pkEntry = GC.getVictoryInfo(eVictoryType);

	mov	eax, DWORD PTR _eVictoryType$[esp+8]
	push	esi
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getVictoryInfo@CvGlobals@@QAEPAVCvVictoryInfo@@W4VictoryTypes@@@Z ; CvGlobals::getVictoryInfo
	mov	esi, eax

; 537  : 	return (NULL != pkEntry)? new CvDllVictoryInfo(pkEntry) : NULL;

	test	esi, esi
	je	SHORT $LN5@GetVictory
	push	12					; 0000000cH
	call	??2CvDllVictoryInfo@@SAPAXI@Z		; CvDllVictoryInfo::operator new
	add	esp, 4
	mov	DWORD PTR $T228318[esp+12], eax
	mov	DWORD PTR __$EHRec$[esp+24], 0
	test	eax, eax
	je	SHORT $LN5@GetVictory
	push	esi
	mov	ecx, eax
	call	??0CvDllVictoryInfo@@QAE@PAVCvVictoryInfo@@@Z ; CvDllVictoryInfo::CvDllVictoryInfo

; 538  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
$LN5@GetVictory:
	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	xor	eax, eax
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetVictoryInfo@CvDllGameContext@@UAGPAVICvVictoryInfo1@@W4VictoryTypes@@@Z$0:
	mov	eax, DWORD PTR $T228318[ebp-4]
	push	eax
	call	??3CvDllVictoryInfo@@SAXPAX@Z		; CvDllVictoryInfo::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetVictoryInfo@CvDllGameContext@@UAGPAVICvVictoryInfo1@@W4VictoryTypes@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?GetVictoryInfo@CvDllGameContext@@UAGPAVICvVictoryInfo1@@W4VictoryTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetVictoryInfo@CvDllGameContext@@UAGPAVICvVictoryInfo1@@W4VictoryTypes@@@Z ENDP ; CvDllGameContext::GetVictoryInfo
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
EXTRN	__imp_??1exception@std@@UAE@XZ:PROC
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx

; 380  : 		{	// destroy the object

	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@

; 381  : 		}

	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogtpy
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN6@scalar@7
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@scalar@7:
	mov	eax, esi
	pop	esi
	ret	4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 59   : 	return (_Where);

	mov	eax, DWORD PTR __Where$[esp-4]

; 60   : 	}

	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	?GetNUM_CITY_PLOTS@CvDllGameContext@@UBGHXZ	; CvDllGameContext::GetNUM_CITY_PLOTS
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvdllcontext.cpp
;	COMDAT ?GetNUM_CITY_PLOTS@CvDllGameContext@@UBGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetNUM_CITY_PLOTS@CvDllGameContext@@UBGHXZ PROC	; CvDllGameContext::GetNUM_CITY_PLOTS, COMDAT

; 667  : 	return NUM_CITY_PLOTS;

	mov	eax, 37					; 00000025H

; 668  : }

	ret	4
?GetNUM_CITY_PLOTS@CvDllGameContext@@UBGHXZ ENDP	; CvDllGameContext::GetNUM_CITY_PLOTS
_TEXT	ENDS
PUBLIC	?GetHexDebugLayerNames@CvDllGameContext@@UAGPAPBDXZ ; CvDllGameContext::GetHexDebugLayerNames
EXTRN	?GetHexDebugLayerNames@CvGlobals@@QAEPAPBDXZ:PROC ; CvGlobals::GetHexDebugLayerNames
; Function compile flags: /Ogtpy
;	COMDAT ?GetHexDebugLayerNames@CvDllGameContext@@UAGPAPBDXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetHexDebugLayerNames@CvDllGameContext@@UAGPAPBDXZ PROC ; CvDllGameContext::GetHexDebugLayerNames, COMDAT

; 672  : 	return GC.GetHexDebugLayerNames();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetHexDebugLayerNames@CvGlobals@@QAEPAPBDXZ ; CvGlobals::GetHexDebugLayerNames

; 673  : }

	ret	4
?GetHexDebugLayerNames@CvDllGameContext@@UAGPAPBDXZ ENDP ; CvDllGameContext::GetHexDebugLayerNames
_TEXT	ENDS
PUBLIC	?GetHexDebugLayerScale@CvDllGameContext@@UAGMPBD@Z ; CvDllGameContext::GetHexDebugLayerScale
EXTRN	?GetHexDebugLayerScale@CvGlobals@@QAEMPBD@Z:PROC ; CvGlobals::GetHexDebugLayerScale
EXTRN	__fltused:DWORD
; Function compile flags: /Ogtpy
;	COMDAT ?GetHexDebugLayerScale@CvDllGameContext@@UAGMPBD@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_szLayerName$ = 12					; size = 4
?GetHexDebugLayerScale@CvDllGameContext@@UAGMPBD@Z PROC	; CvDllGameContext::GetHexDebugLayerScale, COMDAT

; 677  : 	return GC.GetHexDebugLayerScale(szLayerName);

	mov	eax, DWORD PTR _szLayerName$[esp-4]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetHexDebugLayerScale@CvGlobals@@QAEMPBD@Z ; CvGlobals::GetHexDebugLayerScale

; 678  : }

	ret	8
?GetHexDebugLayerScale@CvDllGameContext@@UAGMPBD@Z ENDP	; CvDllGameContext::GetHexDebugLayerScale
_TEXT	ENDS
PUBLIC	?GetHexDebugLayerString@CvDllGameContext@@UAG_NPAVICvPlot1@@PBDW4PlayerTypes@@PADI@Z ; CvDllGameContext::GetHexDebugLayerString
EXTRN	?GetHexDebugLayerString@CvGlobals@@QAE_NPAVCvPlot@@PBDW4PlayerTypes@@PADI@Z:PROC ; CvGlobals::GetHexDebugLayerString
EXTRN	?GetInstance@CvDllPlot@@QAEPAVCvPlot@@XZ:PROC	; CvDllPlot::GetInstance
; Function compile flags: /Ogtpy
;	COMDAT ?GetHexDebugLayerString@CvDllGameContext@@UAG_NPAVICvPlot1@@PBDW4PlayerTypes@@PADI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pPlot$ = 12						; size = 4
_szLayerName$ = 16					; size = 4
_ePlayer$ = 20						; size = 4
_szBuffer$ = 24						; size = 4
_uiBufferLength$ = 28					; size = 4
?GetHexDebugLayerString@CvDllGameContext@@UAG_NPAVICvPlot1@@PBDW4PlayerTypes@@PADI@Z PROC ; CvDllGameContext::GetHexDebugLayerString, COMDAT

; 682  : 	CvPlot* pkPlot = (NULL != pPlot)? static_cast<CvDllPlot*>(pPlot)->GetInstance() : NULL;

	mov	ecx, DWORD PTR _pPlot$[esp-4]
	test	ecx, ecx
	je	SHORT $LN1@GetHexDebu
	call	?GetInstance@CvDllPlot@@QAEPAVCvPlot@@XZ ; CvDllPlot::GetInstance

; 683  : 	if(pkPlot != NULL)

	test	eax, eax
	je	SHORT $LN1@GetHexDebu

; 684  : 	{
; 685  : 		return GC.GetHexDebugLayerString(pkPlot, szLayerName, ePlayer, szBuffer, uiBufferLength);

	mov	ecx, DWORD PTR _uiBufferLength$[esp-4]
	mov	edx, DWORD PTR _szBuffer$[esp-4]
	push	ecx
	mov	ecx, DWORD PTR _ePlayer$[esp]
	push	edx
	mov	edx, DWORD PTR _szLayerName$[esp+4]
	push	ecx
	push	edx
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetHexDebugLayerString@CvGlobals@@QAE_NPAVCvPlot@@PBDW4PlayerTypes@@PADI@Z ; CvGlobals::GetHexDebugLayerString

; 689  : }

	ret	24					; 00000018H
$LN1@GetHexDebu:

; 686  : 	}
; 687  : 
; 688  : 	return false;

	xor	al, al

; 689  : }

	ret	24					; 00000018H
?GetHexDebugLayerString@CvDllGameContext@@UAG_NPAVICvPlot1@@PBDW4PlayerTypes@@PADI@Z ENDP ; CvDllGameContext::GetHexDebugLayerString
_TEXT	ENDS
PUBLIC	?Init@CvDllGameContext@@UAGXXZ			; CvDllGameContext::Init
EXTRN	?init@CvGlobals@@QAEXXZ:PROC			; CvGlobals::init
; Function compile flags: /Ogtpy
;	COMDAT ?Init@CvDllGameContext@@UAGXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Init@CvDllGameContext@@UAGXXZ PROC			; CvDllGameContext::Init, COMDAT

; 693  : 	GC.init();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?init@CvGlobals@@QAEXXZ			; CvGlobals::init

; 694  : }

	ret	4
?Init@CvDllGameContext@@UAGXXZ ENDP			; CvDllGameContext::Init
_TEXT	ENDS
PUBLIC	??_7logic_error@std@@6B@			; std::logic_error::`vftable'
PUBLIC	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
PUBLIC	??_R4logic_error@std@@6B@			; std::logic_error::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	??_R3logic_error@std@@8				; std::logic_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2logic_error@std@@8				; std::logic_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@logic_error@std@@8		; std::logic_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?what@logic_error@std@@UBEPBDXZ			; std::logic_error::what
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z:PROC
EXTRN	__imp_??0exception@std@@QAE@XZ:PROC
EXTRN	??_Elogic_error@std@@UAEPAXI@Z:PROC		; std::logic_error::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@logic_error@std@@8
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
rdata$r	SEGMENT
??_R1A@?0A@EA@logic_error@std@@8 DD FLAT:??_R0?AVlogic_error@std@@@8 ; std::logic_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2logic_error@std@@8
rdata$r	SEGMENT
??_R2logic_error@std@@8 DD FLAT:??_R1A@?0A@EA@logic_error@std@@8 ; std::logic_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3logic_error@std@@8
rdata$r	SEGMENT
??_R3logic_error@std@@8 DD 00H				; std::logic_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4logic_error@std@@6B@
rdata$r	SEGMENT
??_R4logic_error@std@@6B@ DD 00H			; std::logic_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	FLAT:??_R3logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT
??_7logic_error@std@@6B@ DD FLAT:??_R4logic_error@std@@6B@ ; std::logic_error::`vftable'
	DD	FLAT:??_Elogic_error@std@@UAEPAXI@Z
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0
__ehfuncinfo$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Message$ = 8						; size = 4
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::logic_error::logic_error, COMDAT
; _this$ = ecx

; 26   : 		{	// construct from message string

	push	-1
	push	__ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR _this$[esp+20], esi
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	mov	eax, DWORD PTR __Message$[esp+16]
	push	eax
	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR __$EHRec$[esp+32], 0
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z

; 27   : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	mov	eax, esi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:
	mov	eax, OFFSET __ehfuncinfo$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::logic_error::logic_error
PUBLIC	?Uninit@CvDllGameContext@@UAGXXZ		; CvDllGameContext::Uninit
EXTRN	?uninit@CvGlobals@@QAEXXZ:PROC			; CvGlobals::uninit
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvdllcontext.cpp
;	COMDAT ?Uninit@CvDllGameContext@@UAGXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Uninit@CvDllGameContext@@UAGXXZ PROC			; CvDllGameContext::Uninit, COMDAT

; 698  : 	GC.uninit();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?uninit@CvGlobals@@QAEXXZ		; CvGlobals::uninit

; 699  : }

	ret	4
?Uninit@CvDllGameContext@@UAGXXZ ENDP			; CvDllGameContext::Uninit
_TEXT	ENDS
PUBLIC	?GetScriptSystemUtility@CvDllGameContext@@UAGPAVICvScriptSystemUtility1@@XZ ; CvDllGameContext::GetScriptSystemUtility
; Function compile flags: /Ogtpy
;	COMDAT ?GetScriptSystemUtility@CvDllGameContext@@UAGPAVICvScriptSystemUtility1@@XZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetScriptSystemUtility@CvDllGameContext@@UAGPAVICvScriptSystemUtility1@@XZ PROC ; CvDllGameContext::GetScriptSystemUtility, COMDAT

; 703  : 	return m_pScriptSystemUtility;

	mov	eax, DWORD PTR _this$[esp-4]
	mov	eax, DWORD PTR [eax+12]

; 704  : }

	ret	4
?GetScriptSystemUtility@CvDllGameContext@@UAGPAVICvScriptSystemUtility1@@XZ ENDP ; CvDllGameContext::GetScriptSystemUtility
_TEXT	ENDS
PUBLIC	??1logic_error@std@@UAE@XZ			; std::logic_error::~logic_error
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT
??1logic_error@std@@UAE@XZ PROC				; std::logic_error::~logic_error, COMDAT
; _this$ = ecx

; 30   : 		{	// destroy the object

	push	esi
	mov	esi, ecx

; 31   : 		}

	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, esi
	pop	esi
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
??1logic_error@std@@UAE@XZ ENDP				; std::logic_error::~logic_error
_TEXT	ENDS
PUBLIC	?GetNotificationType@CvDllGameContext@@UBGPBDH@Z ; CvDllGameContext::GetNotificationType
EXTRN	?GetTypeName@CvNotificationEntry@@QAEPBDXZ:PROC	; CvNotificationEntry::GetTypeName
EXTRN	?GetEntry@CvNotificationXMLEntries@@QAEPAVCvNotificationEntry@@H@Z:PROC ; CvNotificationXMLEntries::GetEntry
EXTRN	?GetNotificationEntries@CvGlobals@@QAEPAVCvNotificationXMLEntries@@XZ:PROC ; CvGlobals::GetNotificationEntries
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvdllcontext.cpp
;	COMDAT ?GetNotificationType@CvDllGameContext@@UBGPBDH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_NotificationID$ = 12					; size = 4
?GetNotificationType@CvDllGameContext@@UBGPBDH@Z PROC	; CvDllGameContext::GetNotificationType, COMDAT

; 708  : 	CvNotificationXMLEntries* pkEntries = GC.GetNotificationEntries();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetNotificationEntries@CvGlobals@@QAEPAVCvNotificationXMLEntries@@XZ ; CvGlobals::GetNotificationEntries

; 709  : 	if(pkEntries != NULL)

	test	eax, eax
	je	SHORT $LN1@GetNotific

; 710  : 	{
; 711  : 		CvNotificationEntry* pkEntry = pkEntries->GetEntry(NotificationID);

	mov	ecx, DWORD PTR _NotificationID$[esp-4]
	push	ecx
	mov	ecx, eax
	call	?GetEntry@CvNotificationXMLEntries@@QAEPAVCvNotificationEntry@@H@Z ; CvNotificationXMLEntries::GetEntry

; 712  : 		if(pkEntry != NULL)

	test	eax, eax
	je	SHORT $LN1@GetNotific

; 713  : 			return pkEntry->GetTypeName();

	mov	ecx, eax
	call	?GetTypeName@CvNotificationEntry@@QAEPBDXZ ; CvNotificationEntry::GetTypeName

; 717  : }

	ret	8
$LN1@GetNotific:

; 714  : 	}
; 715  : 
; 716  : 	return NULL;

	xor	eax, eax

; 717  : }

	ret	8
?GetNotificationType@CvDllGameContext@@UBGPBDH@Z ENDP	; CvDllGameContext::GetNotificationType
_TEXT	ENDS
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:PROC
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@logic_error@std@@UBEPBDXZ PROC			; std::logic_error::what, COMDAT
; _this$ = ecx

; 35   : 		return (_Str.c_str());

	add	ecx, 12					; 0000000cH
	jmp	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
?what@logic_error@std@@UBEPBDXZ ENDP			; std::logic_error::what
_TEXT	ENDS
PUBLIC	?GetLogging@CvDllGameContext@@UAG_NXZ		; CvDllGameContext::GetLogging
EXTRN	?getLogging@CvGlobals@@QAE_NXZ:PROC		; CvGlobals::getLogging
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvdllcontext.cpp
;	COMDAT ?GetLogging@CvDllGameContext@@UAG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetLogging@CvDllGameContext@@UAG_NXZ PROC		; CvDllGameContext::GetLogging, COMDAT

; 721  : 	return GC.getLogging();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging

; 722  : }

	ret	4
?GetLogging@CvDllGameContext@@UAG_NXZ ENDP		; CvDllGameContext::GetLogging
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Glogic_error@std@@UAEPAXI@Z PROC			; std::logic_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, esi
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN6@scalar@8
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@scalar@8:
	mov	eax, esi
	pop	esi
	ret	4
??_Glogic_error@std@@UAEPAXI@Z ENDP			; std::logic_error::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?SetLogging@CvDllGameContext@@UAGX_N@Z		; CvDllGameContext::SetLogging
EXTRN	?setLogging@CvGlobals@@QAEX_N@Z:PROC		; CvGlobals::setLogging
; Function compile flags: /Ogtpy
;	COMDAT ?SetLogging@CvDllGameContext@@UAGX_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_bEnable$ = 12						; size = 1
?SetLogging@CvDllGameContext@@UAGX_N@Z PROC		; CvDllGameContext::SetLogging, COMDAT

; 726  : 	GC.setLogging(bEnable);

	mov	eax, DWORD PTR _bEnable$[esp-4]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?setLogging@CvGlobals@@QAEX_N@Z		; CvGlobals::setLogging

; 727  : }

	ret	8
?SetLogging@CvDllGameContext@@UAGX_N@Z ENDP		; CvDllGameContext::SetLogging
_TEXT	ENDS
PUBLIC	?GetRandLogging@CvDllGameContext@@UAGHXZ	; CvDllGameContext::GetRandLogging
EXTRN	?getRandLogging@CvGlobals@@QAEHXZ:PROC		; CvGlobals::getRandLogging
; Function compile flags: /Ogtpy
;	COMDAT ?GetRandLogging@CvDllGameContext@@UAGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetRandLogging@CvDllGameContext@@UAGHXZ PROC		; CvDllGameContext::GetRandLogging, COMDAT

; 731  : 	return GC.getRandLogging();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getRandLogging@CvGlobals@@QAEHXZ	; CvGlobals::getRandLogging

; 732  : }

	ret	4
?GetRandLogging@CvDllGameContext@@UAGHXZ ENDP		; CvDllGameContext::GetRandLogging
_TEXT	ENDS
PUBLIC	?SetRandLogging@CvDllGameContext@@UAGXH@Z	; CvDllGameContext::SetRandLogging
EXTRN	?setRandLogging@CvGlobals@@QAEXH@Z:PROC		; CvGlobals::setRandLogging
; Function compile flags: /Ogtpy
;	COMDAT ?SetRandLogging@CvDllGameContext@@UAGXH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iRandLoggingFlags$ = 12				; size = 4
?SetRandLogging@CvDllGameContext@@UAGXH@Z PROC		; CvDllGameContext::SetRandLogging, COMDAT

; 736  : 	GC.setRandLogging(iRandLoggingFlags);

	mov	eax, DWORD PTR _iRandLoggingFlags$[esp-4]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?setRandLogging@CvGlobals@@QAEXH@Z	; CvGlobals::setRandLogging

; 737  : }

	ret	8
?SetRandLogging@CvDllGameContext@@UAGXH@Z ENDP		; CvDllGameContext::SetRandLogging
_TEXT	ENDS
PUBLIC	?GetAILogging@CvDllGameContext@@UAG_NXZ		; CvDllGameContext::GetAILogging
EXTRN	?getAILogging@CvGlobals@@QAE_NXZ:PROC		; CvGlobals::getAILogging
; Function compile flags: /Ogtpy
;	COMDAT ?GetAILogging@CvDllGameContext@@UAG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetAILogging@CvDllGameContext@@UAG_NXZ PROC		; CvDllGameContext::GetAILogging, COMDAT

; 741  : 	return GC.getAILogging();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getAILogging@CvGlobals@@QAE_NXZ	; CvGlobals::getAILogging

; 742  : }

	ret	4
?GetAILogging@CvDllGameContext@@UAG_NXZ ENDP		; CvDllGameContext::GetAILogging
_TEXT	ENDS
PUBLIC	?SetAILogging@CvDllGameContext@@UAGX_N@Z	; CvDllGameContext::SetAILogging
EXTRN	?setAILogging@CvGlobals@@QAEX_N@Z:PROC		; CvGlobals::setAILogging
; Function compile flags: /Ogtpy
;	COMDAT ?SetAILogging@CvDllGameContext@@UAGX_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_bEnable$ = 12						; size = 1
?SetAILogging@CvDllGameContext@@UAGX_N@Z PROC		; CvDllGameContext::SetAILogging, COMDAT

; 746  : 	GC.setAILogging(bEnable);

	mov	eax, DWORD PTR _bEnable$[esp-4]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?setAILogging@CvGlobals@@QAEX_N@Z	; CvGlobals::setAILogging

; 747  : }

	ret	8
?SetAILogging@CvDllGameContext@@UAGX_N@Z ENDP		; CvDllGameContext::SetAILogging
_TEXT	ENDS
PUBLIC	?GetAIPerfLogging@CvDllGameContext@@UAG_NXZ	; CvDllGameContext::GetAIPerfLogging
EXTRN	?getAIPerfLogging@CvGlobals@@QAE_NXZ:PROC	; CvGlobals::getAIPerfLogging
; Function compile flags: /Ogtpy
;	COMDAT ?GetAIPerfLogging@CvDllGameContext@@UAG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetAIPerfLogging@CvDllGameContext@@UAG_NXZ PROC	; CvDllGameContext::GetAIPerfLogging, COMDAT

; 751  : 	return GC.getAIPerfLogging();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getAIPerfLogging@CvGlobals@@QAE_NXZ	; CvGlobals::getAIPerfLogging

; 752  : }

	ret	4
?GetAIPerfLogging@CvDllGameContext@@UAG_NXZ ENDP	; CvDllGameContext::GetAIPerfLogging
_TEXT	ENDS
PUBLIC	?SetAIPerfLogging@CvDllGameContext@@UAGX_N@Z	; CvDllGameContext::SetAIPerfLogging
EXTRN	?setAIPerfLogging@CvGlobals@@QAEX_N@Z:PROC	; CvGlobals::setAIPerfLogging
; Function compile flags: /Ogtpy
;	COMDAT ?SetAIPerfLogging@CvDllGameContext@@UAGX_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_bEnable$ = 12						; size = 1
?SetAIPerfLogging@CvDllGameContext@@UAGX_N@Z PROC	; CvDllGameContext::SetAIPerfLogging, COMDAT

; 756  : 	GC.setAIPerfLogging(bEnable);

	mov	eax, DWORD PTR _bEnable$[esp-4]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?setAIPerfLogging@CvGlobals@@QAEX_N@Z	; CvGlobals::setAIPerfLogging

; 757  : }

	ret	8
?SetAIPerfLogging@CvDllGameContext@@UAGX_N@Z ENDP	; CvDllGameContext::SetAIPerfLogging
_TEXT	ENDS
PUBLIC	?GetBuilderAILogging@CvDllGameContext@@UAG_NXZ	; CvDllGameContext::GetBuilderAILogging
EXTRN	?GetBuilderAILogging@CvGlobals@@QAE_NXZ:PROC	; CvGlobals::GetBuilderAILogging
; Function compile flags: /Ogtpy
;	COMDAT ?GetBuilderAILogging@CvDllGameContext@@UAG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetBuilderAILogging@CvDllGameContext@@UAG_NXZ PROC	; CvDllGameContext::GetBuilderAILogging, COMDAT

; 761  : 	return GC.GetBuilderAILogging();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetBuilderAILogging@CvGlobals@@QAE_NXZ	; CvGlobals::GetBuilderAILogging

; 762  : }

	ret	4
?GetBuilderAILogging@CvDllGameContext@@UAG_NXZ ENDP	; CvDllGameContext::GetBuilderAILogging
_TEXT	ENDS
PUBLIC	?SetBuilderAILogging@CvDllGameContext@@UAGX_N@Z	; CvDllGameContext::SetBuilderAILogging
EXTRN	?SetBuilderAILogging@CvGlobals@@QAEX_N@Z:PROC	; CvGlobals::SetBuilderAILogging
; Function compile flags: /Ogtpy
;	COMDAT ?SetBuilderAILogging@CvDllGameContext@@UAGX_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_bEnable$ = 12						; size = 1
?SetBuilderAILogging@CvDllGameContext@@UAGX_N@Z PROC	; CvDllGameContext::SetBuilderAILogging, COMDAT

; 766  : 	GC.SetBuilderAILogging(bEnable);

	mov	eax, DWORD PTR _bEnable$[esp-4]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?SetBuilderAILogging@CvGlobals@@QAEX_N@Z ; CvGlobals::SetBuilderAILogging

; 767  : }

	ret	8
?SetBuilderAILogging@CvDllGameContext@@UAGX_N@Z ENDP	; CvDllGameContext::SetBuilderAILogging
_TEXT	ENDS
PUBLIC	?GetPlayerAndCityAILogSplit@CvDllGameContext@@UAG_NXZ ; CvDllGameContext::GetPlayerAndCityAILogSplit
EXTRN	?getPlayerAndCityAILogSplit@CvGlobals@@QAE_NXZ:PROC ; CvGlobals::getPlayerAndCityAILogSplit
; Function compile flags: /Ogtpy
;	COMDAT ?GetPlayerAndCityAILogSplit@CvDllGameContext@@UAG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetPlayerAndCityAILogSplit@CvDllGameContext@@UAG_NXZ PROC ; CvDllGameContext::GetPlayerAndCityAILogSplit, COMDAT

; 771  : 	return GC.getPlayerAndCityAILogSplit();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getPlayerAndCityAILogSplit@CvGlobals@@QAE_NXZ ; CvGlobals::getPlayerAndCityAILogSplit

; 772  : }

	ret	4
?GetPlayerAndCityAILogSplit@CvDllGameContext@@UAG_NXZ ENDP ; CvDllGameContext::GetPlayerAndCityAILogSplit
_TEXT	ENDS
PUBLIC	??_7length_error@std@@6B@			; std::length_error::`vftable'
PUBLIC	??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::length_error::length_error
PUBLIC	??_R4length_error@std@@6B@			; std::length_error::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVlength_error@std@@@8			; std::length_error `RTTI Type Descriptor'
PUBLIC	??_R3length_error@std@@8			; std::length_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2length_error@std@@8			; std::length_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@length_error@std@@8		; std::length_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_Elength_error@std@@UAEPAXI@Z:PROC		; std::length_error::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@length_error@std@@8
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
rdata$r	SEGMENT
??_R1A@?0A@EA@length_error@std@@8 DD FLAT:??_R0?AVlength_error@std@@@8 ; std::length_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3length_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2length_error@std@@8
rdata$r	SEGMENT
??_R2length_error@std@@8 DD FLAT:??_R1A@?0A@EA@length_error@std@@8 ; std::length_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@logic_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3length_error@std@@8
rdata$r	SEGMENT
??_R3length_error@std@@8 DD 00H				; std::length_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2length_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT
??_R0?AVlength_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::length_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlength_error@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4length_error@std@@6B@
rdata$r	SEGMENT
??_R4length_error@std@@6B@ DD 00H			; std::length_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVlength_error@std@@@8
	DD	FLAT:??_R3length_error@std@@8
rdata$r	ENDS
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT
??_7length_error@std@@6B@ DD FLAT:??_R4length_error@std@@6B@ ; std::length_error::`vftable'
	DD	FLAT:??_Elength_error@std@@UAEPAXI@Z
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::length_error::length_error, COMDAT
; _this$ = ecx

; 105  : 		{	// construct from message string

	mov	eax, DWORD PTR __Message$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
	mov	DWORD PTR [esi], OFFSET ??_7length_error@std@@6B@

; 106  : 		}

	mov	eax, esi
	pop	esi
	ret	4
??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::length_error::length_error
_TEXT	ENDS
PUBLIC	?SetPlayerAndCityAILogSplit@CvDllGameContext@@UAGX_N@Z ; CvDllGameContext::SetPlayerAndCityAILogSplit
EXTRN	?setPlayerAndCityAILogSplit@CvGlobals@@QAEX_N@Z:PROC ; CvGlobals::setPlayerAndCityAILogSplit
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvdllcontext.cpp
;	COMDAT ?SetPlayerAndCityAILogSplit@CvDllGameContext@@UAGX_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_bEnable$ = 12						; size = 1
?SetPlayerAndCityAILogSplit@CvDllGameContext@@UAGX_N@Z PROC ; CvDllGameContext::SetPlayerAndCityAILogSplit, COMDAT

; 776  : 	GC.setPlayerAndCityAILogSplit(bEnable);

	mov	eax, DWORD PTR _bEnable$[esp-4]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?setPlayerAndCityAILogSplit@CvGlobals@@QAEX_N@Z ; CvGlobals::setPlayerAndCityAILogSplit

; 777  : }

	ret	8
?SetPlayerAndCityAILogSplit@CvDllGameContext@@UAGX_N@Z ENDP ; CvDllGameContext::SetPlayerAndCityAILogSplit
_TEXT	ENDS
PUBLIC	?GetTutorialLogging@CvDllGameContext@@UAG_NXZ	; CvDllGameContext::GetTutorialLogging
EXTRN	?GetTutorialLogging@CvGlobals@@QAE_NXZ:PROC	; CvGlobals::GetTutorialLogging
; Function compile flags: /Ogtpy
;	COMDAT ?GetTutorialLogging@CvDllGameContext@@UAG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetTutorialLogging@CvDllGameContext@@UAG_NXZ PROC	; CvDllGameContext::GetTutorialLogging, COMDAT

; 781  : 	return GC.GetTutorialLogging();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetTutorialLogging@CvGlobals@@QAE_NXZ	; CvGlobals::GetTutorialLogging

; 782  : }

	ret	4
?GetTutorialLogging@CvDllGameContext@@UAG_NXZ ENDP	; CvDllGameContext::GetTutorialLogging
_TEXT	ENDS
PUBLIC	??1length_error@std@@UAE@XZ			; std::length_error::~length_error
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT
??1length_error@std@@UAE@XZ PROC			; std::length_error::~length_error, COMDAT
; _this$ = ecx

; 109  : 		{	// destroy the object

	push	esi
	mov	esi, ecx

; 110  : 		}

	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, esi
	pop	esi
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
??1length_error@std@@UAE@XZ ENDP			; std::length_error::~length_error
_TEXT	ENDS
PUBLIC	?SetTutorialLogging@CvDllGameContext@@UAGX_N@Z	; CvDllGameContext::SetTutorialLogging
EXTRN	?SetTutorialLogging@CvGlobals@@QAEX_N@Z:PROC	; CvGlobals::SetTutorialLogging
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvdllcontext.cpp
;	COMDAT ?SetTutorialLogging@CvDllGameContext@@UAGX_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_bEnable$ = 12						; size = 1
?SetTutorialLogging@CvDllGameContext@@UAGX_N@Z PROC	; CvDllGameContext::SetTutorialLogging, COMDAT

; 786  : 	GC.SetTutorialLogging(bEnable);

	mov	eax, DWORD PTR _bEnable$[esp-4]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?SetTutorialLogging@CvGlobals@@QAEX_N@Z	; CvGlobals::SetTutorialLogging

; 787  : }

	ret	8
?SetTutorialLogging@CvDllGameContext@@UAGX_N@Z ENDP	; CvDllGameContext::SetTutorialLogging
_TEXT	ENDS
PUBLIC	?GetTutorialDebugging@CvDllGameContext@@UAG_NXZ	; CvDllGameContext::GetTutorialDebugging
EXTRN	?GetTutorialDebugging@CvGlobals@@QAE_NXZ:PROC	; CvGlobals::GetTutorialDebugging
; Function compile flags: /Ogtpy
;	COMDAT ?GetTutorialDebugging@CvDllGameContext@@UAG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetTutorialDebugging@CvDllGameContext@@UAG_NXZ PROC	; CvDllGameContext::GetTutorialDebugging, COMDAT

; 791  : 	return GC.GetTutorialDebugging();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetTutorialDebugging@CvGlobals@@QAE_NXZ ; CvGlobals::GetTutorialDebugging

; 792  : }

	ret	4
?GetTutorialDebugging@CvDllGameContext@@UAG_NXZ ENDP	; CvDllGameContext::GetTutorialDebugging
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Glength_error@std@@UAEPAXI@Z PROC			; std::length_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, esi
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN8@scalar@9
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN8@scalar@9:
	mov	eax, esi
	pop	esi
	ret	4
??_Glength_error@std@@UAEPAXI@Z ENDP			; std::length_error::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?SetTutorialDebugging@CvDllGameContext@@UAGX_N@Z ; CvDllGameContext::SetTutorialDebugging
EXTRN	?SetTutorialDebugging@CvGlobals@@QAEX_N@Z:PROC	; CvGlobals::SetTutorialDebugging
; Function compile flags: /Ogtpy
;	COMDAT ?SetTutorialDebugging@CvDllGameContext@@UAGX_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_bEnable$ = 12						; size = 1
?SetTutorialDebugging@CvDllGameContext@@UAGX_N@Z PROC	; CvDllGameContext::SetTutorialDebugging, COMDAT

; 796  : 	GC.SetTutorialDebugging(bEnable);

	mov	eax, DWORD PTR _bEnable$[esp-4]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?SetTutorialDebugging@CvGlobals@@QAEX_N@Z ; CvGlobals::SetTutorialDebugging

; 797  : }

	ret	8
?SetTutorialDebugging@CvDllGameContext@@UAGX_N@Z ENDP	; CvDllGameContext::SetTutorialDebugging
_TEXT	ENDS
PUBLIC	?GetAllowRClickMovementWhileScrolling@CvDllGameContext@@UAG_NXZ ; CvDllGameContext::GetAllowRClickMovementWhileScrolling
EXTRN	?GetAllowRClickMovementWhileScrolling@CvGlobals@@QAE_NXZ:PROC ; CvGlobals::GetAllowRClickMovementWhileScrolling
; Function compile flags: /Ogtpy
;	COMDAT ?GetAllowRClickMovementWhileScrolling@CvDllGameContext@@UAG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetAllowRClickMovementWhileScrolling@CvDllGameContext@@UAG_NXZ PROC ; CvDllGameContext::GetAllowRClickMovementWhileScrolling, COMDAT

; 801  : 	return GC.GetAllowRClickMovementWhileScrolling();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetAllowRClickMovementWhileScrolling@CvGlobals@@QAE_NXZ ; CvGlobals::GetAllowRClickMovementWhileScrolling

; 802  : }

	ret	4
?GetAllowRClickMovementWhileScrolling@CvDllGameContext@@UAG_NXZ ENDP ; CvDllGameContext::GetAllowRClickMovementWhileScrolling
_TEXT	ENDS
PUBLIC	?SetAllowRClickMovementWhileScrolling@CvDllGameContext@@UAGX_N@Z ; CvDllGameContext::SetAllowRClickMovementWhileScrolling
EXTRN	?SetAllowRClickMovementWhileScrolling@CvGlobals@@QAEX_N@Z:PROC ; CvGlobals::SetAllowRClickMovementWhileScrolling
; Function compile flags: /Ogtpy
;	COMDAT ?SetAllowRClickMovementWhileScrolling@CvDllGameContext@@UAGX_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_bAllow$ = 12						; size = 1
?SetAllowRClickMovementWhileScrolling@CvDllGameContext@@UAGX_N@Z PROC ; CvDllGameContext::SetAllowRClickMovementWhileScrolling, COMDAT

; 806  : 	GC.SetAllowRClickMovementWhileScrolling(bAllow);

	mov	eax, DWORD PTR _bAllow$[esp-4]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?SetAllowRClickMovementWhileScrolling@CvGlobals@@QAEX_N@Z ; CvGlobals::SetAllowRClickMovementWhileScrolling

; 807  : }

	ret	8
?SetAllowRClickMovementWhileScrolling@CvDllGameContext@@UAGX_N@Z ENDP ; CvDllGameContext::SetAllowRClickMovementWhileScrolling
_TEXT	ENDS
PUBLIC	?GetPostTurnAutosaves@CvDllGameContext@@UAG_NXZ	; CvDllGameContext::GetPostTurnAutosaves
EXTRN	?GetPostTurnAutosaves@CvGlobals@@QAE_NXZ:PROC	; CvGlobals::GetPostTurnAutosaves
; Function compile flags: /Ogtpy
;	COMDAT ?GetPostTurnAutosaves@CvDllGameContext@@UAG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetPostTurnAutosaves@CvDllGameContext@@UAG_NXZ PROC	; CvDllGameContext::GetPostTurnAutosaves, COMDAT

; 811  : 	return GC.GetPostTurnAutosaves();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetPostTurnAutosaves@CvGlobals@@QAE_NXZ ; CvGlobals::GetPostTurnAutosaves

; 812  : }

	ret	4
?GetPostTurnAutosaves@CvDllGameContext@@UAG_NXZ ENDP	; CvDllGameContext::GetPostTurnAutosaves
_TEXT	ENDS
PUBLIC	?SetPostTurnAutosaves@CvDllGameContext@@UAGX_N@Z ; CvDllGameContext::SetPostTurnAutosaves
EXTRN	?SetPostTurnAutosaves@CvGlobals@@QAEX_N@Z:PROC	; CvGlobals::SetPostTurnAutosaves
; Function compile flags: /Ogtpy
;	COMDAT ?SetPostTurnAutosaves@CvDllGameContext@@UAGX_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_bEnable$ = 12						; size = 1
?SetPostTurnAutosaves@CvDllGameContext@@UAGX_N@Z PROC	; CvDllGameContext::SetPostTurnAutosaves, COMDAT

; 816  : 	GC.SetPostTurnAutosaves(bEnable);

	mov	eax, DWORD PTR _bEnable$[esp-4]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?SetPostTurnAutosaves@CvGlobals@@QAEX_N@Z ; CvGlobals::SetPostTurnAutosaves

; 817  : }

	ret	8
?SetPostTurnAutosaves@CvDllGameContext@@UAGX_N@Z ENDP	; CvDllGameContext::SetPostTurnAutosaves
_TEXT	ENDS
PUBLIC	?GetDatabaseLoadUtility@CvDllGameContext@@UAGPAVICvDLLDatabaseUtility1@@XZ ; CvDllGameContext::GetDatabaseLoadUtility
EXTRN	?getDatabaseLoadUtility@CvGlobals@@QAEPAVICvDLLDatabaseUtility1@@XZ:PROC ; CvGlobals::getDatabaseLoadUtility
; Function compile flags: /Ogtpy
;	COMDAT ?GetDatabaseLoadUtility@CvDllGameContext@@UAGPAVICvDLLDatabaseUtility1@@XZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetDatabaseLoadUtility@CvDllGameContext@@UAGPAVICvDLLDatabaseUtility1@@XZ PROC ; CvDllGameContext::GetDatabaseLoadUtility, COMDAT

; 821  : 	return GC.getDatabaseLoadUtility();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getDatabaseLoadUtility@CvGlobals@@QAEPAVICvDLLDatabaseUtility1@@XZ ; CvGlobals::getDatabaseLoadUtility

; 822  : }

	ret	4
?GetDatabaseLoadUtility@CvDllGameContext@@UAGPAVICvDLLDatabaseUtility1@@XZ ENDP ; CvDllGameContext::GetDatabaseLoadUtility
_TEXT	ENDS
PUBLIC	?SetGameDatabase@CvDllGameContext@@UAGXPAVConnection@Database@@@Z ; CvDllGameContext::SetGameDatabase
EXTRN	?SetGameDatabase@CvGlobals@@QAEXPAVConnection@Database@@@Z:PROC ; CvGlobals::SetGameDatabase
; Function compile flags: /Ogtpy
;	COMDAT ?SetGameDatabase@CvDllGameContext@@UAGXPAVConnection@Database@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pGameDatabase$ = 12					; size = 4
?SetGameDatabase@CvDllGameContext@@UAGXPAVConnection@Database@@@Z PROC ; CvDllGameContext::SetGameDatabase, COMDAT

; 846  : 	GC.SetGameDatabase(pGameDatabase);

	mov	eax, DWORD PTR _pGameDatabase$[esp-4]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?SetGameDatabase@CvGlobals@@QAEXPAVConnection@Database@@@Z ; CvGlobals::SetGameDatabase

; 847  : }

	ret	8
?SetGameDatabase@CvDllGameContext@@UAGXPAVConnection@Database@@@Z ENDP ; CvDllGameContext::SetGameDatabase
_TEXT	ENDS
PUBLIC	?IsGraphicsInitialized@CvDllGameContext@@UBG_NXZ ; CvDllGameContext::IsGraphicsInitialized
EXTRN	?IsGraphicsInitialized@CvGlobals@@QBE_NXZ:PROC	; CvGlobals::IsGraphicsInitialized
; Function compile flags: /Ogtpy
;	COMDAT ?IsGraphicsInitialized@CvDllGameContext@@UBG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?IsGraphicsInitialized@CvDllGameContext@@UBG_NXZ PROC	; CvDllGameContext::IsGraphicsInitialized, COMDAT

; 868  : 	return GC.IsGraphicsInitialized();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?IsGraphicsInitialized@CvGlobals@@QBE_NXZ ; CvGlobals::IsGraphicsInitialized

; 869  : }

	ret	4
?IsGraphicsInitialized@CvDllGameContext@@UBG_NXZ ENDP	; CvDllGameContext::IsGraphicsInitialized
_TEXT	ENDS
PUBLIC	?SetGraphicsInitialized@CvDllGameContext@@UAGX_N@Z ; CvDllGameContext::SetGraphicsInitialized
EXTRN	?SetGraphicsInitialized@CvGlobals@@QAEX_N@Z:PROC ; CvGlobals::SetGraphicsInitialized
; Function compile flags: /Ogtpy
;	COMDAT ?SetGraphicsInitialized@CvDllGameContext@@UAGX_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_bVal$ = 12						; size = 1
?SetGraphicsInitialized@CvDllGameContext@@UAGX_N@Z PROC	; CvDllGameContext::SetGraphicsInitialized, COMDAT

; 873  : 	GC.SetGraphicsInitialized(bVal);

	mov	eax, DWORD PTR _bVal$[esp-4]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?SetGraphicsInitialized@CvGlobals@@QAEX_N@Z ; CvGlobals::SetGraphicsInitialized

; 874  : }

	ret	8
?SetGraphicsInitialized@CvDllGameContext@@UAGX_N@Z ENDP	; CvDllGameContext::SetGraphicsInitialized
_TEXT	ENDS
PUBLIC	?SetOutOfSyncDebuggingEnabled@CvDllGameContext@@UAGX_N@Z ; CvDllGameContext::SetOutOfSyncDebuggingEnabled
EXTRN	?setOutOfSyncDebuggingEnabled@CvGlobals@@QAEX_N@Z:PROC ; CvGlobals::setOutOfSyncDebuggingEnabled
; Function compile flags: /Ogtpy
;	COMDAT ?SetOutOfSyncDebuggingEnabled@CvDllGameContext@@UAGX_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_isEnabled$ = 12					; size = 1
?SetOutOfSyncDebuggingEnabled@CvDllGameContext@@UAGX_N@Z PROC ; CvDllGameContext::SetOutOfSyncDebuggingEnabled, COMDAT

; 878  : 	GC.setOutOfSyncDebuggingEnabled(isEnabled);

	mov	eax, DWORD PTR _isEnabled$[esp-4]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?setOutOfSyncDebuggingEnabled@CvGlobals@@QAEX_N@Z ; CvGlobals::setOutOfSyncDebuggingEnabled

; 879  : }

	ret	8
?SetOutOfSyncDebuggingEnabled@CvDllGameContext@@UAGX_N@Z ENDP ; CvDllGameContext::SetOutOfSyncDebuggingEnabled
_TEXT	ENDS
PUBLIC	?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size, COMDAT
; _this$ = ecx

; 725  : 		{	// return length of sequence

	push	esi

; 726  : 		return (_Mylast - _Myfirst);

	mov	esi, DWORD PTR [ecx+8]
	sub	esi, DWORD PTR [ecx+4]
	mov	eax, -1840700269			; 92492493H
	imul	esi
	add	edx, esi
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	pop	esi

; 727  : 		}

	ret	0
?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
_TEXT	ENDS
PUBLIC	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
; Function compile flags: /Ogtpy
;	COMDAT ??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[], COMDAT
; _this$ = ecx

; 760  : 
; 761  :  #if _HAS_ITERATOR_DEBUGGING
; 762  : 		if (size() <= _Pos)
; 763  : 			{
; 764  : 			_DEBUG_ERROR("vector subscript out of range");
; 765  : 			_SCL_SECURE_OUT_OF_RANGE;
; 766  : 			}
; 767  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 768  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 769  : 
; 770  : 		return (*(_Myfirst + _Pos));

	mov	eax, DWORD PTR __Pos$[esp-4]
	lea	edx, DWORD PTR [eax*8]
	sub	edx, eax
	mov	eax, DWORD PTR [ecx+4]
	lea	eax, DWORD PTR [eax+edx*4]

; 771  : 		}

	ret	4
??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
_TEXT	ENDS
PUBLIC	??0?$pair@IPAVCvRandom@@@std@@QAE@ABIABQAVCvRandom@@@Z ; std::pair<unsigned int,CvRandom *>::pair<unsigned int,CvRandom *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\utility
;	COMDAT ??0?$pair@IPAVCvRandom@@@std@@QAE@ABIABQAVCvRandom@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@IPAVCvRandom@@@std@@QAE@ABIABQAVCvRandom@@@Z PROC ; std::pair<unsigned int,CvRandom *>::pair<unsigned int,CvRandom *>, COMDAT
; _this$ = ecx

; 50   : 		{	// construct from specified values

	mov	eax, ecx
	mov	ecx, DWORD PTR __Val1$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Val2$[esp-4]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx

; 51   : 		}

	ret	8
??0?$pair@IPAVCvRandom@@@std@@QAE@ABIABQAVCvRandom@@@Z ENDP ; std::pair<unsigned int,CvRandom *>::pair<unsigned int,CvRandom *>
_TEXT	ENDS
PUBLIC	??0?$pair@IPAVCvDllNetInitInfo@@@std@@QAE@ABIABQAVCvDllNetInitInfo@@@Z ; std::pair<unsigned int,CvDllNetInitInfo *>::pair<unsigned int,CvDllNetInitInfo *>
; Function compile flags: /Ogtpy
;	COMDAT ??0?$pair@IPAVCvDllNetInitInfo@@@std@@QAE@ABIABQAVCvDllNetInitInfo@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@IPAVCvDllNetInitInfo@@@std@@QAE@ABIABQAVCvDllNetInitInfo@@@Z PROC ; std::pair<unsigned int,CvDllNetInitInfo *>::pair<unsigned int,CvDllNetInitInfo *>, COMDAT
; _this$ = ecx

; 50   : 		{	// construct from specified values

	mov	eax, ecx
	mov	ecx, DWORD PTR __Val1$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Val2$[esp-4]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx

; 51   : 		}

	ret	8
??0?$pair@IPAVCvDllNetInitInfo@@@std@@QAE@ABIABQAVCvDllNetInitInfo@@@Z ENDP ; std::pair<unsigned int,CvDllNetInitInfo *>::pair<unsigned int,CvDllNetInitInfo *>
_TEXT	ENDS
PUBLIC	??0?$pair@IPAVCvDllNetLoadGameInfo@@@std@@QAE@ABIABQAVCvDllNetLoadGameInfo@@@Z ; std::pair<unsigned int,CvDllNetLoadGameInfo *>::pair<unsigned int,CvDllNetLoadGameInfo *>
; Function compile flags: /Ogtpy
;	COMDAT ??0?$pair@IPAVCvDllNetLoadGameInfo@@@std@@QAE@ABIABQAVCvDllNetLoadGameInfo@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@IPAVCvDllNetLoadGameInfo@@@std@@QAE@ABIABQAVCvDllNetLoadGameInfo@@@Z PROC ; std::pair<unsigned int,CvDllNetLoadGameInfo *>::pair<unsigned int,CvDllNetLoadGameInfo *>, COMDAT
; _this$ = ecx

; 50   : 		{	// construct from specified values

	mov	eax, ecx
	mov	ecx, DWORD PTR __Val1$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Val2$[esp-4]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx

; 51   : 		}

	ret	8
??0?$pair@IPAVCvDllNetLoadGameInfo@@@std@@QAE@ABIABQAVCvDllNetLoadGameInfo@@@Z ENDP ; std::pair<unsigned int,CvDllNetLoadGameInfo *>::pair<unsigned int,CvDllNetLoadGameInfo *>
_TEXT	ENDS
PUBLIC	?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ PROC	; std::vector<unsigned long,std::allocator<unsigned long> >::size, COMDAT
; _this$ = ecx

; 726  : 		return (_Mylast - _Myfirst);

	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2

; 727  : 		}

	ret	0
?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::size
_TEXT	ENDS
PUBLIC	??D?$_Vector_const_iterator@KV?$allocator@K@std@@@std@@QBEABKXZ ; std::_Vector_const_iterator<unsigned long,std::allocator<unsigned long> >::operator*
; Function compile flags: /Ogtpy
;	COMDAT ??D?$_Vector_const_iterator@KV?$allocator@K@std@@@std@@QBEABKXZ
_TEXT	SEGMENT
??D?$_Vector_const_iterator@KV?$allocator@K@std@@@std@@QBEABKXZ PROC ; std::_Vector_const_iterator<unsigned long,std::allocator<unsigned long> >::operator*, COMDAT
; _this$ = ecx

; 92   : 
; 93   :  #if _HAS_ITERATOR_DEBUGGING
; 94   : 		if (this->_Mycont == 0
; 95   : 			|| _Myptr < ((_Myvec *)this->_Mycont)->_Myfirst
; 96   : 			|| ((_Myvec *)this->_Mycont)->_Mylast <= _Myptr)
; 97   : 			{
; 98   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 99   : 			_SCL_SECURE_OUT_OF_RANGE;
; 100  : 			}
; 101  :  #else
; 102  :  		_SCL_SECURE_VALIDATE(this->_Has_container());
; 103  : 		_SCL_SECURE_VALIDATE_RANGE(_Myptr < ((_Myvec *)(this->_Getmycont()))->_Mylast);
; 104  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 105  : 
; 106  : 		return (*_Myptr);

	mov	eax, DWORD PTR [ecx]

; 107  : 		}

	ret	0
??D?$_Vector_const_iterator@KV?$allocator@K@std@@@std@@QBEABKXZ ENDP ; std::_Vector_const_iterator<unsigned long,std::allocator<unsigned long> >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_const_iterator@KV?$allocator@K@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<unsigned long,std::allocator<unsigned long> >::operator++
; Function compile flags: /Ogtpy
;	COMDAT ??E?$_Vector_const_iterator@KV?$allocator@K@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_const_iterator@KV?$allocator@K@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<unsigned long,std::allocator<unsigned long> >::operator++, COMDAT
; _this$ = ecx

; 115  : 		{	// preincrement

	mov	eax, ecx

; 116  : 		_SCL_SECURE_VALIDATE(this->_Has_container());
; 117  : 		_SCL_SECURE_VALIDATE_RANGE(_Myptr < ((_Myvec *)(this->_Getmycont()))->_Mylast);
; 118  : 
; 119  :  #if _HAS_ITERATOR_DEBUGGING
; 120  : 		if (this->_Mycont == 0
; 121  : 			|| ((_Myvec *)this->_Mycont)->_Mylast <= _Myptr)
; 122  : 			_DEBUG_ERROR("vector iterator not incrementable");
; 123  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 124  : 
; 125  : 		++_Myptr;

	add	DWORD PTR [eax], 4

; 126  : 		return (*this);
; 127  : 		}

	ret	0
??E?$_Vector_const_iterator@KV?$allocator@K@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<unsigned long,std::allocator<unsigned long> >::operator++
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@KV?$allocator@K@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<unsigned long,std::allocator<unsigned long> >::operator==
; Function compile flags: /Ogtpy
;	COMDAT ??8?$_Vector_const_iterator@KV?$allocator@K@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@KV?$allocator@K@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<unsigned long,std::allocator<unsigned long> >::operator==, COMDAT
; _this$ = ecx

; 204  : 
; 205  :  #if _HAS_ITERATOR_DEBUGGING
; 206  : 		_Compat(_Right);
; 207  :  #else
; 208  : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));
; 209  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 210  : 
; 211  : 		return (_Myptr == _Right._Myptr);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	cl
	mov	al, cl

; 212  : 		}

	ret	4
??8?$_Vector_const_iterator@KV?$allocator@K@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<unsigned long,std::allocator<unsigned long> >::operator==
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@KV?$allocator@K@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<unsigned long,std::allocator<unsigned long> >::operator!=
; Function compile flags: /Ogtpy
;	COMDAT ??9?$_Vector_const_iterator@KV?$allocator@K@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@KV?$allocator@K@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<unsigned long,std::allocator<unsigned long> >::operator!=, COMDAT
; _this$ = ecx

; 216  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	setne	cl
	mov	al, cl

; 217  : 		}

	ret	4
??9?$_Vector_const_iterator@KV?$allocator@K@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<unsigned long,std::allocator<unsigned long> >::operator!=
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ PROC ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx

; 62   : 	_Vector_const_iterator()

	mov	eax, ecx

; 63   : 		{	// construct with null pointer
; 64   : 		_Myptr = 0;

	mov	DWORD PTR [eax], 0

; 65   : 		}

	ret	0
??0?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ENDP ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
PUBLIC	??D?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator*
; Function compile flags: /Ogtpy
;	COMDAT ??D?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ
_TEXT	SEGMENT
??D?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ PROC ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator*, COMDAT
; _this$ = ecx

; 92   : 
; 93   :  #if _HAS_ITERATOR_DEBUGGING
; 94   : 		if (this->_Mycont == 0
; 95   : 			|| _Myptr < ((_Myvec *)this->_Mycont)->_Myfirst
; 96   : 			|| ((_Myvec *)this->_Mycont)->_Mylast <= _Myptr)
; 97   : 			{
; 98   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 99   : 			_SCL_SECURE_OUT_OF_RANGE;
; 100  : 			}
; 101  :  #else
; 102  :  		_SCL_SECURE_VALIDATE(this->_Has_container());
; 103  : 		_SCL_SECURE_VALIDATE_RANGE(_Myptr < ((_Myvec *)(this->_Getmycont()))->_Mylast);
; 104  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 105  : 
; 106  : 		return (*_Myptr);

	mov	eax, DWORD PTR [ecx]

; 107  : 		}

	ret	0
??D?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ENDP ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator++
; Function compile flags: /Ogtpy
;	COMDAT ??E?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator++, COMDAT
; _this$ = ecx

; 115  : 		{	// preincrement

	mov	eax, ecx

; 116  : 		_SCL_SECURE_VALIDATE(this->_Has_container());
; 117  : 		_SCL_SECURE_VALIDATE_RANGE(_Myptr < ((_Myvec *)(this->_Getmycont()))->_Mylast);
; 118  : 
; 119  :  #if _HAS_ITERATOR_DEBUGGING
; 120  : 		if (this->_Mycont == 0
; 121  : 			|| ((_Myvec *)this->_Mycont)->_Mylast <= _Myptr)
; 122  : 			_DEBUG_ERROR("vector iterator not incrementable");
; 123  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 124  : 
; 125  : 		++_Myptr;

	add	DWORD PTR [eax], 28			; 0000001cH

; 126  : 		return (*this);
; 127  : 		}

	ret	0
??E?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator++
_TEXT	ENDS
PUBLIC	?capacity@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::capacity
; Function compile flags: /Ogtpy
;	COMDAT ?capacity@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::capacity, COMDAT
; _this$ = ecx

; 635  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

	mov	edx, DWORD PTR [ecx+4]
	test	edx, edx
	jne	SHORT $LN3@capacity
	xor	eax, eax

; 636  : 		}

	ret	0
$LN3@capacity:

; 635  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

	mov	eax, DWORD PTR [ecx+12]
	sub	eax, edx
	sar	eax, 3

; 636  : 		}

	ret	0
?capacity@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::capacity
_TEXT	ENDS
PUBLIC	?size@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::size
; Function compile flags: /Ogtpy
;	COMDAT ?size@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::size, COMDAT
; _this$ = ecx

; 726  : 		return (_Mylast - _Myfirst);

	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 3

; 727  : 		}

	ret	0
?size@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::size
_TEXT	ENDS
PUBLIC	??1?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_empty<std::allocator<std::pair<unsigned int,CvRandom *> > >::~_Container_base_aux_alloc_empty<std::allocator<std::pair<unsigned int,CvRandom *> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??1?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@std@@@std@@IAE@XZ
_TEXT	SEGMENT
??1?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_empty<std::allocator<std::pair<unsigned int,CvRandom *> > >::~_Container_base_aux_alloc_empty<std::allocator<std::pair<unsigned int,CvRandom *> > >, COMDAT
; _this$ = ecx

; 627  : 	~_Container_base_aux_alloc_empty() { }

	ret	0
??1?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<std::pair<unsigned int,CvRandom *> > >::~_Container_base_aux_alloc_empty<std::allocator<std::pair<unsigned int,CvRandom *> > >
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@IPAVCvRandom@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned int,CvRandom *> >::allocator<std::pair<unsigned int,CvRandom *> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@IPAVCvRandom@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@IPAVCvRandom@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::pair<unsigned int,CvRandom *> >::allocator<std::pair<unsigned int,CvRandom *> >, COMDAT
; _this$ = ecx

; 119  : 	allocator() _THROW0()

	mov	eax, ecx

; 120  : 		{	// construct default allocator (do nothing)
; 121  : 		}

	ret	0
??0?$allocator@U?$pair@IPAVCvRandom@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<unsigned int,CvRandom *> >::allocator<std::pair<unsigned int,CvRandom *> >
_TEXT	ENDS
PUBLIC	?capacity@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::capacity
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?capacity@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::capacity, COMDAT
; _this$ = ecx

; 635  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

	mov	edx, DWORD PTR [ecx+4]
	test	edx, edx
	jne	SHORT $LN3@capacity@2
	xor	eax, eax

; 636  : 		}

	ret	0
$LN3@capacity@2:

; 635  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

	mov	eax, DWORD PTR [ecx+12]
	sub	eax, edx
	sar	eax, 3

; 636  : 		}

	ret	0
?capacity@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::capacity
_TEXT	ENDS
PUBLIC	?size@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::size
; Function compile flags: /Ogtpy
;	COMDAT ?size@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::size, COMDAT
; _this$ = ecx

; 726  : 		return (_Mylast - _Myfirst);

	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 3

; 727  : 		}

	ret	0
?size@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::size
_TEXT	ENDS
PUBLIC	??1?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_empty<std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::~_Container_base_aux_alloc_empty<std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??1?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@@std@@IAE@XZ
_TEXT	SEGMENT
??1?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_empty<std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::~_Container_base_aux_alloc_empty<std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >, COMDAT
; _this$ = ecx

; 627  : 	~_Container_base_aux_alloc_empty() { }

	ret	0
??1?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::~_Container_base_aux_alloc_empty<std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> >::allocator<std::pair<unsigned int,CvDllNetInitInfo *> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> >::allocator<std::pair<unsigned int,CvDllNetInitInfo *> >, COMDAT
; _this$ = ecx

; 119  : 	allocator() _THROW0()

	mov	eax, ecx

; 120  : 		{	// construct default allocator (do nothing)
; 121  : 		}

	ret	0
??0?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> >::allocator<std::pair<unsigned int,CvDllNetInitInfo *> >
_TEXT	ENDS
PUBLIC	?capacity@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::capacity
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?capacity@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::capacity, COMDAT
; _this$ = ecx

; 635  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

	mov	edx, DWORD PTR [ecx+4]
	test	edx, edx
	jne	SHORT $LN3@capacity@3
	xor	eax, eax

; 636  : 		}

	ret	0
$LN3@capacity@3:

; 635  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

	mov	eax, DWORD PTR [ecx+12]
	sub	eax, edx
	sar	eax, 3

; 636  : 		}

	ret	0
?capacity@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::capacity
_TEXT	ENDS
PUBLIC	?size@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::size
; Function compile flags: /Ogtpy
;	COMDAT ?size@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::size, COMDAT
; _this$ = ecx

; 726  : 		return (_Mylast - _Myfirst);

	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 3

; 727  : 		}

	ret	0
?size@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::size
_TEXT	ENDS
PUBLIC	??1?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_empty<std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::~_Container_base_aux_alloc_empty<std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??1?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@@std@@IAE@XZ
_TEXT	SEGMENT
??1?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_empty<std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::~_Container_base_aux_alloc_empty<std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >, COMDAT
; _this$ = ecx

; 627  : 	~_Container_base_aux_alloc_empty() { }

	ret	0
??1?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::~_Container_base_aux_alloc_empty<std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> >::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> >::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> >, COMDAT
; _this$ = ecx

; 119  : 	allocator() _THROW0()

	mov	eax, ecx

; 120  : 		{	// construct default allocator (do nothing)
; 121  : 		}

	ret	0
??0?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> >::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> >
_TEXT	ENDS
PUBLIC	?capacity@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QBEIXZ ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::capacity
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?capacity@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QBEIXZ PROC ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::capacity, COMDAT
; _this$ = ecx

; 635  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

	mov	eax, DWORD PTR [ecx+4]
	test	eax, eax
	jne	SHORT $LN3@capacity@4

; 636  : 		}

	ret	0
$LN3@capacity@4:

; 635  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

	mov	ecx, DWORD PTR [ecx+12]
	sub	ecx, eax
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	sar	edx, 1
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx

; 636  : 		}

	ret	0
?capacity@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QBEIXZ ENDP ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::capacity
_TEXT	ENDS
PUBLIC	?size@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QBEIXZ ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::size
; Function compile flags: /Ogtpy
;	COMDAT ?size@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QBEIXZ PROC ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::size, COMDAT
; _this$ = ecx

; 726  : 		return (_Mylast - _Myfirst);

	mov	edx, DWORD PTR [ecx+8]
	sub	edx, DWORD PTR [ecx+4]
	mov	eax, 715827883				; 2aaaaaabH
	imul	edx
	sar	edx, 1
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx

; 727  : 		}

	ret	0
?size@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QBEIXZ ENDP ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::size
_TEXT	ENDS
PUBLIC	__TI3?AVlength_error@std@@
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Xlen@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@KAXXZ ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::_Xlen
PUBLIC	__CTA3?AVlength_error@std@@
PUBLIC	__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
PUBLIC	??0length_error@std@@QAE@ABV01@@Z		; std::length_error::length_error
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
PUBLIC	??0logic_error@std@@QAE@ABV01@@Z		; std::logic_error::logic_error
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlength_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0length_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT
__CTA3?AVlength_error@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT
__TI3?AVlength_error@std@@ DD 00H
	DD	FLAT:??1length_error@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVlength_error@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Xlen@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@KAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@KAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@KAXXZ$2
__ehfuncinfo$?_Xlen@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@KAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Xlen@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@KAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@KAXXZ
_TEXT	SEGMENT
$T228590 = -80						; size = 28
$T228589 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@KAXXZ PROC ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::_Xlen, COMDAT

; 1259 : 		{	// report a length_error

	push	-1
	push	__ehhandler$?_Xlen@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@KAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 68					; 00000044H

; 1260 : 		_THROW(length_error, "vector<T> too long");

	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T228590[esp+84]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T228589[esp+80]
	mov	DWORD PTR __$EHRec$[esp+88], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	lea	eax, DWORD PTR $T228590[esp+80]
	push	eax
	lea	ecx, DWORD PTR $T228589[esp+96]
	mov	BYTE PTR __$EHRec$[esp+92], 1
	mov	DWORD PTR $T228589[esp+84], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T228589[esp+84]
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+96], 0
	mov	DWORD PTR $T228589[esp+88], OFFSET ??_7length_error@std@@6B@
	call	__CxxThrowException@8
$LN13@Xlen:
$LN12@Xlen:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Xlen@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@KAXXZ$0:
	lea	ecx, DWORD PTR $T228590[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?_Xlen@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@KAXXZ$2:
	lea	ecx, DWORD PTR $T228589[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$?_Xlen@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@KAXXZ:
	mov	eax, OFFSET __ehfuncinfo$?_Xlen@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@KAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Xlen@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@KAXXZ ENDP ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::_Xlen
PUBLIC	??1?$_Container_base_aux_alloc_empty@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_empty<std::allocator<CvDllPathFinderUpdateListData> >::~_Container_base_aux_alloc_empty<std::allocator<CvDllPathFinderUpdateListData> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??1?$_Container_base_aux_alloc_empty@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAE@XZ
_TEXT	SEGMENT
??1?$_Container_base_aux_alloc_empty@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_empty<std::allocator<CvDllPathFinderUpdateListData> >::~_Container_base_aux_alloc_empty<std::allocator<CvDllPathFinderUpdateListData> >, COMDAT
; _this$ = ecx

; 627  : 	~_Container_base_aux_alloc_empty() { }

	ret	0
??1?$_Container_base_aux_alloc_empty@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<CvDllPathFinderUpdateListData> >::~_Container_base_aux_alloc_empty<std::allocator<CvDllPathFinderUpdateListData> >
_TEXT	ENDS
PUBLIC	??0?$allocator@UCvDllPathFinderUpdateListData@@@std@@QAE@XZ ; std::allocator<CvDllPathFinderUpdateListData>::allocator<CvDllPathFinderUpdateListData>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??0?$allocator@UCvDllPathFinderUpdateListData@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@UCvDllPathFinderUpdateListData@@@std@@QAE@XZ PROC ; std::allocator<CvDllPathFinderUpdateListData>::allocator<CvDllPathFinderUpdateListData>, COMDAT
; _this$ = ecx

; 119  : 	allocator() _THROW0()

	mov	eax, ecx

; 120  : 		{	// construct default allocator (do nothing)
; 121  : 		}

	ret	0
??0?$allocator@UCvDllPathFinderUpdateListData@@@std@@QAE@XZ ENDP ; std::allocator<CvDllPathFinderUpdateListData>::allocator<CvDllPathFinderUpdateListData>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@UCvDllPathFinderUpdateListData@@@std@@QAEXPAUCvDllPathFinderUpdateListData@@I@Z ; std::allocator<CvDllPathFinderUpdateListData>::deallocate
; Function compile flags: /Ogtpy
;	COMDAT ?deallocate@?$allocator@UCvDllPathFinderUpdateListData@@@std@@QAEXPAUCvDllPathFinderUpdateListData@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@UCvDllPathFinderUpdateListData@@@std@@QAEXPAUCvDllPathFinderUpdateListData@@I@Z PROC ; std::allocator<CvDllPathFinderUpdateListData>::deallocate, COMDAT
; _this$ = ecx

; 140  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 141  : 		}

	ret	8
?deallocate@?$allocator@UCvDllPathFinderUpdateListData@@@std@@QAEXPAUCvDllPathFinderUpdateListData@@I@Z ENDP ; std::allocator<CvDllPathFinderUpdateListData>::deallocate
_TEXT	ENDS
PUBLIC	??D?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QBEABU?$pair@IPAVCvRandom@@@1@XZ ; std::_Vector_const_iterator<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::operator*
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??D?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QBEABU?$pair@IPAVCvRandom@@@1@XZ
_TEXT	SEGMENT
??D?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QBEABU?$pair@IPAVCvRandom@@@1@XZ PROC ; std::_Vector_const_iterator<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::operator*, COMDAT
; _this$ = ecx

; 92   : 
; 93   :  #if _HAS_ITERATOR_DEBUGGING
; 94   : 		if (this->_Mycont == 0
; 95   : 			|| _Myptr < ((_Myvec *)this->_Mycont)->_Myfirst
; 96   : 			|| ((_Myvec *)this->_Mycont)->_Mylast <= _Myptr)
; 97   : 			{
; 98   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 99   : 			_SCL_SECURE_OUT_OF_RANGE;
; 100  : 			}
; 101  :  #else
; 102  :  		_SCL_SECURE_VALIDATE(this->_Has_container());
; 103  : 		_SCL_SECURE_VALIDATE_RANGE(_Myptr < ((_Myvec *)(this->_Getmycont()))->_Mylast);
; 104  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 105  : 
; 106  : 		return (*_Myptr);

	mov	eax, DWORD PTR [ecx]

; 107  : 		}

	ret	0
??D?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QBEABU?$pair@IPAVCvRandom@@@1@XZ ENDP ; std::_Vector_const_iterator<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::operator++
; Function compile flags: /Ogtpy
;	COMDAT ??E?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::operator++, COMDAT
; _this$ = ecx

; 115  : 		{	// preincrement

	mov	eax, ecx

; 116  : 		_SCL_SECURE_VALIDATE(this->_Has_container());
; 117  : 		_SCL_SECURE_VALIDATE_RANGE(_Myptr < ((_Myvec *)(this->_Getmycont()))->_Mylast);
; 118  : 
; 119  :  #if _HAS_ITERATOR_DEBUGGING
; 120  : 		if (this->_Mycont == 0
; 121  : 			|| ((_Myvec *)this->_Mycont)->_Mylast <= _Myptr)
; 122  : 			_DEBUG_ERROR("vector iterator not incrementable");
; 123  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 124  : 
; 125  : 		++_Myptr;

	add	DWORD PTR [eax], 8

; 126  : 		return (*this);
; 127  : 		}

	ret	0
??E?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::operator++
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::operator==
; Function compile flags: /Ogtpy
;	COMDAT ??8?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::operator==, COMDAT
; _this$ = ecx

; 204  : 
; 205  :  #if _HAS_ITERATOR_DEBUGGING
; 206  : 		_Compat(_Right);
; 207  :  #else
; 208  : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));
; 209  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 210  : 
; 211  : 		return (_Myptr == _Right._Myptr);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	cl
	mov	al, cl

; 212  : 		}

	ret	4
??8?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::operator==
_TEXT	ENDS
PUBLIC	??D?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QBEABU?$pair@IPAVCvDllNetInitInfo@@@1@XZ ; std::_Vector_const_iterator<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::operator*
; Function compile flags: /Ogtpy
;	COMDAT ??D?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QBEABU?$pair@IPAVCvDllNetInitInfo@@@1@XZ
_TEXT	SEGMENT
??D?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QBEABU?$pair@IPAVCvDllNetInitInfo@@@1@XZ PROC ; std::_Vector_const_iterator<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::operator*, COMDAT
; _this$ = ecx

; 92   : 
; 93   :  #if _HAS_ITERATOR_DEBUGGING
; 94   : 		if (this->_Mycont == 0
; 95   : 			|| _Myptr < ((_Myvec *)this->_Mycont)->_Myfirst
; 96   : 			|| ((_Myvec *)this->_Mycont)->_Mylast <= _Myptr)
; 97   : 			{
; 98   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 99   : 			_SCL_SECURE_OUT_OF_RANGE;
; 100  : 			}
; 101  :  #else
; 102  :  		_SCL_SECURE_VALIDATE(this->_Has_container());
; 103  : 		_SCL_SECURE_VALIDATE_RANGE(_Myptr < ((_Myvec *)(this->_Getmycont()))->_Mylast);
; 104  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 105  : 
; 106  : 		return (*_Myptr);

	mov	eax, DWORD PTR [ecx]

; 107  : 		}

	ret	0
??D?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QBEABU?$pair@IPAVCvDllNetInitInfo@@@1@XZ ENDP ; std::_Vector_const_iterator<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::operator++
; Function compile flags: /Ogtpy
;	COMDAT ??E?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::operator++, COMDAT
; _this$ = ecx

; 115  : 		{	// preincrement

	mov	eax, ecx

; 116  : 		_SCL_SECURE_VALIDATE(this->_Has_container());
; 117  : 		_SCL_SECURE_VALIDATE_RANGE(_Myptr < ((_Myvec *)(this->_Getmycont()))->_Mylast);
; 118  : 
; 119  :  #if _HAS_ITERATOR_DEBUGGING
; 120  : 		if (this->_Mycont == 0
; 121  : 			|| ((_Myvec *)this->_Mycont)->_Mylast <= _Myptr)
; 122  : 			_DEBUG_ERROR("vector iterator not incrementable");
; 123  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 124  : 
; 125  : 		++_Myptr;

	add	DWORD PTR [eax], 8

; 126  : 		return (*this);
; 127  : 		}

	ret	0
??E?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::operator++
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::operator==
; Function compile flags: /Ogtpy
;	COMDAT ??8?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::operator==, COMDAT
; _this$ = ecx

; 204  : 
; 205  :  #if _HAS_ITERATOR_DEBUGGING
; 206  : 		_Compat(_Right);
; 207  :  #else
; 208  : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));
; 209  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 210  : 
; 211  : 		return (_Myptr == _Right._Myptr);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	cl
	mov	al, cl

; 212  : 		}

	ret	4
??8?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::operator==
_TEXT	ENDS
PUBLIC	??D?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QBEABU?$pair@IPAVCvDllNetLoadGameInfo@@@1@XZ ; std::_Vector_const_iterator<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::operator*
; Function compile flags: /Ogtpy
;	COMDAT ??D?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QBEABU?$pair@IPAVCvDllNetLoadGameInfo@@@1@XZ
_TEXT	SEGMENT
??D?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QBEABU?$pair@IPAVCvDllNetLoadGameInfo@@@1@XZ PROC ; std::_Vector_const_iterator<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::operator*, COMDAT
; _this$ = ecx

; 92   : 
; 93   :  #if _HAS_ITERATOR_DEBUGGING
; 94   : 		if (this->_Mycont == 0
; 95   : 			|| _Myptr < ((_Myvec *)this->_Mycont)->_Myfirst
; 96   : 			|| ((_Myvec *)this->_Mycont)->_Mylast <= _Myptr)
; 97   : 			{
; 98   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 99   : 			_SCL_SECURE_OUT_OF_RANGE;
; 100  : 			}
; 101  :  #else
; 102  :  		_SCL_SECURE_VALIDATE(this->_Has_container());
; 103  : 		_SCL_SECURE_VALIDATE_RANGE(_Myptr < ((_Myvec *)(this->_Getmycont()))->_Mylast);
; 104  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 105  : 
; 106  : 		return (*_Myptr);

	mov	eax, DWORD PTR [ecx]

; 107  : 		}

	ret	0
??D?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QBEABU?$pair@IPAVCvDllNetLoadGameInfo@@@1@XZ ENDP ; std::_Vector_const_iterator<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::operator++
; Function compile flags: /Ogtpy
;	COMDAT ??E?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::operator++, COMDAT
; _this$ = ecx

; 115  : 		{	// preincrement

	mov	eax, ecx

; 116  : 		_SCL_SECURE_VALIDATE(this->_Has_container());
; 117  : 		_SCL_SECURE_VALIDATE_RANGE(_Myptr < ((_Myvec *)(this->_Getmycont()))->_Mylast);
; 118  : 
; 119  :  #if _HAS_ITERATOR_DEBUGGING
; 120  : 		if (this->_Mycont == 0
; 121  : 			|| ((_Myvec *)this->_Mycont)->_Mylast <= _Myptr)
; 122  : 			_DEBUG_ERROR("vector iterator not incrementable");
; 123  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 124  : 
; 125  : 		++_Myptr;

	add	DWORD PTR [eax], 8

; 126  : 		return (*this);
; 127  : 		}

	ret	0
??E?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::operator++
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::operator==
; Function compile flags: /Ogtpy
;	COMDAT ??8?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::operator==, COMDAT
; _this$ = ecx

; 204  : 
; 205  :  #if _HAS_ITERATOR_DEBUGGING
; 206  : 		_Compat(_Right);
; 207  :  #else
; 208  : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));
; 209  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 210  : 
; 211  : 		return (_Myptr == _Right._Myptr);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	cl
	mov	al, cl

; 212  : 		}

	ret	4
??8?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::operator==
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@KV?$allocator@K@std@@@std@@QAE@PAK@Z ; std::_Vector_const_iterator<unsigned long,std::allocator<unsigned long> >::_Vector_const_iterator<unsigned long,std::allocator<unsigned long> >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Vector_const_iterator@KV?$allocator@K@std@@@std@@QAE@PAK@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_const_iterator@KV?$allocator@K@std@@@std@@QAE@PAK@Z PROC ; std::_Vector_const_iterator<unsigned long,std::allocator<unsigned long> >::_Vector_const_iterator<unsigned long,std::allocator<unsigned long> >, COMDAT
; _this$ = ecx

; 84   : 	explicit _Vector_const_iterator(_Tptr _Ptr)

	mov	eax, ecx

; 85   : 		{	// construct with pointer _Ptr
; 86   : 		_Myptr = _Ptr;

	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 87   : 		}

	ret	4
??0?$_Vector_const_iterator@KV?$allocator@K@std@@@std@@QAE@PAK@Z ENDP ; std::_Vector_const_iterator<unsigned long,std::allocator<unsigned long> >::_Vector_const_iterator<unsigned long,std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx

; 84   : 	explicit _Vector_const_iterator(_Tptr _Ptr)

	mov	eax, ecx

; 85   : 		{	// construct with pointer _Ptr
; 86   : 		_Myptr = _Ptr;

	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 87   : 		}

	ret	4
??0?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator==
; Function compile flags: /Ogtpy
;	COMDAT ??8?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator==, COMDAT
; _this$ = ecx

; 204  : 
; 205  :  #if _HAS_ITERATOR_DEBUGGING
; 206  : 		_Compat(_Right);
; 207  :  #else
; 208  : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));
; 209  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 210  : 
; 211  : 		return (_Myptr == _Right._Myptr);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	cl
	mov	al, cl

; 212  : 		}

	ret	4
??8?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator==
_TEXT	ENDS
PUBLIC	?_Xlen@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@KAXXZ ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::_Xlen
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
xdata$x	SEGMENT
__unwindtable$?_Xlen@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@KAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@KAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@KAXXZ$2
__ehfuncinfo$?_Xlen@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@KAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Xlen@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@KAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@KAXXZ
_TEXT	SEGMENT
$T228661 = -80						; size = 28
$T228660 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@KAXXZ PROC ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::_Xlen, COMDAT

; 1259 : 		{	// report a length_error

	push	-1
	push	__ehhandler$?_Xlen@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@KAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 68					; 00000044H

; 1260 : 		_THROW(length_error, "vector<T> too long");

	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T228661[esp+84]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T228660[esp+80]
	mov	DWORD PTR __$EHRec$[esp+88], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	lea	eax, DWORD PTR $T228661[esp+80]
	push	eax
	lea	ecx, DWORD PTR $T228660[esp+96]
	mov	BYTE PTR __$EHRec$[esp+92], 1
	mov	DWORD PTR $T228660[esp+84], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T228660[esp+84]
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+96], 0
	mov	DWORD PTR $T228660[esp+88], OFFSET ??_7length_error@std@@6B@
	call	__CxxThrowException@8
$LN13@Xlen@2:
$LN12@Xlen@2:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Xlen@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@KAXXZ$0:
	lea	ecx, DWORD PTR $T228661[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?_Xlen@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@KAXXZ$2:
	lea	ecx, DWORD PTR $T228660[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$?_Xlen@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@KAXXZ:
	mov	eax, OFFSET __ehfuncinfo$?_Xlen@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@KAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Xlen@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@KAXXZ ENDP ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::_Xlen
PUBLIC	??0?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@std@@@std@@IAE@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@1@@Z ; std::_Container_base_aux_alloc_empty<std::allocator<std::pair<unsigned int,CvRandom *> > >::_Container_base_aux_alloc_empty<std::allocator<std::pair<unsigned int,CvRandom *> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??0?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@std@@@std@@IAE@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??0?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@std@@@std@@IAE@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@1@@Z PROC ; std::_Container_base_aux_alloc_empty<std::allocator<std::pair<unsigned int,CvRandom *> > >::_Container_base_aux_alloc_empty<std::allocator<std::pair<unsigned int,CvRandom *> > >, COMDAT
; _this$ = ecx

; 618  : 	explicit _Container_base_aux_alloc_empty(_Alloc) { }

	mov	eax, ecx
	ret	4
??0?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@std@@@std@@IAE@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@1@@Z ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<std::pair<unsigned int,CvRandom *> > >::_Container_base_aux_alloc_empty<std::allocator<std::pair<unsigned int,CvRandom *> > >
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@IPAVCvRandom@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned int,CvRandom *> >::allocator<std::pair<unsigned int,CvRandom *> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@IPAVCvRandom@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@IPAVCvRandom@@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::pair<unsigned int,CvRandom *> >::allocator<std::pair<unsigned int,CvRandom *> >, COMDAT
; _this$ = ecx

; 123  : 	allocator(const allocator<_Ty>&) _THROW0()

	mov	eax, ecx

; 124  : 		{	// construct by copying (do nothing)
; 125  : 		}

	ret	4
??0?$allocator@U?$pair@IPAVCvRandom@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<unsigned int,CvRandom *> >::allocator<std::pair<unsigned int,CvRandom *> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U?$pair@IPAVCvRandom@@@std@@@std@@QAEXPAU?$pair@IPAVCvRandom@@@2@I@Z ; std::allocator<std::pair<unsigned int,CvRandom *> >::deallocate
; Function compile flags: /Ogtpy
;	COMDAT ?deallocate@?$allocator@U?$pair@IPAVCvRandom@@@std@@@std@@QAEXPAU?$pair@IPAVCvRandom@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U?$pair@IPAVCvRandom@@@std@@@std@@QAEXPAU?$pair@IPAVCvRandom@@@2@I@Z PROC ; std::allocator<std::pair<unsigned int,CvRandom *> >::deallocate, COMDAT
; _this$ = ecx

; 140  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 141  : 		}

	ret	8
?deallocate@?$allocator@U?$pair@IPAVCvRandom@@@std@@@std@@QAEXPAU?$pair@IPAVCvRandom@@@2@I@Z ENDP ; std::allocator<std::pair<unsigned int,CvRandom *> >::deallocate
_TEXT	ENDS
PUBLIC	?_Xlen@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@KAXXZ ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::_Xlen
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
xdata$x	SEGMENT
__unwindtable$?_Xlen@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@KAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@KAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@KAXXZ$2
__ehfuncinfo$?_Xlen@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@KAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Xlen@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@KAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@KAXXZ
_TEXT	SEGMENT
$T228695 = -80						; size = 28
$T228694 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@KAXXZ PROC ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::_Xlen, COMDAT

; 1259 : 		{	// report a length_error

	push	-1
	push	__ehhandler$?_Xlen@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@KAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 68					; 00000044H

; 1260 : 		_THROW(length_error, "vector<T> too long");

	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T228695[esp+84]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T228694[esp+80]
	mov	DWORD PTR __$EHRec$[esp+88], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	lea	eax, DWORD PTR $T228695[esp+80]
	push	eax
	lea	ecx, DWORD PTR $T228694[esp+96]
	mov	BYTE PTR __$EHRec$[esp+92], 1
	mov	DWORD PTR $T228694[esp+84], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T228694[esp+84]
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+96], 0
	mov	DWORD PTR $T228694[esp+88], OFFSET ??_7length_error@std@@6B@
	call	__CxxThrowException@8
$LN13@Xlen@3:
$LN12@Xlen@3:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Xlen@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@KAXXZ$0:
	lea	ecx, DWORD PTR $T228695[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?_Xlen@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@KAXXZ$2:
	lea	ecx, DWORD PTR $T228694[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$?_Xlen@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@KAXXZ:
	mov	eax, OFFSET __ehfuncinfo$?_Xlen@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@KAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Xlen@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@KAXXZ ENDP ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::_Xlen
PUBLIC	??0?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@@std@@IAE@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@1@@Z ; std::_Container_base_aux_alloc_empty<std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::_Container_base_aux_alloc_empty<std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??0?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@@std@@IAE@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??0?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@@std@@IAE@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@1@@Z PROC ; std::_Container_base_aux_alloc_empty<std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::_Container_base_aux_alloc_empty<std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >, COMDAT
; _this$ = ecx

; 618  : 	explicit _Container_base_aux_alloc_empty(_Alloc) { }

	mov	eax, ecx
	ret	4
??0?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@@std@@IAE@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@1@@Z ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::_Container_base_aux_alloc_empty<std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> >::allocator<std::pair<unsigned int,CvDllNetInitInfo *> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> >::allocator<std::pair<unsigned int,CvDllNetInitInfo *> >, COMDAT
; _this$ = ecx

; 123  : 	allocator(const allocator<_Ty>&) _THROW0()

	mov	eax, ecx

; 124  : 		{	// construct by copying (do nothing)
; 125  : 		}

	ret	4
??0?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> >::allocator<std::pair<unsigned int,CvDllNetInitInfo *> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@QAEXPAU?$pair@IPAVCvDllNetInitInfo@@@2@I@Z ; std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> >::deallocate
; Function compile flags: /Ogtpy
;	COMDAT ?deallocate@?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@QAEXPAU?$pair@IPAVCvDllNetInitInfo@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@QAEXPAU?$pair@IPAVCvDllNetInitInfo@@@2@I@Z PROC ; std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> >::deallocate, COMDAT
; _this$ = ecx

; 140  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 141  : 		}

	ret	8
?deallocate@?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@QAEXPAU?$pair@IPAVCvDllNetInitInfo@@@2@I@Z ENDP ; std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> >::deallocate
_TEXT	ENDS
PUBLIC	?_Xlen@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@KAXXZ ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::_Xlen
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
xdata$x	SEGMENT
__unwindtable$?_Xlen@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@KAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@KAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@KAXXZ$2
__ehfuncinfo$?_Xlen@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@KAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Xlen@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@KAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@KAXXZ
_TEXT	SEGMENT
$T228729 = -80						; size = 28
$T228728 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@KAXXZ PROC ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::_Xlen, COMDAT

; 1259 : 		{	// report a length_error

	push	-1
	push	__ehhandler$?_Xlen@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@KAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 68					; 00000044H

; 1260 : 		_THROW(length_error, "vector<T> too long");

	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T228729[esp+84]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T228728[esp+80]
	mov	DWORD PTR __$EHRec$[esp+88], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	lea	eax, DWORD PTR $T228729[esp+80]
	push	eax
	lea	ecx, DWORD PTR $T228728[esp+96]
	mov	BYTE PTR __$EHRec$[esp+92], 1
	mov	DWORD PTR $T228728[esp+84], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T228728[esp+84]
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+96], 0
	mov	DWORD PTR $T228728[esp+88], OFFSET ??_7length_error@std@@6B@
	call	__CxxThrowException@8
$LN13@Xlen@4:
$LN12@Xlen@4:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Xlen@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@KAXXZ$0:
	lea	ecx, DWORD PTR $T228729[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?_Xlen@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@KAXXZ$2:
	lea	ecx, DWORD PTR $T228728[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$?_Xlen@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@KAXXZ:
	mov	eax, OFFSET __ehfuncinfo$?_Xlen@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@KAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Xlen@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@KAXXZ ENDP ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::_Xlen
PUBLIC	??0?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@@std@@IAE@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@1@@Z ; std::_Container_base_aux_alloc_empty<std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::_Container_base_aux_alloc_empty<std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??0?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@@std@@IAE@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??0?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@@std@@IAE@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@1@@Z PROC ; std::_Container_base_aux_alloc_empty<std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::_Container_base_aux_alloc_empty<std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >, COMDAT
; _this$ = ecx

; 618  : 	explicit _Container_base_aux_alloc_empty(_Alloc) { }

	mov	eax, ecx
	ret	4
??0?$_Container_base_aux_alloc_empty@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@@std@@IAE@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@1@@Z ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::_Container_base_aux_alloc_empty<std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> >::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> >::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> >, COMDAT
; _this$ = ecx

; 123  : 	allocator(const allocator<_Ty>&) _THROW0()

	mov	eax, ecx

; 124  : 		{	// construct by copying (do nothing)
; 125  : 		}

	ret	4
??0?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> >::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@QAEXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@2@I@Z ; std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> >::deallocate
; Function compile flags: /Ogtpy
;	COMDAT ?deallocate@?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@QAEXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@QAEXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@2@I@Z PROC ; std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> >::deallocate, COMDAT
; _this$ = ecx

; 140  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 141  : 		}

	ret	8
?deallocate@?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@QAEXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@2@I@Z ENDP ; std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> >::deallocate
_TEXT	ENDS
PUBLIC	??0?$_Container_base_aux_alloc_empty@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAE@V?$allocator@UCvDllPathFinderUpdateListData@@@1@@Z ; std::_Container_base_aux_alloc_empty<std::allocator<CvDllPathFinderUpdateListData> >::_Container_base_aux_alloc_empty<std::allocator<CvDllPathFinderUpdateListData> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??0?$_Container_base_aux_alloc_empty@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAE@V?$allocator@UCvDllPathFinderUpdateListData@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??0?$_Container_base_aux_alloc_empty@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAE@V?$allocator@UCvDllPathFinderUpdateListData@@@1@@Z PROC ; std::_Container_base_aux_alloc_empty<std::allocator<CvDllPathFinderUpdateListData> >::_Container_base_aux_alloc_empty<std::allocator<CvDllPathFinderUpdateListData> >, COMDAT
; _this$ = ecx

; 618  : 	explicit _Container_base_aux_alloc_empty(_Alloc) { }

	mov	eax, ecx
	ret	4
??0?$_Container_base_aux_alloc_empty@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAE@V?$allocator@UCvDllPathFinderUpdateListData@@@1@@Z ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<CvDllPathFinderUpdateListData> >::_Container_base_aux_alloc_empty<std::allocator<CvDllPathFinderUpdateListData> >
_TEXT	ENDS
PUBLIC	??0?$allocator@UCvDllPathFinderUpdateListData@@@std@@QAE@ABV01@@Z ; std::allocator<CvDllPathFinderUpdateListData>::allocator<CvDllPathFinderUpdateListData>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??0?$allocator@UCvDllPathFinderUpdateListData@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@UCvDllPathFinderUpdateListData@@@std@@QAE@ABV01@@Z PROC ; std::allocator<CvDllPathFinderUpdateListData>::allocator<CvDllPathFinderUpdateListData>, COMDAT
; _this$ = ecx

; 123  : 	allocator(const allocator<_Ty>&) _THROW0()

	mov	eax, ecx

; 124  : 		{	// construct by copying (do nothing)
; 125  : 		}

	ret	4
??0?$allocator@UCvDllPathFinderUpdateListData@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<CvDllPathFinderUpdateListData>::allocator<CvDllPathFinderUpdateListData>
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@UCvDllPathFinderUpdateListData@@@std@@QBEIXZ ; std::allocator<CvDllPathFinderUpdateListData>::max_size
; Function compile flags: /Ogtpy
;	COMDAT ?max_size@?$allocator@UCvDllPathFinderUpdateListData@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@UCvDllPathFinderUpdateListData@@@std@@QBEIXZ PROC ; std::allocator<CvDllPathFinderUpdateListData>::max_size, COMDAT
; _this$ = ecx

; 165  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 166  : 		return (0 < _Count ? _Count : 1);

	mov	eax, 357913941				; 15555555H

; 167  : 		}

	ret	0
?max_size@?$allocator@UCvDllPathFinderUpdateListData@@@std@@QBEIXZ ENDP ; std::allocator<CvDllPathFinderUpdateListData>::max_size
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAE@PAU?$pair@IPAVCvRandom@@@1@@Z ; std::_Vector_const_iterator<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::_Vector_const_iterator<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAE@PAU?$pair@IPAVCvRandom@@@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAE@PAU?$pair@IPAVCvRandom@@@1@@Z PROC ; std::_Vector_const_iterator<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::_Vector_const_iterator<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >, COMDAT
; _this$ = ecx

; 84   : 	explicit _Vector_const_iterator(_Tptr _Ptr)

	mov	eax, ecx

; 85   : 		{	// construct with pointer _Ptr
; 86   : 		_Myptr = _Ptr;

	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 87   : 		}

	ret	4
??0?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAE@PAU?$pair@IPAVCvRandom@@@1@@Z ENDP ; std::_Vector_const_iterator<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::_Vector_const_iterator<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >
_TEXT	ENDS
PUBLIC	??G?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QBEHABV01@@Z ; std::_Vector_const_iterator<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::operator-
; Function compile flags: /Ogtpy
;	COMDAT ??G?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QBEHABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??G?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QBEHABV01@@Z PROC ; std::_Vector_const_iterator<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::operator-, COMDAT
; _this$ = ecx

; 187  : 
; 188  :  #if _HAS_ITERATOR_DEBUGGING
; 189  : 		_Compat(_Right);
; 190  :  #else
; 191  : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));
; 192  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 193  : 
; 194  : 		return (_Myptr - _Right._Myptr);

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Right$[esp-4]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 3

; 195  : 		}

	ret	4
??G?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QBEHABV01@@Z ENDP ; std::_Vector_const_iterator<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::operator-
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAE@PAU?$pair@IPAVCvDllNetInitInfo@@@1@@Z ; std::_Vector_const_iterator<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::_Vector_const_iterator<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAE@PAU?$pair@IPAVCvDllNetInitInfo@@@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAE@PAU?$pair@IPAVCvDllNetInitInfo@@@1@@Z PROC ; std::_Vector_const_iterator<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::_Vector_const_iterator<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >, COMDAT
; _this$ = ecx

; 84   : 	explicit _Vector_const_iterator(_Tptr _Ptr)

	mov	eax, ecx

; 85   : 		{	// construct with pointer _Ptr
; 86   : 		_Myptr = _Ptr;

	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 87   : 		}

	ret	4
??0?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAE@PAU?$pair@IPAVCvDllNetInitInfo@@@1@@Z ENDP ; std::_Vector_const_iterator<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::_Vector_const_iterator<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >
_TEXT	ENDS
PUBLIC	??G?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QBEHABV01@@Z ; std::_Vector_const_iterator<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::operator-
; Function compile flags: /Ogtpy
;	COMDAT ??G?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QBEHABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??G?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QBEHABV01@@Z PROC ; std::_Vector_const_iterator<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::operator-, COMDAT
; _this$ = ecx

; 187  : 
; 188  :  #if _HAS_ITERATOR_DEBUGGING
; 189  : 		_Compat(_Right);
; 190  :  #else
; 191  : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));
; 192  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 193  : 
; 194  : 		return (_Myptr - _Right._Myptr);

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Right$[esp-4]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 3

; 195  : 		}

	ret	4
??G?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QBEHABV01@@Z ENDP ; std::_Vector_const_iterator<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::operator-
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAE@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@1@@Z ; std::_Vector_const_iterator<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::_Vector_const_iterator<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAE@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAE@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@1@@Z PROC ; std::_Vector_const_iterator<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::_Vector_const_iterator<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >, COMDAT
; _this$ = ecx

; 84   : 	explicit _Vector_const_iterator(_Tptr _Ptr)

	mov	eax, ecx

; 85   : 		{	// construct with pointer _Ptr
; 86   : 		_Myptr = _Ptr;

	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 87   : 		}

	ret	4
??0?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAE@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@1@@Z ENDP ; std::_Vector_const_iterator<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::_Vector_const_iterator<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >
_TEXT	ENDS
PUBLIC	??G?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QBEHABV01@@Z ; std::_Vector_const_iterator<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::operator-
; Function compile flags: /Ogtpy
;	COMDAT ??G?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QBEHABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??G?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QBEHABV01@@Z PROC ; std::_Vector_const_iterator<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::operator-, COMDAT
; _this$ = ecx

; 187  : 
; 188  :  #if _HAS_ITERATOR_DEBUGGING
; 189  : 		_Compat(_Right);
; 190  :  #else
; 191  : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));
; 192  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 193  : 
; 194  : 		return (_Myptr - _Right._Myptr);

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Right$[esp-4]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 3

; 195  : 		}

	ret	4
??G?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QBEHABV01@@Z ENDP ; std::_Vector_const_iterator<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::operator-
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAE@PAUCvDllPathFinderUpdateListData@@@Z ; std::_Vector_const_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::_Vector_const_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAE@PAUCvDllPathFinderUpdateListData@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAE@PAUCvDllPathFinderUpdateListData@@@Z PROC ; std::_Vector_const_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::_Vector_const_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >, COMDAT
; _this$ = ecx

; 84   : 	explicit _Vector_const_iterator(_Tptr _Ptr)

	mov	eax, ecx

; 85   : 		{	// construct with pointer _Ptr
; 86   : 		_Myptr = _Ptr;

	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 87   : 		}

	ret	4
??0?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAE@PAUCvDllPathFinderUpdateListData@@@Z ENDP ; std::_Vector_const_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::_Vector_const_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >
_TEXT	ENDS
PUBLIC	??G?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QBEHABV01@@Z ; std::_Vector_const_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::operator-
; Function compile flags: /Ogtpy
;	COMDAT ??G?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QBEHABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??G?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QBEHABV01@@Z PROC ; std::_Vector_const_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::operator-, COMDAT
; _this$ = ecx

; 187  : 
; 188  :  #if _HAS_ITERATOR_DEBUGGING
; 189  : 		_Compat(_Right);
; 190  :  #else
; 191  : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));
; 192  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 193  : 
; 194  : 		return (_Myptr - _Right._Myptr);

	mov	eax, DWORD PTR __Right$[esp-4]
	mov	ecx, DWORD PTR [ecx]
	sub	ecx, DWORD PTR [eax]
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	sar	edx, 1
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx

; 195  : 		}

	ret	4
??G?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QBEHABV01@@Z ENDP ; std::_Vector_const_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::operator-
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@IPAVCvRandom@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned int,CvRandom *> >::max_size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?max_size@?$allocator@U?$pair@IPAVCvRandom@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@IPAVCvRandom@@@std@@@std@@QBEIXZ PROC ; std::allocator<std::pair<unsigned int,CvRandom *> >::max_size, COMDAT
; _this$ = ecx

; 165  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 166  : 		return (0 < _Count ? _Count : 1);

	mov	eax, 536870911				; 1fffffffH

; 167  : 		}

	ret	0
?max_size@?$allocator@U?$pair@IPAVCvRandom@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned int,CvRandom *> >::max_size
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> >::max_size
; Function compile flags: /Ogtpy
;	COMDAT ?max_size@?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@QBEIXZ PROC ; std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> >::max_size, COMDAT
; _this$ = ecx

; 165  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 166  : 		return (0 < _Count ? _Count : 1);

	mov	eax, 536870911				; 1fffffffH

; 167  : 		}

	ret	0
?max_size@?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> >::max_size
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> >::max_size
; Function compile flags: /Ogtpy
;	COMDAT ?max_size@?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@QBEIXZ PROC ; std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> >::max_size, COMDAT
; _this$ = ecx

; 165  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 166  : 		return (0 < _Count ? _Count : 1);

	mov	eax, 536870911				; 1fffffffH

; 167  : 		}

	ret	0
?max_size@?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> >::max_size
_TEXT	ENDS
PUBLIC	??Y?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::operator+=
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??Y?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAEAAV01@H@Z PROC ; std::_Vector_const_iterator<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::operator+=, COMDAT
; _this$ = ecx

; 159  : 		{	// increment by integer

	mov	eax, ecx

; 160  : 		_SCL_SECURE_VALIDATE(this->_Has_container());
; 161  : 		_SCL_SECURE_VALIDATE_RANGE(
; 162  : 			_Myptr + _Off <= ((_Myvec *)(this->_Getmycont()))->_Mylast &&
; 163  : 			_Myptr + _Off >= ((_Myvec *)(this->_Getmycont()))->_Myfirst);
; 164  : 		_Myptr += _Off;

	mov	ecx, DWORD PTR __Off$[esp-4]
	lea	edx, DWORD PTR [ecx*8]
	add	DWORD PTR [eax], edx

; 165  : 		return (*this);
; 166  : 		}

	ret	4
??Y?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_const_iterator<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::operator+=
_TEXT	ENDS
PUBLIC	??Y?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::operator+=
; Function compile flags: /Ogtpy
;	COMDAT ??Y?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAEAAV01@H@Z PROC ; std::_Vector_const_iterator<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::operator+=, COMDAT
; _this$ = ecx

; 159  : 		{	// increment by integer

	mov	eax, ecx

; 160  : 		_SCL_SECURE_VALIDATE(this->_Has_container());
; 161  : 		_SCL_SECURE_VALIDATE_RANGE(
; 162  : 			_Myptr + _Off <= ((_Myvec *)(this->_Getmycont()))->_Mylast &&
; 163  : 			_Myptr + _Off >= ((_Myvec *)(this->_Getmycont()))->_Myfirst);
; 164  : 		_Myptr += _Off;

	mov	ecx, DWORD PTR __Off$[esp-4]
	lea	edx, DWORD PTR [ecx*8]
	add	DWORD PTR [eax], edx

; 165  : 		return (*this);
; 166  : 		}

	ret	4
??Y?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_const_iterator<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::operator+=
_TEXT	ENDS
PUBLIC	??Y?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::operator+=
; Function compile flags: /Ogtpy
;	COMDAT ??Y?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAEAAV01@H@Z PROC ; std::_Vector_const_iterator<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::operator+=, COMDAT
; _this$ = ecx

; 159  : 		{	// increment by integer

	mov	eax, ecx

; 160  : 		_SCL_SECURE_VALIDATE(this->_Has_container());
; 161  : 		_SCL_SECURE_VALIDATE_RANGE(
; 162  : 			_Myptr + _Off <= ((_Myvec *)(this->_Getmycont()))->_Mylast &&
; 163  : 			_Myptr + _Off >= ((_Myvec *)(this->_Getmycont()))->_Myfirst);
; 164  : 		_Myptr += _Off;

	mov	ecx, DWORD PTR __Off$[esp-4]
	lea	edx, DWORD PTR [ecx*8]
	add	DWORD PTR [eax], edx

; 165  : 		return (*this);
; 166  : 		}

	ret	4
??Y?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_const_iterator<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::operator+=
_TEXT	ENDS
PUBLIC	??Y?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::operator+=
; Function compile flags: /Ogtpy
;	COMDAT ??Y?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_const_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::operator+=, COMDAT
; _this$ = ecx

; 159  : 		{	// increment by integer

	mov	eax, ecx

; 160  : 		_SCL_SECURE_VALIDATE(this->_Has_container());
; 161  : 		_SCL_SECURE_VALIDATE_RANGE(
; 162  : 			_Myptr + _Off <= ((_Myvec *)(this->_Getmycont()))->_Mylast &&
; 163  : 			_Myptr + _Off >= ((_Myvec *)(this->_Getmycont()))->_Myfirst);
; 164  : 		_Myptr += _Off;

	mov	ecx, DWORD PTR __Off$[esp-4]
	lea	ecx, DWORD PTR [ecx+ecx*2]
	add	ecx, ecx
	add	ecx, ecx
	add	DWORD PTR [eax], ecx

; 165  : 		return (*this);
; 166  : 		}

	ret	4
??Y?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_const_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::operator+=
_TEXT	ENDS
PUBLIC	??$_itoa_s@$0IA@@@YAHHAAY0IA@DH@Z		; _itoa_s<128>
EXTRN	__imp___itoa_s:PROC
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdlib.h
;	COMDAT ??$_itoa_s@$0IA@@@YAHHAAY0IA@DH@Z
_TEXT	SEGMENT
__Value$ = 8						; size = 4
__Dest$ = 12						; size = 4
__Radix$ = 16						; size = 4
??$_itoa_s@$0IA@@@YAHHAAY0IA@DH@Z PROC			; _itoa_s<128>, COMDAT

; 464  : __DEFINE_CPP_OVERLOAD_SECURE_FUNC_1_1(errno_t, _itoa_s, _In_ int, _Value, char, _Dest, _In_ int, _Radix)

	mov	eax, DWORD PTR __Radix$[esp-4]
	mov	ecx, DWORD PTR __Dest$[esp-4]
	mov	edx, DWORD PTR __Value$[esp-4]
	push	eax
	push	128					; 00000080H
	push	ecx
	push	edx
	call	DWORD PTR __imp___itoa_s
	add	esp, 16					; 00000010H
	ret	0
??$_itoa_s@$0IA@@@YAHHAAY0IA@DH@Z ENDP			; _itoa_s<128>
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??$_Allocate@UCvDllPathFinderUpdateListData@@@std@@YAPAUCvDllPathFinderUpdateListData@@IPAU1@@Z ; std::_Allocate<CvDllPathFinderUpdateListData>
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
EXTRN	??2@YAPAXI@Z:PROC				; operator new
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Allocate@UCvDllPathFinderUpdateListData@@@std@@YAPAUCvDllPathFinderUpdateListData@@IPAU1@@Z
_TEXT	SEGMENT
$T228827 = -12						; size = 12
$T228831 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@UCvDllPathFinderUpdateListData@@@std@@YAPAUCvDllPathFinderUpdateListData@@IPAU1@@Z PROC ; std::_Allocate<CvDllPathFinderUpdateListData>, COMDAT

; 37   : 	if (_Count <= 0)

	mov	ecx, DWORD PTR __Count$[esp-4]
	sub	esp, 12					; 0000000cH
	test	ecx, ecx
	ja	SHORT $LN3@Allocate

; 38   : 		_Count = 0;

	xor	ecx, ecx
$LN1@Allocate:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	lea	edx, DWORD PTR [ecx+ecx*2]
	add	edx, edx
	add	edx, edx
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 44   : 	}

	add	esp, 12					; 0000000cH
	ret	0
$LN3@Allocate:

; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	ecx
	cmp	eax, 12					; 0000000cH
	jae	SHORT $LN1@Allocate

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	lea	eax, DWORD PTR $T228831[esp+8]
	push	eax
	lea	ecx, DWORD PTR $T228827[esp+16]
	mov	DWORD PTR $T228831[esp+12], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T228827[esp+16]
	push	ecx
	mov	DWORD PTR $T228827[esp+20], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN9@Allocate:
$LN8@Allocate:
	int	3
??$_Allocate@UCvDllPathFinderUpdateListData@@@std@@YAPAUCvDllPathFinderUpdateListData@@IPAU1@@Z ENDP ; std::_Allocate<CvDllPathFinderUpdateListData>
_TEXT	ENDS
PUBLIC	??$_Allocate@U?$pair@IPAVCvRandom@@@std@@@std@@YAPAU?$pair@IPAVCvRandom@@@0@IPAU10@@Z ; std::_Allocate<std::pair<unsigned int,CvRandom *> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Allocate@U?$pair@IPAVCvRandom@@@std@@@std@@YAPAU?$pair@IPAVCvRandom@@@0@IPAU10@@Z
_TEXT	SEGMENT
$T228837 = -12						; size = 12
$T228841 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U?$pair@IPAVCvRandom@@@std@@@std@@YAPAU?$pair@IPAVCvRandom@@@0@IPAU10@@Z PROC ; std::_Allocate<std::pair<unsigned int,CvRandom *> >, COMDAT

; 37   : 	if (_Count <= 0)

	mov	ecx, DWORD PTR __Count$[esp-4]
	sub	esp, 12					; 0000000cH
	test	ecx, ecx
	ja	SHORT $LN3@Allocate@2

; 38   : 		_Count = 0;

	xor	ecx, ecx
$LN1@Allocate@2:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	lea	edx, DWORD PTR [ecx*8]
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 44   : 	}

	add	esp, 12					; 0000000cH
	ret	0
$LN3@Allocate@2:

; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	ecx
	cmp	eax, 8
	jae	SHORT $LN1@Allocate@2

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	lea	eax, DWORD PTR $T228841[esp+8]
	push	eax
	lea	ecx, DWORD PTR $T228837[esp+16]
	mov	DWORD PTR $T228841[esp+12], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T228837[esp+16]
	push	ecx
	mov	DWORD PTR $T228837[esp+20], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN9@Allocate@2:
$LN8@Allocate@2:
	int	3
??$_Allocate@U?$pair@IPAVCvRandom@@@std@@@std@@YAPAU?$pair@IPAVCvRandom@@@0@IPAU10@@Z ENDP ; std::_Allocate<std::pair<unsigned int,CvRandom *> >
_TEXT	ENDS
PUBLIC	??$_Allocate@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@0@IPAU10@@Z ; std::_Allocate<std::pair<unsigned int,CvDllNetInitInfo *> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Allocate@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@0@IPAU10@@Z
_TEXT	SEGMENT
$T228847 = -12						; size = 12
$T228851 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@0@IPAU10@@Z PROC ; std::_Allocate<std::pair<unsigned int,CvDllNetInitInfo *> >, COMDAT

; 37   : 	if (_Count <= 0)

	mov	ecx, DWORD PTR __Count$[esp-4]
	sub	esp, 12					; 0000000cH
	test	ecx, ecx
	ja	SHORT $LN3@Allocate@3

; 38   : 		_Count = 0;

	xor	ecx, ecx
$LN1@Allocate@3:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	lea	edx, DWORD PTR [ecx*8]
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 44   : 	}

	add	esp, 12					; 0000000cH
	ret	0
$LN3@Allocate@3:

; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	ecx
	cmp	eax, 8
	jae	SHORT $LN1@Allocate@3

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	lea	eax, DWORD PTR $T228851[esp+8]
	push	eax
	lea	ecx, DWORD PTR $T228847[esp+16]
	mov	DWORD PTR $T228851[esp+12], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T228847[esp+16]
	push	ecx
	mov	DWORD PTR $T228847[esp+20], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN9@Allocate@3:
$LN8@Allocate@3:
	int	3
??$_Allocate@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@0@IPAU10@@Z ENDP ; std::_Allocate<std::pair<unsigned int,CvDllNetInitInfo *> >
_TEXT	ENDS
PUBLIC	??$_Allocate@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@IPAU10@@Z ; std::_Allocate<std::pair<unsigned int,CvDllNetLoadGameInfo *> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Allocate@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@IPAU10@@Z
_TEXT	SEGMENT
$T228857 = -12						; size = 12
$T228861 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@IPAU10@@Z PROC ; std::_Allocate<std::pair<unsigned int,CvDllNetLoadGameInfo *> >, COMDAT

; 37   : 	if (_Count <= 0)

	mov	ecx, DWORD PTR __Count$[esp-4]
	sub	esp, 12					; 0000000cH
	test	ecx, ecx
	ja	SHORT $LN3@Allocate@4

; 38   : 		_Count = 0;

	xor	ecx, ecx
$LN1@Allocate@4:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	lea	edx, DWORD PTR [ecx*8]
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 44   : 	}

	add	esp, 12					; 0000000cH
	ret	0
$LN3@Allocate@4:

; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	ecx
	cmp	eax, 8
	jae	SHORT $LN1@Allocate@4

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	lea	eax, DWORD PTR $T228861[esp+8]
	push	eax
	lea	ecx, DWORD PTR $T228857[esp+16]
	mov	DWORD PTR $T228861[esp+12], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T228857[esp+16]
	push	ecx
	mov	DWORD PTR $T228857[esp+20], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN9@Allocate@4:
$LN8@Allocate@4:
	int	3
??$_Allocate@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@IPAU10@@Z ENDP ; std::_Allocate<std::pair<unsigned int,CvDllNetLoadGameInfo *> >
_TEXT	ENDS
PUBLIC	??$_Iter_cat@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@0@@Z ; std::_Iter_cat<std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Iter_cat@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@0@@Z PROC ; std::_Iter_cat<std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> > >, COMDAT

; 953  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 954  : 	return (_Cat);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 955  : 	}

	ret	0
??$_Iter_cat@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@0@@Z ENDP ; std::_Iter_cat<std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> > >
_TEXT	ENDS
PUBLIC	??$_Iter_random@PAU?$pair@IPAVCvRandom@@@std@@PAU12@@std@@YA?AUrandom_access_iterator_tag@0@ABQAU?$pair@IPAVCvRandom@@@0@0@Z ; std::_Iter_random<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Iter_random@PAU?$pair@IPAVCvRandom@@@std@@PAU12@@std@@YA?AUrandom_access_iterator_tag@0@ABQAU?$pair@IPAVCvRandom@@@0@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Iter_random@PAU?$pair@IPAVCvRandom@@@std@@PAU12@@std@@YA?AUrandom_access_iterator_tag@0@ABQAU?$pair@IPAVCvRandom@@@0@0@Z PROC ; std::_Iter_random<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> *>, COMDAT

; 994  : 	typename _Iter_random_helper<
; 995  : 		iterator_traits<_Iter1>::iterator_category, 
; 996  : 		iterator_traits<_Iter2>::iterator_category>::_Iter_random_cat _Cat;
; 997  : 	return (_Cat);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 998  : 	}

	ret	0
??$_Iter_random@PAU?$pair@IPAVCvRandom@@@std@@PAU12@@std@@YA?AUrandom_access_iterator_tag@0@ABQAU?$pair@IPAVCvRandom@@@0@0@Z ENDP ; std::_Iter_random<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> *>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAU?$pair@IPAVCvRandom@@@std@@PAU12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAU?$pair@IPAVCvRandom@@@0@0@Z ; std::_Ptr_cat<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Ptr_cat@PAU?$pair@IPAVCvRandom@@@std@@PAU12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAU?$pair@IPAVCvRandom@@@0@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAU?$pair@IPAVCvRandom@@@std@@PAU12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAU?$pair@IPAVCvRandom@@@0@0@Z PROC ; std::_Ptr_cat<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> *>, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@PAU?$pair@IPAVCvRandom@@@std@@PAU12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAU?$pair@IPAVCvRandom@@@0@0@Z ENDP ; std::_Ptr_cat<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> *>
_TEXT	ENDS
PUBLIC	??$_Copy_opt@PAU?$pair@IPAVCvRandom@@@std@@PAU12@Urandom_access_iterator_tag@2@@std@@YAPAU?$pair@IPAVCvRandom@@@0@PAU10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> *,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Copy_opt@PAU?$pair@IPAVCvRandom@@@std@@PAU12@Urandom_access_iterator_tag@2@@std@@YAPAU?$pair@IPAVCvRandom@@@0@PAU10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Copy_opt@PAU?$pair@IPAVCvRandom@@@std@@PAU12@Urandom_access_iterator_tag@2@@std@@YAPAU?$pair@IPAVCvRandom@@@0@PAU10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_opt<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> *,std::random_access_iterator_tag>, COMDAT

; 2470 : 	_DEBUG_RANGE(_First, _Last);
; 2471 : 	for (; _First != _Last; ++_Dest, ++_First)

	mov	ecx, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	ecx, edx
	je	SHORT $LN1@Copy_opt
	push	esi
$LL3@Copy_opt:

; 2472 : 		*_Dest = *_First;

	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	add	ecx, 8
	add	eax, 8
	cmp	ecx, edx
	jne	SHORT $LL3@Copy_opt
	pop	esi
$LN1@Copy_opt:

; 2473 : 	return (_Dest);
; 2474 : 	}

	ret	0
??$_Copy_opt@PAU?$pair@IPAVCvRandom@@@std@@PAU12@Urandom_access_iterator_tag@2@@std@@YAPAU?$pair@IPAVCvRandom@@@0@PAU10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_opt<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> *,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	??$_Iter_random@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@@std@@YA?AUrandom_access_iterator_tag@0@ABQAU?$pair@IPAVCvDllNetInitInfo@@@0@0@Z ; std::_Iter_random<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Iter_random@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@@std@@YA?AUrandom_access_iterator_tag@0@ABQAU?$pair@IPAVCvDllNetInitInfo@@@0@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Iter_random@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@@std@@YA?AUrandom_access_iterator_tag@0@ABQAU?$pair@IPAVCvDllNetInitInfo@@@0@0@Z PROC ; std::_Iter_random<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> *>, COMDAT

; 994  : 	typename _Iter_random_helper<
; 995  : 		iterator_traits<_Iter1>::iterator_category, 
; 996  : 		iterator_traits<_Iter2>::iterator_category>::_Iter_random_cat _Cat;
; 997  : 	return (_Cat);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 998  : 	}

	ret	0
??$_Iter_random@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@@std@@YA?AUrandom_access_iterator_tag@0@ABQAU?$pair@IPAVCvDllNetInitInfo@@@0@0@Z ENDP ; std::_Iter_random<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> *>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAU?$pair@IPAVCvDllNetInitInfo@@@0@0@Z ; std::_Ptr_cat<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Ptr_cat@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAU?$pair@IPAVCvDllNetInitInfo@@@0@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAU?$pair@IPAVCvDllNetInitInfo@@@0@0@Z PROC ; std::_Ptr_cat<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> *>, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAU?$pair@IPAVCvDllNetInitInfo@@@0@0@Z ENDP ; std::_Ptr_cat<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> *>
_TEXT	ENDS
PUBLIC	??$_Copy_opt@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@Urandom_access_iterator_tag@2@@std@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@0@PAU10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> *,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Copy_opt@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@Urandom_access_iterator_tag@2@@std@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@0@PAU10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Copy_opt@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@Urandom_access_iterator_tag@2@@std@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@0@PAU10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_opt<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> *,std::random_access_iterator_tag>, COMDAT

; 2470 : 	_DEBUG_RANGE(_First, _Last);
; 2471 : 	for (; _First != _Last; ++_Dest, ++_First)

	mov	ecx, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	ecx, edx
	je	SHORT $LN1@Copy_opt@2
	push	esi
$LL3@Copy_opt@2:

; 2472 : 		*_Dest = *_First;

	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	add	ecx, 8
	add	eax, 8
	cmp	ecx, edx
	jne	SHORT $LL3@Copy_opt@2
	pop	esi
$LN1@Copy_opt@2:

; 2473 : 	return (_Dest);
; 2474 : 	}

	ret	0
??$_Copy_opt@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@Urandom_access_iterator_tag@2@@std@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@0@PAU10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_opt<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> *,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	??$_Iter_random@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@@std@@YA?AUrandom_access_iterator_tag@0@ABQAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@0@Z ; std::_Iter_random<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Iter_random@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@@std@@YA?AUrandom_access_iterator_tag@0@ABQAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Iter_random@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@@std@@YA?AUrandom_access_iterator_tag@0@ABQAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@0@Z PROC ; std::_Iter_random<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> *>, COMDAT

; 994  : 	typename _Iter_random_helper<
; 995  : 		iterator_traits<_Iter1>::iterator_category, 
; 996  : 		iterator_traits<_Iter2>::iterator_category>::_Iter_random_cat _Cat;
; 997  : 	return (_Cat);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 998  : 	}

	ret	0
??$_Iter_random@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@@std@@YA?AUrandom_access_iterator_tag@0@ABQAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@0@Z ENDP ; std::_Iter_random<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> *>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@0@Z ; std::_Ptr_cat<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Ptr_cat@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@0@Z PROC ; std::_Ptr_cat<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> *>, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@0@Z ENDP ; std::_Ptr_cat<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> *>
_TEXT	ENDS
PUBLIC	??$_Copy_opt@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@Urandom_access_iterator_tag@2@@std@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@PAU10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Copy_opt@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@Urandom_access_iterator_tag@2@@std@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@PAU10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Copy_opt@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@Urandom_access_iterator_tag@2@@std@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@PAU10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_opt<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::random_access_iterator_tag>, COMDAT

; 2470 : 	_DEBUG_RANGE(_First, _Last);
; 2471 : 	for (; _First != _Last; ++_Dest, ++_First)

	mov	ecx, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	ecx, edx
	je	SHORT $LN1@Copy_opt@3
	push	esi
$LL3@Copy_opt@3:

; 2472 : 		*_Dest = *_First;

	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	add	ecx, 8
	add	eax, 8
	cmp	ecx, edx
	jne	SHORT $LL3@Copy_opt@3
	pop	esi
$LN1@Copy_opt@3:

; 2473 : 	return (_Dest);
; 2474 : 	}

	ret	0
??$_Copy_opt@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@Urandom_access_iterator_tag@2@@std@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@PAU10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_opt<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAUCvDllPathFinderUpdateListData@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUCvDllPathFinderUpdateListData@@0@Z ; std::_Ptr_cat<CvDllPathFinderUpdateListData *,CvDllPathFinderUpdateListData *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Ptr_cat@PAUCvDllPathFinderUpdateListData@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUCvDllPathFinderUpdateListData@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAUCvDllPathFinderUpdateListData@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUCvDllPathFinderUpdateListData@@0@Z PROC ; std::_Ptr_cat<CvDllPathFinderUpdateListData *,CvDllPathFinderUpdateListData *>, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@PAUCvDllPathFinderUpdateListData@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUCvDllPathFinderUpdateListData@@0@Z ENDP ; std::_Ptr_cat<CvDllPathFinderUpdateListData *,CvDllPathFinderUpdateListData *>
_TEXT	ENDS
PUBLIC	??$_Fill@PAU?$pair@IPAVCvRandom@@@std@@U12@@std@@YAXPAU?$pair@IPAVCvRandom@@@0@0ABU10@@Z ; std::_Fill<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Fill@PAU?$pair@IPAVCvRandom@@@std@@U12@@std@@YAXPAU?$pair@IPAVCvRandom@@@0@0ABU10@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$_Fill@PAU?$pair@IPAVCvRandom@@@std@@U12@@std@@YAXPAU?$pair@IPAVCvRandom@@@0@0ABU10@@Z PROC ; std::_Fill<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> >, COMDAT

; 3157 : 	_DEBUG_RANGE(_First, _Last);
; 3158 : 	for (; _First != _Last; ++_First)

	mov	eax, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	cmp	eax, edx
	je	SHORT $LN1@Fill
	mov	ecx, DWORD PTR __Val$[esp-4]
	push	esi
$LL3@Fill:

; 3159 : 		*_First = _Val;

	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	add	eax, 8
	cmp	eax, edx
	jne	SHORT $LL3@Fill
	pop	esi
$LN1@Fill:

; 3160 : 	}

	ret	0
??$_Fill@PAU?$pair@IPAVCvRandom@@@std@@U12@@std@@YAXPAU?$pair@IPAVCvRandom@@@0@0ABU10@@Z ENDP ; std::_Fill<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> >
_TEXT	ENDS
PUBLIC	??$_Move_cat@PAU?$pair@IPAVCvRandom@@@std@@@std@@YA?AU_Undefined_move_tag@0@ABQAU?$pair@IPAVCvRandom@@@0@@Z ; std::_Move_cat<std::pair<unsigned int,CvRandom *> *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Move_cat@PAU?$pair@IPAVCvRandom@@@std@@@std@@YA?AU_Undefined_move_tag@0@ABQAU?$pair@IPAVCvRandom@@@0@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
??$_Move_cat@PAU?$pair@IPAVCvRandom@@@std@@@std@@YA?AU_Undefined_move_tag@0@ABQAU?$pair@IPAVCvRandom@@@0@@Z PROC ; std::_Move_cat<std::pair<unsigned int,CvRandom *> *>, COMDAT

; 1200 : 	{

	push	ecx

; 1201 : 		typename _Move_operation_category<typename iterator_traits<_Iter>::value_type>::_Move_cat _Cat;
; 1202 : 		return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1203 : 	}

	pop	ecx
	ret	0
??$_Move_cat@PAU?$pair@IPAVCvRandom@@@std@@@std@@YA?AU_Undefined_move_tag@0@ABQAU?$pair@IPAVCvRandom@@@0@@Z ENDP ; std::_Move_cat<std::pair<unsigned int,CvRandom *> *>
_TEXT	ENDS
PUBLIC	??$_Fill@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@U12@@std@@YAXPAU?$pair@IPAVCvDllNetInitInfo@@@0@0ABU10@@Z ; std::_Fill<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Fill@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@U12@@std@@YAXPAU?$pair@IPAVCvDllNetInitInfo@@@0@0ABU10@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$_Fill@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@U12@@std@@YAXPAU?$pair@IPAVCvDllNetInitInfo@@@0@0ABU10@@Z PROC ; std::_Fill<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> >, COMDAT

; 3157 : 	_DEBUG_RANGE(_First, _Last);
; 3158 : 	for (; _First != _Last; ++_First)

	mov	eax, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	cmp	eax, edx
	je	SHORT $LN1@Fill@2
	mov	ecx, DWORD PTR __Val$[esp-4]
	push	esi
$LL3@Fill@2:

; 3159 : 		*_First = _Val;

	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	add	eax, 8
	cmp	eax, edx
	jne	SHORT $LL3@Fill@2
	pop	esi
$LN1@Fill@2:

; 3160 : 	}

	ret	0
??$_Fill@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@U12@@std@@YAXPAU?$pair@IPAVCvDllNetInitInfo@@@0@0ABU10@@Z ENDP ; std::_Fill<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> >
_TEXT	ENDS
PUBLIC	??$_Move_cat@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@YA?AU_Undefined_move_tag@0@ABQAU?$pair@IPAVCvDllNetInitInfo@@@0@@Z ; std::_Move_cat<std::pair<unsigned int,CvDllNetInitInfo *> *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Move_cat@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@YA?AU_Undefined_move_tag@0@ABQAU?$pair@IPAVCvDllNetInitInfo@@@0@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
??$_Move_cat@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@YA?AU_Undefined_move_tag@0@ABQAU?$pair@IPAVCvDllNetInitInfo@@@0@@Z PROC ; std::_Move_cat<std::pair<unsigned int,CvDllNetInitInfo *> *>, COMDAT

; 1200 : 	{

	push	ecx

; 1201 : 		typename _Move_operation_category<typename iterator_traits<_Iter>::value_type>::_Move_cat _Cat;
; 1202 : 		return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1203 : 	}

	pop	ecx
	ret	0
??$_Move_cat@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@YA?AU_Undefined_move_tag@0@ABQAU?$pair@IPAVCvDllNetInitInfo@@@0@@Z ENDP ; std::_Move_cat<std::pair<unsigned int,CvDllNetInitInfo *> *>
_TEXT	ENDS
PUBLIC	??$_Fill@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@U12@@std@@YAXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@0ABU10@@Z ; std::_Fill<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Fill@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@U12@@std@@YAXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@0ABU10@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$_Fill@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@U12@@std@@YAXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@0ABU10@@Z PROC ; std::_Fill<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> >, COMDAT

; 3157 : 	_DEBUG_RANGE(_First, _Last);
; 3158 : 	for (; _First != _Last; ++_First)

	mov	eax, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	cmp	eax, edx
	je	SHORT $LN1@Fill@3
	mov	ecx, DWORD PTR __Val$[esp-4]
	push	esi
$LL3@Fill@3:

; 3159 : 		*_First = _Val;

	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	add	eax, 8
	cmp	eax, edx
	jne	SHORT $LL3@Fill@3
	pop	esi
$LN1@Fill@3:

; 3160 : 	}

	ret	0
??$_Fill@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@U12@@std@@YAXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@0ABU10@@Z ENDP ; std::_Fill<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> >
_TEXT	ENDS
PUBLIC	??$_Move_cat@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@YA?AU_Undefined_move_tag@0@ABQAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@@Z ; std::_Move_cat<std::pair<unsigned int,CvDllNetLoadGameInfo *> *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Move_cat@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@YA?AU_Undefined_move_tag@0@ABQAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
??$_Move_cat@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@YA?AU_Undefined_move_tag@0@ABQAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@@Z PROC ; std::_Move_cat<std::pair<unsigned int,CvDllNetLoadGameInfo *> *>, COMDAT

; 1200 : 	{

	push	ecx

; 1201 : 		typename _Move_operation_category<typename iterator_traits<_Iter>::value_type>::_Move_cat _Cat;
; 1202 : 		return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1203 : 	}

	pop	ecx
	ret	0
??$_Move_cat@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@YA?AU_Undefined_move_tag@0@ABQAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@@Z ENDP ; std::_Move_cat<std::pair<unsigned int,CvDllNetLoadGameInfo *> *>
_TEXT	ENDS
PUBLIC	??$_Fill@PAUCvDllPathFinderUpdateListData@@U1@@std@@YAXPAUCvDllPathFinderUpdateListData@@0ABU1@@Z ; std::_Fill<CvDllPathFinderUpdateListData *,CvDllPathFinderUpdateListData>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Fill@PAUCvDllPathFinderUpdateListData@@U1@@std@@YAXPAUCvDllPathFinderUpdateListData@@0ABU1@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$_Fill@PAUCvDllPathFinderUpdateListData@@U1@@std@@YAXPAUCvDllPathFinderUpdateListData@@0ABU1@@Z PROC ; std::_Fill<CvDllPathFinderUpdateListData *,CvDllPathFinderUpdateListData>, COMDAT

; 3157 : 	_DEBUG_RANGE(_First, _Last);
; 3158 : 	for (; _First != _Last; ++_First)

	mov	eax, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	cmp	eax, edx
	je	SHORT $LN1@Fill@4
	mov	ecx, DWORD PTR __Val$[esp-4]
	push	esi
$LL3@Fill@4:

; 3159 : 		*_First = _Val;

	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	mov	esi, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], esi
	add	eax, 12					; 0000000cH
	cmp	eax, edx
	jne	SHORT $LL3@Fill@4
	pop	esi
$LN1@Fill@4:

; 3160 : 	}

	ret	0
??$_Fill@PAUCvDllPathFinderUpdateListData@@U1@@std@@YAXPAUCvDllPathFinderUpdateListData@@0ABU1@@Z ENDP ; std::_Fill<CvDllPathFinderUpdateListData *,CvDllPathFinderUpdateListData>
_TEXT	ENDS
PUBLIC	??$_Iter_random@PAUCvDllPathFinderUpdateListData@@PAU1@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUCvDllPathFinderUpdateListData@@0@Z ; std::_Iter_random<CvDllPathFinderUpdateListData *,CvDllPathFinderUpdateListData *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Iter_random@PAUCvDllPathFinderUpdateListData@@PAU1@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUCvDllPathFinderUpdateListData@@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Iter_random@PAUCvDllPathFinderUpdateListData@@PAU1@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUCvDllPathFinderUpdateListData@@0@Z PROC ; std::_Iter_random<CvDllPathFinderUpdateListData *,CvDllPathFinderUpdateListData *>, COMDAT

; 994  : 	typename _Iter_random_helper<
; 995  : 		iterator_traits<_Iter1>::iterator_category, 
; 996  : 		iterator_traits<_Iter2>::iterator_category>::_Iter_random_cat _Cat;
; 997  : 	return (_Cat);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 998  : 	}

	ret	0
??$_Iter_random@PAUCvDllPathFinderUpdateListData@@PAU1@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUCvDllPathFinderUpdateListData@@0@Z ENDP ; std::_Iter_random<CvDllPathFinderUpdateListData *,CvDllPathFinderUpdateListData *>
_TEXT	ENDS
PUBLIC	??$_Move_cat@PAUCvDllPathFinderUpdateListData@@@std@@YA?AU_Undefined_move_tag@0@ABQAUCvDllPathFinderUpdateListData@@@Z ; std::_Move_cat<CvDllPathFinderUpdateListData *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Move_cat@PAUCvDllPathFinderUpdateListData@@@std@@YA?AU_Undefined_move_tag@0@ABQAUCvDllPathFinderUpdateListData@@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
??$_Move_cat@PAUCvDllPathFinderUpdateListData@@@std@@YA?AU_Undefined_move_tag@0@ABQAUCvDllPathFinderUpdateListData@@@Z PROC ; std::_Move_cat<CvDllPathFinderUpdateListData *>, COMDAT

; 1200 : 	{

	push	ecx

; 1201 : 		typename _Move_operation_category<typename iterator_traits<_Iter>::value_type>::_Move_cat _Cat;
; 1202 : 		return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1203 : 	}

	pop	ecx
	ret	0
??$_Move_cat@PAUCvDllPathFinderUpdateListData@@@std@@YA?AU_Undefined_move_tag@0@ABQAUCvDllPathFinderUpdateListData@@@Z ENDP ; std::_Move_cat<CvDllPathFinderUpdateListData *>
_TEXT	ENDS
PUBLIC	??M?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::operator<
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??M?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??M?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::operator<, COMDAT
; _this$ = ecx

; 221  : 
; 222  :  #if _HAS_ITERATOR_DEBUGGING
; 223  : 		_Compat(_Right);
; 224  :  #else
; 225  : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));
; 226  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 227  : 
; 228  : 		return (_Myptr < _Right._Myptr);

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Right$[esp-4]
	cmp	eax, DWORD PTR [ecx]
	sbb	eax, eax
	neg	eax

; 229  : 		}

	ret	4
??M?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::operator<
_TEXT	ENDS
PUBLIC	??E?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::operator++
; Function compile flags: /Ogtpy
;	COMDAT ??E?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::operator++, COMDAT
; _this$ = ecx

; 115  : 		{	// preincrement

	mov	eax, ecx

; 116  : 		_SCL_SECURE_VALIDATE(this->_Has_container());
; 117  : 		_SCL_SECURE_VALIDATE_RANGE(_Myptr < ((_Myvec *)(this->_Getmycont()))->_Mylast);
; 118  : 
; 119  :  #if _HAS_ITERATOR_DEBUGGING
; 120  : 		if (this->_Mycont == 0
; 121  : 			|| ((_Myvec *)this->_Mycont)->_Mylast <= _Myptr)
; 122  : 			_DEBUG_ERROR("vector iterator not incrementable");
; 123  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 124  : 
; 125  : 		++_Myptr;

	add	DWORD PTR [eax], 12			; 0000000cH

; 126  : 		return (*this);
; 127  : 		}

	ret	0
??E?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::operator++
_TEXT	ENDS
PUBLIC	??F?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::operator--
; Function compile flags: /Ogtpy
;	COMDAT ??F?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::operator--, COMDAT
; _this$ = ecx

; 137  : 		{	// predecrement

	mov	eax, ecx

; 138  : 		_SCL_SECURE_VALIDATE(this->_Has_container());
; 139  : 		_SCL_SECURE_VALIDATE_RANGE(_Myptr > ((_Myvec *)(this->_Getmycont()))->_Myfirst);
; 140  : 
; 141  :  #if _HAS_ITERATOR_DEBUGGING
; 142  : 		if (this->_Mycont == 0
; 143  : 			|| _Myptr == ((_Myvec *)this->_Mycont)->_Myfirst)
; 144  : 			_DEBUG_ERROR("vector iterator not decrementable");
; 145  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 146  : 
; 147  : 		--_Myptr;

	add	DWORD PTR [eax], -12			; fffffff4H

; 148  : 		return (*this);
; 149  : 		}

	ret	0
??F?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::operator--
_TEXT	ENDS
PUBLIC	??$_Copy_backward_opt@PAU?$pair@IPAVCvRandom@@@std@@PAU12@Urandom_access_iterator_tag@2@@std@@YAPAU?$pair@IPAVCvRandom@@@0@PAU10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> *,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Copy_backward_opt@PAU?$pair@IPAVCvRandom@@@std@@PAU12@Urandom_access_iterator_tag@2@@std@@YAPAU?$pair@IPAVCvRandom@@@0@PAU10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Copy_backward_opt@PAU?$pair@IPAVCvRandom@@@std@@PAU12@Urandom_access_iterator_tag@2@@std@@YAPAU?$pair@IPAVCvRandom@@@0@PAU10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_backward_opt<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> *,std::random_access_iterator_tag>, COMDAT

; 2674 : 	_DEBUG_RANGE(_First, _Last);
; 2675 : 	while (_First != _Last)

	mov	edx, DWORD PTR __First$[esp-4]
	mov	ecx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	edx, ecx
	je	SHORT $LN1@Copy_backw
	push	esi
$LL2@Copy_backw:

; 2676 : 		*--_Dest = *--_Last;

	mov	esi, DWORD PTR [ecx-8]
	sub	ecx, 8
	sub	eax, 8
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	cmp	ecx, edx
	jne	SHORT $LL2@Copy_backw
	pop	esi
$LN1@Copy_backw:

; 2677 : 	return (_Dest);
; 2678 : 	}

	ret	0
??$_Copy_backward_opt@PAU?$pair@IPAVCvRandom@@@std@@PAU12@Urandom_access_iterator_tag@2@@std@@YAPAU?$pair@IPAVCvRandom@@@0@PAU10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_backward_opt<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> *,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	??$_Copy_backward_opt@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@Urandom_access_iterator_tag@2@@std@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@0@PAU10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> *,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Copy_backward_opt@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@Urandom_access_iterator_tag@2@@std@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@0@PAU10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Copy_backward_opt@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@Urandom_access_iterator_tag@2@@std@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@0@PAU10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_backward_opt<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> *,std::random_access_iterator_tag>, COMDAT

; 2674 : 	_DEBUG_RANGE(_First, _Last);
; 2675 : 	while (_First != _Last)

	mov	edx, DWORD PTR __First$[esp-4]
	mov	ecx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	edx, ecx
	je	SHORT $LN1@Copy_backw@2
	push	esi
$LL2@Copy_backw@2:

; 2676 : 		*--_Dest = *--_Last;

	mov	esi, DWORD PTR [ecx-8]
	sub	ecx, 8
	sub	eax, 8
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	cmp	ecx, edx
	jne	SHORT $LL2@Copy_backw@2
	pop	esi
$LN1@Copy_backw@2:

; 2677 : 	return (_Dest);
; 2678 : 	}

	ret	0
??$_Copy_backward_opt@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@Urandom_access_iterator_tag@2@@std@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@0@PAU10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_backward_opt<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> *,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	??$_Copy_backward_opt@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@Urandom_access_iterator_tag@2@@std@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@PAU10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Copy_backward_opt@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@Urandom_access_iterator_tag@2@@std@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@PAU10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Copy_backward_opt@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@Urandom_access_iterator_tag@2@@std@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@PAU10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_backward_opt<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::random_access_iterator_tag>, COMDAT

; 2674 : 	_DEBUG_RANGE(_First, _Last);
; 2675 : 	while (_First != _Last)

	mov	edx, DWORD PTR __First$[esp-4]
	mov	ecx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	edx, ecx
	je	SHORT $LN1@Copy_backw@3
	push	esi
$LL2@Copy_backw@3:

; 2676 : 		*--_Dest = *--_Last;

	mov	esi, DWORD PTR [ecx-8]
	sub	ecx, 8
	sub	eax, 8
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	cmp	ecx, edx
	jne	SHORT $LL2@Copy_backw@3
	pop	esi
$LN1@Copy_backw@3:

; 2677 : 	return (_Dest);
; 2678 : 	}

	ret	0
??$_Copy_backward_opt@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@Urandom_access_iterator_tag@2@@std@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@PAU10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_backward_opt<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	??$_Copy_backward_opt@PAUCvDllPathFinderUpdateListData@@PAU1@Urandom_access_iterator_tag@std@@@std@@YAPAUCvDllPathFinderUpdateListData@@PAU1@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<CvDllPathFinderUpdateListData *,CvDllPathFinderUpdateListData *,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Copy_backward_opt@PAUCvDllPathFinderUpdateListData@@PAU1@Urandom_access_iterator_tag@std@@@std@@YAPAUCvDllPathFinderUpdateListData@@PAU1@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Copy_backward_opt@PAUCvDllPathFinderUpdateListData@@PAU1@Urandom_access_iterator_tag@std@@@std@@YAPAUCvDllPathFinderUpdateListData@@PAU1@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_backward_opt<CvDllPathFinderUpdateListData *,CvDllPathFinderUpdateListData *,std::random_access_iterator_tag>, COMDAT

; 2674 : 	_DEBUG_RANGE(_First, _Last);
; 2675 : 	while (_First != _Last)

	mov	edx, DWORD PTR __First$[esp-4]
	mov	ecx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	edx, ecx
	je	SHORT $LN1@Copy_backw@4
	push	esi
$LL2@Copy_backw@4:

; 2676 : 		*--_Dest = *--_Last;

	mov	esi, DWORD PTR [ecx-12]
	sub	ecx, 12					; 0000000cH
	sub	eax, 12					; 0000000cH
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	mov	esi, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], esi
	cmp	ecx, edx
	jne	SHORT $LL2@Copy_backw@4
	pop	esi
$LN1@Copy_backw@4:

; 2677 : 	return (_Dest);
; 2678 : 	}

	ret	0
??$_Copy_backward_opt@PAUCvDllPathFinderUpdateListData@@PAU1@Urandom_access_iterator_tag@std@@@std@@YAPAUCvDllPathFinderUpdateListData@@PAU1@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_backward_opt<CvDllPathFinderUpdateListData *,CvDllPathFinderUpdateListData *,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	??$_Construct@U?$pair@IPAVCvRandom@@@std@@U12@@std@@YAXPAU?$pair@IPAVCvRandom@@@0@ABU10@@Z ; std::_Construct<std::pair<unsigned int,CvRandom *>,std::pair<unsigned int,CvRandom *> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Construct@U?$pair@IPAVCvRandom@@@std@@U12@@std@@YAXPAU?$pair@IPAVCvRandom@@@0@ABU10@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@U?$pair@IPAVCvRandom@@@std@@U12@@std@@YAXPAU?$pair@IPAVCvRandom@@@0@ABU10@@Z PROC ; std::_Construct<std::pair<unsigned int,CvRandom *>,std::pair<unsigned int,CvRandom *> >, COMDAT

; 51   : 	void _FARQ *_Vptr = _Ptr;
; 52   : 	::new (_Vptr) _T1(_Val);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	test	eax, eax
	je	SHORT $LN3@Construct
	mov	ecx, DWORD PTR __Val$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx
$LN3@Construct:

; 53   : 	}

	ret	0
??$_Construct@U?$pair@IPAVCvRandom@@@std@@U12@@std@@YAXPAU?$pair@IPAVCvRandom@@@0@ABU10@@Z ENDP ; std::_Construct<std::pair<unsigned int,CvRandom *>,std::pair<unsigned int,CvRandom *> >
_TEXT	ENDS
PUBLIC	??$_Destroy@U?$pair@IPAVCvRandom@@@std@@@std@@YAXPAU?$pair@IPAVCvRandom@@@0@@Z ; std::_Destroy<std::pair<unsigned int,CvRandom *> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Destroy@U?$pair@IPAVCvRandom@@@std@@@std@@YAXPAU?$pair@IPAVCvRandom@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U?$pair@IPAVCvRandom@@@std@@@std@@YAXPAU?$pair@IPAVCvRandom@@@0@@Z PROC ; std::_Destroy<std::pair<unsigned int,CvRandom *> >, COMDAT

; 59   : 	_DESTRUCTOR(_Ty, _Ptr);
; 60   : 	}

	ret	0
??$_Destroy@U?$pair@IPAVCvRandom@@@std@@@std@@YAXPAU?$pair@IPAVCvRandom@@@0@@Z ENDP ; std::_Destroy<std::pair<unsigned int,CvRandom *> >
_TEXT	ENDS
PUBLIC	??$_Construct@U?$pair@IPAVCvDllNetInitInfo@@@std@@U12@@std@@YAXPAU?$pair@IPAVCvDllNetInitInfo@@@0@ABU10@@Z ; std::_Construct<std::pair<unsigned int,CvDllNetInitInfo *>,std::pair<unsigned int,CvDllNetInitInfo *> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Construct@U?$pair@IPAVCvDllNetInitInfo@@@std@@U12@@std@@YAXPAU?$pair@IPAVCvDllNetInitInfo@@@0@ABU10@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@U?$pair@IPAVCvDllNetInitInfo@@@std@@U12@@std@@YAXPAU?$pair@IPAVCvDllNetInitInfo@@@0@ABU10@@Z PROC ; std::_Construct<std::pair<unsigned int,CvDllNetInitInfo *>,std::pair<unsigned int,CvDllNetInitInfo *> >, COMDAT

; 51   : 	void _FARQ *_Vptr = _Ptr;
; 52   : 	::new (_Vptr) _T1(_Val);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	test	eax, eax
	je	SHORT $LN3@Construct@2
	mov	ecx, DWORD PTR __Val$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx
$LN3@Construct@2:

; 53   : 	}

	ret	0
??$_Construct@U?$pair@IPAVCvDllNetInitInfo@@@std@@U12@@std@@YAXPAU?$pair@IPAVCvDllNetInitInfo@@@0@ABU10@@Z ENDP ; std::_Construct<std::pair<unsigned int,CvDllNetInitInfo *>,std::pair<unsigned int,CvDllNetInitInfo *> >
_TEXT	ENDS
PUBLIC	??$_Destroy@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@YAXPAU?$pair@IPAVCvDllNetInitInfo@@@0@@Z ; std::_Destroy<std::pair<unsigned int,CvDllNetInitInfo *> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Destroy@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@YAXPAU?$pair@IPAVCvDllNetInitInfo@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@YAXPAU?$pair@IPAVCvDllNetInitInfo@@@0@@Z PROC ; std::_Destroy<std::pair<unsigned int,CvDllNetInitInfo *> >, COMDAT

; 59   : 	_DESTRUCTOR(_Ty, _Ptr);
; 60   : 	}

	ret	0
??$_Destroy@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@YAXPAU?$pair@IPAVCvDllNetInitInfo@@@0@@Z ENDP ; std::_Destroy<std::pair<unsigned int,CvDllNetInitInfo *> >
_TEXT	ENDS
PUBLIC	??$_Construct@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@U12@@std@@YAXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@ABU10@@Z ; std::_Construct<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::pair<unsigned int,CvDllNetLoadGameInfo *> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Construct@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@U12@@std@@YAXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@ABU10@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@U12@@std@@YAXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@ABU10@@Z PROC ; std::_Construct<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::pair<unsigned int,CvDllNetLoadGameInfo *> >, COMDAT

; 51   : 	void _FARQ *_Vptr = _Ptr;
; 52   : 	::new (_Vptr) _T1(_Val);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	test	eax, eax
	je	SHORT $LN3@Construct@3
	mov	ecx, DWORD PTR __Val$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx
$LN3@Construct@3:

; 53   : 	}

	ret	0
??$_Construct@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@U12@@std@@YAXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@ABU10@@Z ENDP ; std::_Construct<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::pair<unsigned int,CvDllNetLoadGameInfo *> >
_TEXT	ENDS
PUBLIC	??$_Destroy@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@YAXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@@Z ; std::_Destroy<std::pair<unsigned int,CvDllNetLoadGameInfo *> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Destroy@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@YAXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@YAXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@@Z PROC ; std::_Destroy<std::pair<unsigned int,CvDllNetLoadGameInfo *> >, COMDAT

; 59   : 	_DESTRUCTOR(_Ty, _Ptr);
; 60   : 	}

	ret	0
??$_Destroy@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@YAXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@@Z ENDP ; std::_Destroy<std::pair<unsigned int,CvDllNetLoadGameInfo *> >
_TEXT	ENDS
PUBLIC	??$_Construct@UCvDllPathFinderUpdateListData@@U1@@std@@YAXPAUCvDllPathFinderUpdateListData@@ABU1@@Z ; std::_Construct<CvDllPathFinderUpdateListData,CvDllPathFinderUpdateListData>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Construct@UCvDllPathFinderUpdateListData@@U1@@std@@YAXPAUCvDllPathFinderUpdateListData@@ABU1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@UCvDllPathFinderUpdateListData@@U1@@std@@YAXPAUCvDllPathFinderUpdateListData@@ABU1@@Z PROC ; std::_Construct<CvDllPathFinderUpdateListData,CvDllPathFinderUpdateListData>, COMDAT

; 51   : 	void _FARQ *_Vptr = _Ptr;
; 52   : 	::new (_Vptr) _T1(_Val);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	test	eax, eax
	je	SHORT $LN3@Construct@4
	mov	ecx, DWORD PTR __Val$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], ecx
$LN3@Construct@4:

; 53   : 	}

	ret	0
??$_Construct@UCvDllPathFinderUpdateListData@@U1@@std@@YAXPAUCvDllPathFinderUpdateListData@@ABU1@@Z ENDP ; std::_Construct<CvDllPathFinderUpdateListData,CvDllPathFinderUpdateListData>
_TEXT	ENDS
PUBLIC	??$_Destroy@UCvDllPathFinderUpdateListData@@@std@@YAXPAUCvDllPathFinderUpdateListData@@@Z ; std::_Destroy<CvDllPathFinderUpdateListData>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Destroy@UCvDllPathFinderUpdateListData@@@std@@YAXPAUCvDllPathFinderUpdateListData@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@UCvDllPathFinderUpdateListData@@@std@@YAXPAUCvDllPathFinderUpdateListData@@@Z PROC ; std::_Destroy<CvDllPathFinderUpdateListData>, COMDAT

; 59   : 	_DESTRUCTOR(_Ty, _Ptr);
; 60   : 	}

	ret	0
??$_Destroy@UCvDllPathFinderUpdateListData@@@std@@YAXPAUCvDllPathFinderUpdateListData@@@Z ENDP ; std::_Destroy<CvDllPathFinderUpdateListData>
_TEXT	ENDS
PUBLIC	??D?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QBEABUCvDllPathFinderUpdateListData@@XZ ; std::_Vector_const_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::operator*
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??D?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QBEABUCvDllPathFinderUpdateListData@@XZ
_TEXT	SEGMENT
??D?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QBEABUCvDllPathFinderUpdateListData@@XZ PROC ; std::_Vector_const_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::operator*, COMDAT
; _this$ = ecx

; 92   : 
; 93   :  #if _HAS_ITERATOR_DEBUGGING
; 94   : 		if (this->_Mycont == 0
; 95   : 			|| _Myptr < ((_Myvec *)this->_Mycont)->_Myfirst
; 96   : 			|| ((_Myvec *)this->_Mycont)->_Mylast <= _Myptr)
; 97   : 			{
; 98   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 99   : 			_SCL_SECURE_OUT_OF_RANGE;
; 100  : 			}
; 101  :  #else
; 102  :  		_SCL_SECURE_VALIDATE(this->_Has_container());
; 103  : 		_SCL_SECURE_VALIDATE_RANGE(_Myptr < ((_Myvec *)(this->_Getmycont()))->_Mylast);
; 104  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 105  : 
; 106  : 		return (*_Myptr);

	mov	eax, DWORD PTR [ecx]

; 107  : 		}

	ret	0
??D?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QBEABUCvDllPathFinderUpdateListData@@XZ ENDP ; std::_Vector_const_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::operator*
_TEXT	ENDS
PUBLIC	??$swap@UCvDllPathFinderUpdateListData@@@std@@YAXAAUCvDllPathFinderUpdateListData@@0@Z ; std::swap<CvDllPathFinderUpdateListData>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\utility
;	COMDAT ??$swap@UCvDllPathFinderUpdateListData@@@std@@YAXAAUCvDllPathFinderUpdateListData@@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@UCvDllPathFinderUpdateListData@@@std@@YAXAAUCvDllPathFinderUpdateListData@@0@Z PROC ; std::swap<CvDllPathFinderUpdateListData>, COMDAT

; 18   : 	if (&_Left != &_Right)

	mov	eax, DWORD PTR __Left$[esp-4]
	mov	ecx, DWORD PTR __Right$[esp-4]
	cmp	eax, ecx
	je	SHORT $LN1@swap

; 19   : 		{	// different, worth swapping
; 20   : 		_Ty _Tmp = _Left;

	mov	edx, DWORD PTR [eax]
	push	ebx

; 21   : 
; 22   : 		_Left = _Right;

	mov	ebx, DWORD PTR [ecx]
	push	esi
	mov	esi, DWORD PTR [eax+4]
	push	edi
	mov	edi, DWORD PTR [eax+8]
	mov	DWORD PTR [eax], ebx
	mov	ebx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ebx
	mov	ebx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], ebx

; 23   : 		_Right = _Tmp;

	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], esi
	mov	DWORD PTR [ecx+8], edi
	pop	edi
	pop	esi
	pop	ebx
$LN1@swap:

; 24   : 		}
; 25   : 	}

	ret	0
??$swap@UCvDllPathFinderUpdateListData@@@std@@YAXAAUCvDllPathFinderUpdateListData@@0@Z ENDP ; std::swap<CvDllPathFinderUpdateListData>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@PAUCvDllPathFinderUpdateListData@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@0@AAPAUCvDllPathFinderUpdateListData@@@Z ; std::_Ptr_cat<std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >,CvDllPathFinderUpdateListData *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Ptr_cat@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@PAUCvDllPathFinderUpdateListData@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@0@AAPAUCvDllPathFinderUpdateListData@@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@PAUCvDllPathFinderUpdateListData@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@0@AAPAUCvDllPathFinderUpdateListData@@@Z PROC ; std::_Ptr_cat<std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >,CvDllPathFinderUpdateListData *>, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@PAUCvDllPathFinderUpdateListData@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@0@AAPAUCvDllPathFinderUpdateListData@@@Z ENDP ; std::_Ptr_cat<std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >,CvDllPathFinderUpdateListData *>
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::operator==
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??8?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::operator==, COMDAT
; _this$ = ecx

; 204  : 
; 205  :  #if _HAS_ITERATOR_DEBUGGING
; 206  : 		_Compat(_Right);
; 207  :  #else
; 208  : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));
; 209  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 210  : 
; 211  : 		return (_Myptr == _Right._Myptr);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	cl
	mov	al, cl

; 212  : 		}

	ret	4
??8?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::operator==
_TEXT	ENDS
EXTRN	__imp_??0exception@std@@QAE@ABV01@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0logic_error@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0logic_error@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0logic_error@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0logic_error@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0logic_error@std@@QAE@ABV01@@Z PROC			; std::logic_error::logic_error, COMDAT
; _this$ = ecx
	push	-1
	push	__ehhandler$??0logic_error@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi
	push	edi
	mov	edi, DWORD PTR ___that$[esp+20]
	mov	esi, ecx
	push	edi
	mov	DWORD PTR _this$[esp+28], esi
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	add	edi, 12					; 0000000cH
	push	edi
	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR __$EHRec$[esp+36], 0
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	pop	edi
	mov	eax, esi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0logic_error@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??0logic_error@std@@QAE@ABV01@@Z:
	mov	eax, OFFSET __ehfuncinfo$??0logic_error@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0logic_error@std@@QAE@ABV01@@Z ENDP			; std::logic_error::logic_error
PUBLIC	??1CvString@@QAE@XZ				; CvString::~CvString
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
;	COMDAT ??1CvString@@QAE@XZ
_TEXT	SEGMENT
??1CvString@@QAE@XZ PROC				; CvString::~CvString, COMDAT
; _this$ = ecx

; 28   : 	~CvString() {}

	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
??1CvString@@QAE@XZ ENDP				; CvString::~CvString
_TEXT	ENDS
PUBLIC	?GetInterfaceId@ICvUnknown@@SG?AU_GUID@@XZ	; ICvUnknown::GetInterfaceId
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvdllinterfaces.h
;	COMDAT ?GetInterfaceId@ICvUnknown@@SG?AU_GUID@@XZ
_TEXT	SEGMENT
$T229052 = 8						; size = 4
?GetInterfaceId@ICvUnknown@@SG?AU_GUID@@XZ PROC		; ICvUnknown::GetInterfaceId, COMDAT

; 306  : 	static GUID DLLCALL GetInterfaceId(){ return guidICvUnknown; }

	mov	eax, DWORD PTR $T229052[esp-4]
	mov	ecx, DWORD PTR _guidICvUnknown
	mov	edx, DWORD PTR _guidICvUnknown+4
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR _guidICvUnknown+8
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR _guidICvUnknown+12
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	ret	4
?GetInterfaceId@ICvUnknown@@SG?AU_GUID@@XZ ENDP		; ICvUnknown::GetInterfaceId
_TEXT	ENDS
PUBLIC	??3ICvUnknown@@SGXPAX@Z				; ICvUnknown::operator delete
; Function compile flags: /Ogtpy
;	COMDAT ??3ICvUnknown@@SGXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
??3ICvUnknown@@SGXPAX@Z PROC				; ICvUnknown::operator delete, COMDAT

; 310  : 		if (p)

	mov	eax, DWORD PTR _p$[esp-4]
	test	eax, eax
	je	SHORT $LN1@operator

; 311  : 		{
; 312  : 			ICvUnknown* inst = (ICvUnknown*)(p);
; 313  : 			inst->Destroy();

	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _p$[esp-4], eax
	jmp	edx
$LN1@operator:

; 314  : 		}
; 315  : 	}

	ret	4
??3ICvUnknown@@SGXPAX@Z ENDP				; ICvUnknown::operator delete
_TEXT	ENDS
PUBLIC	?GetInterfaceId@ICvGameContext1@@SG?AU_GUID@@XZ	; ICvGameContext1::GetInterfaceId
; Function compile flags: /Ogtpy
;	COMDAT ?GetInterfaceId@ICvGameContext1@@SG?AU_GUID@@XZ
_TEXT	SEGMENT
$T229059 = 8						; size = 4
?GetInterfaceId@ICvGameContext1@@SG?AU_GUID@@XZ PROC	; ICvGameContext1::GetInterfaceId, COMDAT

; 637  : 	static GUID DLLCALL GetInterfaceId() { return guidICvGameContext1; }

	mov	eax, DWORD PTR $T229059[esp-4]
	mov	ecx, DWORD PTR _guidICvGameContext1
	mov	edx, DWORD PTR _guidICvGameContext1+4
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR _guidICvGameContext1+8
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR _guidICvGameContext1+12
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	ret	4
?GetInterfaceId@ICvGameContext1@@SG?AU_GUID@@XZ ENDP	; ICvGameContext1::GetInterfaceId
_TEXT	ENDS
PUBLIC	?GetInterfaceId@ICvNetMessageHandler1@@SG?AU_GUID@@XZ ; ICvNetMessageHandler1::GetInterfaceId
; Function compile flags: /Ogtpy
;	COMDAT ?GetInterfaceId@ICvNetMessageHandler1@@SG?AU_GUID@@XZ
_TEXT	SEGMENT
$T229063 = 8						; size = 4
?GetInterfaceId@ICvNetMessageHandler1@@SG?AU_GUID@@XZ PROC ; ICvNetMessageHandler1::GetInterfaceId, COMDAT

; 1175 : 	static GUID DLLCALL GetInterfaceId() { return guidICvNetMessageHandler1; }

	mov	eax, DWORD PTR $T229063[esp-4]
	mov	ecx, DWORD PTR _guidICvNetMessageHandler1
	mov	edx, DWORD PTR _guidICvNetMessageHandler1+4
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR _guidICvNetMessageHandler1+8
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR _guidICvNetMessageHandler1+12
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	ret	4
?GetInterfaceId@ICvNetMessageHandler1@@SG?AU_GUID@@XZ ENDP ; ICvNetMessageHandler1::GetInterfaceId
_TEXT	ENDS
PUBLIC	?GetInterfaceId@ICvGameContext2@@SG?AU_GUID@@XZ	; ICvGameContext2::GetInterfaceId
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvdllinterfaces2.h
;	COMDAT ?GetInterfaceId@ICvGameContext2@@SG?AU_GUID@@XZ
_TEXT	SEGMENT
$T229067 = 8						; size = 4
?GetInterfaceId@ICvGameContext2@@SG?AU_GUID@@XZ PROC	; ICvGameContext2::GetInterfaceId, COMDAT

; 154  : 	static GUID DLLCALL GetInterfaceId() { return guidICvGameContext2; }

	mov	eax, DWORD PTR $T229067[esp-4]
	mov	ecx, DWORD PTR _guidICvGameContext2
	mov	edx, DWORD PTR _guidICvGameContext2+4
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR _guidICvGameContext2+8
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR _guidICvGameContext2+12
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	ret	4
?GetInterfaceId@ICvGameContext2@@SG?AU_GUID@@XZ ENDP	; ICvGameContext2::GetInterfaceId
_TEXT	ENDS
PUBLIC	?GetInterfaceId@ICvGameContext3@@SG?AU_GUID@@XZ	; ICvGameContext3::GetInterfaceId
; Function compile flags: /Ogtpy
;	COMDAT ?GetInterfaceId@ICvGameContext3@@SG?AU_GUID@@XZ
_TEXT	SEGMENT
$T229071 = 8						; size = 4
?GetInterfaceId@ICvGameContext3@@SG?AU_GUID@@XZ PROC	; ICvGameContext3::GetInterfaceId, COMDAT

; 162  : 	static GUID DLLCALL GetInterfaceId() {return guidICvGameContext3; }

	mov	eax, DWORD PTR $T229071[esp-4]
	mov	ecx, DWORD PTR _guidICvGameContext3
	mov	edx, DWORD PTR _guidICvGameContext3+4
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR _guidICvGameContext3+8
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR _guidICvGameContext3+12
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	ret	4
?GetInterfaceId@ICvGameContext3@@SG?AU_GUID@@XZ ENDP	; ICvGameContext3::GetInterfaceId
_TEXT	ENDS
PUBLIC	?GetInterfaceId@ICvEngineUtility4@@SG?AU_GUID@@XZ ; ICvEngineUtility4::GetInterfaceId
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\icvdllutility.h
;	COMDAT ?GetInterfaceId@ICvEngineUtility4@@SG?AU_GUID@@XZ
_TEXT	SEGMENT
$T229075 = 8						; size = 4
?GetInterfaceId@ICvEngineUtility4@@SG?AU_GUID@@XZ PROC	; ICvEngineUtility4::GetInterfaceId, COMDAT

; 401  : 	static GUID DLLCALL GetInterfaceId() { return guidICvEngineUtility4; }

	mov	eax, DWORD PTR $T229075[esp-4]
	mov	ecx, DWORD PTR _guidICvEngineUtility4
	mov	edx, DWORD PTR _guidICvEngineUtility4+4
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR _guidICvEngineUtility4+8
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR _guidICvEngineUtility4+12
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	ret	4
?GetInterfaceId@ICvEngineUtility4@@SG?AU_GUID@@XZ ENDP	; ICvEngineUtility4::GetInterfaceId
_TEXT	ENDS
PUBLIC	?getMapPointer@CvGlobals@@QAEPAVCvMap@@XZ	; CvGlobals::getMapPointer
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
;	COMDAT ?getMapPointer@CvGlobals@@QAEPAVCvMap@@XZ
_TEXT	SEGMENT
?getMapPointer@CvGlobals@@QAEPAVCvMap@@XZ PROC		; CvGlobals::getMapPointer, COMDAT
; _this$ = ecx

; 179  : 		return m_map;

	mov	eax, DWORD PTR [ecx+52]

; 180  : 	}

	ret	0
?getMapPointer@CvGlobals@@QAEPAVCvMap@@XZ ENDP		; CvGlobals::getMapPointer
_TEXT	ENDS
PUBLIC	?getGame@CvGlobals@@QAEAAVCvGame@@XZ		; CvGlobals::getGame
; Function compile flags: /Ogtpy
;	COMDAT ?getGame@CvGlobals@@QAEAAVCvGame@@XZ
_TEXT	SEGMENT
?getGame@CvGlobals@@QAEAAVCvGame@@XZ PROC		; CvGlobals::getGame, COMDAT
; _this$ = ecx

; 183  : 		return *m_game;    // inlined for perf reasons, do not use outside of dll

	mov	eax, DWORD PTR [ecx+48]

; 184  : 	}

	ret	0
?getGame@CvGlobals@@QAEAAVCvGame@@XZ ENDP		; CvGlobals::getGame
_TEXT	ENDS
PUBLIC	?getGamePointer@CvGlobals@@QAEPAVCvGame@@XZ	; CvGlobals::getGamePointer
; Function compile flags: /Ogtpy
;	COMDAT ?getGamePointer@CvGlobals@@QAEPAVCvGame@@XZ
_TEXT	SEGMENT
?getGamePointer@CvGlobals@@QAEPAVCvGame@@XZ PROC	; CvGlobals::getGamePointer, COMDAT
; _this$ = ecx

; 187  : 		return m_game;

	mov	eax, DWORD PTR [ecx+48]

; 188  : 	}

	ret	0
?getGamePointer@CvGlobals@@QAEPAVCvGame@@XZ ENDP	; CvGlobals::getGamePointer
_TEXT	ENDS
PUBLIC	?getPlotDirectionX@CvGlobals@@QAEPAHXZ		; CvGlobals::getPlotDirectionX
; Function compile flags: /Ogtpy
;	COMDAT ?getPlotDirectionX@CvGlobals@@QAEPAHXZ
_TEXT	SEGMENT
?getPlotDirectionX@CvGlobals@@QAEPAHXZ PROC		; CvGlobals::getPlotDirectionX, COMDAT
; _this$ = ecx

; 191  : 		return m_aiPlotDirectionX;

	lea	eax, DWORD PTR [ecx+112]

; 192  : 	}

	ret	0
?getPlotDirectionX@CvGlobals@@QAEPAHXZ ENDP		; CvGlobals::getPlotDirectionX
_TEXT	ENDS
PUBLIC	?getPlotDirectionY@CvGlobals@@QAEPAHXZ		; CvGlobals::getPlotDirectionY
; Function compile flags: /Ogtpy
;	COMDAT ?getPlotDirectionY@CvGlobals@@QAEPAHXZ
_TEXT	SEGMENT
?getPlotDirectionY@CvGlobals@@QAEPAHXZ PROC		; CvGlobals::getPlotDirectionY, COMDAT
; _this$ = ecx

; 195  : 		return m_aiPlotDirectionY;

	lea	eax, DWORD PTR [ecx+136]

; 196  : 	}

	ret	0
?getPlotDirectionY@CvGlobals@@QAEPAHXZ ENDP		; CvGlobals::getPlotDirectionY
_TEXT	ENDS
PUBLIC	?getCityPlotX@CvGlobals@@QAEPAHXZ		; CvGlobals::getCityPlotX
; Function compile flags: /Ogtpy
;	COMDAT ?getCityPlotX@CvGlobals@@QAEPAHXZ
_TEXT	SEGMENT
?getCityPlotX@CvGlobals@@QAEPAHXZ PROC			; CvGlobals::getCityPlotX, COMDAT
; _this$ = ecx

; 253  : 		return m_aiCityPlotX;

	lea	eax, DWORD PTR [ecx+160]

; 254  : 	}

	ret	0
?getCityPlotX@CvGlobals@@QAEPAHXZ ENDP			; CvGlobals::getCityPlotX
_TEXT	ENDS
PUBLIC	?getCityPlotY@CvGlobals@@QAEPAHXZ		; CvGlobals::getCityPlotY
; Function compile flags: /Ogtpy
;	COMDAT ?getCityPlotY@CvGlobals@@QAEPAHXZ
_TEXT	SEGMENT
?getCityPlotY@CvGlobals@@QAEPAHXZ PROC			; CvGlobals::getCityPlotY, COMDAT
; _this$ = ecx

; 257  : 		return m_aiCityPlotY;

	lea	eax, DWORD PTR [ecx+308]

; 258  : 	}

	ret	0
?getCityPlotY@CvGlobals@@QAEPAHXZ ENDP			; CvGlobals::getCityPlotY
_TEXT	ENDS
PUBLIC	?getMOVE_DENOMINATOR@CvGlobals@@QAEHXZ		; CvGlobals::getMOVE_DENOMINATOR
; Function compile flags: /Ogtpy
;	COMDAT ?getMOVE_DENOMINATOR@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getMOVE_DENOMINATOR@CvGlobals@@QAEHXZ PROC		; CvGlobals::getMOVE_DENOMINATOR, COMDAT
; _this$ = ecx

; 5312 : 		return m_iMOVE_DENOMINATOR;

	mov	eax, DWORD PTR [ecx+6236]

; 5313 : 	}

	ret	0
?getMOVE_DENOMINATOR@CvGlobals@@QAEHXZ ENDP		; CvGlobals::getMOVE_DENOMINATOR
_TEXT	ENDS
PUBLIC	?getDEFICIT_UNIT_DISBANDING_THRESHOLD@CvGlobals@@QAEHXZ ; CvGlobals::getDEFICIT_UNIT_DISBANDING_THRESHOLD
; Function compile flags: /Ogtpy
;	COMDAT ?getDEFICIT_UNIT_DISBANDING_THRESHOLD@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getDEFICIT_UNIT_DISBANDING_THRESHOLD@CvGlobals@@QAEHXZ PROC ; CvGlobals::getDEFICIT_UNIT_DISBANDING_THRESHOLD, COMDAT
; _this$ = ecx

; 5624 : 		return m_iDEFICIT_UNIT_DISBANDING_THRESHOLD;

	mov	eax, DWORD PTR [ecx+6548]

; 5625 : 	}

	ret	0
?getDEFICIT_UNIT_DISBANDING_THRESHOLD@CvGlobals@@QAEHXZ ENDP ; CvGlobals::getDEFICIT_UNIT_DISBANDING_THRESHOLD
_TEXT	ENDS
PUBLIC	?getMAX_CITY_HIT_POINTS@CvGlobals@@QAEHXZ	; CvGlobals::getMAX_CITY_HIT_POINTS
; Function compile flags: /Ogtpy
;	COMDAT ?getMAX_CITY_HIT_POINTS@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getMAX_CITY_HIT_POINTS@CvGlobals@@QAEHXZ PROC		; CvGlobals::getMAX_CITY_HIT_POINTS, COMDAT
; _this$ = ecx

; 6501 : 		return m_iMAX_CITY_HIT_POINTS;

	mov	eax, DWORD PTR [ecx+7372]

; 6502 : 	}

	ret	0
?getMAX_CITY_HIT_POINTS@CvGlobals@@QAEHXZ ENDP		; CvGlobals::getMAX_CITY_HIT_POINTS
_TEXT	ENDS
PUBLIC	?getHEAVY_RESOURCE_THRESHOLD@CvGlobals@@QAEHXZ	; CvGlobals::getHEAVY_RESOURCE_THRESHOLD
; Function compile flags: /Ogtpy
;	COMDAT ?getHEAVY_RESOURCE_THRESHOLD@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getHEAVY_RESOURCE_THRESHOLD@CvGlobals@@QAEHXZ PROC	; CvGlobals::getHEAVY_RESOURCE_THRESHOLD, COMDAT
; _this$ = ecx

; 6937 : 		return m_iHEAVY_RESOURCE_THRESHOLD;

	mov	eax, DWORD PTR [ecx+7808]

; 6938 : 	}

	ret	0
?getHEAVY_RESOURCE_THRESHOLD@CvGlobals@@QAEHXZ ENDP	; CvGlobals::getHEAVY_RESOURCE_THRESHOLD
_TEXT	ENDS
PUBLIC	?getWALLS_BUILDINGCLASS@CvGlobals@@QBEHXZ	; CvGlobals::getWALLS_BUILDINGCLASS
; Function compile flags: /Ogtpy
;	COMDAT ?getWALLS_BUILDINGCLASS@CvGlobals@@QBEHXZ
_TEXT	SEGMENT
?getWALLS_BUILDINGCLASS@CvGlobals@@QBEHXZ PROC		; CvGlobals::getWALLS_BUILDINGCLASS, COMDAT
; _this$ = ecx

; 6989 : 		return m_iWALLS_BUILDINGCLASS;

	mov	eax, DWORD PTR [ecx+8552]

; 6990 : 	}

	ret	0
?getWALLS_BUILDINGCLASS@CvGlobals@@QBEHXZ ENDP		; CvGlobals::getWALLS_BUILDINGCLASS
_TEXT	ENDS
PUBLIC	?getCITY_ZOOM_LEVEL_1@CvGlobals@@QAEMXZ		; CvGlobals::getCITY_ZOOM_LEVEL_1
; Function compile flags: /Ogtpy
;	COMDAT ?getCITY_ZOOM_LEVEL_1@CvGlobals@@QAEMXZ
_TEXT	SEGMENT
?getCITY_ZOOM_LEVEL_1@CvGlobals@@QAEMXZ PROC		; CvGlobals::getCITY_ZOOM_LEVEL_1, COMDAT
; _this$ = ecx

; 7032 : 		return m_fCITY_ZOOM_LEVEL_1;

	fld	DWORD PTR [ecx+8020]

; 7033 : 	}

	ret	0
?getCITY_ZOOM_LEVEL_1@CvGlobals@@QAEMXZ ENDP		; CvGlobals::getCITY_ZOOM_LEVEL_1
_TEXT	ENDS
PUBLIC	?getCITY_ZOOM_LEVEL_2@CvGlobals@@QAEMXZ		; CvGlobals::getCITY_ZOOM_LEVEL_2
; Function compile flags: /Ogtpy
;	COMDAT ?getCITY_ZOOM_LEVEL_2@CvGlobals@@QAEMXZ
_TEXT	SEGMENT
?getCITY_ZOOM_LEVEL_2@CvGlobals@@QAEMXZ PROC		; CvGlobals::getCITY_ZOOM_LEVEL_2, COMDAT
; _this$ = ecx

; 7036 : 		return m_fCITY_ZOOM_LEVEL_2;

	fld	DWORD PTR [ecx+8024]

; 7037 : 	}

	ret	0
?getCITY_ZOOM_LEVEL_2@CvGlobals@@QAEMXZ ENDP		; CvGlobals::getCITY_ZOOM_LEVEL_2
_TEXT	ENDS
PUBLIC	?getCITY_ZOOM_LEVEL_3@CvGlobals@@QAEMXZ		; CvGlobals::getCITY_ZOOM_LEVEL_3
; Function compile flags: /Ogtpy
;	COMDAT ?getCITY_ZOOM_LEVEL_3@CvGlobals@@QAEMXZ
_TEXT	SEGMENT
?getCITY_ZOOM_LEVEL_3@CvGlobals@@QAEMXZ PROC		; CvGlobals::getCITY_ZOOM_LEVEL_3, COMDAT
; _this$ = ecx

; 7040 : 		return m_fCITY_ZOOM_LEVEL_3;

	fld	DWORD PTR [ecx+8028]

; 7041 : 	}

	ret	0
?getCITY_ZOOM_LEVEL_3@CvGlobals@@QAEMXZ ENDP		; CvGlobals::getCITY_ZOOM_LEVEL_3
_TEXT	ENDS
PUBLIC	?getCITY_ZOOM_OFFSET@CvGlobals@@QAEMXZ		; CvGlobals::getCITY_ZOOM_OFFSET
; Function compile flags: /Ogtpy
;	COMDAT ?getCITY_ZOOM_OFFSET@CvGlobals@@QAEMXZ
_TEXT	SEGMENT
?getCITY_ZOOM_OFFSET@CvGlobals@@QAEMXZ PROC		; CvGlobals::getCITY_ZOOM_OFFSET, COMDAT
; _this$ = ecx

; 7044 : 		return m_fCITY_ZOOM_OFFSET;

	fld	DWORD PTR [ecx+8032]

; 7045 : 	}

	ret	0
?getCITY_ZOOM_OFFSET@CvGlobals@@QAEMXZ ENDP		; CvGlobals::getCITY_ZOOM_OFFSET
_TEXT	ENDS
PUBLIC	?getSHALLOW_WATER_TERRAIN@CvGlobals@@QAEHXZ	; CvGlobals::getSHALLOW_WATER_TERRAIN
; Function compile flags: /Ogtpy
;	COMDAT ?getSHALLOW_WATER_TERRAIN@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getSHALLOW_WATER_TERRAIN@CvGlobals@@QAEHXZ PROC	; CvGlobals::getSHALLOW_WATER_TERRAIN, COMDAT
; _this$ = ecx

; 7179 : 		return m_iSHALLOW_WATER_TERRAIN;

	mov	eax, DWORD PTR [ecx+8396]

; 7180 : 	}

	ret	0
?getSHALLOW_WATER_TERRAIN@CvGlobals@@QAEHXZ ENDP	; CvGlobals::getSHALLOW_WATER_TERRAIN
_TEXT	ENDS
PUBLIC	?getRUINS_IMPROVEMENT@CvGlobals@@QAEHXZ		; CvGlobals::getRUINS_IMPROVEMENT
; Function compile flags: /Ogtpy
;	COMDAT ?getRUINS_IMPROVEMENT@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getRUINS_IMPROVEMENT@CvGlobals@@QAEHXZ PROC		; CvGlobals::getRUINS_IMPROVEMENT, COMDAT
; _this$ = ecx

; 7183 : 		return m_iRUINS_IMPROVEMENT;

	mov	eax, DWORD PTR [ecx+8400]

; 7184 : 	}

	ret	0
?getRUINS_IMPROVEMENT@CvGlobals@@QAEHXZ ENDP		; CvGlobals::getRUINS_IMPROVEMENT
_TEXT	ENDS
PUBLIC	?getSTANDARD_HANDICAP@CvGlobals@@QAEHXZ		; CvGlobals::getSTANDARD_HANDICAP
; Function compile flags: /Ogtpy
;	COMDAT ?getSTANDARD_HANDICAP@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getSTANDARD_HANDICAP@CvGlobals@@QAEHXZ PROC		; CvGlobals::getSTANDARD_HANDICAP, COMDAT
; _this$ = ecx

; 7235 : 		return m_iSTANDARD_HANDICAP;

	mov	eax, DWORD PTR [ecx+8452]

; 7236 : 	}

	ret	0
?getSTANDARD_HANDICAP@CvGlobals@@QAEHXZ ENDP		; CvGlobals::getSTANDARD_HANDICAP
_TEXT	ENDS
PUBLIC	?getSTANDARD_GAMESPEED@CvGlobals@@QAEHXZ	; CvGlobals::getSTANDARD_GAMESPEED
; Function compile flags: /Ogtpy
;	COMDAT ?getSTANDARD_GAMESPEED@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getSTANDARD_GAMESPEED@CvGlobals@@QAEHXZ PROC		; CvGlobals::getSTANDARD_GAMESPEED, COMDAT
; _this$ = ecx

; 7247 : 		return m_iSTANDARD_GAMESPEED;

	mov	eax, DWORD PTR [ecx+8464]

; 7248 : 	}

	ret	0
?getSTANDARD_GAMESPEED@CvGlobals@@QAEHXZ ENDP		; CvGlobals::getSTANDARD_GAMESPEED
_TEXT	ENDS
PUBLIC	?getLAST_EMBARK_ART_ERA@CvGlobals@@QAEHXZ	; CvGlobals::getLAST_EMBARK_ART_ERA
; Function compile flags: /Ogtpy
;	COMDAT ?getLAST_EMBARK_ART_ERA@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getLAST_EMBARK_ART_ERA@CvGlobals@@QAEHXZ PROC		; CvGlobals::getLAST_EMBARK_ART_ERA, COMDAT
; _this$ = ecx

; 7271 : 		return m_iLAST_EMBARK_ART_ERA;

	mov	eax, DWORD PTR [ecx+8488]

; 7272 : 	}

	ret	0
?getLAST_EMBARK_ART_ERA@CvGlobals@@QAEHXZ ENDP		; CvGlobals::getLAST_EMBARK_ART_ERA
_TEXT	ENDS
PUBLIC	?getLAST_UNIT_ART_ERA@CvGlobals@@QAEHXZ		; CvGlobals::getLAST_UNIT_ART_ERA
; Function compile flags: /Ogtpy
;	COMDAT ?getLAST_UNIT_ART_ERA@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getLAST_UNIT_ART_ERA@CvGlobals@@QAEHXZ PROC		; CvGlobals::getLAST_UNIT_ART_ERA, COMDAT
; _this$ = ecx

; 7275 : 		return m_iLAST_UNIT_ART_ERA;

	mov	eax, DWORD PTR [ecx+8492]

; 7276 : 	}

	ret	0
?getLAST_UNIT_ART_ERA@CvGlobals@@QAEHXZ ENDP		; CvGlobals::getLAST_UNIT_ART_ERA
_TEXT	ENDS
PUBLIC	?getLAST_BRIDGE_ART_ERA@CvGlobals@@QAEHXZ	; CvGlobals::getLAST_BRIDGE_ART_ERA
; Function compile flags: /Ogtpy
;	COMDAT ?getLAST_BRIDGE_ART_ERA@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getLAST_BRIDGE_ART_ERA@CvGlobals@@QAEHXZ PROC		; CvGlobals::getLAST_BRIDGE_ART_ERA, COMDAT
; _this$ = ecx

; 7279 : 		return m_iLAST_BRIDGE_ART_ERA;

	mov	eax, DWORD PTR [ecx+8496]

; 7280 : 	}

	ret	0
?getLAST_BRIDGE_ART_ERA@CvGlobals@@QAEHXZ ENDP		; CvGlobals::getLAST_BRIDGE_ART_ERA
_TEXT	ENDS
PUBLIC	?getBARBARIAN_HANDICAP@CvGlobals@@QAEHXZ	; CvGlobals::getBARBARIAN_HANDICAP
; Function compile flags: /Ogtpy
;	COMDAT ?getBARBARIAN_HANDICAP@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getBARBARIAN_HANDICAP@CvGlobals@@QAEHXZ PROC		; CvGlobals::getBARBARIAN_HANDICAP, COMDAT
; _this$ = ecx

; 7287 : 		return m_iBARBARIAN_HANDICAP;

	mov	eax, DWORD PTR [ecx+8504]

; 7288 : 	}

	ret	0
?getBARBARIAN_HANDICAP@CvGlobals@@QAEHXZ ENDP		; CvGlobals::getBARBARIAN_HANDICAP
_TEXT	ENDS
PUBLIC	?getBARBARIAN_CIVILIZATION@CvGlobals@@QAEHXZ	; CvGlobals::getBARBARIAN_CIVILIZATION
; Function compile flags: /Ogtpy
;	COMDAT ?getBARBARIAN_CIVILIZATION@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getBARBARIAN_CIVILIZATION@CvGlobals@@QAEHXZ PROC	; CvGlobals::getBARBARIAN_CIVILIZATION, COMDAT
; _this$ = ecx

; 7291 : 		return m_iBARBARIAN_CIVILIZATION;

	mov	eax, DWORD PTR [ecx+8508]

; 7292 : 	}

	ret	0
?getBARBARIAN_CIVILIZATION@CvGlobals@@QAEHXZ ENDP	; CvGlobals::getBARBARIAN_CIVILIZATION
_TEXT	ENDS
PUBLIC	?getBARBARIAN_LEADER@CvGlobals@@QAEHXZ		; CvGlobals::getBARBARIAN_LEADER
; Function compile flags: /Ogtpy
;	COMDAT ?getBARBARIAN_LEADER@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getBARBARIAN_LEADER@CvGlobals@@QAEHXZ PROC		; CvGlobals::getBARBARIAN_LEADER, COMDAT
; _this$ = ecx

; 7295 : 		return m_iBARBARIAN_LEADER;

	mov	eax, DWORD PTR [ecx+8512]

; 7296 : 	}

	ret	0
?getBARBARIAN_LEADER@CvGlobals@@QAEHXZ ENDP		; CvGlobals::getBARBARIAN_LEADER
_TEXT	ENDS
PUBLIC	?getMINOR_CIV_HANDICAP@CvGlobals@@QAEHXZ	; CvGlobals::getMINOR_CIV_HANDICAP
; Function compile flags: /Ogtpy
;	COMDAT ?getMINOR_CIV_HANDICAP@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getMINOR_CIV_HANDICAP@CvGlobals@@QAEHXZ PROC		; CvGlobals::getMINOR_CIV_HANDICAP, COMDAT
; _this$ = ecx

; 7299 : 		return m_iMINOR_CIV_HANDICAP;

	mov	eax, DWORD PTR [ecx+8516]

; 7300 : 	}

	ret	0
?getMINOR_CIV_HANDICAP@CvGlobals@@QAEHXZ ENDP		; CvGlobals::getMINOR_CIV_HANDICAP
_TEXT	ENDS
PUBLIC	?getMINOR_CIVILIZATION@CvGlobals@@QAEHXZ	; CvGlobals::getMINOR_CIVILIZATION
; Function compile flags: /Ogtpy
;	COMDAT ?getMINOR_CIVILIZATION@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getMINOR_CIVILIZATION@CvGlobals@@QAEHXZ PROC		; CvGlobals::getMINOR_CIVILIZATION, COMDAT
; _this$ = ecx

; 7303 : 		return m_iMINOR_CIVILIZATION;

	mov	eax, DWORD PTR [ecx+8520]

; 7304 : 	}

	ret	0
?getMINOR_CIVILIZATION@CvGlobals@@QAEHXZ ENDP		; CvGlobals::getMINOR_CIVILIZATION
_TEXT	ENDS
PUBLIC	?getAI_HANDICAP@CvGlobals@@QAEHXZ		; CvGlobals::getAI_HANDICAP
; Function compile flags: /Ogtpy
;	COMDAT ?getAI_HANDICAP@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getAI_HANDICAP@CvGlobals@@QAEHXZ PROC			; CvGlobals::getAI_HANDICAP, COMDAT
; _this$ = ecx

; 7351 : 		return m_iAI_HANDICAP;

	mov	eax, DWORD PTR [ecx+8544]

; 7352 : 	}

	ret	0
?getAI_HANDICAP@CvGlobals@@QAEHXZ ENDP			; CvGlobals::getAI_HANDICAP
_TEXT	ENDS
PUBLIC	?setDLLIFace@CvGlobals@@QAEXPAVICvEngineUtility4@@@Z ; CvGlobals::setDLLIFace
; Function compile flags: /Ogtpy
;	COMDAT ?setDLLIFace@CvGlobals@@QAEXPAVICvEngineUtility4@@@Z
_TEXT	SEGMENT
_pDll$ = 8						; size = 4
?setDLLIFace@CvGlobals@@QAEXPAVICvEngineUtility4@@@Z PROC ; CvGlobals::setDLLIFace, COMDAT
; _this$ = ecx

; 7698 : 		m_pDLL = pDll;

	mov	eax, DWORD PTR _pDll$[esp-4]
	mov	DWORD PTR [ecx+8564], eax

; 7699 : 	}

	ret	4
?setDLLIFace@CvGlobals@@QAEXPAVICvEngineUtility4@@@Z ENDP ; CvGlobals::setDLLIFace
_TEXT	ENDS
PUBLIC	?getDLLIFace@CvGlobals@@QAEPAVICvEngineUtility4@@XZ ; CvGlobals::getDLLIFace
; Function compile flags: /Ogtpy
;	COMDAT ?getDLLIFace@CvGlobals@@QAEPAVICvEngineUtility4@@XZ
_TEXT	SEGMENT
?getDLLIFace@CvGlobals@@QAEPAVICvEngineUtility4@@XZ PROC ; CvGlobals::getDLLIFace, COMDAT
; _this$ = ecx

; 7703 : 		return m_pDLL;

	mov	eax, DWORD PTR [ecx+8564]

; 7704 : 	}

	ret	0
?getDLLIFace@CvGlobals@@QAEPAVICvEngineUtility4@@XZ ENDP ; CvGlobals::getDLLIFace
_TEXT	ENDS
PUBLIC	?SetEngineUserInterface@CvGlobals@@QAEXPAVICvUserInterface2@@@Z ; CvGlobals::SetEngineUserInterface
; Function compile flags: /Ogtpy
;	COMDAT ?SetEngineUserInterface@CvGlobals@@QAEXPAVICvUserInterface2@@@Z
_TEXT	SEGMENT
_pUI$ = 8						; size = 4
?SetEngineUserInterface@CvGlobals@@QAEXPAVICvUserInterface2@@@Z PROC ; CvGlobals::SetEngineUserInterface, COMDAT
; _this$ = ecx

; 7708 : 		m_pEngineUI = pUI;

	mov	eax, DWORD PTR _pUI$[esp-4]
	mov	DWORD PTR [ecx+8568], eax

; 7709 : 	}

	ret	4
?SetEngineUserInterface@CvGlobals@@QAEXPAVICvUserInterface2@@@Z ENDP ; CvGlobals::SetEngineUserInterface
_TEXT	ENDS
PUBLIC	?getTeam@CvTeam@@SAAAV1@W4TeamTypes@@@Z		; CvTeam::getTeam
EXTRN	?m_aTeams@CvTeam@@1PAV1@A:DWORD			; CvTeam::m_aTeams
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvteam.h
;	COMDAT ?getTeam@CvTeam@@SAAAV1@W4TeamTypes@@@Z
_TEXT	SEGMENT
_eTeam$ = 8						; size = 4
?getTeam@CvTeam@@SAAAV1@W4TeamTypes@@@Z PROC		; CvTeam::getTeam, COMDAT

; 29   : 		CvAssertMsg(eTeam != NO_TEAM, "eTeam is not assigned a valid value");
; 30   : 		CvAssertMsg(eTeam < MAX_TEAMS, "eTeam is not assigned a valid value");
; 31   : 		return m_aTeams[eTeam];

	mov	eax, DWORD PTR _eTeam$[esp-4]
	imul	eax, 2984				; 00000ba8H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams

; 32   : 	}

	ret	0
?getTeam@CvTeam@@SAAAV1@W4TeamTypes@@@Z ENDP		; CvTeam::getTeam
_TEXT	ENDS
PUBLIC	?GetLastNode@CvAStar@@QAEPAVCvAStarNode@@XZ	; CvAStar::GetLastNode
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvastar.h
;	COMDAT ?GetLastNode@CvAStar@@QAEPAVCvAStarNode@@XZ
_TEXT	SEGMENT
?GetLastNode@CvAStar@@QAEPAVCvAStarNode@@XZ PROC	; CvAStar::GetLastNode, COMDAT
; _this$ = ecx

; 98   : 		return m_pBest;

	mov	eax, DWORD PTR [ecx+96]

; 99   : 	}

	ret	0
?GetLastNode@CvAStar@@QAEPAVCvAStarNode@@XZ ENDP	; CvAStar::GetLastNode
_TEXT	ENDS
PUBLIC	?ForceReset@CvAStar@@QAEXXZ			; CvAStar::ForceReset
; Function compile flags: /Ogtpy
;	COMDAT ?ForceReset@CvAStar@@QAEXXZ
_TEXT	SEGMENT
?ForceReset@CvAStar@@QAEXXZ PROC			; CvAStar::ForceReset, COMDAT
; _this$ = ecx

; 178  : 		m_bForceReset = true;

	mov	BYTE PTR [ecx+78], 1

; 179  : 	}

	ret	0
?ForceReset@CvAStar@@QAEXXZ ENDP			; CvAStar::ForceReset
_TEXT	ENDS
PUBLIC	?SetData@CvAStar@@QAEXPBX@Z			; CvAStar::SetData
; Function compile flags: /Ogtpy
;	COMDAT ?SetData@CvAStar@@QAEXPBX@Z
_TEXT	SEGMENT
_pData$ = 8						; size = 4
?SetData@CvAStar@@QAEXPBX@Z PROC			; CvAStar::SetData, COMDAT
; _this$ = ecx

; 202  : 		if(m_bDataChangeInvalidatesCache && m_pData != pData)

	cmp	BYTE PTR [ecx+80], 0
	mov	eax, DWORD PTR _pData$[esp-4]
	je	SHORT $LN4@SetData
	cmp	DWORD PTR [ecx+44], eax

; 205  : 		m_pData = pData;

	mov	DWORD PTR [ecx+44], eax
	je	SHORT $LN1@SetData

; 203  : #endif
; 204  : 			m_bForceReset = true;

	mov	BYTE PTR [ecx+78], 1

; 206  : #ifdef AUI_ASTAR_TURN_LIMITER
; 207  : 		m_iMaxTurns = iMaxTurns;
; 208  : #endif
; 209  : 	}

	ret	4
$LN4@SetData:

; 205  : 		m_pData = pData;

	mov	DWORD PTR [ecx+44], eax
$LN1@SetData:

; 206  : #ifdef AUI_ASTAR_TURN_LIMITER
; 207  : 		m_iMaxTurns = iMaxTurns;
; 208  : #endif
; 209  : 	}

	ret	4
?SetData@CvAStar@@QAEXPBX@Z ENDP			; CvAStar::SetData
_TEXT	ENDS
PUBLIC	?SetDestValidFunc@CvAStar@@QAEXP6AHHHPBXPAV1@@Z@Z ; CvAStar::SetDestValidFunc
; Function compile flags: /Ogtpy
;	COMDAT ?SetDestValidFunc@CvAStar@@QAEXP6AHHHPBXPAV1@@Z@Z
_TEXT	SEGMENT
_newDestValidFunc$ = 8					; size = 4
?SetDestValidFunc@CvAStar@@QAEXP6AHHHPBXPAV1@@Z@Z PROC	; CvAStar::SetDestValidFunc, COMDAT
; _this$ = ecx

; 266  : 		udDestValid = newDestValidFunc;

	mov	eax, DWORD PTR _newDestValidFunc$[esp-4]
	mov	DWORD PTR [ecx+4], eax

; 267  : 	}

	ret	4
?SetDestValidFunc@CvAStar@@QAEXP6AHHHPBXPAV1@@Z@Z ENDP	; CvAStar::SetDestValidFunc
_TEXT	ENDS
PUBLIC	?SetValidFunc@CvAStar@@QAEXP6AHPAVCvAStarNode@@0HPBXPAV1@@Z@Z ; CvAStar::SetValidFunc
; Function compile flags: /Ogtpy
;	COMDAT ?SetValidFunc@CvAStar@@QAEXP6AHPAVCvAStarNode@@0HPBXPAV1@@Z@Z
_TEXT	SEGMENT
_newValidFunc$ = 8					; size = 4
?SetValidFunc@CvAStar@@QAEXP6AHPAVCvAStarNode@@0HPBXPAV1@@Z@Z PROC ; CvAStar::SetValidFunc, COMDAT
; _this$ = ecx

; 308  : 		udValid = newValidFunc;

	mov	eax, DWORD PTR _newValidFunc$[esp-4]
	mov	DWORD PTR [ecx+16], eax

; 309  : 	}

	ret	4
?SetValidFunc@CvAStar@@QAEXP6AHPAVCvAStarNode@@0HPBXPAV1@@Z@Z ENDP ; CvAStar::SetValidFunc
_TEXT	ENDS
PUBLIC	?SetNotifyChildFunc@CvAStar@@QAEXP6AHPAVCvAStarNode@@0HPBXPAV1@@Z@Z ; CvAStar::SetNotifyChildFunc
; Function compile flags: /Ogtpy
;	COMDAT ?SetNotifyChildFunc@CvAStar@@QAEXP6AHPAVCvAStarNode@@0HPBXPAV1@@Z@Z
_TEXT	SEGMENT
_newNotifyChildFunc$ = 8				; size = 4
?SetNotifyChildFunc@CvAStar@@QAEXP6AHPAVCvAStarNode@@0HPBXPAV1@@Z@Z PROC ; CvAStar::SetNotifyChildFunc, COMDAT
; _this$ = ecx

; 322  : 		udNotifyChild = newNotifyChildFunc;

	mov	eax, DWORD PTR _newNotifyChildFunc$[esp-4]
	mov	DWORD PTR [ecx+20], eax

; 323  : 	}

	ret	4
?SetNotifyChildFunc@CvAStar@@QAEXP6AHPAVCvAStarNode@@0HPBXPAV1@@Z@Z ENDP ; CvAStar::SetNotifyChildFunc
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0length_error@std@@QAE@ABV01@@Z PROC			; std::length_error::length_error, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR ___that$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	??0logic_error@std@@QAE@ABV01@@Z
	mov	DWORD PTR [esi], OFFSET ??_7length_error@std@@6B@
	mov	eax, esi
	pop	esi
	ret	4
??0length_error@std@@QAE@ABV01@@Z ENDP			; std::length_error::length_error
_TEXT	ENDS
PUBLIC	?get@?$FAutoVariable@HVCvUnit@@@@QBEABHXZ	; FAutoVariable<int,CvUnit>::get
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fautovariable.h
;	COMDAT ?get@?$FAutoVariable@HVCvUnit@@@@QBEABHXZ
_TEXT	SEGMENT
?get@?$FAutoVariable@HVCvUnit@@@@QBEABHXZ PROC		; FAutoVariable<int,CvUnit>::get, COMDAT
; _this$ = ecx

; 177  : 	return m_value;

	lea	eax, DWORD PTR [ecx+4]

; 178  : }

	ret	0
?get@?$FAutoVariable@HVCvUnit@@@@QBEABHXZ ENDP		; FAutoVariable<int,CvUnit>::get
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR ___that$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
	mov	eax, esi
	pop	esi
	ret	4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??_7ICvGameContext1@@6B@			; ICvGameContext1::`vftable'
PUBLIC	??0ICvGameContext1@@QAE@XZ			; ICvGameContext1::ICvGameContext1
PUBLIC	??_R4ICvGameContext1@@6B@			; ICvGameContext1::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVICvGameContext1@@@8			; ICvGameContext1 `RTTI Type Descriptor'
PUBLIC	??_R3ICvGameContext1@@8				; ICvGameContext1::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICvGameContext1@@8				; ICvGameContext1::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICvGameContext1@@8		; ICvGameContext1::`RTTI Base Class Descriptor at (0,-1,0,64)'
;	COMDAT ??_R1A@?0A@EA@ICvGameContext1@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICvGameContext1@@8 DD FLAT:??_R0?AVICvGameContext1@@@8 ; ICvGameContext1::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICvGameContext1@@8
rdata$r	ENDS
;	COMDAT ??_R2ICvGameContext1@@8
rdata$r	SEGMENT
??_R2ICvGameContext1@@8 DD FLAT:??_R1A@?0A@EA@ICvGameContext1@@8 ; ICvGameContext1::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ICvUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICvGameContext1@@8
rdata$r	SEGMENT
??_R3ICvGameContext1@@8 DD 00H				; ICvGameContext1::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICvGameContext1@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVICvGameContext1@@@8
_DATA	SEGMENT
??_R0?AVICvGameContext1@@@8 DD FLAT:??_7type_info@@6B@	; ICvGameContext1 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVICvGameContext1@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ICvGameContext1@@6B@
rdata$r	SEGMENT
??_R4ICvGameContext1@@6B@ DD 00H			; ICvGameContext1::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVICvGameContext1@@@8
	DD	FLAT:??_R3ICvGameContext1@@8
rdata$r	ENDS
;	COMDAT ??_7ICvGameContext1@@6B@
CONST	SEGMENT
??_7ICvGameContext1@@6B@ DD FLAT:??_R4ICvGameContext1@@6B@ ; ICvGameContext1::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??0ICvGameContext1@@QAE@XZ
_TEXT	SEGMENT
??0ICvGameContext1@@QAE@XZ PROC				; ICvGameContext1::ICvGameContext1, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	DWORD PTR [eax], OFFSET ??_7ICvGameContext1@@6B@
	ret	0
??0ICvGameContext1@@QAE@XZ ENDP				; ICvGameContext1::ICvGameContext1
_TEXT	ENDS
PUBLIC	?QueryInterface@CvDllGameContext@@UAGPAXU_GUID@@@Z ; CvDllGameContext::QueryInterface
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvdllcontext.cpp
;	COMDAT ?QueryInterface@CvDllGameContext@@UAGPAXU_GUID@@@Z
_TEXT	SEGMENT
$T229221 = -16						; size = 16
$T229219 = -16						; size = 16
$T229217 = -16						; size = 16
$T229215 = -16						; size = 16
_this$ = 8						; size = 4
_guidInterface$ = 12					; size = 16
?QueryInterface@CvDllGameContext@@UAGPAXU_GUID@@@Z PROC	; CvDllGameContext::QueryInterface, COMDAT

; 100  : {

	sub	esp, 16					; 00000010H

; 101  : 	if(	guidInterface == ICvUnknown::GetInterfaceId() ||
; 102  :         guidInterface == ICvGameContext1::GetInterfaceId() ||
; 103  : 		guidInterface == ICvGameContext2::GetInterfaceId() ||
; 104  : 		guidInterface == ICvGameContext3::GetInterfaceId())

	mov	ecx, DWORD PTR _guidICvUnknown+4
	mov	edx, DWORD PTR _guidICvUnknown+8
	mov	eax, DWORD PTR _guidICvUnknown
	mov	DWORD PTR $T229215[esp+20], ecx
	lea	ecx, DWORD PTR $T229215[esp+16]
	mov	DWORD PTR $T229215[esp+24], edx
	mov	DWORD PTR $T229215[esp+16], eax
	mov	eax, DWORD PTR _guidICvUnknown+12
	push	ecx
	lea	edx, DWORD PTR _guidInterface$[esp+16]
	push	edx
	mov	DWORD PTR $T229215[esp+36], eax
	call	_IsEqualGUID
	add	esp, 8
	test	eax, eax
	jne	$LN1@QueryInter
	mov	ecx, DWORD PTR _guidICvGameContext1+4
	mov	edx, DWORD PTR _guidICvGameContext1+8
	mov	eax, DWORD PTR _guidICvGameContext1
	mov	DWORD PTR $T229217[esp+20], ecx
	lea	ecx, DWORD PTR $T229217[esp+16]
	mov	DWORD PTR $T229217[esp+24], edx
	mov	DWORD PTR $T229217[esp+16], eax
	mov	eax, DWORD PTR _guidICvGameContext1+12
	push	ecx
	lea	edx, DWORD PTR _guidInterface$[esp+16]
	push	edx
	mov	DWORD PTR $T229217[esp+36], eax
	call	_IsEqualGUID
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@QueryInter
	mov	ecx, DWORD PTR _guidICvGameContext2+4
	mov	edx, DWORD PTR _guidICvGameContext2+8
	mov	eax, DWORD PTR _guidICvGameContext2
	mov	DWORD PTR $T229219[esp+20], ecx
	lea	ecx, DWORD PTR $T229219[esp+16]
	mov	DWORD PTR $T229219[esp+24], edx
	mov	DWORD PTR $T229219[esp+16], eax
	mov	eax, DWORD PTR _guidICvGameContext2+12
	push	ecx
	lea	edx, DWORD PTR _guidInterface$[esp+16]
	push	edx
	mov	DWORD PTR $T229219[esp+36], eax
	call	_IsEqualGUID
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@QueryInter
	mov	ecx, DWORD PTR _guidICvGameContext3+4
	mov	edx, DWORD PTR _guidICvGameContext3+8
	mov	eax, DWORD PTR _guidICvGameContext3
	mov	DWORD PTR $T229221[esp+20], ecx
	lea	ecx, DWORD PTR $T229221[esp+16]
	mov	DWORD PTR $T229221[esp+24], edx
	mov	DWORD PTR $T229221[esp+16], eax
	mov	eax, DWORD PTR _guidICvGameContext3+12
	push	ecx
	lea	edx, DWORD PTR _guidInterface$[esp+16]
	push	edx
	mov	DWORD PTR $T229221[esp+36], eax
	call	_IsEqualGUID
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@QueryInter

; 107  : 	}
; 108  : 
; 109  : 	return NULL;
; 110  : }

	add	esp, 16					; 00000010H
	ret	20					; 00000014H
$LN1@QueryInter:

; 105  : 	{
; 106  : 		return this;

	mov	eax, DWORD PTR _this$[esp+12]

; 107  : 	}
; 108  : 
; 109  : 	return NULL;
; 110  : }

	add	esp, 16					; 00000010H
	ret	20					; 00000014H
?QueryInterface@CvDllGameContext@@UAGPAXU_GUID@@@Z ENDP	; CvDllGameContext::QueryInterface
_TEXT	ENDS
PUBLIC	?GetNetMessageHandler@CvDllGameContext@@UAGPAVICvNetMessageHandler1@@XZ ; CvDllGameContext::GetNetMessageHandler
; Function compile flags: /Ogtpy
;	COMDAT ?GetNetMessageHandler@CvDllGameContext@@UAGPAVICvNetMessageHandler1@@XZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetNetMessageHandler@CvDllGameContext@@UAGPAVICvNetMessageHandler1@@XZ PROC ; CvDllGameContext::GetNetMessageHandler, COMDAT

; 198  : 	return (ICvNetMessageHandler1*)m_pNetMessageHandler->QueryInterface(ICvNetMessageHandler1::GetInterfaceId());

	mov	eax, DWORD PTR _this$[esp-4]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx]
	push	esi
	mov	esi, DWORD PTR _guidICvNetMessageHandler1
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR _guidICvNetMessageHandler1+4
	mov	DWORD PTR [eax+4], esi
	mov	esi, DWORD PTR _guidICvNetMessageHandler1+8
	mov	DWORD PTR [eax+8], esi
	mov	esi, DWORD PTR _guidICvNetMessageHandler1+12
	mov	DWORD PTR [eax+12], esi
	mov	eax, DWORD PTR [edx]
	push	ecx
	call	eax

; 199  : }

	pop	esi
	ret	4
?GetNetMessageHandler@CvDllGameContext@@UAGPAVICvNetMessageHandler1@@XZ ENDP ; CvDllGameContext::GetNetMessageHandler
_TEXT	ENDS
PUBLIC	?GetGame@CvDllGameContext@@UAGPAVICvGame1@@XZ	; CvDllGameContext::GetGame
EXTRN	??3CvDllGame@@SAXPAX@Z:PROC			; CvDllGame::operator delete
EXTRN	??0CvDllGame@@QAE@PAVCvGame@@@Z:PROC		; CvDllGame::CvDllGame
EXTRN	??2CvDllGame@@SAPAXI@Z:PROC			; CvDllGame::operator new
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
xdata$x	SEGMENT
__unwindtable$?GetGame@CvDllGameContext@@UAGPAVICvGame1@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetGame@CvDllGameContext@@UAGPAVICvGame1@@XZ$0
__ehfuncinfo$?GetGame@CvDllGameContext@@UAGPAVICvGame1@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetGame@CvDllGameContext@@UAGPAVICvGame1@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvdllcontext.cpp
xdata$x	ENDS
;	COMDAT ?GetGame@CvDllGameContext@@UAGPAVICvGame1@@XZ
_TEXT	SEGMENT
$T229264 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
?GetGame@CvDllGameContext@@UAGPAVICvGame1@@XZ PROC	; CvDllGameContext::GetGame, COMDAT

; 212  : {

	push	-1
	push	__ehhandler$?GetGame@CvDllGameContext@@UAGPAVICvGame1@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi

; 213  : 	CvGame* pkGame = GC.getGamePointer();

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48

; 214  : 	if(pkGame)

	test	esi, esi
	je	SHORT $LN1@GetGame

; 215  : 		return new CvDllGame(pkGame);

	push	12					; 0000000cH
	call	??2CvDllGame@@SAPAXI@Z			; CvDllGame::operator new
	add	esp, 4
	mov	DWORD PTR $T229264[esp+20], eax
	mov	DWORD PTR __$EHRec$[esp+28], 0
	test	eax, eax
	je	SHORT $LN1@GetGame
	push	esi
	mov	ecx, eax
	call	??0CvDllGame@@QAE@PAVCvGame@@@Z		; CvDllGame::CvDllGame
	pop	esi

; 216  : 	return NULL;
; 217  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	4
$LN1@GetGame:
	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	xor	eax, eax
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetGame@CvDllGameContext@@UAGPAVICvGame1@@XZ$0:
	mov	eax, DWORD PTR $T229264[ebp]
	push	eax
	call	??3CvDllGame@@SAXPAX@Z			; CvDllGame::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetGame@CvDllGameContext@@UAGPAVICvGame1@@XZ:
	mov	eax, OFFSET __ehfuncinfo$?GetGame@CvDllGameContext@@UAGPAVICvGame1@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetGame@CvDllGameContext@@UAGPAVICvGame1@@XZ ENDP	; CvDllGameContext::GetGame
PUBLIC	?GetGameAsynch@CvDllGameContext@@UAGPAVICvGameAsynch1@@XZ ; CvDllGameContext::GetGameAsynch
EXTRN	??3CvDllGameAsynch@@SAXPAX@Z:PROC		; CvDllGameAsynch::operator delete
EXTRN	??0CvDllGameAsynch@@QAE@PAVCvGame@@@Z:PROC	; CvDllGameAsynch::CvDllGameAsynch
EXTRN	??2CvDllGameAsynch@@SAPAXI@Z:PROC		; CvDllGameAsynch::operator new
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
xdata$x	SEGMENT
__unwindtable$?GetGameAsynch@CvDllGameContext@@UAGPAVICvGameAsynch1@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetGameAsynch@CvDllGameContext@@UAGPAVICvGameAsynch1@@XZ$0
__ehfuncinfo$?GetGameAsynch@CvDllGameContext@@UAGPAVICvGameAsynch1@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetGameAsynch@CvDllGameContext@@UAGPAVICvGameAsynch1@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvdllcontext.cpp
xdata$x	ENDS
;	COMDAT ?GetGameAsynch@CvDllGameContext@@UAGPAVICvGameAsynch1@@XZ
_TEXT	SEGMENT
$T229281 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
?GetGameAsynch@CvDllGameContext@@UAGPAVICvGameAsynch1@@XZ PROC ; CvDllGameContext::GetGameAsynch, COMDAT

; 220  : {

	push	-1
	push	__ehhandler$?GetGameAsynch@CvDllGameContext@@UAGPAVICvGameAsynch1@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi

; 221  : 	CvGame* pkGame = GC.getGamePointer();

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48

; 222  : 	if(pkGame)

	test	esi, esi
	je	SHORT $LN1@GetGameAsy

; 223  : 		return new CvDllGameAsynch(pkGame);

	push	12					; 0000000cH
	call	??2CvDllGameAsynch@@SAPAXI@Z		; CvDllGameAsynch::operator new
	add	esp, 4
	mov	DWORD PTR $T229281[esp+20], eax
	mov	DWORD PTR __$EHRec$[esp+28], 0
	test	eax, eax
	je	SHORT $LN1@GetGameAsy
	push	esi
	mov	ecx, eax
	call	??0CvDllGameAsynch@@QAE@PAVCvGame@@@Z	; CvDllGameAsynch::CvDllGameAsynch
	pop	esi

; 224  : 	return NULL;
; 225  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	4
$LN1@GetGameAsy:
	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	xor	eax, eax
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetGameAsynch@CvDllGameContext@@UAGPAVICvGameAsynch1@@XZ$0:
	mov	eax, DWORD PTR $T229281[ebp]
	push	eax
	call	??3CvDllGameAsynch@@SAXPAX@Z		; CvDllGameAsynch::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetGameAsynch@CvDllGameContext@@UAGPAVICvGameAsynch1@@XZ:
	mov	eax, OFFSET __ehfuncinfo$?GetGameAsynch@CvDllGameContext@@UAGPAVICvGameAsynch1@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetGameAsynch@CvDllGameContext@@UAGPAVICvGameAsynch1@@XZ ENDP ; CvDllGameContext::GetGameAsynch
PUBLIC	?GetMap@CvDllGameContext@@UAGPAVICvMap1@@XZ	; CvDllGameContext::GetMap
EXTRN	??3CvDllMap@@SAXPAX@Z:PROC			; CvDllMap::operator delete
EXTRN	??0CvDllMap@@QAE@PAVCvMap@@@Z:PROC		; CvDllMap::CvDllMap
EXTRN	??2CvDllMap@@SAPAXI@Z:PROC			; CvDllMap::operator new
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
xdata$x	SEGMENT
__unwindtable$?GetMap@CvDllGameContext@@UAGPAVICvMap1@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetMap@CvDllGameContext@@UAGPAVICvMap1@@XZ$0
__ehfuncinfo$?GetMap@CvDllGameContext@@UAGPAVICvMap1@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetMap@CvDllGameContext@@UAGPAVICvMap1@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvdllcontext.cpp
xdata$x	ENDS
;	COMDAT ?GetMap@CvDllGameContext@@UAGPAVICvMap1@@XZ
_TEXT	SEGMENT
$T229298 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
?GetMap@CvDllGameContext@@UAGPAVICvMap1@@XZ PROC	; CvDllGameContext::GetMap, COMDAT

; 228  : {

	push	-1
	push	__ehhandler$?GetMap@CvDllGameContext@@UAGPAVICvMap1@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi

; 229  : 	CvMap* pkMap = GC.getMapPointer();

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52

; 230  : 	if(pkMap)

	test	esi, esi
	je	SHORT $LN1@GetMap

; 231  : 		return new CvDllMap(pkMap);

	push	12					; 0000000cH
	call	??2CvDllMap@@SAPAXI@Z			; CvDllMap::operator new
	add	esp, 4
	mov	DWORD PTR $T229298[esp+20], eax
	mov	DWORD PTR __$EHRec$[esp+28], 0
	test	eax, eax
	je	SHORT $LN1@GetMap
	push	esi
	mov	ecx, eax
	call	??0CvDllMap@@QAE@PAVCvMap@@@Z		; CvDllMap::CvDllMap
	pop	esi

; 232  : 	return NULL;
; 233  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	4
$LN1@GetMap:
	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	xor	eax, eax
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetMap@CvDllGameContext@@UAGPAVICvMap1@@XZ$0:
	mov	eax, DWORD PTR $T229298[ebp]
	push	eax
	call	??3CvDllMap@@SAXPAX@Z			; CvDllMap::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetMap@CvDllGameContext@@UAGPAVICvMap1@@XZ:
	mov	eax, OFFSET __ehfuncinfo$?GetMap@CvDllGameContext@@UAGPAVICvMap1@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetMap@CvDllGameContext@@UAGPAVICvMap1@@XZ ENDP	; CvDllGameContext::GetMap
PUBLIC	?GetTeam@CvDllGameContext@@UAGPAVICvTeam1@@W4TeamTypes@@@Z ; CvDllGameContext::GetTeam
EXTRN	??3CvDllTeam@@SAXPAX@Z:PROC			; CvDllTeam::operator delete
EXTRN	??0CvDllTeam@@QAE@PAVCvTeam@@@Z:PROC		; CvDllTeam::CvDllTeam
EXTRN	??2CvDllTeam@@SAPAXI@Z:PROC			; CvDllTeam::operator new
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvteam.h
xdata$x	SEGMENT
__unwindtable$?GetTeam@CvDllGameContext@@UAGPAVICvTeam1@@W4TeamTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetTeam@CvDllGameContext@@UAGPAVICvTeam1@@W4TeamTypes@@@Z$0
__ehfuncinfo$?GetTeam@CvDllGameContext@@UAGPAVICvTeam1@@W4TeamTypes@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetTeam@CvDllGameContext@@UAGPAVICvTeam1@@W4TeamTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvdllcontext.cpp
xdata$x	ENDS
;	COMDAT ?GetTeam@CvDllGameContext@@UAGPAVICvTeam1@@W4TeamTypes@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
$T229315 = 12						; size = 4
_eTeam$ = 12						; size = 4
?GetTeam@CvDllGameContext@@UAGPAVICvTeam1@@W4TeamTypes@@@Z PROC ; CvDllGameContext::GetTeam, COMDAT

; 236  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?GetTeam@CvDllGameContext@@UAGPAVICvTeam1@@W4TeamTypes@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp

; 237  : 	if(eTeam < MAX_TEAMS)

	mov	eax, DWORD PTR _eTeam$[esp+8]
	cmp	eax, 64					; 00000040H
	push	esi
	jge	SHORT $LN1@GetTeam

; 238  : 	{
; 239  : 		CvTeam& kTeam = CvTeam::getTeam(eTeam);

	imul	eax, 2984				; 00000ba8H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams

; 240  : 		return new CvDllTeam(&kTeam);

	push	12					; 0000000cH
	mov	esi, eax
	call	??2CvDllTeam@@SAPAXI@Z			; CvDllTeam::operator new
	add	esp, 4
	mov	DWORD PTR $T229315[esp+12], eax
	mov	DWORD PTR __$EHRec$[esp+24], 0
	test	eax, eax
	je	SHORT $LN1@GetTeam
	push	esi
	mov	ecx, eax
	call	??0CvDllTeam@@QAE@PAVCvTeam@@@Z		; CvDllTeam::CvDllTeam

; 241  : 	}
; 242  : 
; 243  : 	return NULL;
; 244  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
$LN1@GetTeam:
	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	xor	eax, eax
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetTeam@CvDllGameContext@@UAGPAVICvTeam1@@W4TeamTypes@@@Z$0:
	mov	eax, DWORD PTR $T229315[ebp-4]
	push	eax
	call	??3CvDllTeam@@SAXPAX@Z			; CvDllTeam::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetTeam@CvDllGameContext@@UAGPAVICvTeam1@@W4TeamTypes@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?GetTeam@CvDllGameContext@@UAGPAVICvTeam1@@W4TeamTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetTeam@CvDllGameContext@@UAGPAVICvTeam1@@W4TeamTypes@@@Z ENDP ; CvDllGameContext::GetTeam
PUBLIC	?GetDefineSTRING@CvDllGameContext@@UAG_NPADIPBD_N@Z ; CvDllGameContext::GetDefineSTRING
EXTRN	__imp__strncpy_s:PROC
EXTRN	__imp_?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ:PROC
EXTRN	?getDefineSTRING@CvGlobals@@QAE?AVCvString@@PBD_N@Z:PROC ; CvGlobals::getDefineSTRING
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?GetDefineSTRING@CvDllGameContext@@UAG_NPADIPBD_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetDefineSTRING@CvDllGameContext@@UAG_NPADIPBD_N@Z$0
__ehfuncinfo$?GetDefineSTRING@CvDllGameContext@@UAG_NPADIPBD_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetDefineSTRING@CvDllGameContext@@UAG_NPADIPBD_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvdllcontext.cpp
xdata$x	ENDS
;	COMDAT ?GetDefineSTRING@CvDllGameContext@@UAG_NPADIPBD_N@Z
_TEXT	SEGMENT
_strDefine$223150 = -40					; size = 28
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_szBuffer$ = 12						; size = 4
_lenBuffer$ = 16					; size = 4
_szName$ = 20						; size = 4
_bReportErrors$ = 24					; size = 1
?GetDefineSTRING@CvDllGameContext@@UAG_NPADIPBD_N@Z PROC ; CvDllGameContext::GetDefineSTRING, COMDAT

; 541  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?GetDefineSTRING@CvDllGameContext@@UAG_NPADIPBD_N@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 28					; 0000001cH
	push	esi
	push	edi

; 542  : 	if(szBuffer != NULL && lenBuffer > 0)

	mov	edi, DWORD PTR _szBuffer$[esp+44]
	test	edi, edi
	je	$LN2@GetDefineS
	mov	esi, DWORD PTR _lenBuffer$[esp+44]
	test	esi, esi
	jbe	$LN2@GetDefineS

; 543  : 	{
; 544  : 		CvString strDefine = GC.getDefineSTRING(szName, bReportErrors);

	mov	eax, DWORD PTR _bReportErrors$[esp+44]
	mov	ecx, DWORD PTR _szName$[esp+44]
	push	eax
	push	ecx
	lea	edx, DWORD PTR _strDefine$223150[esp+56]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getDefineSTRING@CvGlobals@@QAE?AVCvString@@PBD_N@Z ; CvGlobals::getDefineSTRING

; 545  : 		if(strDefine.size() < lenBuffer)

	lea	ecx, DWORD PTR _strDefine$223150[esp+48]
	mov	DWORD PTR __$EHRec$[esp+56], 0
	call	DWORD PTR __imp_?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ

; 546  : 		{
; 547  : 			strncpy_s(szBuffer, lenBuffer, strDefine.c_str(), strDefine.size());

	lea	ecx, DWORD PTR _strDefine$223150[esp+48]
	cmp	eax, esi
	jae	SHORT $LN1@GetDefineS
	call	DWORD PTR __imp_?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
	push	eax
	lea	ecx, DWORD PTR _strDefine$223150[esp+52]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	push	edi
	call	DWORD PTR __imp__strncpy_s
	add	esp, 16					; 00000010H

; 548  : 			return true;

	lea	ecx, DWORD PTR _strDefine$223150[esp+48]
	mov	DWORD PTR __$EHRec$[esp+56], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	pop	edi
	mov	al, 1
	pop	esi

; 551  : 
; 552  : 	return false;
; 553  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+40]
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	20					; 00000014H
$LN1@GetDefineS:

; 549  : 		}
; 550  : 	}

	mov	DWORD PTR __$EHRec$[esp+56], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN2@GetDefineS:

; 551  : 
; 552  : 	return false;
; 553  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+48]
	pop	edi
	xor	al, al
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	20					; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetDefineSTRING@CvDllGameContext@@UAG_NPADIPBD_N@Z$0:
	lea	ecx, DWORD PTR _strDefine$223150[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?GetDefineSTRING@CvDllGameContext@@UAG_NPADIPBD_N@Z:
	mov	eax, OFFSET __ehfuncinfo$?GetDefineSTRING@CvDllGameContext@@UAG_NPADIPBD_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetDefineSTRING@CvDllGameContext@@UAG_NPADIPBD_N@Z ENDP ; CvDllGameContext::GetDefineSTRING
PUBLIC	?GetMOVE_DENOMINATOR@CvDllGameContext@@UBGHXZ	; CvDllGameContext::GetMOVE_DENOMINATOR
; Function compile flags: /Ogtpy
;	COMDAT ?GetMOVE_DENOMINATOR@CvDllGameContext@@UBGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetMOVE_DENOMINATOR@CvDllGameContext@@UBGHXZ PROC	; CvDllGameContext::GetMOVE_DENOMINATOR, COMDAT

; 557  : 	return GC.getMOVE_DENOMINATOR();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+6236

; 558  : }

	ret	4
?GetMOVE_DENOMINATOR@CvDllGameContext@@UBGHXZ ENDP	; CvDllGameContext::GetMOVE_DENOMINATOR
_TEXT	ENDS
PUBLIC	?GetMAX_CITY_HIT_POINTS@CvDllGameContext@@UBGHXZ ; CvDllGameContext::GetMAX_CITY_HIT_POINTS
; Function compile flags: /Ogtpy
;	COMDAT ?GetMAX_CITY_HIT_POINTS@CvDllGameContext@@UBGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetMAX_CITY_HIT_POINTS@CvDllGameContext@@UBGHXZ PROC	; CvDllGameContext::GetMAX_CITY_HIT_POINTS, COMDAT

; 562  : 	return GC.getMAX_CITY_HIT_POINTS();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7372

; 563  : }

	ret	4
?GetMAX_CITY_HIT_POINTS@CvDllGameContext@@UBGHXZ ENDP	; CvDllGameContext::GetMAX_CITY_HIT_POINTS
_TEXT	ENDS
PUBLIC	?GetCITY_ZOOM_OFFSET@CvDllGameContext@@UBGMXZ	; CvDllGameContext::GetCITY_ZOOM_OFFSET
; Function compile flags: /Ogtpy
;	COMDAT ?GetCITY_ZOOM_OFFSET@CvDllGameContext@@UBGMXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetCITY_ZOOM_OFFSET@CvDllGameContext@@UBGMXZ PROC	; CvDllGameContext::GetCITY_ZOOM_OFFSET, COMDAT

; 567  : 	return GC.getCITY_ZOOM_OFFSET();

	fld	DWORD PTR ?gGlobals@@3VCvGlobals@@A+8032

; 568  : }

	ret	4
?GetCITY_ZOOM_OFFSET@CvDllGameContext@@UBGMXZ ENDP	; CvDllGameContext::GetCITY_ZOOM_OFFSET
_TEXT	ENDS
PUBLIC	?GetCITY_ZOOM_LEVEL_1@CvDllGameContext@@UBGMXZ	; CvDllGameContext::GetCITY_ZOOM_LEVEL_1
; Function compile flags: /Ogtpy
;	COMDAT ?GetCITY_ZOOM_LEVEL_1@CvDllGameContext@@UBGMXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetCITY_ZOOM_LEVEL_1@CvDllGameContext@@UBGMXZ PROC	; CvDllGameContext::GetCITY_ZOOM_LEVEL_1, COMDAT

; 572  : 	return GC.getCITY_ZOOM_LEVEL_1();

	fld	DWORD PTR ?gGlobals@@3VCvGlobals@@A+8020

; 573  : }

	ret	4
?GetCITY_ZOOM_LEVEL_1@CvDllGameContext@@UBGMXZ ENDP	; CvDllGameContext::GetCITY_ZOOM_LEVEL_1
_TEXT	ENDS
PUBLIC	?GetCITY_ZOOM_LEVEL_2@CvDllGameContext@@UBGMXZ	; CvDllGameContext::GetCITY_ZOOM_LEVEL_2
; Function compile flags: /Ogtpy
;	COMDAT ?GetCITY_ZOOM_LEVEL_2@CvDllGameContext@@UBGMXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetCITY_ZOOM_LEVEL_2@CvDllGameContext@@UBGMXZ PROC	; CvDllGameContext::GetCITY_ZOOM_LEVEL_2, COMDAT

; 577  : 	return GC.getCITY_ZOOM_LEVEL_2();

	fld	DWORD PTR ?gGlobals@@3VCvGlobals@@A+8024

; 578  : }

	ret	4
?GetCITY_ZOOM_LEVEL_2@CvDllGameContext@@UBGMXZ ENDP	; CvDllGameContext::GetCITY_ZOOM_LEVEL_2
_TEXT	ENDS
PUBLIC	?GetCITY_ZOOM_LEVEL_3@CvDllGameContext@@UBGMXZ	; CvDllGameContext::GetCITY_ZOOM_LEVEL_3
; Function compile flags: /Ogtpy
;	COMDAT ?GetCITY_ZOOM_LEVEL_3@CvDllGameContext@@UBGMXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetCITY_ZOOM_LEVEL_3@CvDllGameContext@@UBGMXZ PROC	; CvDllGameContext::GetCITY_ZOOM_LEVEL_3, COMDAT

; 582  : 	return GC.getCITY_ZOOM_LEVEL_3();

	fld	DWORD PTR ?gGlobals@@3VCvGlobals@@A+8028

; 583  : }

	ret	4
?GetCITY_ZOOM_LEVEL_3@CvDllGameContext@@UBGMXZ ENDP	; CvDllGameContext::GetCITY_ZOOM_LEVEL_3
_TEXT	ENDS
PUBLIC	?GetRUINS_IMPROVEMENT@CvDllGameContext@@UBGHXZ	; CvDllGameContext::GetRUINS_IMPROVEMENT
; Function compile flags: /Ogtpy
;	COMDAT ?GetRUINS_IMPROVEMENT@CvDllGameContext@@UBGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetRUINS_IMPROVEMENT@CvDllGameContext@@UBGHXZ PROC	; CvDllGameContext::GetRUINS_IMPROVEMENT, COMDAT

; 587  : 	return GC.getRUINS_IMPROVEMENT();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8400

; 588  : }

	ret	4
?GetRUINS_IMPROVEMENT@CvDllGameContext@@UBGHXZ ENDP	; CvDllGameContext::GetRUINS_IMPROVEMENT
_TEXT	ENDS
PUBLIC	?GetSHALLOW_WATER_TERRAIN@CvDllGameContext@@UBGHXZ ; CvDllGameContext::GetSHALLOW_WATER_TERRAIN
; Function compile flags: /Ogtpy
;	COMDAT ?GetSHALLOW_WATER_TERRAIN@CvDllGameContext@@UBGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetSHALLOW_WATER_TERRAIN@CvDllGameContext@@UBGHXZ PROC	; CvDllGameContext::GetSHALLOW_WATER_TERRAIN, COMDAT

; 592  : 	return GC.getSHALLOW_WATER_TERRAIN();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8396

; 593  : }

	ret	4
?GetSHALLOW_WATER_TERRAIN@CvDllGameContext@@UBGHXZ ENDP	; CvDllGameContext::GetSHALLOW_WATER_TERRAIN
_TEXT	ENDS
PUBLIC	?GetDEFICIT_UNIT_DISBANDING_THRESHOLD@CvDllGameContext@@UBGHXZ ; CvDllGameContext::GetDEFICIT_UNIT_DISBANDING_THRESHOLD
; Function compile flags: /Ogtpy
;	COMDAT ?GetDEFICIT_UNIT_DISBANDING_THRESHOLD@CvDllGameContext@@UBGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetDEFICIT_UNIT_DISBANDING_THRESHOLD@CvDllGameContext@@UBGHXZ PROC ; CvDllGameContext::GetDEFICIT_UNIT_DISBANDING_THRESHOLD, COMDAT

; 597  : 	return GC.getDEFICIT_UNIT_DISBANDING_THRESHOLD();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+6548

; 598  : }

	ret	4
?GetDEFICIT_UNIT_DISBANDING_THRESHOLD@CvDllGameContext@@UBGHXZ ENDP ; CvDllGameContext::GetDEFICIT_UNIT_DISBANDING_THRESHOLD
_TEXT	ENDS
PUBLIC	?GetLAST_UNIT_ART_ERA@CvDllGameContext@@UBGHXZ	; CvDllGameContext::GetLAST_UNIT_ART_ERA
; Function compile flags: /Ogtpy
;	COMDAT ?GetLAST_UNIT_ART_ERA@CvDllGameContext@@UBGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetLAST_UNIT_ART_ERA@CvDllGameContext@@UBGHXZ PROC	; CvDllGameContext::GetLAST_UNIT_ART_ERA, COMDAT

; 602  : 	return GC.getLAST_UNIT_ART_ERA();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8492

; 603  : }

	ret	4
?GetLAST_UNIT_ART_ERA@CvDllGameContext@@UBGHXZ ENDP	; CvDllGameContext::GetLAST_UNIT_ART_ERA
_TEXT	ENDS
PUBLIC	?GetLAST_EMBARK_ART_ERA@CvDllGameContext@@UBGHXZ ; CvDllGameContext::GetLAST_EMBARK_ART_ERA
; Function compile flags: /Ogtpy
;	COMDAT ?GetLAST_EMBARK_ART_ERA@CvDllGameContext@@UBGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetLAST_EMBARK_ART_ERA@CvDllGameContext@@UBGHXZ PROC	; CvDllGameContext::GetLAST_EMBARK_ART_ERA, COMDAT

; 607  : 	return GC.getLAST_EMBARK_ART_ERA();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8488

; 608  : }

	ret	4
?GetLAST_EMBARK_ART_ERA@CvDllGameContext@@UBGHXZ ENDP	; CvDllGameContext::GetLAST_EMBARK_ART_ERA
_TEXT	ENDS
PUBLIC	?GetHEAVY_RESOURCE_THRESHOLD@CvDllGameContext@@UBGHXZ ; CvDllGameContext::GetHEAVY_RESOURCE_THRESHOLD
; Function compile flags: /Ogtpy
;	COMDAT ?GetHEAVY_RESOURCE_THRESHOLD@CvDllGameContext@@UBGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetHEAVY_RESOURCE_THRESHOLD@CvDllGameContext@@UBGHXZ PROC ; CvDllGameContext::GetHEAVY_RESOURCE_THRESHOLD, COMDAT

; 612  : 	return GC.getHEAVY_RESOURCE_THRESHOLD();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7808

; 613  : }

	ret	4
?GetHEAVY_RESOURCE_THRESHOLD@CvDllGameContext@@UBGHXZ ENDP ; CvDllGameContext::GetHEAVY_RESOURCE_THRESHOLD
_TEXT	ENDS
PUBLIC	?GetSTANDARD_HANDICAP@CvDllGameContext@@UBGHXZ	; CvDllGameContext::GetSTANDARD_HANDICAP
; Function compile flags: /Ogtpy
;	COMDAT ?GetSTANDARD_HANDICAP@CvDllGameContext@@UBGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetSTANDARD_HANDICAP@CvDllGameContext@@UBGHXZ PROC	; CvDllGameContext::GetSTANDARD_HANDICAP, COMDAT

; 617  : 	return GC.getSTANDARD_HANDICAP();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8452

; 618  : }

	ret	4
?GetSTANDARD_HANDICAP@CvDllGameContext@@UBGHXZ ENDP	; CvDllGameContext::GetSTANDARD_HANDICAP
_TEXT	ENDS
PUBLIC	?GetSTANDARD_GAMESPEED@CvDllGameContext@@UBGHXZ	; CvDllGameContext::GetSTANDARD_GAMESPEED
; Function compile flags: /Ogtpy
;	COMDAT ?GetSTANDARD_GAMESPEED@CvDllGameContext@@UBGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetSTANDARD_GAMESPEED@CvDllGameContext@@UBGHXZ PROC	; CvDllGameContext::GetSTANDARD_GAMESPEED, COMDAT

; 622  : 	return GC.getSTANDARD_GAMESPEED();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8464

; 623  : }

	ret	4
?GetSTANDARD_GAMESPEED@CvDllGameContext@@UBGHXZ ENDP	; CvDllGameContext::GetSTANDARD_GAMESPEED
_TEXT	ENDS
PUBLIC	?GetLAST_BRIDGE_ART_ERA@CvDllGameContext@@UBGHXZ ; CvDllGameContext::GetLAST_BRIDGE_ART_ERA
; Function compile flags: /Ogtpy
;	COMDAT ?GetLAST_BRIDGE_ART_ERA@CvDllGameContext@@UBGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetLAST_BRIDGE_ART_ERA@CvDllGameContext@@UBGHXZ PROC	; CvDllGameContext::GetLAST_BRIDGE_ART_ERA, COMDAT

; 627  : 	return GC.getLAST_BRIDGE_ART_ERA();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8496

; 628  : }

	ret	4
?GetLAST_BRIDGE_ART_ERA@CvDllGameContext@@UBGHXZ ENDP	; CvDllGameContext::GetLAST_BRIDGE_ART_ERA
_TEXT	ENDS
PUBLIC	?GetBARBARIAN_CIVILIZATION@CvDllGameContext@@UBGHXZ ; CvDllGameContext::GetBARBARIAN_CIVILIZATION
; Function compile flags: /Ogtpy
;	COMDAT ?GetBARBARIAN_CIVILIZATION@CvDllGameContext@@UBGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetBARBARIAN_CIVILIZATION@CvDllGameContext@@UBGHXZ PROC ; CvDllGameContext::GetBARBARIAN_CIVILIZATION, COMDAT

; 632  : 	return GC.getBARBARIAN_CIVILIZATION();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8508

; 633  : }

	ret	4
?GetBARBARIAN_CIVILIZATION@CvDllGameContext@@UBGHXZ ENDP ; CvDllGameContext::GetBARBARIAN_CIVILIZATION
_TEXT	ENDS
PUBLIC	?GetMINOR_CIVILIZATION@CvDllGameContext@@UBGHXZ	; CvDllGameContext::GetMINOR_CIVILIZATION
; Function compile flags: /Ogtpy
;	COMDAT ?GetMINOR_CIVILIZATION@CvDllGameContext@@UBGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetMINOR_CIVILIZATION@CvDllGameContext@@UBGHXZ PROC	; CvDllGameContext::GetMINOR_CIVILIZATION, COMDAT

; 637  : 	return GC.getMINOR_CIVILIZATION();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8520

; 638  : }

	ret	4
?GetMINOR_CIVILIZATION@CvDllGameContext@@UBGHXZ ENDP	; CvDllGameContext::GetMINOR_CIVILIZATION
_TEXT	ENDS
PUBLIC	?GetBARBARIAN_HANDICAP@CvDllGameContext@@UBGHXZ	; CvDllGameContext::GetBARBARIAN_HANDICAP
; Function compile flags: /Ogtpy
;	COMDAT ?GetBARBARIAN_HANDICAP@CvDllGameContext@@UBGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetBARBARIAN_HANDICAP@CvDllGameContext@@UBGHXZ PROC	; CvDllGameContext::GetBARBARIAN_HANDICAP, COMDAT

; 642  : 	return GC.getBARBARIAN_HANDICAP();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8504

; 643  : }

	ret	4
?GetBARBARIAN_HANDICAP@CvDllGameContext@@UBGHXZ ENDP	; CvDllGameContext::GetBARBARIAN_HANDICAP
_TEXT	ENDS
PUBLIC	?GetBARBARIAN_LEADER@CvDllGameContext@@UBGHXZ	; CvDllGameContext::GetBARBARIAN_LEADER
; Function compile flags: /Ogtpy
;	COMDAT ?GetBARBARIAN_LEADER@CvDllGameContext@@UBGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetBARBARIAN_LEADER@CvDllGameContext@@UBGHXZ PROC	; CvDllGameContext::GetBARBARIAN_LEADER, COMDAT

; 647  : 	return GC.getBARBARIAN_LEADER();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8512

; 648  : }

	ret	4
?GetBARBARIAN_LEADER@CvDllGameContext@@UBGHXZ ENDP	; CvDllGameContext::GetBARBARIAN_LEADER
_TEXT	ENDS
PUBLIC	?GetMINOR_CIV_HANDICAP@CvDllGameContext@@UBGHXZ	; CvDllGameContext::GetMINOR_CIV_HANDICAP
; Function compile flags: /Ogtpy
;	COMDAT ?GetMINOR_CIV_HANDICAP@CvDllGameContext@@UBGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetMINOR_CIV_HANDICAP@CvDllGameContext@@UBGHXZ PROC	; CvDllGameContext::GetMINOR_CIV_HANDICAP, COMDAT

; 652  : 	return GC.getMINOR_CIV_HANDICAP();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8516

; 653  : }

	ret	4
?GetMINOR_CIV_HANDICAP@CvDllGameContext@@UBGHXZ ENDP	; CvDllGameContext::GetMINOR_CIV_HANDICAP
_TEXT	ENDS
PUBLIC	?GetWALLS_BUILDINGCLASS@CvDllGameContext@@UBGHXZ ; CvDllGameContext::GetWALLS_BUILDINGCLASS
; Function compile flags: /Ogtpy
;	COMDAT ?GetWALLS_BUILDINGCLASS@CvDllGameContext@@UBGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetWALLS_BUILDINGCLASS@CvDllGameContext@@UBGHXZ PROC	; CvDllGameContext::GetWALLS_BUILDINGCLASS, COMDAT

; 657  : 	return GC.getWALLS_BUILDINGCLASS();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8552

; 658  : }

	ret	4
?GetWALLS_BUILDINGCLASS@CvDllGameContext@@UBGHXZ ENDP	; CvDllGameContext::GetWALLS_BUILDINGCLASS
_TEXT	ENDS
PUBLIC	?GetAI_HANDICAP@CvDllGameContext@@UBGHXZ	; CvDllGameContext::GetAI_HANDICAP
; Function compile flags: /Ogtpy
;	COMDAT ?GetAI_HANDICAP@CvDllGameContext@@UBGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetAI_HANDICAP@CvDllGameContext@@UBGHXZ PROC		; CvDllGameContext::GetAI_HANDICAP, COMDAT

; 662  : 	return GC.getAI_HANDICAP();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8544

; 663  : }

	ret	4
?GetAI_HANDICAP@CvDllGameContext@@UBGHXZ ENDP		; CvDllGameContext::GetAI_HANDICAP
_TEXT	ENDS
PUBLIC	?GetPlotDirectionX@CvDllGameContext@@UAGPAHXZ	; CvDllGameContext::GetPlotDirectionX
; Function compile flags: /Ogtpy
;	COMDAT ?GetPlotDirectionX@CvDllGameContext@@UAGPAHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetPlotDirectionX@CvDllGameContext@@UAGPAHXZ PROC	; CvDllGameContext::GetPlotDirectionX, COMDAT

; 826  : 	return GC.getPlotDirectionX();

	mov	eax, OFFSET ?gGlobals@@3VCvGlobals@@A+112

; 827  : }

	ret	4
?GetPlotDirectionX@CvDllGameContext@@UAGPAHXZ ENDP	; CvDllGameContext::GetPlotDirectionX
_TEXT	ENDS
PUBLIC	?GetPlotDirectionY@CvDllGameContext@@UAGPAHXZ	; CvDllGameContext::GetPlotDirectionY
; Function compile flags: /Ogtpy
;	COMDAT ?GetPlotDirectionY@CvDllGameContext@@UAGPAHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetPlotDirectionY@CvDllGameContext@@UAGPAHXZ PROC	; CvDllGameContext::GetPlotDirectionY, COMDAT

; 831  : 	return GC.getPlotDirectionY();

	mov	eax, OFFSET ?gGlobals@@3VCvGlobals@@A+136

; 832  : }

	ret	4
?GetPlotDirectionY@CvDllGameContext@@UAGPAHXZ ENDP	; CvDllGameContext::GetPlotDirectionY
_TEXT	ENDS
PUBLIC	?GetCityPlotX@CvDllGameContext@@UAGPAHXZ	; CvDllGameContext::GetCityPlotX
; Function compile flags: /Ogtpy
;	COMDAT ?GetCityPlotX@CvDllGameContext@@UAGPAHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetCityPlotX@CvDllGameContext@@UAGPAHXZ PROC		; CvDllGameContext::GetCityPlotX, COMDAT

; 836  : 	return GC.getCityPlotX();

	mov	eax, OFFSET ?gGlobals@@3VCvGlobals@@A+160

; 837  : }

	ret	4
?GetCityPlotX@CvDllGameContext@@UAGPAHXZ ENDP		; CvDllGameContext::GetCityPlotX
_TEXT	ENDS
PUBLIC	?GetCityPlotY@CvDllGameContext@@UAGPAHXZ	; CvDllGameContext::GetCityPlotY
; Function compile flags: /Ogtpy
;	COMDAT ?GetCityPlotY@CvDllGameContext@@UAGPAHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetCityPlotY@CvDllGameContext@@UAGPAHXZ PROC		; CvDllGameContext::GetCityPlotY, COMDAT

; 841  : 	return GC.getCityPlotY();

	mov	eax, OFFSET ?gGlobals@@3VCvGlobals@@A+308

; 842  : }

	ret	4
?GetCityPlotY@CvDllGameContext@@UAGPAHXZ ENDP		; CvDllGameContext::GetCityPlotY
_TEXT	ENDS
PUBLIC	?ResetPathFinder@CvDllGameContext@@UAGXXZ	; CvDllGameContext::ResetPathFinder
EXTRN	?getInterfacePathFinder@CvGlobals@@QAEAAVCvTwoLayerPathFinder@@XZ:PROC ; CvGlobals::getInterfacePathFinder
; Function compile flags: /Ogtpy
;	COMDAT ?ResetPathFinder@CvDllGameContext@@UAGXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?ResetPathFinder@CvDllGameContext@@UAGXXZ PROC		; CvDllGameContext::ResetPathFinder, COMDAT

; 1438 : 	GC.getInterfacePathFinder().ForceReset();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInterfacePathFinder@CvGlobals@@QAEAAVCvTwoLayerPathFinder@@XZ ; CvGlobals::getInterfacePathFinder
	mov	BYTE PTR [eax+78], 1

; 1439 : }

	ret	4
?ResetPathFinder@CvDllGameContext@@UAGXXZ ENDP		; CvDllGameContext::ResetPathFinder
_TEXT	ENDS
PUBLIC	?SetEngineUserInterface@CvDllGameContext@@UAGXPAVICvUserInterface2@@@Z ; CvDllGameContext::SetEngineUserInterface
; Function compile flags: /Ogtpy
;	COMDAT ?SetEngineUserInterface@CvDllGameContext@@UAGXPAVICvUserInterface2@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pUI$ = 12						; size = 4
?SetEngineUserInterface@CvDllGameContext@@UAGXPAVICvUserInterface2@@@Z PROC ; CvDllGameContext::SetEngineUserInterface, COMDAT

; 1443 : 	GC.SetEngineUserInterface(pUI);

	mov	eax, DWORD PTR _pUI$[esp-4]
	mov	DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568, eax

; 1444 : }

	ret	8
?SetEngineUserInterface@CvDllGameContext@@UAGXPAVICvUserInterface2@@@Z ENDP ; CvDllGameContext::SetEngineUserInterface
_TEXT	ENDS
PUBLIC	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin, COMDAT
; _this$ = ecx

; 672  : 		return (const_iterator(_Myfirst));

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 673  : 		}

	ret	4
?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end, COMDAT
; _this$ = ecx

; 682  : 		return (const_iterator(_Mylast));

	mov	ecx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 683  : 		}

	ret	4
?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
_TEXT	ENDS
PUBLIC	??D?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QBEAAU?$pair@IPAVCvRandom@@@1@XZ ; std::_Vector_iterator<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::operator*
; Function compile flags: /Ogtpy
;	COMDAT ??D?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QBEAAU?$pair@IPAVCvRandom@@@1@XZ
_TEXT	SEGMENT
??D?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QBEAAU?$pair@IPAVCvRandom@@@1@XZ PROC ; std::_Vector_iterator<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::operator*, COMDAT
; _this$ = ecx

; 339  : 		return ((reference)**(_Mybase *)this);

	mov	eax, DWORD PTR [ecx]

; 340  : 		}

	ret	0
??D?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QBEAAU?$pair@IPAVCvRandom@@@1@XZ ENDP ; std::_Vector_iterator<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::operator*
_TEXT	ENDS
PUBLIC	??C?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QBEPAU?$pair@IPAVCvRandom@@@1@XZ ; std::_Vector_iterator<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::operator->
; Function compile flags: /Ogtpy
;	COMDAT ??C?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QBEPAU?$pair@IPAVCvRandom@@@1@XZ
_TEXT	SEGMENT
??C?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QBEPAU?$pair@IPAVCvRandom@@@1@XZ PROC ; std::_Vector_iterator<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::operator->, COMDAT
; _this$ = ecx

; 344  : 		return (&**this);

	mov	eax, DWORD PTR [ecx]

; 345  : 		}

	ret	0
??C?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QBEPAU?$pair@IPAVCvRandom@@@1@XZ ENDP ; std::_Vector_iterator<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::operator->
_TEXT	ENDS
PUBLIC	??E?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::operator++
; Function compile flags: /Ogtpy
;	COMDAT ??E?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::operator++, COMDAT
; _this$ = ecx

; 348  : 		{	// preincrement

	mov	eax, ecx

; 349  : 		++(*(_Mybase *)this);

	add	DWORD PTR [eax], 8

; 350  : 		return (*this);
; 351  : 		}

	ret	0
??E?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::operator++
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::operator!=
; Function compile flags: /Ogtpy
;	COMDAT ??9?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::operator!=, COMDAT
; _this$ = ecx

; 216  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	setne	cl
	mov	al, cl

; 217  : 		}

	ret	4
??9?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::operator!=
_TEXT	ENDS
PUBLIC	??D?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QBEAAU?$pair@IPAVCvDllNetInitInfo@@@1@XZ ; std::_Vector_iterator<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::operator*
; Function compile flags: /Ogtpy
;	COMDAT ??D?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QBEAAU?$pair@IPAVCvDllNetInitInfo@@@1@XZ
_TEXT	SEGMENT
??D?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QBEAAU?$pair@IPAVCvDllNetInitInfo@@@1@XZ PROC ; std::_Vector_iterator<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::operator*, COMDAT
; _this$ = ecx

; 339  : 		return ((reference)**(_Mybase *)this);

	mov	eax, DWORD PTR [ecx]

; 340  : 		}

	ret	0
??D?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QBEAAU?$pair@IPAVCvDllNetInitInfo@@@1@XZ ENDP ; std::_Vector_iterator<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::operator*
_TEXT	ENDS
PUBLIC	??C?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QBEPAU?$pair@IPAVCvDllNetInitInfo@@@1@XZ ; std::_Vector_iterator<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::operator->
; Function compile flags: /Ogtpy
;	COMDAT ??C?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QBEPAU?$pair@IPAVCvDllNetInitInfo@@@1@XZ
_TEXT	SEGMENT
??C?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QBEPAU?$pair@IPAVCvDllNetInitInfo@@@1@XZ PROC ; std::_Vector_iterator<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::operator->, COMDAT
; _this$ = ecx

; 344  : 		return (&**this);

	mov	eax, DWORD PTR [ecx]

; 345  : 		}

	ret	0
??C?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QBEPAU?$pair@IPAVCvDllNetInitInfo@@@1@XZ ENDP ; std::_Vector_iterator<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::operator->
_TEXT	ENDS
PUBLIC	??E?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::operator++
; Function compile flags: /Ogtpy
;	COMDAT ??E?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::operator++, COMDAT
; _this$ = ecx

; 348  : 		{	// preincrement

	mov	eax, ecx

; 349  : 		++(*(_Mybase *)this);

	add	DWORD PTR [eax], 8

; 350  : 		return (*this);
; 351  : 		}

	ret	0
??E?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::operator++
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::operator!=
; Function compile flags: /Ogtpy
;	COMDAT ??9?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::operator!=, COMDAT
; _this$ = ecx

; 216  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	setne	cl
	mov	al, cl

; 217  : 		}

	ret	4
??9?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::operator!=
_TEXT	ENDS
PUBLIC	??D?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QBEAAU?$pair@IPAVCvDllNetLoadGameInfo@@@1@XZ ; std::_Vector_iterator<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::operator*
; Function compile flags: /Ogtpy
;	COMDAT ??D?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QBEAAU?$pair@IPAVCvDllNetLoadGameInfo@@@1@XZ
_TEXT	SEGMENT
??D?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QBEAAU?$pair@IPAVCvDllNetLoadGameInfo@@@1@XZ PROC ; std::_Vector_iterator<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::operator*, COMDAT
; _this$ = ecx

; 339  : 		return ((reference)**(_Mybase *)this);

	mov	eax, DWORD PTR [ecx]

; 340  : 		}

	ret	0
??D?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QBEAAU?$pair@IPAVCvDllNetLoadGameInfo@@@1@XZ ENDP ; std::_Vector_iterator<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::operator*
_TEXT	ENDS
PUBLIC	??C?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QBEPAU?$pair@IPAVCvDllNetLoadGameInfo@@@1@XZ ; std::_Vector_iterator<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::operator->
; Function compile flags: /Ogtpy
;	COMDAT ??C?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QBEPAU?$pair@IPAVCvDllNetLoadGameInfo@@@1@XZ
_TEXT	SEGMENT
??C?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QBEPAU?$pair@IPAVCvDllNetLoadGameInfo@@@1@XZ PROC ; std::_Vector_iterator<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::operator->, COMDAT
; _this$ = ecx

; 344  : 		return (&**this);

	mov	eax, DWORD PTR [ecx]

; 345  : 		}

	ret	0
??C?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QBEPAU?$pair@IPAVCvDllNetLoadGameInfo@@@1@XZ ENDP ; std::_Vector_iterator<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::operator->
_TEXT	ENDS
PUBLIC	??E?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::operator++
; Function compile flags: /Ogtpy
;	COMDAT ??E?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::operator++, COMDAT
; _this$ = ecx

; 348  : 		{	// preincrement

	mov	eax, ecx

; 349  : 		++(*(_Mybase *)this);

	add	DWORD PTR [eax], 8

; 350  : 		return (*this);
; 351  : 		}

	ret	0
??E?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::operator++
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::operator!=
; Function compile flags: /Ogtpy
;	COMDAT ??9?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::operator!=, COMDAT
; _this$ = ecx

; 216  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	setne	cl
	mov	al, cl

; 217  : 		}

	ret	4
??9?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::operator!=
_TEXT	ENDS
PUBLIC	?begin@?$vector@KV?$allocator@K@std@@@std@@QBE?AV?$_Vector_const_iterator@KV?$allocator@K@std@@@2@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::begin
; Function compile flags: /Ogtpy
;	COMDAT ?begin@?$vector@KV?$allocator@K@std@@@std@@QBE?AV?$_Vector_const_iterator@KV?$allocator@K@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@KV?$allocator@K@std@@@std@@QBE?AV?$_Vector_const_iterator@KV?$allocator@K@std@@@2@XZ PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::begin, COMDAT
; _this$ = ecx

; 672  : 		return (const_iterator(_Myfirst));

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 673  : 		}

	ret	4
?begin@?$vector@KV?$allocator@K@std@@@std@@QBE?AV?$_Vector_const_iterator@KV?$allocator@K@std@@@2@XZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@KV?$allocator@K@std@@@std@@QBE?AV?$_Vector_const_iterator@KV?$allocator@K@std@@@2@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$vector@KV?$allocator@K@std@@@std@@QBE?AV?$_Vector_const_iterator@KV?$allocator@K@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@KV?$allocator@K@std@@@std@@QBE?AV?$_Vector_const_iterator@KV?$allocator@K@std@@@2@XZ PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::end, COMDAT
; _this$ = ecx

; 682  : 		return (const_iterator(_Mylast));

	mov	ecx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 683  : 		}

	ret	4
?end@?$vector@KV?$allocator@K@std@@@std@@QBE?AV?$_Vector_const_iterator@KV?$allocator@K@std@@@2@XZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::end
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator!=
; Function compile flags: /Ogtpy
;	COMDAT ??9?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator!=, COMDAT
; _this$ = ecx

; 216  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	setne	cl
	mov	al, cl

; 217  : 		}

	ret	4
??9?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator!=
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAE@XZ ; std::_Vector_val<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::~_Vector_val<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Vector_val@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAE@XZ PROC ; std::_Vector_val<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::~_Vector_val<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >, COMDAT
; _this$ = ecx
	ret	0
??1?$_Vector_val@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAE@XZ ENDP ; std::_Vector_val<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::~_Vector_val<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAE@XZ ; std::_Vector_val<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::~_Vector_val<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Vector_val@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAE@XZ PROC ; std::_Vector_val<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::~_Vector_val<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >, COMDAT
; _this$ = ecx
	ret	0
??1?$_Vector_val@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAE@XZ ENDP ; std::_Vector_val<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::~_Vector_val<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAE@XZ ; std::_Vector_val<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::~_Vector_val<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Vector_val@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAE@XZ PROC ; std::_Vector_val<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::~_Vector_val<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >, COMDAT
; _this$ = ecx
	ret	0
??1?$_Vector_val@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAE@XZ ENDP ; std::_Vector_val<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::~_Vector_val<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAE@XZ ; std::_Vector_val<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::~_Vector_val<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Vector_val@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::~_Vector_val<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >, COMDAT
; _this$ = ecx
	ret	0
??1?$_Vector_val@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::~_Vector_val<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAE@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@1@@Z ; std::_Vector_val<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::_Vector_val<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Vector_val@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAE@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAE@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@1@@Z PROC ; std::_Vector_val<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::_Vector_val<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >, COMDAT
; _this$ = ecx

; 425  : 		{	// construct allocator from _Al

	mov	eax, ecx

; 426  : 		}

	ret	4
??0?$_Vector_val@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAE@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@1@@Z ENDP ; std::_Vector_val<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::_Vector_val<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAE@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@1@@Z ; std::_Vector_val<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::_Vector_val<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Vector_val@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAE@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAE@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@1@@Z PROC ; std::_Vector_val<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::_Vector_val<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >, COMDAT
; _this$ = ecx

; 425  : 		{	// construct allocator from _Al

	mov	eax, ecx

; 426  : 		}

	ret	4
??0?$_Vector_val@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAE@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@1@@Z ENDP ; std::_Vector_val<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::_Vector_val<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAE@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@1@@Z ; std::_Vector_val<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::_Vector_val<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Vector_val@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAE@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAE@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@1@@Z PROC ; std::_Vector_val<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::_Vector_val<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >, COMDAT
; _this$ = ecx

; 425  : 		{	// construct allocator from _Al

	mov	eax, ecx

; 426  : 		}

	ret	4
??0?$_Vector_val@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAE@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@1@@Z ENDP ; std::_Vector_val<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::_Vector_val<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >
_TEXT	ENDS
PUBLIC	?max_size@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QBEIXZ ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::max_size
; Function compile flags: /Ogtpy
;	COMDAT ?max_size@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QBEIXZ PROC ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::max_size, COMDAT
; _this$ = ecx

; 731  : 		return (this->_Alval.max_size());

	mov	eax, 357913941				; 15555555H

; 732  : 		}

	ret	0
?max_size@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QBEIXZ ENDP ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::max_size
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAE@V?$allocator@UCvDllPathFinderUpdateListData@@@1@@Z ; std::_Vector_val<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::_Vector_val<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Vector_val@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAE@V?$allocator@UCvDllPathFinderUpdateListData@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAE@V?$allocator@UCvDllPathFinderUpdateListData@@@1@@Z PROC ; std::_Vector_val<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::_Vector_val<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >, COMDAT
; _this$ = ecx

; 425  : 		{	// construct allocator from _Al

	mov	eax, ecx

; 426  : 		}

	ret	4
??0?$_Vector_val@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAE@V?$allocator@UCvDllPathFinderUpdateListData@@@1@@Z ENDP ; std::_Vector_val<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::_Vector_val<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@UCvDllPathFinderUpdateListData@@@std@@QAEPAUCvDllPathFinderUpdateListData@@I@Z ; std::allocator<CvDllPathFinderUpdateListData>::allocate
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@UCvDllPathFinderUpdateListData@@@std@@QAEPAUCvDllPathFinderUpdateListData@@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@UCvDllPathFinderUpdateListData@@@std@@QAEPAUCvDllPathFinderUpdateListData@@I@Z PROC ; std::allocator<CvDllPathFinderUpdateListData>::allocate, COMDAT
; _this$ = ecx

; 145  : 		return (_Allocate(_Count, (pointer)0));

	mov	eax, DWORD PTR __Count$[esp-4]
	push	0
	push	eax
	call	??$_Allocate@UCvDllPathFinderUpdateListData@@@std@@YAPAUCvDllPathFinderUpdateListData@@IPAU1@@Z ; std::_Allocate<CvDllPathFinderUpdateListData>
	add	esp, 8

; 146  : 		}

	ret	4
?allocate@?$allocator@UCvDllPathFinderUpdateListData@@@std@@QAEPAUCvDllPathFinderUpdateListData@@I@Z ENDP ; std::allocator<CvDllPathFinderUpdateListData>::allocate
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAE@PAU?$pair@IPAVCvRandom@@@1@@Z ; std::_Vector_iterator<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::_Vector_iterator<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??0?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAE@PAU?$pair@IPAVCvRandom@@@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAE@PAU?$pair@IPAVCvRandom@@@1@@Z PROC ; std::_Vector_iterator<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::_Vector_iterator<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >, COMDAT
; _this$ = ecx

; 333  : 		{	// construct with pointer _Ptr

	mov	eax, ecx
	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 334  : 		}

	ret	4
??0?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAE@PAU?$pair@IPAVCvRandom@@@1@@Z ENDP ; std::_Vector_iterator<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::_Vector_iterator<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAE@PAU?$pair@IPAVCvDllNetInitInfo@@@1@@Z ; std::_Vector_iterator<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::_Vector_iterator<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAE@PAU?$pair@IPAVCvDllNetInitInfo@@@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAE@PAU?$pair@IPAVCvDllNetInitInfo@@@1@@Z PROC ; std::_Vector_iterator<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::_Vector_iterator<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >, COMDAT
; _this$ = ecx

; 333  : 		{	// construct with pointer _Ptr

	mov	eax, ecx
	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 334  : 		}

	ret	4
??0?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAE@PAU?$pair@IPAVCvDllNetInitInfo@@@1@@Z ENDP ; std::_Vector_iterator<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::_Vector_iterator<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAE@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@1@@Z ; std::_Vector_iterator<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::_Vector_iterator<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAE@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAE@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@1@@Z PROC ; std::_Vector_iterator<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::_Vector_iterator<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >, COMDAT
; _this$ = ecx

; 333  : 		{	// construct with pointer _Ptr

	mov	eax, ecx
	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 334  : 		}

	ret	4
??0?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAE@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@1@@Z ENDP ; std::_Vector_iterator<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::_Vector_iterator<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAE@PAUCvDllPathFinderUpdateListData@@@Z ; std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAE@PAUCvDllPathFinderUpdateListData@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAE@PAUCvDllPathFinderUpdateListData@@@Z PROC ; std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >, COMDAT
; _this$ = ecx

; 333  : 		{	// construct with pointer _Ptr

	mov	eax, ecx
	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 334  : 		}

	ret	4
??0?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAE@PAUCvDllPathFinderUpdateListData@@@Z ENDP ; std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >
_TEXT	ENDS
PUBLIC	?max_size@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::max_size
; Function compile flags: /Ogtpy
;	COMDAT ?max_size@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::max_size, COMDAT
; _this$ = ecx

; 731  : 		return (this->_Alval.max_size());

	mov	eax, 536870911				; 1fffffffH

; 732  : 		}

	ret	0
?max_size@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U?$pair@IPAVCvRandom@@@std@@@std@@QAEPAU?$pair@IPAVCvRandom@@@2@I@Z ; std::allocator<std::pair<unsigned int,CvRandom *> >::allocate
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@U?$pair@IPAVCvRandom@@@std@@@std@@QAEPAU?$pair@IPAVCvRandom@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U?$pair@IPAVCvRandom@@@std@@@std@@QAEPAU?$pair@IPAVCvRandom@@@2@I@Z PROC ; std::allocator<std::pair<unsigned int,CvRandom *> >::allocate, COMDAT
; _this$ = ecx

; 145  : 		return (_Allocate(_Count, (pointer)0));

	mov	eax, DWORD PTR __Count$[esp-4]
	push	0
	push	eax
	call	??$_Allocate@U?$pair@IPAVCvRandom@@@std@@@std@@YAPAU?$pair@IPAVCvRandom@@@0@IPAU10@@Z ; std::_Allocate<std::pair<unsigned int,CvRandom *> >
	add	esp, 8

; 146  : 		}

	ret	4
?allocate@?$allocator@U?$pair@IPAVCvRandom@@@std@@@std@@QAEPAU?$pair@IPAVCvRandom@@@2@I@Z ENDP ; std::allocator<std::pair<unsigned int,CvRandom *> >::allocate
_TEXT	ENDS
PUBLIC	?max_size@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::max_size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?max_size@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::max_size, COMDAT
; _this$ = ecx

; 731  : 		return (this->_Alval.max_size());

	mov	eax, 536870911				; 1fffffffH

; 732  : 		}

	ret	0
?max_size@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@QAEPAU?$pair@IPAVCvDllNetInitInfo@@@2@I@Z ; std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> >::allocate
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@QAEPAU?$pair@IPAVCvDllNetInitInfo@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@QAEPAU?$pair@IPAVCvDllNetInitInfo@@@2@I@Z PROC ; std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> >::allocate, COMDAT
; _this$ = ecx

; 145  : 		return (_Allocate(_Count, (pointer)0));

	mov	eax, DWORD PTR __Count$[esp-4]
	push	0
	push	eax
	call	??$_Allocate@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@0@IPAU10@@Z ; std::_Allocate<std::pair<unsigned int,CvDllNetInitInfo *> >
	add	esp, 8

; 146  : 		}

	ret	4
?allocate@?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@QAEPAU?$pair@IPAVCvDllNetInitInfo@@@2@I@Z ENDP ; std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> >::allocate
_TEXT	ENDS
PUBLIC	?max_size@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::max_size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?max_size@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::max_size, COMDAT
; _this$ = ecx

; 731  : 		return (this->_Alval.max_size());

	mov	eax, 536870911				; 1fffffffH

; 732  : 		}

	ret	0
?max_size@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@QAEPAU?$pair@IPAVCvDllNetLoadGameInfo@@@2@I@Z ; std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> >::allocate
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@QAEPAU?$pair@IPAVCvDllNetLoadGameInfo@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@QAEPAU?$pair@IPAVCvDllNetLoadGameInfo@@@2@I@Z PROC ; std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> >::allocate, COMDAT
; _this$ = ecx

; 145  : 		return (_Allocate(_Count, (pointer)0));

	mov	eax, DWORD PTR __Count$[esp-4]
	push	0
	push	eax
	call	??$_Allocate@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@IPAU10@@Z ; std::_Allocate<std::pair<unsigned int,CvDllNetLoadGameInfo *> >
	add	esp, 8

; 146  : 		}

	ret	4
?allocate@?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@QAEPAU?$pair@IPAVCvDllNetLoadGameInfo@@@2@I@Z ENDP ; std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> >::allocate
_TEXT	ENDS
PUBLIC	??Y?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::operator+=
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??Y?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAEAAV01@H@Z PROC ; std::_Vector_iterator<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::operator+=, COMDAT
; _this$ = ecx

; 374  : 		{	// increment by integer

	mov	eax, ecx

; 375  : 		(*(_Mybase *)this) += _Off;

	mov	ecx, DWORD PTR __Off$[esp-4]
	lea	edx, DWORD PTR [ecx*8]
	add	DWORD PTR [eax], edx

; 376  : 		return (*this);
; 377  : 		}

	ret	4
??Y?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_iterator<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::operator+=
_TEXT	ENDS
PUBLIC	??Y?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::operator+=
; Function compile flags: /Ogtpy
;	COMDAT ??Y?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAEAAV01@H@Z PROC ; std::_Vector_iterator<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::operator+=, COMDAT
; _this$ = ecx

; 374  : 		{	// increment by integer

	mov	eax, ecx

; 375  : 		(*(_Mybase *)this) += _Off;

	mov	ecx, DWORD PTR __Off$[esp-4]
	lea	edx, DWORD PTR [ecx*8]
	add	DWORD PTR [eax], edx

; 376  : 		return (*this);
; 377  : 		}

	ret	4
??Y?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_iterator<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::operator+=
_TEXT	ENDS
PUBLIC	??Y?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::operator+=
; Function compile flags: /Ogtpy
;	COMDAT ??Y?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAEAAV01@H@Z PROC ; std::_Vector_iterator<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::operator+=, COMDAT
; _this$ = ecx

; 374  : 		{	// increment by integer

	mov	eax, ecx

; 375  : 		(*(_Mybase *)this) += _Off;

	mov	ecx, DWORD PTR __Off$[esp-4]
	lea	edx, DWORD PTR [ecx*8]
	add	DWORD PTR [eax], edx

; 376  : 		return (*this);
; 377  : 		}

	ret	4
??Y?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_iterator<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::operator+=
_TEXT	ENDS
PUBLIC	??Y?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::operator+=
; Function compile flags: /Ogtpy
;	COMDAT ??Y?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::operator+=, COMDAT
; _this$ = ecx

; 374  : 		{	// increment by integer

	mov	eax, ecx

; 375  : 		(*(_Mybase *)this) += _Off;

	mov	ecx, DWORD PTR __Off$[esp-4]
	lea	ecx, DWORD PTR [ecx+ecx*2]
	add	ecx, ecx
	add	ecx, ecx
	add	DWORD PTR [eax], ecx

; 376  : 		return (*this);
; 377  : 		}

	ret	4
??Y?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::operator+=
_TEXT	ENDS
PUBLIC	??$QueryInterface@VICvEngineUtility4@@@ICvUnknown@@QAGPAVICvEngineUtility4@@XZ ; ICvUnknown::QueryInterface<ICvEngineUtility4>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvdllinterfaces.h
;	COMDAT ??$QueryInterface@VICvEngineUtility4@@@ICvUnknown@@QAGPAVICvEngineUtility4@@XZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
??$QueryInterface@VICvEngineUtility4@@@ICvUnknown@@QAGPAVICvEngineUtility4@@XZ PROC ; ICvUnknown::QueryInterface<ICvEngineUtility4>, COMDAT

; 322  :  		return static_cast<T*>(QueryInterface(T::GetInterfaceId()));

	mov	ecx, DWORD PTR _this$[esp-4]
	mov	edx, DWORD PTR [ecx]
	push	esi
	mov	esi, DWORD PTR _guidICvEngineUtility4
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR _guidICvEngineUtility4+4
	mov	DWORD PTR [eax+4], esi
	mov	esi, DWORD PTR _guidICvEngineUtility4+8
	mov	DWORD PTR [eax+8], esi
	mov	esi, DWORD PTR _guidICvEngineUtility4+12
	mov	DWORD PTR [eax+12], esi
	mov	eax, DWORD PTR [edx]
	push	ecx
	call	eax

; 323  :  	}

	pop	esi
	ret	4
??$QueryInterface@VICvEngineUtility4@@@ICvUnknown@@QAGPAVICvEngineUtility4@@XZ ENDP ; ICvUnknown::QueryInterface<ICvEngineUtility4>
_TEXT	ENDS
PUBLIC	??$unchecked_copy@PAU?$pair@IPAVCvRandom@@@std@@PAU12@@stdext@@YAPAU?$pair@IPAVCvRandom@@@std@@PAU12@00@Z ; stdext::unchecked_copy<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$unchecked_copy@PAU?$pair@IPAVCvRandom@@@std@@PAU12@@stdext@@YAPAU?$pair@IPAVCvRandom@@@std@@PAU12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$unchecked_copy@PAU?$pair@IPAVCvRandom@@@std@@PAU12@@stdext@@YAPAU?$pair@IPAVCvRandom@@@std@@PAU12@00@Z PROC ; stdext::unchecked_copy<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> *>, COMDAT

; 3605 : 		return (_STD _Copy_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3606 : 			_STD _Iter_random(_First, _Dest), _STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	ecx, edx
	je	SHORT $LN7@unchecked_
	push	esi
$LL9@unchecked_:
	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	add	ecx, 8
	add	eax, 8
	cmp	ecx, edx
	jne	SHORT $LL9@unchecked_
	pop	esi
$LN7@unchecked_:

; 3607 : 	}

	ret	0
??$unchecked_copy@PAU?$pair@IPAVCvRandom@@@std@@PAU12@@stdext@@YAPAU?$pair@IPAVCvRandom@@@std@@PAU12@00@Z ENDP ; stdext::unchecked_copy<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> *>
_TEXT	ENDS
PUBLIC	??$unchecked_copy@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@@stdext@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@00@Z ; stdext::unchecked_copy<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> *>
; Function compile flags: /Ogtpy
;	COMDAT ??$unchecked_copy@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@@stdext@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$unchecked_copy@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@@stdext@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@00@Z PROC ; stdext::unchecked_copy<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> *>, COMDAT

; 3605 : 		return (_STD _Copy_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3606 : 			_STD _Iter_random(_First, _Dest), _STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	ecx, edx
	je	SHORT $LN7@unchecked_@2
	push	esi
$LL9@unchecked_@2:
	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	add	ecx, 8
	add	eax, 8
	cmp	ecx, edx
	jne	SHORT $LL9@unchecked_@2
	pop	esi
$LN7@unchecked_@2:

; 3607 : 	}

	ret	0
??$unchecked_copy@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@@stdext@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@00@Z ENDP ; stdext::unchecked_copy<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> *>
_TEXT	ENDS
PUBLIC	??$unchecked_copy@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@@stdext@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@00@Z ; stdext::unchecked_copy<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> *>
; Function compile flags: /Ogtpy
;	COMDAT ??$unchecked_copy@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@@stdext@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$unchecked_copy@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@@stdext@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@00@Z PROC ; stdext::unchecked_copy<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> *>, COMDAT

; 3605 : 		return (_STD _Copy_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3606 : 			_STD _Iter_random(_First, _Dest), _STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	ecx, edx
	je	SHORT $LN7@unchecked_@3
	push	esi
$LL9@unchecked_@3:
	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	add	ecx, 8
	add	eax, 8
	cmp	ecx, edx
	jne	SHORT $LL9@unchecked_@3
	pop	esi
$LN7@unchecked_@3:

; 3607 : 	}

	ret	0
??$unchecked_copy@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@@stdext@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@00@Z ENDP ; stdext::unchecked_copy<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> *>
_TEXT	ENDS
PUBLIC	??$fill@PAU?$pair@IPAVCvRandom@@@std@@U12@@std@@YAXPAU?$pair@IPAVCvRandom@@@0@0ABU10@@Z ; std::fill<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> >
; Function compile flags: /Ogtpy
;	COMDAT ??$fill@PAU?$pair@IPAVCvRandom@@@std@@U12@@std@@YAXPAU?$pair@IPAVCvRandom@@@0@0ABU10@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$fill@PAU?$pair@IPAVCvRandom@@@std@@U12@@std@@YAXPAU?$pair@IPAVCvRandom@@@0@0ABU10@@Z PROC ; std::fill<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> >, COMDAT

; 3187 : 	_Fill(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Val);

	mov	eax, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	cmp	eax, edx
	je	SHORT $LN3@fill
	mov	ecx, DWORD PTR __Val$[esp-4]
	push	esi
$LL5@fill:
	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	add	eax, 8
	cmp	eax, edx
	jne	SHORT $LL5@fill
	pop	esi
$LN3@fill:

; 3188 : 	}

	ret	0
??$fill@PAU?$pair@IPAVCvRandom@@@std@@U12@@std@@YAXPAU?$pair@IPAVCvRandom@@@0@0ABU10@@Z ENDP ; std::fill<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> >
_TEXT	ENDS
PUBLIC	??$fill@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@U12@@std@@YAXPAU?$pair@IPAVCvDllNetInitInfo@@@0@0ABU10@@Z ; std::fill<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> >
; Function compile flags: /Ogtpy
;	COMDAT ??$fill@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@U12@@std@@YAXPAU?$pair@IPAVCvDllNetInitInfo@@@0@0ABU10@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$fill@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@U12@@std@@YAXPAU?$pair@IPAVCvDllNetInitInfo@@@0@0ABU10@@Z PROC ; std::fill<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> >, COMDAT

; 3187 : 	_Fill(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Val);

	mov	eax, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	cmp	eax, edx
	je	SHORT $LN3@fill@2
	mov	ecx, DWORD PTR __Val$[esp-4]
	push	esi
$LL5@fill@2:
	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	add	eax, 8
	cmp	eax, edx
	jne	SHORT $LL5@fill@2
	pop	esi
$LN3@fill@2:

; 3188 : 	}

	ret	0
??$fill@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@U12@@std@@YAXPAU?$pair@IPAVCvDllNetInitInfo@@@0@0ABU10@@Z ENDP ; std::fill<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> >
_TEXT	ENDS
PUBLIC	??$fill@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@U12@@std@@YAXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@0ABU10@@Z ; std::fill<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> >
; Function compile flags: /Ogtpy
;	COMDAT ??$fill@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@U12@@std@@YAXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@0ABU10@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$fill@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@U12@@std@@YAXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@0ABU10@@Z PROC ; std::fill<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> >, COMDAT

; 3187 : 	_Fill(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Val);

	mov	eax, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	cmp	eax, edx
	je	SHORT $LN3@fill@3
	mov	ecx, DWORD PTR __Val$[esp-4]
	push	esi
$LL5@fill@3:
	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	add	eax, 8
	cmp	eax, edx
	jne	SHORT $LL5@fill@3
	pop	esi
$LN3@fill@3:

; 3188 : 	}

	ret	0
??$fill@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@U12@@std@@YAXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@0ABU10@@Z ENDP ; std::fill<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> >
_TEXT	ENDS
PUBLIC	??$fill@PAUCvDllPathFinderUpdateListData@@U1@@std@@YAXPAUCvDllPathFinderUpdateListData@@0ABU1@@Z ; std::fill<CvDllPathFinderUpdateListData *,CvDllPathFinderUpdateListData>
; Function compile flags: /Ogtpy
;	COMDAT ??$fill@PAUCvDllPathFinderUpdateListData@@U1@@std@@YAXPAUCvDllPathFinderUpdateListData@@0ABU1@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$fill@PAUCvDllPathFinderUpdateListData@@U1@@std@@YAXPAUCvDllPathFinderUpdateListData@@0ABU1@@Z PROC ; std::fill<CvDllPathFinderUpdateListData *,CvDllPathFinderUpdateListData>, COMDAT

; 3187 : 	_Fill(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Val);

	mov	eax, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	cmp	eax, edx
	je	SHORT $LN3@fill@4
	mov	ecx, DWORD PTR __Val$[esp-4]
	push	esi
$LL5@fill@4:
	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	mov	esi, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], esi
	add	eax, 12					; 0000000cH
	cmp	eax, edx
	jne	SHORT $LL5@fill@4
	pop	esi
$LN3@fill@4:

; 3188 : 	}

	ret	0
??$fill@PAUCvDllPathFinderUpdateListData@@U1@@std@@YAXPAUCvDllPathFinderUpdateListData@@0ABU1@@Z ENDP ; std::fill<CvDllPathFinderUpdateListData *,CvDllPathFinderUpdateListData>
_TEXT	ENDS
PUBLIC	??$_Move_backward_opt@PAU?$pair@IPAVCvRandom@@@std@@PAU12@Urandom_access_iterator_tag@2@U_Undefined_move_tag@2@@std@@YAPAU?$pair@IPAVCvRandom@@@0@PAU10@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Move_backward_opt<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> *,std::random_access_iterator_tag,std::_Undefined_move_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Move_backward_opt@PAU?$pair@IPAVCvRandom@@@std@@PAU12@Urandom_access_iterator_tag@2@U_Undefined_move_tag@2@@std@@YAPAU?$pair@IPAVCvRandom@@@0@PAU10@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__First_dest_cat$ = 20					; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Move_backward_opt@PAU?$pair@IPAVCvRandom@@@std@@PAU12@Urandom_access_iterator_tag@2@U_Undefined_move_tag@2@@std@@YAPAU?$pair@IPAVCvRandom@@@0@PAU10@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Move_backward_opt<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> *,std::random_access_iterator_tag,std::_Undefined_move_tag>, COMDAT

; 2753 : 	return _Copy_backward_opt(_First, _Last, _Dest,
; 2754 : 		_First_dest_cat, _Ptr_cat(_First, _Dest), _Range_checked_iterator_tag());

	mov	ecx, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	edx, ecx
	je	SHORT $LN5@Move_backw
	push	esi
$LL6@Move_backw:
	mov	esi, DWORD PTR [ecx-8]
	sub	ecx, 8
	sub	eax, 8
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	cmp	ecx, edx
	jne	SHORT $LL6@Move_backw
	pop	esi
$LN5@Move_backw:

; 2755 : 	}

	ret	0
??$_Move_backward_opt@PAU?$pair@IPAVCvRandom@@@std@@PAU12@Urandom_access_iterator_tag@2@U_Undefined_move_tag@2@@std@@YAPAU?$pair@IPAVCvRandom@@@0@PAU10@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Move_backward_opt<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> *,std::random_access_iterator_tag,std::_Undefined_move_tag>
_TEXT	ENDS
PUBLIC	??$_Move_backward_opt@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@Urandom_access_iterator_tag@2@U_Undefined_move_tag@2@@std@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@0@PAU10@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Move_backward_opt<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> *,std::random_access_iterator_tag,std::_Undefined_move_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Move_backward_opt@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@Urandom_access_iterator_tag@2@U_Undefined_move_tag@2@@std@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@0@PAU10@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__First_dest_cat$ = 20					; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Move_backward_opt@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@Urandom_access_iterator_tag@2@U_Undefined_move_tag@2@@std@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@0@PAU10@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Move_backward_opt<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> *,std::random_access_iterator_tag,std::_Undefined_move_tag>, COMDAT

; 2753 : 	return _Copy_backward_opt(_First, _Last, _Dest,
; 2754 : 		_First_dest_cat, _Ptr_cat(_First, _Dest), _Range_checked_iterator_tag());

	mov	ecx, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	edx, ecx
	je	SHORT $LN5@Move_backw@2
	push	esi
$LL6@Move_backw@2:
	mov	esi, DWORD PTR [ecx-8]
	sub	ecx, 8
	sub	eax, 8
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	cmp	ecx, edx
	jne	SHORT $LL6@Move_backw@2
	pop	esi
$LN5@Move_backw@2:

; 2755 : 	}

	ret	0
??$_Move_backward_opt@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@Urandom_access_iterator_tag@2@U_Undefined_move_tag@2@@std@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@0@PAU10@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Move_backward_opt<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> *,std::random_access_iterator_tag,std::_Undefined_move_tag>
_TEXT	ENDS
PUBLIC	??$_Move_backward_opt@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@Urandom_access_iterator_tag@2@U_Undefined_move_tag@2@@std@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@PAU10@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Move_backward_opt<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::random_access_iterator_tag,std::_Undefined_move_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Move_backward_opt@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@Urandom_access_iterator_tag@2@U_Undefined_move_tag@2@@std@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@PAU10@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__First_dest_cat$ = 20					; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Move_backward_opt@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@Urandom_access_iterator_tag@2@U_Undefined_move_tag@2@@std@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@PAU10@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Move_backward_opt<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::random_access_iterator_tag,std::_Undefined_move_tag>, COMDAT

; 2753 : 	return _Copy_backward_opt(_First, _Last, _Dest,
; 2754 : 		_First_dest_cat, _Ptr_cat(_First, _Dest), _Range_checked_iterator_tag());

	mov	ecx, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	edx, ecx
	je	SHORT $LN5@Move_backw@3
	push	esi
$LL6@Move_backw@3:
	mov	esi, DWORD PTR [ecx-8]
	sub	ecx, 8
	sub	eax, 8
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	cmp	ecx, edx
	jne	SHORT $LL6@Move_backw@3
	pop	esi
$LN5@Move_backw@3:

; 2755 : 	}

	ret	0
??$_Move_backward_opt@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@Urandom_access_iterator_tag@2@U_Undefined_move_tag@2@@std@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@PAU10@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Move_backward_opt<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::random_access_iterator_tag,std::_Undefined_move_tag>
_TEXT	ENDS
PUBLIC	??$_Move_backward_opt@PAUCvDllPathFinderUpdateListData@@PAU1@Urandom_access_iterator_tag@std@@U_Undefined_move_tag@3@@std@@YAPAUCvDllPathFinderUpdateListData@@PAU1@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Move_backward_opt<CvDllPathFinderUpdateListData *,CvDllPathFinderUpdateListData *,std::random_access_iterator_tag,std::_Undefined_move_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Move_backward_opt@PAUCvDllPathFinderUpdateListData@@PAU1@Urandom_access_iterator_tag@std@@U_Undefined_move_tag@3@@std@@YAPAUCvDllPathFinderUpdateListData@@PAU1@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__First_dest_cat$ = 20					; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Move_backward_opt@PAUCvDllPathFinderUpdateListData@@PAU1@Urandom_access_iterator_tag@std@@U_Undefined_move_tag@3@@std@@YAPAUCvDllPathFinderUpdateListData@@PAU1@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Move_backward_opt<CvDllPathFinderUpdateListData *,CvDllPathFinderUpdateListData *,std::random_access_iterator_tag,std::_Undefined_move_tag>, COMDAT

; 2753 : 	return _Copy_backward_opt(_First, _Last, _Dest,
; 2754 : 		_First_dest_cat, _Ptr_cat(_First, _Dest), _Range_checked_iterator_tag());

	mov	ecx, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	edx, ecx
	je	SHORT $LN5@Move_backw@4
	push	esi
$LL6@Move_backw@4:
	mov	esi, DWORD PTR [ecx-12]
	sub	ecx, 12					; 0000000cH
	sub	eax, 12					; 0000000cH
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	mov	esi, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], esi
	cmp	ecx, edx
	jne	SHORT $LL6@Move_backw@4
	pop	esi
$LN5@Move_backw@4:

; 2755 : 	}

	ret	0
??$_Move_backward_opt@PAUCvDllPathFinderUpdateListData@@PAU1@Urandom_access_iterator_tag@std@@U_Undefined_move_tag@3@@std@@YAPAUCvDllPathFinderUpdateListData@@PAU1@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Move_backward_opt<CvDllPathFinderUpdateListData *,CvDllPathFinderUpdateListData *,std::random_access_iterator_tag,std::_Undefined_move_tag>
_TEXT	ENDS
PUBLIC	?construct@?$allocator@U?$pair@IPAVCvRandom@@@std@@@std@@QAEXPAU?$pair@IPAVCvRandom@@@2@ABU32@@Z ; std::allocator<std::pair<unsigned int,CvRandom *> >::construct
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?construct@?$allocator@U?$pair@IPAVCvRandom@@@std@@@std@@QAEXPAU?$pair@IPAVCvRandom@@@2@ABU32@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@U?$pair@IPAVCvRandom@@@std@@@std@@QAEXPAU?$pair@IPAVCvRandom@@@2@ABU32@@Z PROC ; std::allocator<std::pair<unsigned int,CvRandom *> >::construct, COMDAT
; _this$ = ecx

; 155  : 		_Construct(_Ptr, _Val);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	test	eax, eax
	je	SHORT $LN5@construct
	mov	ecx, DWORD PTR __Val$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx
$LN5@construct:

; 156  : 		}

	ret	8
?construct@?$allocator@U?$pair@IPAVCvRandom@@@std@@@std@@QAEXPAU?$pair@IPAVCvRandom@@@2@ABU32@@Z ENDP ; std::allocator<std::pair<unsigned int,CvRandom *> >::construct
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U?$pair@IPAVCvRandom@@@std@@@std@@QAEXPAU?$pair@IPAVCvRandom@@@2@@Z ; std::allocator<std::pair<unsigned int,CvRandom *> >::destroy
; Function compile flags: /Ogtpy
;	COMDAT ?destroy@?$allocator@U?$pair@IPAVCvRandom@@@std@@@std@@QAEXPAU?$pair@IPAVCvRandom@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U?$pair@IPAVCvRandom@@@std@@@std@@QAEXPAU?$pair@IPAVCvRandom@@@2@@Z PROC ; std::allocator<std::pair<unsigned int,CvRandom *> >::destroy, COMDAT
; _this$ = ecx

; 160  : 		_Destroy(_Ptr);
; 161  : 		}

	ret	4
?destroy@?$allocator@U?$pair@IPAVCvRandom@@@std@@@std@@QAEXPAU?$pair@IPAVCvRandom@@@2@@Z ENDP ; std::allocator<std::pair<unsigned int,CvRandom *> >::destroy
_TEXT	ENDS
PUBLIC	?construct@?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@QAEXPAU?$pair@IPAVCvDllNetInitInfo@@@2@ABU32@@Z ; std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> >::construct
; Function compile flags: /Ogtpy
;	COMDAT ?construct@?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@QAEXPAU?$pair@IPAVCvDllNetInitInfo@@@2@ABU32@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@QAEXPAU?$pair@IPAVCvDllNetInitInfo@@@2@ABU32@@Z PROC ; std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> >::construct, COMDAT
; _this$ = ecx

; 155  : 		_Construct(_Ptr, _Val);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	test	eax, eax
	je	SHORT $LN5@construct@2
	mov	ecx, DWORD PTR __Val$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx
$LN5@construct@2:

; 156  : 		}

	ret	8
?construct@?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@QAEXPAU?$pair@IPAVCvDllNetInitInfo@@@2@ABU32@@Z ENDP ; std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> >::construct
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@QAEXPAU?$pair@IPAVCvDllNetInitInfo@@@2@@Z ; std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> >::destroy
; Function compile flags: /Ogtpy
;	COMDAT ?destroy@?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@QAEXPAU?$pair@IPAVCvDllNetInitInfo@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@QAEXPAU?$pair@IPAVCvDllNetInitInfo@@@2@@Z PROC ; std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> >::destroy, COMDAT
; _this$ = ecx

; 160  : 		_Destroy(_Ptr);
; 161  : 		}

	ret	4
?destroy@?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@QAEXPAU?$pair@IPAVCvDllNetInitInfo@@@2@@Z ENDP ; std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> >::destroy
_TEXT	ENDS
PUBLIC	?construct@?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@QAEXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@2@ABU32@@Z ; std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> >::construct
; Function compile flags: /Ogtpy
;	COMDAT ?construct@?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@QAEXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@2@ABU32@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@QAEXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@2@ABU32@@Z PROC ; std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> >::construct, COMDAT
; _this$ = ecx

; 155  : 		_Construct(_Ptr, _Val);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	test	eax, eax
	je	SHORT $LN5@construct@3
	mov	ecx, DWORD PTR __Val$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx
$LN5@construct@3:

; 156  : 		}

	ret	8
?construct@?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@QAEXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@2@ABU32@@Z ENDP ; std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> >::construct
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@QAEXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@2@@Z ; std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> >::destroy
; Function compile flags: /Ogtpy
;	COMDAT ?destroy@?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@QAEXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@QAEXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@2@@Z PROC ; std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> >::destroy, COMDAT
; _this$ = ecx

; 160  : 		_Destroy(_Ptr);
; 161  : 		}

	ret	4
?destroy@?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@QAEXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@2@@Z ENDP ; std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> >::destroy
_TEXT	ENDS
PUBLIC	?construct@?$allocator@UCvDllPathFinderUpdateListData@@@std@@QAEXPAUCvDllPathFinderUpdateListData@@ABU3@@Z ; std::allocator<CvDllPathFinderUpdateListData>::construct
; Function compile flags: /Ogtpy
;	COMDAT ?construct@?$allocator@UCvDllPathFinderUpdateListData@@@std@@QAEXPAUCvDllPathFinderUpdateListData@@ABU3@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@UCvDllPathFinderUpdateListData@@@std@@QAEXPAUCvDllPathFinderUpdateListData@@ABU3@@Z PROC ; std::allocator<CvDllPathFinderUpdateListData>::construct, COMDAT
; _this$ = ecx

; 155  : 		_Construct(_Ptr, _Val);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	test	eax, eax
	je	SHORT $LN5@construct@4
	mov	ecx, DWORD PTR __Val$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], ecx
$LN5@construct@4:

; 156  : 		}

	ret	8
?construct@?$allocator@UCvDllPathFinderUpdateListData@@@std@@QAEXPAUCvDllPathFinderUpdateListData@@ABU3@@Z ENDP ; std::allocator<CvDllPathFinderUpdateListData>::construct
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@UCvDllPathFinderUpdateListData@@@std@@QAEXPAUCvDllPathFinderUpdateListData@@@Z ; std::allocator<CvDllPathFinderUpdateListData>::destroy
; Function compile flags: /Ogtpy
;	COMDAT ?destroy@?$allocator@UCvDllPathFinderUpdateListData@@@std@@QAEXPAUCvDllPathFinderUpdateListData@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@UCvDllPathFinderUpdateListData@@@std@@QAEXPAUCvDllPathFinderUpdateListData@@@Z PROC ; std::allocator<CvDllPathFinderUpdateListData>::destroy, COMDAT
; _this$ = ecx

; 160  : 		_Destroy(_Ptr);
; 161  : 		}

	ret	4
?destroy@?$allocator@UCvDllPathFinderUpdateListData@@@std@@QAEXPAUCvDllPathFinderUpdateListData@@@Z ENDP ; std::allocator<CvDllPathFinderUpdateListData>::destroy
_TEXT	ENDS
PUBLIC	??E?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::operator++
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??E?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::operator++, COMDAT
; _this$ = ecx

; 348  : 		{	// preincrement

	mov	eax, ecx

; 349  : 		++(*(_Mybase *)this);

	add	DWORD PTR [eax], 12			; 0000000cH

; 350  : 		return (*this);
; 351  : 		}

	ret	0
??E?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::operator++
_TEXT	ENDS
PUBLIC	??F?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::operator--
; Function compile flags: /Ogtpy
;	COMDAT ??F?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::operator--, COMDAT
; _this$ = ecx

; 361  : 		{	// predecrement

	mov	eax, ecx

; 362  : 		--(*(_Mybase *)this);

	add	DWORD PTR [eax], -12			; fffffff4H

; 363  : 		return (*this);
; 364  : 		}

	ret	0
??F?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::operator--
_TEXT	ENDS
PUBLIC	??D?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QBEAAUCvDllPathFinderUpdateListData@@XZ ; std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::operator*
; Function compile flags: /Ogtpy
;	COMDAT ??D?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QBEAAUCvDllPathFinderUpdateListData@@XZ
_TEXT	SEGMENT
??D?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QBEAAUCvDllPathFinderUpdateListData@@XZ PROC ; std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::operator*, COMDAT
; _this$ = ecx

; 339  : 		return ((reference)**(_Mybase *)this);

	mov	eax, DWORD PTR [ecx]

; 340  : 		}

	ret	0
??D?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QBEAAUCvDllPathFinderUpdateListData@@XZ ENDP ; std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::operator*
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@PAU?$pair@IPAVCvRandom@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@YAPAU?$pair@IPAVCvRandom@@@0@PAU10@00AAV?$allocator@U?$pair@IPAVCvRandom@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> *,std::allocator<std::pair<unsigned int,CvRandom *> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$_Uninit_copy@PAU?$pair@IPAVCvRandom@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@YAPAU?$pair@IPAVCvRandom@@@0@PAU10@00AAV?$allocator@U?$pair@IPAVCvRandom@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_copy@PAU?$pair@IPAVCvRandom@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@YAPAU?$pair@IPAVCvRandom@@@0@PAU10@00AAV?$allocator@U?$pair@IPAVCvRandom@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_copy<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> *,std::allocator<std::pair<unsigned int,CvRandom *> > >, COMDAT

; 125  : 	_DEBUG_RANGE(_First, _Last);
; 126  : 	_DEBUG_POINTER(_Dest);
; 127  : 	_FwdIt _Next = _Dest;
; 128  : 
; 129  : 	_TRY_BEGIN
; 130  : 	for (; _First != _Last; ++_Dest, ++_First)

	mov	ecx, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	ecx, edx
	je	SHORT $LN4@Uninit_cop
	push	esi
$LL6@Uninit_cop:

; 131  : 		_Al.construct(_Dest, *_First);

	test	eax, eax
	je	SHORT $LN5@Uninit_cop
	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
$LN5@Uninit_cop:
	add	ecx, 8
	add	eax, 8
	cmp	ecx, edx
	jne	SHORT $LL6@Uninit_cop
	pop	esi
$LN4@Uninit_cop:

; 132  : 	_CATCH_ALL
; 133  : 	for (; _Next != _Dest; ++_Next)
; 134  : 		_Al.destroy(_Next);
; 135  : 	_RERAISE;
; 136  : 	_CATCH_END
; 137  : 	return (_Dest);
; 138  : 	}

	ret	0
??$_Uninit_copy@PAU?$pair@IPAVCvRandom@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@YAPAU?$pair@IPAVCvRandom@@@0@PAU10@00AAV?$allocator@U?$pair@IPAVCvRandom@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> *,std::allocator<std::pair<unsigned int,CvRandom *> > >
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@0@PAU10@00AAV?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> *,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Uninit_copy@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@0@PAU10@00AAV?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_copy@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@0@PAU10@00AAV?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_copy<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> *,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >, COMDAT

; 125  : 	_DEBUG_RANGE(_First, _Last);
; 126  : 	_DEBUG_POINTER(_Dest);
; 127  : 	_FwdIt _Next = _Dest;
; 128  : 
; 129  : 	_TRY_BEGIN
; 130  : 	for (; _First != _Last; ++_Dest, ++_First)

	mov	ecx, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	ecx, edx
	je	SHORT $LN4@Uninit_cop@2
	push	esi
$LL6@Uninit_cop@2:

; 131  : 		_Al.construct(_Dest, *_First);

	test	eax, eax
	je	SHORT $LN5@Uninit_cop@2
	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
$LN5@Uninit_cop@2:
	add	ecx, 8
	add	eax, 8
	cmp	ecx, edx
	jne	SHORT $LL6@Uninit_cop@2
	pop	esi
$LN4@Uninit_cop@2:

; 132  : 	_CATCH_ALL
; 133  : 	for (; _Next != _Dest; ++_Next)
; 134  : 		_Al.destroy(_Next);
; 135  : 	_RERAISE;
; 136  : 	_CATCH_END
; 137  : 	return (_Dest);
; 138  : 	}

	ret	0
??$_Uninit_copy@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@0@PAU10@00AAV?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> *,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@PAU10@00AAV?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Uninit_copy@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@PAU10@00AAV?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_copy@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@PAU10@00AAV?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_copy<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >, COMDAT

; 125  : 	_DEBUG_RANGE(_First, _Last);
; 126  : 	_DEBUG_POINTER(_Dest);
; 127  : 	_FwdIt _Next = _Dest;
; 128  : 
; 129  : 	_TRY_BEGIN
; 130  : 	for (; _First != _Last; ++_Dest, ++_First)

	mov	ecx, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	ecx, edx
	je	SHORT $LN4@Uninit_cop@3
	push	esi
$LL6@Uninit_cop@3:

; 131  : 		_Al.construct(_Dest, *_First);

	test	eax, eax
	je	SHORT $LN5@Uninit_cop@3
	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
$LN5@Uninit_cop@3:
	add	ecx, 8
	add	eax, 8
	cmp	ecx, edx
	jne	SHORT $LL6@Uninit_cop@3
	pop	esi
$LN4@Uninit_cop@3:

; 132  : 	_CATCH_ALL
; 133  : 	for (; _Next != _Dest; ++_Next)
; 134  : 		_Al.destroy(_Next);
; 135  : 	_RERAISE;
; 136  : 	_CATCH_END
; 137  : 	return (_Dest);
; 138  : 	}

	ret	0
??$_Uninit_copy@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@PAU10@00AAV?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@PAUCvDllPathFinderUpdateListData@@PAU1@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@YAPAUCvDllPathFinderUpdateListData@@PAU1@00AAV?$allocator@UCvDllPathFinderUpdateListData@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<CvDllPathFinderUpdateListData *,CvDllPathFinderUpdateListData *,std::allocator<CvDllPathFinderUpdateListData> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Uninit_copy@PAUCvDllPathFinderUpdateListData@@PAU1@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@YAPAUCvDllPathFinderUpdateListData@@PAU1@00AAV?$allocator@UCvDllPathFinderUpdateListData@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_copy@PAUCvDllPathFinderUpdateListData@@PAU1@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@YAPAUCvDllPathFinderUpdateListData@@PAU1@00AAV?$allocator@UCvDllPathFinderUpdateListData@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_copy<CvDllPathFinderUpdateListData *,CvDllPathFinderUpdateListData *,std::allocator<CvDllPathFinderUpdateListData> >, COMDAT

; 125  : 	_DEBUG_RANGE(_First, _Last);
; 126  : 	_DEBUG_POINTER(_Dest);
; 127  : 	_FwdIt _Next = _Dest;
; 128  : 
; 129  : 	_TRY_BEGIN
; 130  : 	for (; _First != _Last; ++_Dest, ++_First)

	mov	ecx, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	ecx, edx
	je	SHORT $LN4@Uninit_cop@4
	push	esi
$LL6@Uninit_cop@4:

; 131  : 		_Al.construct(_Dest, *_First);

	test	eax, eax
	je	SHORT $LN5@Uninit_cop@4
	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	mov	esi, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], esi
$LN5@Uninit_cop@4:
	add	ecx, 12					; 0000000cH
	add	eax, 12					; 0000000cH
	cmp	ecx, edx
	jne	SHORT $LL6@Uninit_cop@4
	pop	esi
$LN4@Uninit_cop@4:

; 132  : 	_CATCH_ALL
; 133  : 	for (; _Next != _Dest; ++_Next)
; 134  : 		_Al.destroy(_Next);
; 135  : 	_RERAISE;
; 136  : 	_CATCH_END
; 137  : 	return (_Dest);
; 138  : 	}

	ret	0
??$_Uninit_copy@PAUCvDllPathFinderUpdateListData@@PAU1@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@YAPAUCvDllPathFinderUpdateListData@@PAU1@00AAV?$allocator@UCvDllPathFinderUpdateListData@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<CvDllPathFinderUpdateListData *,CvDllPathFinderUpdateListData *,std::allocator<CvDllPathFinderUpdateListData> >
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::operator!=
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??9?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::operator!=, COMDAT
; _this$ = ecx

; 216  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	setne	cl
	mov	al, cl

; 217  : 		}

	ret	4
??9?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::operator!=
_TEXT	ENDS
PUBLIC	?getX@CvUnit@@QBEHXZ				; CvUnit::getX
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvunit.h
;	COMDAT ?getX@CvUnit@@QBEHXZ
_TEXT	SEGMENT
?getX@CvUnit@@QBEHXZ PROC				; CvUnit::getX, COMDAT
; _this$ = ecx

; 673  : 		return m_iX.get();

	mov	eax, DWORD PTR [ecx+76]

; 674  : 	}

	ret	0
?getX@CvUnit@@QBEHXZ ENDP				; CvUnit::getX
_TEXT	ENDS
PUBLIC	?getY@CvUnit@@QBEHXZ				; CvUnit::getY
; Function compile flags: /Ogtpy
;	COMDAT ?getY@CvUnit@@QBEHXZ
_TEXT	SEGMENT
?getY@CvUnit@@QBEHXZ PROC				; CvUnit::getY, COMDAT
; _this$ = ecx

; 678  : 		return m_iY.get();

	mov	eax, DWORD PTR [ecx+88]

; 679  : 	}

	ret	0
?getY@CvUnit@@QBEHXZ ENDP				; CvUnit::getY
_TEXT	ENDS
PUBLIC	??_7ICvGameContext2@@6B@			; ICvGameContext2::`vftable'
PUBLIC	??0ICvGameContext2@@QAE@XZ			; ICvGameContext2::ICvGameContext2
PUBLIC	??_R4ICvGameContext2@@6B@			; ICvGameContext2::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVICvGameContext2@@@8			; ICvGameContext2 `RTTI Type Descriptor'
PUBLIC	??_R3ICvGameContext2@@8				; ICvGameContext2::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICvGameContext2@@8				; ICvGameContext2::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICvGameContext2@@8		; ICvGameContext2::`RTTI Base Class Descriptor at (0,-1,0,64)'
;	COMDAT ??_R1A@?0A@EA@ICvGameContext2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICvGameContext2@@8 DD FLAT:??_R0?AVICvGameContext2@@@8 ; ICvGameContext2::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICvGameContext2@@8
rdata$r	ENDS
;	COMDAT ??_R2ICvGameContext2@@8
rdata$r	SEGMENT
??_R2ICvGameContext2@@8 DD FLAT:??_R1A@?0A@EA@ICvGameContext2@@8 ; ICvGameContext2::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ICvGameContext1@@8
	DD	FLAT:??_R1A@?0A@EA@ICvUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICvGameContext2@@8
rdata$r	SEGMENT
??_R3ICvGameContext2@@8 DD 00H				; ICvGameContext2::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2ICvGameContext2@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVICvGameContext2@@@8
_DATA	SEGMENT
??_R0?AVICvGameContext2@@@8 DD FLAT:??_7type_info@@6B@	; ICvGameContext2 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVICvGameContext2@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ICvGameContext2@@6B@
rdata$r	SEGMENT
??_R4ICvGameContext2@@6B@ DD 00H			; ICvGameContext2::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVICvGameContext2@@@8
	DD	FLAT:??_R3ICvGameContext2@@8
rdata$r	ENDS
;	COMDAT ??_7ICvGameContext2@@6B@
CONST	SEGMENT
??_7ICvGameContext2@@6B@ DD FLAT:??_R4ICvGameContext2@@6B@ ; ICvGameContext2::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??0ICvGameContext2@@QAE@XZ
_TEXT	SEGMENT
??0ICvGameContext2@@QAE@XZ PROC				; ICvGameContext2::ICvGameContext2, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	DWORD PTR [eax], OFFSET ??_7ICvGameContext2@@6B@
	ret	0
??0ICvGameContext2@@QAE@XZ ENDP				; ICvGameContext2::ICvGameContext2
_TEXT	ENDS
PUBLIC	?SetDLLIFace@CvDllGameContext@@UAG_NPAVICvEngineUtility1@@@Z ; CvDllGameContext::SetDLLIFace
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvdllcontext.cpp
;	COMDAT ?SetDLLIFace@CvDllGameContext@@UAG_NPAVICvEngineUtility1@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pDll$ = 12						; size = 4
?SetDLLIFace@CvDllGameContext@@UAG_NPAVICvEngineUtility1@@@Z PROC ; CvDllGameContext::SetDLLIFace, COMDAT

; 851  : 	//Since we're using QueryInterface to allocate a new instance, we need to explicitly clean up the old reference.
; 852  : 	ICvEngineUtility4* pOldDll = GC.getDLLIFace();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	push	esi

; 853  : #ifndef AUI_WARNING_FIXES
; 854  : 	if(pOldDll != NULL)

	test	eax, eax
	je	SHORT $LN8@SetDLLIFac

; 855  : #endif
; 856  : 	{
; 857  : 		delete pOldDll;

	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	push	eax
	call	edx
$LN8@SetDLLIFac:

; 858  : 	}
; 859  : 
; 860  : 	ICvEngineUtility4* pDllInterface = (pDll != NULL)? pDll->QueryInterface<ICvEngineUtility4>() : NULL;

	mov	ecx, DWORD PTR _pDll$[esp]
	test	ecx, ecx
	je	SHORT $LN4@SetDLLIFac
	mov	esi, DWORD PTR _guidICvEngineUtility4
	mov	edx, DWORD PTR [ecx]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR _guidICvEngineUtility4+4
	mov	DWORD PTR [eax+4], esi
	mov	esi, DWORD PTR _guidICvEngineUtility4+8
	mov	DWORD PTR [eax+8], esi
	mov	esi, DWORD PTR _guidICvEngineUtility4+12
	mov	DWORD PTR [eax+12], esi
	mov	eax, DWORD PTR [edx]
	push	ecx
	call	eax

; 861  : 	GC.setDLLIFace(pDllInterface);	//GameCore will claim ownership.
; 862  : 
; 863  : 	return pDllInterface != NULL;

	xor	ecx, ecx
	test	eax, eax
	setne	cl
	mov	DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564, eax
	mov	al, cl

; 864  : }

	pop	esi
	ret	8
$LN4@SetDLLIFac:

; 858  : 	}
; 859  : 
; 860  : 	ICvEngineUtility4* pDllInterface = (pDll != NULL)? pDll->QueryInterface<ICvEngineUtility4>() : NULL;

	xor	eax, eax

; 861  : 	GC.setDLLIFace(pDllInterface);	//GameCore will claim ownership.
; 862  : 
; 863  : 	return pDllInterface != NULL;

	xor	ecx, ecx
	test	eax, eax
	setne	cl
	mov	DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564, eax
	mov	al, cl

; 864  : }

	pop	esi
	ret	8
?SetDLLIFace@CvDllGameContext@@UAG_NPAVICvEngineUtility1@@@Z ENDP ; CvDllGameContext::SetDLLIFace
_TEXT	ENDS
PUBLIC	?RandomNumberGeneratorSyncCheck@CvDllGameContext@@UAG_NW4PlayerTypes@@PAVICvRandom1@@_N@Z ; CvDllGameContext::RandomNumberGeneratorSyncCheck
EXTRN	__imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z:PROC
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
EXTRN	__imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z:PROC
EXTRN	__imp_??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z:PROC
EXTRN	__imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z:PROC
EXTRN	?getSeedHistory@CvRandom@@QBEABV?$vector@KV?$allocator@K@std@@@std@@XZ:PROC ; CvRandom::getSeedHistory
EXTRN	?getResolvedCallStacks@CvRandom@@QBEABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ:PROC ; CvRandom::getResolvedCallStacks
EXTRN	?resolveCallStacks@CvRandom@@QBEXXZ:PROC	; CvRandom::resolveCallStacks
EXTRN	?callStackDebuggingEnabled@CvRandom@@QBE_NXZ:PROC ; CvRandom::callStackDebuggingEnabled
EXTRN	?getResetCount@CvRandom@@QBEKXZ:PROC		; CvRandom::getResetCount
EXTRN	?getCallCount@CvRandom@@QBEKXZ:PROC		; CvRandom::getCallCount
EXTRN	__imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z:PROC
EXTRN	__imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z:PROC
EXTRN	?getSeed@CvRandom@@QBEKXZ:PROC			; CvRandom::getSeed
EXTRN	?GetInstance@FILogFileMgr@@SAAAV1@XZ:PROC	; FILogFileMgr::GetInstance
EXTRN	??9CvRandom@@QBE_NABV0@@Z:PROC			; CvRandom::operator!=
EXTRN	?UnwrapRandomPointer@CvGlobals@@QAEPAVCvRandom@@PAVICvRandom1@@@Z:PROC ; CvGlobals::UnwrapRandomPointer
EXTRN	?getJonRand@CvGame@@QAEAAVCvRandom@@XZ:PROC	; CvGame::getJonRand
EXTRN	_memset:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$?RandomNumberGeneratorSyncCheck@CvDllGameContext@@UAG_NW4PlayerTypes@@PAVICvRandom1@@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RandomNumberGeneratorSyncCheck@CvDllGameContext@@UAG_NW4PlayerTypes@@PAVICvRandom1@@_N@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?RandomNumberGeneratorSyncCheck@CvDllGameContext@@UAG_NW4PlayerTypes@@PAVICvRandom1@@_N@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?RandomNumberGeneratorSyncCheck@CvDllGameContext@@UAG_NW4PlayerTypes@@PAVICvRandom1@@_N@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?RandomNumberGeneratorSyncCheck@CvDllGameContext@@UAG_NW4PlayerTypes@@PAVICvRandom1@@_N@Z$3
__ehfuncinfo$?RandomNumberGeneratorSyncCheck@CvDllGameContext@@UAG_NW4PlayerTypes@@PAVICvRandom1@@_N@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?RandomNumberGeneratorSyncCheck@CvDllGameContext@@UAG_NW4PlayerTypes@@PAVICvRandom1@@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvdllcontext.cpp
xdata$x	ENDS
;	COMDAT ?RandomNumberGeneratorSyncCheck@CvDllGameContext@@UAG_NW4PlayerTypes@@PAVICvRandom1@@_N@Z
_TEXT	SEGMENT
_rngLogMessage$223382 = -280				; size = 28
_localCallStacks$223405 = -252				; size = 4
_remoteCallStacks$223410 = -248				; size = 4
_remoteSeedHistory$223420 = -244			; size = 4
_localSeedHistory$223415 = -240				; size = 4
_remoteSeedIterator$223830 = -236			; size = 4
_logFile$223378 = -232					; size = 4
$T230411 = -228						; size = 4
_lastCallStackLogged$224013 = -224			; size = 28
_formatBuf$223380 = -196				; size = 128
_remoteCallStack$223399 = -68				; size = 28
_localCallStack$223397 = -40				; size = 28
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
_pRandom$ = 16						; size = 4
_bIsHost$ = 20						; size = 1
?RandomNumberGeneratorSyncCheck@CvDllGameContext@@UAG_NW4PlayerTypes@@PAVICvRandom1@@_N@Z PROC ; CvDllGameContext::RandomNumberGeneratorSyncCheck, COMDAT

; 886  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?RandomNumberGeneratorSyncCheck@CvDllGameContext@@UAG_NW4PlayerTypes@@PAVICvRandom1@@_N@Z
	push	eax
	mov	DWORD PTR fs:0, esp

; 887  : 	// uh oh! Check the Random number generator!
; 888  : 	const CvRandom& localSimRandomNumberGenerator = GC.getGame().getJonRand();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	sub	esp, 268				; 0000010cH
	push	ebp
	push	esi
	call	?getJonRand@CvGame@@QAEAAVCvRandom@@XZ	; CvGame::getJonRand
	mov	esi, eax

; 889  : 	CvRandom* pkRandom = GC.UnwrapRandomPointer(pRandom);

	mov	eax, DWORD PTR _pRandom$[esp+284]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?UnwrapRandomPointer@CvGlobals@@QAEPAVCvRandom@@PAVICvRandom1@@@Z ; CvGlobals::UnwrapRandomPointer
	mov	ebp, eax

; 890  : 
; 891  : 	if(localSimRandomNumberGenerator != *pkRandom)

	push	ebp
	mov	ecx, esi
	call	??9CvRandom@@QBE_NABV0@@Z		; CvRandom::operator!=
	test	al, al
	je	$LN38@RandomNumb
	push	ebx
	push	edi

; 892  : 	{
; 893  : 		FILogFile* logFile = LOGFILEMGR.GetLog("net_message_debug.log", 0);

	call	?GetInstance@FILogFileMgr@@SAAAV1@XZ	; FILogFileMgr::GetInstance
	mov	edx, DWORD PTR [eax]
	push	0
	push	0
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+12]
	push	OFFSET $SG223379
	call	eax

; 894  : 
; 895  : 		char formatBuf[128] = {"\0"};

	xor	ecx, ecx
	push	126					; 0000007eH
	push	ecx
	lea	edx, DWORD PTR _formatBuf$223380[esp+306]
	mov	ebx, eax
	push	edx
	mov	DWORD PTR _logFile$223378[esp+308], ebx
	mov	WORD PTR _formatBuf$223380[esp+308], cx
	call	_memset
	add	esp, 12					; 0000000cH

; 896  : 		std::string rngLogMessage = "Game Random Number Generators are out of sync : local.seed=";

	push	OFFSET $SG223383
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z

; 897  : #ifdef AUI_WARNING_FIXES
; 898  : #ifdef AUI_USE_SFMT_RNG
; 899  : 		_itoa_s(localSimRandomNumberGenerator.getSeed().first, formatBuf, 128, 10);
; 900  : 		rngLogMessage += formatBuf;
; 901  : 		rngLogMessage += ", remote.seed=";
; 902  : 		_itoa_s(pkRandom->getSeed().first, formatBuf, 128, 10);
; 903  : #else
; 904  : 		_itoa_s(localSimRandomNumberGenerator.getSeed(), formatBuf, 128, 10);
; 905  : 		rngLogMessage += formatBuf;
; 906  : 		rngLogMessage += ", remote.seed=";
; 907  : 		_itoa_s(pkRandom->getSeed(), formatBuf, 128, 10);
; 908  : #endif
; 909  : 		rngLogMessage += formatBuf;
; 910  : 		rngLogMessage += "\n\tlocal.callCount=";
; 911  : 		_itoa_s(localSimRandomNumberGenerator.getCallCount(), formatBuf, 128, 10);
; 912  : 		rngLogMessage += formatBuf;
; 913  : 		rngLogMessage += ", remote.callCount=";
; 914  : 		_itoa_s(pkRandom->getCallCount(), formatBuf, 128, 10);
; 915  : 		rngLogMessage += formatBuf;
; 916  : 		rngLogMessage += "\n\tlocal.resetCount=";
; 917  : 		_itoa_s(localSimRandomNumberGenerator.getResetCount(), formatBuf, 128, 10);
; 918  : 		rngLogMessage += formatBuf;
; 919  : 		rngLogMessage += ", remote.resetCount=";
; 920  : 		_itoa_s(pkRandom->getResetCount(), formatBuf, 128, 10);
; 921  : 		rngLogMessage += formatBuf;
; 922  : #else
; 923  : 		rngLogMessage += _itoa_s(localSimRandomNumberGenerator.getSeed(), formatBuf, 10);

	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[esp+304], 0
	call	?getSeed@CvRandom@@QBEKXZ		; CvRandom::getSeed
	mov	edi, DWORD PTR __imp___itoa_s
	push	10					; 0000000aH
	push	128					; 00000080H
	lea	ecx, DWORD PTR _formatBuf$223380[esp+304]
	push	ecx
	push	eax
	call	edi
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z

; 924  : 		rngLogMessage += ", remote.seed=";

	push	OFFSET $SG223390
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 925  : 		rngLogMessage += _itoa_s(pkRandom->getSeed(), formatBuf, 10);

	mov	ecx, ebp
	call	?getSeed@CvRandom@@QBEKXZ		; CvRandom::getSeed
	push	10					; 0000000aH
	push	128					; 00000080H
	lea	edx, DWORD PTR _formatBuf$223380[esp+304]
	push	edx
	push	eax
	call	edi
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z

; 926  : 		rngLogMessage += "\n\tlocal.callCount=";

	push	OFFSET $SG223391
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 927  : 		rngLogMessage += _itoa_s(localSimRandomNumberGenerator.getCallCount(), formatBuf, 10);

	mov	ecx, esi
	call	?getCallCount@CvRandom@@QBEKXZ		; CvRandom::getCallCount
	push	10					; 0000000aH
	push	128					; 00000080H
	lea	ecx, DWORD PTR _formatBuf$223380[esp+304]
	push	ecx
	push	eax
	call	edi
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z

; 928  : 		rngLogMessage += ", remote.callCount=";

	push	OFFSET $SG223392
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 929  : 		rngLogMessage += _itoa_s(pkRandom->getCallCount(), formatBuf, 10);

	mov	ecx, ebp
	call	?getCallCount@CvRandom@@QBEKXZ		; CvRandom::getCallCount
	push	10					; 0000000aH
	push	128					; 00000080H
	lea	edx, DWORD PTR _formatBuf$223380[esp+304]
	push	edx
	push	eax
	call	edi
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z

; 930  : 		rngLogMessage += "\n\tlocal.resetCount=";

	push	OFFSET $SG223393
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 931  : 		rngLogMessage += _itoa_s(localSimRandomNumberGenerator.getResetCount(), formatBuf, 10);

	mov	ecx, esi
	call	?getResetCount@CvRandom@@QBEKXZ		; CvRandom::getResetCount
	push	10					; 0000000aH
	push	128					; 00000080H
	lea	ecx, DWORD PTR _formatBuf$223380[esp+304]
	push	ecx
	push	eax
	call	edi
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z

; 932  : 		rngLogMessage += ", remote.resetCount=";

	push	OFFSET $SG223394
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 933  : 		rngLogMessage += _itoa_s(pkRandom->getResetCount(), formatBuf, 10);

	mov	ecx, ebp
	call	?getResetCount@CvRandom@@QBEKXZ		; CvRandom::getResetCount
	push	10					; 0000000aH
	push	128					; 00000080H
	lea	edx, DWORD PTR _formatBuf$223380[esp+304]
	push	edx
	push	eax
	call	edi
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z

; 934  : #endif
; 935  : 		rngLogMessage += "\n";

	push	OFFSET $SG223395
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 936  : 
; 937  : 		if(localSimRandomNumberGenerator.callStackDebuggingEnabled() && pkRandom->callStackDebuggingEnabled())

	mov	ecx, esi
	call	?callStackDebuggingEnabled@CvRandom@@QBE_NXZ ; CvRandom::callStackDebuggingEnabled
	test	al, al
	je	$LN37@RandomNumb
	mov	ecx, ebp
	call	?callStackDebuggingEnabled@CvRandom@@QBE_NXZ ; CvRandom::callStackDebuggingEnabled
	test	al, al
	je	$LN37@RandomNumb

; 938  : 		{
; 939  : #ifndef AUI_WARNING_FIXES
; 940  : 			std::string localCallStack("");

	push	OFFSET $SG223398
	lea	ecx, DWORD PTR _localCallStack$223397[esp+300]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z

; 941  : 			std::string remoteCallStack("");

	push	OFFSET $SG223400
	lea	ecx, DWORD PTR _remoteCallStack$223399[esp+300]
	mov	BYTE PTR __$EHRec$[esp+308], 1
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z

; 942  : #endif
; 943  : 			localSimRandomNumberGenerator.resolveCallStacks();

	mov	ecx, esi
	mov	BYTE PTR __$EHRec$[esp+304], 2
	call	?resolveCallStacks@CvRandom@@QBEXXZ	; CvRandom::resolveCallStacks

; 944  : 			const std::vector<std::string>& localCallStacks = localSimRandomNumberGenerator.getResolvedCallStacks();

	mov	ecx, esi
	call	?getResolvedCallStacks@CvRandom@@QBEABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ ; CvRandom::getResolvedCallStacks

; 945  : 			const std::vector<std::string>& remoteCallStacks =  pkRandom->getResolvedCallStacks();

	mov	ecx, ebp
	mov	DWORD PTR _localCallStacks$223405[esp+296], eax
	call	?getResolvedCallStacks@CvRandom@@QBEABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ ; CvRandom::getResolvedCallStacks

; 946  : 			const std::vector<unsigned long>& localSeedHistory = localSimRandomNumberGenerator.getSeedHistory();

	mov	ecx, esi
	mov	DWORD PTR _remoteCallStacks$223410[esp+296], eax
	call	?getSeedHistory@CvRandom@@QBEABV?$vector@KV?$allocator@K@std@@@std@@XZ ; CvRandom::getSeedHistory
	mov	ebx, eax

; 947  : 			const std::vector<unsigned long>& remoteSeedHistory = pkRandom->getSeedHistory();

	mov	ecx, ebp
	mov	DWORD PTR _localSeedHistory$223415[esp+296], ebx
	call	?getSeedHistory@CvRandom@@QBEABV?$vector@KV?$allocator@K@std@@@std@@XZ ; CvRandom::getSeedHistory

; 948  : 			std::vector<unsigned long>::const_iterator localSeedIterator = localSeedHistory.begin();
; 949  : 			std::vector<unsigned long>::const_iterator remoteSeedIterator = remoteSeedHistory.begin();
; 950  : 			unsigned int callNumber = 0;
; 951  : 			for(localSeedIterator = localSeedHistory.begin(), remoteSeedIterator = remoteSeedHistory.begin(); localSeedIterator != localSeedHistory.end() && remoteSeedIterator != remoteSeedHistory.end(); ++localSeedIterator, ++remoteSeedIterator, ++callNumber)

	mov	ebp, DWORD PTR [ebx+4]
	mov	ebx, DWORD PTR [ebx+8]
	mov	ecx, DWORD PTR [eax+4]
	xor	esi, esi
	mov	DWORD PTR _remoteSeedHistory$223420[esp+296], eax
	mov	DWORD PTR _remoteSeedIterator$223830[esp+296], ecx
	cmp	ebp, ebx
	je	$LN34@RandomNumb
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR $T230411[esp+296], edx
	npad	5
$LL316@RandomNumb:
	cmp	ecx, DWORD PTR $T230411[esp+296]
	je	$LN34@RandomNumb

; 952  : 			{
; 953  : 				if(*localSeedIterator != *remoteSeedIterator)

	mov	edx, DWORD PTR [ebp]
	cmp	edx, DWORD PTR [ecx]
	je	SHORT $LN35@RandomNumb

; 954  : 				{
; 955  : 					if(callNumber < localCallStacks.size() && callNumber < remoteCallStacks.size())

	mov	eax, DWORD PTR _localCallStacks$223405[esp+296]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, DWORD PTR [eax+4]
	mov	eax, -1840700269			; 92492493H
	imul	ecx
	add	edx, ecx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cmp	esi, eax
	jae	SHORT $LN308@RandomNumb
	mov	eax, DWORD PTR _remoteCallStacks$223410[esp+296]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, DWORD PTR [eax+4]
	mov	eax, -1840700269			; 92492493H
	imul	ecx
	add	edx, ecx
	sar	edx, 4
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	cmp	esi, ecx
	jb	SHORT $LN302@RandomNumb
$LN308@RandomNumb:
	mov	ecx, DWORD PTR _remoteSeedIterator$223830[esp+296]
	mov	eax, DWORD PTR _remoteSeedHistory$223420[esp+296]
$LN35@RandomNumb:
	add	ebp, 4
	add	ecx, 4
	inc	esi
	mov	DWORD PTR _remoteSeedIterator$223830[esp+296], ecx
	cmp	ebp, ebx
	jne	SHORT $LL316@RandomNumb

; 1035 : 			{
; 1036 : 				if(*localCallStackIterator != *remoteCallStackIterator)

	jmp	$LN34@RandomNumb
$LN302@RandomNumb:

; 956  : 					{
; 957  : 						rngLogMessage += "At Call #";

	push	OFFSET $SG223842
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 958  : #ifdef AUI_WARNING_FIXES
; 959  : 						_itoa_s(callNumber, formatBuf, 128, 10);
; 960  : 						rngLogMessage += formatBuf;
; 961  : 						rngLogMessage += " random number seeds are different.\n";
; 962  : 						if (callNumber > 0)
; 963  : 						{
; 964  : 							rngLogMessage += "Call #";
; 965  : 							_itoa_s(callNumber - 1, formatBuf, 128, 10);
; 966  : 							rngLogMessage += formatBuf;
; 967  : 							rngLogMessage += "\nLocal:\n";
; 968  : 							rngLogMessage += localCallStacks[callNumber - 1];
; 969  : 							rngLogMessage += "\nRemote:\n";
; 970  : 							rngLogMessage += remoteCallStacks[callNumber - 1];
; 971  : 						}
; 972  : 						rngLogMessage += "Call #";
; 973  : 						_itoa_s(callNumber, formatBuf, 128, 10);
; 974  : 						rngLogMessage += formatBuf;
; 975  : #else
; 976  : 						rngLogMessage += _itoa_s(callNumber, formatBuf, 10);

	push	10					; 0000000aH
	lea	edx, DWORD PTR _formatBuf$223380[esp+300]
	push	edx
	push	esi
	call	??$_itoa_s@$0IA@@@YAHHAAY0IA@DH@Z	; _itoa_s<128>
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z

; 977  : 						rngLogMessage += " random number seeds are different.\n";

	push	OFFSET $SG223843
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 978  : 						if(callNumber > 0)

	test	esi, esi
	jbe	$LN31@RandomNumb

; 979  : 						{
; 980  : 							rngLogMessage += "Call #";

	push	OFFSET $SG223845
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 981  : 							rngLogMessage += _itoa_s(callNumber - 1, formatBuf, 10);

	push	10					; 0000000aH
	lea	eax, DWORD PTR _formatBuf$223380[esp+300]
	push	eax
	lea	ecx, DWORD PTR [esi-1]
	push	ecx
	call	??$_itoa_s@$0IA@@@YAHHAAY0IA@DH@Z	; _itoa_s<128>
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z

; 982  : 							rngLogMessage += "\nLocal:\n";

	push	OFFSET $SG223846
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 983  : 							rngLogMessage += localCallStacks[callNumber - 1];

	mov	edx, DWORD PTR _localCallStacks$223405[esp+296]
	mov	eax, DWORD PTR [edx+4]
	lea	ebx, DWORD PTR [esi*8]
	sub	ebx, esi
	add	ebx, ebx
	add	ebx, ebx
	lea	ecx, DWORD PTR [eax+ebx-28]
	push	ecx
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z

; 984  : 							rngLogMessage += "\nRemote:\n";

	push	OFFSET $SG223847
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 985  : 							rngLogMessage += remoteCallStacks[callNumber - 1];

	mov	edx, DWORD PTR _remoteCallStacks$223410[esp+296]
	mov	eax, DWORD PTR [edx+4]
	lea	ecx, DWORD PTR [eax+ebx-28]
	push	ecx
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
$LN31@RandomNumb:

; 986  : 						}
; 987  : 						rngLogMessage += "Call #";

	push	OFFSET $SG223848
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 988  : 						rngLogMessage += _itoa_s(callNumber, formatBuf, 10);

	push	10					; 0000000aH
	lea	edx, DWORD PTR _formatBuf$223380[esp+300]
	push	edx
	push	esi
	call	??$_itoa_s@$0IA@@@YAHHAAY0IA@DH@Z	; _itoa_s<128>
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z

; 989  : #endif
; 990  : 						rngLogMessage += "\nLocal:\n";

	push	OFFSET $SG223849
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 991  : 						rngLogMessage += localCallStacks[callNumber];

	mov	eax, DWORD PTR _localCallStacks$223405[esp+296]
	mov	ecx, DWORD PTR [eax+4]
	lea	ebx, DWORD PTR [esi*8]
	sub	ebx, esi
	add	ebx, ebx
	add	ebx, ebx
	add	ecx, ebx
	push	ecx
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z

; 992  : 						rngLogMessage += "\nRemote:\n";

	push	OFFSET $SG223850
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 993  : 						rngLogMessage += remoteCallStacks[callNumber];

	mov	edx, DWORD PTR _remoteCallStacks$223410[esp+296]
	mov	eax, DWORD PTR [edx+4]
	add	eax, ebx
	push	eax
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	ecx, DWORD PTR _remoteSeedIterator$223830[esp+296]
	mov	eax, DWORD PTR _remoteSeedHistory$223420[esp+296]
$LN34@RandomNumb:

; 994  : 						break;
; 995  : 					}
; 996  : 				}
; 997  : 			}
; 998  : 			if(localSeedIterator != localSeedHistory.end() && remoteSeedIterator == remoteSeedHistory.end())

	mov	ebx, DWORD PTR _localSeedHistory$223415[esp+296]
	mov	edx, DWORD PTR [ebx+8]
	cmp	ebp, edx
	je	SHORT $LN30@RandomNumb
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN319@RandomNumb

; 999  : 			{
; 1000 : 				rngLogMessage += "\nLocal random number generator called more than remote at call #";

	push	OFFSET $SG223854
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 1001 : #ifdef AUI_WARNING_FIXES
; 1002 : 				_itoa_s(callNumber, formatBuf, 128, 10);
; 1003 : 				rngLogMessage += formatBuf;
; 1004 : #else
; 1005 : 				rngLogMessage += _itoa_s(callNumber, formatBuf, 10);

	push	10					; 0000000aH
	push	128					; 00000080H
	lea	ecx, DWORD PTR _formatBuf$223380[esp+304]
	push	ecx
	push	esi
	call	edi
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z

; 1006 : #endif
; 1007 : 				rngLogMessage += "\n";

	push	OFFSET $SG223855
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 1008 : 				if(callNumber < localSeedHistory.size())

	mov	edx, DWORD PTR [ebx+8]
	sub	edx, DWORD PTR [ebx+4]
	sar	edx, 2
	cmp	esi, edx
	jae	$LN309@RandomNumb

; 1009 : 				{
; 1010 : 					rngLogMessage += "Local CallStack:\n";

	push	OFFSET $SG223857
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 1011 : 					rngLogMessage += localCallStacks[callNumber];

	mov	ecx, DWORD PTR _localCallStacks$223405[esp+296]

; 1012 : 				}
; 1013 : 			}

	jmp	SHORT $LN320@RandomNumb
$LN30@RandomNumb:

; 1014 : 			else if(remoteSeedIterator != remoteSeedHistory.end() && localSeedIterator == localSeedHistory.end())

	cmp	ecx, DWORD PTR [eax+8]
	je	SHORT $LN309@RandomNumb
$LN319@RandomNumb:
	cmp	ebp, edx
	jne	SHORT $LN309@RandomNumb

; 1015 : 			{
; 1016 : 				rngLogMessage += "\nremote random number generator called more than local at call #";

	push	OFFSET $SG223862
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 1017 : #ifdef AUI_WARNING_FIXES
; 1018 : 				_itoa_s(callNumber, formatBuf, 128, 10);
; 1019 : 				rngLogMessage += formatBuf;
; 1020 : #else
; 1021 : 				rngLogMessage += _itoa_s(callNumber, formatBuf, 10);

	push	10					; 0000000aH
	push	128					; 00000080H
	lea	ecx, DWORD PTR _formatBuf$223380[esp+304]
	push	ecx
	push	esi
	call	edi
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z

; 1022 : #endif
; 1023 : 				rngLogMessage += "\n";

	push	OFFSET $SG223863
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 1024 : 				if(callNumber < remoteSeedHistory.size())

	mov	eax, DWORD PTR _remoteSeedHistory$223420[esp+296]
	mov	edx, DWORD PTR [eax+8]
	sub	edx, DWORD PTR [eax+4]
	sar	edx, 2
	cmp	esi, edx
	jae	SHORT $LN309@RandomNumb

; 1025 : 				{
; 1026 : 					rngLogMessage += "remote CallStack:\n";

	push	OFFSET $SG223865
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 1027 : 					rngLogMessage += remoteCallStacks[callNumber];

	mov	ecx, DWORD PTR _remoteCallStacks$223410[esp+296]
$LN320@RandomNumb:
	mov	edx, DWORD PTR [ecx+4]
	lea	eax, DWORD PTR [esi*8]
	sub	eax, esi
	lea	eax, DWORD PTR [edx+eax*4]
	push	eax
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
$LN309@RandomNumb:

; 1028 : 				}
; 1029 : 			}
; 1030 : 
; 1031 : 			// find first different call
; 1032 : 			std::vector<std::string>::const_iterator localCallStackIterator;
; 1033 : 			std::vector<std::string>::const_iterator remoteCallStackIterator;
; 1034 : 			for(localCallStackIterator = localCallStacks.begin(), remoteCallStackIterator = remoteCallStacks.begin(), callNumber = 0; localCallStackIterator != localCallStacks.end() && remoteCallStackIterator != remoteCallStacks.end(); ++localCallStackIterator, ++remoteCallStackIterator, ++callNumber)

	mov	ecx, DWORD PTR _localCallStacks$223405[esp+296]
	mov	esi, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _remoteCallStacks$223410[esp+296]
	mov	ebp, DWORD PTR [edx+4]
	mov	eax, ecx
	mov	eax, DWORD PTR [eax+8]
	xor	ebx, ebx
	cmp	esi, eax
	je	$LN23@RandomNumb
	npad	7
$LL311@RandomNumb:
	mov	ecx, DWORD PTR _remoteCallStacks$223410[esp+296]
	cmp	ebp, DWORD PTR [ecx+8]
	je	$LN23@RandomNumb

; 1035 : 			{
; 1036 : 				if(*localCallStackIterator != *remoteCallStackIterator)

	push	ebp
	push	esi
	call	DWORD PTR __imp_??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
	add	esp, 8
	test	al, al
	jne	SHORT $LN303@RandomNumb
	mov	edx, DWORD PTR _localCallStacks$223405[esp+296]
	add	esi, 28					; 0000001cH
	add	ebp, 28					; 0000001cH
	inc	ebx
	cmp	esi, DWORD PTR [edx+8]
	jne	SHORT $LL311@RandomNumb
	jmp	SHORT $LN23@RandomNumb
$LN303@RandomNumb:

; 1037 : 				{
; 1038 : 					rngLogMessage += "\nFirst different callstack at call #";

	push	OFFSET $SG223988
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 1039 : #ifdef AUI_WARNING_FIXES
; 1040 : 					_itoa_s(callNumber, formatBuf, 128, 10);
; 1041 : 					rngLogMessage += formatBuf;
; 1042 : #else
; 1043 : 					rngLogMessage += _itoa_s(callNumber, formatBuf, 10);

	push	10					; 0000000aH
	push	128					; 00000080H
	lea	eax, DWORD PTR _formatBuf$223380[esp+304]
	push	eax
	push	ebx
	call	edi
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z

; 1044 : #endif
; 1045 : 					rngLogMessage += "\n";

	push	OFFSET $SG223989
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 1046 : 					rngLogMessage += "Local :\n";

	push	OFFSET $SG223990
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 1047 : 					rngLogMessage += *localCallStackIterator;

	push	esi
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z

; 1048 : 					rngLogMessage += "Remote :\n";

	push	OFFSET $SG223991
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 1049 : 					rngLogMessage += *remoteCallStackIterator;

	push	ebp
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
$LN23@RandomNumb:

; 1050 : 					break;
; 1051 : 				}
; 1052 : 			}
; 1053 : 
; 1054 : 			if(logFile)

	mov	ebx, DWORD PTR _logFile$223378[esp+296]
	test	ebx, ebx
	je	$LN20@RandomNumb

; 1055 : 			{
; 1056 : 				logFile->DebugMsg(rngLogMessage.c_str());

	mov	esi, DWORD PTR [ebx]
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+296]
	add	esi, 4
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	ecx, DWORD PTR [esi]
	push	eax
	push	ebx
	call	ecx
	add	esp, 8

; 1057 : 			}
; 1058 : 
; 1059 : 			CvAssertMsg(false, rngLogMessage.c_str());
; 1060 : 
; 1061 : 			if(logFile)
; 1062 : 			{
; 1063 : 				rngLogMessage = "\nDebug dump:\n";

	push	OFFSET $SG223994
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 1064 : 
; 1065 : 
; 1066 : 				// add full history
; 1067 : 				rngLogMessage += "Seed History -\n";

	push	OFFSET $SG223995
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 1068 : 				localSeedIterator = localSeedHistory.begin();

	mov	edx, DWORD PTR _localSeedHistory$223415[esp+296]

; 1069 : 				remoteSeedIterator = remoteSeedHistory.begin();

	mov	eax, DWORD PTR _remoteSeedHistory$223420[esp+296]
	mov	esi, DWORD PTR [edx+4]
	mov	ebp, DWORD PTR [eax+4]

; 1070 : 				callNumber = 0;

	xor	ebx, ebx
	npad	1
$LL19@RandomNumb:

; 1071 : 				while(localSeedIterator != localSeedHistory.end() || remoteSeedIterator != remoteSeedHistory.end())

	mov	ecx, DWORD PTR _localSeedHistory$223415[esp+296]
	cmp	esi, DWORD PTR [ecx+8]
	jne	SHORT $LN17@RandomNumb
	mov	edx, DWORD PTR _remoteSeedHistory$223420[esp+296]
	cmp	ebp, DWORD PTR [edx+8]
	je	$LN18@RandomNumb
$LN17@RandomNumb:

; 1072 : 				{
; 1073 : 					++callNumber;
; 1074 : 					rngLogMessage += "\t Call #";

	push	OFFSET $SG224004
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	inc	ebx
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 1075 : #ifdef AUI_WARNING_FIXES
; 1076 : 					_itoa_s(callNumber, formatBuf, 128, 10);
; 1077 : 					rngLogMessage += formatBuf;
; 1078 : #else
; 1079 : 					rngLogMessage += _itoa_s(callNumber, formatBuf, 10);

	push	10					; 0000000aH
	push	128					; 00000080H
	lea	eax, DWORD PTR _formatBuf$223380[esp+304]
	push	eax
	push	ebx
	call	edi
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z

; 1080 : #endif
; 1081 : 					rngLogMessage += " LOCAL=";

	push	OFFSET $SG224005
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 1082 : 					if(localSeedIterator != localSeedHistory.end())

	mov	ecx, DWORD PTR _localSeedHistory$223415[esp+296]
	cmp	esi, DWORD PTR [ecx+8]
	je	SHORT $LN231@RandomNumb

; 1083 : 					{
; 1084 : #ifdef AUI_WARNING_FIXES
; 1085 : 						_itoa_s(*localSeedIterator, formatBuf, 128, 10);
; 1086 : 						rngLogMessage += formatBuf;
; 1087 : #else
; 1088 : 						rngLogMessage += _itoa_s(*localSeedIterator, formatBuf, 10);

	mov	eax, DWORD PTR [esi]
	push	10					; 0000000aH
	push	128					; 00000080H
	lea	edx, DWORD PTR _formatBuf$223380[esp+304]
	push	edx
	push	eax
	call	edi
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z

; 1089 : #endif
; 1090 : 						++localSeedIterator;

	add	esi, 4
$LN231@RandomNumb:

; 1091 : 					}
; 1092 : 					rngLogMessage += "\tREMOTE=";

	push	OFFSET $SG224008
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 1093 : 					if(remoteSeedIterator != remoteSeedHistory.end())

	mov	eax, DWORD PTR _remoteSeedHistory$223420[esp+296]
	cmp	ebp, DWORD PTR [eax+8]
	je	SHORT $LN245@RandomNumb

; 1094 : 					{
; 1095 : #ifdef AUI_WARNING_FIXES
; 1096 : 						_itoa_s(*remoteSeedIterator, formatBuf, 128, 10);
; 1097 : 						rngLogMessage += formatBuf;
; 1098 : #else
; 1099 : 						rngLogMessage += _itoa_s(*remoteSeedIterator, formatBuf, 10);

	mov	eax, DWORD PTR [ebp]
	push	10					; 0000000aH
	push	128					; 00000080H
	lea	ecx, DWORD PTR _formatBuf$223380[esp+304]
	push	ecx
	push	eax
	call	edi
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z

; 1100 : #endif
; 1101 : 						++remoteSeedIterator;

	add	ebp, 4
$LN245@RandomNumb:

; 1102 : 					}
; 1103 : 					rngLogMessage += "\n";

	push	OFFSET $SG224011
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 1104 : 				}

	jmp	$LL19@RandomNumb
$LN18@RandomNumb:

; 1105 : 
; 1106 : 				rngLogMessage += "\nLocal callstack history\n";

	push	OFFSET $SG224012
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 1107 : 				callNumber = 0;
; 1108 : 				std::string lastCallStackLogged;

	lea	ecx, DWORD PTR _lastCallStackLogged$224013[esp+296]
	xor	ebx, ebx
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 1109 : 				unsigned int repeatCount = 0;
; 1110 : 				std::vector<std::string>::const_iterator i;
; 1111 : 				for(i = localCallStacks.begin(); i != localCallStacks.end(); ++i)

	mov	eax, DWORD PTR _localCallStacks$223405[esp+296]
	mov	esi, DWORD PTR [eax+4]
	xor	ebp, ebp
	mov	BYTE PTR __$EHRec$[esp+304], 3
	cmp	esi, DWORD PTR [eax+8]
	je	$LN313@RandomNumb
$LL253@RandomNumb:

; 1112 : 				{
; 1113 : 					if(lastCallStackLogged != *i)

	lea	edx, DWORD PTR _lastCallStackLogged$224013[esp+296]
	push	esi
	push	edx
	call	DWORD PTR __imp_??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
	add	esp, 8
	test	al, al
	je	$LN11@RandomNumb

; 1114 : 					{
; 1115 : 						if(repeatCount > 0)

	test	ebp, ebp
	jbe	SHORT $LN312@RandomNumb

; 1116 : 						{
; 1117 : 							rngLogMessage += "Last message repeated ";

	push	OFFSET $SG224027
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 1118 : #ifdef AUI_WARNING_FIXES
; 1119 : 							_itoa_s(repeatCount, formatBuf, 128, 10);
; 1120 : 							rngLogMessage += formatBuf;
; 1121 : #else
; 1122 : 							rngLogMessage += _itoa_s(repeatCount, formatBuf, 10);

	push	10					; 0000000aH
	push	128					; 00000080H
	lea	eax, DWORD PTR _formatBuf$223380[esp+304]
	push	eax
	push	ebp
	call	edi
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z

; 1123 : #endif
; 1124 : 							rngLogMessage += " times\n";

	push	OFFSET $SG224028
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN312@RandomNumb:

; 1125 : 						}
; 1126 : 						rngLogMessage += "Call #";

	push	OFFSET $SG224029
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 1127 : #ifdef AUI_WARNING_FIXES
; 1128 : 						_itoa_s(callNumber, formatBuf, 128, 10);
; 1129 : 						rngLogMessage += formatBuf;
; 1130 : #else
; 1131 : 						rngLogMessage += _itoa_s(callNumber, formatBuf, 10);

	push	10					; 0000000aH
	push	128					; 00000080H
	lea	ecx, DWORD PTR _formatBuf$223380[esp+304]
	push	ecx
	push	ebx
	call	edi
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z

; 1132 : #endif
; 1133 : 						rngLogMessage += "\n";

	push	OFFSET $SG224030
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 1134 : 						rngLogMessage += *i;

	push	esi
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z

; 1135 : 						lastCallStackLogged = *i;

	push	esi
	lea	ecx, DWORD PTR _lastCallStackLogged$224013[esp+300]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z

; 1136 : 						repeatCount = 0;

	xor	ebp, ebp

; 1137 : 					}
; 1138 : 					else

	jmp	SHORT $LN9@RandomNumb
$LN11@RandomNumb:

; 1139 : 					{
; 1140 : 						repeatCount++;

	inc	ebp
$LN9@RandomNumb:

; 1109 : 				unsigned int repeatCount = 0;
; 1110 : 				std::vector<std::string>::const_iterator i;
; 1111 : 				for(i = localCallStacks.begin(); i != localCallStacks.end(); ++i)

	mov	edx, DWORD PTR _localCallStacks$223405[esp+296]
	add	esi, 28					; 0000001cH

; 1141 : 					}
; 1142 : 					++callNumber;

	inc	ebx
	cmp	esi, DWORD PTR [edx+8]
	jne	$LL253@RandomNumb
$LN313@RandomNumb:

; 1143 : 				}
; 1144 : 
; 1145 : 				rngLogMessage += "\nRemote callstack history\n";

	push	OFFSET $SG224032
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 1146 : 				callNumber = 0;
; 1147 : 				repeatCount = 0;
; 1148 : 				for(i = remoteCallStacks.begin(); i != remoteCallStacks.end(); ++i)

	mov	eax, DWORD PTR _remoteCallStacks$223410[esp+296]
	mov	esi, DWORD PTR [eax+4]
	xor	ebx, ebx
	xor	ebp, ebp
	cmp	esi, DWORD PTR [eax+8]
	je	$LN6@RandomNumb
$LL277@RandomNumb:

; 1149 : 				{
; 1150 : 					if(lastCallStackLogged != *i)

	lea	eax, DWORD PTR _lastCallStackLogged$224013[esp+296]
	push	esi
	push	eax
	call	DWORD PTR __imp_??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
	add	esp, 8
	test	al, al
	je	$LN5@RandomNumb

; 1151 : 					{
; 1152 : 						if(repeatCount > 0)

	test	ebp, ebp
	jbe	SHORT $LN314@RandomNumb

; 1153 : 						{
; 1154 : 							rngLogMessage += "Last message repeated ";

	push	OFFSET $SG224040
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 1155 : #ifdef AUI_WARNING_FIXES
; 1156 : 							_itoa_s(repeatCount, formatBuf, 128, 10);
; 1157 : 							rngLogMessage += formatBuf;
; 1158 : #else
; 1159 : 							rngLogMessage += _itoa_s(repeatCount, formatBuf, 10);

	push	10					; 0000000aH
	push	128					; 00000080H
	lea	ecx, DWORD PTR _formatBuf$223380[esp+304]
	push	ecx
	push	ebp
	call	edi
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z

; 1160 : #endif
; 1161 : 							rngLogMessage += " times\n";

	push	OFFSET $SG224041
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN314@RandomNumb:

; 1162 : 						}
; 1163 : 						rngLogMessage += "Call #";

	push	OFFSET $SG224042
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 1164 : #ifdef AUI_WARNING_FIXES
; 1165 : 						_itoa_s(callNumber, formatBuf, 128, 10);
; 1166 : 						rngLogMessage += formatBuf;
; 1167 : #else
; 1168 : 						rngLogMessage += _itoa_s(callNumber, formatBuf, 10);

	push	10					; 0000000aH
	push	128					; 00000080H
	lea	edx, DWORD PTR _formatBuf$223380[esp+304]
	push	edx
	push	ebx
	call	edi
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z

; 1169 : #endif
; 1170 : 						rngLogMessage += "\n";

	push	OFFSET $SG224043
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 1171 : 						rngLogMessage += *i;

	push	esi
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+300]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z

; 1172 : 						lastCallStackLogged = *i;

	push	esi
	lea	ecx, DWORD PTR _lastCallStackLogged$224013[esp+300]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z

; 1173 : 						repeatCount = 0;

	xor	ebp, ebp

; 1174 : 					}
; 1175 : 					else

	jmp	SHORT $LN3@RandomNumb
$LN5@RandomNumb:

; 1176 : 					{
; 1177 : 						repeatCount++;

	inc	ebp
$LN3@RandomNumb:

; 1146 : 				callNumber = 0;
; 1147 : 				repeatCount = 0;
; 1148 : 				for(i = remoteCallStacks.begin(); i != remoteCallStacks.end(); ++i)

	mov	eax, DWORD PTR _remoteCallStacks$223410[esp+296]
	add	esi, 28					; 0000001cH

; 1178 : 					}
; 1179 : 					++callNumber;

	inc	ebx
	cmp	esi, DWORD PTR [eax+8]
	jne	$LL277@RandomNumb
$LN6@RandomNumb:

; 1180 : 				}
; 1181 : 				logFile->DebugMsg(rngLogMessage.c_str());

	mov	edi, DWORD PTR _logFile$223378[esp+296]
	mov	esi, DWORD PTR [edi]
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+296]
	add	esi, 4
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	ecx, DWORD PTR [esi]
	push	eax
	push	edi
	call	ecx
	add	esp, 8

; 1182 : 			}

	lea	ecx, DWORD PTR _lastCallStackLogged$224013[esp+296]
	mov	BYTE PTR __$EHRec$[esp+304], 2
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN20@RandomNumb:

; 1183 : 
; 1184 : 		}

	lea	ecx, DWORD PTR _remoteCallStack$223399[esp+296]
	mov	BYTE PTR __$EHRec$[esp+304], 1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR _localCallStack$223397[esp+296]
	mov	BYTE PTR __$EHRec$[esp+304], 0
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 1185 : 		else

	jmp	SHORT $LN1@RandomNumb
$LN37@RandomNumb:

; 1186 : 		{
; 1187 : 			if(logFile)

	test	ebx, ebx
	je	SHORT $LN1@RandomNumb

; 1188 : 			{
; 1189 : 				logFile->DebugMsg(rngLogMessage.c_str());

	mov	esi, DWORD PTR [ebx]
	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+296]
	add	esi, 4
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	edx, DWORD PTR [esi]
	push	eax
	push	ebx
	call	edx
	add	esp, 8
$LN1@RandomNumb:

; 1190 : 			}
; 1191 : 			CvAssertMsg(false, rngLogMessage.c_str());
; 1192 : 		}
; 1193 : 
; 1194 : 
; 1195 : 		/* If this point has been reached, the OOS may be nearly unrecoverable
; 1196 : 		// attempt to recover
; 1197 : 		if(m_isHost)
; 1198 : 		{
; 1199 : 			CvRandom & rng = auto_ptr<ICvGame1> pGame = GameCore::GetGame();\n.getJonRand();
; 1200 : 			rng.reset(m_simRandomNumberGenerator.getSeed());
; 1201 : 		}
; 1202 : 		// brute force approach
; 1203 : 		// JAR : todo - this is the solution of last resort if
; 1204 : 		// loadDelta() doesn't work out
; 1205 : 		*/
; 1206 : 		return false;

	lea	ecx, DWORD PTR _rngLogMessage$223382[esp+296]
	mov	DWORD PTR __$EHRec$[esp+304], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	pop	edi
	xor	al, al
	pop	ebx
	jmp	SHORT $LN39@RandomNumb
$LN38@RandomNumb:

; 1207 : 	}
; 1208 : 
; 1209 : 	return true;

	mov	al, 1
$LN39@RandomNumb:

; 1210 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+288]
	pop	esi
	pop	ebp
	mov	DWORD PTR fs:0, ecx
	add	esp, 280				; 00000118H
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?RandomNumberGeneratorSyncCheck@CvDllGameContext@@UAG_NW4PlayerTypes@@PAVICvRandom1@@_N@Z$0:
	lea	ecx, DWORD PTR _rngLogMessage$223382[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?RandomNumberGeneratorSyncCheck@CvDllGameContext@@UAG_NW4PlayerTypes@@PAVICvRandom1@@_N@Z$1:
	lea	ecx, DWORD PTR _localCallStack$223397[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?RandomNumberGeneratorSyncCheck@CvDllGameContext@@UAG_NW4PlayerTypes@@PAVICvRandom1@@_N@Z$2:
	lea	ecx, DWORD PTR _remoteCallStack$223399[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?RandomNumberGeneratorSyncCheck@CvDllGameContext@@UAG_NW4PlayerTypes@@PAVICvRandom1@@_N@Z$3:
	lea	ecx, DWORD PTR _lastCallStackLogged$224013[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?RandomNumberGeneratorSyncCheck@CvDllGameContext@@UAG_NW4PlayerTypes@@PAVICvRandom1@@_N@Z:
	mov	eax, OFFSET __ehfuncinfo$?RandomNumberGeneratorSyncCheck@CvDllGameContext@@UAG_NW4PlayerTypes@@PAVICvRandom1@@_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?RandomNumberGeneratorSyncCheck@CvDllGameContext@@UAG_NW4PlayerTypes@@PAVICvRandom1@@_N@Z ENDP ; CvDllGameContext::RandomNumberGeneratorSyncCheck
PUBLIC	?TEMPOnHexUnitChanged@CvDllGameContext@@UAGXPAVICvUnit1@@@Z ; CvDllGameContext::TEMPOnHexUnitChanged
EXTRN	?PathAdd@@YAHPAVCvAStarNode@@0HPBXPAVCvAStar@@@Z:PROC ; PathAdd
EXTRN	?PathValid@@YAHPAVCvAStarNode@@0HPBXPAVCvAStar@@@Z:PROC ; PathValid
EXTRN	?PathDestValid@@YAHHHPBXPAVCvAStar@@@Z:PROC	; PathDestValid
EXTRN	?GeneratePath@CvAStar@@QAE_NHHHHH_N@Z:PROC	; CvAStar::GeneratePath
EXTRN	?UIPathAdd@@YAHPAVCvAStarNode@@0HPBXPAVCvAStar@@@Z:PROC ; UIPathAdd
EXTRN	?UIPathValid@@YAHPAVCvAStarNode@@0HPBXPAVCvAStar@@@Z:PROC ; UIPathValid
EXTRN	?UnwrapUnitPointer@CvGlobals@@QAEPAVCvUnit@@PAVICvUnit1@@@Z:PROC ; CvGlobals::UnwrapUnitPointer
; Function compile flags: /Ogtpy
;	COMDAT ?TEMPOnHexUnitChanged@CvDllGameContext@@UAGXPAVICvUnit1@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pUnit$ = 12						; size = 4
?TEMPOnHexUnitChanged@CvDllGameContext@@UAGXPAVICvUnit1@@@Z PROC ; CvDllGameContext::TEMPOnHexUnitChanged, COMDAT

; 1334 : 	CvUnit* pkUnit = GC.UnwrapUnitPointer(pUnit);

	mov	eax, DWORD PTR _pUnit$[esp-4]
	push	esi
	push	edi
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?UnwrapUnitPointer@CvGlobals@@QAEPAVCvUnit@@PAVICvUnit1@@@Z ; CvGlobals::UnwrapUnitPointer

; 1335 : 	CvTwoLayerPathFinder& thePathfinder = GC.getInterfacePathFinder();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	edi, eax
	call	?getInterfacePathFinder@CvGlobals@@QAEAAVCvTwoLayerPathFinder@@XZ ; CvGlobals::getInterfacePathFinder
	mov	esi, eax

; 1336 : 
; 1337 : 	// change the unit pathfinder to use these funcs instead
; 1338 : 	thePathfinder.SetDestValidFunc(NULL);
; 1339 : 	thePathfinder.SetValidFunc(UIPathValid);
; 1340 : 	thePathfinder.SetNotifyChildFunc(UIPathAdd);
; 1341 : 
; 1342 : 	// call the pathfinder
; 1343 : 	thePathfinder.SetData(pkUnit);

	cmp	BYTE PTR [esi+80], 0
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+16], OFFSET ?UIPathValid@@YAHPAVCvAStarNode@@0HPBXPAVCvAStar@@@Z ; UIPathValid
	mov	DWORD PTR [esi+20], OFFSET ?UIPathAdd@@YAHPAVCvAStarNode@@0HPBXPAVCvAStar@@@Z ; UIPathAdd
	je	SHORT $LN9@TEMPOnHexU
	cmp	DWORD PTR [esi+44], edi
	je	SHORT $LN9@TEMPOnHexU
	mov	BYTE PTR [esi+78], 1
$LN9@TEMPOnHexU:

; 1344 : #ifdef AUI_WARNING_FIXES
; 1345 : 	thePathfinder.GeneratePath(pkUnit->getX(), pkUnit->getY(), -1, -1, MOVE_DECLARE_WAR, false);
; 1346 : #else
; 1347 : 	bool bCanFindPath = thePathfinder.GeneratePath(pkUnit->getX(), pkUnit->getY(), -1, -1, MOVE_DECLARE_WAR, false);

	push	0
	push	32					; 00000020H
	push	-1
	mov	DWORD PTR [esi+44], edi
	mov	ecx, DWORD PTR [edi+88]
	mov	edx, DWORD PTR [edi+76]
	push	-1
	push	ecx
	push	edx
	mov	ecx, esi
	call	?GeneratePath@CvAStar@@QAE_NHHHHH_N@Z	; CvAStar::GeneratePath
	pop	edi

; 1348 : #endif
; 1349 : 
; 1350 : 	// change the unit pathfinder back
; 1351 : 	thePathfinder.SetDestValidFunc(PathDestValid);

	mov	DWORD PTR [esi+4], OFFSET ?PathDestValid@@YAHHHPBXPAVCvAStar@@@Z ; PathDestValid

; 1352 : 	thePathfinder.SetValidFunc(PathValid);

	mov	DWORD PTR [esi+16], OFFSET ?PathValid@@YAHPAVCvAStarNode@@0HPBXPAVCvAStar@@@Z ; PathValid

; 1353 : 	thePathfinder.SetNotifyChildFunc(PathAdd);

	mov	DWORD PTR [esi+20], OFFSET ?PathAdd@@YAHPAVCvAStarNode@@0HPBXPAVCvAStar@@@Z ; PathAdd

; 1354 : 	thePathfinder.ForceReset();

	mov	BYTE PTR [esi+78], 1
	pop	esi

; 1355 : 
; 1356 : }

	ret	8
?TEMPOnHexUnitChanged@CvDllGameContext@@UAGXPAVICvUnit1@@@Z ENDP ; CvDllGameContext::TEMPOnHexUnitChanged
_TEXT	ENDS
PUBLIC	?TEMPOnHexUnitChangedAttack@CvDllGameContext@@UAGXPAVICvUnit1@@@Z ; CvDllGameContext::TEMPOnHexUnitChangedAttack
EXTRN	?AttackPathAdd@@YAHPAVCvAStarNode@@0HPBXPAVCvAStar@@@Z:PROC ; AttackPathAdd
; Function compile flags: /Ogtpy
;	COMDAT ?TEMPOnHexUnitChangedAttack@CvDllGameContext@@UAGXPAVICvUnit1@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pUnit$ = 12						; size = 4
?TEMPOnHexUnitChangedAttack@CvDllGameContext@@UAGXPAVICvUnit1@@@Z PROC ; CvDllGameContext::TEMPOnHexUnitChangedAttack, COMDAT

; 1360 : 	CvUnit* pkUnit = GC.UnwrapUnitPointer(pUnit);

	mov	eax, DWORD PTR _pUnit$[esp-4]
	push	esi
	push	edi
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?UnwrapUnitPointer@CvGlobals@@QAEPAVCvUnit@@PAVICvUnit1@@@Z ; CvGlobals::UnwrapUnitPointer

; 1361 : 	CvTwoLayerPathFinder& thePathfinder = GC.getInterfacePathFinder();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	edi, eax
	call	?getInterfacePathFinder@CvGlobals@@QAEAAVCvTwoLayerPathFinder@@XZ ; CvGlobals::getInterfacePathFinder
	mov	esi, eax

; 1362 : 
; 1363 : 	// change the unit pathfinder to use these funcs instead
; 1364 : 	thePathfinder.SetDestValidFunc(NULL);
; 1365 : 	thePathfinder.SetValidFunc(UIPathValid);
; 1366 : 	thePathfinder.SetNotifyChildFunc(AttackPathAdd);
; 1367 : 
; 1368 : 	// call the pathfinder
; 1369 : 	thePathfinder.SetData(pkUnit);

	cmp	BYTE PTR [esi+80], 0
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+16], OFFSET ?UIPathValid@@YAHPAVCvAStarNode@@0HPBXPAVCvAStar@@@Z ; UIPathValid
	mov	DWORD PTR [esi+20], OFFSET ?AttackPathAdd@@YAHPAVCvAStarNode@@0HPBXPAVCvAStar@@@Z ; AttackPathAdd
	je	SHORT $LN9@TEMPOnHexU@2
	cmp	DWORD PTR [esi+44], edi
	je	SHORT $LN9@TEMPOnHexU@2
	mov	BYTE PTR [esi+78], 1
$LN9@TEMPOnHexU@2:

; 1370 : #ifdef AUI_WARNING_FIXES
; 1371 : 	thePathfinder.GeneratePath(pkUnit->getX(), pkUnit->getY(), -1, -1, MOVE_DECLARE_WAR, false);
; 1372 : #else
; 1373 : 	bool bCanFindPath = thePathfinder.GeneratePath(pkUnit->getX(), pkUnit->getY(), -1, -1, MOVE_DECLARE_WAR, false);

	push	0
	push	32					; 00000020H
	push	-1
	mov	DWORD PTR [esi+44], edi
	mov	ecx, DWORD PTR [edi+88]
	mov	edx, DWORD PTR [edi+76]
	push	-1
	push	ecx
	push	edx
	mov	ecx, esi
	call	?GeneratePath@CvAStar@@QAE_NHHHHH_N@Z	; CvAStar::GeneratePath
	pop	edi

; 1374 : #endif
; 1375 : 
; 1376 : 	// change the unit pathfinder back
; 1377 : 	thePathfinder.SetDestValidFunc(PathDestValid);

	mov	DWORD PTR [esi+4], OFFSET ?PathDestValid@@YAHHHPBXPAVCvAStar@@@Z ; PathDestValid

; 1378 : 	thePathfinder.SetValidFunc(PathValid);

	mov	DWORD PTR [esi+16], OFFSET ?PathValid@@YAHPAVCvAStarNode@@0HPBXPAVCvAStar@@@Z ; PathValid

; 1379 : 	thePathfinder.SetNotifyChildFunc(PathAdd);

	mov	DWORD PTR [esi+20], OFFSET ?PathAdd@@YAHPAVCvAStarNode@@0HPBXPAVCvAStar@@@Z ; PathAdd

; 1380 : 	thePathfinder.ForceReset();

	mov	BYTE PTR [esi+78], 1
	pop	esi

; 1381 : }

	ret	8
?TEMPOnHexUnitChangedAttack@CvDllGameContext@@UAGXPAVICvUnit1@@@Z ENDP ; CvDllGameContext::TEMPOnHexUnitChangedAttack
_TEXT	ENDS
PUBLIC	?begin@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@XZ ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::begin
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?begin@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@XZ PROC ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::begin, COMDAT
; _this$ = ecx

; 667  : 		return (iterator(_Myfirst));

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 668  : 		}

	ret	4
?begin@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@XZ ENDP ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@XZ ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@XZ PROC ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::end, COMDAT
; _this$ = ecx

; 677  : 		return (iterator(_Mylast));

	mov	ecx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 678  : 		}

	ret	4
?end@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@XZ ENDP ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::end
_TEXT	ENDS
PUBLIC	?begin@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@XZ ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::begin
; Function compile flags: /Ogtpy
;	COMDAT ?begin@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@XZ PROC ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::begin, COMDAT
; _this$ = ecx

; 667  : 		return (iterator(_Myfirst));

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 668  : 		}

	ret	4
?begin@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@XZ ENDP ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@XZ ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@XZ PROC ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::end, COMDAT
; _this$ = ecx

; 677  : 		return (iterator(_Mylast));

	mov	ecx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 678  : 		}

	ret	4
?end@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@XZ ENDP ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::end
_TEXT	ENDS
PUBLIC	?begin@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@XZ ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::begin
; Function compile flags: /Ogtpy
;	COMDAT ?begin@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@XZ PROC ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::begin, COMDAT
; _this$ = ecx

; 667  : 		return (iterator(_Myfirst));

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 668  : 		}

	ret	4
?begin@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@XZ ENDP ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@XZ ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@XZ PROC ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::end, COMDAT
; _this$ = ecx

; 677  : 		return (iterator(_Mylast));

	mov	ecx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 678  : 		}

	ret	4
?end@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@XZ ENDP ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::end
_TEXT	ENDS
PUBLIC	?begin@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAE?AV?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@2@XZ ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::begin
; Function compile flags: /Ogtpy
;	COMDAT ?begin@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAE?AV?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAE?AV?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@2@XZ PROC ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::begin, COMDAT
; _this$ = ecx

; 667  : 		return (iterator(_Myfirst));

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 668  : 		}

	ret	4
?begin@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAE?AV?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@2@XZ ENDP ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAE?AV?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@2@XZ ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAE?AV?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAE?AV?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@2@XZ PROC ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::end, COMDAT
; _this$ = ecx

; 677  : 		return (iterator(_Mylast));

	mov	ecx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 678  : 		}

	ret	4
?end@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAE?AV?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@2@XZ ENDP ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::end
_TEXT	ENDS
PUBLIC	?_Make_iter@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QBE?AV?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@@Z ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::_Make_iter
; Function compile flags: /Ogtpy
;	COMDAT ?_Make_iter@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QBE?AV?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QBE?AV?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@@Z PROC ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::_Make_iter, COMDAT
; _this$ = ecx

; 687  : 		return (iterator(_Where._Myptr));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	ecx, DWORD PTR __Where$[esp-4]
	mov	DWORD PTR [eax], ecx

; 688  : 		}

	ret	8
?_Make_iter@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QBE?AV?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@@Z ENDP ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::_Make_iter
_TEXT	ENDS
PUBLIC	?_Buy@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAE_NI@Z ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::_Buy
; Function compile flags: /Ogtpy
;	COMDAT ?_Buy@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAE_NI@Z
_TEXT	SEGMENT
__Capacity$ = 8						; size = 4
?_Buy@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAE_NI@Z PROC ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::_Buy, COMDAT
; _this$ = ecx

; 1102 : 		{	// allocate array with _Capacity elements

	push	esi

; 1103 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	xor	eax, eax
	push	edi

; 1104 : 		if (_Capacity == 0)

	mov	edi, DWORD PTR __Capacity$[esp+4]
	mov	esi, ecx
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi+12], eax
	cmp	edi, eax
	jne	SHORT $LN4@Buy
	pop	edi

; 1105 : 			return (false);

	xor	al, al
	pop	esi

; 1115 : 		}

	ret	4
$LN4@Buy:

; 1106 : 		else if (max_size() < _Capacity)

	cmp	edi, 536870911				; 1fffffffH
	jbe	SHORT $LN2@Buy

; 1107 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@KAXXZ ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::_Xlen
$LN16@Buy:
$LN2@Buy:

; 1108 : 		else
; 1109 : 			{	// nonempty array, allocate storage
; 1110 : 			_Myfirst = this->_Alval.allocate(_Capacity);

	push	eax
	push	edi
	call	??$_Allocate@U?$pair@IPAVCvRandom@@@std@@@std@@YAPAU?$pair@IPAVCvRandom@@@0@IPAU10@@Z ; std::_Allocate<std::pair<unsigned int,CvRandom *> >
	mov	DWORD PTR [esi+4], eax

; 1111 : 			_Mylast = _Myfirst;

	mov	DWORD PTR [esi+8], eax
	add	esp, 8

; 1112 : 			_Myend = _Myfirst + _Capacity;

	lea	eax, DWORD PTR [eax+edi*8]
	mov	DWORD PTR [esi+12], eax
	pop	edi

; 1113 : 			}
; 1114 : 		return (true);

	mov	al, 1
	pop	esi

; 1115 : 		}

	ret	4
$LN15@Buy:
?_Buy@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAE_NI@Z ENDP ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::_Buy
_TEXT	ENDS
PUBLIC	?_Make_iter@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QBE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@@Z ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::_Make_iter
; Function compile flags: /Ogtpy
;	COMDAT ?_Make_iter@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QBE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QBE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@@Z PROC ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::_Make_iter, COMDAT
; _this$ = ecx

; 687  : 		return (iterator(_Where._Myptr));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	ecx, DWORD PTR __Where$[esp-4]
	mov	DWORD PTR [eax], ecx

; 688  : 		}

	ret	8
?_Make_iter@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QBE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@@Z ENDP ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::_Make_iter
_TEXT	ENDS
PUBLIC	?_Buy@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAE_NI@Z ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::_Buy
; Function compile flags: /Ogtpy
;	COMDAT ?_Buy@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAE_NI@Z
_TEXT	SEGMENT
__Capacity$ = 8						; size = 4
?_Buy@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAE_NI@Z PROC ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::_Buy, COMDAT
; _this$ = ecx

; 1102 : 		{	// allocate array with _Capacity elements

	push	esi

; 1103 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	xor	eax, eax
	push	edi

; 1104 : 		if (_Capacity == 0)

	mov	edi, DWORD PTR __Capacity$[esp+4]
	mov	esi, ecx
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi+12], eax
	cmp	edi, eax
	jne	SHORT $LN4@Buy@2
	pop	edi

; 1105 : 			return (false);

	xor	al, al
	pop	esi

; 1115 : 		}

	ret	4
$LN4@Buy@2:

; 1106 : 		else if (max_size() < _Capacity)

	cmp	edi, 536870911				; 1fffffffH
	jbe	SHORT $LN2@Buy@2

; 1107 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@KAXXZ ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::_Xlen
$LN16@Buy@2:
$LN2@Buy@2:

; 1108 : 		else
; 1109 : 			{	// nonempty array, allocate storage
; 1110 : 			_Myfirst = this->_Alval.allocate(_Capacity);

	push	eax
	push	edi
	call	??$_Allocate@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@0@IPAU10@@Z ; std::_Allocate<std::pair<unsigned int,CvDllNetInitInfo *> >
	mov	DWORD PTR [esi+4], eax

; 1111 : 			_Mylast = _Myfirst;

	mov	DWORD PTR [esi+8], eax
	add	esp, 8

; 1112 : 			_Myend = _Myfirst + _Capacity;

	lea	eax, DWORD PTR [eax+edi*8]
	mov	DWORD PTR [esi+12], eax
	pop	edi

; 1113 : 			}
; 1114 : 		return (true);

	mov	al, 1
	pop	esi

; 1115 : 		}

	ret	4
$LN15@Buy@2:
?_Buy@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAE_NI@Z ENDP ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::_Buy
_TEXT	ENDS
PUBLIC	?_Make_iter@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QBE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@@Z ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::_Make_iter
; Function compile flags: /Ogtpy
;	COMDAT ?_Make_iter@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QBE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QBE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@@Z PROC ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::_Make_iter, COMDAT
; _this$ = ecx

; 687  : 		return (iterator(_Where._Myptr));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	ecx, DWORD PTR __Where$[esp-4]
	mov	DWORD PTR [eax], ecx

; 688  : 		}

	ret	8
?_Make_iter@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QBE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@@Z ENDP ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::_Make_iter
_TEXT	ENDS
PUBLIC	?_Buy@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAE_NI@Z ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::_Buy
; Function compile flags: /Ogtpy
;	COMDAT ?_Buy@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAE_NI@Z
_TEXT	SEGMENT
__Capacity$ = 8						; size = 4
?_Buy@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAE_NI@Z PROC ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::_Buy, COMDAT
; _this$ = ecx

; 1102 : 		{	// allocate array with _Capacity elements

	push	esi

; 1103 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	xor	eax, eax
	push	edi

; 1104 : 		if (_Capacity == 0)

	mov	edi, DWORD PTR __Capacity$[esp+4]
	mov	esi, ecx
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi+12], eax
	cmp	edi, eax
	jne	SHORT $LN4@Buy@3
	pop	edi

; 1105 : 			return (false);

	xor	al, al
	pop	esi

; 1115 : 		}

	ret	4
$LN4@Buy@3:

; 1106 : 		else if (max_size() < _Capacity)

	cmp	edi, 536870911				; 1fffffffH
	jbe	SHORT $LN2@Buy@3

; 1107 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@KAXXZ ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::_Xlen
$LN16@Buy@3:
$LN2@Buy@3:

; 1108 : 		else
; 1109 : 			{	// nonempty array, allocate storage
; 1110 : 			_Myfirst = this->_Alval.allocate(_Capacity);

	push	eax
	push	edi
	call	??$_Allocate@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@IPAU10@@Z ; std::_Allocate<std::pair<unsigned int,CvDllNetLoadGameInfo *> >
	mov	DWORD PTR [esi+4], eax

; 1111 : 			_Mylast = _Myfirst;

	mov	DWORD PTR [esi+8], eax
	add	esp, 8

; 1112 : 			_Myend = _Myfirst + _Capacity;

	lea	eax, DWORD PTR [eax+edi*8]
	mov	DWORD PTR [esi+12], eax
	pop	edi

; 1113 : 			}
; 1114 : 		return (true);

	mov	al, 1
	pop	esi

; 1115 : 		}

	ret	4
$LN15@Buy@3:
?_Buy@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAE_NI@Z ENDP ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::_Buy
_TEXT	ENDS
PUBLIC	?_Buy@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAE_NI@Z ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::_Buy
; Function compile flags: /Ogtpy
;	COMDAT ?_Buy@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
__Capacity$ = 8						; size = 4
?_Buy@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAE_NI@Z PROC ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::_Buy, COMDAT
; _this$ = ecx

; 1102 : 		{	// allocate array with _Capacity elements

	push	esi

; 1103 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	xor	eax, eax
	push	edi

; 1104 : 		if (_Capacity == 0)

	mov	edi, DWORD PTR __Capacity$[esp+4]
	mov	esi, ecx
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi+12], eax
	cmp	edi, eax
	jne	SHORT $LN4@Buy@4
	pop	edi

; 1105 : 			return (false);

	xor	al, al
	pop	esi

; 1115 : 		}

	ret	4
$LN4@Buy@4:

; 1106 : 		else if (max_size() < _Capacity)

	cmp	edi, 357913941				; 15555555H
	jbe	SHORT $LN2@Buy@4

; 1107 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@KAXXZ ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::_Xlen
$LN16@Buy@4:
$LN2@Buy@4:

; 1108 : 		else
; 1109 : 			{	// nonempty array, allocate storage
; 1110 : 			_Myfirst = this->_Alval.allocate(_Capacity);

	push	eax
	push	edi
	call	??$_Allocate@UCvDllPathFinderUpdateListData@@@std@@YAPAUCvDllPathFinderUpdateListData@@IPAU1@@Z ; std::_Allocate<CvDllPathFinderUpdateListData>

; 1111 : 			_Mylast = _Myfirst;
; 1112 : 			_Myend = _Myfirst + _Capacity;

	lea	ecx, DWORD PTR [edi+edi*2]
	add	esp, 8
	lea	edx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	pop	edi
	mov	DWORD PTR [esi+12], edx

; 1113 : 			}
; 1114 : 		return (true);

	mov	al, 1
	pop	esi

; 1115 : 		}

	ret	4
$LN15@Buy@4:
?_Buy@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAE_NI@Z ENDP ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::_Buy
_TEXT	ENDS
PUBLIC	??H?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::operator+
; Function compile flags: /Ogtpy
;	COMDAT ??H?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??H?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QBE?AV01@H@Z PROC ; std::_Vector_iterator<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::operator+, COMDAT
; _this$ = ecx

; 381  : 		_Myt _Tmp = *this;
; 382  : 		return (_Tmp += _Off);

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Off$[esp-4]
	lea	edx, DWORD PTR [eax+ecx*8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], edx

; 383  : 		}

	ret	8
??H?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QBE?AV01@H@Z ENDP ; std::_Vector_iterator<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::operator+
_TEXT	ENDS
PUBLIC	??H?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::operator+
; Function compile flags: /Ogtpy
;	COMDAT ??H?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??H?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QBE?AV01@H@Z PROC ; std::_Vector_iterator<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::operator+, COMDAT
; _this$ = ecx

; 381  : 		_Myt _Tmp = *this;
; 382  : 		return (_Tmp += _Off);

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Off$[esp-4]
	lea	edx, DWORD PTR [eax+ecx*8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], edx

; 383  : 		}

	ret	8
??H?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QBE?AV01@H@Z ENDP ; std::_Vector_iterator<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::operator+
_TEXT	ENDS
PUBLIC	??H?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::operator+
; Function compile flags: /Ogtpy
;	COMDAT ??H?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??H?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QBE?AV01@H@Z PROC ; std::_Vector_iterator<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::operator+, COMDAT
; _this$ = ecx

; 381  : 		_Myt _Tmp = *this;
; 382  : 		return (_Tmp += _Off);

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Off$[esp-4]
	lea	edx, DWORD PTR [eax+ecx*8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], edx

; 383  : 		}

	ret	8
??H?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QBE?AV01@H@Z ENDP ; std::_Vector_iterator<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::operator+
_TEXT	ENDS
PUBLIC	??H?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::operator+
; Function compile flags: /Ogtpy
;	COMDAT ??H?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??H?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QBE?AV01@H@Z PROC ; std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::operator+, COMDAT
; _this$ = ecx

; 381  : 		_Myt _Tmp = *this;
; 382  : 		return (_Tmp += _Off);

	mov	eax, DWORD PTR __Off$[esp-4]
	mov	ecx, DWORD PTR [ecx]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], edx

; 383  : 		}

	ret	8
??H?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QBE?AV01@H@Z ENDP ; std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::operator+
_TEXT	ENDS
PUBLIC	??$_Unchecked_move_backward@PAU?$pair@IPAVCvRandom@@@std@@PAU12@@stdext@@YAPAU?$pair@IPAVCvRandom@@@std@@PAU12@00@Z ; stdext::_Unchecked_move_backward<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Unchecked_move_backward@PAU?$pair@IPAVCvRandom@@@std@@PAU12@@stdext@@YAPAU?$pair@IPAVCvRandom@@@std@@PAU12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Unchecked_move_backward@PAU?$pair@IPAVCvRandom@@@std@@PAU12@@stdext@@YAPAU?$pair@IPAVCvRandom@@@std@@PAU12@00@Z PROC ; stdext::_Unchecked_move_backward<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> *>, COMDAT

; 3695 : 		return (_STD _Move_backward_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3696 : 			_STD _Iter_random(_First, _Dest), _STD _Move_cat(_Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	edx, ecx
	je	SHORT $LN11@Unchecked_
	push	esi
$LL12@Unchecked_:
	mov	esi, DWORD PTR [ecx-8]
	sub	ecx, 8
	sub	eax, 8
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	cmp	ecx, edx
	jne	SHORT $LL12@Unchecked_
	pop	esi
$LN11@Unchecked_:

; 3697 : 	}

	ret	0
??$_Unchecked_move_backward@PAU?$pair@IPAVCvRandom@@@std@@PAU12@@stdext@@YAPAU?$pair@IPAVCvRandom@@@std@@PAU12@00@Z ENDP ; stdext::_Unchecked_move_backward<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> *>
_TEXT	ENDS
PUBLIC	??$_Unchecked_move_backward@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@@stdext@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@00@Z ; stdext::_Unchecked_move_backward<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Unchecked_move_backward@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@@stdext@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Unchecked_move_backward@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@@stdext@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@00@Z PROC ; stdext::_Unchecked_move_backward<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> *>, COMDAT

; 3695 : 		return (_STD _Move_backward_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3696 : 			_STD _Iter_random(_First, _Dest), _STD _Move_cat(_Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	edx, ecx
	je	SHORT $LN11@Unchecked_@2
	push	esi
$LL12@Unchecked_@2:
	mov	esi, DWORD PTR [ecx-8]
	sub	ecx, 8
	sub	eax, 8
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	cmp	ecx, edx
	jne	SHORT $LL12@Unchecked_@2
	pop	esi
$LN11@Unchecked_@2:

; 3697 : 	}

	ret	0
??$_Unchecked_move_backward@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@@stdext@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@00@Z ENDP ; stdext::_Unchecked_move_backward<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> *>
_TEXT	ENDS
PUBLIC	??$_Unchecked_move_backward@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@@stdext@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@00@Z ; stdext::_Unchecked_move_backward<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Unchecked_move_backward@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@@stdext@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Unchecked_move_backward@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@@stdext@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@00@Z PROC ; stdext::_Unchecked_move_backward<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> *>, COMDAT

; 3695 : 		return (_STD _Move_backward_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3696 : 			_STD _Iter_random(_First, _Dest), _STD _Move_cat(_Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	edx, ecx
	je	SHORT $LN11@Unchecked_@3
	push	esi
$LL12@Unchecked_@3:
	mov	esi, DWORD PTR [ecx-8]
	sub	ecx, 8
	sub	eax, 8
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	cmp	ecx, edx
	jne	SHORT $LL12@Unchecked_@3
	pop	esi
$LN11@Unchecked_@3:

; 3697 : 	}

	ret	0
??$_Unchecked_move_backward@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@@stdext@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@00@Z ENDP ; stdext::_Unchecked_move_backward<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> *>
_TEXT	ENDS
PUBLIC	??$_Unchecked_move_backward@PAUCvDllPathFinderUpdateListData@@PAU1@@stdext@@YAPAUCvDllPathFinderUpdateListData@@PAU1@00@Z ; stdext::_Unchecked_move_backward<CvDllPathFinderUpdateListData *,CvDllPathFinderUpdateListData *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Unchecked_move_backward@PAUCvDllPathFinderUpdateListData@@PAU1@@stdext@@YAPAUCvDllPathFinderUpdateListData@@PAU1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Unchecked_move_backward@PAUCvDllPathFinderUpdateListData@@PAU1@@stdext@@YAPAUCvDllPathFinderUpdateListData@@PAU1@00@Z PROC ; stdext::_Unchecked_move_backward<CvDllPathFinderUpdateListData *,CvDllPathFinderUpdateListData *>, COMDAT

; 3695 : 		return (_STD _Move_backward_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3696 : 			_STD _Iter_random(_First, _Dest), _STD _Move_cat(_Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	edx, ecx
	je	SHORT $LN11@Unchecked_@4
	push	esi
$LL12@Unchecked_@4:
	mov	esi, DWORD PTR [ecx-12]
	sub	ecx, 12					; 0000000cH
	sub	eax, 12					; 0000000cH
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	mov	esi, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], esi
	cmp	ecx, edx
	jne	SHORT $LL12@Unchecked_@4
	pop	esi
$LN11@Unchecked_@4:

; 3697 : 	}

	ret	0
??$_Unchecked_move_backward@PAUCvDllPathFinderUpdateListData@@PAU1@@stdext@@YAPAUCvDllPathFinderUpdateListData@@PAU1@00@Z ENDP ; stdext::_Unchecked_move_backward<CvDllPathFinderUpdateListData *,CvDllPathFinderUpdateListData *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@std@@@std@@YAXPAU?$pair@IPAVCvRandom@@@0@0AAV?$allocator@U?$pair@IPAVCvRandom@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::pair<unsigned int,CvRandom *> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@std@@@std@@YAXPAU?$pair@IPAVCvRandom@@@0@0AAV?$allocator@U?$pair@IPAVCvRandom@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@std@@@std@@YAXPAU?$pair@IPAVCvRandom@@@0@0AAV?$allocator@U?$pair@IPAVCvRandom@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<std::pair<unsigned int,CvRandom *> > >, COMDAT

; 233  : 	for (; _First != _Last; ++_First)
; 234  : 		_Al.destroy(_First);
; 235  : 	}

	ret	0
??$_Destroy_range@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@std@@@std@@YAXPAU?$pair@IPAVCvRandom@@@0@0AAV?$allocator@U?$pair@IPAVCvRandom@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::pair<unsigned int,CvRandom *> > >
_TEXT	ENDS
PUBLIC	??$_Uninit_fill_n@PAU?$pair@IPAVCvRandom@@@std@@IU12@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@YAXPAU?$pair@IPAVCvRandom@@@0@IABU10@AAV?$allocator@U?$pair@IPAVCvRandom@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<std::pair<unsigned int,CvRandom *> *,unsigned int,std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$_Uninit_fill_n@PAU?$pair@IPAVCvRandom@@@std@@IU12@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@YAXPAU?$pair@IPAVCvRandom@@@0@IABU10@AAV?$allocator@U?$pair@IPAVCvRandom@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_fill_n@PAU?$pair@IPAVCvRandom@@@std@@IU12@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@YAXPAU?$pair@IPAVCvRandom@@@0@IABU10@AAV?$allocator@U?$pair@IPAVCvRandom@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_fill_n<std::pair<unsigned int,CvRandom *> *,unsigned int,std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >, COMDAT

; 394  : 
; 395  :  #if _HAS_ITERATOR_DEBUGGING
; 396  : //	if (_Count < 0)
; 397  : //		_DEBUG_ERROR("negative count in uninitialized fill");
; 398  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 399  : 
; 400  : 	_FwdIt _Next = _First;
; 401  : 
; 402  : 	_TRY_BEGIN
; 403  : 	for (; 0 < _Count; --_Count, ++_First)

	mov	ecx, DWORD PTR __Count$[esp-4]
	test	ecx, ecx
	jbe	SHORT $LN4@Uninit_fil
	mov	edx, DWORD PTR __Val$[esp-4]
	mov	eax, DWORD PTR __First$[esp-4]
	push	esi
$LL6@Uninit_fil:

; 404  : 		_Al.construct(_First, _Val);

	test	eax, eax
	je	SHORT $LN5@Uninit_fil
	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], esi
$LN5@Uninit_fil:
	dec	ecx
	add	eax, 8
	test	ecx, ecx
	ja	SHORT $LL6@Uninit_fil
	pop	esi
$LN4@Uninit_fil:

; 405  : 	_CATCH_ALL
; 406  : 	for (; _Next != _First; ++_Next)
; 407  : 		_Al.destroy(_Next);
; 408  : 	_RERAISE;
; 409  : 	_CATCH_END
; 410  : 	}

	ret	0
??$_Uninit_fill_n@PAU?$pair@IPAVCvRandom@@@std@@IU12@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@YAXPAU?$pair@IPAVCvRandom@@@0@IABU10@AAV?$allocator@U?$pair@IPAVCvRandom@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_fill_n<std::pair<unsigned int,CvRandom *> *,unsigned int,std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@@std@@YAXPAU?$pair@IPAVCvDllNetInitInfo@@@0@0AAV?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@@std@@YAXPAU?$pair@IPAVCvDllNetInitInfo@@@0@0AAV?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@@std@@YAXPAU?$pair@IPAVCvDllNetInitInfo@@@0@0AAV?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >, COMDAT

; 233  : 	for (; _First != _Last; ++_First)
; 234  : 		_Al.destroy(_First);
; 235  : 	}

	ret	0
??$_Destroy_range@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@@std@@YAXPAU?$pair@IPAVCvDllNetInitInfo@@@0@0AAV?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >
_TEXT	ENDS
PUBLIC	??$_Uninit_fill_n@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@IU12@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@YAXPAU?$pair@IPAVCvDllNetInitInfo@@@0@IABU10@AAV?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<std::pair<unsigned int,CvDllNetInitInfo *> *,unsigned int,std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$_Uninit_fill_n@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@IU12@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@YAXPAU?$pair@IPAVCvDllNetInitInfo@@@0@IABU10@AAV?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_fill_n@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@IU12@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@YAXPAU?$pair@IPAVCvDllNetInitInfo@@@0@IABU10@AAV?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_fill_n<std::pair<unsigned int,CvDllNetInitInfo *> *,unsigned int,std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >, COMDAT

; 394  : 
; 395  :  #if _HAS_ITERATOR_DEBUGGING
; 396  : //	if (_Count < 0)
; 397  : //		_DEBUG_ERROR("negative count in uninitialized fill");
; 398  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 399  : 
; 400  : 	_FwdIt _Next = _First;
; 401  : 
; 402  : 	_TRY_BEGIN
; 403  : 	for (; 0 < _Count; --_Count, ++_First)

	mov	ecx, DWORD PTR __Count$[esp-4]
	test	ecx, ecx
	jbe	SHORT $LN4@Uninit_fil@2
	mov	edx, DWORD PTR __Val$[esp-4]
	mov	eax, DWORD PTR __First$[esp-4]
	push	esi
$LL6@Uninit_fil@2:

; 404  : 		_Al.construct(_First, _Val);

	test	eax, eax
	je	SHORT $LN5@Uninit_fil@2
	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], esi
$LN5@Uninit_fil@2:
	dec	ecx
	add	eax, 8
	test	ecx, ecx
	ja	SHORT $LL6@Uninit_fil@2
	pop	esi
$LN4@Uninit_fil@2:

; 405  : 	_CATCH_ALL
; 406  : 	for (; _Next != _First; ++_Next)
; 407  : 		_Al.destroy(_Next);
; 408  : 	_RERAISE;
; 409  : 	_CATCH_END
; 410  : 	}

	ret	0
??$_Uninit_fill_n@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@IU12@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@YAXPAU?$pair@IPAVCvDllNetInitInfo@@@0@IABU10@AAV?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_fill_n<std::pair<unsigned int,CvDllNetInitInfo *> *,unsigned int,std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@@std@@YAXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@0AAV?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@@std@@YAXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@0AAV?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@@std@@YAXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@0AAV?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >, COMDAT

; 233  : 	for (; _First != _Last; ++_First)
; 234  : 		_Al.destroy(_First);
; 235  : 	}

	ret	0
??$_Destroy_range@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@@std@@YAXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@0AAV?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >
_TEXT	ENDS
PUBLIC	??$_Uninit_fill_n@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@IU12@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@YAXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@IABU10@AAV?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,unsigned int,std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$_Uninit_fill_n@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@IU12@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@YAXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@IABU10@AAV?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_fill_n@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@IU12@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@YAXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@IABU10@AAV?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_fill_n<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,unsigned int,std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >, COMDAT

; 394  : 
; 395  :  #if _HAS_ITERATOR_DEBUGGING
; 396  : //	if (_Count < 0)
; 397  : //		_DEBUG_ERROR("negative count in uninitialized fill");
; 398  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 399  : 
; 400  : 	_FwdIt _Next = _First;
; 401  : 
; 402  : 	_TRY_BEGIN
; 403  : 	for (; 0 < _Count; --_Count, ++_First)

	mov	ecx, DWORD PTR __Count$[esp-4]
	test	ecx, ecx
	jbe	SHORT $LN4@Uninit_fil@3
	mov	edx, DWORD PTR __Val$[esp-4]
	mov	eax, DWORD PTR __First$[esp-4]
	push	esi
$LL6@Uninit_fil@3:

; 404  : 		_Al.construct(_First, _Val);

	test	eax, eax
	je	SHORT $LN5@Uninit_fil@3
	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], esi
$LN5@Uninit_fil@3:
	dec	ecx
	add	eax, 8
	test	ecx, ecx
	ja	SHORT $LL6@Uninit_fil@3
	pop	esi
$LN4@Uninit_fil@3:

; 405  : 	_CATCH_ALL
; 406  : 	for (; _Next != _First; ++_Next)
; 407  : 		_Al.destroy(_Next);
; 408  : 	_RERAISE;
; 409  : 	_CATCH_END
; 410  : 	}

	ret	0
??$_Uninit_fill_n@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@IU12@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@YAXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@IABU10@AAV?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_fill_n<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,unsigned int,std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@YAXPAUCvDllPathFinderUpdateListData@@0AAV?$allocator@UCvDllPathFinderUpdateListData@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<CvDllPathFinderUpdateListData> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@YAXPAUCvDllPathFinderUpdateListData@@0AAV?$allocator@UCvDllPathFinderUpdateListData@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@YAXPAUCvDllPathFinderUpdateListData@@0AAV?$allocator@UCvDllPathFinderUpdateListData@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<CvDllPathFinderUpdateListData> >, COMDAT

; 233  : 	for (; _First != _Last; ++_First)
; 234  : 		_Al.destroy(_First);
; 235  : 	}

	ret	0
??$_Destroy_range@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@YAXPAUCvDllPathFinderUpdateListData@@0AAV?$allocator@UCvDllPathFinderUpdateListData@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<CvDllPathFinderUpdateListData> >
_TEXT	ENDS
PUBLIC	??$_Uninit_fill_n@PAUCvDllPathFinderUpdateListData@@IU1@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@YAXPAUCvDllPathFinderUpdateListData@@IABU1@AAV?$allocator@UCvDllPathFinderUpdateListData@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<CvDllPathFinderUpdateListData *,unsigned int,CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$_Uninit_fill_n@PAUCvDllPathFinderUpdateListData@@IU1@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@YAXPAUCvDllPathFinderUpdateListData@@IABU1@AAV?$allocator@UCvDllPathFinderUpdateListData@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_fill_n@PAUCvDllPathFinderUpdateListData@@IU1@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@YAXPAUCvDllPathFinderUpdateListData@@IABU1@AAV?$allocator@UCvDllPathFinderUpdateListData@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_fill_n<CvDllPathFinderUpdateListData *,unsigned int,CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >, COMDAT

; 394  : 
; 395  :  #if _HAS_ITERATOR_DEBUGGING
; 396  : //	if (_Count < 0)
; 397  : //		_DEBUG_ERROR("negative count in uninitialized fill");
; 398  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 399  : 
; 400  : 	_FwdIt _Next = _First;
; 401  : 
; 402  : 	_TRY_BEGIN
; 403  : 	for (; 0 < _Count; --_Count, ++_First)

	mov	ecx, DWORD PTR __Count$[esp-4]
	test	ecx, ecx
	jbe	SHORT $LN4@Uninit_fil@4
	mov	edx, DWORD PTR __Val$[esp-4]
	mov	eax, DWORD PTR __First$[esp-4]
	push	esi
$LL6@Uninit_fil@4:

; 404  : 		_Al.construct(_First, _Val);

	test	eax, eax
	je	SHORT $LN5@Uninit_fil@4
	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], esi
	mov	esi, DWORD PTR [edx+8]
	mov	DWORD PTR [eax+8], esi
$LN5@Uninit_fil@4:
	dec	ecx
	add	eax, 12					; 0000000cH
	test	ecx, ecx
	ja	SHORT $LL6@Uninit_fil@4
	pop	esi
$LN4@Uninit_fil@4:

; 405  : 	_CATCH_ALL
; 406  : 	for (; _Next != _First; ++_Next)
; 407  : 		_Al.destroy(_Next);
; 408  : 	_RERAISE;
; 409  : 	_CATCH_END
; 410  : 	}

	ret	0
??$_Uninit_fill_n@PAUCvDllPathFinderUpdateListData@@IU1@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@YAXPAUCvDllPathFinderUpdateListData@@IABU1@AAV?$allocator@UCvDllPathFinderUpdateListData@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_fill_n<CvDllPathFinderUpdateListData *,unsigned int,CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >
_TEXT	ENDS
PUBLIC	??$iter_swap@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@V12@@std@@YAXV?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@0@0@Z ; std::iter_swap<std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >,std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$iter_swap@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@V12@@std@@YAXV?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$iter_swap@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@V12@@std@@YAXV?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@0@0@Z PROC ; std::iter_swap<std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >,std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> > >, COMDAT

; 594  : 	swap(*_Left, *_Right);

	mov	ecx, DWORD PTR __Left$[esp-4]
	mov	eax, DWORD PTR __Right$[esp-4]
	mov	edx, ecx
	cmp	ecx, eax
	je	SHORT $LN11@iter_swap
	push	ebx
	mov	ebx, DWORD PTR [eax]
	push	esi
	mov	esi, DWORD PTR [ecx]
	push	edi
	mov	edi, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx], ebx
	mov	ebx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ebx
	mov	ebx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+8], ebx
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [eax+4], edi
	pop	edi
	pop	esi
	mov	DWORD PTR [eax+8], ecx
	pop	ebx
$LN11@iter_swap:

; 595  : 	}

	ret	0
??$iter_swap@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@V12@@std@@YAXV?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@0@0@Z ENDP ; std::iter_swap<std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >,std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> > >
_TEXT	ENDS
PUBLIC	??$unchecked_uninitialized_copy@PAU?$pair@IPAVCvRandom@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@stdext@@YAPAU?$pair@IPAVCvRandom@@@std@@PAU12@00AAV?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@Z ; stdext::unchecked_uninitialized_copy<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> *,std::allocator<std::pair<unsigned int,CvRandom *> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$unchecked_uninitialized_copy@PAU?$pair@IPAVCvRandom@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@stdext@@YAPAU?$pair@IPAVCvRandom@@@std@@PAU12@00AAV?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@Z
_TEXT	SEGMENT
$T231708 = -4						; size = 1
__Cat$231713 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_copy@PAU?$pair@IPAVCvRandom@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@stdext@@YAPAU?$pair@IPAVCvRandom@@@std@@PAU12@00AAV?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@Z PROC ; stdext::unchecked_uninitialized_copy<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> *,std::allocator<std::pair<unsigned int,CvRandom *> > >, COMDAT

; 819  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

	push	ecx

; 820  : 	return (_STD _Uninit_copy(_CHECKED_BASE(_First),
; 821  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 822  : 		_STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T231708[esp+4], 0
	mov	eax, DWORD PTR $T231708[esp+4]
	mov	ecx, DWORD PTR __Cat$231713[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAU?$pair@IPAVCvRandom@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@YAPAU?$pair@IPAVCvRandom@@@0@PAU10@00AAV?$allocator@U?$pair@IPAVCvRandom@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> *,std::allocator<std::pair<unsigned int,CvRandom *> > >

; 823  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$unchecked_uninitialized_copy@PAU?$pair@IPAVCvRandom@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@stdext@@YAPAU?$pair@IPAVCvRandom@@@std@@PAU12@00AAV?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@Z ENDP ; stdext::unchecked_uninitialized_copy<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> *,std::allocator<std::pair<unsigned int,CvRandom *> > >
_TEXT	ENDS
PUBLIC	??$unchecked_uninitialized_copy@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@stdext@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@00AAV?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@Z ; stdext::unchecked_uninitialized_copy<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> *,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >
; Function compile flags: /Ogtpy
;	COMDAT ??$unchecked_uninitialized_copy@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@stdext@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@00AAV?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@Z
_TEXT	SEGMENT
$T231717 = -4						; size = 1
__Cat$231722 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_copy@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@stdext@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@00AAV?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@Z PROC ; stdext::unchecked_uninitialized_copy<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> *,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >, COMDAT

; 819  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

	push	ecx

; 820  : 	return (_STD _Uninit_copy(_CHECKED_BASE(_First),
; 821  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 822  : 		_STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T231717[esp+4], 0
	mov	eax, DWORD PTR $T231717[esp+4]
	mov	ecx, DWORD PTR __Cat$231722[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@0@PAU10@00AAV?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> *,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >

; 823  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$unchecked_uninitialized_copy@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@stdext@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@00AAV?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@Z ENDP ; stdext::unchecked_uninitialized_copy<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> *,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >
_TEXT	ENDS
PUBLIC	??$unchecked_uninitialized_copy@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@stdext@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@00AAV?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@Z ; stdext::unchecked_uninitialized_copy<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >
; Function compile flags: /Ogtpy
;	COMDAT ??$unchecked_uninitialized_copy@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@stdext@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@00AAV?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@Z
_TEXT	SEGMENT
$T231726 = -4						; size = 1
__Cat$231730 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_copy@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@stdext@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@00AAV?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@Z PROC ; stdext::unchecked_uninitialized_copy<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >, COMDAT

; 819  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

	push	ecx

; 820  : 	return (_STD _Uninit_copy(_CHECKED_BASE(_First),
; 821  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 822  : 		_STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T231726[esp+4], 0
	mov	eax, DWORD PTR $T231726[esp+4]
	mov	ecx, DWORD PTR __Cat$231730[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@PAU10@00AAV?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >

; 823  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$unchecked_uninitialized_copy@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@stdext@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@00AAV?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@Z ENDP ; stdext::unchecked_uninitialized_copy<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >
_TEXT	ENDS
PUBLIC	??$unchecked_uninitialized_copy@PAUCvDllPathFinderUpdateListData@@PAU1@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@stdext@@YAPAUCvDllPathFinderUpdateListData@@PAU1@00AAV?$allocator@UCvDllPathFinderUpdateListData@@@std@@@Z ; stdext::unchecked_uninitialized_copy<CvDllPathFinderUpdateListData *,CvDllPathFinderUpdateListData *,std::allocator<CvDllPathFinderUpdateListData> >
; Function compile flags: /Ogtpy
;	COMDAT ??$unchecked_uninitialized_copy@PAUCvDllPathFinderUpdateListData@@PAU1@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@stdext@@YAPAUCvDllPathFinderUpdateListData@@PAU1@00AAV?$allocator@UCvDllPathFinderUpdateListData@@@std@@@Z
_TEXT	SEGMENT
$T231735 = -4						; size = 1
__Cat$231739 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_copy@PAUCvDllPathFinderUpdateListData@@PAU1@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@stdext@@YAPAUCvDllPathFinderUpdateListData@@PAU1@00AAV?$allocator@UCvDllPathFinderUpdateListData@@@std@@@Z PROC ; stdext::unchecked_uninitialized_copy<CvDllPathFinderUpdateListData *,CvDllPathFinderUpdateListData *,std::allocator<CvDllPathFinderUpdateListData> >, COMDAT

; 819  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

	push	ecx

; 820  : 	return (_STD _Uninit_copy(_CHECKED_BASE(_First),
; 821  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 822  : 		_STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T231735[esp+4], 0
	mov	eax, DWORD PTR $T231735[esp+4]
	mov	ecx, DWORD PTR __Cat$231739[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAUCvDllPathFinderUpdateListData@@PAU1@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@YAPAUCvDllPathFinderUpdateListData@@PAU1@00AAV?$allocator@UCvDllPathFinderUpdateListData@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<CvDllPathFinderUpdateListData *,CvDllPathFinderUpdateListData *,std::allocator<CvDllPathFinderUpdateListData> >

; 823  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$unchecked_uninitialized_copy@PAUCvDllPathFinderUpdateListData@@PAU1@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@stdext@@YAPAUCvDllPathFinderUpdateListData@@PAU1@00AAV?$allocator@UCvDllPathFinderUpdateListData@@@std@@@Z ENDP ; stdext::unchecked_uninitialized_copy<CvDllPathFinderUpdateListData *,CvDllPathFinderUpdateListData *,std::allocator<CvDllPathFinderUpdateListData> >
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@PAUCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@2@@std@@YAPAUCvDllPathFinderUpdateListData@@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@0@0PAU1@AAV?$allocator@UCvDllPathFinderUpdateListData@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >,CvDllPathFinderUpdateListData *,std::allocator<CvDllPathFinderUpdateListData> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Uninit_copy@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@PAUCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@2@@std@@YAPAUCvDllPathFinderUpdateListData@@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@0@0PAU1@AAV?$allocator@UCvDllPathFinderUpdateListData@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_copy@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@PAUCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@2@@std@@YAPAUCvDllPathFinderUpdateListData@@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@0@0PAU1@AAV?$allocator@UCvDllPathFinderUpdateListData@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_copy<std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >,CvDllPathFinderUpdateListData *,std::allocator<CvDllPathFinderUpdateListData> >, COMDAT

; 125  : 	_DEBUG_RANGE(_First, _Last);
; 126  : 	_DEBUG_POINTER(_Dest);
; 127  : 	_FwdIt _Next = _Dest;
; 128  : 
; 129  : 	_TRY_BEGIN
; 130  : 	for (; _First != _Last; ++_Dest, ++_First)

	mov	ecx, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	ecx, edx
	je	SHORT $LN4@Uninit_cop@5
	push	esi
$LL16@Uninit_cop@5:

; 131  : 		_Al.construct(_Dest, *_First);

	test	eax, eax
	je	SHORT $LN5@Uninit_cop@5
	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	mov	esi, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], esi
$LN5@Uninit_cop@5:
	add	ecx, 12					; 0000000cH
	add	eax, 12					; 0000000cH
	mov	DWORD PTR __First$[esp], ecx
	cmp	ecx, edx
	jne	SHORT $LL16@Uninit_cop@5
	pop	esi
$LN4@Uninit_cop@5:

; 132  : 	_CATCH_ALL
; 133  : 	for (; _Next != _Dest; ++_Next)
; 134  : 		_Al.destroy(_Next);
; 135  : 	_RERAISE;
; 136  : 	_CATCH_END
; 137  : 	return (_Dest);
; 138  : 	}

	ret	0
??$_Uninit_copy@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@PAUCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@2@@std@@YAPAUCvDllPathFinderUpdateListData@@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@0@0PAU1@AAV?$allocator@UCvDllPathFinderUpdateListData@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >,CvDllPathFinderUpdateListData *,std::allocator<CvDllPathFinderUpdateListData> >
_TEXT	ENDS
PUBLIC	??_7ICvGameContext3@@6B@			; ICvGameContext3::`vftable'
PUBLIC	??0ICvGameContext3@@QAE@XZ			; ICvGameContext3::ICvGameContext3
PUBLIC	??_R4ICvGameContext3@@6B@			; ICvGameContext3::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVICvGameContext3@@@8			; ICvGameContext3 `RTTI Type Descriptor'
PUBLIC	??_R3ICvGameContext3@@8				; ICvGameContext3::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICvGameContext3@@8				; ICvGameContext3::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICvGameContext3@@8		; ICvGameContext3::`RTTI Base Class Descriptor at (0,-1,0,64)'
;	COMDAT ??_R1A@?0A@EA@ICvGameContext3@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICvGameContext3@@8 DD FLAT:??_R0?AVICvGameContext3@@@8 ; ICvGameContext3::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICvGameContext3@@8
rdata$r	ENDS
;	COMDAT ??_R2ICvGameContext3@@8
rdata$r	SEGMENT
??_R2ICvGameContext3@@8 DD FLAT:??_R1A@?0A@EA@ICvGameContext3@@8 ; ICvGameContext3::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ICvGameContext2@@8
	DD	FLAT:??_R1A@?0A@EA@ICvGameContext1@@8
	DD	FLAT:??_R1A@?0A@EA@ICvUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICvGameContext3@@8
rdata$r	SEGMENT
??_R3ICvGameContext3@@8 DD 00H				; ICvGameContext3::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2ICvGameContext3@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVICvGameContext3@@@8
_DATA	SEGMENT
??_R0?AVICvGameContext3@@@8 DD FLAT:??_7type_info@@6B@	; ICvGameContext3 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVICvGameContext3@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ICvGameContext3@@6B@
rdata$r	SEGMENT
??_R4ICvGameContext3@@6B@ DD 00H			; ICvGameContext3::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVICvGameContext3@@@8
	DD	FLAT:??_R3ICvGameContext3@@8
rdata$r	ENDS
;	COMDAT ??_7ICvGameContext3@@6B@
CONST	SEGMENT
??_7ICvGameContext3@@6B@ DD FLAT:??_R4ICvGameContext3@@6B@ ; ICvGameContext3::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??0ICvGameContext3@@QAE@XZ
_TEXT	SEGMENT
??0ICvGameContext3@@QAE@XZ PROC				; ICvGameContext3::ICvGameContext3, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	DWORD PTR [eax], OFFSET ??_7ICvGameContext3@@6B@
	ret	0
??0ICvGameContext3@@QAE@XZ ENDP				; ICvGameContext3::ICvGameContext3
_TEXT	ENDS
PUBLIC	?GetRandomNumberGenerator@CvDllGameContext@@UAGPAVICvRandom1@@I@Z ; CvDllGameContext::GetRandomNumberGenerator
EXTRN	??3CvDllRandom@@SAXPAX@Z:PROC			; CvDllRandom::operator delete
EXTRN	??0CvDllRandom@@QAE@PAVCvRandom@@@Z:PROC	; CvDllRandom::CvDllRandom
EXTRN	??2CvDllRandom@@SAPAXI@Z:PROC			; CvDllRandom::operator new
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$?GetRandomNumberGenerator@CvDllGameContext@@UAGPAVICvRandom1@@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetRandomNumberGenerator@CvDllGameContext@@UAGPAVICvRandom1@@I@Z$0
__ehfuncinfo$?GetRandomNumberGenerator@CvDllGameContext@@UAGPAVICvRandom1@@I@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetRandomNumberGenerator@CvDllGameContext@@UAGPAVICvRandom1@@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvdllcontext.cpp
xdata$x	ENDS
;	COMDAT ?GetRandomNumberGenerator@CvDllGameContext@@UAGPAVICvRandom1@@I@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
$T231828 = 8						; size = 4
_this$ = 8						; size = 4
_index$ = 12						; size = 4
?GetRandomNumberGenerator@CvDllGameContext@@UAGPAVICvRandom1@@I@Z PROC ; CvDllGameContext::GetRandomNumberGenerator, COMDAT

; 1222 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?GetRandomNumberGenerator@CvDllGameContext@@UAGPAVICvRandom1@@I@Z
	push	eax
	mov	DWORD PTR fs:0, esp

; 1223 : 	for(std::vector<std::pair<uint, CvRandom*> >::iterator it = m_RandomNumberGenerators.begin();

	mov	eax, DWORD PTR _this$[esp+8]
	push	esi
	mov	esi, DWORD PTR [eax+24]

; 1224 : 	        it != m_RandomNumberGenerators.end(); ++it)

	mov	eax, DWORD PTR [eax+28]
	cmp	esi, eax
	je	SHORT $LN2@GetRandomN
	mov	ecx, DWORD PTR _index$[esp+12]
$LL18@GetRandomN:

; 1225 : 	{
; 1226 : 		if((*it).first == index)

	cmp	DWORD PTR [esi], ecx
	je	SHORT $LN39@GetRandomN
	add	esi, 8
	cmp	esi, eax
	jne	SHORT $LL18@GetRandomN
$LN2@GetRandomN:

; 1228 : 	}
; 1229 : 
; 1230 : 	return NULL;

	xor	eax, eax

; 1231 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
$LN39@GetRandomN:

; 1227 : 			return new CvDllRandom((*it).second);

	push	12					; 0000000cH
	call	??2CvDllRandom@@SAPAXI@Z		; CvDllRandom::operator new
	add	esp, 4
	mov	DWORD PTR $T231828[esp+12], eax
	mov	DWORD PTR __$EHRec$[esp+24], 0
	test	eax, eax
	je	SHORT $LN2@GetRandomN
	mov	ecx, DWORD PTR [esi+4]
	push	ecx
	mov	ecx, eax
	call	??0CvDllRandom@@QAE@PAVCvRandom@@@Z	; CvDllRandom::CvDllRandom

; 1231 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetRandomNumberGenerator@CvDllGameContext@@UAGPAVICvRandom1@@I@Z$0:
	mov	eax, DWORD PTR $T231828[ebp-4]
	push	eax
	call	??3CvDllRandom@@SAXPAX@Z		; CvDllRandom::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetRandomNumberGenerator@CvDllGameContext@@UAGPAVICvRandom1@@I@Z:
	mov	eax, OFFSET __ehfuncinfo$?GetRandomNumberGenerator@CvDllGameContext@@UAGPAVICvRandom1@@I@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetRandomNumberGenerator@CvDllGameContext@@UAGPAVICvRandom1@@I@Z ENDP ; CvDllGameContext::GetRandomNumberGenerator
PUBLIC	?GetNetInitInfo@CvDllGameContext@@UAGPAVICvNetInitInfo1@@I@Z ; CvDllGameContext::GetNetInitInfo
EXTRN	?IncrementReference@CvDllNetInitInfo@@QAEIXZ:PROC ; CvDllNetInitInfo::IncrementReference
; Function compile flags: /Ogtpy
;	COMDAT ?GetNetInitInfo@CvDllGameContext@@UAGPAVICvNetInitInfo1@@I@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_index$ = 12						; size = 4
?GetNetInitInfo@CvDllGameContext@@UAGPAVICvNetInitInfo1@@I@Z PROC ; CvDllGameContext::GetNetInitInfo, COMDAT

; 1261 : 	for(std::vector<std::pair<uint, CvDllNetInitInfo*> >::iterator it = m_NetInitInfos.begin();

	mov	eax, DWORD PTR _this$[esp-4]
	push	esi
	mov	esi, DWORD PTR [eax+44]
	mov	eax, DWORD PTR [eax+48]

; 1262 : 	        it != m_NetInitInfos.end(); ++it)

	cmp	esi, eax
	je	SHORT $LN2@GetNetInit
	mov	ecx, DWORD PTR _index$[esp]
$LL15@GetNetInit:

; 1263 : 	{
; 1264 : 		if((*it).first == index)

	cmp	DWORD PTR [esi], ecx
	je	SHORT $LN40@GetNetInit
	add	esi, 8
	cmp	esi, eax
	jne	SHORT $LL15@GetNetInit
$LN2@GetNetInit:

; 1268 : 		}
; 1269 : 	}
; 1270 : 
; 1271 : 	return NULL;

	xor	eax, eax
	pop	esi

; 1272 : }

	ret	8
$LN40@GetNetInit:

; 1265 : 		{
; 1266 : 			(*it).second->IncrementReference();

	mov	ecx, DWORD PTR [esi+4]
	call	?IncrementReference@CvDllNetInitInfo@@QAEIXZ ; CvDllNetInitInfo::IncrementReference

; 1267 : 			return (*it).second;

	mov	eax, DWORD PTR [esi+4]
	pop	esi

; 1272 : }

	ret	8
?GetNetInitInfo@CvDllGameContext@@UAGPAVICvNetInitInfo1@@I@Z ENDP ; CvDllGameContext::GetNetInitInfo
_TEXT	ENDS
PUBLIC	?GetNetLoadGameInfo@CvDllGameContext@@UAGPAVICvNetLoadGameInfo1@@I@Z ; CvDllGameContext::GetNetLoadGameInfo
EXTRN	?IncrementReference@CvDllNetLoadGameInfo@@QAEIXZ:PROC ; CvDllNetLoadGameInfo::IncrementReference
; Function compile flags: /Ogtpy
;	COMDAT ?GetNetLoadGameInfo@CvDllGameContext@@UAGPAVICvNetLoadGameInfo1@@I@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_index$ = 12						; size = 4
?GetNetLoadGameInfo@CvDllGameContext@@UAGPAVICvNetLoadGameInfo1@@I@Z PROC ; CvDllGameContext::GetNetLoadGameInfo, COMDAT

; 1302 : 	for(std::vector<std::pair<uint, CvDllNetLoadGameInfo*> >::iterator it = m_NetLoadGameInfos.begin();

	mov	eax, DWORD PTR _this$[esp-4]
	push	esi
	mov	esi, DWORD PTR [eax+64]
	mov	eax, DWORD PTR [eax+68]

; 1303 : 	        it != m_NetLoadGameInfos.end(); ++it)

	cmp	esi, eax
	je	SHORT $LN2@GetNetLoad
	mov	ecx, DWORD PTR _index$[esp]
$LL15@GetNetLoad:

; 1304 : 	{
; 1305 : 		if((*it).first == index)

	cmp	DWORD PTR [esi], ecx
	je	SHORT $LN40@GetNetLoad
	add	esi, 8
	cmp	esi, eax
	jne	SHORT $LL15@GetNetLoad
$LN2@GetNetLoad:

; 1309 : 		}
; 1310 : 	}
; 1311 : 
; 1312 : 	return NULL;

	xor	eax, eax
	pop	esi

; 1313 : }

	ret	8
$LN40@GetNetLoad:

; 1306 : 		{
; 1307 : 			(*it).second->IncrementReference();

	mov	ecx, DWORD PTR [esi+4]
	call	?IncrementReference@CvDllNetLoadGameInfo@@QAEIXZ ; CvDllNetLoadGameInfo::IncrementReference

; 1308 : 			return (*it).second;

	mov	eax, DWORD PTR [esi+4]
	pop	esi

; 1313 : }

	ret	8
?GetNetLoadGameInfo@CvDllGameContext@@UAGPAVICvNetLoadGameInfo1@@I@Z ENDP ; CvDllGameContext::GetNetLoadGameInfo
_TEXT	ENDS
PUBLIC	??0?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAE@XZ ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??0?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >, COMDAT
; _this$ = ecx

; 470  : 		{	// construct empty vector

	mov	eax, ecx

; 471  : 		_Buy(0);

	xor	ecx, ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx

; 472  : 		}

	ret	0
??0?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >
_TEXT	ENDS
PUBLIC	??0?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAE@XZ ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >, COMDAT
; _this$ = ecx

; 470  : 		{	// construct empty vector

	mov	eax, ecx

; 471  : 		_Buy(0);

	xor	ecx, ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx

; 472  : 		}

	ret	0
??0?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >
_TEXT	ENDS
PUBLIC	??0?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAE@XZ ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >, COMDAT
; _this$ = ecx

; 470  : 		{	// construct empty vector

	mov	eax, ecx

; 471  : 		_Buy(0);

	xor	ecx, ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx

; 472  : 		}

	ret	0
??0?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >
_TEXT	ENDS
PUBLIC	??0?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAE@XZ ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAE@XZ PROC ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >, COMDAT
; _this$ = ecx

; 470  : 		{	// construct empty vector

	mov	eax, ecx

; 471  : 		_Buy(0);

	xor	ecx, ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx

; 472  : 		}

	ret	0
??0?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAE@XZ ENDP ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@std@@@std@@YAXPAU?$pair@IPAVCvRandom@@@0@0AAV?$allocator@U?$pair@IPAVCvRandom@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::pair<unsigned int,CvRandom *> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@std@@@std@@YAXPAU?$pair@IPAVCvRandom@@@0@0AAV?$allocator@U?$pair@IPAVCvRandom@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@std@@@std@@YAXPAU?$pair@IPAVCvRandom@@@0@0AAV?$allocator@U?$pair@IPAVCvRandom@@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::pair<unsigned int,CvRandom *> > >, COMDAT

; 225  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 226  : 	}

	ret	0
??$_Destroy_range@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@std@@@std@@YAXPAU?$pair@IPAVCvRandom@@@0@0AAV?$allocator@U?$pair@IPAVCvRandom@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::pair<unsigned int,CvRandom *> > >
_TEXT	ENDS
PUBLIC	??$unchecked_uninitialized_fill_n@PAU?$pair@IPAVCvRandom@@@std@@IU12@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@stdext@@YAXPAU?$pair@IPAVCvRandom@@@std@@IABU12@AAV?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@Z ; stdext::unchecked_uninitialized_fill_n<std::pair<unsigned int,CvRandom *> *,unsigned int,std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$unchecked_uninitialized_fill_n@PAU?$pair@IPAVCvRandom@@@std@@IU12@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@stdext@@YAXPAU?$pair@IPAVCvRandom@@@std@@IABU12@AAV?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@Z
_TEXT	SEGMENT
$T232485 = -4						; size = 1
__Cat$232490 = -4					; size = 1
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_fill_n@PAU?$pair@IPAVCvRandom@@@std@@IU12@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@stdext@@YAXPAU?$pair@IPAVCvRandom@@@std@@IABU12@AAV?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@Z PROC ; stdext::unchecked_uninitialized_fill_n<std::pair<unsigned int,CvRandom *> *,unsigned int,std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >, COMDAT

; 940  : 	{	// copy _Count *_Val to raw _First, using _Al

	push	ecx

; 941  : 	_STD _Uninit_fill_n(_First, _Count, _Val, _Al,
; 942  : 		_STD _Ptr_cat(_First, _First), _STD _Range_checked_iterator_tag());

	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T232485[esp+4], 0
	mov	eax, DWORD PTR $T232485[esp+4]
	mov	ecx, DWORD PTR __Cat$232490[esp+4]
	push	eax
	mov	eax, DWORD PTR __Val$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Count$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_fill_n@PAU?$pair@IPAVCvRandom@@@std@@IU12@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@YAXPAU?$pair@IPAVCvRandom@@@0@IABU10@AAV?$allocator@U?$pair@IPAVCvRandom@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<std::pair<unsigned int,CvRandom *> *,unsigned int,std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >

; 943  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$unchecked_uninitialized_fill_n@PAU?$pair@IPAVCvRandom@@@std@@IU12@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@stdext@@YAXPAU?$pair@IPAVCvRandom@@@std@@IABU12@AAV?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@Z ENDP ; stdext::unchecked_uninitialized_fill_n<std::pair<unsigned int,CvRandom *> *,unsigned int,std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@@std@@YAXPAU?$pair@IPAVCvDllNetInitInfo@@@0@0AAV?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@@std@@YAXPAU?$pair@IPAVCvDllNetInitInfo@@@0@0AAV?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@@std@@YAXPAU?$pair@IPAVCvDllNetInitInfo@@@0@0AAV?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >, COMDAT

; 225  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 226  : 	}

	ret	0
??$_Destroy_range@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@@std@@YAXPAU?$pair@IPAVCvDllNetInitInfo@@@0@0AAV?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >
_TEXT	ENDS
PUBLIC	??$unchecked_uninitialized_fill_n@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@IU12@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@stdext@@YAXPAU?$pair@IPAVCvDllNetInitInfo@@@std@@IABU12@AAV?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@Z ; stdext::unchecked_uninitialized_fill_n<std::pair<unsigned int,CvDllNetInitInfo *> *,unsigned int,std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$unchecked_uninitialized_fill_n@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@IU12@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@stdext@@YAXPAU?$pair@IPAVCvDllNetInitInfo@@@std@@IABU12@AAV?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@Z
_TEXT	SEGMENT
$T232502 = -4						; size = 1
__Cat$232507 = -4					; size = 1
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_fill_n@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@IU12@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@stdext@@YAXPAU?$pair@IPAVCvDllNetInitInfo@@@std@@IABU12@AAV?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@Z PROC ; stdext::unchecked_uninitialized_fill_n<std::pair<unsigned int,CvDllNetInitInfo *> *,unsigned int,std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >, COMDAT

; 940  : 	{	// copy _Count *_Val to raw _First, using _Al

	push	ecx

; 941  : 	_STD _Uninit_fill_n(_First, _Count, _Val, _Al,
; 942  : 		_STD _Ptr_cat(_First, _First), _STD _Range_checked_iterator_tag());

	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T232502[esp+4], 0
	mov	eax, DWORD PTR $T232502[esp+4]
	mov	ecx, DWORD PTR __Cat$232507[esp+4]
	push	eax
	mov	eax, DWORD PTR __Val$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Count$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_fill_n@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@IU12@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@YAXPAU?$pair@IPAVCvDllNetInitInfo@@@0@IABU10@AAV?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<std::pair<unsigned int,CvDllNetInitInfo *> *,unsigned int,std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >

; 943  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$unchecked_uninitialized_fill_n@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@IU12@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@stdext@@YAXPAU?$pair@IPAVCvDllNetInitInfo@@@std@@IABU12@AAV?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@Z ENDP ; stdext::unchecked_uninitialized_fill_n<std::pair<unsigned int,CvDllNetInitInfo *> *,unsigned int,std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@@std@@YAXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@0AAV?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@@std@@YAXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@0AAV?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@@std@@YAXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@0AAV?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >, COMDAT

; 225  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 226  : 	}

	ret	0
??$_Destroy_range@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@@std@@YAXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@0AAV?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >
_TEXT	ENDS
PUBLIC	??$unchecked_uninitialized_fill_n@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@IU12@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@stdext@@YAXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@IABU12@AAV?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@Z ; stdext::unchecked_uninitialized_fill_n<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,unsigned int,std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$unchecked_uninitialized_fill_n@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@IU12@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@stdext@@YAXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@IABU12@AAV?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@Z
_TEXT	SEGMENT
$T232519 = -4						; size = 1
__Cat$232523 = -4					; size = 1
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_fill_n@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@IU12@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@stdext@@YAXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@IABU12@AAV?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@Z PROC ; stdext::unchecked_uninitialized_fill_n<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,unsigned int,std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >, COMDAT

; 940  : 	{	// copy _Count *_Val to raw _First, using _Al

	push	ecx

; 941  : 	_STD _Uninit_fill_n(_First, _Count, _Val, _Al,
; 942  : 		_STD _Ptr_cat(_First, _First), _STD _Range_checked_iterator_tag());

	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T232519[esp+4], 0
	mov	eax, DWORD PTR $T232519[esp+4]
	mov	ecx, DWORD PTR __Cat$232523[esp+4]
	push	eax
	mov	eax, DWORD PTR __Val$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Count$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_fill_n@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@IU12@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@YAXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@IABU10@AAV?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,unsigned int,std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >

; 943  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$unchecked_uninitialized_fill_n@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@IU12@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@stdext@@YAXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@IABU12@AAV?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@Z ENDP ; stdext::unchecked_uninitialized_fill_n<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,unsigned int,std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@YAXPAUCvDllPathFinderUpdateListData@@0AAV?$allocator@UCvDllPathFinderUpdateListData@@@0@@Z ; std::_Destroy_range<std::allocator<CvDllPathFinderUpdateListData> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@YAXPAUCvDllPathFinderUpdateListData@@0AAV?$allocator@UCvDllPathFinderUpdateListData@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@YAXPAUCvDllPathFinderUpdateListData@@0AAV?$allocator@UCvDllPathFinderUpdateListData@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CvDllPathFinderUpdateListData> >, COMDAT

; 225  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 226  : 	}

	ret	0
??$_Destroy_range@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@YAXPAUCvDllPathFinderUpdateListData@@0AAV?$allocator@UCvDllPathFinderUpdateListData@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CvDllPathFinderUpdateListData> >
_TEXT	ENDS
PUBLIC	??$unchecked_uninitialized_fill_n@PAUCvDllPathFinderUpdateListData@@IU1@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@stdext@@YAXPAUCvDllPathFinderUpdateListData@@IABU1@AAV?$allocator@UCvDllPathFinderUpdateListData@@@std@@@Z ; stdext::unchecked_uninitialized_fill_n<CvDllPathFinderUpdateListData *,unsigned int,CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$unchecked_uninitialized_fill_n@PAUCvDllPathFinderUpdateListData@@IU1@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@stdext@@YAXPAUCvDllPathFinderUpdateListData@@IABU1@AAV?$allocator@UCvDllPathFinderUpdateListData@@@std@@@Z
_TEXT	SEGMENT
$T232536 = -4						; size = 1
__Cat$232540 = -4					; size = 1
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_fill_n@PAUCvDllPathFinderUpdateListData@@IU1@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@stdext@@YAXPAUCvDllPathFinderUpdateListData@@IABU1@AAV?$allocator@UCvDllPathFinderUpdateListData@@@std@@@Z PROC ; stdext::unchecked_uninitialized_fill_n<CvDllPathFinderUpdateListData *,unsigned int,CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >, COMDAT

; 940  : 	{	// copy _Count *_Val to raw _First, using _Al

	push	ecx

; 941  : 	_STD _Uninit_fill_n(_First, _Count, _Val, _Al,
; 942  : 		_STD _Ptr_cat(_First, _First), _STD _Range_checked_iterator_tag());

	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T232536[esp+4], 0
	mov	eax, DWORD PTR $T232536[esp+4]
	mov	ecx, DWORD PTR __Cat$232540[esp+4]
	push	eax
	mov	eax, DWORD PTR __Val$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Count$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_fill_n@PAUCvDllPathFinderUpdateListData@@IU1@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@YAXPAUCvDllPathFinderUpdateListData@@IABU1@AAV?$allocator@UCvDllPathFinderUpdateListData@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<CvDllPathFinderUpdateListData *,unsigned int,CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >

; 943  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$unchecked_uninitialized_fill_n@PAUCvDllPathFinderUpdateListData@@IU1@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@stdext@@YAXPAUCvDllPathFinderUpdateListData@@IABU1@AAV?$allocator@UCvDllPathFinderUpdateListData@@@std@@@Z ENDP ; stdext::unchecked_uninitialized_fill_n<CvDllPathFinderUpdateListData *,unsigned int,CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >
_TEXT	ENDS
PUBLIC	??$_Reverse@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@@std@@YAXV?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@0@0Urandom_access_iterator_tag@0@@Z ; std::_Reverse<std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$_Reverse@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@@std@@YAXV?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@0@0Urandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 1
??$_Reverse@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@@std@@YAXV?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@0@0Urandom_access_iterator_tag@0@@Z PROC ; std::_Reverse<std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> > >, COMDAT

; 1575 : 	_DEBUG_RANGE(_First, _Last);
; 1576 : 	for (; _First < _Last; ++_First)

	mov	ecx, DWORD PTR __First$[esp-4]
	mov	eax, DWORD PTR __Last$[esp-4]
	cmp	ecx, eax
	jae	SHORT $LN1@Reverse
	push	ebx
	push	esi
	push	edi
	npad	1
$LL8@Reverse:

; 1577 : 		std::iter_swap(_First, --_Last);

	sub	eax, 12					; 0000000cH
	mov	DWORD PTR __Last$[esp+8], eax
	mov	edx, ecx
	cmp	ecx, eax
	je	SHORT $LN2@Reverse
	mov	esi, DWORD PTR [ecx]
	mov	edi, DWORD PTR [ecx+4]
	mov	ebx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx], ebx
	mov	ebx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ebx
	mov	ebx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+8], ebx
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [eax+4], edi
	mov	DWORD PTR [eax+8], ecx
	mov	eax, DWORD PTR __Last$[esp+8]
	mov	ecx, DWORD PTR __First$[esp+8]
$LN2@Reverse:
	add	ecx, 12					; 0000000cH
	mov	DWORD PTR __First$[esp+8], ecx
	cmp	ecx, eax
	jb	SHORT $LL8@Reverse
	pop	edi
	pop	esi
	pop	ebx
$LN1@Reverse:

; 1578 : 	}

	ret	0
??$_Reverse@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@@std@@YAXV?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@0@0Urandom_access_iterator_tag@0@@Z ENDP ; std::_Reverse<std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> > >
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAU?$pair@IPAVCvRandom@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@U_Undefined_move_tag@2@@std@@YAPAU?$pair@IPAVCvRandom@@@0@PAU10@00AAV?$allocator@U?$pair@IPAVCvRandom@@@std@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_move<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> *,std::allocator<std::pair<unsigned int,CvRandom *> >,std::_Undefined_move_tag>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$_Uninit_move@PAU?$pair@IPAVCvRandom@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@U_Undefined_move_tag@2@@std@@YAPAU?$pair@IPAVCvRandom@@@0@PAU10@00AAV?$allocator@U?$pair@IPAVCvRandom@@@std@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T232617 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$232621 = 16					; size = 1
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_move@PAU?$pair@IPAVCvRandom@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@U_Undefined_move_tag@2@@std@@YAPAU?$pair@IPAVCvRandom@@@0@PAU10@00AAV?$allocator@U?$pair@IPAVCvRandom@@@std@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_move<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> *,std::allocator<std::pair<unsigned int,CvRandom *> >,std::_Undefined_move_tag>, COMDAT

; 206  : 	{	// move defaults to copy if there is not a more effecient way

	push	ecx

; 207  : 	return (_STDEXT unchecked_uninitialized_copy(_First, _Last, _Dest, _Al));

	mov	ecx, DWORD PTR __Cat$232621[esp]
	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T232617[esp+4], 0
	mov	eax, DWORD PTR $T232617[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAU?$pair@IPAVCvRandom@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@YAPAU?$pair@IPAVCvRandom@@@0@PAU10@00AAV?$allocator@U?$pair@IPAVCvRandom@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> *,std::allocator<std::pair<unsigned int,CvRandom *> > >

; 208  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$_Uninit_move@PAU?$pair@IPAVCvRandom@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@U_Undefined_move_tag@2@@std@@YAPAU?$pair@IPAVCvRandom@@@0@PAU10@00AAV?$allocator@U?$pair@IPAVCvRandom@@@std@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_move<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> *,std::allocator<std::pair<unsigned int,CvRandom *> >,std::_Undefined_move_tag>
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@U_Undefined_move_tag@2@@std@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@0@PAU10@00AAV?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_move<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> *,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> >,std::_Undefined_move_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Uninit_move@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@U_Undefined_move_tag@2@@std@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@0@PAU10@00AAV?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T232636 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$232640 = 16					; size = 1
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_move@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@U_Undefined_move_tag@2@@std@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@0@PAU10@00AAV?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_move<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> *,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> >,std::_Undefined_move_tag>, COMDAT

; 206  : 	{	// move defaults to copy if there is not a more effecient way

	push	ecx

; 207  : 	return (_STDEXT unchecked_uninitialized_copy(_First, _Last, _Dest, _Al));

	mov	ecx, DWORD PTR __Cat$232640[esp]
	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T232636[esp+4], 0
	mov	eax, DWORD PTR $T232636[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@0@PAU10@00AAV?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> *,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >

; 208  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$_Uninit_move@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@U_Undefined_move_tag@2@@std@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@0@PAU10@00AAV?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_move<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> *,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> >,std::_Undefined_move_tag>
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@U_Undefined_move_tag@2@@std@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@PAU10@00AAV?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_move<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> >,std::_Undefined_move_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Uninit_move@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@U_Undefined_move_tag@2@@std@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@PAU10@00AAV?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T232655 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$232658 = 16					; size = 1
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_move@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@U_Undefined_move_tag@2@@std@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@PAU10@00AAV?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_move<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> >,std::_Undefined_move_tag>, COMDAT

; 206  : 	{	// move defaults to copy if there is not a more effecient way

	push	ecx

; 207  : 	return (_STDEXT unchecked_uninitialized_copy(_First, _Last, _Dest, _Al));

	mov	ecx, DWORD PTR __Cat$232658[esp]
	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T232655[esp+4], 0
	mov	eax, DWORD PTR $T232655[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@PAU10@00AAV?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >

; 208  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$_Uninit_move@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@U_Undefined_move_tag@2@@std@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@PAU10@00AAV?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_move<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> >,std::_Undefined_move_tag>
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAUCvDllPathFinderUpdateListData@@PAU1@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@U_Undefined_move_tag@3@@std@@YAPAUCvDllPathFinderUpdateListData@@PAU1@00AAV?$allocator@UCvDllPathFinderUpdateListData@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_move<CvDllPathFinderUpdateListData *,CvDllPathFinderUpdateListData *,std::allocator<CvDllPathFinderUpdateListData>,std::_Undefined_move_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Uninit_move@PAUCvDllPathFinderUpdateListData@@PAU1@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@U_Undefined_move_tag@3@@std@@YAPAUCvDllPathFinderUpdateListData@@PAU1@00AAV?$allocator@UCvDllPathFinderUpdateListData@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T232674 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$232677 = 16					; size = 1
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_move@PAUCvDllPathFinderUpdateListData@@PAU1@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@U_Undefined_move_tag@3@@std@@YAPAUCvDllPathFinderUpdateListData@@PAU1@00AAV?$allocator@UCvDllPathFinderUpdateListData@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_move<CvDllPathFinderUpdateListData *,CvDllPathFinderUpdateListData *,std::allocator<CvDllPathFinderUpdateListData>,std::_Undefined_move_tag>, COMDAT

; 206  : 	{	// move defaults to copy if there is not a more effecient way

	push	ecx

; 207  : 	return (_STDEXT unchecked_uninitialized_copy(_First, _Last, _Dest, _Al));

	mov	ecx, DWORD PTR __Cat$232677[esp]
	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T232674[esp+4], 0
	mov	eax, DWORD PTR $T232674[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAUCvDllPathFinderUpdateListData@@PAU1@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@YAPAUCvDllPathFinderUpdateListData@@PAU1@00AAV?$allocator@UCvDllPathFinderUpdateListData@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<CvDllPathFinderUpdateListData *,CvDllPathFinderUpdateListData *,std::allocator<CvDllPathFinderUpdateListData> >

; 208  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$_Uninit_move@PAUCvDllPathFinderUpdateListData@@PAU1@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@U_Undefined_move_tag@3@@std@@YAPAUCvDllPathFinderUpdateListData@@PAU1@00AAV?$allocator@UCvDllPathFinderUpdateListData@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_move<CvDllPathFinderUpdateListData *,CvDllPathFinderUpdateListData *,std::allocator<CvDllPathFinderUpdateListData>,std::_Undefined_move_tag>
_TEXT	ENDS
PUBLIC	??$unchecked_uninitialized_copy@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@PAUCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@2@@stdext@@YAPAUCvDllPathFinderUpdateListData@@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@0PAU1@AAV?$allocator@UCvDllPathFinderUpdateListData@@@3@@Z ; stdext::unchecked_uninitialized_copy<std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >,CvDllPathFinderUpdateListData *,std::allocator<CvDllPathFinderUpdateListData> >
; Function compile flags: /Ogtpy
;	COMDAT ??$unchecked_uninitialized_copy@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@PAUCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@2@@stdext@@YAPAUCvDllPathFinderUpdateListData@@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@0PAU1@AAV?$allocator@UCvDllPathFinderUpdateListData@@@3@@Z
_TEXT	SEGMENT
$T232685 = -4						; size = 1
__Cat$232690 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_copy@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@PAUCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@2@@stdext@@YAPAUCvDllPathFinderUpdateListData@@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@0PAU1@AAV?$allocator@UCvDllPathFinderUpdateListData@@@3@@Z PROC ; stdext::unchecked_uninitialized_copy<std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >,CvDllPathFinderUpdateListData *,std::allocator<CvDllPathFinderUpdateListData> >, COMDAT

; 819  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

	push	ecx

; 820  : 	return (_STD _Uninit_copy(_CHECKED_BASE(_First),
; 821  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 822  : 		_STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T232685[esp+4], 0
	mov	eax, DWORD PTR $T232685[esp+4]
	mov	ecx, DWORD PTR __Cat$232690[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@PAUCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@2@@std@@YAPAUCvDllPathFinderUpdateListData@@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@0@0PAU1@AAV?$allocator@UCvDllPathFinderUpdateListData@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >,CvDllPathFinderUpdateListData *,std::allocator<CvDllPathFinderUpdateListData> >

; 823  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$unchecked_uninitialized_copy@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@PAUCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@2@@stdext@@YAPAUCvDllPathFinderUpdateListData@@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@0PAU1@AAV?$allocator@UCvDllPathFinderUpdateListData@@@3@@Z ENDP ; stdext::unchecked_uninitialized_copy<std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >,CvDllPathFinderUpdateListData *,std::allocator<CvDllPathFinderUpdateListData> >
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAEXPAU?$pair@IPAVCvRandom@@@2@0@Z ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::_Destroy
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Destroy@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAEXPAU?$pair@IPAVCvRandom@@@2@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAEXPAU?$pair@IPAVCvRandom@@@2@0@Z PROC ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::_Destroy, COMDAT
; _this$ = ecx

; 1119 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1120 : 		}

	ret	8
?_Destroy@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAEXPAU?$pair@IPAVCvRandom@@@2@0@Z ENDP ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::_Destroy
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAEXXZ ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::_Tidy
; Function compile flags: /Ogtpy
;	COMDAT ?_Tidy@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAEXXZ PROC ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	esi
	mov	esi, ecx

; 1124 : 		if (_Myfirst != 0)

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN4@Tidy

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);
; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@Tidy:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 1135 : 		}

	ret	0
?_Tidy@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAEXXZ ENDP ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::_Tidy
_TEXT	ENDS
PUBLIC	?_Ufill@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAEPAU?$pair@IPAVCvRandom@@@2@PAU32@IABU32@@Z ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::_Ufill
; Function compile flags: /Ogtpy
;	COMDAT ?_Ufill@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAEPAU?$pair@IPAVCvRandom@@@2@PAU32@IABU32@@Z
_TEXT	SEGMENT
$T232713 = -4						; size = 1
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Cat$232717 = 16					; size = 1
__Val$ = 16						; size = 4
?_Ufill@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAEPAU?$pair@IPAVCvRandom@@@2@PAU32@IABU32@@Z PROC ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::_Ufill, COMDAT
; _this$ = ecx

; 1253 : 		{	// copy initializing _Count * _Val, using allocator

	push	ecx

; 1254 : 		_STDEXT unchecked_uninitialized_fill_n(_Ptr, _Count, _Val, this->_Alval);

	mov	edx, DWORD PTR __Cat$232717[esp]
	push	esi
	mov	esi, DWORD PTR __Count$[esp+4]
	push	edi
	mov	edi, DWORD PTR __Ptr$[esp+8]
	mov	BYTE PTR $T232713[esp+12], 0
	mov	eax, DWORD PTR $T232713[esp+12]
	push	eax
	mov	eax, DWORD PTR __Val$[esp+12]
	push	edx
	push	ecx
	push	eax
	push	esi
	push	edi
	call	??$_Uninit_fill_n@PAU?$pair@IPAVCvRandom@@@std@@IU12@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@YAXPAU?$pair@IPAVCvRandom@@@0@IABU10@AAV?$allocator@U?$pair@IPAVCvRandom@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<std::pair<unsigned int,CvRandom *> *,unsigned int,std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >
	add	esp, 24					; 00000018H

; 1255 : 		return (_Ptr + _Count);

	lea	eax, DWORD PTR [edi+esi*8]
	pop	edi
	pop	esi

; 1256 : 		}

	pop	ecx
	ret	12					; 0000000cH
?_Ufill@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAEPAU?$pair@IPAVCvRandom@@@2@PAU32@IABU32@@Z ENDP ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::_Ufill
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAEXPAU?$pair@IPAVCvDllNetInitInfo@@@2@0@Z ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::_Destroy
; Function compile flags: /Ogtpy
;	COMDAT ?_Destroy@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAEXPAU?$pair@IPAVCvDllNetInitInfo@@@2@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAEXPAU?$pair@IPAVCvDllNetInitInfo@@@2@0@Z PROC ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::_Destroy, COMDAT
; _this$ = ecx

; 1119 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1120 : 		}

	ret	8
?_Destroy@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAEXPAU?$pair@IPAVCvDllNetInitInfo@@@2@0@Z ENDP ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::_Destroy
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAEXXZ ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::_Tidy
; Function compile flags: /Ogtpy
;	COMDAT ?_Tidy@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAEXXZ PROC ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	esi
	mov	esi, ecx

; 1124 : 		if (_Myfirst != 0)

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN4@Tidy@2

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);
; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@Tidy@2:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 1135 : 		}

	ret	0
?_Tidy@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAEXXZ ENDP ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::_Tidy
_TEXT	ENDS
PUBLIC	?_Ufill@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAEPAU?$pair@IPAVCvDllNetInitInfo@@@2@PAU32@IABU32@@Z ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::_Ufill
; Function compile flags: /Ogtpy
;	COMDAT ?_Ufill@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAEPAU?$pair@IPAVCvDllNetInitInfo@@@2@PAU32@IABU32@@Z
_TEXT	SEGMENT
$T232742 = -4						; size = 1
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Cat$232746 = 16					; size = 1
__Val$ = 16						; size = 4
?_Ufill@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAEPAU?$pair@IPAVCvDllNetInitInfo@@@2@PAU32@IABU32@@Z PROC ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::_Ufill, COMDAT
; _this$ = ecx

; 1253 : 		{	// copy initializing _Count * _Val, using allocator

	push	ecx

; 1254 : 		_STDEXT unchecked_uninitialized_fill_n(_Ptr, _Count, _Val, this->_Alval);

	mov	edx, DWORD PTR __Cat$232746[esp]
	push	esi
	mov	esi, DWORD PTR __Count$[esp+4]
	push	edi
	mov	edi, DWORD PTR __Ptr$[esp+8]
	mov	BYTE PTR $T232742[esp+12], 0
	mov	eax, DWORD PTR $T232742[esp+12]
	push	eax
	mov	eax, DWORD PTR __Val$[esp+12]
	push	edx
	push	ecx
	push	eax
	push	esi
	push	edi
	call	??$_Uninit_fill_n@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@IU12@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@YAXPAU?$pair@IPAVCvDllNetInitInfo@@@0@IABU10@AAV?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<std::pair<unsigned int,CvDllNetInitInfo *> *,unsigned int,std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >
	add	esp, 24					; 00000018H

; 1255 : 		return (_Ptr + _Count);

	lea	eax, DWORD PTR [edi+esi*8]
	pop	edi
	pop	esi

; 1256 : 		}

	pop	ecx
	ret	12					; 0000000cH
?_Ufill@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAEPAU?$pair@IPAVCvDllNetInitInfo@@@2@PAU32@IABU32@@Z ENDP ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::_Ufill
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAEXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@2@0@Z ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::_Destroy
; Function compile flags: /Ogtpy
;	COMDAT ?_Destroy@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAEXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@2@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAEXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@2@0@Z PROC ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::_Destroy, COMDAT
; _this$ = ecx

; 1119 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1120 : 		}

	ret	8
?_Destroy@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAEXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@2@0@Z ENDP ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::_Destroy
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAEXXZ ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::_Tidy
; Function compile flags: /Ogtpy
;	COMDAT ?_Tidy@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAEXXZ PROC ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	esi
	mov	esi, ecx

; 1124 : 		if (_Myfirst != 0)

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN4@Tidy@3

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);
; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@Tidy@3:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 1135 : 		}

	ret	0
?_Tidy@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAEXXZ ENDP ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::_Tidy
_TEXT	ENDS
PUBLIC	?_Ufill@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAEPAU?$pair@IPAVCvDllNetLoadGameInfo@@@2@PAU32@IABU32@@Z ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::_Ufill
; Function compile flags: /Ogtpy
;	COMDAT ?_Ufill@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAEPAU?$pair@IPAVCvDllNetLoadGameInfo@@@2@PAU32@IABU32@@Z
_TEXT	SEGMENT
$T232771 = -4						; size = 1
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Cat$232774 = 16					; size = 1
__Val$ = 16						; size = 4
?_Ufill@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAEPAU?$pair@IPAVCvDllNetLoadGameInfo@@@2@PAU32@IABU32@@Z PROC ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::_Ufill, COMDAT
; _this$ = ecx

; 1253 : 		{	// copy initializing _Count * _Val, using allocator

	push	ecx

; 1254 : 		_STDEXT unchecked_uninitialized_fill_n(_Ptr, _Count, _Val, this->_Alval);

	mov	edx, DWORD PTR __Cat$232774[esp]
	push	esi
	mov	esi, DWORD PTR __Count$[esp+4]
	push	edi
	mov	edi, DWORD PTR __Ptr$[esp+8]
	mov	BYTE PTR $T232771[esp+12], 0
	mov	eax, DWORD PTR $T232771[esp+12]
	push	eax
	mov	eax, DWORD PTR __Val$[esp+12]
	push	edx
	push	ecx
	push	eax
	push	esi
	push	edi
	call	??$_Uninit_fill_n@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@IU12@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@YAXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@IABU10@AAV?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,unsigned int,std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >
	add	esp, 24					; 00000018H

; 1255 : 		return (_Ptr + _Count);

	lea	eax, DWORD PTR [edi+esi*8]
	pop	edi
	pop	esi

; 1256 : 		}

	pop	ecx
	ret	12					; 0000000cH
?_Ufill@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAEPAU?$pair@IPAVCvDllNetLoadGameInfo@@@2@PAU32@IABU32@@Z ENDP ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::_Ufill
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAEXPAUCvDllPathFinderUpdateListData@@0@Z ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::_Destroy
; Function compile flags: /Ogtpy
;	COMDAT ?_Destroy@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAEXPAUCvDllPathFinderUpdateListData@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAEXPAUCvDllPathFinderUpdateListData@@0@Z PROC ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::_Destroy, COMDAT
; _this$ = ecx

; 1119 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1120 : 		}

	ret	8
?_Destroy@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAEXPAUCvDllPathFinderUpdateListData@@0@Z ENDP ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::_Destroy
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAEXXZ ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::_Tidy
; Function compile flags: /Ogtpy
;	COMDAT ?_Tidy@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAEXXZ PROC ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	esi
	mov	esi, ecx

; 1124 : 		if (_Myfirst != 0)

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN4@Tidy@4

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);
; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@Tidy@4:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 1135 : 		}

	ret	0
?_Tidy@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAEXXZ ENDP ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::_Tidy
_TEXT	ENDS
PUBLIC	?_Ufill@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAEPAUCvDllPathFinderUpdateListData@@PAU3@IABU3@@Z ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::_Ufill
; Function compile flags: /Ogtpy
;	COMDAT ?_Ufill@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAEPAUCvDllPathFinderUpdateListData@@PAU3@IABU3@@Z
_TEXT	SEGMENT
$T232800 = -4						; size = 1
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Cat$232803 = 16					; size = 1
__Val$ = 16						; size = 4
?_Ufill@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAEPAUCvDllPathFinderUpdateListData@@PAU3@IABU3@@Z PROC ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::_Ufill, COMDAT
; _this$ = ecx

; 1253 : 		{	// copy initializing _Count * _Val, using allocator

	push	ecx

; 1254 : 		_STDEXT unchecked_uninitialized_fill_n(_Ptr, _Count, _Val, this->_Alval);

	mov	edx, DWORD PTR __Cat$232803[esp]
	push	esi
	mov	esi, DWORD PTR __Count$[esp+4]
	push	edi
	mov	edi, DWORD PTR __Ptr$[esp+8]
	mov	BYTE PTR $T232800[esp+12], 0
	mov	eax, DWORD PTR $T232800[esp+12]
	push	eax
	mov	eax, DWORD PTR __Val$[esp+12]
	push	edx
	push	ecx
	push	eax
	push	esi
	push	edi
	call	??$_Uninit_fill_n@PAUCvDllPathFinderUpdateListData@@IU1@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@YAXPAUCvDllPathFinderUpdateListData@@IABU1@AAV?$allocator@UCvDllPathFinderUpdateListData@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<CvDllPathFinderUpdateListData *,unsigned int,CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >

; 1255 : 		return (_Ptr + _Count);

	lea	ecx, DWORD PTR [esi+esi*2]
	add	esp, 24					; 00000018H
	lea	eax, DWORD PTR [edi+ecx*4]
	pop	edi
	pop	esi

; 1256 : 		}

	pop	ecx
	ret	12					; 0000000cH
?_Ufill@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAEPAUCvDllPathFinderUpdateListData@@PAU3@IABU3@@Z ENDP ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::_Ufill
_TEXT	ENDS
PUBLIC	??$reverse@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@@std@@YAXV?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@0@0@Z ; std::reverse<std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$reverse@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@@std@@YAXV?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@0@0@Z
_TEXT	SEGMENT
$T232810 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$reverse@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@@std@@YAXV?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@0@0@Z PROC ; std::reverse<std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> > >, COMDAT

; 1582 : 	{	// reverse elements in [_First, _Last)

	push	ecx

; 1583 : 	_Reverse(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Iter_cat(_First));

	mov	eax, DWORD PTR $T232810[esp+4]
	mov	ecx, DWORD PTR __Last$[esp]
	mov	edx, DWORD PTR __First$[esp]
	push	eax
	push	ecx
	push	edx
	call	??$_Reverse@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@@std@@YAXV?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@0@0Urandom_access_iterator_tag@0@@Z ; std::_Reverse<std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> > >

; 1584 : 	}

	add	esp, 16					; 00000010H
	ret	0
??$reverse@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@@std@@YAXV?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@0@0@Z ENDP ; std::reverse<std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> > >
_TEXT	ENDS
PUBLIC	??$_Unchecked_uninitialized_move@PAU?$pair@IPAVCvRandom@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@stdext@@YAPAU?$pair@IPAVCvRandom@@@std@@PAU12@00AAV?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@Z ; stdext::_Unchecked_uninitialized_move<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> *,std::allocator<std::pair<unsigned int,CvRandom *> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$_Unchecked_uninitialized_move@PAU?$pair@IPAVCvRandom@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@stdext@@YAPAU?$pair@IPAVCvRandom@@@std@@PAU12@00AAV?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@Z
_TEXT	SEGMENT
$T232843 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$232847 = 16					; size = 1
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Unchecked_uninitialized_move@PAU?$pair@IPAVCvRandom@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@stdext@@YAPAU?$pair@IPAVCvRandom@@@std@@PAU12@00AAV?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@Z PROC ; stdext::_Unchecked_uninitialized_move<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> *,std::allocator<std::pair<unsigned int,CvRandom *> > >, COMDAT

; 861  : 	{	// move [_First, _Last) to raw _Dest, using _Al

	push	ecx

; 862  : 	return (_STD _Uninit_move(_CHECKED_BASE(_First),
; 863  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 864  : 		_STD _Move_cat(_Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Cat$232847[esp]
	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T232843[esp+4], 0
	mov	eax, DWORD PTR $T232843[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAU?$pair@IPAVCvRandom@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@YAPAU?$pair@IPAVCvRandom@@@0@PAU10@00AAV?$allocator@U?$pair@IPAVCvRandom@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> *,std::allocator<std::pair<unsigned int,CvRandom *> > >

; 865  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$_Unchecked_uninitialized_move@PAU?$pair@IPAVCvRandom@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@stdext@@YAPAU?$pair@IPAVCvRandom@@@std@@PAU12@00AAV?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@Z ENDP ; stdext::_Unchecked_uninitialized_move<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> *,std::allocator<std::pair<unsigned int,CvRandom *> > >
_TEXT	ENDS
PUBLIC	??$_Unchecked_uninitialized_move@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@stdext@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@00AAV?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@Z ; stdext::_Unchecked_uninitialized_move<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> *,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Unchecked_uninitialized_move@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@stdext@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@00AAV?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@Z
_TEXT	SEGMENT
$T232880 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$232884 = 16					; size = 1
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Unchecked_uninitialized_move@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@stdext@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@00AAV?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@Z PROC ; stdext::_Unchecked_uninitialized_move<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> *,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >, COMDAT

; 861  : 	{	// move [_First, _Last) to raw _Dest, using _Al

	push	ecx

; 862  : 	return (_STD _Uninit_move(_CHECKED_BASE(_First),
; 863  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 864  : 		_STD _Move_cat(_Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Cat$232884[esp]
	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T232880[esp+4], 0
	mov	eax, DWORD PTR $T232880[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@0@PAU10@00AAV?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> *,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >

; 865  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$_Unchecked_uninitialized_move@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@stdext@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@00AAV?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@Z ENDP ; stdext::_Unchecked_uninitialized_move<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> *,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >
_TEXT	ENDS
PUBLIC	??$_Unchecked_uninitialized_move@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@stdext@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@00AAV?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@Z ; stdext::_Unchecked_uninitialized_move<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Unchecked_uninitialized_move@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@stdext@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@00AAV?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@Z
_TEXT	SEGMENT
$T232918 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$232921 = 16					; size = 1
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Unchecked_uninitialized_move@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@stdext@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@00AAV?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@Z PROC ; stdext::_Unchecked_uninitialized_move<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >, COMDAT

; 861  : 	{	// move [_First, _Last) to raw _Dest, using _Al

	push	ecx

; 862  : 	return (_STD _Uninit_move(_CHECKED_BASE(_First),
; 863  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 864  : 		_STD _Move_cat(_Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Cat$232921[esp]
	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T232918[esp+4], 0
	mov	eax, DWORD PTR $T232918[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@PAU10@00AAV?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >

; 865  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$_Unchecked_uninitialized_move@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@stdext@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@00AAV?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@Z ENDP ; stdext::_Unchecked_uninitialized_move<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >
_TEXT	ENDS
PUBLIC	??$_Unchecked_uninitialized_move@PAUCvDllPathFinderUpdateListData@@PAU1@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@stdext@@YAPAUCvDllPathFinderUpdateListData@@PAU1@00AAV?$allocator@UCvDllPathFinderUpdateListData@@@std@@@Z ; stdext::_Unchecked_uninitialized_move<CvDllPathFinderUpdateListData *,CvDllPathFinderUpdateListData *,std::allocator<CvDllPathFinderUpdateListData> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Unchecked_uninitialized_move@PAUCvDllPathFinderUpdateListData@@PAU1@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@stdext@@YAPAUCvDllPathFinderUpdateListData@@PAU1@00AAV?$allocator@UCvDllPathFinderUpdateListData@@@std@@@Z
_TEXT	SEGMENT
$T232955 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$232958 = 16					; size = 1
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Unchecked_uninitialized_move@PAUCvDllPathFinderUpdateListData@@PAU1@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@stdext@@YAPAUCvDllPathFinderUpdateListData@@PAU1@00AAV?$allocator@UCvDllPathFinderUpdateListData@@@std@@@Z PROC ; stdext::_Unchecked_uninitialized_move<CvDllPathFinderUpdateListData *,CvDllPathFinderUpdateListData *,std::allocator<CvDllPathFinderUpdateListData> >, COMDAT

; 861  : 	{	// move [_First, _Last) to raw _Dest, using _Al

	push	ecx

; 862  : 	return (_STD _Uninit_move(_CHECKED_BASE(_First),
; 863  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 864  : 		_STD _Move_cat(_Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Cat$232958[esp]
	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T232955[esp+4], 0
	mov	eax, DWORD PTR $T232955[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAUCvDllPathFinderUpdateListData@@PAU1@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@YAPAUCvDllPathFinderUpdateListData@@PAU1@00AAV?$allocator@UCvDllPathFinderUpdateListData@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<CvDllPathFinderUpdateListData *,CvDllPathFinderUpdateListData *,std::allocator<CvDllPathFinderUpdateListData> >

; 865  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$_Unchecked_uninitialized_move@PAUCvDllPathFinderUpdateListData@@PAU1@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@stdext@@YAPAUCvDllPathFinderUpdateListData@@PAU1@00AAV?$allocator@UCvDllPathFinderUpdateListData@@@std@@@Z ENDP ; stdext::_Unchecked_uninitialized_move<CvDllPathFinderUpdateListData *,CvDllPathFinderUpdateListData *,std::allocator<CvDllPathFinderUpdateListData> >
_TEXT	ENDS
PUBLIC	??$_Uninit_move@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@PAUCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@2@U_Undefined_move_tag@2@@std@@YAPAUCvDllPathFinderUpdateListData@@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@0@0PAU1@AAV?$allocator@UCvDllPathFinderUpdateListData@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_move<std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >,CvDllPathFinderUpdateListData *,std::allocator<CvDllPathFinderUpdateListData>,std::_Undefined_move_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Uninit_move@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@PAUCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@2@U_Undefined_move_tag@2@@std@@YAPAUCvDllPathFinderUpdateListData@@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@0@0PAU1@AAV?$allocator@UCvDllPathFinderUpdateListData@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T232975 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$232979 = 16					; size = 1
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_move@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@PAUCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@2@U_Undefined_move_tag@2@@std@@YAPAUCvDllPathFinderUpdateListData@@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@0@0PAU1@AAV?$allocator@UCvDllPathFinderUpdateListData@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_move<std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >,CvDllPathFinderUpdateListData *,std::allocator<CvDllPathFinderUpdateListData>,std::_Undefined_move_tag>, COMDAT

; 206  : 	{	// move defaults to copy if there is not a more effecient way

	push	ecx

; 207  : 	return (_STDEXT unchecked_uninitialized_copy(_First, _Last, _Dest, _Al));

	mov	ecx, DWORD PTR __Cat$232979[esp]
	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T232975[esp+4], 0
	mov	eax, DWORD PTR $T232975[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@PAUCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@2@@std@@YAPAUCvDllPathFinderUpdateListData@@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@0@0PAU1@AAV?$allocator@UCvDllPathFinderUpdateListData@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >,CvDllPathFinderUpdateListData *,std::allocator<CvDllPathFinderUpdateListData> >

; 208  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$_Uninit_move@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@PAUCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@2@U_Undefined_move_tag@2@@std@@YAPAUCvDllPathFinderUpdateListData@@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@0@0PAU1@AAV?$allocator@UCvDllPathFinderUpdateListData@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_move<std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >,CvDllPathFinderUpdateListData *,std::allocator<CvDllPathFinderUpdateListData>,std::_Undefined_move_tag>
_TEXT	ENDS
PUBLIC	??1?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAE@XZ ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::~vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??1?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::~vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >, COMDAT
; _this$ = ecx

; 558  : 		{	// destroy the object

	push	esi
	mov	esi, ecx

; 559  : 		_Tidy();

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN6@vector
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@vector:
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 560  : 		}

	ret	0
??1?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::~vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >
_TEXT	ENDS
PUBLIC	?erase@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@@Z ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::erase
; Function compile flags: /Ogtpy
;	COMDAT ?erase@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@@Z PROC ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::erase, COMDAT
; _this$ = ecx

; 1018 : 		_STDEXT unchecked_copy(_VEC_ITER_BASE(_Where) + 1, _Mylast,
; 1019 : 			_VEC_ITER_BASE(_Where));

	mov	edx, DWORD PTR __Where$[esp-4]
	push	esi
	mov	esi, DWORD PTR [ecx+8]
	lea	eax, DWORD PTR [edx+8]
	cmp	eax, esi
	je	SHORT $LN9@erase
	push	edi
$LL11@erase:
	mov	edi, DWORD PTR [eax]
	mov	DWORD PTR [edx], edi
	mov	edi, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], edi
	add	eax, 8
	add	edx, 8
	cmp	eax, esi
	jne	SHORT $LL11@erase
	mov	edx, DWORD PTR __Where$[esp+4]
	pop	edi
$LN9@erase:

; 1020 : 		_Destroy(_Mylast - 1, _Mylast);
; 1021 : 		--_Mylast;
; 1022 : 		return (_Make_iter(_Where));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp]
	add	DWORD PTR [ecx+8], -8			; fffffff8H
	mov	DWORD PTR [eax], edx
	pop	esi

; 1023 : 		}

	ret	8
?erase@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@@Z ENDP ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::erase
_TEXT	ENDS
PUBLIC	??1?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAE@XZ ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::~vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::~vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >, COMDAT
; _this$ = ecx

; 558  : 		{	// destroy the object

	push	esi
	mov	esi, ecx

; 559  : 		_Tidy();

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN6@vector@2
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@vector@2:
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 560  : 		}

	ret	0
??1?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::~vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >
_TEXT	ENDS
PUBLIC	?erase@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@@Z ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::erase
; Function compile flags: /Ogtpy
;	COMDAT ?erase@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@@Z PROC ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::erase, COMDAT
; _this$ = ecx

; 1018 : 		_STDEXT unchecked_copy(_VEC_ITER_BASE(_Where) + 1, _Mylast,
; 1019 : 			_VEC_ITER_BASE(_Where));

	mov	edx, DWORD PTR __Where$[esp-4]
	push	esi
	mov	esi, DWORD PTR [ecx+8]
	lea	eax, DWORD PTR [edx+8]
	cmp	eax, esi
	je	SHORT $LN9@erase@2
	push	edi
$LL11@erase@2:
	mov	edi, DWORD PTR [eax]
	mov	DWORD PTR [edx], edi
	mov	edi, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], edi
	add	eax, 8
	add	edx, 8
	cmp	eax, esi
	jne	SHORT $LL11@erase@2
	mov	edx, DWORD PTR __Where$[esp+4]
	pop	edi
$LN9@erase@2:

; 1020 : 		_Destroy(_Mylast - 1, _Mylast);
; 1021 : 		--_Mylast;
; 1022 : 		return (_Make_iter(_Where));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp]
	add	DWORD PTR [ecx+8], -8			; fffffff8H
	mov	DWORD PTR [eax], edx
	pop	esi

; 1023 : 		}

	ret	8
?erase@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@@Z ENDP ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::erase
_TEXT	ENDS
PUBLIC	??1?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAE@XZ ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::~vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::~vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >, COMDAT
; _this$ = ecx

; 558  : 		{	// destroy the object

	push	esi
	mov	esi, ecx

; 559  : 		_Tidy();

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN6@vector@3
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@vector@3:
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 560  : 		}

	ret	0
??1?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::~vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >
_TEXT	ENDS
PUBLIC	?erase@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@@Z ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::erase
; Function compile flags: /Ogtpy
;	COMDAT ?erase@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@@Z PROC ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::erase, COMDAT
; _this$ = ecx

; 1018 : 		_STDEXT unchecked_copy(_VEC_ITER_BASE(_Where) + 1, _Mylast,
; 1019 : 			_VEC_ITER_BASE(_Where));

	mov	edx, DWORD PTR __Where$[esp-4]
	push	esi
	mov	esi, DWORD PTR [ecx+8]
	lea	eax, DWORD PTR [edx+8]
	cmp	eax, esi
	je	SHORT $LN9@erase@3
	push	edi
$LL11@erase@3:
	mov	edi, DWORD PTR [eax]
	mov	DWORD PTR [edx], edi
	mov	edi, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], edi
	add	eax, 8
	add	edx, 8
	cmp	eax, esi
	jne	SHORT $LL11@erase@3
	mov	edx, DWORD PTR __Where$[esp+4]
	pop	edi
$LN9@erase@3:

; 1020 : 		_Destroy(_Mylast - 1, _Mylast);
; 1021 : 		--_Mylast;
; 1022 : 		return (_Make_iter(_Where));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp]
	add	DWORD PTR [ecx+8], -8			; fffffff8H
	mov	DWORD PTR [eax], edx
	pop	esi

; 1023 : 		}

	ret	8
?erase@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@@Z ENDP ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::erase
_TEXT	ENDS
PUBLIC	??1?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAE@XZ ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::~vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAE@XZ PROC ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::~vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >, COMDAT
; _this$ = ecx

; 558  : 		{	// destroy the object

	push	esi
	mov	esi, ecx

; 559  : 		_Tidy();

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN6@vector@4
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@vector@4:
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 560  : 		}

	ret	0
??1?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAE@XZ ENDP ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::~vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >
_TEXT	ENDS
PUBLIC	?erase@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@0@Z ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::erase
; Function compile flags: /Ogtpy
;	COMDAT ?erase@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Last_arg$ = 16					; size = 4
?erase@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@0@Z PROC ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::erase, COMDAT
; _this$ = ecx

; 1029 : 		iterator _First = _Make_iter(_First_arg);
; 1030 : 		iterator _Last = _Make_iter(_Last_arg);
; 1031 : 
; 1032 : 		if (_First != _Last)

	mov	edx, DWORD PTR __Last_arg$[esp-4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	push	esi
	mov	esi, DWORD PTR __First_arg$[esp]
	mov	DWORD PTR [eax], esi
	cmp	esi, edx
	je	SHORT $LN1@erase@4
	push	edi

; 1033 : 			{	// worth doing, copy down over hole
; 1034 : 
; 1035 :  #if _HAS_ITERATOR_DEBUGGING
; 1036 : 			if (_Last < _First || _First._Mycont != this
; 1037 : 				|| _First._Myptr < _Myfirst || _Mylast < _Last._Myptr)
; 1038 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1039 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1040 : 				_VEC_ITER_BASE(_First));
; 1041 : 			_Orphan_range(_First._Myptr, _Mylast);
; 1042 : 
; 1043 :  #else /* _HAS_ITERATOR_DEBUGGING */
; 1044 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1045 : 				_VEC_ITER_BASE(_First));

	mov	edi, DWORD PTR [ecx+8]
	cmp	edx, edi
	je	SHORT $LN26@erase@4
	push	ebx
	npad	4
$LL28@erase@4:
	mov	ebx, DWORD PTR [edx]
	mov	DWORD PTR [esi], ebx
	mov	ebx, DWORD PTR [edx+4]
	mov	DWORD PTR [esi+4], ebx
	add	edx, 8
	add	esi, 8
	cmp	edx, edi
	jne	SHORT $LL28@erase@4
	pop	ebx
$LN26@erase@4:

; 1046 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1047 : 
; 1048 : 			_Destroy(_Ptr, _Mylast);
; 1049 : 			_Mylast = _Ptr;

	mov	DWORD PTR [ecx+8], esi
	pop	edi
$LN1@erase@4:
	pop	esi

; 1050 : 			}
; 1051 : #if _HAS_ITERATOR_DEBUGGING
; 1052 :         return (iterator(_First._Myptr, this));
; 1053 : #else
; 1054 : 		return (_First);
; 1055 : #endif
; 1056 : 		}

	ret	12					; 0000000cH
?erase@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@0@Z ENDP ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::erase
_TEXT	ENDS
PUBLIC	?erase@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@0@Z ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::erase
; Function compile flags: /Ogtpy
;	COMDAT ?erase@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Last_arg$ = 16					; size = 4
?erase@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@0@Z PROC ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::erase, COMDAT
; _this$ = ecx

; 1029 : 		iterator _First = _Make_iter(_First_arg);
; 1030 : 		iterator _Last = _Make_iter(_Last_arg);
; 1031 : 
; 1032 : 		if (_First != _Last)

	mov	edx, DWORD PTR __Last_arg$[esp-4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	push	esi
	mov	esi, DWORD PTR __First_arg$[esp]
	mov	DWORD PTR [eax], esi
	cmp	esi, edx
	je	SHORT $LN1@erase@5
	push	edi

; 1033 : 			{	// worth doing, copy down over hole
; 1034 : 
; 1035 :  #if _HAS_ITERATOR_DEBUGGING
; 1036 : 			if (_Last < _First || _First._Mycont != this
; 1037 : 				|| _First._Myptr < _Myfirst || _Mylast < _Last._Myptr)
; 1038 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1039 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1040 : 				_VEC_ITER_BASE(_First));
; 1041 : 			_Orphan_range(_First._Myptr, _Mylast);
; 1042 : 
; 1043 :  #else /* _HAS_ITERATOR_DEBUGGING */
; 1044 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1045 : 				_VEC_ITER_BASE(_First));

	mov	edi, DWORD PTR [ecx+8]
	cmp	edx, edi
	je	SHORT $LN26@erase@5
	push	ebx
	npad	4
$LL28@erase@5:
	mov	ebx, DWORD PTR [edx]
	mov	DWORD PTR [esi], ebx
	mov	ebx, DWORD PTR [edx+4]
	mov	DWORD PTR [esi+4], ebx
	add	edx, 8
	add	esi, 8
	cmp	edx, edi
	jne	SHORT $LL28@erase@5
	pop	ebx
$LN26@erase@5:

; 1046 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1047 : 
; 1048 : 			_Destroy(_Ptr, _Mylast);
; 1049 : 			_Mylast = _Ptr;

	mov	DWORD PTR [ecx+8], esi
	pop	edi
$LN1@erase@5:
	pop	esi

; 1050 : 			}
; 1051 : #if _HAS_ITERATOR_DEBUGGING
; 1052 :         return (iterator(_First._Myptr, this));
; 1053 : #else
; 1054 : 		return (_First);
; 1055 : #endif
; 1056 : 		}

	ret	12					; 0000000cH
?erase@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@0@Z ENDP ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::erase
_TEXT	ENDS
PUBLIC	?erase@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@0@Z ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::erase
; Function compile flags: /Ogtpy
;	COMDAT ?erase@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Last_arg$ = 16					; size = 4
?erase@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@0@Z PROC ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::erase, COMDAT
; _this$ = ecx

; 1029 : 		iterator _First = _Make_iter(_First_arg);
; 1030 : 		iterator _Last = _Make_iter(_Last_arg);
; 1031 : 
; 1032 : 		if (_First != _Last)

	mov	edx, DWORD PTR __Last_arg$[esp-4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	push	esi
	mov	esi, DWORD PTR __First_arg$[esp]
	mov	DWORD PTR [eax], esi
	cmp	esi, edx
	je	SHORT $LN1@erase@6
	push	edi

; 1033 : 			{	// worth doing, copy down over hole
; 1034 : 
; 1035 :  #if _HAS_ITERATOR_DEBUGGING
; 1036 : 			if (_Last < _First || _First._Mycont != this
; 1037 : 				|| _First._Myptr < _Myfirst || _Mylast < _Last._Myptr)
; 1038 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1039 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1040 : 				_VEC_ITER_BASE(_First));
; 1041 : 			_Orphan_range(_First._Myptr, _Mylast);
; 1042 : 
; 1043 :  #else /* _HAS_ITERATOR_DEBUGGING */
; 1044 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1045 : 				_VEC_ITER_BASE(_First));

	mov	edi, DWORD PTR [ecx+8]
	cmp	edx, edi
	je	SHORT $LN26@erase@6
	push	ebx
	npad	4
$LL28@erase@6:
	mov	ebx, DWORD PTR [edx]
	mov	DWORD PTR [esi], ebx
	mov	ebx, DWORD PTR [edx+4]
	mov	DWORD PTR [esi+4], ebx
	add	edx, 8
	add	esi, 8
	cmp	edx, edi
	jne	SHORT $LL28@erase@6
	pop	ebx
$LN26@erase@6:

; 1046 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1047 : 
; 1048 : 			_Destroy(_Ptr, _Mylast);
; 1049 : 			_Mylast = _Ptr;

	mov	DWORD PTR [ecx+8], esi
	pop	edi
$LN1@erase@6:
	pop	esi

; 1050 : 			}
; 1051 : #if _HAS_ITERATOR_DEBUGGING
; 1052 :         return (iterator(_First._Myptr, this));
; 1053 : #else
; 1054 : 		return (_First);
; 1055 : #endif
; 1056 : 		}

	ret	12					; 0000000cH
?erase@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@0@Z ENDP ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::erase
_TEXT	ENDS
PUBLIC	??$_Umove@PAU?$pair@IPAVCvRandom@@@std@@@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAEPAU?$pair@IPAVCvRandom@@@1@PAU21@00@Z ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::_Umove<std::pair<unsigned int,CvRandom *> *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Umove@PAU?$pair@IPAVCvRandom@@@std@@@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAEPAU?$pair@IPAVCvRandom@@@1@PAU21@00@Z
_TEXT	SEGMENT
$T233522 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$233526 = 16					; size = 1
__Ptr$ = 16						; size = 4
??$_Umove@PAU?$pair@IPAVCvRandom@@@std@@@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAEPAU?$pair@IPAVCvRandom@@@1@PAU21@00@Z PROC ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::_Umove<std::pair<unsigned int,CvRandom *> *>, COMDAT
; _this$ = ecx

; 1145 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

	push	ecx

; 1146 : 		{	// move initializing [_First, _Last), using allocator
; 1147 : 		return (_STDEXT _Unchecked_uninitialized_move(_First, _Last,
; 1148 : 			_Ptr, this->_Alval));

	mov	edx, DWORD PTR __Cat$233526[esp]
	mov	BYTE PTR $T233522[esp+4], 0
	mov	eax, DWORD PTR $T233522[esp+4]
	push	eax
	mov	eax, DWORD PTR __Ptr$[esp+4]
	push	edx
	mov	edx, DWORD PTR __First$[esp+8]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAU?$pair@IPAVCvRandom@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@YAPAU?$pair@IPAVCvRandom@@@0@PAU10@00AAV?$allocator@U?$pair@IPAVCvRandom@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> *,std::allocator<std::pair<unsigned int,CvRandom *> > >

; 1149 : 		}

	add	esp, 28					; 0000001cH
	ret	12					; 0000000cH
??$_Umove@PAU?$pair@IPAVCvRandom@@@std@@@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAEPAU?$pair@IPAVCvRandom@@@1@PAU21@00@Z ENDP ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::_Umove<std::pair<unsigned int,CvRandom *> *>
_TEXT	ENDS
PUBLIC	??$_Umove@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAEPAU?$pair@IPAVCvDllNetInitInfo@@@1@PAU21@00@Z ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::_Umove<std::pair<unsigned int,CvDllNetInitInfo *> *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Umove@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAEPAU?$pair@IPAVCvDllNetInitInfo@@@1@PAU21@00@Z
_TEXT	SEGMENT
$T233577 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$233581 = 16					; size = 1
__Ptr$ = 16						; size = 4
??$_Umove@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAEPAU?$pair@IPAVCvDllNetInitInfo@@@1@PAU21@00@Z PROC ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::_Umove<std::pair<unsigned int,CvDllNetInitInfo *> *>, COMDAT
; _this$ = ecx

; 1145 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

	push	ecx

; 1146 : 		{	// move initializing [_First, _Last), using allocator
; 1147 : 		return (_STDEXT _Unchecked_uninitialized_move(_First, _Last,
; 1148 : 			_Ptr, this->_Alval));

	mov	edx, DWORD PTR __Cat$233581[esp]
	mov	BYTE PTR $T233577[esp+4], 0
	mov	eax, DWORD PTR $T233577[esp+4]
	push	eax
	mov	eax, DWORD PTR __Ptr$[esp+4]
	push	edx
	mov	edx, DWORD PTR __First$[esp+8]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@0@PAU10@00AAV?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> *,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >

; 1149 : 		}

	add	esp, 28					; 0000001cH
	ret	12					; 0000000cH
??$_Umove@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAEPAU?$pair@IPAVCvDllNetInitInfo@@@1@PAU21@00@Z ENDP ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::_Umove<std::pair<unsigned int,CvDllNetInitInfo *> *>
_TEXT	ENDS
PUBLIC	??$_Umove@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAEPAU?$pair@IPAVCvDllNetLoadGameInfo@@@1@PAU21@00@Z ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::_Umove<std::pair<unsigned int,CvDllNetLoadGameInfo *> *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Umove@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAEPAU?$pair@IPAVCvDllNetLoadGameInfo@@@1@PAU21@00@Z
_TEXT	SEGMENT
$T233632 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$233635 = 16					; size = 1
__Ptr$ = 16						; size = 4
??$_Umove@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAEPAU?$pair@IPAVCvDllNetLoadGameInfo@@@1@PAU21@00@Z PROC ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::_Umove<std::pair<unsigned int,CvDllNetLoadGameInfo *> *>, COMDAT
; _this$ = ecx

; 1145 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

	push	ecx

; 1146 : 		{	// move initializing [_First, _Last), using allocator
; 1147 : 		return (_STDEXT _Unchecked_uninitialized_move(_First, _Last,
; 1148 : 			_Ptr, this->_Alval));

	mov	edx, DWORD PTR __Cat$233635[esp]
	mov	BYTE PTR $T233632[esp+4], 0
	mov	eax, DWORD PTR $T233632[esp+4]
	push	eax
	mov	eax, DWORD PTR __Ptr$[esp+4]
	push	edx
	mov	edx, DWORD PTR __First$[esp+8]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@PAU10@00AAV?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >

; 1149 : 		}

	add	esp, 28					; 0000001cH
	ret	12					; 0000000cH
??$_Umove@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAEPAU?$pair@IPAVCvDllNetLoadGameInfo@@@1@PAU21@00@Z ENDP ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::_Umove<std::pair<unsigned int,CvDllNetLoadGameInfo *> *>
_TEXT	ENDS
PUBLIC	??$_Umove@PAUCvDllPathFinderUpdateListData@@@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAEPAUCvDllPathFinderUpdateListData@@PAU2@00@Z ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::_Umove<CvDllPathFinderUpdateListData *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Umove@PAUCvDllPathFinderUpdateListData@@@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAEPAUCvDllPathFinderUpdateListData@@PAU2@00@Z
_TEXT	SEGMENT
$T233687 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$233690 = 16					; size = 1
__Ptr$ = 16						; size = 4
??$_Umove@PAUCvDllPathFinderUpdateListData@@@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAEPAUCvDllPathFinderUpdateListData@@PAU2@00@Z PROC ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::_Umove<CvDllPathFinderUpdateListData *>, COMDAT
; _this$ = ecx

; 1145 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

	push	ecx

; 1146 : 		{	// move initializing [_First, _Last), using allocator
; 1147 : 		return (_STDEXT _Unchecked_uninitialized_move(_First, _Last,
; 1148 : 			_Ptr, this->_Alval));

	mov	edx, DWORD PTR __Cat$233690[esp]
	mov	BYTE PTR $T233687[esp+4], 0
	mov	eax, DWORD PTR $T233687[esp+4]
	push	eax
	mov	eax, DWORD PTR __Ptr$[esp+4]
	push	edx
	mov	edx, DWORD PTR __First$[esp+8]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAUCvDllPathFinderUpdateListData@@PAU1@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@YAPAUCvDllPathFinderUpdateListData@@PAU1@00AAV?$allocator@UCvDllPathFinderUpdateListData@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<CvDllPathFinderUpdateListData *,CvDllPathFinderUpdateListData *,std::allocator<CvDllPathFinderUpdateListData> >

; 1149 : 		}

	add	esp, 28					; 0000001cH
	ret	12					; 0000000cH
??$_Umove@PAUCvDllPathFinderUpdateListData@@@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAEPAUCvDllPathFinderUpdateListData@@PAU2@00@Z ENDP ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::_Umove<CvDllPathFinderUpdateListData *>
_TEXT	ENDS
PUBLIC	??$_Unchecked_uninitialized_move@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@PAUCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@2@@stdext@@YAPAUCvDllPathFinderUpdateListData@@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@0PAU1@AAV?$allocator@UCvDllPathFinderUpdateListData@@@3@@Z ; stdext::_Unchecked_uninitialized_move<std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >,CvDllPathFinderUpdateListData *,std::allocator<CvDllPathFinderUpdateListData> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$_Unchecked_uninitialized_move@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@PAUCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@2@@stdext@@YAPAUCvDllPathFinderUpdateListData@@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@0PAU1@AAV?$allocator@UCvDllPathFinderUpdateListData@@@3@@Z
_TEXT	SEGMENT
$T233724 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$233728 = 16					; size = 1
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Unchecked_uninitialized_move@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@PAUCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@2@@stdext@@YAPAUCvDllPathFinderUpdateListData@@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@0PAU1@AAV?$allocator@UCvDllPathFinderUpdateListData@@@3@@Z PROC ; stdext::_Unchecked_uninitialized_move<std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >,CvDllPathFinderUpdateListData *,std::allocator<CvDllPathFinderUpdateListData> >, COMDAT

; 861  : 	{	// move [_First, _Last) to raw _Dest, using _Al

	push	ecx

; 862  : 	return (_STD _Uninit_move(_CHECKED_BASE(_First),
; 863  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 864  : 		_STD _Move_cat(_Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Cat$233728[esp]
	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T233724[esp+4], 0
	mov	eax, DWORD PTR $T233724[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@PAUCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@2@@std@@YAPAUCvDllPathFinderUpdateListData@@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@0@0PAU1@AAV?$allocator@UCvDllPathFinderUpdateListData@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >,CvDllPathFinderUpdateListData *,std::allocator<CvDllPathFinderUpdateListData> >

; 865  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$_Unchecked_uninitialized_move@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@PAUCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@2@@stdext@@YAPAUCvDllPathFinderUpdateListData@@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@0PAU1@AAV?$allocator@UCvDllPathFinderUpdateListData@@@3@@Z ENDP ; stdext::_Unchecked_uninitialized_move<std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >,CvDllPathFinderUpdateListData *,std::allocator<CvDllPathFinderUpdateListData> >
_TEXT	ENDS
PUBLIC	??_7CvDllGameContext@@6B@			; CvDllGameContext::`vftable'
PUBLIC	??0CvDllGameContext@@IAE@XZ			; CvDllGameContext::CvDllGameContext
PUBLIC	??_R4CvDllGameContext@@6B@			; CvDllGameContext::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCvDllGameContext@@@8			; CvDllGameContext `RTTI Type Descriptor'
PUBLIC	??_R3CvDllGameContext@@8			; CvDllGameContext::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CvDllGameContext@@8			; CvDllGameContext::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CvDllGameContext@@8		; CvDllGameContext::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?CreateRandomNumberGenerator@CvDllGameContext@@UAGIXZ ; CvDllGameContext::CreateRandomNumberGenerator
PUBLIC	?DestroyRandomNumberGenerator@CvDllGameContext@@UAGXI@Z ; CvDllGameContext::DestroyRandomNumberGenerator
PUBLIC	?CreateNetInitInfo@CvDllGameContext@@UAGIXZ	; CvDllGameContext::CreateNetInitInfo
PUBLIC	?DestroyNetInitInfo@CvDllGameContext@@UAGXI@Z	; CvDllGameContext::DestroyNetInitInfo
PUBLIC	?CreateNetLoadGameInfo@CvDllGameContext@@UAGIXZ	; CvDllGameContext::CreateNetLoadGameInfo
PUBLIC	?DestroyNetLoadGameInfo@CvDllGameContext@@UAGXI@Z ; CvDllGameContext::DestroyNetLoadGameInfo
PUBLIC	?TEMPCalculatePathFinderUpdates@CvDllGameContext@@UAGPAVICvEnumerator@@PAVICvUnit1@@HH@Z ; CvDllGameContext::TEMPCalculatePathFinderUpdates
EXTRN	??0CvDllWorldBuilderMapLoader@@QAE@XZ:PROC	; CvDllWorldBuilderMapLoader::CvDllWorldBuilderMapLoader
EXTRN	??2CvDllWorldBuilderMapLoader@@SAPAXI@Z:PROC	; CvDllWorldBuilderMapLoader::operator new
EXTRN	??0CvDllScriptSystemUtility@@QAE@XZ:PROC	; CvDllScriptSystemUtility::CvDllScriptSystemUtility
EXTRN	??2CvDllScriptSystemUtility@@SAPAXI@Z:PROC	; CvDllScriptSystemUtility::operator new
EXTRN	??0CvDllNetMessageHandler@@QAE@XZ:PROC		; CvDllNetMessageHandler::CvDllNetMessageHandler
EXTRN	??2CvDllNetMessageHandler@@SAPAXI@Z:PROC	; CvDllNetMessageHandler::operator new
EXTRN	??0CvDllNetworkSyncronization@@QAE@XZ:PROC	; CvDllNetworkSyncronization::CvDllNetworkSyncronization
EXTRN	??2CvDllNetworkSyncronization@@SAPAXI@Z:PROC	; CvDllNetworkSyncronization::operator new
;	COMDAT ??_R1A@?0A@EA@CvDllGameContext@@8
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
rdata$r	SEGMENT
??_R1A@?0A@EA@CvDllGameContext@@8 DD FLAT:??_R0?AVCvDllGameContext@@@8 ; CvDllGameContext::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CvDllGameContext@@8
rdata$r	ENDS
;	COMDAT ??_R2CvDllGameContext@@8
rdata$r	SEGMENT
??_R2CvDllGameContext@@8 DD FLAT:??_R1A@?0A@EA@CvDllGameContext@@8 ; CvDllGameContext::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ICvGameContext3@@8
	DD	FLAT:??_R1A@?0A@EA@ICvGameContext2@@8
	DD	FLAT:??_R1A@?0A@EA@ICvGameContext1@@8
	DD	FLAT:??_R1A@?0A@EA@ICvUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3CvDllGameContext@@8
rdata$r	SEGMENT
??_R3CvDllGameContext@@8 DD 00H				; CvDllGameContext::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2CvDllGameContext@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCvDllGameContext@@@8
_DATA	SEGMENT
??_R0?AVCvDllGameContext@@@8 DD FLAT:??_7type_info@@6B@	; CvDllGameContext `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCvDllGameContext@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CvDllGameContext@@6B@
rdata$r	SEGMENT
??_R4CvDllGameContext@@6B@ DD 00H			; CvDllGameContext::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCvDllGameContext@@@8
	DD	FLAT:??_R3CvDllGameContext@@8
rdata$r	ENDS
;	COMDAT ??_7CvDllGameContext@@6B@
CONST	SEGMENT
??_7CvDllGameContext@@6B@ DD FLAT:??_R4CvDllGameContext@@6B@ ; CvDllGameContext::`vftable'
	DD	FLAT:?QueryInterface@CvDllGameContext@@UAGPAXU_GUID@@@Z
	DD	FLAT:?Destroy@CvDllGameContext@@MAGXXZ
	DD	FLAT:?GetDLLGUID@CvDllGameContext@@UAG?AU_GUID@@XZ
	DD	FLAT:?GetDLLVersion@CvDllGameContext@@UAGPBDXZ
	DD	FLAT:?GetNetworkSyncronizer@CvDllGameContext@@UAGPAVICvNetworkSyncronization1@@XZ
	DD	FLAT:?GetNetMessageHandler@CvDllGameContext@@UAGPAVICvNetMessageHandler1@@XZ
	DD	FLAT:?GetWorldBuilderMapLoader@CvDllGameContext@@UAGPAVICvWorldBuilderMapLoader1@@XZ
	DD	FLAT:?GetPreGame@CvDllGameContext@@UAGPAVICvPreGame1@@XZ
	DD	FLAT:?GetGame@CvDllGameContext@@UAGPAVICvGame1@@XZ
	DD	FLAT:?GetGameAsynch@CvDllGameContext@@UAGPAVICvGameAsynch1@@XZ
	DD	FLAT:?GetMap@CvDllGameContext@@UAGPAVICvMap1@@XZ
	DD	FLAT:?GetTeam@CvDllGameContext@@UAGPAVICvTeam1@@W4TeamTypes@@@Z
	DD	FLAT:?GetInfoTypeForString@CvDllGameContext@@UBGHPBD_N@Z
	DD	FLAT:?GetInfoTypeForHash@CvDllGameContext@@UBGHI_N@Z
	DD	FLAT:?GetCivilizationInfoIndex@CvDllGameContext@@UAG?AW4CivilizationTypes@@PBD@Z
	DD	FLAT:?GetNumPlayableCivilizationInfos@CvDllGameContext@@UAGHXZ
	DD	FLAT:?GetNumAIPlayableCivilizationInfos@CvDllGameContext@@UAGHXZ
	DD	FLAT:?GetNumPlayableMinorCivs@CvDllGameContext@@UAGHXZ
	DD	FLAT:?GetNumBuildInfos@CvDllGameContext@@UAGHXZ
	DD	FLAT:?GetNumBuildingInfos@CvDllGameContext@@UAGHXZ
	DD	FLAT:?GetNumCivilizationInfos@CvDllGameContext@@UAGHXZ
	DD	FLAT:?GetNumClimateInfos@CvDllGameContext@@UAGHXZ
	DD	FLAT:?GetNumColorInfos@CvDllGameContext@@UAGHXZ
	DD	FLAT:?GetNumEraInfos@CvDllGameContext@@UAGHXZ
	DD	FLAT:?GetNumFeatureInfos@CvDllGameContext@@UAGHXZ
	DD	FLAT:?GetNumGameOptionInfos@CvDllGameContext@@UAGHXZ
	DD	FLAT:?GetNumGameSpeedInfos@CvDllGameContext@@UAGHXZ
	DD	FLAT:?GetNumHandicapInfos@CvDllGameContext@@UAGHXZ
	DD	FLAT:?GetNumImprovementInfos@CvDllGameContext@@UAGHXZ
	DD	FLAT:?GetNumLeaderHeadInfos@CvDllGameContext@@UAGHXZ
	DD	FLAT:?GetNumMinorCivInfos@CvDllGameContext@@UAGHXZ
	DD	FLAT:?GetNumPlayerColorInfos@CvDllGameContext@@UAGHXZ
	DD	FLAT:?GetNumPolicyInfos@CvDllGameContext@@UAGHXZ
	DD	FLAT:?GetNumPromotionInfos@CvDllGameContext@@UAGHXZ
	DD	FLAT:?GetNumResourceInfos@CvDllGameContext@@UAGHXZ
	DD	FLAT:?GetNumSeaLevelInfos@CvDllGameContext@@UAGHXZ
	DD	FLAT:?GetNumTechInfos@CvDllGameContext@@UAGHXZ
	DD	FLAT:?GetNumTerrainInfos@CvDllGameContext@@UAGHXZ
	DD	FLAT:?GetNumUnitCombatClassInfos@CvDllGameContext@@UAGHXZ
	DD	FLAT:?GetNumUnitInfos@CvDllGameContext@@UAGHXZ
	DD	FLAT:?GetNumVictoryInfos@CvDllGameContext@@UAGHXZ
	DD	FLAT:?GetNumWorldInfos@CvDllGameContext@@UAGHXZ
	DD	FLAT:?GetBuildInfo@CvDllGameContext@@UAGPAVICvBuildInfo1@@W4BuildTypes@@@Z
	DD	FLAT:?GetBuildingInfo@CvDllGameContext@@UAGPAVICvBuildingInfo1@@W4BuildingTypes@@@Z
	DD	FLAT:?GetCivilizationInfo@CvDllGameContext@@UAGPAVICvCivilizationInfo1@@W4CivilizationTypes@@@Z
	DD	FLAT:?GetColorInfo@CvDllGameContext@@UAGPAVICvColorInfo1@@W4ColorTypes@@@Z
	DD	FLAT:?GetEraInfo@CvDllGameContext@@UAGPAVICvEraInfo1@@W4EraTypes@@@Z
	DD	FLAT:?GetFeatureInfo@CvDllGameContext@@UAGPAVICvFeatureInfo1@@W4FeatureTypes@@@Z
	DD	FLAT:?GetGameOptionInfo@CvDllGameContext@@UAGPAVICvGameOptionInfo1@@W4GameOptionTypes@@@Z
	DD	FLAT:?GetGameSpeedInfo@CvDllGameContext@@UAGPAVICvGameSpeedInfo1@@W4GameSpeedTypes@@@Z
	DD	FLAT:?GetHandicapInfo@CvDllGameContext@@UAGPAVICvHandicapInfo1@@W4HandicapTypes@@@Z
	DD	FLAT:?GetInterfaceModeInfo@CvDllGameContext@@UAGPAVICvInterfaceModeInfo1@@W4InterfaceModeTypes@@@Z
	DD	FLAT:?GetImprovementInfo@CvDllGameContext@@UAGPAVICvImprovementInfo1@@W4ImprovementTypes@@@Z
	DD	FLAT:?GetLeaderHeadInfo@CvDllGameContext@@UAGPAVICvLeaderHeadInfo1@@W4LeaderHeadTypes@@@Z
	DD	FLAT:?GetMinorCivInfo@CvDllGameContext@@UAGPAVICvMinorCivInfo1@@W4MinorCivTypes@@@Z
	DD	FLAT:?GetMissionInfo@CvDllGameContext@@UAGPAVICvMissionInfo1@@W4MissionTypes@@@Z
	DD	FLAT:?GetPlayerColorInfo@CvDllGameContext@@UAGPAVICvPlayerColorInfo1@@W4PlayerColorTypes@@@Z
	DD	FLAT:?GetPlayerOptionInfo@CvDllGameContext@@UAGPAVICvPlayerOptionInfo1@@W4PlayerOptionTypes@@@Z
	DD	FLAT:?GetPolicyInfo@CvDllGameContext@@UAGPAVICvPolicyInfo1@@W4PolicyTypes@@@Z
	DD	FLAT:?GetPromotionInfo@CvDllGameContext@@UAGPAVICvPromotionInfo1@@W4PromotionTypes@@@Z
	DD	FLAT:?GetResourceInfo@CvDllGameContext@@UAGPAVICvResourceInfo1@@W4ResourceTypes@@@Z
	DD	FLAT:?GetTechInfo@CvDllGameContext@@UAGPAVICvTechInfo1@@W4TechTypes@@@Z
	DD	FLAT:?GetTerrainInfo@CvDllGameContext@@UAGPAVICvTerrainInfo1@@W4TerrainTypes@@@Z
	DD	FLAT:?GetUnitInfo@CvDllGameContext@@UAGPAVICvUnitInfo1@@W4UnitTypes@@@Z
	DD	FLAT:?GetUnitCombatClassInfo@CvDllGameContext@@UAGPAVICvUnitCombatClassInfo1@@W4UnitCombatTypes@@@Z
	DD	FLAT:?GetVictoryInfo@CvDllGameContext@@UAGPAVICvVictoryInfo1@@W4VictoryTypes@@@Z
	DD	FLAT:?GetDefineSTRING@CvDllGameContext@@UAG_NPADIPBD_N@Z
	DD	FLAT:?GetMOVE_DENOMINATOR@CvDllGameContext@@UBGHXZ
	DD	FLAT:?GetMAX_CITY_HIT_POINTS@CvDllGameContext@@UBGHXZ
	DD	FLAT:?GetCITY_ZOOM_OFFSET@CvDllGameContext@@UBGMXZ
	DD	FLAT:?GetCITY_ZOOM_LEVEL_1@CvDllGameContext@@UBGMXZ
	DD	FLAT:?GetCITY_ZOOM_LEVEL_2@CvDllGameContext@@UBGMXZ
	DD	FLAT:?GetCITY_ZOOM_LEVEL_3@CvDllGameContext@@UBGMXZ
	DD	FLAT:?GetRUINS_IMPROVEMENT@CvDllGameContext@@UBGHXZ
	DD	FLAT:?GetSHALLOW_WATER_TERRAIN@CvDllGameContext@@UBGHXZ
	DD	FLAT:?GetDEFICIT_UNIT_DISBANDING_THRESHOLD@CvDllGameContext@@UBGHXZ
	DD	FLAT:?GetLAST_UNIT_ART_ERA@CvDllGameContext@@UBGHXZ
	DD	FLAT:?GetLAST_EMBARK_ART_ERA@CvDllGameContext@@UBGHXZ
	DD	FLAT:?GetHEAVY_RESOURCE_THRESHOLD@CvDllGameContext@@UBGHXZ
	DD	FLAT:?GetSTANDARD_HANDICAP@CvDllGameContext@@UBGHXZ
	DD	FLAT:?GetSTANDARD_GAMESPEED@CvDllGameContext@@UBGHXZ
	DD	FLAT:?GetLAST_BRIDGE_ART_ERA@CvDllGameContext@@UBGHXZ
	DD	FLAT:?GetBARBARIAN_CIVILIZATION@CvDllGameContext@@UBGHXZ
	DD	FLAT:?GetMINOR_CIVILIZATION@CvDllGameContext@@UBGHXZ
	DD	FLAT:?GetBARBARIAN_HANDICAP@CvDllGameContext@@UBGHXZ
	DD	FLAT:?GetBARBARIAN_LEADER@CvDllGameContext@@UBGHXZ
	DD	FLAT:?GetMINOR_CIV_HANDICAP@CvDllGameContext@@UBGHXZ
	DD	FLAT:?GetWALLS_BUILDINGCLASS@CvDllGameContext@@UBGHXZ
	DD	FLAT:?GetAI_HANDICAP@CvDllGameContext@@UBGHXZ
	DD	FLAT:?GetNUM_CITY_PLOTS@CvDllGameContext@@UBGHXZ
	DD	FLAT:?GetHexDebugLayerNames@CvDllGameContext@@UAGPAPBDXZ
	DD	FLAT:?GetHexDebugLayerScale@CvDllGameContext@@UAGMPBD@Z
	DD	FLAT:?GetHexDebugLayerString@CvDllGameContext@@UAG_NPAVICvPlot1@@PBDW4PlayerTypes@@PADI@Z
	DD	FLAT:?Init@CvDllGameContext@@UAGXXZ
	DD	FLAT:?Uninit@CvDllGameContext@@UAGXXZ
	DD	FLAT:?GetScriptSystemUtility@CvDllGameContext@@UAGPAVICvScriptSystemUtility1@@XZ
	DD	FLAT:?GetNotificationType@CvDllGameContext@@UBGPBDH@Z
	DD	FLAT:?GetLogging@CvDllGameContext@@UAG_NXZ
	DD	FLAT:?SetLogging@CvDllGameContext@@UAGX_N@Z
	DD	FLAT:?GetRandLogging@CvDllGameContext@@UAGHXZ
	DD	FLAT:?SetRandLogging@CvDllGameContext@@UAGXH@Z
	DD	FLAT:?GetAILogging@CvDllGameContext@@UAG_NXZ
	DD	FLAT:?SetAILogging@CvDllGameContext@@UAGX_N@Z
	DD	FLAT:?GetAIPerfLogging@CvDllGameContext@@UAG_NXZ
	DD	FLAT:?SetAIPerfLogging@CvDllGameContext@@UAGX_N@Z
	DD	FLAT:?GetBuilderAILogging@CvDllGameContext@@UAG_NXZ
	DD	FLAT:?SetBuilderAILogging@CvDllGameContext@@UAGX_N@Z
	DD	FLAT:?GetPlayerAndCityAILogSplit@CvDllGameContext@@UAG_NXZ
	DD	FLAT:?SetPlayerAndCityAILogSplit@CvDllGameContext@@UAGX_N@Z
	DD	FLAT:?GetTutorialLogging@CvDllGameContext@@UAG_NXZ
	DD	FLAT:?SetTutorialLogging@CvDllGameContext@@UAGX_N@Z
	DD	FLAT:?GetTutorialDebugging@CvDllGameContext@@UAG_NXZ
	DD	FLAT:?SetTutorialDebugging@CvDllGameContext@@UAGX_N@Z
	DD	FLAT:?GetAllowRClickMovementWhileScrolling@CvDllGameContext@@UAG_NXZ
	DD	FLAT:?SetAllowRClickMovementWhileScrolling@CvDllGameContext@@UAGX_N@Z
	DD	FLAT:?GetPostTurnAutosaves@CvDllGameContext@@UAG_NXZ
	DD	FLAT:?SetPostTurnAutosaves@CvDllGameContext@@UAGX_N@Z
	DD	FLAT:?GetDatabaseLoadUtility@CvDllGameContext@@UAGPAVICvDLLDatabaseUtility1@@XZ
	DD	FLAT:?GetPlotDirectionX@CvDllGameContext@@UAGPAHXZ
	DD	FLAT:?GetPlotDirectionY@CvDllGameContext@@UAGPAHXZ
	DD	FLAT:?GetCityPlotX@CvDllGameContext@@UAGPAHXZ
	DD	FLAT:?GetCityPlotY@CvDllGameContext@@UAGPAHXZ
	DD	FLAT:?SetGameDatabase@CvDllGameContext@@UAGXPAVConnection@Database@@@Z
	DD	FLAT:?SetDLLIFace@CvDllGameContext@@UAG_NPAVICvEngineUtility1@@@Z
	DD	FLAT:?IsGraphicsInitialized@CvDllGameContext@@UBG_NXZ
	DD	FLAT:?SetGraphicsInitialized@CvDllGameContext@@UAGX_N@Z
	DD	FLAT:?SetOutOfSyncDebuggingEnabled@CvDllGameContext@@UAGX_N@Z
	DD	FLAT:?RandomNumberGeneratorSyncCheck@CvDllGameContext@@UAG_NW4PlayerTypes@@PAVICvRandom1@@_N@Z
	DD	FLAT:?CreateRandomNumberGenerator@CvDllGameContext@@UAGIXZ
	DD	FLAT:?GetRandomNumberGenerator@CvDllGameContext@@UAGPAVICvRandom1@@I@Z
	DD	FLAT:?DestroyRandomNumberGenerator@CvDllGameContext@@UAGXI@Z
	DD	FLAT:?CreateNetInitInfo@CvDllGameContext@@UAGIXZ
	DD	FLAT:?GetNetInitInfo@CvDllGameContext@@UAGPAVICvNetInitInfo1@@I@Z
	DD	FLAT:?DestroyNetInitInfo@CvDllGameContext@@UAGXI@Z
	DD	FLAT:?CreateNetLoadGameInfo@CvDllGameContext@@UAGIXZ
	DD	FLAT:?GetNetLoadGameInfo@CvDllGameContext@@UAGPAVICvNetLoadGameInfo1@@I@Z
	DD	FLAT:?DestroyNetLoadGameInfo@CvDllGameContext@@UAGXI@Z
	DD	FLAT:?TEMPOnHexUnitChanged@CvDllGameContext@@UAGXPAVICvUnit1@@@Z
	DD	FLAT:?TEMPOnHexUnitChangedAttack@CvDllGameContext@@UAGXPAVICvUnit1@@@Z
	DD	FLAT:?TEMPCalculatePathFinderUpdates@CvDllGameContext@@UAGPAVICvEnumerator@@PAVICvUnit1@@HH@Z
	DD	FLAT:?ResetPathFinder@CvDllGameContext@@UAGXXZ
	DD	FLAT:?SetEngineUserInterface@CvDllGameContext@@UAGXPAVICvUserInterface2@@@Z
	DD	FLAT:?Debug_GetHeap@CvDllGameContext@@UBGPAXXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0CvDllGameContext@@IAE@XZ DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$??0CvDllGameContext@@IAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0CvDllGameContext@@IAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CvDllGameContext@@IAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CvDllGameContext@@IAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CvDllGameContext@@IAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CvDllGameContext@@IAE@XZ$3
	DD	02H
	DD	FLAT:__unwindfunclet$??0CvDllGameContext@@IAE@XZ$4
	DD	02H
	DD	FLAT:__unwindfunclet$??0CvDllGameContext@@IAE@XZ$5
	DD	02H
	DD	FLAT:__unwindfunclet$??0CvDllGameContext@@IAE@XZ$6
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvdllcontext.cpp
xdata$x	ENDS
;	COMDAT ??0CvDllGameContext@@IAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T233749 = -16						; size = 4
$T233745 = -16						; size = 4
$T233741 = -16						; size = 4
$T233737 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CvDllGameContext@@IAE@XZ PROC			; CvDllGameContext::CvDllGameContext, COMDAT
; _this$ = ecx

; 59   : {

	push	-1
	push	__ehhandler$??0CvDllGameContext@@IAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	ebx
	push	esi
	mov	esi, ecx
	push	edi
	xor	edi, edi
	mov	DWORD PTR [esi], OFFSET ??_7CvDllGameContext@@6B@
	mov	DWORD PTR _this$[esp+32], esi
	mov	DWORD PTR [esi+24], edi
	mov	DWORD PTR [esi+28], edi
	mov	DWORD PTR [esi+32], edi
	mov	DWORD PTR [esi+36], edi
	mov	DWORD PTR __$EHRec$[esp+40], edi
	mov	DWORD PTR [esi+44], edi
	mov	DWORD PTR [esi+48], edi
	mov	DWORD PTR [esi+52], edi
	mov	DWORD PTR [esi+56], edi
	mov	DWORD PTR [esi+64], edi
	mov	DWORD PTR [esi+68], edi
	mov	DWORD PTR [esi+72], edi
	mov	bl, 2

; 60   : 	m_pNetworkSyncronizer = new CvDllNetworkSyncronization();

	push	4
	mov	BYTE PTR __$EHRec$[esp+44], bl
	mov	DWORD PTR [esi+76], edi
	call	??2CvDllNetworkSyncronization@@SAPAXI@Z	; CvDllNetworkSyncronization::operator new
	add	esp, 4
	mov	DWORD PTR $T233737[esp+32], eax
	mov	BYTE PTR __$EHRec$[esp+40], 3
	cmp	eax, edi
	je	SHORT $LN3@CvDllGameC
	mov	ecx, eax
	call	??0CvDllNetworkSyncronization@@QAE@XZ	; CvDllNetworkSyncronization::CvDllNetworkSyncronization
	jmp	SHORT $LN4@CvDllGameC
$LN3@CvDllGameC:
	xor	eax, eax
$LN4@CvDllGameC:

; 61   : 	m_pNetMessageHandler = new CvDllNetMessageHandler();

	push	4
	mov	BYTE PTR __$EHRec$[esp+44], bl
	mov	DWORD PTR [esi+4], eax
	call	??2CvDllNetMessageHandler@@SAPAXI@Z	; CvDllNetMessageHandler::operator new
	add	esp, 4
	mov	DWORD PTR $T233741[esp+32], eax
	mov	BYTE PTR __$EHRec$[esp+40], 4
	cmp	eax, edi
	je	SHORT $LN5@CvDllGameC
	mov	ecx, eax
	call	??0CvDllNetMessageHandler@@QAE@XZ	; CvDllNetMessageHandler::CvDllNetMessageHandler
	jmp	SHORT $LN6@CvDllGameC
$LN5@CvDllGameC:
	xor	eax, eax
$LN6@CvDllGameC:

; 62   : 	m_pScriptSystemUtility = new CvDllScriptSystemUtility();

	push	4
	mov	BYTE PTR __$EHRec$[esp+44], bl
	mov	DWORD PTR [esi+8], eax
	call	??2CvDllScriptSystemUtility@@SAPAXI@Z	; CvDllScriptSystemUtility::operator new
	add	esp, 4
	mov	DWORD PTR $T233745[esp+32], eax
	mov	BYTE PTR __$EHRec$[esp+40], 5
	cmp	eax, edi
	je	SHORT $LN7@CvDllGameC
	mov	ecx, eax
	call	??0CvDllScriptSystemUtility@@QAE@XZ	; CvDllScriptSystemUtility::CvDllScriptSystemUtility
	jmp	SHORT $LN8@CvDllGameC
$LN7@CvDllGameC:
	xor	eax, eax
$LN8@CvDllGameC:

; 63   : 	m_pWorldBuilderMapLoader = new CvDllWorldBuilderMapLoader();

	push	4
	mov	BYTE PTR __$EHRec$[esp+44], bl
	mov	DWORD PTR [esi+12], eax
	call	??2CvDllWorldBuilderMapLoader@@SAPAXI@Z	; CvDllWorldBuilderMapLoader::operator new
	add	esp, 4
	mov	DWORD PTR $T233749[esp+32], eax
	mov	BYTE PTR __$EHRec$[esp+40], 6
	cmp	eax, edi
	je	SHORT $LN9@CvDllGameC
	mov	ecx, eax
	call	??0CvDllWorldBuilderMapLoader@@QAE@XZ	; CvDllWorldBuilderMapLoader::CvDllWorldBuilderMapLoader
	mov	DWORD PTR [esi+16], eax
	pop	edi

; 64   : }

	mov	eax, esi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	mov	DWORD PTR fs:0, ecx
	add	esp, 20					; 00000014H
	ret	0
$LN9@CvDllGameC:
	mov	ecx, DWORD PTR __$EHRec$[esp+32]
	mov	DWORD PTR [esi+16], edi
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 20					; 00000014H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CvDllGameContext@@IAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	jmp	??1?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAE@XZ ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::~vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >
__unwindfunclet$??0CvDllGameContext@@IAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	jmp	??1?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAE@XZ ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::~vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >
__unwindfunclet$??0CvDllGameContext@@IAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	jmp	??1?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAE@XZ ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::~vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >
__unwindfunclet$??0CvDllGameContext@@IAE@XZ$3:
	mov	eax, DWORD PTR $T233737[ebp]
	push	eax
	call	??3CvDllNetworkSyncronization@@SAXPAX@Z	; CvDllNetworkSyncronization::operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0CvDllGameContext@@IAE@XZ$4:
	mov	eax, DWORD PTR $T233741[ebp]
	push	eax
	call	??3CvDllNetMessageHandler@@SAXPAX@Z	; CvDllNetMessageHandler::operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0CvDllGameContext@@IAE@XZ$5:
	mov	eax, DWORD PTR $T233745[ebp]
	push	eax
	call	??3CvDllScriptSystemUtility@@SAXPAX@Z	; CvDllScriptSystemUtility::operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0CvDllGameContext@@IAE@XZ$6:
	mov	eax, DWORD PTR $T233749[ebp]
	push	eax
	call	??3CvDllWorldBuilderMapLoader@@SAXPAX@Z	; CvDllWorldBuilderMapLoader::operator delete
	pop	ecx
	ret	0
__ehhandler$??0CvDllGameContext@@IAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??0CvDllGameContext@@IAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CvDllGameContext@@IAE@XZ ENDP			; CvDllGameContext::CvDllGameContext
PUBLIC	?InitializeSingleton@CvDllGameContext@@SAXXZ	; CvDllGameContext::InitializeSingleton
EXTRN	__imp__HeapSetInformation@16:PROC
EXTRN	__imp__HeapCreate@12:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?InitializeSingleton@CvDllGameContext@@SAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?InitializeSingleton@CvDllGameContext@@SAXXZ$0
__ehfuncinfo$?InitializeSingleton@CvDllGameContext@@SAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?InitializeSingleton@CvDllGameContext@@SAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?InitializeSingleton@CvDllGameContext@@SAXXZ
_TEXT	SEGMENT
$T234209 = -16						; size = 4
_HeapInformation$222749 = -16				; size = 4
__$EHRec$ = -12						; size = 12
?InitializeSingleton@CvDllGameContext@@SAXXZ PROC	; CvDllGameContext::InitializeSingleton, COMDAT

; 131  : {

	push	-1
	push	__ehhandler$?InitializeSingleton@CvDllGameContext@@SAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx

; 132  : 	if(s_pSingleton == NULL)

	cmp	DWORD PTR ?s_pSingleton@CvDllGameContext@@0PAV1@A, 0 ; CvDllGameContext::s_pSingleton
	jne	SHORT $LN1@Initialize

; 133  : 	{
; 134  : 		FAssert(s_hHeap == INVALID_HANDLE_VALUE);
; 135  : 		s_hHeap = HeapCreate(0, 0, 0);

	push	0
	push	0
	push	0
	call	DWORD PTR __imp__HeapCreate@12

; 136  : 
; 137  : 		//
; 138  : 		// Enable the low-fragmentation heap (LFH). Starting with Windows Vista,
; 139  : 		// the LFH is enabled by default but this call does not cause an error.
; 140  : 		//
; 141  : 		ULONG HeapInformation = 2;	//Low Fragmentation Heap
; 142  : 		HeapSetInformation(s_hHeap,
; 143  : 		                   HeapCompatibilityInformation,
; 144  : 		                   &HeapInformation,
; 145  : 		                   sizeof(HeapInformation));

	push	4
	lea	ecx, DWORD PTR _HeapInformation$222749[esp+20]
	push	ecx
	push	0
	push	eax
	mov	DWORD PTR ?s_hHeap@CvDllGameContext@@0PAXA, eax ; CvDllGameContext::s_hHeap
	mov	DWORD PTR _HeapInformation$222749[esp+32], 2
	call	DWORD PTR __imp__HeapSetInformation@16
$LN1@Initialize:

; 146  : 
; 147  : 	}
; 148  : 	s_pSingleton = FNEW(CvDllGameContext(), c_eCiv5GameplayDLL, 0);

	push	80					; 00000050H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T234209[esp+16], eax
	mov	DWORD PTR __$EHRec$[esp+24], 0
	test	eax, eax
	je	SHORT $LN4@Initialize
	mov	ecx, eax
	call	??0CvDllGameContext@@IAE@XZ		; CvDllGameContext::CvDllGameContext
	mov	DWORD PTR ?s_pSingleton@CvDllGameContext@@0PAV1@A, eax ; CvDllGameContext::s_pSingleton

; 149  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	0
$LN4@Initialize:
	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	xor	eax, eax
	mov	DWORD PTR ?s_pSingleton@CvDllGameContext@@0PAV1@A, eax ; CvDllGameContext::s_pSingleton
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?InitializeSingleton@CvDllGameContext@@SAXXZ$0:
	mov	eax, DWORD PTR $T234209[ebp]
	push	eax
	call	??3ICvUnknown@@SGXPAX@Z			; ICvUnknown::operator delete
	ret	0
__ehhandler$?InitializeSingleton@CvDllGameContext@@SAXXZ:
	mov	eax, OFFSET __ehfuncinfo$?InitializeSingleton@CvDllGameContext@@SAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?InitializeSingleton@CvDllGameContext@@SAXXZ ENDP	; CvDllGameContext::InitializeSingleton
; Function compile flags: /Ogtpy
;	COMDAT ?DestroyRandomNumberGenerator@CvDllGameContext@@UAGXI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_index$ = 12						; size = 4
?DestroyRandomNumberGenerator@CvDllGameContext@@UAGXI@Z PROC ; CvDllGameContext::DestroyRandomNumberGenerator, COMDAT

; 1234 : {

	push	esi
	push	edi

; 1235 : 	std::vector<std::pair<uint, CvRandom*> >::iterator it = m_RandomNumberGenerators.end();
; 1236 : 	for(it = m_RandomNumberGenerators.begin();

	mov	edi, DWORD PTR _this$[esp+4]
	mov	esi, DWORD PTR [edi+24]

; 1237 : 	        it != m_RandomNumberGenerators.end(); ++it)

	mov	eax, DWORD PTR [edi+28]
	cmp	esi, eax
	je	SHORT $LN71@DestroyRan
	mov	ecx, DWORD PTR _index$[esp+4]
$LL24@DestroyRan:

; 1238 : 	{
; 1239 : 		if((*it).first == index)

	cmp	DWORD PTR [esi], ecx
	je	SHORT $LN75@DestroyRan
	add	esi, 8
	cmp	esi, eax
	jne	SHORT $LL24@DestroyRan
$LN75@DestroyRan:

; 1240 : 			break;
; 1241 : 	}
; 1242 : 
; 1243 : 	if(it != m_RandomNumberGenerators.end())

	cmp	esi, eax
	je	SHORT $LN71@DestroyRan

; 1244 : 	{
; 1245 : 		delete(*it).second;

	mov	ecx, DWORD PTR [esi+4]
	test	ecx, ecx
	je	SHORT $LN8@DestroyRan
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax]
	push	1
	call	edx
$LN8@DestroyRan:

; 1246 : 		m_RandomNumberGenerators.erase(it);

	mov	edx, DWORD PTR [edi+28]
	lea	eax, DWORD PTR [esi+8]
	cmp	eax, edx
	je	SHORT $LN62@DestroyRan
	lea	ecx, DWORD PTR [eax-8]
	npad	1
$LL64@DestroyRan:
	mov	esi, DWORD PTR [eax]
	mov	DWORD PTR [ecx], esi
	mov	esi, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], esi
	add	eax, 8
	add	ecx, 8
	cmp	eax, edx
	jne	SHORT $LL64@DestroyRan
$LN62@DestroyRan:
	add	DWORD PTR [edi+28], -8			; fffffff8H
$LN71@DestroyRan:
	pop	edi
	pop	esi

; 1247 : 	}
; 1248 : }

	ret	8
?DestroyRandomNumberGenerator@CvDllGameContext@@UAGXI@Z ENDP ; CvDllGameContext::DestroyRandomNumberGenerator
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?DestroyNetInitInfo@CvDllGameContext@@UAGXI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_index$ = 12						; size = 4
?DestroyNetInitInfo@CvDllGameContext@@UAGXI@Z PROC	; CvDllGameContext::DestroyNetInitInfo, COMDAT

; 1275 : {

	push	ebx

; 1276 : 	std::vector<std::pair<uint, CvDllNetInitInfo*> >::iterator it = m_NetInitInfos.end();
; 1277 : 	for(it = m_NetInitInfos.begin();

	mov	ebx, DWORD PTR _this$[esp]

; 1278 : 	        it != m_NetInitInfos.end(); ++it)

	mov	eax, DWORD PTR [ebx+48]
	push	esi
	mov	esi, DWORD PTR [ebx+44]
	cmp	esi, eax
	je	SHORT $LN74@DestroyNet
	mov	ecx, DWORD PTR _index$[esp+4]
$LL24@DestroyNet:

; 1279 : 	{
; 1280 : 		if((*it).first == index)

	cmp	DWORD PTR [esi], ecx
	je	SHORT $LN78@DestroyNet
	add	esi, 8
	cmp	esi, eax
	jne	SHORT $LL24@DestroyNet
$LN78@DestroyNet:

; 1281 : 			break;
; 1282 : 	}
; 1283 : 
; 1284 : 	if(it != m_NetInitInfos.end())

	cmp	esi, eax
	je	SHORT $LN74@DestroyNet
	push	edi

; 1285 : 	{
; 1286 : 		delete(*it).second;

	mov	edi, DWORD PTR [esi+4]
	test	edi, edi
	je	SHORT $LN8@DestroyNet
	mov	ecx, edi
	call	??1CvDllNetInitInfo@@QAE@XZ		; CvDllNetInitInfo::~CvDllNetInitInfo
	push	edi
	call	??3CvDllNetInitInfo@@SAXPAX@Z		; CvDllNetInitInfo::operator delete
	add	esp, 4
$LN8@DestroyNet:

; 1287 : 		m_NetInitInfos.erase(it);

	mov	edx, DWORD PTR [ebx+48]
	lea	eax, DWORD PTR [esi+8]
	pop	edi
	cmp	eax, edx
	je	SHORT $LN65@DestroyNet
	lea	ecx, DWORD PTR [eax-8]
	npad	7
$LL67@DestroyNet:
	mov	esi, DWORD PTR [eax]
	mov	DWORD PTR [ecx], esi
	mov	esi, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], esi
	add	eax, 8
	add	ecx, 8
	cmp	eax, edx
	jne	SHORT $LL67@DestroyNet
$LN65@DestroyNet:
	add	DWORD PTR [ebx+48], -8			; fffffff8H
$LN74@DestroyNet:
	pop	esi
	pop	ebx

; 1288 : 	}
; 1289 : }

	ret	8
?DestroyNetInitInfo@CvDllGameContext@@UAGXI@Z ENDP	; CvDllGameContext::DestroyNetInitInfo
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?DestroyNetLoadGameInfo@CvDllGameContext@@UAGXI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_index$ = 12						; size = 4
?DestroyNetLoadGameInfo@CvDllGameContext@@UAGXI@Z PROC	; CvDllGameContext::DestroyNetLoadGameInfo, COMDAT

; 1316 : {

	push	ebx

; 1317 : 	std::vector<std::pair<uint, CvDllNetLoadGameInfo*> >::iterator it = m_NetLoadGameInfos.end();
; 1318 : 	for(it = m_NetLoadGameInfos.begin();

	mov	ebx, DWORD PTR _this$[esp]

; 1319 : 	        it != m_NetLoadGameInfos.end(); ++it)

	mov	eax, DWORD PTR [ebx+68]
	push	esi
	mov	esi, DWORD PTR [ebx+64]
	cmp	esi, eax
	je	SHORT $LN74@DestroyNet@2
	mov	ecx, DWORD PTR _index$[esp+4]
$LL24@DestroyNet@2:

; 1320 : 	{
; 1321 : 		if((*it).first == index)

	cmp	DWORD PTR [esi], ecx
	je	SHORT $LN78@DestroyNet@2
	add	esi, 8
	cmp	esi, eax
	jne	SHORT $LL24@DestroyNet@2
$LN78@DestroyNet@2:

; 1322 : 			break;
; 1323 : 	}
; 1324 : 
; 1325 : 	if(it != m_NetLoadGameInfos.end())

	cmp	esi, eax
	je	SHORT $LN74@DestroyNet@2
	push	edi

; 1326 : 	{
; 1327 : 		delete(*it).second;

	mov	edi, DWORD PTR [esi+4]
	test	edi, edi
	je	SHORT $LN8@DestroyNet@2
	mov	ecx, edi
	call	??1CvDllNetLoadGameInfo@@QAE@XZ		; CvDllNetLoadGameInfo::~CvDllNetLoadGameInfo
	push	edi
	call	??3CvDllNetLoadGameInfo@@SAXPAX@Z	; CvDllNetLoadGameInfo::operator delete
	add	esp, 4
$LN8@DestroyNet@2:

; 1328 : 		m_NetLoadGameInfos.erase(it);

	mov	edx, DWORD PTR [ebx+68]
	lea	eax, DWORD PTR [esi+8]
	pop	edi
	cmp	eax, edx
	je	SHORT $LN65@DestroyNet@2
	lea	ecx, DWORD PTR [eax-8]
	npad	7
$LL67@DestroyNet@2:
	mov	esi, DWORD PTR [eax]
	mov	DWORD PTR [ecx], esi
	mov	esi, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], esi
	add	eax, 8
	add	ecx, 8
	cmp	eax, edx
	jne	SHORT $LL67@DestroyNet@2
$LN65@DestroyNet@2:
	add	DWORD PTR [ebx+68], -8			; fffffff8H
$LN74@DestroyNet@2:
	pop	esi
	pop	ebx

; 1329 : 	}
; 1330 : }

	ret	8
?DestroyNetLoadGameInfo@CvDllGameContext@@UAGXI@Z ENDP	; CvDllGameContext::DestroyNetLoadGameInfo
_TEXT	ENDS
PUBLIC	?clear@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAEXXZ ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::clear
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?clear@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAEXXZ PROC ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::clear, COMDAT
; _this$ = ecx

; 1060 : 		erase(begin(), end());

	mov	edx, DWORD PTR [ecx+4]
	push	esi
	mov	esi, DWORD PTR [ecx+8]
	cmp	edx, esi
	je	SHORT $LN15@clear
	mov	eax, esi
	cmp	esi, esi
	je	SHORT $LN40@clear
	push	edi
$LL42@clear:
	mov	edi, DWORD PTR [eax]
	mov	DWORD PTR [edx], edi
	mov	edi, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], edi
	add	eax, 8
	add	edx, 8
	cmp	eax, esi
	jne	SHORT $LL42@clear
	pop	edi
$LN40@clear:
	mov	DWORD PTR [ecx+8], edx
$LN15@clear:
	pop	esi

; 1061 : 		}

	ret	0
?clear@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAEXXZ ENDP ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::clear
_TEXT	ENDS
PUBLIC	?clear@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAEXXZ ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::clear
; Function compile flags: /Ogtpy
;	COMDAT ?clear@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAEXXZ PROC ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::clear, COMDAT
; _this$ = ecx

; 1060 : 		erase(begin(), end());

	mov	edx, DWORD PTR [ecx+4]
	push	esi
	mov	esi, DWORD PTR [ecx+8]
	cmp	edx, esi
	je	SHORT $LN15@clear@2
	mov	eax, esi
	cmp	esi, esi
	je	SHORT $LN40@clear@2
	push	edi
$LL42@clear@2:
	mov	edi, DWORD PTR [eax]
	mov	DWORD PTR [edx], edi
	mov	edi, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], edi
	add	eax, 8
	add	edx, 8
	cmp	eax, esi
	jne	SHORT $LL42@clear@2
	pop	edi
$LN40@clear@2:
	mov	DWORD PTR [ecx+8], edx
$LN15@clear@2:
	pop	esi

; 1061 : 		}

	ret	0
?clear@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAEXXZ ENDP ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::clear
_TEXT	ENDS
PUBLIC	?clear@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAEXXZ ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::clear
; Function compile flags: /Ogtpy
;	COMDAT ?clear@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAEXXZ PROC ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::clear, COMDAT
; _this$ = ecx

; 1060 : 		erase(begin(), end());

	mov	edx, DWORD PTR [ecx+4]
	push	esi
	mov	esi, DWORD PTR [ecx+8]
	cmp	edx, esi
	je	SHORT $LN15@clear@3
	mov	eax, esi
	cmp	esi, esi
	je	SHORT $LN40@clear@3
	push	edi
$LL42@clear@3:
	mov	edi, DWORD PTR [eax]
	mov	DWORD PTR [edx], edi
	mov	edi, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], edi
	add	eax, 8
	add	edx, 8
	cmp	eax, esi
	jne	SHORT $LL42@clear@3
	pop	edi
$LN40@clear@3:
	mov	DWORD PTR [ecx+8], edx
$LN15@clear@3:
	pop	esi

; 1061 : 		}

	ret	0
?clear@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAEXXZ ENDP ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::clear
_TEXT	ENDS
PUBLIC	?_Insert_n@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@IABU?$pair@IPAVCvRandom@@@2@@Z ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::_Insert_n
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$?_Insert_n@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@IABU?$pair@IPAVCvRandom@@@2@@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@IABU?$pair@IPAVCvRandom@@@2@@Z$2
__catchsym$?_Insert_n@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@IABU?$pair@IPAVCvRandom@@@2@@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@IABU?$pair@IPAVCvRandom@@@2@@Z$0
__unwindtable$?_Insert_n@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@IABU?$pair@IPAVCvRandom@@@2@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?_Insert_n@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@IABU?$pair@IPAVCvRandom@@@2@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Insert_n@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@IABU?$pair@IPAVCvRandom@@@2@@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Insert_n@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@IABU?$pair@IPAVCvRandom@@@2@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Insert_n@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@IABU?$pair@IPAVCvRandom@@@2@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@IABU?$pair@IPAVCvRandom@@@2@@Z$4
	DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@IABU?$pair@IPAVCvRandom@@@2@@Z$5
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Insert_n@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@IABU?$pair@IPAVCvRandom@@@2@@Z
_TEXT	SEGMENT
__Tmp$225010 = -24					; size = 8
__Tmp$224992 = -24					; size = 8
__Capacity$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Cat$235530 = 8					; size = 1
__Cat$235458 = 8					; size = 1
__Where$ = 8						; size = 4
__Newvec$224977 = 12					; size = 4
__Count$ = 12						; size = 4
tv515 = 16						; size = 4
$T235526 = 16						; size = 1
$T235454 = 16						; size = 1
__Val$ = 16						; size = 4
?_Insert_n@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@IABU?$pair@IPAVCvRandom@@@2@@Z PROC ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::_Insert_n, COMDAT
; _this$ = ecx

; 1153 : 		{	// insert _Count * _Val at _Where

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Insert_n@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@IABU?$pair@IPAVCvRandom@@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	mov	esi, ecx

; 1154 : 
; 1155 :  #if _HAS_ITERATOR_DEBUGGING
; 1156 : 		if (_Where._Mycont != this
; 1157 : 			|| _Where._Myptr < _Myfirst || _Mylast < _Where._Myptr)
; 1158 : 			_DEBUG_ERROR("vector insert iterator outside range");
; 1159 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1160 : 
; 1161 : 		size_type _Capacity = capacity();

	mov	edx, DWORD PTR [esi+4]
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp
	test	edx, edx
	jne	SHORT $LN29@Insert_n
	xor	ecx, ecx
	jmp	SHORT $LN30@Insert_n
$LN29@Insert_n:
	mov	eax, DWORD PTR [esi+12]
	sub	eax, edx
	sar	eax, 3
	mov	ecx, eax
$LN30@Insert_n:

; 1162 : 
; 1163 : 		if (_Count == 0)

	mov	ebx, DWORD PTR __Count$[ebp]
	test	ebx, ebx
	je	$LN1@Insert_n

; 1164 : 			;
; 1165 : 		else if (max_size() - size() < _Count)

	mov	edi, DWORD PTR [esi+8]
	mov	eax, edi
	sub	eax, edx
	sar	eax, 3
	mov	edx, 536870911				; 1fffffffH
	sub	edx, eax
	cmp	edx, ebx
	jae	SHORT $LN12@Insert_n

; 1166 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@KAXXZ ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::_Xlen
$LN87@Insert_n:
$LN12@Insert_n:

; 1167 : 		else if (_Capacity < size() + _Count)

	lea	edx, DWORD PTR [eax+ebx]
	cmp	ecx, edx
	jae	$LN10@Insert_n

; 1168 : 			{	// not enough room, reallocate
; 1169 : 			_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1170 : 				? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	mov	eax, ecx
	shr	eax, 1
	mov	edi, 536870911				; 1fffffffH
	sub	edi, eax
	cmp	edi, ecx
	jae	SHORT $LN17@Insert_n
	mov	DWORD PTR __Capacity$[ebp], 0
	mov	ecx, DWORD PTR __Capacity$[ebp]
	jmp	SHORT $LN18@Insert_n
$LN17@Insert_n:
	add	ecx, eax
	mov	DWORD PTR __Capacity$[ebp], ecx
$LN18@Insert_n:

; 1171 : 			if (_Capacity < size() + _Count)

	cmp	ecx, edx
	jae	SHORT $LN9@Insert_n

; 1172 : 				_Capacity = size() + _Count;

	mov	DWORD PTR __Capacity$[ebp], edx
	mov	ecx, edx
$LN9@Insert_n:

; 1173 : 			pointer _Newvec = this->_Alval.allocate(_Capacity);

	push	0
	push	ecx
	call	??$_Allocate@U?$pair@IPAVCvRandom@@@std@@@std@@YAPAU?$pair@IPAVCvRandom@@@0@IPAU10@@Z ; std::_Allocate<std::pair<unsigned int,CvRandom *> >

; 1174 : 			size_type _Whereoff = _VEC_ITER_BASE(_Where) - _Myfirst;

	mov	edi, DWORD PTR __Where$[ebp]
	sub	edi, DWORD PTR [esi+4]

; 1175 : 			int _Ncopied = 0;
; 1176 : 
; 1177 : 			_TRY_BEGIN
; 1178 : 			_Ufill(_Newvec + _Whereoff, _Count, _Val);	// add new stuff

	mov	ecx, DWORD PTR __Val$[ebp]
	add	esp, 8
	push	ecx
	sar	edi, 3
	push	ebx
	lea	edx, DWORD PTR [eax+edi*8]
	push	edx
	mov	ecx, esi
	mov	DWORD PTR __Newvec$224977[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	call	?_Ufill@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAEPAU?$pair@IPAVCvRandom@@@2@PAU32@IABU32@@Z ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::_Ufill

; 1179 : 			++_Ncopied;
; 1180 : 			_Umove(this->_Myfirst, _VEC_ITER_BASE(_Where),
; 1181 : 				_Newvec);	// move prefix

	mov	edx, DWORD PTR __Cat$235458[ebp]
	mov	eax, DWORD PTR [esi+4]
	mov	BYTE PTR $T235454[ebp], 0
	mov	ecx, DWORD PTR $T235454[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Newvec$224977[ebp]
	push	edx
	mov	edx, DWORD PTR __Where$[ebp]
	push	esi
	push	ecx
	push	edx
	push	eax
	call	??$_Uninit_copy@PAU?$pair@IPAVCvRandom@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@YAPAU?$pair@IPAVCvRandom@@@0@PAU10@00AAV?$allocator@U?$pair@IPAVCvRandom@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> *,std::allocator<std::pair<unsigned int,CvRandom *> > >

; 1182 : 			++_Ncopied;
; 1183 : 			_Umove(_VEC_ITER_BASE(_Where), this->_Mylast,
; 1184 : 				_Newvec + (_Whereoff + _Count));	// move suffix

	mov	eax, DWORD PTR [esi+8]
	add	esp, 24					; 00000018H
	mov	BYTE PTR $T235526[ebp], 0
	mov	edx, DWORD PTR $T235526[ebp]
	push	edx
	mov	edx, DWORD PTR __Cat$235530[ebp]
	push	edx
	lea	ecx, DWORD PTR [edi+ebx]
	mov	edi, DWORD PTR __Newvec$224977[ebp]
	push	esi
	lea	ecx, DWORD PTR [edi+ecx*8]
	push	ecx
	push	eax
	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	call	??$_Uninit_copy@PAU?$pair@IPAVCvRandom@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@YAPAU?$pair@IPAVCvRandom@@@0@PAU10@00AAV?$allocator@U?$pair@IPAVCvRandom@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> *,std::allocator<std::pair<unsigned int,CvRandom *> > >

; 1192 : 			_CATCH_END
; 1193 : 
; 1194 : 			_Count += size();

	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [esi+8]
	sub	ecx, eax
	sar	ecx, 3
	add	esp, 24					; 00000018H
	add	ebx, ecx

; 1195 : 			if (_Myfirst != 0)

	test	eax, eax
	je	SHORT $LN81@Insert_n

; 1196 : 				{	// destroy and deallocate old array
; 1197 : 				_Destroy(_Myfirst, _Mylast);
; 1198 : 				this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN81@Insert_n:

; 1199 : 				}
; 1200 : 
; 1201 :  #if _HAS_ITERATOR_DEBUGGING
; 1202 : 			this->_Orphan_all();
; 1203 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1204 : 
; 1205 : 			_Myend = _Newvec + _Capacity;

	mov	edx, DWORD PTR __Capacity$[ebp]
	lea	eax, DWORD PTR [edi+edx*8]

; 1206 : 			_Mylast = _Newvec + _Count;

	lea	ecx, DWORD PTR [edi+ebx*8]
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+8], ecx

; 1207 : 			_Myfirst = _Newvec;

	mov	DWORD PTR [esi+4], edi

; 1249 : 			}
; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
__catch$?_Insert_n@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@IABU?$pair@IPAVCvRandom@@@2@@Z$0:

; 1185 : 			_CATCH_ALL
; 1186 : 			if (1 < _Ncopied)
; 1187 : 				_Destroy(_Newvec, _Newvec + _Whereoff);
; 1188 : 			if (0 < _Ncopied)
; 1189 : 				_Destroy(_Newvec + _Whereoff, _Newvec + _Whereoff + _Count);
; 1190 : 			this->_Alval.deallocate(_Newvec, _Capacity);

	mov	edx, DWORD PTR __Newvec$224977[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
__catch$?_Insert_n@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@IABU?$pair@IPAVCvRandom@@@2@@Z$2:

; 1191 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN88@Insert_n:
$LN10@Insert_n:

; 1208 : 			}
; 1209 : 		else if ((size_type)(_Mylast - _VEC_ITER_BASE(_Where)) < _Count)

	mov	eax, DWORD PTR __Where$[ebp]
	mov	ecx, edi
	sub	ecx, eax
	sar	ecx, 3
	cmp	ecx, ebx
	jae	SHORT $LN3@Insert_n

; 1210 : 			{	// new stuff spills off end
; 1211 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Tmp$224992[ebp+4], ecx

; 1212 : 
; 1213 : 			_Umove(_VEC_ITER_BASE(_Where), _Mylast,
; 1214 : 				_VEC_ITER_BASE(_Where) + _Count);	// copy suffix

	lea	ecx, DWORD PTR [ebx*8]
	mov	DWORD PTR tv515[ebp], ecx
	add	ecx, eax
	push	ecx
	push	edi
	push	eax
	mov	ecx, esi
	mov	DWORD PTR __Tmp$224992[ebp], edx
	call	??$_Umove@PAU?$pair@IPAVCvRandom@@@std@@@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAEPAU?$pair@IPAVCvRandom@@@1@PAU21@00@Z ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::_Umove<std::pair<unsigned int,CvRandom *> *>

; 1215 : 
; 1216 : 			_TRY_BEGIN
; 1217 : 			_Ufill(_Mylast, _Count - (_Mylast - _VEC_ITER_BASE(_Where)),
; 1218 : 				_Tmp);	// insert new stuff off end

	mov	eax, DWORD PTR [esi+8]
	mov	ecx, eax
	sub	ecx, DWORD PTR __Where$[ebp]
	lea	edx, DWORD PTR __Tmp$224992[ebp]
	sar	ecx, 3
	push	edx
	sub	ebx, ecx
	push	ebx
	push	eax
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[ebp+12], 2
	call	?_Ufill@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAEPAU?$pair@IPAVCvRandom@@@2@PAU32@IABU32@@Z ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::_Ufill

; 1219 : 			_CATCH_ALL
; 1220 : 			_Destroy(_VEC_ITER_BASE(_Where) + _Count, _Mylast + _Count);
; 1221 : 			_RERAISE;
; 1222 : 			_CATCH_END
; 1223 : 
; 1224 : 			_Mylast += _Count;

	mov	eax, DWORD PTR tv515[ebp]
	add	DWORD PTR [esi+8], eax
	mov	esi, DWORD PTR [esi+8]

; 1225 : 
; 1226 :  #if _HAS_ITERATOR_DEBUGGING
; 1227 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1228 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1229 : 
; 1230 : 			std::fill(_VEC_ITER_BASE(_Where), _Mylast - _Count,
; 1231 : 				_Tmp);	// insert up to old end

	lea	edx, DWORD PTR __Tmp$224992[ebp]
	push	edx
	sub	esi, eax
	mov	eax, DWORD PTR __Where$[ebp]
	push	esi
	push	eax
	call	??$fill@PAU?$pair@IPAVCvRandom@@@std@@U12@@std@@YAXPAU?$pair@IPAVCvRandom@@@0@0ABU10@@Z ; std::fill<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> >
	add	esp, 12					; 0000000cH

; 1249 : 			}
; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN3@Insert_n:

; 1232 : 			}
; 1233 : 		else
; 1234 : 			{	// new stuff can all be assigned
; 1235 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]

; 1236 : 
; 1237 : 			pointer _Oldend = _Mylast;
; 1238 : 			_Mylast = _Umove(_Oldend - _Count, _Oldend,
; 1239 : 				_Mylast);	// copy suffix

	lea	eax, DWORD PTR [ebx*8]
	push	edi
	mov	ebx, edi
	sub	ebx, eax
	push	edi
	mov	DWORD PTR __Tmp$225010[ebp], ecx
	push	ebx
	mov	ecx, esi
	mov	DWORD PTR __Tmp$225010[ebp+4], edx
	mov	DWORD PTR tv515[ebp], eax
	call	??$_Umove@PAU?$pair@IPAVCvRandom@@@std@@@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAEPAU?$pair@IPAVCvRandom@@@1@PAU21@00@Z ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::_Umove<std::pair<unsigned int,CvRandom *> *>

; 1240 : 
; 1241 :  #if _HAS_ITERATOR_DEBUGGING
; 1242 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1243 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1244 : 
; 1245 : 			_STDEXT _Unchecked_move_backward(_VEC_ITER_BASE(_Where), _Oldend - _Count,
; 1246 : 				_Oldend);	// copy hole

	push	edi
	mov	DWORD PTR [esi+8], eax
	mov	eax, DWORD PTR __Where$[ebp]
	push	ebx
	push	eax
	call	??$_Unchecked_move_backward@PAU?$pair@IPAVCvRandom@@@std@@PAU12@@stdext@@YAPAU?$pair@IPAVCvRandom@@@std@@PAU12@00@Z ; stdext::_Unchecked_move_backward<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> *>

; 1247 : 			std::fill(_VEC_ITER_BASE(_Where), _VEC_ITER_BASE(_Where) + _Count,
; 1248 : 				_Tmp);	// insert into hole

	mov	eax, DWORD PTR __Where$[ebp]
	mov	edx, DWORD PTR tv515[ebp]
	lea	ecx, DWORD PTR __Tmp$225010[ebp]
	push	ecx
	add	edx, eax
	push	edx
	push	eax
	call	??$fill@PAU?$pair@IPAVCvRandom@@@std@@U12@@std@@YAXPAU?$pair@IPAVCvRandom@@@0@0ABU10@@Z ; std::fill<std::pair<unsigned int,CvRandom *> *,std::pair<unsigned int,CvRandom *> >
	add	esp, 24					; 00000018H
$LN1@Insert_n:

; 1249 : 			}
; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN86@Insert_n:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Insert_n@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@IABU?$pair@IPAVCvRandom@@@2@@Z:
	mov	eax, OFFSET __ehfuncinfo$?_Insert_n@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@IABU?$pair@IPAVCvRandom@@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Insert_n@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@IABU?$pair@IPAVCvRandom@@@2@@Z ENDP ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::_Insert_n
PUBLIC	?_Insert_n@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@IABU?$pair@IPAVCvDllNetInitInfo@@@2@@Z ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::_Insert_n
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$?_Insert_n@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@IABU?$pair@IPAVCvDllNetInitInfo@@@2@@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@IABU?$pair@IPAVCvDllNetInitInfo@@@2@@Z$2
__catchsym$?_Insert_n@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@IABU?$pair@IPAVCvDllNetInitInfo@@@2@@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@IABU?$pair@IPAVCvDllNetInitInfo@@@2@@Z$0
__unwindtable$?_Insert_n@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@IABU?$pair@IPAVCvDllNetInitInfo@@@2@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?_Insert_n@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@IABU?$pair@IPAVCvDllNetInitInfo@@@2@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Insert_n@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@IABU?$pair@IPAVCvDllNetInitInfo@@@2@@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Insert_n@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@IABU?$pair@IPAVCvDllNetInitInfo@@@2@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Insert_n@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@IABU?$pair@IPAVCvDllNetInitInfo@@@2@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@IABU?$pair@IPAVCvDllNetInitInfo@@@2@@Z$4
	DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@IABU?$pair@IPAVCvDllNetInitInfo@@@2@@Z$5
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Insert_n@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@IABU?$pair@IPAVCvDllNetInitInfo@@@2@@Z
_TEXT	SEGMENT
__Tmp$225081 = -24					; size = 8
__Tmp$225063 = -24					; size = 8
__Capacity$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Cat$235762 = 8					; size = 1
__Cat$235689 = 8					; size = 1
__Where$ = 8						; size = 4
__Newvec$225048 = 12					; size = 4
__Count$ = 12						; size = 4
tv515 = 16						; size = 4
$T235758 = 16						; size = 1
$T235685 = 16						; size = 1
__Val$ = 16						; size = 4
?_Insert_n@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@IABU?$pair@IPAVCvDllNetInitInfo@@@2@@Z PROC ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::_Insert_n, COMDAT
; _this$ = ecx

; 1153 : 		{	// insert _Count * _Val at _Where

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Insert_n@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@IABU?$pair@IPAVCvDllNetInitInfo@@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	mov	esi, ecx

; 1154 : 
; 1155 :  #if _HAS_ITERATOR_DEBUGGING
; 1156 : 		if (_Where._Mycont != this
; 1157 : 			|| _Where._Myptr < _Myfirst || _Mylast < _Where._Myptr)
; 1158 : 			_DEBUG_ERROR("vector insert iterator outside range");
; 1159 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1160 : 
; 1161 : 		size_type _Capacity = capacity();

	mov	edx, DWORD PTR [esi+4]
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp
	test	edx, edx
	jne	SHORT $LN29@Insert_n@2
	xor	ecx, ecx
	jmp	SHORT $LN30@Insert_n@2
$LN29@Insert_n@2:
	mov	eax, DWORD PTR [esi+12]
	sub	eax, edx
	sar	eax, 3
	mov	ecx, eax
$LN30@Insert_n@2:

; 1162 : 
; 1163 : 		if (_Count == 0)

	mov	ebx, DWORD PTR __Count$[ebp]
	test	ebx, ebx
	je	$LN1@Insert_n@2

; 1164 : 			;
; 1165 : 		else if (max_size() - size() < _Count)

	mov	edi, DWORD PTR [esi+8]
	mov	eax, edi
	sub	eax, edx
	sar	eax, 3
	mov	edx, 536870911				; 1fffffffH
	sub	edx, eax
	cmp	edx, ebx
	jae	SHORT $LN12@Insert_n@2

; 1166 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@KAXXZ ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::_Xlen
$LN87@Insert_n@2:
$LN12@Insert_n@2:

; 1167 : 		else if (_Capacity < size() + _Count)

	lea	edx, DWORD PTR [eax+ebx]
	cmp	ecx, edx
	jae	$LN10@Insert_n@2

; 1168 : 			{	// not enough room, reallocate
; 1169 : 			_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1170 : 				? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	mov	eax, ecx
	shr	eax, 1
	mov	edi, 536870911				; 1fffffffH
	sub	edi, eax
	cmp	edi, ecx
	jae	SHORT $LN17@Insert_n@2
	mov	DWORD PTR __Capacity$[ebp], 0
	mov	ecx, DWORD PTR __Capacity$[ebp]
	jmp	SHORT $LN18@Insert_n@2
$LN17@Insert_n@2:
	add	ecx, eax
	mov	DWORD PTR __Capacity$[ebp], ecx
$LN18@Insert_n@2:

; 1171 : 			if (_Capacity < size() + _Count)

	cmp	ecx, edx
	jae	SHORT $LN9@Insert_n@2

; 1172 : 				_Capacity = size() + _Count;

	mov	DWORD PTR __Capacity$[ebp], edx
	mov	ecx, edx
$LN9@Insert_n@2:

; 1173 : 			pointer _Newvec = this->_Alval.allocate(_Capacity);

	push	0
	push	ecx
	call	??$_Allocate@U?$pair@IPAVCvDllNetInitInfo@@@std@@@std@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@0@IPAU10@@Z ; std::_Allocate<std::pair<unsigned int,CvDllNetInitInfo *> >

; 1174 : 			size_type _Whereoff = _VEC_ITER_BASE(_Where) - _Myfirst;

	mov	edi, DWORD PTR __Where$[ebp]
	sub	edi, DWORD PTR [esi+4]

; 1175 : 			int _Ncopied = 0;
; 1176 : 
; 1177 : 			_TRY_BEGIN
; 1178 : 			_Ufill(_Newvec + _Whereoff, _Count, _Val);	// add new stuff

	mov	ecx, DWORD PTR __Val$[ebp]
	add	esp, 8
	push	ecx
	sar	edi, 3
	push	ebx
	lea	edx, DWORD PTR [eax+edi*8]
	push	edx
	mov	ecx, esi
	mov	DWORD PTR __Newvec$225048[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	call	?_Ufill@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAEPAU?$pair@IPAVCvDllNetInitInfo@@@2@PAU32@IABU32@@Z ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::_Ufill

; 1179 : 			++_Ncopied;
; 1180 : 			_Umove(this->_Myfirst, _VEC_ITER_BASE(_Where),
; 1181 : 				_Newvec);	// move prefix

	mov	edx, DWORD PTR __Cat$235689[ebp]
	mov	eax, DWORD PTR [esi+4]
	mov	BYTE PTR $T235685[ebp], 0
	mov	ecx, DWORD PTR $T235685[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Newvec$225048[ebp]
	push	edx
	mov	edx, DWORD PTR __Where$[ebp]
	push	esi
	push	ecx
	push	edx
	push	eax
	call	??$_Uninit_copy@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@0@PAU10@00AAV?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> *,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >

; 1182 : 			++_Ncopied;
; 1183 : 			_Umove(_VEC_ITER_BASE(_Where), this->_Mylast,
; 1184 : 				_Newvec + (_Whereoff + _Count));	// move suffix

	mov	eax, DWORD PTR [esi+8]
	add	esp, 24					; 00000018H
	mov	BYTE PTR $T235758[ebp], 0
	mov	edx, DWORD PTR $T235758[ebp]
	push	edx
	mov	edx, DWORD PTR __Cat$235762[ebp]
	push	edx
	lea	ecx, DWORD PTR [edi+ebx]
	mov	edi, DWORD PTR __Newvec$225048[ebp]
	push	esi
	lea	ecx, DWORD PTR [edi+ecx*8]
	push	ecx
	push	eax
	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	call	??$_Uninit_copy@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@0@PAU10@00AAV?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> *,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >

; 1192 : 			_CATCH_END
; 1193 : 
; 1194 : 			_Count += size();

	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [esi+8]
	sub	ecx, eax
	sar	ecx, 3
	add	esp, 24					; 00000018H
	add	ebx, ecx

; 1195 : 			if (_Myfirst != 0)

	test	eax, eax
	je	SHORT $LN81@Insert_n@2

; 1196 : 				{	// destroy and deallocate old array
; 1197 : 				_Destroy(_Myfirst, _Mylast);
; 1198 : 				this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN81@Insert_n@2:

; 1199 : 				}
; 1200 : 
; 1201 :  #if _HAS_ITERATOR_DEBUGGING
; 1202 : 			this->_Orphan_all();
; 1203 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1204 : 
; 1205 : 			_Myend = _Newvec + _Capacity;

	mov	edx, DWORD PTR __Capacity$[ebp]
	lea	eax, DWORD PTR [edi+edx*8]

; 1206 : 			_Mylast = _Newvec + _Count;

	lea	ecx, DWORD PTR [edi+ebx*8]
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+8], ecx

; 1207 : 			_Myfirst = _Newvec;

	mov	DWORD PTR [esi+4], edi

; 1249 : 			}
; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
__catch$?_Insert_n@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@IABU?$pair@IPAVCvDllNetInitInfo@@@2@@Z$0:

; 1185 : 			_CATCH_ALL
; 1186 : 			if (1 < _Ncopied)
; 1187 : 				_Destroy(_Newvec, _Newvec + _Whereoff);
; 1188 : 			if (0 < _Ncopied)
; 1189 : 				_Destroy(_Newvec + _Whereoff, _Newvec + _Whereoff + _Count);
; 1190 : 			this->_Alval.deallocate(_Newvec, _Capacity);

	mov	edx, DWORD PTR __Newvec$225048[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
__catch$?_Insert_n@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@IABU?$pair@IPAVCvDllNetInitInfo@@@2@@Z$2:

; 1191 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN88@Insert_n@2:
$LN10@Insert_n@2:

; 1208 : 			}
; 1209 : 		else if ((size_type)(_Mylast - _VEC_ITER_BASE(_Where)) < _Count)

	mov	eax, DWORD PTR __Where$[ebp]
	mov	ecx, edi
	sub	ecx, eax
	sar	ecx, 3
	cmp	ecx, ebx
	jae	SHORT $LN3@Insert_n@2

; 1210 : 			{	// new stuff spills off end
; 1211 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Tmp$225063[ebp+4], ecx

; 1212 : 
; 1213 : 			_Umove(_VEC_ITER_BASE(_Where), _Mylast,
; 1214 : 				_VEC_ITER_BASE(_Where) + _Count);	// copy suffix

	lea	ecx, DWORD PTR [ebx*8]
	mov	DWORD PTR tv515[ebp], ecx
	add	ecx, eax
	push	ecx
	push	edi
	push	eax
	mov	ecx, esi
	mov	DWORD PTR __Tmp$225063[ebp], edx
	call	??$_Umove@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAEPAU?$pair@IPAVCvDllNetInitInfo@@@1@PAU21@00@Z ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::_Umove<std::pair<unsigned int,CvDllNetInitInfo *> *>

; 1215 : 
; 1216 : 			_TRY_BEGIN
; 1217 : 			_Ufill(_Mylast, _Count - (_Mylast - _VEC_ITER_BASE(_Where)),
; 1218 : 				_Tmp);	// insert new stuff off end

	mov	eax, DWORD PTR [esi+8]
	mov	ecx, eax
	sub	ecx, DWORD PTR __Where$[ebp]
	lea	edx, DWORD PTR __Tmp$225063[ebp]
	sar	ecx, 3
	push	edx
	sub	ebx, ecx
	push	ebx
	push	eax
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[ebp+12], 2
	call	?_Ufill@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAEPAU?$pair@IPAVCvDllNetInitInfo@@@2@PAU32@IABU32@@Z ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::_Ufill

; 1219 : 			_CATCH_ALL
; 1220 : 			_Destroy(_VEC_ITER_BASE(_Where) + _Count, _Mylast + _Count);
; 1221 : 			_RERAISE;
; 1222 : 			_CATCH_END
; 1223 : 
; 1224 : 			_Mylast += _Count;

	mov	eax, DWORD PTR tv515[ebp]
	add	DWORD PTR [esi+8], eax
	mov	esi, DWORD PTR [esi+8]

; 1225 : 
; 1226 :  #if _HAS_ITERATOR_DEBUGGING
; 1227 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1228 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1229 : 
; 1230 : 			std::fill(_VEC_ITER_BASE(_Where), _Mylast - _Count,
; 1231 : 				_Tmp);	// insert up to old end

	lea	edx, DWORD PTR __Tmp$225063[ebp]
	push	edx
	sub	esi, eax
	mov	eax, DWORD PTR __Where$[ebp]
	push	esi
	push	eax
	call	??$fill@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@U12@@std@@YAXPAU?$pair@IPAVCvDllNetInitInfo@@@0@0ABU10@@Z ; std::fill<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> >
	add	esp, 12					; 0000000cH

; 1249 : 			}
; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN3@Insert_n@2:

; 1232 : 			}
; 1233 : 		else
; 1234 : 			{	// new stuff can all be assigned
; 1235 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]

; 1236 : 
; 1237 : 			pointer _Oldend = _Mylast;
; 1238 : 			_Mylast = _Umove(_Oldend - _Count, _Oldend,
; 1239 : 				_Mylast);	// copy suffix

	lea	eax, DWORD PTR [ebx*8]
	push	edi
	mov	ebx, edi
	sub	ebx, eax
	push	edi
	mov	DWORD PTR __Tmp$225081[ebp], ecx
	push	ebx
	mov	ecx, esi
	mov	DWORD PTR __Tmp$225081[ebp+4], edx
	mov	DWORD PTR tv515[ebp], eax
	call	??$_Umove@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAEPAU?$pair@IPAVCvDllNetInitInfo@@@1@PAU21@00@Z ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::_Umove<std::pair<unsigned int,CvDllNetInitInfo *> *>

; 1240 : 
; 1241 :  #if _HAS_ITERATOR_DEBUGGING
; 1242 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1243 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1244 : 
; 1245 : 			_STDEXT _Unchecked_move_backward(_VEC_ITER_BASE(_Where), _Oldend - _Count,
; 1246 : 				_Oldend);	// copy hole

	push	edi
	mov	DWORD PTR [esi+8], eax
	mov	eax, DWORD PTR __Where$[ebp]
	push	ebx
	push	eax
	call	??$_Unchecked_move_backward@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@@stdext@@YAPAU?$pair@IPAVCvDllNetInitInfo@@@std@@PAU12@00@Z ; stdext::_Unchecked_move_backward<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> *>

; 1247 : 			std::fill(_VEC_ITER_BASE(_Where), _VEC_ITER_BASE(_Where) + _Count,
; 1248 : 				_Tmp);	// insert into hole

	mov	eax, DWORD PTR __Where$[ebp]
	mov	edx, DWORD PTR tv515[ebp]
	lea	ecx, DWORD PTR __Tmp$225081[ebp]
	push	ecx
	add	edx, eax
	push	edx
	push	eax
	call	??$fill@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@U12@@std@@YAXPAU?$pair@IPAVCvDllNetInitInfo@@@0@0ABU10@@Z ; std::fill<std::pair<unsigned int,CvDllNetInitInfo *> *,std::pair<unsigned int,CvDllNetInitInfo *> >
	add	esp, 24					; 00000018H
$LN1@Insert_n@2:

; 1249 : 			}
; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN86@Insert_n@2:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Insert_n@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@IABU?$pair@IPAVCvDllNetInitInfo@@@2@@Z:
	mov	eax, OFFSET __ehfuncinfo$?_Insert_n@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@IABU?$pair@IPAVCvDllNetInitInfo@@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Insert_n@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@IABU?$pair@IPAVCvDllNetInitInfo@@@2@@Z ENDP ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::_Insert_n
PUBLIC	?_Insert_n@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@IABU?$pair@IPAVCvDllNetLoadGameInfo@@@2@@Z ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::_Insert_n
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$?_Insert_n@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@IABU?$pair@IPAVCvDllNetLoadGameInfo@@@2@@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@IABU?$pair@IPAVCvDllNetLoadGameInfo@@@2@@Z$2
__catchsym$?_Insert_n@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@IABU?$pair@IPAVCvDllNetLoadGameInfo@@@2@@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@IABU?$pair@IPAVCvDllNetLoadGameInfo@@@2@@Z$0
__unwindtable$?_Insert_n@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@IABU?$pair@IPAVCvDllNetLoadGameInfo@@@2@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?_Insert_n@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@IABU?$pair@IPAVCvDllNetLoadGameInfo@@@2@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Insert_n@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@IABU?$pair@IPAVCvDllNetLoadGameInfo@@@2@@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Insert_n@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@IABU?$pair@IPAVCvDllNetLoadGameInfo@@@2@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Insert_n@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@IABU?$pair@IPAVCvDllNetLoadGameInfo@@@2@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@IABU?$pair@IPAVCvDllNetLoadGameInfo@@@2@@Z$4
	DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@IABU?$pair@IPAVCvDllNetLoadGameInfo@@@2@@Z$5
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Insert_n@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@IABU?$pair@IPAVCvDllNetLoadGameInfo@@@2@@Z
_TEXT	SEGMENT
__Tmp$225152 = -24					; size = 8
__Tmp$225134 = -24					; size = 8
__Capacity$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Cat$235996 = 8					; size = 1
__Cat$235924 = 8					; size = 1
__Where$ = 8						; size = 4
__Newvec$225119 = 12					; size = 4
__Count$ = 12						; size = 4
tv515 = 16						; size = 4
$T235993 = 16						; size = 1
$T235921 = 16						; size = 1
__Val$ = 16						; size = 4
?_Insert_n@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@IABU?$pair@IPAVCvDllNetLoadGameInfo@@@2@@Z PROC ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::_Insert_n, COMDAT
; _this$ = ecx

; 1153 : 		{	// insert _Count * _Val at _Where

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Insert_n@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@IABU?$pair@IPAVCvDllNetLoadGameInfo@@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	mov	esi, ecx

; 1154 : 
; 1155 :  #if _HAS_ITERATOR_DEBUGGING
; 1156 : 		if (_Where._Mycont != this
; 1157 : 			|| _Where._Myptr < _Myfirst || _Mylast < _Where._Myptr)
; 1158 : 			_DEBUG_ERROR("vector insert iterator outside range");
; 1159 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1160 : 
; 1161 : 		size_type _Capacity = capacity();

	mov	edx, DWORD PTR [esi+4]
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp
	test	edx, edx
	jne	SHORT $LN29@Insert_n@3
	xor	ecx, ecx
	jmp	SHORT $LN30@Insert_n@3
$LN29@Insert_n@3:
	mov	eax, DWORD PTR [esi+12]
	sub	eax, edx
	sar	eax, 3
	mov	ecx, eax
$LN30@Insert_n@3:

; 1162 : 
; 1163 : 		if (_Count == 0)

	mov	ebx, DWORD PTR __Count$[ebp]
	test	ebx, ebx
	je	$LN1@Insert_n@3

; 1164 : 			;
; 1165 : 		else if (max_size() - size() < _Count)

	mov	edi, DWORD PTR [esi+8]
	mov	eax, edi
	sub	eax, edx
	sar	eax, 3
	mov	edx, 536870911				; 1fffffffH
	sub	edx, eax
	cmp	edx, ebx
	jae	SHORT $LN12@Insert_n@3

; 1166 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@KAXXZ ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::_Xlen
$LN87@Insert_n@3:
$LN12@Insert_n@3:

; 1167 : 		else if (_Capacity < size() + _Count)

	lea	edx, DWORD PTR [eax+ebx]
	cmp	ecx, edx
	jae	$LN10@Insert_n@3

; 1168 : 			{	// not enough room, reallocate
; 1169 : 			_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1170 : 				? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	mov	eax, ecx
	shr	eax, 1
	mov	edi, 536870911				; 1fffffffH
	sub	edi, eax
	cmp	edi, ecx
	jae	SHORT $LN17@Insert_n@3
	mov	DWORD PTR __Capacity$[ebp], 0
	mov	ecx, DWORD PTR __Capacity$[ebp]
	jmp	SHORT $LN18@Insert_n@3
$LN17@Insert_n@3:
	add	ecx, eax
	mov	DWORD PTR __Capacity$[ebp], ecx
$LN18@Insert_n@3:

; 1171 : 			if (_Capacity < size() + _Count)

	cmp	ecx, edx
	jae	SHORT $LN9@Insert_n@3

; 1172 : 				_Capacity = size() + _Count;

	mov	DWORD PTR __Capacity$[ebp], edx
	mov	ecx, edx
$LN9@Insert_n@3:

; 1173 : 			pointer _Newvec = this->_Alval.allocate(_Capacity);

	push	0
	push	ecx
	call	??$_Allocate@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@std@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@IPAU10@@Z ; std::_Allocate<std::pair<unsigned int,CvDllNetLoadGameInfo *> >

; 1174 : 			size_type _Whereoff = _VEC_ITER_BASE(_Where) - _Myfirst;

	mov	edi, DWORD PTR __Where$[ebp]
	sub	edi, DWORD PTR [esi+4]

; 1175 : 			int _Ncopied = 0;
; 1176 : 
; 1177 : 			_TRY_BEGIN
; 1178 : 			_Ufill(_Newvec + _Whereoff, _Count, _Val);	// add new stuff

	mov	ecx, DWORD PTR __Val$[ebp]
	add	esp, 8
	push	ecx
	sar	edi, 3
	push	ebx
	lea	edx, DWORD PTR [eax+edi*8]
	push	edx
	mov	ecx, esi
	mov	DWORD PTR __Newvec$225119[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	call	?_Ufill@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAEPAU?$pair@IPAVCvDllNetLoadGameInfo@@@2@PAU32@IABU32@@Z ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::_Ufill

; 1179 : 			++_Ncopied;
; 1180 : 			_Umove(this->_Myfirst, _VEC_ITER_BASE(_Where),
; 1181 : 				_Newvec);	// move prefix

	mov	edx, DWORD PTR __Cat$235924[ebp]
	mov	eax, DWORD PTR [esi+4]
	mov	BYTE PTR $T235921[ebp], 0
	mov	ecx, DWORD PTR $T235921[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Newvec$225119[ebp]
	push	edx
	mov	edx, DWORD PTR __Where$[ebp]
	push	esi
	push	ecx
	push	edx
	push	eax
	call	??$_Uninit_copy@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@PAU10@00AAV?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >

; 1182 : 			++_Ncopied;
; 1183 : 			_Umove(_VEC_ITER_BASE(_Where), this->_Mylast,
; 1184 : 				_Newvec + (_Whereoff + _Count));	// move suffix

	mov	eax, DWORD PTR [esi+8]
	add	esp, 24					; 00000018H
	mov	BYTE PTR $T235993[ebp], 0
	mov	edx, DWORD PTR $T235993[ebp]
	push	edx
	mov	edx, DWORD PTR __Cat$235996[ebp]
	push	edx
	lea	ecx, DWORD PTR [edi+ebx]
	mov	edi, DWORD PTR __Newvec$225119[ebp]
	push	esi
	lea	ecx, DWORD PTR [edi+ecx*8]
	push	ecx
	push	eax
	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	call	??$_Uninit_copy@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@PAU10@00AAV?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >

; 1192 : 			_CATCH_END
; 1193 : 
; 1194 : 			_Count += size();

	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [esi+8]
	sub	ecx, eax
	sar	ecx, 3
	add	esp, 24					; 00000018H
	add	ebx, ecx

; 1195 : 			if (_Myfirst != 0)

	test	eax, eax
	je	SHORT $LN81@Insert_n@3

; 1196 : 				{	// destroy and deallocate old array
; 1197 : 				_Destroy(_Myfirst, _Mylast);
; 1198 : 				this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN81@Insert_n@3:

; 1199 : 				}
; 1200 : 
; 1201 :  #if _HAS_ITERATOR_DEBUGGING
; 1202 : 			this->_Orphan_all();
; 1203 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1204 : 
; 1205 : 			_Myend = _Newvec + _Capacity;

	mov	edx, DWORD PTR __Capacity$[ebp]
	lea	eax, DWORD PTR [edi+edx*8]

; 1206 : 			_Mylast = _Newvec + _Count;

	lea	ecx, DWORD PTR [edi+ebx*8]
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+8], ecx

; 1207 : 			_Myfirst = _Newvec;

	mov	DWORD PTR [esi+4], edi

; 1249 : 			}
; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
__catch$?_Insert_n@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@IABU?$pair@IPAVCvDllNetLoadGameInfo@@@2@@Z$0:

; 1185 : 			_CATCH_ALL
; 1186 : 			if (1 < _Ncopied)
; 1187 : 				_Destroy(_Newvec, _Newvec + _Whereoff);
; 1188 : 			if (0 < _Ncopied)
; 1189 : 				_Destroy(_Newvec + _Whereoff, _Newvec + _Whereoff + _Count);
; 1190 : 			this->_Alval.deallocate(_Newvec, _Capacity);

	mov	edx, DWORD PTR __Newvec$225119[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
__catch$?_Insert_n@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@IABU?$pair@IPAVCvDllNetLoadGameInfo@@@2@@Z$2:

; 1191 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN88@Insert_n@3:
$LN10@Insert_n@3:

; 1208 : 			}
; 1209 : 		else if ((size_type)(_Mylast - _VEC_ITER_BASE(_Where)) < _Count)

	mov	eax, DWORD PTR __Where$[ebp]
	mov	ecx, edi
	sub	ecx, eax
	sar	ecx, 3
	cmp	ecx, ebx
	jae	SHORT $LN3@Insert_n@3

; 1210 : 			{	// new stuff spills off end
; 1211 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Tmp$225134[ebp+4], ecx

; 1212 : 
; 1213 : 			_Umove(_VEC_ITER_BASE(_Where), _Mylast,
; 1214 : 				_VEC_ITER_BASE(_Where) + _Count);	// copy suffix

	lea	ecx, DWORD PTR [ebx*8]
	mov	DWORD PTR tv515[ebp], ecx
	add	ecx, eax
	push	ecx
	push	edi
	push	eax
	mov	ecx, esi
	mov	DWORD PTR __Tmp$225134[ebp], edx
	call	??$_Umove@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAEPAU?$pair@IPAVCvDllNetLoadGameInfo@@@1@PAU21@00@Z ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::_Umove<std::pair<unsigned int,CvDllNetLoadGameInfo *> *>

; 1215 : 
; 1216 : 			_TRY_BEGIN
; 1217 : 			_Ufill(_Mylast, _Count - (_Mylast - _VEC_ITER_BASE(_Where)),
; 1218 : 				_Tmp);	// insert new stuff off end

	mov	eax, DWORD PTR [esi+8]
	mov	ecx, eax
	sub	ecx, DWORD PTR __Where$[ebp]
	lea	edx, DWORD PTR __Tmp$225134[ebp]
	sar	ecx, 3
	push	edx
	sub	ebx, ecx
	push	ebx
	push	eax
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[ebp+12], 2
	call	?_Ufill@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAEPAU?$pair@IPAVCvDllNetLoadGameInfo@@@2@PAU32@IABU32@@Z ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::_Ufill

; 1219 : 			_CATCH_ALL
; 1220 : 			_Destroy(_VEC_ITER_BASE(_Where) + _Count, _Mylast + _Count);
; 1221 : 			_RERAISE;
; 1222 : 			_CATCH_END
; 1223 : 
; 1224 : 			_Mylast += _Count;

	mov	eax, DWORD PTR tv515[ebp]
	add	DWORD PTR [esi+8], eax
	mov	esi, DWORD PTR [esi+8]

; 1225 : 
; 1226 :  #if _HAS_ITERATOR_DEBUGGING
; 1227 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1228 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1229 : 
; 1230 : 			std::fill(_VEC_ITER_BASE(_Where), _Mylast - _Count,
; 1231 : 				_Tmp);	// insert up to old end

	lea	edx, DWORD PTR __Tmp$225134[ebp]
	push	edx
	sub	esi, eax
	mov	eax, DWORD PTR __Where$[ebp]
	push	esi
	push	eax
	call	??$fill@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@U12@@std@@YAXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@0ABU10@@Z ; std::fill<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> >
	add	esp, 12					; 0000000cH

; 1249 : 			}
; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN3@Insert_n@3:

; 1232 : 			}
; 1233 : 		else
; 1234 : 			{	// new stuff can all be assigned
; 1235 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]

; 1236 : 
; 1237 : 			pointer _Oldend = _Mylast;
; 1238 : 			_Mylast = _Umove(_Oldend - _Count, _Oldend,
; 1239 : 				_Mylast);	// copy suffix

	lea	eax, DWORD PTR [ebx*8]
	push	edi
	mov	ebx, edi
	sub	ebx, eax
	push	edi
	mov	DWORD PTR __Tmp$225152[ebp], ecx
	push	ebx
	mov	ecx, esi
	mov	DWORD PTR __Tmp$225152[ebp+4], edx
	mov	DWORD PTR tv515[ebp], eax
	call	??$_Umove@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAEPAU?$pair@IPAVCvDllNetLoadGameInfo@@@1@PAU21@00@Z ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::_Umove<std::pair<unsigned int,CvDllNetLoadGameInfo *> *>

; 1240 : 
; 1241 :  #if _HAS_ITERATOR_DEBUGGING
; 1242 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1243 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1244 : 
; 1245 : 			_STDEXT _Unchecked_move_backward(_VEC_ITER_BASE(_Where), _Oldend - _Count,
; 1246 : 				_Oldend);	// copy hole

	push	edi
	mov	DWORD PTR [esi+8], eax
	mov	eax, DWORD PTR __Where$[ebp]
	push	ebx
	push	eax
	call	??$_Unchecked_move_backward@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@@stdext@@YAPAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@PAU12@00@Z ; stdext::_Unchecked_move_backward<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> *>

; 1247 : 			std::fill(_VEC_ITER_BASE(_Where), _VEC_ITER_BASE(_Where) + _Count,
; 1248 : 				_Tmp);	// insert into hole

	mov	eax, DWORD PTR __Where$[ebp]
	mov	edx, DWORD PTR tv515[ebp]
	lea	ecx, DWORD PTR __Tmp$225152[ebp]
	push	ecx
	add	edx, eax
	push	edx
	push	eax
	call	??$fill@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@U12@@std@@YAXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@0ABU10@@Z ; std::fill<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,std::pair<unsigned int,CvDllNetLoadGameInfo *> >
	add	esp, 24					; 00000018H
$LN1@Insert_n@3:

; 1249 : 			}
; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN86@Insert_n@3:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Insert_n@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@IABU?$pair@IPAVCvDllNetLoadGameInfo@@@2@@Z:
	mov	eax, OFFSET __ehfuncinfo$?_Insert_n@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@IABU?$pair@IPAVCvDllNetLoadGameInfo@@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Insert_n@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@IABU?$pair@IPAVCvDllNetLoadGameInfo@@@2@@Z ENDP ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::_Insert_n
PUBLIC	?_Insert_n@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAEXV?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@2@IABUCvDllPathFinderUpdateListData@@@Z ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::_Insert_n
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$?_Insert_n@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAEXV?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@2@IABUCvDllPathFinderUpdateListData@@@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAEXV?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@2@IABUCvDllPathFinderUpdateListData@@@Z$2
__catchsym$?_Insert_n@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAEXV?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@2@IABUCvDllPathFinderUpdateListData@@@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAEXV?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@2@IABUCvDllPathFinderUpdateListData@@@Z$0
__unwindtable$?_Insert_n@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAEXV?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@2@IABUCvDllPathFinderUpdateListData@@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?_Insert_n@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAEXV?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@2@IABUCvDllPathFinderUpdateListData@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Insert_n@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAEXV?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@2@IABUCvDllPathFinderUpdateListData@@@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Insert_n@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAEXV?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@2@IABUCvDllPathFinderUpdateListData@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Insert_n@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAEXV?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@2@IABUCvDllPathFinderUpdateListData@@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAEXV?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@2@IABUCvDllPathFinderUpdateListData@@@Z$4
	DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAEXV?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@2@IABUCvDllPathFinderUpdateListData@@@Z$5
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Insert_n@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAEXV?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@2@IABUCvDllPathFinderUpdateListData@@@Z
_TEXT	SEGMENT
__Tmp$225213 = -32					; size = 12
__Tmp$225203 = -32					; size = 12
__Capacity$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Cat$236232 = 8					; size = 1
__Cat$236160 = 8					; size = 1
__Where$ = 8						; size = 4
__Newvec$225188 = 12					; size = 4
__Count$ = 12						; size = 4
tv525 = 16						; size = 4
tv515 = 16						; size = 4
$T236229 = 16						; size = 1
$T236157 = 16						; size = 1
__Val$ = 16						; size = 4
?_Insert_n@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAEXV?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@2@IABUCvDllPathFinderUpdateListData@@@Z PROC ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::_Insert_n, COMDAT
; _this$ = ecx

; 1153 : 		{	// insert _Count * _Val at _Where

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Insert_n@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAEXV?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@2@IABUCvDllPathFinderUpdateListData@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 20					; 00000014H
	push	ebx
	push	esi
	mov	esi, ecx

; 1154 : 
; 1155 :  #if _HAS_ITERATOR_DEBUGGING
; 1156 : 		if (_Where._Mycont != this
; 1157 : 			|| _Where._Myptr < _Myfirst || _Mylast < _Where._Myptr)
; 1158 : 			_DEBUG_ERROR("vector insert iterator outside range");
; 1159 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1160 : 
; 1161 : 		size_type _Capacity = capacity();

	mov	eax, DWORD PTR [esi+4]
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp
	test	eax, eax
	jne	SHORT $LN29@Insert_n@4
	xor	ecx, ecx
	jmp	SHORT $LN30@Insert_n@4
$LN29@Insert_n@4:
	mov	edx, DWORD PTR [esi+12]
	sub	edx, eax
	mov	eax, 715827883				; 2aaaaaabH
	imul	edx
	sar	edx, 1
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	ecx, eax
$LN30@Insert_n@4:

; 1162 : 
; 1163 : 		if (_Count == 0)

	mov	edi, DWORD PTR __Count$[ebp]
	test	edi, edi
	je	$LN1@Insert_n@4

; 1164 : 			;
; 1165 : 		else if (max_size() - size() < _Count)

	mov	ebx, DWORD PTR [esi+8]
	mov	edx, ebx
	sub	edx, DWORD PTR [esi+4]
	mov	eax, 715827883				; 2aaaaaabH
	imul	edx
	sar	edx, 1
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	edx, 357913941				; 15555555H
	sub	edx, eax
	cmp	edx, edi
	jae	SHORT $LN12@Insert_n@4

; 1166 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@KAXXZ ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::_Xlen
$LN87@Insert_n@4:
$LN12@Insert_n@4:

; 1167 : 		else if (_Capacity < size() + _Count)

	lea	edx, DWORD PTR [eax+edi]
	cmp	ecx, edx
	jae	$LN10@Insert_n@4

; 1168 : 			{	// not enough room, reallocate
; 1169 : 			_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1170 : 				? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	mov	eax, ecx
	shr	eax, 1
	mov	ebx, 357913941				; 15555555H
	sub	ebx, eax
	cmp	ebx, ecx
	jae	SHORT $LN17@Insert_n@4
	mov	DWORD PTR __Capacity$[ebp], 0
	mov	ecx, DWORD PTR __Capacity$[ebp]
	jmp	SHORT $LN18@Insert_n@4
$LN17@Insert_n@4:
	add	ecx, eax
	mov	DWORD PTR __Capacity$[ebp], ecx
$LN18@Insert_n@4:

; 1171 : 			if (_Capacity < size() + _Count)

	cmp	ecx, edx
	jae	SHORT $LN9@Insert_n@4

; 1172 : 				_Capacity = size() + _Count;

	mov	DWORD PTR __Capacity$[ebp], edx
	mov	ecx, edx
$LN9@Insert_n@4:

; 1173 : 			pointer _Newvec = this->_Alval.allocate(_Capacity);

	push	0
	push	ecx
	call	??$_Allocate@UCvDllPathFinderUpdateListData@@@std@@YAPAUCvDllPathFinderUpdateListData@@IPAU1@@Z ; std::_Allocate<CvDllPathFinderUpdateListData>

; 1174 : 			size_type _Whereoff = _VEC_ITER_BASE(_Where) - _Myfirst;

	mov	edx, DWORD PTR __Where$[ebp]
	sub	edx, DWORD PTR [esi+4]
	mov	ecx, eax
	mov	eax, 715827883				; 2aaaaaabH
	imul	edx

; 1175 : 			int _Ncopied = 0;
; 1176 : 
; 1177 : 			_TRY_BEGIN
; 1178 : 			_Ufill(_Newvec + _Whereoff, _Count, _Val);	// add new stuff

	mov	eax, DWORD PTR __Val$[ebp]
	sar	edx, 1
	mov	ebx, edx
	add	esp, 8
	shr	ebx, 31					; 0000001fH
	add	ebx, edx
	push	eax
	lea	edx, DWORD PTR [ebx+ebx*2]
	lea	eax, DWORD PTR [ecx+edx*4]
	push	edi
	mov	DWORD PTR __Newvec$225188[ebp], ecx
	push	eax
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	call	?_Ufill@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAEPAUCvDllPathFinderUpdateListData@@PAU3@IABU3@@Z ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::_Ufill

; 1179 : 			++_Ncopied;
; 1180 : 			_Umove(this->_Myfirst, _VEC_ITER_BASE(_Where),
; 1181 : 				_Newvec);	// move prefix

	mov	edx, DWORD PTR __Cat$236160[ebp]
	mov	eax, DWORD PTR [esi+4]
	mov	BYTE PTR $T236157[ebp], 0
	mov	ecx, DWORD PTR $T236157[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Newvec$225188[ebp]
	push	edx
	mov	edx, DWORD PTR __Where$[ebp]
	push	esi
	push	ecx
	push	edx
	push	eax
	call	??$_Uninit_copy@PAUCvDllPathFinderUpdateListData@@PAU1@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@YAPAUCvDllPathFinderUpdateListData@@PAU1@00AAV?$allocator@UCvDllPathFinderUpdateListData@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<CvDllPathFinderUpdateListData *,CvDllPathFinderUpdateListData *,std::allocator<CvDllPathFinderUpdateListData> >

; 1182 : 			++_Ncopied;
; 1183 : 			_Umove(_VEC_ITER_BASE(_Where), this->_Mylast,
; 1184 : 				_Newvec + (_Whereoff + _Count));	// move suffix

	mov	edx, DWORD PTR __Newvec$225188[ebp]
	mov	eax, DWORD PTR [esi+8]
	add	esp, 24					; 00000018H
	add	ebx, edi
	lea	ecx, DWORD PTR [ebx+ebx*2]
	lea	ecx, DWORD PTR [edx+ecx*4]
	mov	BYTE PTR $T236229[ebp], 0
	mov	edx, DWORD PTR $T236229[ebp]
	push	edx
	mov	edx, DWORD PTR __Cat$236232[ebp]
	push	edx
	push	esi
	push	ecx
	push	eax
	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	call	??$_Uninit_copy@PAUCvDllPathFinderUpdateListData@@PAU1@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@YAPAUCvDllPathFinderUpdateListData@@PAU1@00AAV?$allocator@UCvDllPathFinderUpdateListData@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<CvDllPathFinderUpdateListData *,CvDllPathFinderUpdateListData *,std::allocator<CvDllPathFinderUpdateListData> >

; 1192 : 			_CATCH_END
; 1193 : 
; 1194 : 			_Count += size();

	mov	ebx, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [esi+8]
	sub	ecx, ebx
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	sar	edx, 1
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	add	esp, 24					; 00000018H
	add	edi, ecx

; 1195 : 			if (_Myfirst != 0)

	test	ebx, ebx
	je	SHORT $LN81@Insert_n@4

; 1196 : 				{	// destroy and deallocate old array
; 1197 : 				_Destroy(_Myfirst, _Mylast);
; 1198 : 				this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	push	ebx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN81@Insert_n@4:

; 1199 : 				}
; 1200 : 
; 1201 :  #if _HAS_ITERATOR_DEBUGGING
; 1202 : 			this->_Orphan_all();
; 1203 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1204 : 
; 1205 : 			_Myend = _Newvec + _Capacity;

	mov	eax, DWORD PTR __Capacity$[ebp]
	lea	edx, DWORD PTR [eax+eax*2]
	mov	eax, DWORD PTR __Newvec$225188[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]

; 1206 : 			_Mylast = _Newvec + _Count;

	lea	edx, DWORD PTR [edi+edi*2]
	mov	DWORD PTR [esi+12], ecx
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR [esi+8], ecx

; 1207 : 			_Myfirst = _Newvec;

	mov	DWORD PTR [esi+4], eax

; 1249 : 			}
; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
__catch$?_Insert_n@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAEXV?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@2@IABUCvDllPathFinderUpdateListData@@@Z$0:

; 1185 : 			_CATCH_ALL
; 1186 : 			if (1 < _Ncopied)
; 1187 : 				_Destroy(_Newvec, _Newvec + _Whereoff);
; 1188 : 			if (0 < _Ncopied)
; 1189 : 				_Destroy(_Newvec + _Whereoff, _Newvec + _Whereoff + _Count);
; 1190 : 			this->_Alval.deallocate(_Newvec, _Capacity);

	mov	edx, DWORD PTR __Newvec$225188[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
__catch$?_Insert_n@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAEXV?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@2@IABUCvDllPathFinderUpdateListData@@@Z$2:

; 1191 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN88@Insert_n@4:
$LN10@Insert_n@4:

; 1208 : 			}
; 1209 : 		else if ((size_type)(_Mylast - _VEC_ITER_BASE(_Where)) < _Count)

	mov	ecx, DWORD PTR __Where$[ebp]
	mov	edx, ebx
	sub	edx, ecx
	mov	eax, 715827883				; 2aaaaaabH
	imul	edx
	sar	edx, 1
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cmp	eax, edi

; 1210 : 			{	// new stuff spills off end
; 1211 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	eax, DWORD PTR __Val$[ebp]
	jae	$LN3@Insert_n@4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$225203[ebp], edx
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR __Tmp$225203[ebp+8], eax

; 1212 : 
; 1213 : 			_Umove(_VEC_ITER_BASE(_Where), _Mylast,
; 1214 : 				_VEC_ITER_BASE(_Where) + _Count);	// copy suffix

	lea	eax, DWORD PTR [edi+edi*2]
	add	eax, eax
	add	eax, eax
	mov	DWORD PTR tv515[ebp], eax
	add	eax, ecx
	push	eax
	push	ebx
	push	ecx
	mov	ecx, esi
	mov	DWORD PTR __Tmp$225203[ebp+4], edx
	call	??$_Umove@PAUCvDllPathFinderUpdateListData@@@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAEPAUCvDllPathFinderUpdateListData@@PAU2@00@Z ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::_Umove<CvDllPathFinderUpdateListData *>

; 1215 : 
; 1216 : 			_TRY_BEGIN
; 1217 : 			_Ufill(_Mylast, _Count - (_Mylast - _VEC_ITER_BASE(_Where)),
; 1218 : 				_Tmp);	// insert new stuff off end

	mov	ebx, DWORD PTR [esi+8]
	lea	ecx, DWORD PTR __Tmp$225203[ebp]
	push	ecx
	mov	ecx, ebx
	sub	ecx, DWORD PTR __Where$[ebp]
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	sar	edx, 1
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	sub	edi, eax
	push	edi
	push	ebx
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[ebp+12], 2
	call	?_Ufill@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAEPAUCvDllPathFinderUpdateListData@@PAU3@IABU3@@Z ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::_Ufill

; 1219 : 			_CATCH_ALL
; 1220 : 			_Destroy(_VEC_ITER_BASE(_Where) + _Count, _Mylast + _Count);
; 1221 : 			_RERAISE;
; 1222 : 			_CATCH_END
; 1223 : 
; 1224 : 			_Mylast += _Count;

	mov	eax, DWORD PTR tv515[ebp]
	add	DWORD PTR [esi+8], eax
	mov	esi, DWORD PTR [esi+8]

; 1225 : 
; 1226 :  #if _HAS_ITERATOR_DEBUGGING
; 1227 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1228 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1229 : 
; 1230 : 			std::fill(_VEC_ITER_BASE(_Where), _Mylast - _Count,
; 1231 : 				_Tmp);	// insert up to old end

	mov	edx, DWORD PTR __Where$[ebp]
	lea	ecx, DWORD PTR __Tmp$225203[ebp]
	push	ecx
	sub	esi, eax
	push	esi
	push	edx
	call	??$fill@PAUCvDllPathFinderUpdateListData@@U1@@std@@YAXPAUCvDllPathFinderUpdateListData@@0ABU1@@Z ; std::fill<CvDllPathFinderUpdateListData *,CvDllPathFinderUpdateListData>
	add	esp, 12					; 0000000cH

; 1249 : 			}
; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN3@Insert_n@4:

; 1232 : 			}
; 1233 : 		else
; 1234 : 			{	// new stuff can all be assigned
; 1235 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [eax+8]

; 1236 : 
; 1237 : 			pointer _Oldend = _Mylast;
; 1238 : 			_Mylast = _Umove(_Oldend - _Count, _Oldend,
; 1239 : 				_Mylast);	// copy suffix

	lea	edi, DWORD PTR [edi+edi*2]
	mov	DWORD PTR __Tmp$225213[ebp+8], eax
	add	edi, edi
	push	ebx
	add	edi, edi
	mov	eax, ebx
	sub	eax, edi
	push	ebx
	mov	DWORD PTR __Tmp$225213[ebp], ecx
	push	eax
	mov	ecx, esi
	mov	DWORD PTR __Tmp$225213[ebp+4], edx
	mov	DWORD PTR tv525[ebp], eax
	call	??$_Umove@PAUCvDllPathFinderUpdateListData@@@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAEPAUCvDllPathFinderUpdateListData@@PAU2@00@Z ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::_Umove<CvDllPathFinderUpdateListData *>

; 1240 : 
; 1241 :  #if _HAS_ITERATOR_DEBUGGING
; 1242 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1243 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1244 : 
; 1245 : 			_STDEXT _Unchecked_move_backward(_VEC_ITER_BASE(_Where), _Oldend - _Count,
; 1246 : 				_Oldend);	// copy hole

	mov	ecx, DWORD PTR tv525[ebp]
	mov	edx, DWORD PTR __Where$[ebp]
	push	ebx
	push	ecx
	push	edx
	mov	DWORD PTR [esi+8], eax
	call	??$_Unchecked_move_backward@PAUCvDllPathFinderUpdateListData@@PAU1@@stdext@@YAPAUCvDllPathFinderUpdateListData@@PAU1@00@Z ; stdext::_Unchecked_move_backward<CvDllPathFinderUpdateListData *,CvDllPathFinderUpdateListData *>

; 1247 : 			std::fill(_VEC_ITER_BASE(_Where), _VEC_ITER_BASE(_Where) + _Count,
; 1248 : 				_Tmp);	// insert into hole

	lea	eax, DWORD PTR __Tmp$225213[ebp]
	push	eax
	mov	eax, DWORD PTR __Where$[ebp]
	add	edi, eax
	push	edi
	push	eax
	call	??$fill@PAUCvDllPathFinderUpdateListData@@U1@@std@@YAXPAUCvDllPathFinderUpdateListData@@0ABU1@@Z ; std::fill<CvDllPathFinderUpdateListData *,CvDllPathFinderUpdateListData>
	add	esp, 24					; 00000018H
$LN1@Insert_n@4:

; 1249 : 			}
; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN86@Insert_n@4:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Insert_n@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAEXV?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@2@IABUCvDllPathFinderUpdateListData@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?_Insert_n@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAEXV?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@2@IABUCvDllPathFinderUpdateListData@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Insert_n@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAEXV?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@2@IABUCvDllPathFinderUpdateListData@@@Z ENDP ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::_Insert_n
PUBLIC	??$_Umove@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAEPAUCvDllPathFinderUpdateListData@@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@1@0PAU2@@Z ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::_Umove<std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> > >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Umove@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAEPAUCvDllPathFinderUpdateListData@@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@1@0PAU2@@Z
_TEXT	SEGMENT
$T236310 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$236313 = 16					; size = 1
__Ptr$ = 16						; size = 4
??$_Umove@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAEPAUCvDllPathFinderUpdateListData@@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@1@0PAU2@@Z PROC ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::_Umove<std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> > >, COMDAT
; _this$ = ecx

; 1145 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

	push	ecx

; 1146 : 		{	// move initializing [_First, _Last), using allocator
; 1147 : 		return (_STDEXT _Unchecked_uninitialized_move(_First, _Last,
; 1148 : 			_Ptr, this->_Alval));

	mov	edx, DWORD PTR __Cat$236313[esp]
	mov	BYTE PTR $T236310[esp+4], 0
	mov	eax, DWORD PTR $T236310[esp+4]
	push	eax
	mov	eax, DWORD PTR __Ptr$[esp+4]
	push	edx
	mov	edx, DWORD PTR __First$[esp+8]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@PAUCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@2@@std@@YAPAUCvDllPathFinderUpdateListData@@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@0@0PAU1@AAV?$allocator@UCvDllPathFinderUpdateListData@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >,CvDllPathFinderUpdateListData *,std::allocator<CvDllPathFinderUpdateListData> >

; 1149 : 		}

	add	esp, 28					; 0000001cH
	ret	12					; 0000000cH
??$_Umove@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAEPAUCvDllPathFinderUpdateListData@@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@1@0PAU2@@Z ENDP ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::_Umove<std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> > >
_TEXT	ENDS
PUBLIC	??1CvDllGameContext@@QAE@XZ			; CvDllGameContext::~CvDllGameContext
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??1CvDllGameContext@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CvDllGameContext@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CvDllGameContext@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CvDllGameContext@@QAE@XZ$2
__ehfuncinfo$??1CvDllGameContext@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1CvDllGameContext@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvdllcontext.cpp
xdata$x	ENDS
;	COMDAT ??1CvDllGameContext@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CvDllGameContext@@QAE@XZ PROC			; CvDllGameContext::~CvDllGameContext, COMDAT
; _this$ = ecx

; 67   : {

	push	-1
	push	__ehhandler$??1CvDllGameContext@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	ebp
	push	esi
	mov	esi, ecx
	push	edi
	mov	DWORD PTR _this$[esp+28], esi
	mov	DWORD PTR [esi], OFFSET ??_7CvDllGameContext@@6B@

; 68   : 	delete m_pNetworkSyncronizer;

	mov	edi, DWORD PTR [esi+4]
	xor	ebp, ebp
	mov	DWORD PTR __$EHRec$[esp+36], 2
	cmp	edi, ebp
	je	SHORT $LN12@CvDllGameC@2
	mov	ecx, edi
	call	??1CvDllNetworkSyncronization@@QAE@XZ	; CvDllNetworkSyncronization::~CvDllNetworkSyncronization
	push	edi
	call	??3CvDllNetworkSyncronization@@SAXPAX@Z	; CvDllNetworkSyncronization::operator delete
	add	esp, 4
$LN12@CvDllGameC@2:

; 69   : 	delete m_pNetMessageHandler;

	mov	edi, DWORD PTR [esi+8]
	cmp	edi, ebp
	je	SHORT $LN14@CvDllGameC@2
	mov	ecx, edi
	call	??1CvDllNetMessageHandler@@QAE@XZ	; CvDllNetMessageHandler::~CvDllNetMessageHandler
	push	edi
	call	??3CvDllNetMessageHandler@@SAXPAX@Z	; CvDllNetMessageHandler::operator delete
	add	esp, 4
$LN14@CvDllGameC@2:

; 70   : 	delete m_pScriptSystemUtility;

	mov	edi, DWORD PTR [esi+12]
	cmp	edi, ebp
	je	SHORT $LN16@CvDllGameC@2
	mov	ecx, edi
	call	??1CvDllScriptSystemUtility@@QAE@XZ	; CvDllScriptSystemUtility::~CvDllScriptSystemUtility
	push	edi
	call	??3CvDllScriptSystemUtility@@SAXPAX@Z	; CvDllScriptSystemUtility::operator delete
	add	esp, 4
$LN16@CvDllGameC@2:

; 71   : 	delete m_pWorldBuilderMapLoader;

	mov	edi, DWORD PTR [esi+16]
	cmp	edi, ebp
	je	SHORT $LN18@CvDllGameC@2
	mov	ecx, edi
	call	??1CvDllWorldBuilderMapLoader@@QAE@XZ	; CvDllWorldBuilderMapLoader::~CvDllWorldBuilderMapLoader
	push	edi
	call	??3CvDllWorldBuilderMapLoader@@SAXPAX@Z	; CvDllWorldBuilderMapLoader::operator delete
	add	esp, 4
$LN18@CvDllGameC@2:

; 72   : 
; 73   : 	for(std::vector<std::pair<uint, CvRandom*> >::iterator it = m_RandomNumberGenerators.begin();

	mov	edi, DWORD PTR [esi+24]

; 74   : 	        it != m_RandomNumberGenerators.end(); ++it)

	cmp	edi, DWORD PTR [esi+28]
	je	SHORT $LN7@CvDllGameC@2
$LL49@CvDllGameC@2:

; 75   : 	{
; 76   : 		delete(*it).second;

	mov	ecx, DWORD PTR [edi+4]
	cmp	ecx, ebp
	je	SHORT $LN20@CvDllGameC@2
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax]
	push	1
	call	edx
$LN20@CvDllGameC@2:

; 77   : 		it->second = NULL;

	mov	DWORD PTR [edi+4], ebp
	add	edi, 8
	cmp	edi, DWORD PTR [esi+28]
	jne	SHORT $LL49@CvDllGameC@2
$LN7@CvDllGameC@2:

; 78   : 	}
; 79   : 	m_RandomNumberGenerators.clear();

	mov	edx, DWORD PTR [esi+28]
	mov	ecx, DWORD PTR [esi+24]
	cmp	ecx, edx
	je	SHORT $LN85@CvDllGameC@2
	mov	eax, edx
	cmp	edx, edx
	je	SHORT $LN110@CvDllGameC@2
	npad	3
$LL112@CvDllGameC@2:
	mov	edi, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edi
	mov	edi, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edi
	add	eax, 8
	add	ecx, 8
	cmp	eax, edx
	jne	SHORT $LL112@CvDllGameC@2
$LN110@CvDllGameC@2:
	mov	DWORD PTR [esi+28], ecx
$LN85@CvDllGameC@2:

; 80   : 
; 81   : 	for(std::vector<std::pair<uint, CvDllNetInitInfo*> >::iterator it = m_NetInitInfos.begin();

	mov	edi, DWORD PTR [esi+44]
	push	ebx

; 82   : 	        it != m_NetInitInfos.end(); ++it)

	cmp	edi, DWORD PTR [esi+48]
	je	SHORT $LN4@CvDllGameC@2
$LL123@CvDllGameC@2:

; 83   : 	{
; 84   : 		delete(*it).second;

	mov	ebx, DWORD PTR [edi+4]
	cmp	ebx, ebp
	je	SHORT $LN22@CvDllGameC@2
	mov	ecx, ebx
	call	??1CvDllNetInitInfo@@QAE@XZ		; CvDllNetInitInfo::~CvDllNetInitInfo
	push	ebx
	call	??3CvDllNetInitInfo@@SAXPAX@Z		; CvDllNetInitInfo::operator delete
	add	esp, 4
$LN22@CvDllGameC@2:

; 85   : 		it->second = NULL;

	mov	DWORD PTR [edi+4], ebp
	add	edi, 8
	cmp	edi, DWORD PTR [esi+48]
	jne	SHORT $LL123@CvDllGameC@2
$LN4@CvDllGameC@2:

; 86   : 	}
; 87   : 	m_NetInitInfos.clear();

	mov	edx, DWORD PTR [esi+48]
	mov	ecx, DWORD PTR [esi+44]
	cmp	ecx, edx
	je	SHORT $LN162@CvDllGameC@2
	mov	eax, edx
	cmp	edx, edx
	je	SHORT $LN187@CvDllGameC@2
$LL189@CvDllGameC@2:
	mov	edi, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edi
	mov	edi, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edi
	add	eax, 8
	add	ecx, 8
	cmp	eax, edx
	jne	SHORT $LL189@CvDllGameC@2
$LN187@CvDllGameC@2:
	mov	DWORD PTR [esi+48], ecx
$LN162@CvDllGameC@2:

; 88   : 
; 89   : 
; 90   : 	for(std::vector<std::pair<uint, CvDllNetLoadGameInfo*> >::iterator it = m_NetLoadGameInfos.begin();

	mov	edi, DWORD PTR [esi+64]

; 91   : 	        it != m_NetLoadGameInfos.end(); ++it)

	cmp	edi, DWORD PTR [esi+68]
	je	SHORT $LN1@CvDllGameC@2
$LL200@CvDllGameC@2:

; 92   : 	{
; 93   : 		delete(*it).second;

	mov	ebx, DWORD PTR [edi+4]
	cmp	ebx, ebp
	je	SHORT $LN24@CvDllGameC@2
	mov	ecx, ebx
	call	??1CvDllNetLoadGameInfo@@QAE@XZ		; CvDllNetLoadGameInfo::~CvDllNetLoadGameInfo
	push	ebx
	call	??3CvDllNetLoadGameInfo@@SAXPAX@Z	; CvDllNetLoadGameInfo::operator delete
	add	esp, 4
$LN24@CvDllGameC@2:

; 94   : 		it->second = NULL;

	mov	DWORD PTR [edi+4], ebp
	add	edi, 8
	cmp	edi, DWORD PTR [esi+68]
	jne	SHORT $LL200@CvDllGameC@2
$LN1@CvDllGameC@2:

; 95   : 	}
; 96   : 	m_NetLoadGameInfos.clear();

	mov	edx, DWORD PTR [esi+68]
	mov	ecx, DWORD PTR [esi+64]
	pop	ebx
	cmp	ecx, edx
	je	SHORT $LN239@CvDllGameC@2
	mov	eax, edx
	cmp	edx, edx
	je	SHORT $LN264@CvDllGameC@2
$LL266@CvDllGameC@2:
	mov	edi, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edi
	mov	edi, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edi
	add	eax, 8
	add	ecx, 8
	cmp	eax, edx
	jne	SHORT $LL266@CvDllGameC@2
$LN264@CvDllGameC@2:
	mov	DWORD PTR [esi+68], ecx
$LN239@CvDllGameC@2:

; 97   : }

	mov	eax, DWORD PTR [esi+64]
	cmp	eax, ebp
	je	SHORT $LN274@CvDllGameC@2
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN274@CvDllGameC@2:
	mov	DWORD PTR [esi+64], ebp
	mov	DWORD PTR [esi+68], ebp
	mov	DWORD PTR [esi+72], ebp
	mov	eax, DWORD PTR [esi+44]
	cmp	eax, ebp
	je	SHORT $LN281@CvDllGameC@2
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN281@CvDllGameC@2:
	mov	DWORD PTR [esi+44], ebp
	mov	DWORD PTR [esi+48], ebp
	mov	DWORD PTR [esi+52], ebp
	mov	eax, DWORD PTR [esi+24]
	cmp	eax, ebp
	je	SHORT $LN288@CvDllGameC@2
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN288@CvDllGameC@2:
	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR [esi+24], ebp
	mov	DWORD PTR [esi+28], ebp
	mov	DWORD PTR [esi+32], ebp
	pop	edi
	pop	esi
	pop	ebp
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CvDllGameContext@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	jmp	??1?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAE@XZ ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::~vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >
__unwindfunclet$??1CvDllGameContext@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	jmp	??1?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAE@XZ ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::~vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >
__unwindfunclet$??1CvDllGameContext@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	jmp	??1?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAE@XZ ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::~vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >
__ehhandler$??1CvDllGameContext@@QAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??1CvDllGameContext@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CvDllGameContext@@QAE@XZ ENDP			; CvDllGameContext::~CvDllGameContext
PUBLIC	?reserve@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAEXI@Z ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::reserve
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$?reserve@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?reserve@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAEXI@Z$0
__unwindtable$?reserve@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?reserve@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?reserve@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAEXI@Z$2
__ehfuncinfo$?reserve@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?reserve@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?reserve@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?reserve@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
$T237443 = -24						; size = 1
__Ptr$224582 = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Cat$237446 = 8					; size = 1
__Count$ = 8						; size = 4
?reserve@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAEXI@Z PROC ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::reserve, COMDAT
; _this$ = ecx

; 602  : 		{	// determine new minimum length of allocated storage

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?reserve@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi

; 603  : 		if (max_size() < _Count)

	mov	edi, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	esi, ecx
	cmp	edi, 357913941				; 15555555H
	jbe	SHORT $LN5@reserve

; 604  : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@KAXXZ ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::_Xlen
$LN57@reserve:
$LN5@reserve:

; 605  : 		else if (capacity() < _Count)

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN21@reserve
$LN20@reserve:
	mov	ecx, DWORD PTR [esi+12]
	sub	ecx, eax
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	sar	edx, 1
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
$LN21@reserve:
	cmp	eax, edi
	jae	SHORT $LN3@reserve

; 606  : 			{	// not enough room, reallocate
; 607  : 			pointer _Ptr = this->_Alval.allocate(_Count);

	push	0
	push	edi
	call	??$_Allocate@UCvDllPathFinderUpdateListData@@@std@@YAPAUCvDllPathFinderUpdateListData@@IPAU1@@Z ; std::_Allocate<CvDllPathFinderUpdateListData>

; 608  : 
; 609  : 			_TRY_BEGIN
; 610  : 			_Umove(begin(), end(), _Ptr);

	mov	ecx, DWORD PTR [esi+8]
	mov	edx, DWORD PTR [esi+4]
	mov	BYTE PTR $T237443[ebp], 0
	mov	edi, DWORD PTR $T237443[ebp]
	push	edi
	mov	edi, DWORD PTR __Cat$237446[ebp]
	push	edi
	push	esi
	push	eax
	push	ecx
	push	edx
	mov	DWORD PTR __Ptr$224582[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	call	??$_Uninit_copy@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@PAUCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@2@@std@@YAPAUCvDllPathFinderUpdateListData@@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@0@0PAU1@AAV?$allocator@UCvDllPathFinderUpdateListData@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >,CvDllPathFinderUpdateListData *,std::allocator<CvDllPathFinderUpdateListData> >

; 614  : 			_CATCH_END
; 615  : 
; 616  : 			size_type _Size = size();

	mov	ebx, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [esi+8]
	sub	ecx, ebx
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	sar	edx, 1
	mov	edi, edx
	shr	edi, 31					; 0000001fH
	add	esp, 32					; 00000020H
	add	edi, edx

; 617  : 			if (_Myfirst != 0)

	test	ebx, ebx
	je	SHORT $LN52@reserve

; 618  : 				{	// destroy and deallocate old array
; 619  : 				_Destroy(_Myfirst, _Mylast);
; 620  : 				this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	push	ebx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN52@reserve:

; 621  : 				}
; 622  : 
; 623  :  #if _HAS_ITERATOR_DEBUGGING
; 624  : 			this->_Orphan_all();
; 625  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 626  : 
; 627  : 			_Myend = _Ptr + _Count;

	mov	eax, DWORD PTR __Count$[ebp]
	lea	ecx, DWORD PTR [eax+eax*2]
	mov	eax, DWORD PTR __Ptr$224582[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]

; 628  : 			_Mylast = _Ptr + _Size;

	lea	ecx, DWORD PTR [edi+edi*2]
	mov	DWORD PTR [esi+12], edx
	lea	edx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR [esi+8], edx

; 629  : 			_Myfirst = _Ptr;

	mov	DWORD PTR [esi+4], eax
$LN3@reserve:

; 630  : 			}
; 631  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
__catch$?reserve@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAEXI@Z$0:

; 611  : 			_CATCH_ALL
; 612  : 			this->_Alval.deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Ptr$224582[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 613  : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN58@reserve:
$LN56@reserve:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?reserve@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAEXI@Z:
	mov	eax, OFFSET __ehfuncinfo$?reserve@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?reserve@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAEXI@Z ENDP ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::reserve
PUBLIC	?insert@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@ABU?$pair@IPAVCvRandom@@@2@@Z ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::insert
; Function compile flags: /Ogtpy
;	COMDAT ?insert@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@ABU?$pair@IPAVCvRandom@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Val$ = 16						; size = 4
?insert@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@ABU?$pair@IPAVCvRandom@@@2@@Z PROC ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::insert, COMDAT
; _this$ = ecx

; 875  : 		{	// insert _Val at _Where

	push	esi
	push	edi
	mov	edi, ecx

; 876  : 		size_type _Off = size() == 0 ? 0 : _Where - begin();

	mov	eax, DWORD PTR [edi+4]
	mov	ecx, DWORD PTR [edi+8]
	sub	ecx, eax
	test	ecx, -8					; fffffff8H
	mov	ecx, DWORD PTR __Where$[esp+4]
	jne	SHORT $LN3@insert
	xor	esi, esi
	jmp	SHORT $LN4@insert
$LN3@insert:
	mov	esi, ecx
	sub	esi, eax
	sar	esi, 3
$LN4@insert:

; 877  : 		_Insert_n(_Where, (size_type)1, _Val);

	mov	edx, DWORD PTR __Val$[esp+4]
	push	edx
	push	1
	push	ecx
	mov	ecx, edi
	call	?_Insert_n@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@IABU?$pair@IPAVCvRandom@@@2@@Z ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::_Insert_n

; 878  : 		return (begin() + _Off);

	mov	eax, DWORD PTR [edi+4]
	lea	ecx, DWORD PTR [eax+esi*8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+4]
	pop	edi
	mov	DWORD PTR [eax], ecx
	pop	esi

; 879  : 		}

	ret	12					; 0000000cH
?insert@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@ABU?$pair@IPAVCvRandom@@@2@@Z ENDP ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::insert
_TEXT	ENDS
PUBLIC	?insert@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@ABU?$pair@IPAVCvDllNetInitInfo@@@2@@Z ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::insert
; Function compile flags: /Ogtpy
;	COMDAT ?insert@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@ABU?$pair@IPAVCvDllNetInitInfo@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Val$ = 16						; size = 4
?insert@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@ABU?$pair@IPAVCvDllNetInitInfo@@@2@@Z PROC ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::insert, COMDAT
; _this$ = ecx

; 875  : 		{	// insert _Val at _Where

	push	esi
	push	edi
	mov	edi, ecx

; 876  : 		size_type _Off = size() == 0 ? 0 : _Where - begin();

	mov	eax, DWORD PTR [edi+4]
	mov	ecx, DWORD PTR [edi+8]
	sub	ecx, eax
	test	ecx, -8					; fffffff8H
	mov	ecx, DWORD PTR __Where$[esp+4]
	jne	SHORT $LN3@insert@2
	xor	esi, esi
	jmp	SHORT $LN4@insert@2
$LN3@insert@2:
	mov	esi, ecx
	sub	esi, eax
	sar	esi, 3
$LN4@insert@2:

; 877  : 		_Insert_n(_Where, (size_type)1, _Val);

	mov	edx, DWORD PTR __Val$[esp+4]
	push	edx
	push	1
	push	ecx
	mov	ecx, edi
	call	?_Insert_n@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@IABU?$pair@IPAVCvDllNetInitInfo@@@2@@Z ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::_Insert_n

; 878  : 		return (begin() + _Off);

	mov	eax, DWORD PTR [edi+4]
	lea	ecx, DWORD PTR [eax+esi*8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+4]
	pop	edi
	mov	DWORD PTR [eax], ecx
	pop	esi

; 879  : 		}

	ret	12					; 0000000cH
?insert@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@ABU?$pair@IPAVCvDllNetInitInfo@@@2@@Z ENDP ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::insert
_TEXT	ENDS
PUBLIC	?insert@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@ABU?$pair@IPAVCvDllNetLoadGameInfo@@@2@@Z ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::insert
; Function compile flags: /Ogtpy
;	COMDAT ?insert@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@ABU?$pair@IPAVCvDllNetLoadGameInfo@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Val$ = 16						; size = 4
?insert@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@ABU?$pair@IPAVCvDllNetLoadGameInfo@@@2@@Z PROC ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::insert, COMDAT
; _this$ = ecx

; 875  : 		{	// insert _Val at _Where

	push	esi
	push	edi
	mov	edi, ecx

; 876  : 		size_type _Off = size() == 0 ? 0 : _Where - begin();

	mov	eax, DWORD PTR [edi+4]
	mov	ecx, DWORD PTR [edi+8]
	sub	ecx, eax
	test	ecx, -8					; fffffff8H
	mov	ecx, DWORD PTR __Where$[esp+4]
	jne	SHORT $LN3@insert@3
	xor	esi, esi
	jmp	SHORT $LN4@insert@3
$LN3@insert@3:
	mov	esi, ecx
	sub	esi, eax
	sar	esi, 3
$LN4@insert@3:

; 877  : 		_Insert_n(_Where, (size_type)1, _Val);

	mov	edx, DWORD PTR __Val$[esp+4]
	push	edx
	push	1
	push	ecx
	mov	ecx, edi
	call	?_Insert_n@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@IABU?$pair@IPAVCvDllNetLoadGameInfo@@@2@@Z ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::_Insert_n

; 878  : 		return (begin() + _Off);

	mov	eax, DWORD PTR [edi+4]
	lea	ecx, DWORD PTR [eax+esi*8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+4]
	pop	edi
	mov	DWORD PTR [eax], ecx
	pop	esi

; 879  : 		}

	ret	12					; 0000000cH
?insert@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@V?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@ABU?$pair@IPAVCvDllNetLoadGameInfo@@@2@@Z ENDP ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::insert
_TEXT	ENDS
PUBLIC	?insert@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAE?AV?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@2@V?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@2@ABUCvDllPathFinderUpdateListData@@@Z ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::insert
; Function compile flags: /Ogtpy
;	COMDAT ?insert@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAE?AV?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@2@V?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@2@ABUCvDllPathFinderUpdateListData@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Val$ = 16						; size = 4
?insert@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAE?AV?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@2@V?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@2@ABUCvDllPathFinderUpdateListData@@@Z PROC ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::insert, COMDAT
; _this$ = ecx

; 875  : 		{	// insert _Val at _Where

	push	ebx

; 876  : 		size_type _Off = size() == 0 ? 0 : _Where - begin();

	mov	ebx, DWORD PTR __Where$[esp]
	push	esi
	push	edi
	mov	edi, ecx
	mov	esi, DWORD PTR [edi+4]
	mov	ecx, DWORD PTR [edi+8]
	sub	ecx, esi
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	sar	edx, 1
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	jne	SHORT $LN3@insert@4
	xor	esi, esi
	jmp	SHORT $LN4@insert@4
$LN3@insert@4:
	mov	ecx, ebx
	sub	ecx, esi
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	sar	edx, 1
	mov	esi, edx
	shr	esi, 31					; 0000001fH
	add	esi, edx
$LN4@insert@4:

; 877  : 		_Insert_n(_Where, (size_type)1, _Val);

	mov	ecx, DWORD PTR __Val$[esp+8]
	push	ecx
	push	1
	push	ebx
	mov	ecx, edi
	call	?_Insert_n@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@IAEXV?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@2@IABUCvDllPathFinderUpdateListData@@@Z ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::_Insert_n

; 878  : 		return (begin() + _Off);

	mov	eax, DWORD PTR [edi+4]
	lea	edx, DWORD PTR [esi+esi*2]
	pop	edi
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+4]
	pop	esi
	mov	DWORD PTR [eax], ecx
	pop	ebx

; 879  : 		}

	ret	12					; 0000000cH
?insert@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAE?AV?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@2@V?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@2@ABUCvDllPathFinderUpdateListData@@@Z ENDP ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::insert
_TEXT	ENDS
PUBLIC	??_GCvDllGameContext@@QAEPAXI@Z			; CvDllGameContext::`scalar deleting destructor'
; Function compile flags: /Ogtpy
;	COMDAT ??_GCvDllGameContext@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCvDllGameContext@@QAEPAXI@Z PROC			; CvDllGameContext::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	call	??1CvDllGameContext@@QAE@XZ		; CvDllGameContext::~CvDllGameContext
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN8@scalar@10
	test	esi, esi
	je	SHORT $LN8@scalar@10
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+4]
	push	esi
	call	ecx
$LN8@scalar@10:
	mov	eax, esi
	pop	esi
	ret	4
??_GCvDllGameContext@@QAEPAXI@Z ENDP			; CvDllGameContext::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?push_back@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAEXABU?$pair@IPAVCvRandom@@@2@@Z ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::push_back
; Function compile flags: /Ogtpy
;	COMDAT ?push_back@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAEXABU?$pair@IPAVCvRandom@@@2@@Z
_TEXT	SEGMENT
$T237760 = -4						; size = 1
__Cat$237764 = 8					; size = 1
__Val$ = 8						; size = 4
?push_back@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAEXABU?$pair@IPAVCvRandom@@@2@@Z PROC ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::push_back, COMDAT
; _this$ = ecx

; 809  : 		{	// insert element at end

	push	ecx
	push	esi
	mov	esi, ecx

; 810  : 		if (size() < capacity())

	mov	ecx, DWORD PTR [esi+4]
	push	edi
	test	ecx, ecx
	jne	SHORT $LN9@push_back
	xor	eax, eax
	jmp	SHORT $LN10@push_back
$LN9@push_back:
	mov	eax, DWORD PTR [esi+12]
	sub	eax, ecx
	sar	eax, 3
$LN10@push_back:
	mov	edi, DWORD PTR [esi+8]
	mov	edx, edi
	sub	edx, ecx
	sar	edx, 3
	cmp	edx, eax
	jae	SHORT $LN2@push_back

; 811  : 
; 812  :  #if _HAS_ITERATOR_DEBUGGING
; 813  : 			{ // room at end, construct it there
; 814  : 			_Orphan_range(_Mylast, _Mylast);
; 815  : 			_Mylast = _Ufill(_Mylast, 1, _Val);
; 816  : 			}
; 817  : 
; 818  :  #else /* _HAS_ITERATOR_DEBUGGING */
; 819  : 			_Mylast = _Ufill(_Mylast, 1, _Val);

	mov	ecx, DWORD PTR __Cat$237764[esp+8]
	mov	edx, DWORD PTR __Val$[esp+8]
	mov	BYTE PTR $T237760[esp+12], 0
	mov	eax, DWORD PTR $T237760[esp+12]
	push	eax
	push	ecx
	push	esi
	push	edx
	push	1
	push	edi
	call	??$_Uninit_fill_n@PAU?$pair@IPAVCvRandom@@@std@@IU12@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@YAXPAU?$pair@IPAVCvRandom@@@0@IABU10@AAV?$allocator@U?$pair@IPAVCvRandom@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<std::pair<unsigned int,CvRandom *> *,unsigned int,std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >
	add	esp, 24					; 00000018H
	add	edi, 8
	mov	DWORD PTR [esi+8], edi
	pop	edi
	pop	esi

; 824  : 		}

	pop	ecx
	ret	4
$LN2@push_back:

; 820  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 821  : 
; 822  : 		else
; 823  : 			insert(end(), _Val);

	mov	eax, DWORD PTR __Val$[esp+8]
	push	eax
	push	1
	push	edi
	mov	ecx, esi
	call	?_Insert_n@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@2@IABU?$pair@IPAVCvRandom@@@2@@Z ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::_Insert_n
	pop	edi
	pop	esi

; 824  : 		}

	pop	ecx
	ret	4
?push_back@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAEXABU?$pair@IPAVCvRandom@@@2@@Z ENDP ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::push_back
_TEXT	ENDS
PUBLIC	?push_back@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAEXABU?$pair@IPAVCvDllNetInitInfo@@@2@@Z ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::push_back
; Function compile flags: /Ogtpy
;	COMDAT ?push_back@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAEXABU?$pair@IPAVCvDllNetInitInfo@@@2@@Z
_TEXT	SEGMENT
$T237908 = -4						; size = 1
__Cat$237912 = 8					; size = 1
__Val$ = 8						; size = 4
?push_back@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAEXABU?$pair@IPAVCvDllNetInitInfo@@@2@@Z PROC ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::push_back, COMDAT
; _this$ = ecx

; 809  : 		{	// insert element at end

	push	ecx
	push	esi
	mov	esi, ecx

; 810  : 		if (size() < capacity())

	mov	ecx, DWORD PTR [esi+4]
	push	edi
	test	ecx, ecx
	jne	SHORT $LN9@push_back@2
	xor	eax, eax
	jmp	SHORT $LN10@push_back@2
$LN9@push_back@2:
	mov	eax, DWORD PTR [esi+12]
	sub	eax, ecx
	sar	eax, 3
$LN10@push_back@2:
	mov	edi, DWORD PTR [esi+8]
	mov	edx, edi
	sub	edx, ecx
	sar	edx, 3
	cmp	edx, eax
	jae	SHORT $LN2@push_back@2

; 811  : 
; 812  :  #if _HAS_ITERATOR_DEBUGGING
; 813  : 			{ // room at end, construct it there
; 814  : 			_Orphan_range(_Mylast, _Mylast);
; 815  : 			_Mylast = _Ufill(_Mylast, 1, _Val);
; 816  : 			}
; 817  : 
; 818  :  #else /* _HAS_ITERATOR_DEBUGGING */
; 819  : 			_Mylast = _Ufill(_Mylast, 1, _Val);

	mov	ecx, DWORD PTR __Cat$237912[esp+8]
	mov	edx, DWORD PTR __Val$[esp+8]
	mov	BYTE PTR $T237908[esp+12], 0
	mov	eax, DWORD PTR $T237908[esp+12]
	push	eax
	push	ecx
	push	esi
	push	edx
	push	1
	push	edi
	call	??$_Uninit_fill_n@PAU?$pair@IPAVCvDllNetInitInfo@@@std@@IU12@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@YAXPAU?$pair@IPAVCvDllNetInitInfo@@@0@IABU10@AAV?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<std::pair<unsigned int,CvDllNetInitInfo *> *,unsigned int,std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >
	add	esp, 24					; 00000018H
	add	edi, 8
	mov	DWORD PTR [esi+8], edi
	pop	edi
	pop	esi

; 824  : 		}

	pop	ecx
	ret	4
$LN2@push_back@2:

; 820  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 821  : 
; 822  : 		else
; 823  : 			insert(end(), _Val);

	mov	eax, DWORD PTR __Val$[esp+8]
	push	eax
	push	1
	push	edi
	mov	ecx, esi
	call	?_Insert_n@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@2@IABU?$pair@IPAVCvDllNetInitInfo@@@2@@Z ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::_Insert_n
	pop	edi
	pop	esi

; 824  : 		}

	pop	ecx
	ret	4
?push_back@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAEXABU?$pair@IPAVCvDllNetInitInfo@@@2@@Z ENDP ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::push_back
_TEXT	ENDS
PUBLIC	?push_back@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAEXABU?$pair@IPAVCvDllNetLoadGameInfo@@@2@@Z ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::push_back
; Function compile flags: /Ogtpy
;	COMDAT ?push_back@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAEXABU?$pair@IPAVCvDllNetLoadGameInfo@@@2@@Z
_TEXT	SEGMENT
$T238056 = -4						; size = 1
__Cat$238059 = 8					; size = 1
__Val$ = 8						; size = 4
?push_back@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAEXABU?$pair@IPAVCvDllNetLoadGameInfo@@@2@@Z PROC ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::push_back, COMDAT
; _this$ = ecx

; 809  : 		{	// insert element at end

	push	ecx
	push	esi
	mov	esi, ecx

; 810  : 		if (size() < capacity())

	mov	ecx, DWORD PTR [esi+4]
	push	edi
	test	ecx, ecx
	jne	SHORT $LN9@push_back@3
	xor	eax, eax
	jmp	SHORT $LN10@push_back@3
$LN9@push_back@3:
	mov	eax, DWORD PTR [esi+12]
	sub	eax, ecx
	sar	eax, 3
$LN10@push_back@3:
	mov	edi, DWORD PTR [esi+8]
	mov	edx, edi
	sub	edx, ecx
	sar	edx, 3
	cmp	edx, eax
	jae	SHORT $LN2@push_back@3

; 811  : 
; 812  :  #if _HAS_ITERATOR_DEBUGGING
; 813  : 			{ // room at end, construct it there
; 814  : 			_Orphan_range(_Mylast, _Mylast);
; 815  : 			_Mylast = _Ufill(_Mylast, 1, _Val);
; 816  : 			}
; 817  : 
; 818  :  #else /* _HAS_ITERATOR_DEBUGGING */
; 819  : 			_Mylast = _Ufill(_Mylast, 1, _Val);

	mov	ecx, DWORD PTR __Cat$238059[esp+8]
	mov	edx, DWORD PTR __Val$[esp+8]
	mov	BYTE PTR $T238056[esp+12], 0
	mov	eax, DWORD PTR $T238056[esp+12]
	push	eax
	push	ecx
	push	esi
	push	edx
	push	1
	push	edi
	call	??$_Uninit_fill_n@PAU?$pair@IPAVCvDllNetLoadGameInfo@@@std@@IU12@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@YAXPAU?$pair@IPAVCvDllNetLoadGameInfo@@@0@IABU10@AAV?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<std::pair<unsigned int,CvDllNetLoadGameInfo *> *,unsigned int,std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >
	add	esp, 24					; 00000018H
	add	edi, 8
	mov	DWORD PTR [esi+8], edi
	pop	edi
	pop	esi

; 824  : 		}

	pop	ecx
	ret	4
$LN2@push_back@3:

; 820  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 821  : 
; 822  : 		else
; 823  : 			insert(end(), _Val);

	mov	eax, DWORD PTR __Val$[esp+8]
	push	eax
	push	1
	push	edi
	mov	ecx, esi
	call	?_Insert_n@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@2@IABU?$pair@IPAVCvDllNetLoadGameInfo@@@2@@Z ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::_Insert_n
	pop	edi
	pop	esi

; 824  : 		}

	pop	ecx
	ret	4
?push_back@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAEXABU?$pair@IPAVCvDllNetLoadGameInfo@@@2@@Z ENDP ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::push_back
_TEXT	ENDS
PUBLIC	?push_back@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAEXABUCvDllPathFinderUpdateListData@@@Z ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::push_back
; Function compile flags: /Ogtpy
;	COMDAT ?push_back@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAEXABUCvDllPathFinderUpdateListData@@@Z
_TEXT	SEGMENT
$T238205 = -4						; size = 1
__Cat$238208 = 8					; size = 1
$T238175 = 8						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAEXABUCvDllPathFinderUpdateListData@@@Z PROC ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::push_back, COMDAT
; _this$ = ecx

; 809  : 		{	// insert element at end

	push	ecx
	push	ebx
	push	esi
	mov	esi, ecx

; 810  : 		if (size() < capacity())

	mov	ebx, DWORD PTR [esi+4]
	push	edi
	test	ebx, ebx
	jne	SHORT $LN9@push_back@4
	xor	ecx, ecx
	jmp	SHORT $LN10@push_back@4
$LN9@push_back@4:
	mov	ecx, DWORD PTR [esi+12]
	sub	ecx, ebx
	mov	eax, 715827883				; 2aaaaaabH
	imul	ecx
	sar	edx, 1
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
$LN10@push_back@4:
	mov	edi, DWORD PTR [esi+8]
	mov	edx, edi
	sub	edx, ebx
	mov	eax, 715827883				; 2aaaaaabH
	imul	edx
	sar	edx, 1
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cmp	eax, ecx
	jae	SHORT $LN2@push_back@4

; 811  : 
; 812  :  #if _HAS_ITERATOR_DEBUGGING
; 813  : 			{ // room at end, construct it there
; 814  : 			_Orphan_range(_Mylast, _Mylast);
; 815  : 			_Mylast = _Ufill(_Mylast, 1, _Val);
; 816  : 			}
; 817  : 
; 818  :  #else /* _HAS_ITERATOR_DEBUGGING */
; 819  : 			_Mylast = _Ufill(_Mylast, 1, _Val);

	mov	edx, DWORD PTR __Cat$238208[esp+12]
	mov	eax, DWORD PTR __Val$[esp+12]
	mov	BYTE PTR $T238205[esp+16], 0
	mov	ecx, DWORD PTR $T238205[esp+16]
	push	ecx
	push	edx
	push	esi
	push	eax
	push	1
	push	edi
	call	??$_Uninit_fill_n@PAUCvDllPathFinderUpdateListData@@IU1@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@YAXPAUCvDllPathFinderUpdateListData@@IABU1@AAV?$allocator@UCvDllPathFinderUpdateListData@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<CvDllPathFinderUpdateListData *,unsigned int,CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >
	add	esp, 24					; 00000018H
	add	edi, 12					; 0000000cH
	mov	DWORD PTR [esi+8], edi
	pop	edi
	pop	esi
	pop	ebx

; 824  : 		}

	pop	ecx
	ret	4
$LN2@push_back@4:

; 820  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 821  : 
; 822  : 		else
; 823  : 			insert(end(), _Val);

	mov	ecx, DWORD PTR __Val$[esp+12]
	push	ecx
	push	edi
	lea	edx, DWORD PTR $T238175[esp+20]
	push	edx
	mov	ecx, esi
	call	?insert@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAE?AV?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@2@V?$_Vector_const_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@2@ABUCvDllPathFinderUpdateListData@@@Z ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::insert
	pop	edi
	pop	esi
	pop	ebx

; 824  : 		}

	pop	ecx
	ret	4
?push_back@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAEXABUCvDllPathFinderUpdateListData@@@Z ENDP ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::push_back
_TEXT	ENDS
PUBLIC	??$SAFE_DELETE@VCvDllGameContext@@@@YAXAAPAVCvDllGameContext@@@Z ; SAFE_DELETE<CvDllGameContext>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffiretypes.h
;	COMDAT ??$SAFE_DELETE@VCvDllGameContext@@@@YAXAAPAVCvDllGameContext@@@Z
_TEXT	SEGMENT
_pkInstance$ = 8					; size = 4
??$SAFE_DELETE@VCvDllGameContext@@@@YAXAAPAVCvDllGameContext@@@Z PROC ; SAFE_DELETE<CvDllGameContext>, COMDAT

; 305  : {

	push	esi
	push	edi

; 306  : 	delete pkInstance;

	mov	edi, DWORD PTR _pkInstance$[esp+4]
	mov	esi, DWORD PTR [edi]
	test	esi, esi
	je	SHORT $LN11@SAFE_DELET
	mov	ecx, esi
	call	??1CvDllGameContext@@QAE@XZ		; CvDllGameContext::~CvDllGameContext
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+4]
	push	esi
	call	ecx
$LN11@SAFE_DELET:

; 307  : 	pkInstance = NULL;

	mov	DWORD PTR [edi], 0
	pop	edi
	pop	esi

; 308  : };

	ret	0
??$SAFE_DELETE@VCvDllGameContext@@@@YAXAAPAVCvDllGameContext@@@Z ENDP ; SAFE_DELETE<CvDllGameContext>
_TEXT	ENDS
PUBLIC	?DestroySingleton@CvDllGameContext@@SAXXZ	; CvDllGameContext::DestroySingleton
EXTRN	__imp__HeapDestroy@4:PROC
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvdllcontext.cpp
;	COMDAT ?DestroySingleton@CvDllGameContext@@SAXXZ
_TEXT	SEGMENT
?DestroySingleton@CvDllGameContext@@SAXXZ PROC		; CvDllGameContext::DestroySingleton, COMDAT

; 153  : 	SAFE_DELETE(s_pSingleton);

	mov	ecx, DWORD PTR ?s_pSingleton@CvDllGameContext@@0PAV1@A ; CvDllGameContext::s_pSingleton
	push	esi
	mov	esi, ecx
	test	ecx, ecx
	je	SHORT $LN10@DestroySin
	call	??1CvDllGameContext@@QAE@XZ		; CvDllGameContext::~CvDllGameContext
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+4]
	push	esi
	call	ecx
$LN10@DestroySin:

; 154  : 	HeapDestroy(s_hHeap);

	mov	edx, DWORD PTR ?s_hHeap@CvDllGameContext@@0PAXA ; CvDllGameContext::s_hHeap
	push	edx
	mov	DWORD PTR ?s_pSingleton@CvDllGameContext@@0PAV1@A, 0 ; CvDllGameContext::s_pSingleton
	call	DWORD PTR __imp__HeapDestroy@4

; 155  : 	s_hHeap = INVALID_HANDLE_VALUE;

	mov	DWORD PTR ?s_hHeap@CvDllGameContext@@0PAXA, -1 ; CvDllGameContext::s_hHeap
	pop	esi

; 156  : }

	ret	0
?DestroySingleton@CvDllGameContext@@SAXXZ ENDP		; CvDllGameContext::DestroySingleton
_TEXT	ENDS
EXTRN	??0CvRandom@@QAE@XZ:PROC			; CvRandom::CvRandom
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$?CreateRandomNumberGenerator@CvDllGameContext@@UAGIXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateRandomNumberGenerator@CvDllGameContext@@UAGIXZ$0
__ehfuncinfo$?CreateRandomNumberGenerator@CvDllGameContext@@UAGIXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateRandomNumberGenerator@CvDllGameContext@@UAGIXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvdllcontext.cpp
xdata$x	ENDS
;	COMDAT ?CreateRandomNumberGenerator@CvDllGameContext@@UAGIXZ
_TEXT	SEGMENT
_entry$ = -20						; size = 8
__$EHRec$ = -12						; size = 12
$T238288 = 8						; size = 4
_this$ = 8						; size = 4
?CreateRandomNumberGenerator@CvDllGameContext@@UAGIXZ PROC ; CvDllGameContext::CreateRandomNumberGenerator, COMDAT

; 1213 : {

	push	-1
	push	__ehhandler$?CreateRandomNumberGenerator@CvDllGameContext@@UAGIXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	esi
	push	edi

; 1214 : 	uint index = m_uiRngCounter++;

	mov	edi, DWORD PTR _this$[esp+24]
	mov	esi, DWORD PTR [edi+36]
	lea	eax, DWORD PTR [esi+1]

; 1215 : 	std::pair<uint, CvRandom*> entry(index, FNEW(CvRandom, c_eCiv5GameplayDLL, 0));

	push	20					; 00000014H
	mov	DWORD PTR [edi+36], eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T238288[esp+24], eax
	mov	DWORD PTR __$EHRec$[esp+36], 0
	test	eax, eax
	je	SHORT $LN3@CreateRand
	mov	ecx, eax
	call	??0CvRandom@@QAE@XZ			; CvRandom::CvRandom
	jmp	SHORT $LN4@CreateRand
$LN3@CreateRand:
	xor	eax, eax
$LN4@CreateRand:

; 1216 : 
; 1217 : 	m_RandomNumberGenerators.push_back(entry);

	lea	ecx, DWORD PTR _entry$[esp+28]
	push	ecx
	lea	ecx, DWORD PTR [edi+20]
	mov	DWORD PTR __$EHRec$[esp+40], -1
	mov	DWORD PTR _entry$[esp+32], esi
	mov	DWORD PTR _entry$[esp+36], eax
	call	?push_back@?$vector@U?$pair@IPAVCvRandom@@@std@@V?$allocator@U?$pair@IPAVCvRandom@@@std@@@2@@std@@QAEXABU?$pair@IPAVCvRandom@@@2@@Z ; std::vector<std::pair<unsigned int,CvRandom *>,std::allocator<std::pair<unsigned int,CvRandom *> > >::push_back

; 1218 : 	return index;
; 1219 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	pop	edi
	mov	eax, esi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 20					; 00000014H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateRandomNumberGenerator@CvDllGameContext@@UAGIXZ$0:
	mov	eax, DWORD PTR $T238288[ebp-4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?CreateRandomNumberGenerator@CvDllGameContext@@UAGIXZ:
	mov	eax, OFFSET __ehfuncinfo$?CreateRandomNumberGenerator@CvDllGameContext@@UAGIXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?CreateRandomNumberGenerator@CvDllGameContext@@UAGIXZ ENDP ; CvDllGameContext::CreateRandomNumberGenerator
EXTRN	??0CvDllNetInitInfo@@QAE@XZ:PROC		; CvDllNetInitInfo::CvDllNetInitInfo
EXTRN	??2CvDllNetInitInfo@@SAPAXI@Z:PROC		; CvDllNetInitInfo::operator new
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$?CreateNetInitInfo@CvDllGameContext@@UAGIXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateNetInitInfo@CvDllGameContext@@UAGIXZ$0
__ehfuncinfo$?CreateNetInitInfo@CvDllGameContext@@UAGIXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateNetInitInfo@CvDllGameContext@@UAGIXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvdllcontext.cpp
xdata$x	ENDS
;	COMDAT ?CreateNetInitInfo@CvDllGameContext@@UAGIXZ
_TEXT	SEGMENT
_entry$ = -20						; size = 8
__$EHRec$ = -12						; size = 12
$T238306 = 8						; size = 4
_this$ = 8						; size = 4
?CreateNetInitInfo@CvDllGameContext@@UAGIXZ PROC	; CvDllGameContext::CreateNetInitInfo, COMDAT

; 1251 : {

	push	-1
	push	__ehhandler$?CreateNetInitInfo@CvDllGameContext@@UAGIXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	esi
	push	edi

; 1252 : 	uint index = m_uiNetInitInfoCounter++;

	mov	edi, DWORD PTR _this$[esp+24]
	mov	esi, DWORD PTR [edi+56]
	lea	eax, DWORD PTR [esi+1]

; 1253 : 	std::pair<uint, CvDllNetInitInfo*> entry(index, new CvDllNetInitInfo());

	push	764					; 000002fcH
	mov	DWORD PTR [edi+56], eax
	call	??2CvDllNetInitInfo@@SAPAXI@Z		; CvDllNetInitInfo::operator new
	add	esp, 4
	mov	DWORD PTR $T238306[esp+24], eax
	mov	DWORD PTR __$EHRec$[esp+36], 0
	test	eax, eax
	je	SHORT $LN3@CreateNetI
	mov	ecx, eax
	call	??0CvDllNetInitInfo@@QAE@XZ		; CvDllNetInitInfo::CvDllNetInitInfo
	jmp	SHORT $LN4@CreateNetI
$LN3@CreateNetI:
	xor	eax, eax
$LN4@CreateNetI:

; 1254 : 
; 1255 : 	m_NetInitInfos.push_back(entry);

	lea	ecx, DWORD PTR _entry$[esp+28]
	push	ecx
	lea	ecx, DWORD PTR [edi+40]
	mov	DWORD PTR __$EHRec$[esp+40], -1
	mov	DWORD PTR _entry$[esp+32], esi
	mov	DWORD PTR _entry$[esp+36], eax
	call	?push_back@?$vector@U?$pair@IPAVCvDllNetInitInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetInitInfo@@@std@@@2@@std@@QAEXABU?$pair@IPAVCvDllNetInitInfo@@@2@@Z ; std::vector<std::pair<unsigned int,CvDllNetInitInfo *>,std::allocator<std::pair<unsigned int,CvDllNetInitInfo *> > >::push_back

; 1256 : 	return index;
; 1257 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	pop	edi
	mov	eax, esi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 20					; 00000014H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateNetInitInfo@CvDllGameContext@@UAGIXZ$0:
	mov	eax, DWORD PTR $T238306[ebp-4]
	push	eax
	call	??3CvDllNetInitInfo@@SAXPAX@Z		; CvDllNetInitInfo::operator delete
	pop	ecx
	ret	0
__ehhandler$?CreateNetInitInfo@CvDllGameContext@@UAGIXZ:
	mov	eax, OFFSET __ehfuncinfo$?CreateNetInitInfo@CvDllGameContext@@UAGIXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?CreateNetInitInfo@CvDllGameContext@@UAGIXZ ENDP	; CvDllGameContext::CreateNetInitInfo
EXTRN	??0CvDllNetLoadGameInfo@@QAE@XZ:PROC		; CvDllNetLoadGameInfo::CvDllNetLoadGameInfo
EXTRN	??2CvDllNetLoadGameInfo@@SAPAXI@Z:PROC		; CvDllNetLoadGameInfo::operator new
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$?CreateNetLoadGameInfo@CvDllGameContext@@UAGIXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateNetLoadGameInfo@CvDllGameContext@@UAGIXZ$0
__ehfuncinfo$?CreateNetLoadGameInfo@CvDllGameContext@@UAGIXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateNetLoadGameInfo@CvDllGameContext@@UAGIXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvdllcontext.cpp
xdata$x	ENDS
;	COMDAT ?CreateNetLoadGameInfo@CvDllGameContext@@UAGIXZ
_TEXT	SEGMENT
_entry$ = -20						; size = 8
__$EHRec$ = -12						; size = 12
$T238324 = 8						; size = 4
_this$ = 8						; size = 4
?CreateNetLoadGameInfo@CvDllGameContext@@UAGIXZ PROC	; CvDllGameContext::CreateNetLoadGameInfo, COMDAT

; 1292 : {

	push	-1
	push	__ehhandler$?CreateNetLoadGameInfo@CvDllGameContext@@UAGIXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	esi
	push	edi

; 1293 : 	uint index = m_uiNetLoadGameInfoCounter++;

	mov	edi, DWORD PTR _this$[esp+24]
	mov	esi, DWORD PTR [edi+76]
	lea	eax, DWORD PTR [esi+1]

; 1294 : 	std::pair<uint, CvDllNetLoadGameInfo*> entry(index, new CvDllNetLoadGameInfo());

	push	24					; 00000018H
	mov	DWORD PTR [edi+76], eax
	call	??2CvDllNetLoadGameInfo@@SAPAXI@Z	; CvDllNetLoadGameInfo::operator new
	add	esp, 4
	mov	DWORD PTR $T238324[esp+24], eax
	mov	DWORD PTR __$EHRec$[esp+36], 0
	test	eax, eax
	je	SHORT $LN3@CreateNetL
	mov	ecx, eax
	call	??0CvDllNetLoadGameInfo@@QAE@XZ		; CvDllNetLoadGameInfo::CvDllNetLoadGameInfo
	jmp	SHORT $LN4@CreateNetL
$LN3@CreateNetL:
	xor	eax, eax
$LN4@CreateNetL:

; 1295 : 
; 1296 : 	m_NetLoadGameInfos.push_back(entry);

	lea	ecx, DWORD PTR _entry$[esp+28]
	push	ecx
	lea	ecx, DWORD PTR [edi+60]
	mov	DWORD PTR __$EHRec$[esp+40], -1
	mov	DWORD PTR _entry$[esp+32], esi
	mov	DWORD PTR _entry$[esp+36], eax
	call	?push_back@?$vector@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@V?$allocator@U?$pair@IPAVCvDllNetLoadGameInfo@@@std@@@2@@std@@QAEXABU?$pair@IPAVCvDllNetLoadGameInfo@@@2@@Z ; std::vector<std::pair<unsigned int,CvDllNetLoadGameInfo *>,std::allocator<std::pair<unsigned int,CvDllNetLoadGameInfo *> > >::push_back

; 1297 : 	return index;
; 1298 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	pop	edi
	mov	eax, esi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 20					; 00000014H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateNetLoadGameInfo@CvDllGameContext@@UAGIXZ$0:
	mov	eax, DWORD PTR $T238324[ebp-4]
	push	eax
	call	??3CvDllNetLoadGameInfo@@SAXPAX@Z	; CvDllNetLoadGameInfo::operator delete
	pop	ecx
	ret	0
__ehhandler$?CreateNetLoadGameInfo@CvDllGameContext@@UAGIXZ:
	mov	eax, OFFSET __ehfuncinfo$?CreateNetLoadGameInfo@CvDllGameContext@@UAGIXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?CreateNetLoadGameInfo@CvDllGameContext@@UAGIXZ ENDP	; CvDllGameContext::CreateNetLoadGameInfo
EXTRN	??3CvDllPathFinderUpdateList@@SAXPAX@Z:PROC	; CvDllPathFinderUpdateList::operator delete
EXTRN	??0CvDllPathFinderUpdateList@@QAE@ABV?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@@Z:PROC ; CvDllPathFinderUpdateList::CvDllPathFinderUpdateList
EXTRN	??2CvDllPathFinderUpdateList@@SAPAXI@Z:PROC	; CvDllPathFinderUpdateList::operator new
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$?TEMPCalculatePathFinderUpdates@CvDllGameContext@@UAGPAVICvEnumerator@@PAVICvUnit1@@HH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?TEMPCalculatePathFinderUpdates@CvDllGameContext@@UAGPAVICvEnumerator@@PAVICvUnit1@@HH@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?TEMPCalculatePathFinderUpdates@CvDllGameContext@@UAGPAVICvEnumerator@@PAVICvUnit1@@HH@Z$1
__ehfuncinfo$?TEMPCalculatePathFinderUpdates@CvDllGameContext@@UAGPAVICvEnumerator@@PAVICvUnit1@@HH@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?TEMPCalculatePathFinderUpdates@CvDllGameContext@@UAGPAVICvEnumerator@@PAVICvUnit1@@HH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvdllcontext.cpp
xdata$x	ENDS
;	COMDAT ?TEMPCalculatePathFinderUpdates@CvDllGameContext@@UAGPAVICvEnumerator@@PAVICvUnit1@@HH@Z
_TEXT	SEGMENT
_update$224249 = -40					; size = 12
_pUpdateData$224244 = -28				; size = 16
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
$T238556 = 12						; size = 1
$T238344 = 12						; size = 4
_pHeadSelectedUnit$ = 12				; size = 4
_iMouseMapX$ = 16					; size = 4
_iMouseMapY$ = 20					; size = 4
?TEMPCalculatePathFinderUpdates@CvDllGameContext@@UAGPAVICvEnumerator@@PAVICvUnit1@@HH@Z PROC ; CvDllGameContext::TEMPCalculatePathFinderUpdates, COMDAT

; 1384 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?TEMPCalculatePathFinderUpdates@CvDllGameContext@@UAGPAVICvEnumerator@@PAVICvUnit1@@HH@Z
	push	eax
	mov	DWORD PTR fs:0, esp

; 1385 : 	CvUnit* pkUnit = GC.UnwrapUnitPointer(pHeadSelectedUnit);

	mov	eax, DWORD PTR _pHeadSelectedUnit$[esp+8]
	sub	esp, 28					; 0000001cH
	push	ebx
	push	esi
	push	edi
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?UnwrapUnitPointer@CvGlobals@@QAEPAVCvUnit@@PAVICvUnit1@@@Z ; CvGlobals::UnwrapUnitPointer

; 1386 : 	CvTwoLayerPathFinder& thePathfinder = GC.getInterfacePathFinder();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	edi, eax
	call	?getInterfacePathFinder@CvGlobals@@QAEAAVCvTwoLayerPathFinder@@XZ ; CvGlobals::getInterfacePathFinder
	mov	esi, eax

; 1387 : 
; 1388 : 	thePathfinder.SetData(pkUnit);

	xor	ebx, ebx
	cmp	BYTE PTR [esi+80], bl
	je	SHORT $LN12@TEMPCalcul
	cmp	DWORD PTR [esi+44], edi
	je	SHORT $LN12@TEMPCalcul
	mov	BYTE PTR [esi+78], 1
$LN12@TEMPCalcul:

; 1389 : 	if(thePathfinder.GeneratePath(pkUnit->getX(), pkUnit->getY(), iMouseMapX, iMouseMapY, MOVE_DECLARE_WAR, false))

	mov	edx, DWORD PTR _iMouseMapY$[esp+48]
	push	ebx
	push	32					; 00000020H
	push	edx
	mov	edx, DWORD PTR _iMouseMapX$[esp+60]
	mov	DWORD PTR [esi+44], edi
	mov	eax, DWORD PTR [edi+88]
	mov	ecx, DWORD PTR [edi+76]
	push	edx
	push	eax
	push	ecx
	mov	ecx, esi
	call	?GeneratePath@CvAStar@@QAE_NHHHHH_N@Z	; CvAStar::GeneratePath
	test	al, al
	je	$LN5@TEMPCalcul

; 1390 : 	{
; 1391 : 		// seed the pathfinder with a unit
; 1392 : 		thePathfinder.SetData(pkUnit);

	cmp	BYTE PTR [esi+80], bl
	je	SHORT $LN23@TEMPCalcul
	cmp	DWORD PTR [esi+44], edi
	je	SHORT $LN23@TEMPCalcul
	mov	BYTE PTR [esi+78], 1
$LN23@TEMPCalcul:
	mov	DWORD PTR [esi+44], edi

; 1393 : 
; 1394 : 		//get the number of waypoints on the path
; 1395 : 		CvAStarNode* lastNode = thePathfinder.GetLastNode();

	mov	esi, DWORD PTR [esi+96]

; 1396 : 		CvAStarNode* pathNode = lastNode;
; 1397 : 
; 1398 : #ifndef AUI_WARNING_FIXES
; 1399 : 		pathNode = lastNode;
; 1400 : #endif
; 1401 : 		int size = 0;

	xor	ecx, ecx
	mov	eax, esi

; 1402 : 		while(pathNode != NULL)

	cmp	esi, ebx
	je	SHORT $LN3@TEMPCalcul
	npad	5
$LL4@TEMPCalcul:

; 1403 : 		{
; 1404 : 			size++;
; 1405 : 			pathNode = pathNode->m_pParent;

	mov	eax, DWORD PTR [eax+24]
	inc	ecx
	cmp	eax, ebx
	jne	SHORT $LL4@TEMPCalcul
$LN3@TEMPCalcul:

; 1406 : 		}
; 1407 : 
; 1408 : 
; 1409 : 		std::vector<CvDllPathFinderUpdateListData> pUpdateData;

	mov	DWORD PTR _pUpdateData$224244[esp+56], ebx
	mov	DWORD PTR _pUpdateData$224244[esp+60], ebx
	mov	DWORD PTR _pUpdateData$224244[esp+64], ebx

; 1410 : 
; 1411 : 		pUpdateData.reserve(size);

	push	ecx
	lea	ecx, DWORD PTR _pUpdateData$224244[esp+56]
	mov	DWORD PTR __$EHRec$[esp+64], ebx
	call	?reserve@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAEXI@Z ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::reserve

; 1412 : 
; 1413 : 		// now fill out the event array in reverse order
; 1414 : 		pathNode = lastNode;
; 1415 : 		int index = 0;
; 1416 : 		while(pathNode != NULL)

	cmp	esi, ebx
	je	SHORT $LN1@TEMPCalcul
	npad	10
$LL2@TEMPCalcul:

; 1417 : 		{
; 1418 : 			CvDllPathFinderUpdateListData update;
; 1419 : 			update.iX = pathNode->m_iX;

	movsx	eax, WORD PTR [esi+80]

; 1420 : 			update.iY = pathNode->m_iY;

	movsx	ecx, WORD PTR [esi+82]

; 1421 : 			update.iTurnNumber = pathNode->m_iData2;

	mov	edx, DWORD PTR [esi+16]
	mov	DWORD PTR _update$224249[esp+52], eax

; 1422 : 
; 1423 : 			pUpdateData.push_back(update);

	lea	eax, DWORD PTR _update$224249[esp+52]
	mov	DWORD PTR _update$224249[esp+56], ecx
	push	eax
	lea	ecx, DWORD PTR _pUpdateData$224244[esp+56]
	mov	DWORD PTR _update$224249[esp+64], edx
	call	?push_back@?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAEXABUCvDllPathFinderUpdateListData@@@Z ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::push_back

; 1424 : 
; 1425 : 			index++;
; 1426 : 			pathNode = pathNode->m_pParent;

	mov	esi, DWORD PTR [esi+24]
	cmp	esi, ebx
	jne	SHORT $LL2@TEMPCalcul
$LN1@TEMPCalcul:

; 1427 : 		}
; 1428 : 
; 1429 : 		std::reverse(pUpdateData.begin(), pUpdateData.end());

	mov	ecx, DWORD PTR $T238556[esp+48]
	mov	edx, DWORD PTR _pUpdateData$224244[esp+60]
	mov	eax, DWORD PTR _pUpdateData$224244[esp+56]
	push	ecx
	push	edx
	push	eax
	call	??$_Reverse@V?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@@std@@YAXV?$_Vector_iterator@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@0@0Urandom_access_iterator_tag@0@@Z ; std::_Reverse<std::_Vector_iterator<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> > >

; 1430 : 		return new CvDllPathFinderUpdateList(pUpdateData);

	push	28					; 0000001cH
	call	??2CvDllPathFinderUpdateList@@SAPAXI@Z	; CvDllPathFinderUpdateList::operator new
	add	esp, 16					; 00000010H
	mov	DWORD PTR $T238344[esp+48], eax
	mov	BYTE PTR __$EHRec$[esp+60], 1
	cmp	eax, ebx
	je	SHORT $LN8@TEMPCalcul
	lea	ecx, DWORD PTR _pUpdateData$224244[esp+52]
	push	ecx
	mov	ecx, eax
	call	??0CvDllPathFinderUpdateList@@QAE@ABV?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@@Z ; CvDllPathFinderUpdateList::CvDllPathFinderUpdateList
	mov	esi, eax
	jmp	SHORT $LN9@TEMPCalcul
$LN8@TEMPCalcul:
	xor	esi, esi
$LN9@TEMPCalcul:
	mov	eax, DWORD PTR _pUpdateData$224244[esp+56]
	cmp	eax, ebx
	je	SHORT $LN86@TEMPCalcul
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN86@TEMPCalcul:
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx

; 1431 : 	}
; 1432 : 
; 1433 : 	return NULL;
; 1434 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+40]
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	16					; 00000010H
$LN5@TEMPCalcul:
	mov	ecx, DWORD PTR __$EHRec$[esp+52]
	pop	edi
	pop	esi
	xor	eax, eax
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?TEMPCalculatePathFinderUpdates@CvDllGameContext@@UAGPAVICvEnumerator@@PAVICvUnit1@@HH@Z$0:
	lea	ecx, DWORD PTR _pUpdateData$224244[ebp]
	jmp	??1?$vector@UCvDllPathFinderUpdateListData@@V?$allocator@UCvDllPathFinderUpdateListData@@@std@@@std@@QAE@XZ ; std::vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >::~vector<CvDllPathFinderUpdateListData,std::allocator<CvDllPathFinderUpdateListData> >
__unwindfunclet$?TEMPCalculatePathFinderUpdates@CvDllGameContext@@UAGPAVICvEnumerator@@PAVICvUnit1@@HH@Z$1:
	mov	eax, DWORD PTR $T238344[ebp-4]
	push	eax
	call	??3CvDllPathFinderUpdateList@@SAXPAX@Z	; CvDllPathFinderUpdateList::operator delete
	pop	ecx
	ret	0
__ehhandler$?TEMPCalculatePathFinderUpdates@CvDllGameContext@@UAGPAVICvEnumerator@@PAVICvUnit1@@HH@Z:
	mov	eax, OFFSET __ehfuncinfo$?TEMPCalculatePathFinderUpdates@CvDllGameContext@@UAGPAVICvEnumerator@@PAVICvUnit1@@HH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?TEMPCalculatePathFinderUpdates@CvDllGameContext@@UAGPAVICvEnumerator@@PAVICvUnit1@@HH@Z ENDP ; CvDllGameContext::TEMPCalculatePathFinderUpdates
END
