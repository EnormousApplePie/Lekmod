; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	s:\Github\Lekmod\LEKMOD_DLL\CvGameCoreDLL_Expansion2\Lua\CvLuaGame.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG221568 DB	'Game', 00H
	ORG $+3
$SG221576 DB	'CanHandleAction', 00H
$SG221577 DB	'HandleAction', 00H
	ORG $+3
$SG221578 DB	'UpdateScore', 00H
$SG221579 DB	'CycleCities', 00H
$SG221580 DB	'CycleUnits', 00H
	ORG $+1
$SG221581 DB	'CyclePlotUnits', 00H
	ORG $+1
$SG221582 DB	'SelectionListMove', 00H
	ORG $+2
$SG221583 DB	'SelectionListGameNetMessage', 00H
$SG221584 DB	'SelectedCitiesGameNetMessage', 00H
	ORG $+3
$SG221585 DB	'CityPushOrder', 00H
	ORG $+2
$SG221586 DB	'CityPurchaseUnit', 00H
	ORG $+3
$SG221587 DB	'CityPurchaseBuilding', 00H
	ORG $+3
$SG221588 DB	'CityPurchaseProject', 00H
$SG221589 DB	'GetProductionPerPopulation', 00H
	ORG $+1
$SG221590 DB	'GetAdjustedPopulationPercent', 00H
	ORG $+3
$SG221591 DB	'GetAdjustedLandPercent', 00H
	ORG $+1
$SG221592 DB	'GetUnitedNationsCountdown', 00H
	ORG $+2
$SG221593 DB	'SetUnitedNationsCountdown', 00H
	ORG $+2
$SG221594 DB	'CountCivPlayersAlive', 00H
	ORG $+3
$SG221595 DB	'CountCivPlayersEverAlive', 00H
	ORG $+3
$SG221596 DB	'CountCivTeamsAlive', 00H
	ORG $+1
$SG221597 DB	'CountCivTeamsEverAlive', 00H
	ORG $+1
$SG221598 DB	'CountHumanPlayersAlive', 00H
	ORG $+1
$SG221599 DB	'CountHumanPlayersEverAlive', 00H
	ORG $+1
$SG221600 DB	'CountTotalCivPower', 00H
	ORG $+1
$SG221601 DB	'CountTotalNukeUnits', 00H
$SG221602 DB	'CountKnownTechNumTeams', 00H
	ORG $+1
$SG221603 DB	'GoldenAgeLength', 00H
$SG221604 DB	'VictoryDelay', 00H
	ORG $+3
$SG221605 DB	'GetImprovementUpgradeTime', 00H
	ORG $+2
$SG221606 DB	'CanTrainNukes', 00H
	ORG $+2
$SG221607 DB	'GetCurrentEra', 00H
	ORG $+2
$SG221608 DB	'GetDiploResponse', 00H
	ORG $+3
$SG221609 DB	'GetActiveTeam', 00H
	ORG $+2
$SG221610 DB	'GetActiveCivilizationType', 00H
	ORG $+2
$SG221611 DB	'IsNetworkMultiPlayer', 00H
	ORG $+3
$SG221612 DB	'IsGameMultiPlayer', 00H
	ORG $+2
$SG221613 DB	'IsTeamGame', 00H
	ORG $+1
$SG221614 DB	'ReviveActivePlayer', 00H
	ORG $+1
$SG221615 DB	'GetNumHumanPlayers', 00H
	ORG $+1
$SG221616 DB	'GetNumSequentialHumans', 00H
	ORG $+1
$SG221617 DB	'GetGameTurn', 00H
$SG221618 DB	'SetGameTurn', 00H
$SG221619 DB	'GetTurnYear', 00H
$SG221620 DB	'GetGameTurnYear', 00H
$SG221621 DB	'GetTurnString', 00H
	ORG $+2
$SG221622 DB	'GetElapsedGameTurns', 00H
$SG221623 DB	'GetMaxTurns', 00H
$SG221624 DB	'SetMaxTurns', 00H
$SG221625 DB	'ChangeMaxTurns', 00H
	ORG $+1
$SG221626 DB	'GetMaxCityElimination', 00H
	ORG $+2
$SG221627 DB	'SetMaxCityElimination', 00H
	ORG $+2
$SG221628 DB	'GetNumAdvancedStartPoints', 00H
	ORG $+2
$SG221629 DB	'SetNumAdvancedStartPoints', 00H
	ORG $+2
$SG221630 DB	'GetStartTurn', 00H
	ORG $+3
$SG221631 DB	'GetWinningTurn', 00H
	ORG $+1
$SG221632 DB	'GetStartYear', 00H
	ORG $+3
$SG221633 DB	'SetStartYear', 00H
	ORG $+3
$SG221634 DB	'GetEstimateEndTurn', 00H
	ORG $+1
$SG221635 DB	'SetEstimateEndTurn', 00H
	ORG $+1
$SG221636 DB	'GetTurnSlice', 00H
	ORG $+3
$SG221637 DB	'GetMinutesPlayed', 00H
	ORG $+3
$SG221638 DB	'GetTargetScore', 00H
	ORG $+1
$SG221639 DB	'SetTargetScore', 00H
	ORG $+1
$SG221640 DB	'IsStaticTutorialActive', 00H
	ORG $+1
$SG221641 DB	'SetStaticTutorialActive', 00H
$SG221642 DB	'IsEverRightClickMoved', 00H
	ORG $+2
$SG221643 DB	'SetEverRightClickMoved', 00H
	ORG $+1
$SG221644 DB	'IsTutorialLogging', 00H
	ORG $+2
$SG221645 DB	'IsTutorialDebugging', 00H
$SG221646 DB	'GetTutorialLevel', 00H
	ORG $+3
$SG221647 DB	'HasAdvisorMessageBeenSeen', 00H
	ORG $+2
$SG221648 DB	'SetAdvisorMessageHasBeenSeen', 00H
	ORG $+3
$SG221649 DB	'SetAdvisorBadAttackInterrupt', 00H
	ORG $+3
$SG221650 DB	'SetAdvisorCityAttackInterrupt', 00H
	ORG $+2
$SG221651 DB	'GetAllowRClickMovementWhileScrolling', 00H
	ORG $+3
$SG221652 DB	'GetNumGameTurnActive', 00H
	ORG $+3
$SG221653 DB	'CountNumHumanGameTurnActive', 00H
$SG221654 DB	'GetNumCities', 00H
	ORG $+3
$SG221655 DB	'GetNumCivCities', 00H
$SG221656 DB	'GetTotalPopulation', 00H
	ORG $+1
$SG221657 DB	'GetNoNukesCount', 00H
$SG221658 DB	'IsNoNukes', 00H
	ORG $+2
$SG221659 DB	'ChangeNoNukesCount', 00H
	ORG $+1
$SG221660 DB	'GetNukesExploded', 00H
	ORG $+3
$SG221661 DB	'ChangeNukesExploded', 00H
$SG221662 DB	'GetMaxPopulation', 00H
	ORG $+3
$SG221663 DB	'GetInitPopulation', 00H
	ORG $+2
$SG221664 DB	'GetInitLand', 00H
$SG221665 DB	'GetInitTech', 00H
$SG221666 DB	'GetInitWonders', 00H
	ORG $+1
$SG221667 DB	'GetNumWorldWonders', 00H
	ORG $+1
$SG221668 DB	'GetAIAutoPlay', 00H
	ORG $+2
$SG221669 DB	'SetAIAutoPlay', 00H
	ORG $+2
$SG221670 DB	'IsScoreDirty', 00H
	ORG $+3
$SG221671 DB	'SetScoreDirty', 00H
	ORG $+2
$SG221672 DB	'IsCircumnavigated', 00H
	ORG $+2
$SG221673 DB	'MakeCircumnavigated', 00H
$SG221674 DB	'DoFromUIDiploEvent', 00H
	ORG $+1
$SG221675 DB	'IsDebugMode', 00H
$SG221676 DB	'SetDebugMode', 00H
	ORG $+3
$SG221677 DB	'ToggleDebugMode', 00H
$SG221678 DB	'UpdateFOW', 00H
	ORG $+2
$SG221679 DB	'GetPitbossTurnTime', 00H
	ORG $+1
$SG221680 DB	'SetPitbossTurnTime', 00H
	ORG $+1
$SG221681 DB	'IsHotSeat', 00H
	ORG $+2
$SG221682 DB	'IsPbem', 00H
	ORG $+1
$SG221683 DB	'IsPitboss', 00H
	ORG $+2
$SG221684 DB	'IsSimultaneousTeamTurns', 00H
$SG221685 DB	'IsFinalInitialized', 00H
	ORG $+1
$SG221686 DB	'GetActivePlayer', 00H
$SG221687 DB	'SetActivePlayer', 00H
$SG221688 DB	'GetPausePlayer', 00H
	ORG $+1
$SG221689 DB	'SetPausePlayer', 00H
	ORG $+1
$SG221690 DB	'IsPaused', 00H
	ORG $+3
$SG221691 DB	'GetBestLandUnit', 00H
$SG221692 DB	'GetBestLandUnitCombat', 00H
	ORG $+2
$SG221693 DB	'GetFaithCost', 00H
	ORG $+3
$SG221694 DB	'GetWinner', 00H
	ORG $+2
$SG221695 DB	'GetVictory', 00H
	ORG $+1
$SG221696 DB	'SetWinner', 00H
	ORG $+2
$SG221697 DB	'GetGameState', 00H
	ORG $+3
$SG221698 DB	'SetGameState', 00H
	ORG $+3
$SG221699 DB	'GetVotesNeededForDiploVictory', 00H
	ORG $+2
$SG221700 DB	'IsUnitedNationsActive', 00H
	ORG $+2
$SG221701 DB	'GetNumVictoryVotesTallied', 00H
	ORG $+2
$SG221702 DB	'GetVoteCast', 00H
$SG221703 DB	'GetPreviousVoteCast', 00H
$SG221704 DB	'GetNumVotesForTeam', 00H
	ORG $+1
$SG221705 DB	'SetNumVotesForTeam', 00H
	ORG $+1
$SG221706 DB	'ChangeNumVotesForTeam', 00H
	ORG $+2
$SG221707 DB	'GetHandicapType', 00H
$SG221708 DB	'GetCalendar', 00H
$SG221709 DB	'GetStartEra', 00H
$SG221710 DB	'GetGameSpeedType', 00H
	ORG $+3
$SG221711 DB	'GetRankPlayer', 00H
	ORG $+2
$SG221712 DB	'GetPlayerRank', 00H
	ORG $+2
$SG221713 DB	'GetPlayerScore', 00H
	ORG $+1
$SG221714 DB	'GetRankTeam', 00H
$SG221715 DB	'GetTeamRank', 00H
$SG221716 DB	'GetTeamScore', 00H
	ORG $+3
$SG221717 DB	'IsOption', 00H
	ORG $+3
$SG221718 DB	'SetOption', 00H
	ORG $+2
$SG221719 DB	'IsMPOption', 00H
	ORG $+1
$SG221720 DB	'GetUnitCreatedCount', 00H
$SG221721 DB	'GetUnitClassCreatedCount', 00H
	ORG $+3
$SG221722 DB	'IsUnitClassMaxedOut', 00H
$SG221723 DB	'GetBuildingClassCreatedCount', 00H
	ORG $+3
$SG221724 DB	'IsBuildingClassMaxedOut', 00H
$SG221725 DB	'GetProjectCreatedCount', 00H
	ORG $+1
$SG221726 DB	'IsProjectMaxedOut', 00H
	ORG $+2
$SG221727 DB	'IsVictoryValid', 00H
	ORG $+1
$SG221728 DB	'SetVictoryValid', 00H
$SG221729 DB	'IsSpecialUnitValid', 00H
	ORG $+1
$SG221730 DB	'MakeSpecialUnitValid', 00H
	ORG $+3
$SG221731 DB	'IsNukesValid', 00H
	ORG $+3
$SG221732 DB	'MakeNukesValid', 00H
	ORG $+1
$SG221733 DB	'IsInAdvancedStart', 00H
	ORG $+2
$SG221734 DB	'SetName', 00H
$SG221735 DB	'GetName', 00H
$SG221736 DB	'Rand', 00H
	ORG $+3
$SG221737 DB	'CalculateSyncChecksum', 00H
	ORG $+2
$SG221738 DB	'CalculateOptionsChecksum', 00H
	ORG $+3
$SG221739 DB	'GetReplayMessage', 00H
	ORG $+3
$SG221740 DB	'GetReplayMessages', 00H
	ORG $+2
$SG221741 DB	'GetNumReplayMessages', 00H
	ORG $+3
$SG221742 DB	'GetReplayInfo', 00H
	ORG $+2
$SG221743 DB	'SaveReplay', 00H
	ORG $+1
$SG221744 DB	'AddPlayer', 00H
	ORG $+2
$SG221745 DB	'SetPlotExtraYield', 00H
	ORG $+2
$SG221746 DB	'ChangePlotExtraCost', 00H
$SG221747 DB	'IsCivEverActive', 00H
$SG221748 DB	'IsLeaderEverActive', 00H
	ORG $+1
$SG221749 DB	'IsUnitEverActive', 00H
	ORG $+3
$SG221750 DB	'IsBuildingEverActive', 00H
	ORG $+3
$SG221751 DB	'CanDoControl', 00H
	ORG $+3
$SG221752 DB	'DoControl', 00H
	ORG $+2
$SG221753 DB	'DoMinorPledgeProtection', 00H
$SG221754 DB	'DoMinorGoldGift', 00H
$SG221755 DB	'DoMinorGiftGold', 00H
$SG221756 DB	'DoMinorGiftTileImprovement', 00H
	ORG $+1
$SG221757 DB	'DoMinorBullyGold', 00H
	ORG $+3
$SG221758 DB	'DoMinorBullyUnit', 00H
	ORG $+3
$SG221759 DB	'DoMinorBuyout', 00H
	ORG $+2
$SG221760 DB	'GetBestWondersPlayer', 00H
	ORG $+3
$SG221761 DB	'GetBestPoliciesPlayer', 00H
	ORG $+2
$SG221762 DB	'GetBestGreatPeoplePlayer', 00H
	ORG $+3
$SG221763 DB	'IsEverAttackedTutorial', 00H
	ORG $+1
$SG221764 DB	'GameplayDiplomacyAILeaderMessage', 00H
	ORG $+3
$SG221765 DB	'GetResourceUsageType', 00H
	ORG $+3
$SG221766 DB	'GetNumResourceRequiredForUnit', 00H
	ORG $+2
$SG221767 DB	'GetNumResourceRequiredForBuilding', 00H
	ORG $+2
$SG221768 DB	'IsCombatWarned', 00H
	ORG $+1
$SG221769 DB	'SetCombatWarned', 00H
$SG221770 DB	'GetAdvisorCounsel', 00H
	ORG $+2
$SG221771 DB	'SetAdvisorRecommenderCity', 00H
	ORG $+2
$SG221772 DB	'IsUnitRecommended', 00H
	ORG $+2
$SG221773 DB	'IsBuildingRecommended', 00H
	ORG $+2
$SG221774 DB	'IsProjectRecommended', 00H
	ORG $+3
$SG221775 DB	'SetAdvisorRecommenderTech', 00H
	ORG $+2
$SG221776 DB	'IsTechRecommended', 00H
	ORG $+2
$SG221777 DB	'GetVariableCitySizeFromPopulation', 00H
	ORG $+2
$SG221778 DB	'GetResearchAgreementCost', 00H
	ORG $+3
$SG221779 DB	'GetCustomOption', 00H
$SG221780 DB	'GetNumCitiesPolicyCostMod', 00H
	ORG $+2
$SG221781 DB	'GetNumCitiesTechCostMod', 00H
$SG221782 DB	'GetBuildingYieldChange', 00H
	ORG $+1
$SG221783 DB	'GetBuildingYieldModifier', 00H
	ORG $+3
$SG221784 DB	'GetWorldNumCitiesUnhappinessPercent', 00H
$SG221785 DB	'GetDealDuration', 00H
$SG221786 DB	'GetPeaceDuration', 00H
	ORG $+3
$SG221787 DB	'GetUnitUpgradesTo', 00H
	ORG $+2
$SG221788 DB	'GetCombatPrediction', 00H
$SG221789 DB	'GetTimeString', 00H
	ORG $+2
$SG221790 DB	'GetMinimumFaithNextPantheon', 00H
$SG221791 DB	'SetMinimumFaithNextPantheon', 00H
$SG221792 DB	'GetAvailablePantheonBeliefs', 00H
$SG221793 DB	'GetAvailableFounderBeliefs', 00H
	ORG $+1
$SG221794 DB	'GetAvailableFollowerBeliefs', 00H
$SG221795 DB	'GetAvailableEnhancerBeliefs', 00H
$SG221796 DB	'GetAvailableBonusBeliefs', 00H
	ORG $+3
$SG221797 DB	'GetAvailableReformationBeliefs', 00H
	ORG $+1
$SG221798 DB	'GetNumFollowers', 00H
$SG221799 DB	'GetNumCitiesFollowing', 00H
	ORG $+2
$SG221800 DB	'GetBeliefsInReligion', 00H
	ORG $+3
$SG221801 DB	'GetNumReligionsStillToFound', 00H
$SG221802 DB	'GetNumReligionsFounded', 00H
	ORG $+1
$SG221803 DB	'GetHolyCityForReligion', 00H
	ORG $+1
$SG221804 DB	'GetReligionName', 00H
$SG221805 DB	'GetFounderBenefitsReligion', 00H
	ORG $+1
$SG221806 DB	'FoundPantheon', 00H
	ORG $+2
$SG221807 DB	'FoundReligion', 00H
	ORG $+2
$SG221808 DB	'EnhanceReligion', 00H
$SG221809 DB	'SetHolyCity', 00H
$SG221810 DB	'GetFounder', 00H
	ORG $+1
$SG221811 DB	'SetFounder', 00H
	ORG $+1
$SG221812 DB	'GetTurnsBetweenMinorCivElections', 00H
	ORG $+3
$SG221813 DB	'GetTurnsUntilMinorCivElection', 00H
	ORG $+2
$SG221814 DB	'GetNumActiveLeagues', 00H
$SG221815 DB	'GetNumLeaguesEverFounded', 00H
	ORG $+3
$SG221816 DB	'GetLeague', 00H
	ORG $+2
$SG221817 DB	'GetActiveLeague', 00H
$SG221818 DB	'IsProcessingMessages', 00H
	ORG $+3
$SG221819 DB	'GetGreatWorkTooltip', 00H
$SG221820 DB	'GetGreatWorkName', 00H
	ORG $+3
$SG221821 DB	'GetGreatWorkType', 00H
	ORG $+3
$SG221822 DB	'GetGreatWorkClass', 00H
	ORG $+2
$SG221823 DB	'GetGreatWorkArtist', 00H
	ORG $+1
$SG221824 DB	'GetGreatWorkEra', 00H
$SG221825 DB	'GetGreatWorkEraAbbreviation', 00H
$SG221826 DB	'GetGreatWorkEraShort', 00H
	ORG $+3
$SG221827 DB	'GetGreatWorkCreator', 00H
$SG221828 DB	'GetGreatWorkController', 00H
	ORG $+1
$SG221829 DB	'GetGreatWorkCurrentThemingBonus', 00H
$SG221830 DB	'GetArtifactName', 00H
$SG221831 DB	'GetNumFreePolicies', 00H
	ORG $+1
$SG221832 DB	'GetLongestCityConnectionPlots', 00H
	ORG $+2
$SG221833 DB	'SelectedUnit_SpeculativePopupTradeRoute_Display', 00H
$SG221834 DB	'SelectedUnit_SpeculativePopupTradeRoute_Hide', 00H
	ORG $+3
$SG221835 DB	'MouseoverUnit', 00H
	ORG $+2
$SG221836 DB	'GetNumArchaeologySites', 00H
	ORG $+1
$SG221837 DB	'GetNumHiddenArchaeologySites', 00H
	ORG $+3
$SG223565 DB	'NYI', 00H
$SG223588 DB	'Player', 00H
	ORG $+1
$SG223589 DB	'Turn', 00H
	ORG $+3
$SG223590 DB	'Type', 00H
	ORG $+3
$SG223593 DB	'Text', 00H
	ORG $+3
$SG223605 DB	'X', 00H
	ORG $+2
$SG223606 DB	'Y', 00H
	ORG $+2
$SG223607 DB	'Plots', 00H
	ORG $+2
$SG223621 DB	'Player', 00H
	ORG $+1
$SG223622 DB	'Turn', 00H
	ORG $+3
$SG223623 DB	'Type', 00H
	ORG $+3
$SG223626 DB	'Text', 00H
	ORG $+3
$SG223638 DB	'X', 00H
	ORG $+2
$SG223639 DB	'Y', 00H
	ORG $+2
$SG223640 DB	'Plots', 00H
	ORG $+2
$SG223663 DB	'NYI', 00H
$SG224168 DB	'TEMP', 00H
	ORG $+3
$SG224187 DB	'Unit row at ID %d is empty.', 00H
$SG224335 DB	'Unit row at ID %d is empty.', 00H
$SG225305 DB	'CIVILIZATION_ENGLAND', 00H
	ORG $+3
$SG225436 DB	'__instances', 00H
$SG225437 DB	'__mode', 00H
	ORG $+1
$SG225438 DB	'v', 00H
	ORG $+2
$SG225440 DB	'__instances', 00H
$SG225443 DB	'__instance', 00H
	ORG $+1
$SG225444 DB	'__index', 00H
$SG225459 DB	'__instance', 00H
	ORG $+5
$SG225465 DB	'Not a valid instance.  Either the instance is NULL or yo'
	DB	'u used ''.'' instead of '':''.', 00H
	ORG $+1
$SG225494 DB	'__instances', 00H
$SG225495 DB	'__mode', 00H
	ORG $+1
$SG225496 DB	'v', 00H
	ORG $+2
$SG225498 DB	'__instances', 00H
$SG225501 DB	'__instance', 00H
	ORG $+1
$SG225502 DB	'__index', 00H
$SG225517 DB	'__instance', 00H
	ORG $+1
$SG225523 DB	'Not a valid instance.  Either the instance is NULL or yo'
	DB	'u used ''.'' instead of '':''.', 00H
	ORG $+1
$SG225537 DB	'__instance', 00H
	ORG $+1
$SG225543 DB	'Not a valid instance.  Either the instance is NULL or yo'
	DB	'u used ''.'' instead of '':''.', 00H
	ORG $+1
$SG225554 DB	'__instances', 00H
$SG225555 DB	'__mode', 00H
	ORG $+1
$SG225556 DB	'v', 00H
	ORG $+2
$SG225558 DB	'__instances', 00H
$SG225561 DB	'__instance', 00H
	ORG $+1
$SG225562 DB	'__index', 00H
$SG92498 DB	'f2eb1642-3334-4d2c-8db1-08e6aede3532', 00H
	ORG $+3
_CIV5_XP2_SCENARIO2_MODID DD FLAT:$SG92498
$SG92500 DB	'34fb6c19-10dd-4b65-b143-fd00b2c0826f', 00H
	ORG $+3
_CIV5_COMPLETE_SCENARIO1_MODID DD FLAT:$SG92500
CONST	ENDS
EXTRN	_lua_tointeger:PROC
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvluaargtemplates.h
;	COMDAT ??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z PROC	; CvLuaArgs::toValue<int>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 19   : 		return lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 20   : 	}

	ret	0
??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ENDP	; CvLuaArgs::toValue<int>
_TEXT	ENDS
EXTRN	_lua_toboolean:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z PROC	; CvLuaArgs::toValue<bool>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 24   : 		return lua_toboolean(L, idx) != 0;

	push	eax
	push	ecx
	call	_lua_toboolean
	add	esp, 8
	neg	eax
	sbb	eax, eax
	neg	eax

; 25   : 	}

	ret	0
??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ENDP	; CvLuaArgs::toValue<bool>
_TEXT	ENDS
EXTRN	_lua_pushinteger:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z
_TEXT	SEGMENT
??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z PROC	; CvLuaArgs::pushValue<int>, COMDAT
; _L$ = ecx
; _t$ = eax

; 39   : 		lua_pushinteger(L, t);

	push	eax
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 40   : 	}

	ret	0
??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ENDP	; CvLuaArgs::pushValue<int>
_TEXT	ENDS
EXTRN	_lua_pushboolean:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z
_TEXT	SEGMENT
??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z PROC	; CvLuaArgs::pushValue<bool>, COMDAT
; _L$ = ecx
; _t$ = eax

; 45   : 		lua_pushboolean(L, t);

	movzx	eax, al
	push	eax
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 46   : 	}

	ret	0
??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ENDP	; CvLuaArgs::pushValue<bool>
_TEXT	ENDS
PUBLIC	?wrapCoordDifference@@YAHHI_N@Z			; wrapCoordDifference
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvgamecoreutils.h
;	COMDAT ?wrapCoordDifference@@YAHHI_N@Z
_TEXT	SEGMENT
_iDiff$ = 8						; size = 4
_uiRange$ = 12						; size = 4
_bWrap$ = 16						; size = 1
?wrapCoordDifference@@YAHHI_N@Z PROC			; wrapCoordDifference, COMDAT

; 57   : 	if(bWrap)

	cmp	BYTE PTR _bWrap$[esp-4], 0
	mov	eax, DWORD PTR _iDiff$[esp-4]
	je	SHORT $LN5@wrapCoordD

; 58   : 	{
; 59   : 		if(iDiff > (int)(uiRange >> 1))		// Using an unsigned int so we can safely assume that value >> 1 == value / 2

	mov	edx, DWORD PTR _uiRange$[esp-4]
	mov	ecx, edx
	shr	ecx, 1
	cmp	eax, ecx
	jle	SHORT $LN3@wrapCoordD

; 60   : 		{
; 61   : 			return (iDiff - (int)uiRange);

	sub	eax, edx

; 66   : 		}
; 67   : 	}
; 68   : 
; 69   : 	return iDiff;
; 70   : }

	ret	0
$LN3@wrapCoordD:

; 62   : 		}
; 63   : 		else if(iDiff < -(int)(uiRange >> 1))

	neg	ecx
	cmp	eax, ecx
	jge	SHORT $LN5@wrapCoordD

; 64   : 		{
; 65   : 			return (iDiff + (int)uiRange);

	add	eax, edx
$LN5@wrapCoordD:

; 66   : 		}
; 67   : 	}
; 68   : 
; 69   : 	return iDiff;
; 70   : }

	ret	0
?wrapCoordDifference@@YAHHI_N@Z ENDP			; wrapCoordDifference
_TEXT	ENDS
PUBLIC	?xToHexspaceX@@YAHHH@Z				; xToHexspaceX
; Function compile flags: /Ogtpy
;	COMDAT ?xToHexspaceX@@YAHHH@Z
_TEXT	SEGMENT
_iX$ = 8						; size = 4
_iY$ = 12						; size = 4
?xToHexspaceX@@YAHHH@Z PROC				; xToHexspaceX, COMDAT

; 86   : 	return iX - ((iY >= 0) ? (iY>>1) : ((iY - 1)/2));

	mov	ecx, DWORD PTR _iY$[esp-4]
	test	ecx, ecx
	jge	SHORT $LN5@xToHexspac
	lea	eax, DWORD PTR [ecx-1]
	cdq
	sub	eax, edx
	mov	ecx, eax
$LN5@xToHexspac:
	mov	eax, DWORD PTR _iX$[esp-4]
	sar	ecx, 1
	sub	eax, ecx

; 87   : }

	ret	0
?xToHexspaceX@@YAHHH@Z ENDP				; xToHexspaceX
_TEXT	ENDS
PUBLIC	?GetInstanceName@CvLuaGame@@SAPBDXZ		; CvLuaGame::GetInstanceName
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluagame.cpp
;	COMDAT ?GetInstanceName@CvLuaGame@@SAPBDXZ
_TEXT	SEGMENT
?GetInstanceName@CvLuaGame@@SAPBDXZ PROC		; CvLuaGame::GetInstanceName, COMDAT

; 35   : 	return "Game";

	mov	eax, OFFSET $SG221568

; 36   : }

	ret	0
?GetInstanceName@CvLuaGame@@SAPBDXZ ENDP		; CvLuaGame::GetInstanceName
_TEXT	ENDS
PUBLIC	?lIsTutorialLogging@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsTutorialLogging
EXTRN	?GetTutorialLogging@CvGlobals@@QAE_NXZ:PROC	; CvGlobals::GetTutorialLogging
EXTRN	?gGlobals@@3VCvGlobals@@A:BYTE			; gGlobals
; Function compile flags: /Ogtpy
;	COMDAT ?lIsTutorialLogging@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsTutorialLogging@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lIsTutorialLogging, COMDAT

; 878  : 	lua_pushboolean(L, GC.GetTutorialLogging());

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetTutorialLogging@CvGlobals@@QAE_NXZ	; CvGlobals::GetTutorialLogging
	mov	ecx, DWORD PTR _L$[esp-4]
	movzx	eax, al
	push	eax
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 879  : 	return 1;

	mov	eax, 1

; 880  : }

	ret	0
?lIsTutorialLogging@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lIsTutorialLogging
_TEXT	ENDS
PUBLIC	?lIsTutorialDebugging@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsTutorialDebugging
EXTRN	?GetTutorialDebugging@CvGlobals@@QAE_NXZ:PROC	; CvGlobals::GetTutorialDebugging
; Function compile flags: /Ogtpy
;	COMDAT ?lIsTutorialDebugging@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsTutorialDebugging@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lIsTutorialDebugging, COMDAT

; 884  : 	lua_pushboolean(L, GC.GetTutorialDebugging());

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetTutorialDebugging@CvGlobals@@QAE_NXZ ; CvGlobals::GetTutorialDebugging
	mov	ecx, DWORD PTR _L$[esp-4]
	movzx	eax, al
	push	eax
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 885  : 	return 1;

	mov	eax, 1

; 886  : }

	ret	0
?lIsTutorialDebugging@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lIsTutorialDebugging
_TEXT	ENDS
PUBLIC	?lGetAllowRClickMovementWhileScrolling@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetAllowRClickMovementWhileScrolling
EXTRN	?GetAllowRClickMovementWhileScrolling@CvGlobals@@QAE_NXZ:PROC ; CvGlobals::GetAllowRClickMovementWhileScrolling
; Function compile flags: /Ogtpy
;	COMDAT ?lGetAllowRClickMovementWhileScrolling@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetAllowRClickMovementWhileScrolling@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetAllowRClickMovementWhileScrolling, COMDAT

; 928  : 	lua_pushboolean(L, GC.GetAllowRClickMovementWhileScrolling());

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetAllowRClickMovementWhileScrolling@CvGlobals@@QAE_NXZ ; CvGlobals::GetAllowRClickMovementWhileScrolling
	mov	ecx, DWORD PTR _L$[esp-4]
	movzx	eax, al
	push	eax
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 929  : 	return 1;

	mov	eax, 1

; 930  : }

	ret	0
?lGetAllowRClickMovementWhileScrolling@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetAllowRClickMovementWhileScrolling
_TEXT	ENDS
PUBLIC	?lGetName@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetName
EXTRN	_luaL_error:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?lGetName@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetName@CvLuaGame@@KAHPAUlua_State@@@Z PROC		; CvLuaGame::lGetName, COMDAT

; 1510 : 	luaL_error(L, "NYI");

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET $SG223565
	push	eax
	call	_luaL_error
	add	esp, 8

; 1511 : 	return 0;

	xor	eax, eax

; 1512 : }

	ret	0
?lGetName@CvLuaGame@@KAHPAUlua_State@@@Z ENDP		; CvLuaGame::lGetName
_TEXT	ENDS
PUBLIC	?lGetReplayInfo@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetReplayInfo
; Function compile flags: /Ogtpy
;	COMDAT ?lGetReplayInfo@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetReplayInfo@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetReplayInfo, COMDAT

; 1667 : 	luaL_error(L, "NYI");

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET $SG223663
	push	eax
	call	_luaL_error
	add	esp, 8

; 1668 : 	return 0;

	xor	eax, eax

; 1669 : }

	ret	0
?lGetReplayInfo@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetReplayInfo
_TEXT	ENDS
PUBLIC	?lGetResourceUsageType@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetResourceUsageType
EXTRN	?getResourceUsage@CvResourceInfo@@QBE?AW4ResourceUsageTypes@@XZ:PROC ; CvResourceInfo::getResourceUsage
EXTRN	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z:PROC ; CvGlobals::getResourceInfo
; Function compile flags: /Ogtpy
;	COMDAT ?lGetResourceUsageType@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetResourceUsageType@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetResourceUsageType, COMDAT

; 1826 : {

	push	esi
	push	edi

; 1827 : 	const ResourceTypes eResource = (ResourceTypes) lua_tointeger(L, 1);

	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	mov	esi, eax

; 1828 : 	const CvResourceInfo* pkResourceInfo = GC.getResourceInfo(eResource);

	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z ; CvGlobals::getResourceInfo

; 1829 : 	if (pkResourceInfo)

	test	eax, eax
	je	SHORT $LN2@lGetResour

; 1830 : 	{
; 1831 : 		ResourceUsageTypes eUsage = GC.getResourceInfo(eResource)->getResourceUsage();

	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z ; CvGlobals::getResourceInfo
	mov	ecx, eax
	call	?getResourceUsage@CvResourceInfo@@QBE?AW4ResourceUsageTypes@@XZ ; CvResourceInfo::getResourceUsage

; 1832 : 		lua_pushinteger(L, eUsage);

	push	eax

; 1833 : 	}
; 1834 : 	else
; 1835 : 		lua_pushinteger(L, -1);		// NO_USAGE

	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi

; 1836 : 
; 1837 : 	return 1;

	mov	eax, 1
	pop	esi

; 1838 : }

	ret	0
$LN2@lGetResour:

; 1833 : 	}
; 1834 : 	else
; 1835 : 		lua_pushinteger(L, -1);		// NO_USAGE

	push	-1
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi

; 1836 : 
; 1837 : 	return 1;

	mov	eax, 1
	pop	esi

; 1838 : }

	ret	0
?lGetResourceUsageType@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetResourceUsageType
_TEXT	ENDS
PUBLIC	?lGetNumResourceRequiredForUnit@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumResourceRequiredForUnit
EXTRN	?GetResourceQuantityRequirement@CvUnitEntry@@QBEHH@Z:PROC ; CvUnitEntry::GetResourceQuantityRequirement
EXTRN	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z:PROC ; CvGlobals::getUnitInfo
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumResourceRequiredForUnit@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumResourceRequiredForUnit@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetNumResourceRequiredForUnit, COMDAT

; 1841 : {

	push	ebx
	push	esi

; 1842 : 	const UnitTypes eUnit = (UnitTypes) lua_tointeger(L, 1);

	mov	esi, DWORD PTR _L$[esp+4]
	push	edi
	push	1
	push	esi
	call	_lua_tointeger

; 1843 : 	const ResourceTypes eResource = (ResourceTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	mov	edi, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H

; 1844 : 
; 1845 : 	CvUnitEntry* pkUnitInfo = GC.getUnitInfo(eUnit);

	push	edi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	ebx, eax
	call	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z ; CvGlobals::getUnitInfo

; 1846 : 	if(pkUnitInfo == NULL)

	test	eax, eax
	jne	SHORT $LN1@lGetNumRes

; 1847 : 	{
; 1848 : 		luaL_error(L, "Unit row at ID %d is empty.", eUnit);

	push	edi
	push	OFFSET $SG224187
	push	esi
	call	_luaL_error
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi

; 1849 : 		return 0;

	xor	eax, eax
	pop	ebx

; 1857 : }

	ret	0
$LN1@lGetNumRes:

; 1850 : 	}
; 1851 : 
; 1852 : 	const int iNumNeeded = pkUnitInfo->GetResourceQuantityRequirement(eResource);

	push	ebx
	mov	ecx, eax
	call	?GetResourceQuantityRequirement@CvUnitEntry@@QBEHH@Z ; CvUnitEntry::GetResourceQuantityRequirement

; 1853 : 
; 1854 : 	lua_pushinteger(L, iNumNeeded);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi

; 1855 : 
; 1856 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1857 : }

	ret	0
?lGetNumResourceRequiredForUnit@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetNumResourceRequiredForUnit
_TEXT	ENDS
PUBLIC	?lGetNumResourceRequiredForBuilding@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumResourceRequiredForBuilding
EXTRN	?GetResourceQuantityRequirement@CvBuildingEntry@@QBEHH@Z:PROC ; CvBuildingEntry::GetResourceQuantityRequirement
EXTRN	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z:PROC ; CvGlobals::getBuildingInfo
EXTRN	_luaL_checkinteger:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumResourceRequiredForBuilding@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumResourceRequiredForBuilding@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetNumResourceRequiredForBuilding, COMDAT

; 1860 : {

	push	ebx

; 1861 : 	const BuildingTypes eBuilding = (BuildingTypes) luaL_checkint(L, 1);

	mov	ebx, DWORD PTR _L$[esp]
	push	esi
	push	edi
	push	1
	push	ebx
	call	_luaL_checkinteger

; 1862 : 	const ResourceTypes eResource = (ResourceTypes) luaL_checkint(L, 2);

	push	2
	push	ebx
	mov	edi, eax
	call	_luaL_checkinteger
	add	esp, 16					; 00000010H

; 1863 : 
; 1864 : 	CvBuildingEntry* pkBuildingInfo = GC.getBuildingInfo(eBuilding);

	push	edi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	esi, eax
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo

; 1865 : 	CvResourceInfo* pkResourceInfo = GC.getResourceInfo(eResource);

	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	edi, eax
	call	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z ; CvGlobals::getResourceInfo
	mov	ecx, eax

; 1866 : 
; 1867 : 	int iNumNeeded = 0;

	xor	eax, eax

; 1868 : 	if(pkBuildingInfo && pkResourceInfo)

	test	edi, edi
	je	SHORT $LN1@lGetNumRes@2
	test	ecx, ecx
	je	SHORT $LN1@lGetNumRes@2

; 1869 : 	{
; 1870 : 		iNumNeeded = pkBuildingInfo->GetResourceQuantityRequirement(eResource);

	push	esi
	mov	ecx, edi
	call	?GetResourceQuantityRequirement@CvBuildingEntry@@QBEHH@Z ; CvBuildingEntry::GetResourceQuantityRequirement
$LN1@lGetNumRes@2:

; 1871 : 	}
; 1872 : 
; 1873 : 	lua_pushinteger(L, iNumNeeded);

	push	eax
	push	ebx
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi

; 1874 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1875 : }

	ret	0
?lGetNumResourceRequiredForBuilding@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetNumResourceRequiredForBuilding
_TEXT	ENDS
PUBLIC	?lGetCustomOption@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetCustomOption
EXTRN	?GetGameOption@CvPreGame@@YA_NPBDAAH@Z:PROC	; CvPreGame::GetGameOption
EXTRN	_luaL_checklstring:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCustomOption@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_i$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetCustomOption@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetCustomOption, COMDAT

; 2019 : {

	push	ecx
	push	esi

; 2020 : 	const char* szOptionName = luaL_checkstring(L, 1);

	mov	esi, DWORD PTR _L$[esp+4]
	push	0
	push	1
	push	esi
	call	_luaL_checklstring

; 2021 : 	int i = 0;
; 2022 : 	if(CvPreGame::GetGameOption(szOptionName, i))

	lea	ecx, DWORD PTR _i$[esp+20]
	push	ecx
	push	eax
	mov	DWORD PTR _i$[esp+28], 0
	call	?GetGameOption@CvPreGame@@YA_NPBDAAH@Z	; CvPreGame::GetGameOption
	add	esp, 20					; 00000014H
	test	al, al
	je	SHORT $LN1@lGetCustom

; 2023 : 	{
; 2024 : 		lua_pushinteger(L, i);

	mov	edx, DWORD PTR _i$[esp+8]
	push	edx
	push	esi
	call	_lua_pushinteger
	add	esp, 8

; 2025 : 		return 1;

	mov	eax, 1
	pop	esi

; 2029 : }

	pop	ecx
	ret	0
$LN1@lGetCustom:

; 2026 : 	}
; 2027 : 
; 2028 : 	return 0;

	xor	eax, eax
	pop	esi

; 2029 : }

	pop	ecx
	ret	0
?lGetCustomOption@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetCustomOption
_TEXT	ENDS
PUBLIC	?lGetBuildingYieldChange@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetBuildingYieldChange
EXTRN	?GetYieldChange@CvBuildingEntry@@QBEHH@Z:PROC	; CvBuildingEntry::GetYieldChange
EXTRN	?getYieldInfo@CvGlobals@@QAEPAVCvYieldInfo@@W4YieldTypes@@@Z:PROC ; CvGlobals::getYieldInfo
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBuildingYieldChange@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBuildingYieldChange@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetBuildingYieldChange, COMDAT

; 2044 : {

	push	ebx

; 2045 : 	const BuildingTypes eBuilding = (BuildingTypes) luaL_checkint(L, 1);

	mov	ebx, DWORD PTR _L$[esp]
	push	esi
	push	edi
	push	1
	push	ebx
	call	_luaL_checkinteger

; 2046 : 	const YieldTypes eYield = (YieldTypes) luaL_checkint(L, 2);

	push	2
	push	ebx
	mov	edi, eax
	call	_luaL_checkinteger
	add	esp, 16					; 00000010H

; 2047 : 
; 2048 : 	CvBuildingEntry* pkBuildingInfo = GC.getBuildingInfo(eBuilding);

	push	edi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	esi, eax
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo

; 2049 : 	CvYieldInfo* pkYieldInfo = GC.getYieldInfo(eYield);

	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	edi, eax
	call	?getYieldInfo@CvGlobals@@QAEPAVCvYieldInfo@@W4YieldTypes@@@Z ; CvGlobals::getYieldInfo
	mov	ecx, eax

; 2050 : 
; 2051 : 	int iYieldChange = 0;

	xor	eax, eax

; 2052 : 	if(pkBuildingInfo && pkYieldInfo)

	test	edi, edi
	je	SHORT $LN1@lGetBuildi
	test	ecx, ecx
	je	SHORT $LN1@lGetBuildi

; 2053 : 	{
; 2054 : 		iYieldChange = pkBuildingInfo->GetYieldChange(eYield);

	push	esi
	mov	ecx, edi
	call	?GetYieldChange@CvBuildingEntry@@QBEHH@Z ; CvBuildingEntry::GetYieldChange
$LN1@lGetBuildi:

; 2055 : 	}
; 2056 : 
; 2057 : 	lua_pushinteger(L, iYieldChange);

	push	eax
	push	ebx
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi

; 2058 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2059 : }

	ret	0
?lGetBuildingYieldChange@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetBuildingYieldChange
_TEXT	ENDS
PUBLIC	?lGetBuildingYieldModifier@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetBuildingYieldModifier
EXTRN	?GetYieldModifier@CvBuildingEntry@@QBEHH@Z:PROC	; CvBuildingEntry::GetYieldModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBuildingYieldModifier@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBuildingYieldModifier@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetBuildingYieldModifier, COMDAT

; 2062 : {

	push	ebx

; 2063 : 	const BuildingTypes eBuilding = (BuildingTypes) luaL_checkint(L, 1);

	mov	ebx, DWORD PTR _L$[esp]
	push	esi
	push	edi
	push	1
	push	ebx
	call	_luaL_checkinteger

; 2064 : 	const YieldTypes eYield = (YieldTypes) luaL_checkint(L, 2);

	push	2
	push	ebx
	mov	edi, eax
	call	_luaL_checkinteger
	add	esp, 16					; 00000010H

; 2065 : 
; 2066 : 	CvBuildingEntry* pkBuildingInfo = GC.getBuildingInfo(eBuilding);

	push	edi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	esi, eax
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo

; 2067 : 	CvYieldInfo* pkYieldInfo = GC.getYieldInfo(eYield);

	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	edi, eax
	call	?getYieldInfo@CvGlobals@@QAEPAVCvYieldInfo@@W4YieldTypes@@@Z ; CvGlobals::getYieldInfo
	mov	ecx, eax

; 2068 : 
; 2069 : 	int iYieldModifier = 0;

	xor	eax, eax

; 2070 : 	if(pkBuildingInfo && pkYieldInfo)

	test	edi, edi
	je	SHORT $LN1@lGetBuildi@2
	test	ecx, ecx
	je	SHORT $LN1@lGetBuildi@2

; 2071 : 	{
; 2072 : 		iYieldModifier= pkBuildingInfo->GetYieldModifier(eYield);

	push	esi
	mov	ecx, edi
	call	?GetYieldModifier@CvBuildingEntry@@QBEHH@Z ; CvBuildingEntry::GetYieldModifier
$LN1@lGetBuildi@2:

; 2073 : 	}
; 2074 : 
; 2075 : 	lua_pushinteger(L, iYieldModifier);

	push	eax
	push	ebx
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi

; 2076 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2077 : }

	ret	0
?lGetBuildingYieldModifier@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetBuildingYieldModifier
_TEXT	ENDS
PUBLIC	?lGetUnitUpgradesTo@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetUnitUpgradesTo
EXTRN	?getDefaultUnitIndex@CvUnitClassInfo@@QBEHXZ:PROC ; CvUnitClassInfo::getDefaultUnitIndex
EXTRN	?GetUpgradeUnitClass@CvUnitEntry@@QBE_NH@Z:PROC	; CvUnitEntry::GetUpgradeUnitClass
EXTRN	?getUnitClassInfo@CvGlobals@@QAEPAVCvUnitClassInfo@@W4UnitClassTypes@@@Z:PROC ; CvGlobals::getUnitClassInfo
EXTRN	?getNumUnitClassInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumUnitClassInfos
; Function compile flags: /Ogtpy
;	COMDAT ?lGetUnitUpgradesTo@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnitUpgradesTo@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetUnitUpgradesTo, COMDAT

; 2097 : {

	push	ebx
	push	ebp

; 2098 : 	const UnitTypes eUnit = (UnitTypes) lua_tointeger(L, 1);

	mov	ebp, DWORD PTR _L$[esp+4]
	push	esi
	push	1
	push	ebp
	call	_lua_tointeger
	add	esp, 8
	mov	esi, eax

; 2099 : 
; 2100 : 	CvUnitEntry* pkUnitInfo = GC.getUnitInfo(eUnit);

	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z ; CvGlobals::getUnitInfo
	mov	ebx, eax

; 2101 : 	if(pkUnitInfo == NULL)

	test	ebx, ebx
	jne	SHORT $LN6@lGetUnitUp

; 2102 : 	{
; 2103 : 		luaL_error(L, "Unit row at ID %d is empty.", eUnit);

	push	esi
	push	OFFSET $SG224335
	push	ebp
	call	_luaL_error
	add	esp, 12					; 0000000cH
	pop	esi
	pop	ebp

; 2104 : 		return 0;

	xor	eax, eax
	pop	ebx

; 2126 : }

	ret	0
$LN6@lGetUnitUp:
	push	edi

; 2105 : 	}
; 2106 : 
; 2107 : #ifdef AUI_WARNING_FIXES
; 2108 : 	for (uint iUnitClassLoop = 0; iUnitClassLoop < GC.getNumUnitClassInfos(); iUnitClassLoop++)
; 2109 : #else
; 2110 : 	for(int iUnitClassLoop = 0; iUnitClassLoop < GC.getNumUnitClassInfos(); iUnitClassLoop++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	xor	esi, esi
	call	?getNumUnitClassInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumUnitClassInfos
	test	eax, eax
	jle	SHORT $LN3@lGetUnitUp
	npad	5
$LL12@lGetUnitUp:

; 2111 : #endif
; 2112 : 	{
; 2113 : 		CvUnitClassInfo* pkUnitClassInfo = GC.getUnitClassInfo((UnitClassTypes) iUnitClassLoop);

	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getUnitClassInfo@CvGlobals@@QAEPAVCvUnitClassInfo@@W4UnitClassTypes@@@Z ; CvGlobals::getUnitClassInfo
	mov	edi, eax

; 2114 : 		if(pkUnitClassInfo != NULL)

	test	edi, edi
	je	SHORT $LN4@lGetUnitUp

; 2115 : 		{
; 2116 : 			if(pkUnitInfo->GetUpgradeUnitClass(iUnitClassLoop))	// Hardcoded to look at entry 0

	push	esi
	mov	ecx, ebx
	call	?GetUpgradeUnitClass@CvUnitEntry@@QBE_NH@Z ; CvUnitEntry::GetUpgradeUnitClass
	test	al, al
	jne	SHORT $LN10@lGetUnitUp
$LN4@lGetUnitUp:

; 2105 : 	}
; 2106 : 
; 2107 : #ifdef AUI_WARNING_FIXES
; 2108 : 	for (uint iUnitClassLoop = 0; iUnitClassLoop < GC.getNumUnitClassInfos(); iUnitClassLoop++)
; 2109 : #else
; 2110 : 	for(int iUnitClassLoop = 0; iUnitClassLoop < GC.getNumUnitClassInfos(); iUnitClassLoop++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	inc	esi
	call	?getNumUnitClassInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumUnitClassInfos
	cmp	esi, eax
	jl	SHORT $LL12@lGetUnitUp
$LN3@lGetUnitUp:

; 2120 : 			}
; 2121 : 		}
; 2122 : 	}
; 2123 : 
; 2124 : 	lua_pushinteger(L, -1);

	push	-1
	push	ebp
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2125 : 	return 0;

	xor	eax, eax
	pop	ebx

; 2126 : }

	ret	0
$LN10@lGetUnitUp:

; 2117 : 			{
; 2118 : 				lua_pushinteger(L, pkUnitClassInfo->getDefaultUnitIndex());

	mov	ecx, edi
	call	?getDefaultUnitIndex@CvUnitClassInfo@@QBEHXZ ; CvUnitClassInfo::getDefaultUnitIndex
	push	eax
	push	ebp
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2119 : 				return 1;

	mov	eax, 1
	pop	ebx

; 2126 : }

	ret	0
?lGetUnitUpgradesTo@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetUnitUpgradesTo
_TEXT	ENDS
PUBLIC	?lGetNumFreePolicies@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumFreePolicies
EXTRN	?GetNumFreePolicies@PolicyHelpers@@YAHW4PolicyBranchTypes@@@Z:PROC ; PolicyHelpers::GetNumFreePolicies
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumFreePolicies@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumFreePolicies@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetNumFreePolicies, COMDAT

; 2845 : {

	push	esi

; 2846 : 	const PolicyBranchTypes eBranch = static_cast<PolicyBranchTypes>(luaL_checkint(L, 1));

	mov	esi, DWORD PTR _L$[esp]
	push	1
	push	esi
	call	_luaL_checkinteger

; 2847 : 	lua_pushinteger(L, PolicyHelpers::GetNumFreePolicies(eBranch));

	push	eax
	call	?GetNumFreePolicies@PolicyHelpers@@YAHW4PolicyBranchTypes@@@Z ; PolicyHelpers::GetNumFreePolicies
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 20					; 00000014H

; 2848 : 	return 1;

	mov	eax, 1
	pop	esi

; 2849 : }

	ret	0
?lGetNumFreePolicies@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetNumFreePolicies
_TEXT	ENDS
PUBLIC	??A?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@QAEAAUCounsel@CvAdvisorCounsel@@I@Z ; BaseVector<CvAdvisorCounsel::Counsel,1>::operator[]
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ??A?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@QAEAAUCounsel@CvAdvisorCounsel@@I@Z
_TEXT	SEGMENT
_ui$ = 8						; size = 4
??A?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@QAEAAUCounsel@CvAdvisorCounsel@@I@Z PROC ; BaseVector<CvAdvisorCounsel::Counsel,1>::operator[], COMDAT
; _this$ = ecx

; 129  : 		FAssert(ui < m_uiCurrSize);
; 130  : 		return m_pData[ui];

	mov	eax, DWORD PTR _ui$[esp-4]
	imul	eax, 520				; 00000208H
	add	eax, DWORD PTR [ecx]

; 131  : 	};

	ret	4
??A?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@QAEAAUCounsel@CvAdvisorCounsel@@I@Z ENDP ; BaseVector<CvAdvisorCounsel::Counsel,1>::operator[]
_TEXT	ENDS
PUBLIC	?size@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@QBEIXZ ; BaseVector<CvAdvisorCounsel::Counsel,1>::size
; Function compile flags: /Ogtpy
;	COMDAT ?size@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@QBEIXZ
_TEXT	SEGMENT
?size@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@QBEIXZ PROC ; BaseVector<CvAdvisorCounsel::Counsel,1>::size, COMDAT
; _this$ = ecx

; 169  : 		return m_uiCurrSize;

	mov	eax, DWORD PTR [ecx+4]

; 170  : 	};

	ret	0
?size@?$BaseVector@UCounsel@CvAdvisorCounsel@@$00@@QBEIXZ ENDP ; BaseVector<CvAdvisorCounsel::Counsel,1>::size
_TEXT	ENDS
PUBLIC	??1?$_Container_base_aux_alloc_empty@V?$allocator@W4BeliefTypes@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_empty<std::allocator<enum BeliefTypes> >::~_Container_base_aux_alloc_empty<std::allocator<enum BeliefTypes> >
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\xutility
;	COMDAT ??1?$_Container_base_aux_alloc_empty@V?$allocator@W4BeliefTypes@@@std@@@std@@IAE@XZ
_TEXT	SEGMENT
??1?$_Container_base_aux_alloc_empty@V?$allocator@W4BeliefTypes@@@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_empty<std::allocator<enum BeliefTypes> >::~_Container_base_aux_alloc_empty<std::allocator<enum BeliefTypes> >, COMDAT
; _this$ = ecx

; 627  : 	~_Container_base_aux_alloc_empty() { }

	ret	0
??1?$_Container_base_aux_alloc_empty@V?$allocator@W4BeliefTypes@@@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<enum BeliefTypes> >::~_Container_base_aux_alloc_empty<std::allocator<enum BeliefTypes> >
_TEXT	ENDS
PUBLIC	??D?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBEABW4BeliefTypes@@XZ ; std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator*
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\vector
;	COMDAT ??D?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBEABW4BeliefTypes@@XZ
_TEXT	SEGMENT
??D?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBEABW4BeliefTypes@@XZ PROC ; std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator*, COMDAT
; _this$ = ecx

; 92   : 
; 93   :  #if _HAS_ITERATOR_DEBUGGING
; 94   : 		if (this->_Mycont == 0
; 95   : 			|| _Myptr < ((_Myvec *)this->_Mycont)->_Myfirst
; 96   : 			|| ((_Myvec *)this->_Mycont)->_Mylast <= _Myptr)
; 97   : 			{
; 98   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 99   : 			_SCL_SECURE_OUT_OF_RANGE;
; 100  : 			}
; 101  :  #else
; 102  :  		_SCL_SECURE_VALIDATE(this->_Has_container());
; 103  : 		_SCL_SECURE_VALIDATE_RANGE(_Myptr < ((_Myvec *)(this->_Getmycont()))->_Mylast);
; 104  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 105  : 
; 106  : 		return (*_Myptr);

	mov	eax, DWORD PTR [ecx]

; 107  : 		}

	ret	0
??D?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBEABW4BeliefTypes@@XZ ENDP ; std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator++
; Function compile flags: /Ogtpy
;	COMDAT ??E?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator++, COMDAT
; _this$ = ecx

; 115  : 		{	// preincrement

	mov	eax, ecx

; 116  : 		_SCL_SECURE_VALIDATE(this->_Has_container());
; 117  : 		_SCL_SECURE_VALIDATE_RANGE(_Myptr < ((_Myvec *)(this->_Getmycont()))->_Mylast);
; 118  : 
; 119  :  #if _HAS_ITERATOR_DEBUGGING
; 120  : 		if (this->_Mycont == 0
; 121  : 			|| ((_Myvec *)this->_Mycont)->_Mylast <= _Myptr)
; 122  : 			_DEBUG_ERROR("vector iterator not incrementable");
; 123  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 124  : 
; 125  : 		++_Myptr;

	add	DWORD PTR [eax], 4

; 126  : 		return (*this);
; 127  : 		}

	ret	0
??E?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator++
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator==
; Function compile flags: /Ogtpy
;	COMDAT ??8?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator==, COMDAT
; _this$ = ecx

; 204  : 
; 205  :  #if _HAS_ITERATOR_DEBUGGING
; 206  : 		_Compat(_Right);
; 207  :  #else
; 208  : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));
; 209  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 210  : 
; 211  : 		return (_Myptr == _Right._Myptr);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	cl
	mov	al, cl

; 212  : 		}

	ret	4
??8?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator==
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@W4BeliefTypes@@@std@@QAEXPAW4BeliefTypes@@I@Z ; std::allocator<enum BeliefTypes>::deallocate
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\xmemory
;	COMDAT ?deallocate@?$allocator@W4BeliefTypes@@@std@@QAEXPAW4BeliefTypes@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@W4BeliefTypes@@@std@@QAEXPAW4BeliefTypes@@I@Z PROC ; std::allocator<enum BeliefTypes>::deallocate, COMDAT
; _this$ = ecx

; 140  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 141  : 		}

	ret	8
?deallocate@?$allocator@W4BeliefTypes@@@std@@QAEXPAW4BeliefTypes@@I@Z ENDP ; std::allocator<enum BeliefTypes>::deallocate
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@PAW4BeliefTypes@@@Z ; std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@PAW4BeliefTypes@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@PAW4BeliefTypes@@@Z PROC ; std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >, COMDAT
; _this$ = ecx

; 84   : 	explicit _Vector_const_iterator(_Tptr _Ptr)

	mov	eax, ecx

; 85   : 		{	// construct with pointer _Ptr
; 86   : 		_Myptr = _Ptr;

	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 87   : 		}

	ret	4
??0?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@PAW4BeliefTypes@@@Z ENDP ; std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >
_TEXT	ENDS
PUBLIC	?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push
EXTRN	_lua_pushnil:PROC
EXTRN	_lua_remove:PROC
EXTRN	_lua_pushlightuserdata:PROC
EXTRN	_lua_rawget:PROC
EXTRN	?PushMethods@CvLuaCity@@SAXPAUlua_State@@H@Z:PROC ; CvLuaCity::PushMethods
EXTRN	_lua_gettop:PROC
EXTRN	_lua_setfield:PROC
EXTRN	_lua_pushvalue:PROC
EXTRN	_lua_setmetatable:PROC
EXTRN	_lua_rawset:PROC
EXTRN	_lua_pushstring:PROC
EXTRN	_lua_createtable:PROC
EXTRN	_lua_settop:PROC
EXTRN	_lua_type:PROC
EXTRN	_lua_getfield:PROC
EXTRN	?GetTypeName@CvLuaCity@@SAPBDXZ:PROC		; CvLuaCity::GetTypeName
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluascopedinstance.h
;	COMDAT ?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_pkType$ = 12						; size = 4
?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z PROC ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push, COMDAT

; 39   : {

	push	edi

; 40   : 	//Pushing an instance involves more than just actually pushing a pointer into the
; 41   : 	//Lua stack.  There are some caching optimizations that are done as well as some
; 42   : 	//checks.
; 43   : 	//The first step is to load or create a global table <Typename> to store all member
; 44   : 	//methods and all pushed instances.  This conserves memory and offers faster pushing
; 45   : 	//speed.
; 46   : 	//If <Typename>.__instances[pkType] is not nil, return that value.
; 47   : 	//otherwise push a new instance and assign it to __instances.
; 48   : 
; 49   : 	//NOTE: Raw gets and sets are used as an optimization over using lua_[get,set]field
; 50   : 	if(pkType)

	mov	edi, DWORD PTR _pkType$[esp]
	test	edi, edi
	je	$LN4@Push
	push	ebx
	push	ebp
	push	esi

; 51   : 	{
; 52   : 		//const int t = lua_gettop(L);
; 53   : 
; 54   : 		lua_getglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaCity@@SAPBDXZ		; CvLuaCity::GetTypeName
	mov	esi, DWORD PTR _L$[esp+12]
	push	eax
	push	-10002					; ffffd8eeH
	push	esi
	call	_lua_getfield

; 55   : 		if(lua_isnil(L, -1))

	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	$LN7@Push

; 56   : 		{
; 57   : 			//Typename wasn't found, time to build it.
; 58   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	push	esi
	call	_lua_settop

; 59   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 60   : 
; 61   : 			//Create weak __instances table.
; 62   : 			lua_pushstring(L, "__instances");

	push	OFFSET $SG225436
	push	esi
	call	_lua_pushstring

; 63   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 64   : 
; 65   : 			//Create __instances.mt
; 66   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 67   : 			lua_pushstring(L, "__mode");

	push	OFFSET $SG225437
	push	esi
	call	_lua_pushstring

; 68   : 			lua_pushstring(L, "v");

	push	OFFSET $SG225438
	push	esi
	call	_lua_pushstring
	add	esp, 68					; 00000044H

; 69   : 			lua_rawset(L, -3);				// mt.__mode = "v";

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 70   : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_setmetatable

; 71   : 
; 72   : 			lua_rawset(L, -3);				//type.__instances = t;

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 73   : 
; 74   : 
; 75   : 			lua_pushvalue(L, -1);

	push	-1
	push	esi
	call	_lua_pushvalue

; 76   : 			lua_setglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaCity@@SAPBDXZ		; CvLuaCity::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	push	esi
	call	_lua_setfield

; 77   : 
; 78   : 			Derived::PushMethods(L, lua_gettop(L));

	push	esi
	call	_lua_gettop
	push	eax
	push	esi
	call	?PushMethods@CvLuaCity@@SAXPAUlua_State@@H@Z ; CvLuaCity::PushMethods
	add	esp, 56					; 00000038H
$LN7@Push:

; 79   : 		}
; 80   : 		const int type_index = lua_gettop(L);

	push	esi
	call	_lua_gettop

; 81   : 
; 82   : 		lua_pushstring(L, "__instances");

	push	OFFSET $SG225440
	push	esi
	mov	ebx, eax
	call	_lua_pushstring

; 83   : 		lua_rawget(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_rawget

; 84   : 
; 85   : 		const int instances_index = lua_gettop(L);

	push	esi
	call	_lua_gettop

; 86   : 
; 87   : 		lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	mov	ebp, eax
	call	_lua_pushlightuserdata

; 88   : 
; 89   : 		lua_rawget(L, -2);					//retrieve type.__instances[pkType]

	push	-2					; fffffffeH
	push	esi
	call	_lua_rawget

; 90   : 
; 91   : 		if(lua_isnil(L, -1))

	push	-1
	push	esi
	call	_lua_type
	add	esp, 48					; 00000030H
	test	eax, eax
	jne	SHORT $LN2@Push

; 92   : 		{
; 93   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	push	esi
	call	_lua_settop

; 94   : 
; 95   : 			//Push new instance
; 96   : 			lua_createtable(L, 0, 1);

	push	1
	push	0
	push	esi
	call	_lua_createtable

; 97   : 			lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	call	_lua_pushlightuserdata

; 98   : 			lua_setfield(L, -2, "__instance");

	push	OFFSET $SG225443
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 99   : 
; 100  : 			lua_createtable(L, 0, 1);			// create mt

	push	1
	push	0
	push	esi
	call	_lua_createtable

; 101  : 			lua_pushstring(L, "__index");

	push	OFFSET $SG225444
	push	esi
	call	_lua_pushstring

; 102  : 			lua_pushvalue(L, type_index);

	push	ebx
	push	esi
	call	_lua_pushvalue
	add	esp, 68					; 00000044H

; 103  : 			lua_rawset(L, -3);					// mt.__index = Type

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 104  : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_setmetatable

; 105  : 
; 106  : 			//Assign it in instances
; 107  : 			lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	call	_lua_pushlightuserdata

; 108  : 			lua_pushvalue(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_pushvalue

; 109  : 			lua_rawset(L, instances_index);				//__instances[pkType] = t;

	push	ebp
	push	esi
	call	_lua_rawset
	add	esp, 40					; 00000028H
$LN2@Push:

; 110  : 		}
; 111  : 
; 112  : 		//VERIFY(instances_index > type_index);
; 113  : 		lua_remove(L, instances_index);

	push	ebp
	push	esi
	call	_lua_remove

; 114  : 		lua_remove(L, type_index);

	push	ebx
	push	esi
	call	_lua_remove
	add	esp, 16					; 00000010H
	pop	esi
	pop	ebp
	pop	ebx
	pop	edi

; 122  : 	}
; 123  : }

	ret	0
$LN4@Push:

; 115  : 
; 116  : 		//const int dt = lua_gettop(L);
; 117  : 		//VERIFY(dt == t + 1)
; 118  : 	}
; 119  : 	else
; 120  : 	{
; 121  : 		lua_pushnil(L);

	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushnil
	add	esp, 4
	pop	edi

; 122  : 	}
; 123  : }

	ret	0
?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z ENDP ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push
_TEXT	ENDS
PUBLIC	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
EXTRN	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z:PROC ; CvLuaCity::HandleMissingInstance
EXTRN	_lua_touserdata:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_bErrorOnFail$ = 16					; size = 1
?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z PROC ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance, COMDAT

; 127  : {

	push	ebx
	push	ebp
	push	esi

; 128  : 	const int stack_size = lua_gettop(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	mov	ebp, eax

; 129  : 	bool bFail = true;
; 130  : 
; 131  : 	InstanceType* pkInstance = NULL;
; 132  : 	if(lua_type(L, idx) == LUA_TTABLE)

	mov	eax, DWORD PTR _idx$[esp+16]
	push	eax
	push	esi
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN3@GetInstanc

; 133  : 	{
; 134  : 		lua_getfield(L, idx, "__instance");

	mov	ecx, DWORD PTR _idx$[esp+12]
	push	OFFSET $SG225459
	push	ecx
	push	esi
	call	_lua_getfield

; 135  : 		if(lua_type(L, -1) == LUA_TLIGHTUSERDATA)

	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN3@GetInstanc

; 136  : 		{
; 137  : 			pkInstance = static_cast<InstanceType*>(lua_touserdata(L, -1));

	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8

; 138  : 			if(pkInstance)

	test	edi, edi
	je	SHORT $LN3@GetInstanc

; 139  : 			{
; 140  : 				bFail = false;

	xor	bl, bl
$LN3@GetInstanc:

; 141  : 			}
; 142  : 		}
; 143  : 	}
; 144  : 
; 145  : 	lua_settop(L, stack_size);

	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8

; 146  : 
; 147  : 	if(bFail && bErrorOnFail)

	test	bl, bl
	je	SHORT $LN9@GetInstanc
	cmp	BYTE PTR _bErrorOnFail$[esp+12], 0
	je	SHORT $LN9@GetInstanc

; 148  : 	{
; 149  : 		if(idx == 1)

	cmp	DWORD PTR _idx$[esp+12], 1
	jne	SHORT $LN1@GetInstanc

; 150  : 			luaL_error(L, "Not a valid instance.  Either the instance is NULL or you used '.' instead of ':'.");

	push	OFFSET $SG225465
	push	esi
	call	_luaL_error
	add	esp, 8
$LN1@GetInstanc:

; 151  : 		Derived::HandleMissingInstance(L);

	push	esi
	call	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
	add	esp, 4
$LN9@GetInstanc:

; 152  : 	}
; 153  : 	return pkInstance;

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 154  : }

	ret	0
?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ENDP ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
_TEXT	ENDS
PUBLIC	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
EXTRN	_lua_pushcclosure:PROC
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvluastaticinstance.h
;	COMDAT ?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
_funcName$ = 16						; size = 4
?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z PROC ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod, COMDAT

; 59   : 	lua_pushcclosure(L, func, 0);

	mov	eax, DWORD PTR _func$[esp-4]
	push	esi
	mov	esi, DWORD PTR _L$[esp]
	push	0
	push	eax
	push	esi
	call	_lua_pushcclosure

; 60   : 	lua_setfield(L, -2, funcName);

	mov	ecx, DWORD PTR _funcName$[esp+12]
	push	ecx
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 24					; 00000018H
	pop	esi

; 61   : }

	ret	0
?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ENDP ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
_TEXT	ENDS
PUBLIC	?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
EXTRN	?PushMethods@CvLuaPlot@@SAXPAUlua_State@@H@Z:PROC ; CvLuaPlot::PushMethods
EXTRN	?GetTypeName@CvLuaPlot@@SAPBDXZ:PROC		; CvLuaPlot::GetTypeName
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluascopedinstance.h
;	COMDAT ?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_pkType$ = 12						; size = 4
?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z PROC ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push, COMDAT

; 39   : {

	push	edi

; 40   : 	//Pushing an instance involves more than just actually pushing a pointer into the
; 41   : 	//Lua stack.  There are some caching optimizations that are done as well as some
; 42   : 	//checks.
; 43   : 	//The first step is to load or create a global table <Typename> to store all member
; 44   : 	//methods and all pushed instances.  This conserves memory and offers faster pushing
; 45   : 	//speed.
; 46   : 	//If <Typename>.__instances[pkType] is not nil, return that value.
; 47   : 	//otherwise push a new instance and assign it to __instances.
; 48   : 
; 49   : 	//NOTE: Raw gets and sets are used as an optimization over using lua_[get,set]field
; 50   : 	if(pkType)

	mov	edi, DWORD PTR _pkType$[esp]
	test	edi, edi
	je	$LN4@Push@2
	push	ebx
	push	ebp
	push	esi

; 51   : 	{
; 52   : 		//const int t = lua_gettop(L);
; 53   : 
; 54   : 		lua_getglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaPlot@@SAPBDXZ		; CvLuaPlot::GetTypeName
	mov	esi, DWORD PTR _L$[esp+12]
	push	eax
	push	-10002					; ffffd8eeH
	push	esi
	call	_lua_getfield

; 55   : 		if(lua_isnil(L, -1))

	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	$LN7@Push@2

; 56   : 		{
; 57   : 			//Typename wasn't found, time to build it.
; 58   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	push	esi
	call	_lua_settop

; 59   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 60   : 
; 61   : 			//Create weak __instances table.
; 62   : 			lua_pushstring(L, "__instances");

	push	OFFSET $SG225494
	push	esi
	call	_lua_pushstring

; 63   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 64   : 
; 65   : 			//Create __instances.mt
; 66   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 67   : 			lua_pushstring(L, "__mode");

	push	OFFSET $SG225495
	push	esi
	call	_lua_pushstring

; 68   : 			lua_pushstring(L, "v");

	push	OFFSET $SG225496
	push	esi
	call	_lua_pushstring
	add	esp, 68					; 00000044H

; 69   : 			lua_rawset(L, -3);				// mt.__mode = "v";

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 70   : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_setmetatable

; 71   : 
; 72   : 			lua_rawset(L, -3);				//type.__instances = t;

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 73   : 
; 74   : 
; 75   : 			lua_pushvalue(L, -1);

	push	-1
	push	esi
	call	_lua_pushvalue

; 76   : 			lua_setglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaPlot@@SAPBDXZ		; CvLuaPlot::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	push	esi
	call	_lua_setfield

; 77   : 
; 78   : 			Derived::PushMethods(L, lua_gettop(L));

	push	esi
	call	_lua_gettop
	push	eax
	push	esi
	call	?PushMethods@CvLuaPlot@@SAXPAUlua_State@@H@Z ; CvLuaPlot::PushMethods
	add	esp, 56					; 00000038H
$LN7@Push@2:

; 79   : 		}
; 80   : 		const int type_index = lua_gettop(L);

	push	esi
	call	_lua_gettop

; 81   : 
; 82   : 		lua_pushstring(L, "__instances");

	push	OFFSET $SG225498
	push	esi
	mov	ebx, eax
	call	_lua_pushstring

; 83   : 		lua_rawget(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_rawget

; 84   : 
; 85   : 		const int instances_index = lua_gettop(L);

	push	esi
	call	_lua_gettop

; 86   : 
; 87   : 		lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	mov	ebp, eax
	call	_lua_pushlightuserdata

; 88   : 
; 89   : 		lua_rawget(L, -2);					//retrieve type.__instances[pkType]

	push	-2					; fffffffeH
	push	esi
	call	_lua_rawget

; 90   : 
; 91   : 		if(lua_isnil(L, -1))

	push	-1
	push	esi
	call	_lua_type
	add	esp, 48					; 00000030H
	test	eax, eax
	jne	SHORT $LN2@Push@2

; 92   : 		{
; 93   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	push	esi
	call	_lua_settop

; 94   : 
; 95   : 			//Push new instance
; 96   : 			lua_createtable(L, 0, 1);

	push	1
	push	0
	push	esi
	call	_lua_createtable

; 97   : 			lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	call	_lua_pushlightuserdata

; 98   : 			lua_setfield(L, -2, "__instance");

	push	OFFSET $SG225501
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 99   : 
; 100  : 			lua_createtable(L, 0, 1);			// create mt

	push	1
	push	0
	push	esi
	call	_lua_createtable

; 101  : 			lua_pushstring(L, "__index");

	push	OFFSET $SG225502
	push	esi
	call	_lua_pushstring

; 102  : 			lua_pushvalue(L, type_index);

	push	ebx
	push	esi
	call	_lua_pushvalue
	add	esp, 68					; 00000044H

; 103  : 			lua_rawset(L, -3);					// mt.__index = Type

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 104  : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_setmetatable

; 105  : 
; 106  : 			//Assign it in instances
; 107  : 			lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	call	_lua_pushlightuserdata

; 108  : 			lua_pushvalue(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_pushvalue

; 109  : 			lua_rawset(L, instances_index);				//__instances[pkType] = t;

	push	ebp
	push	esi
	call	_lua_rawset
	add	esp, 40					; 00000028H
$LN2@Push@2:

; 110  : 		}
; 111  : 
; 112  : 		//VERIFY(instances_index > type_index);
; 113  : 		lua_remove(L, instances_index);

	push	ebp
	push	esi
	call	_lua_remove

; 114  : 		lua_remove(L, type_index);

	push	ebx
	push	esi
	call	_lua_remove
	add	esp, 16					; 00000010H
	pop	esi
	pop	ebp
	pop	ebx
	pop	edi

; 122  : 	}
; 123  : }

	ret	0
$LN4@Push@2:

; 115  : 
; 116  : 		//const int dt = lua_gettop(L);
; 117  : 		//VERIFY(dt == t + 1)
; 118  : 	}
; 119  : 	else
; 120  : 	{
; 121  : 		lua_pushnil(L);

	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushnil
	add	esp, 4
	pop	edi

; 122  : 	}
; 123  : }

	ret	0
?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ENDP ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
_TEXT	ENDS
PUBLIC	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance
EXTRN	?HandleMissingInstance@CvLuaPlot@@SAXPAUlua_State@@@Z:PROC ; CvLuaPlot::HandleMissingInstance
; Function compile flags: /Ogtpy
;	COMDAT ?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_bErrorOnFail$ = 16					; size = 1
?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z PROC ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance, COMDAT

; 127  : {

	push	ebx
	push	ebp
	push	esi

; 128  : 	const int stack_size = lua_gettop(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	mov	ebp, eax

; 129  : 	bool bFail = true;
; 130  : 
; 131  : 	InstanceType* pkInstance = NULL;
; 132  : 	if(lua_type(L, idx) == LUA_TTABLE)

	mov	eax, DWORD PTR _idx$[esp+16]
	push	eax
	push	esi
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN3@GetInstanc@2

; 133  : 	{
; 134  : 		lua_getfield(L, idx, "__instance");

	mov	ecx, DWORD PTR _idx$[esp+12]
	push	OFFSET $SG225517
	push	ecx
	push	esi
	call	_lua_getfield

; 135  : 		if(lua_type(L, -1) == LUA_TLIGHTUSERDATA)

	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN3@GetInstanc@2

; 136  : 		{
; 137  : 			pkInstance = static_cast<InstanceType*>(lua_touserdata(L, -1));

	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8

; 138  : 			if(pkInstance)

	test	edi, edi
	je	SHORT $LN3@GetInstanc@2

; 139  : 			{
; 140  : 				bFail = false;

	xor	bl, bl
$LN3@GetInstanc@2:

; 141  : 			}
; 142  : 		}
; 143  : 	}
; 144  : 
; 145  : 	lua_settop(L, stack_size);

	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8

; 146  : 
; 147  : 	if(bFail && bErrorOnFail)

	test	bl, bl
	je	SHORT $LN9@GetInstanc@2
	cmp	BYTE PTR _bErrorOnFail$[esp+12], 0
	je	SHORT $LN9@GetInstanc@2

; 148  : 	{
; 149  : 		if(idx == 1)

	cmp	DWORD PTR _idx$[esp+12], 1
	jne	SHORT $LN1@GetInstanc@2

; 150  : 			luaL_error(L, "Not a valid instance.  Either the instance is NULL or you used '.' instead of ':'.");

	push	OFFSET $SG225523
	push	esi
	call	_luaL_error
	add	esp, 8
$LN1@GetInstanc@2:

; 151  : 		Derived::HandleMissingInstance(L);

	push	esi
	call	?HandleMissingInstance@CvLuaPlot@@SAXPAUlua_State@@@Z ; CvLuaPlot::HandleMissingInstance
	add	esp, 4
$LN9@GetInstanc@2:

; 152  : 	}
; 153  : 	return pkInstance;

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 154  : }

	ret	0
?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z ENDP ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance
_TEXT	ENDS
PUBLIC	?GetInstance@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAPAVCvUnit@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::GetInstance
EXTRN	?HandleMissingInstance@CvLuaUnit@@SAXPAUlua_State@@@Z:PROC ; CvLuaUnit::HandleMissingInstance
; Function compile flags: /Ogtpy
;	COMDAT ?GetInstance@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAPAVCvUnit@@PAUlua_State@@H_N@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_bErrorOnFail$ = 16					; size = 1
?GetInstance@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAPAVCvUnit@@PAUlua_State@@H_N@Z PROC ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::GetInstance, COMDAT

; 127  : {

	push	ebx
	push	ebp
	push	esi

; 128  : 	const int stack_size = lua_gettop(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	mov	ebp, eax

; 129  : 	bool bFail = true;
; 130  : 
; 131  : 	InstanceType* pkInstance = NULL;
; 132  : 	if(lua_type(L, idx) == LUA_TTABLE)

	mov	eax, DWORD PTR _idx$[esp+16]
	push	eax
	push	esi
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN3@GetInstanc@3

; 133  : 	{
; 134  : 		lua_getfield(L, idx, "__instance");

	mov	ecx, DWORD PTR _idx$[esp+12]
	push	OFFSET $SG225537
	push	ecx
	push	esi
	call	_lua_getfield

; 135  : 		if(lua_type(L, -1) == LUA_TLIGHTUSERDATA)

	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN3@GetInstanc@3

; 136  : 		{
; 137  : 			pkInstance = static_cast<InstanceType*>(lua_touserdata(L, -1));

	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8

; 138  : 			if(pkInstance)

	test	edi, edi
	je	SHORT $LN3@GetInstanc@3

; 139  : 			{
; 140  : 				bFail = false;

	xor	bl, bl
$LN3@GetInstanc@3:

; 141  : 			}
; 142  : 		}
; 143  : 	}
; 144  : 
; 145  : 	lua_settop(L, stack_size);

	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8

; 146  : 
; 147  : 	if(bFail && bErrorOnFail)

	test	bl, bl
	je	SHORT $LN9@GetInstanc@3
	cmp	BYTE PTR _bErrorOnFail$[esp+12], 0
	je	SHORT $LN9@GetInstanc@3

; 148  : 	{
; 149  : 		if(idx == 1)

	cmp	DWORD PTR _idx$[esp+12], 1
	jne	SHORT $LN1@GetInstanc@3

; 150  : 			luaL_error(L, "Not a valid instance.  Either the instance is NULL or you used '.' instead of ':'.");

	push	OFFSET $SG225543
	push	esi
	call	_luaL_error
	add	esp, 8
$LN1@GetInstanc@3:

; 151  : 		Derived::HandleMissingInstance(L);

	push	esi
	call	?HandleMissingInstance@CvLuaUnit@@SAXPAUlua_State@@@Z ; CvLuaUnit::HandleMissingInstance
	add	esp, 4
$LN9@GetInstanc@3:

; 152  : 	}
; 153  : 	return pkInstance;

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 154  : }

	ret	0
?GetInstance@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAPAVCvUnit@@PAUlua_State@@H_N@Z ENDP ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::GetInstance
_TEXT	ENDS
PUBLIC	?Push@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAXPAUlua_State@@PAVCvLeague@@@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::Push
EXTRN	?PushMethods@CvLuaLeague@@SAXPAUlua_State@@H@Z:PROC ; CvLuaLeague::PushMethods
EXTRN	?GetTypeName@CvLuaLeague@@SAPBDXZ:PROC		; CvLuaLeague::GetTypeName
; Function compile flags: /Ogtpy
;	COMDAT ?Push@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAXPAUlua_State@@PAVCvLeague@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_pkType$ = 12						; size = 4
?Push@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAXPAUlua_State@@PAVCvLeague@@@Z PROC ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::Push, COMDAT

; 39   : {

	push	edi

; 40   : 	//Pushing an instance involves more than just actually pushing a pointer into the
; 41   : 	//Lua stack.  There are some caching optimizations that are done as well as some
; 42   : 	//checks.
; 43   : 	//The first step is to load or create a global table <Typename> to store all member
; 44   : 	//methods and all pushed instances.  This conserves memory and offers faster pushing
; 45   : 	//speed.
; 46   : 	//If <Typename>.__instances[pkType] is not nil, return that value.
; 47   : 	//otherwise push a new instance and assign it to __instances.
; 48   : 
; 49   : 	//NOTE: Raw gets and sets are used as an optimization over using lua_[get,set]field
; 50   : 	if(pkType)

	mov	edi, DWORD PTR _pkType$[esp]
	test	edi, edi
	je	$LN4@Push@3
	push	ebx
	push	ebp
	push	esi

; 51   : 	{
; 52   : 		//const int t = lua_gettop(L);
; 53   : 
; 54   : 		lua_getglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaLeague@@SAPBDXZ	; CvLuaLeague::GetTypeName
	mov	esi, DWORD PTR _L$[esp+12]
	push	eax
	push	-10002					; ffffd8eeH
	push	esi
	call	_lua_getfield

; 55   : 		if(lua_isnil(L, -1))

	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	$LN7@Push@3

; 56   : 		{
; 57   : 			//Typename wasn't found, time to build it.
; 58   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	push	esi
	call	_lua_settop

; 59   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 60   : 
; 61   : 			//Create weak __instances table.
; 62   : 			lua_pushstring(L, "__instances");

	push	OFFSET $SG225554
	push	esi
	call	_lua_pushstring

; 63   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 64   : 
; 65   : 			//Create __instances.mt
; 66   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 67   : 			lua_pushstring(L, "__mode");

	push	OFFSET $SG225555
	push	esi
	call	_lua_pushstring

; 68   : 			lua_pushstring(L, "v");

	push	OFFSET $SG225556
	push	esi
	call	_lua_pushstring
	add	esp, 68					; 00000044H

; 69   : 			lua_rawset(L, -3);				// mt.__mode = "v";

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 70   : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_setmetatable

; 71   : 
; 72   : 			lua_rawset(L, -3);				//type.__instances = t;

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 73   : 
; 74   : 
; 75   : 			lua_pushvalue(L, -1);

	push	-1
	push	esi
	call	_lua_pushvalue

; 76   : 			lua_setglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaLeague@@SAPBDXZ	; CvLuaLeague::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	push	esi
	call	_lua_setfield

; 77   : 
; 78   : 			Derived::PushMethods(L, lua_gettop(L));

	push	esi
	call	_lua_gettop
	push	eax
	push	esi
	call	?PushMethods@CvLuaLeague@@SAXPAUlua_State@@H@Z ; CvLuaLeague::PushMethods
	add	esp, 56					; 00000038H
$LN7@Push@3:

; 79   : 		}
; 80   : 		const int type_index = lua_gettop(L);

	push	esi
	call	_lua_gettop

; 81   : 
; 82   : 		lua_pushstring(L, "__instances");

	push	OFFSET $SG225558
	push	esi
	mov	ebx, eax
	call	_lua_pushstring

; 83   : 		lua_rawget(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_rawget

; 84   : 
; 85   : 		const int instances_index = lua_gettop(L);

	push	esi
	call	_lua_gettop

; 86   : 
; 87   : 		lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	mov	ebp, eax
	call	_lua_pushlightuserdata

; 88   : 
; 89   : 		lua_rawget(L, -2);					//retrieve type.__instances[pkType]

	push	-2					; fffffffeH
	push	esi
	call	_lua_rawget

; 90   : 
; 91   : 		if(lua_isnil(L, -1))

	push	-1
	push	esi
	call	_lua_type
	add	esp, 48					; 00000030H
	test	eax, eax
	jne	SHORT $LN2@Push@3

; 92   : 		{
; 93   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	push	esi
	call	_lua_settop

; 94   : 
; 95   : 			//Push new instance
; 96   : 			lua_createtable(L, 0, 1);

	push	1
	push	0
	push	esi
	call	_lua_createtable

; 97   : 			lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	call	_lua_pushlightuserdata

; 98   : 			lua_setfield(L, -2, "__instance");

	push	OFFSET $SG225561
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 99   : 
; 100  : 			lua_createtable(L, 0, 1);			// create mt

	push	1
	push	0
	push	esi
	call	_lua_createtable

; 101  : 			lua_pushstring(L, "__index");

	push	OFFSET $SG225562
	push	esi
	call	_lua_pushstring

; 102  : 			lua_pushvalue(L, type_index);

	push	ebx
	push	esi
	call	_lua_pushvalue
	add	esp, 68					; 00000044H

; 103  : 			lua_rawset(L, -3);					// mt.__index = Type

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 104  : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_setmetatable

; 105  : 
; 106  : 			//Assign it in instances
; 107  : 			lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	call	_lua_pushlightuserdata

; 108  : 			lua_pushvalue(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_pushvalue

; 109  : 			lua_rawset(L, instances_index);				//__instances[pkType] = t;

	push	ebp
	push	esi
	call	_lua_rawset
	add	esp, 40					; 00000028H
$LN2@Push@3:

; 110  : 		}
; 111  : 
; 112  : 		//VERIFY(instances_index > type_index);
; 113  : 		lua_remove(L, instances_index);

	push	ebp
	push	esi
	call	_lua_remove

; 114  : 		lua_remove(L, type_index);

	push	ebx
	push	esi
	call	_lua_remove
	add	esp, 16					; 00000010H
	pop	esi
	pop	ebp
	pop	ebx
	pop	edi

; 122  : 	}
; 123  : }

	ret	0
$LN4@Push@3:

; 115  : 
; 116  : 		//const int dt = lua_gettop(L);
; 117  : 		//VERIFY(dt == t + 1)
; 118  : 	}
; 119  : 	else
; 120  : 	{
; 121  : 		lua_pushnil(L);

	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushnil
	add	esp, 4
	pop	edi

; 122  : 	}
; 123  : }

	ret	0
?Push@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAXPAUlua_State@@PAVCvLeague@@@Z ENDP ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::Push
_TEXT	ENDS
PUBLIC	??$max@H@std@@YAABHABH0@Z			; std::max<int>
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\xutility
;	COMDAT ??$max@H@std@@YAABHABH0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@H@std@@YAABHABH0@Z PROC				; std::max<int>, COMDAT

; 3384 : 	return (_DEBUG_LT(_Left, _Right) ? _Right : _Left);

	mov	eax, DWORD PTR __Left$[esp-4]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR __Right$[esp-4]
	cmp	edx, DWORD PTR [ecx]
	jge	SHORT $LN4@max
	mov	eax, ecx
$LN4@max:

; 3385 : 	}

	ret	0
??$max@H@std@@YAABHABH0@Z ENDP				; std::max<int>
_TEXT	ENDS
PUBLIC	?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvluastaticinstance.h
;	COMDAT ?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ
_TEXT	SEGMENT
?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ PROC ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex, COMDAT

; 35   : 	return 1;

	mov	eax, 1

; 36   : }

	ret	0
?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ENDP ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvluaargtemplates.h
_TEXT	ENDS
;	COMDAT ??$toValue@W4HurryTypes@@@CvLuaArgs@@YA?AW4HurryTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4HurryTypes@@@CvLuaArgs@@YA?AW4HurryTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum HurryTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4HurryTypes@@@CvLuaArgs@@YA?AW4HurryTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum HurryTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4VictoryTypes@@@CvLuaArgs@@YA?AW4VictoryTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4VictoryTypes@@@CvLuaArgs@@YA?AW4VictoryTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum VictoryTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4VictoryTypes@@@CvLuaArgs@@YA?AW4VictoryTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum VictoryTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4TechTypes@@@CvLuaArgs@@YA?AW4TechTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4TechTypes@@@CvLuaArgs@@YA?AW4TechTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum TechTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4TechTypes@@@CvLuaArgs@@YA?AW4TechTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum TechTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4ImprovementTypes@@@CvLuaArgs@@YA?AW4ImprovementTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4ImprovementTypes@@@CvLuaArgs@@YA?AW4ImprovementTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum ImprovementTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4ImprovementTypes@@@CvLuaArgs@@YA?AW4ImprovementTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum ImprovementTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@PBVCvPlot@@@CvLuaArgs@@YAPBVCvPlot@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@PBVCvPlot@@@CvLuaArgs@@YAPBVCvPlot@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<CvPlot const *>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@PBVCvPlot@@@CvLuaArgs@@YAPBVCvPlot@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<CvPlot const *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$pushValue@W4EraTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4EraTypes@@@Z
_TEXT	SEGMENT
??$pushValue@W4EraTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4EraTypes@@@Z PROC ; CvLuaArgs::pushValue<enum EraTypes>, COMDAT
; _L$ = ecx
; _t$ = eax

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	push	eax
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	ret	0
??$pushValue@W4EraTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4EraTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum EraTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$pushValue@W4TeamTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4TeamTypes@@@Z
_TEXT	SEGMENT
??$pushValue@W4TeamTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4TeamTypes@@@Z PROC ; CvLuaArgs::pushValue<enum TeamTypes>, COMDAT
; _L$ = ecx
; _t$ = eax

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	push	eax
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	ret	0
??$pushValue@W4TeamTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4TeamTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum TeamTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$pushValue@W4CivilizationTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4CivilizationTypes@@@Z
_TEXT	SEGMENT
??$pushValue@W4CivilizationTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4CivilizationTypes@@@Z PROC ; CvLuaArgs::pushValue<enum CivilizationTypes>, COMDAT
; _L$ = ecx
; _t$ = eax

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	push	eax
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	ret	0
??$pushValue@W4CivilizationTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4CivilizationTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum CivilizationTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum PlayerTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum PlayerTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4FromUIDiploEventTypes@@@CvLuaArgs@@YA?AW4FromUIDiploEventTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4FromUIDiploEventTypes@@@CvLuaArgs@@YA?AW4FromUIDiploEventTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum FromUIDiploEventTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4FromUIDiploEventTypes@@@CvLuaArgs@@YA?AW4FromUIDiploEventTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum FromUIDiploEventTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$pushValue@W4PlayerTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
??$pushValue@W4PlayerTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4PlayerTypes@@@Z PROC ; CvLuaArgs::pushValue<enum PlayerTypes>, COMDAT
; _L$ = ecx
; _t$ = eax

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	push	eax
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	ret	0
??$pushValue@W4PlayerTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4PlayerTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum PlayerTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$pushValue@W4UnitTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4UnitTypes@@@Z
_TEXT	SEGMENT
??$pushValue@W4UnitTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4UnitTypes@@@Z PROC ; CvLuaArgs::pushValue<enum UnitTypes>, COMDAT
; _L$ = ecx
; _t$ = eax

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	push	eax
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	ret	0
??$pushValue@W4UnitTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4UnitTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum UnitTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$pushValue@W4VictoryTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4VictoryTypes@@@Z
_TEXT	SEGMENT
??$pushValue@W4VictoryTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4VictoryTypes@@@Z PROC ; CvLuaArgs::pushValue<enum VictoryTypes>, COMDAT
; _L$ = ecx
; _t$ = eax

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	push	eax
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	ret	0
??$pushValue@W4VictoryTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4VictoryTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum VictoryTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4TeamTypes@@@CvLuaArgs@@YA?AW4TeamTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4TeamTypes@@@CvLuaArgs@@YA?AW4TeamTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum TeamTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4TeamTypes@@@CvLuaArgs@@YA?AW4TeamTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum TeamTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$pushValue@W4GameStateTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4GameStateTypes@@@Z
_TEXT	SEGMENT
??$pushValue@W4GameStateTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4GameStateTypes@@@Z PROC ; CvLuaArgs::pushValue<enum GameStateTypes>, COMDAT
; _L$ = ecx
; _t$ = eax

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	push	eax
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	ret	0
??$pushValue@W4GameStateTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4GameStateTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum GameStateTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$pushValue@W4HandicapTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4HandicapTypes@@@Z
_TEXT	SEGMENT
??$pushValue@W4HandicapTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4HandicapTypes@@@Z PROC ; CvLuaArgs::pushValue<enum HandicapTypes>, COMDAT
; _L$ = ecx
; _t$ = eax

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	push	eax
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	ret	0
??$pushValue@W4HandicapTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4HandicapTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum HandicapTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$pushValue@W4CalendarTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4CalendarTypes@@@Z
_TEXT	SEGMENT
??$pushValue@W4CalendarTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4CalendarTypes@@@Z PROC ; CvLuaArgs::pushValue<enum CalendarTypes>, COMDAT
; _L$ = ecx
; _t$ = eax

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	push	eax
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	ret	0
??$pushValue@W4CalendarTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4CalendarTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum CalendarTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$pushValue@W4GameSpeedTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4GameSpeedTypes@@@Z
_TEXT	SEGMENT
??$pushValue@W4GameSpeedTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4GameSpeedTypes@@@Z PROC ; CvLuaArgs::pushValue<enum GameSpeedTypes>, COMDAT
; _L$ = ecx
; _t$ = eax

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	push	eax
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	ret	0
??$pushValue@W4GameSpeedTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4GameSpeedTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum GameSpeedTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4MultiplayerOptionTypes@@@CvLuaArgs@@YA?AW4MultiplayerOptionTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4MultiplayerOptionTypes@@@CvLuaArgs@@YA?AW4MultiplayerOptionTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum MultiplayerOptionTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4MultiplayerOptionTypes@@@CvLuaArgs@@YA?AW4MultiplayerOptionTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum MultiplayerOptionTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4UnitTypes@@@CvLuaArgs@@YA?AW4UnitTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4UnitTypes@@@CvLuaArgs@@YA?AW4UnitTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum UnitTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4UnitTypes@@@CvLuaArgs@@YA?AW4UnitTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum UnitTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4UnitClassTypes@@@CvLuaArgs@@YA?AW4UnitClassTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4UnitClassTypes@@@CvLuaArgs@@YA?AW4UnitClassTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum UnitClassTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4UnitClassTypes@@@CvLuaArgs@@YA?AW4UnitClassTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum UnitClassTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4BuildingClassTypes@@@CvLuaArgs@@YA?AW4BuildingClassTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4BuildingClassTypes@@@CvLuaArgs@@YA?AW4BuildingClassTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum BuildingClassTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4BuildingClassTypes@@@CvLuaArgs@@YA?AW4BuildingClassTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum BuildingClassTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4ProjectTypes@@@CvLuaArgs@@YA?AW4ProjectTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4ProjectTypes@@@CvLuaArgs@@YA?AW4ProjectTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum ProjectTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4ProjectTypes@@@CvLuaArgs@@YA?AW4ProjectTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum ProjectTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4SpecialUnitTypes@@@CvLuaArgs@@YA?AW4SpecialUnitTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4SpecialUnitTypes@@@CvLuaArgs@@YA?AW4SpecialUnitTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum SpecialUnitTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4SpecialUnitTypes@@@CvLuaArgs@@YA?AW4SpecialUnitTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum SpecialUnitTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@PBD@CvLuaArgs@@YAPBDPAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@PBD@CvLuaArgs@@YAPBDPAUlua_State@@H@Z PROC	; CvLuaArgs::toValue<char const *>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@PBD@CvLuaArgs@@YAPBDPAUlua_State@@H@Z ENDP	; CvLuaArgs::toValue<char const *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$pushValue@I@CvLuaArgs@@YAXPAUlua_State@@I@Z
_TEXT	SEGMENT
??$pushValue@I@CvLuaArgs@@YAXPAUlua_State@@I@Z PROC	; CvLuaArgs::pushValue<unsigned int>, COMDAT
; _L$ = ecx
; _t$ = eax

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	push	eax
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	ret	0
??$pushValue@I@CvLuaArgs@@YAXPAUlua_State@@I@Z ENDP	; CvLuaArgs::pushValue<unsigned int>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4LeaderHeadTypes@@@CvLuaArgs@@YA?AW4LeaderHeadTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4LeaderHeadTypes@@@CvLuaArgs@@YA?AW4LeaderHeadTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum LeaderHeadTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4LeaderHeadTypes@@@CvLuaArgs@@YA?AW4LeaderHeadTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum LeaderHeadTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4CivilizationTypes@@@CvLuaArgs@@YA?AW4CivilizationTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4CivilizationTypes@@@CvLuaArgs@@YA?AW4CivilizationTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum CivilizationTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4CivilizationTypes@@@CvLuaArgs@@YA?AW4CivilizationTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum CivilizationTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4YieldTypes@@@CvLuaArgs@@YA?AW4YieldTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4YieldTypes@@@CvLuaArgs@@YA?AW4YieldTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum YieldTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4YieldTypes@@@CvLuaArgs@@YA?AW4YieldTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum YieldTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum BuildingTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum BuildingTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4ControlTypes@@@CvLuaArgs@@YA?AW4ControlTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4ControlTypes@@@CvLuaArgs@@YA?AW4ControlTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum ControlTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4ControlTypes@@@CvLuaArgs@@YA?AW4ControlTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum ControlTypes>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAW4BeliefTypes@@PAW41@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAW4BeliefTypes@@0@Z ; std::_Ptr_cat<enum BeliefTypes *,enum BeliefTypes *>
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\xutility
;	COMDAT ??$_Ptr_cat@PAW4BeliefTypes@@PAW41@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAW4BeliefTypes@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAW4BeliefTypes@@PAW41@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAW4BeliefTypes@@0@Z PROC ; std::_Ptr_cat<enum BeliefTypes *,enum BeliefTypes *>, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@PAW4BeliefTypes@@PAW41@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAW4BeliefTypes@@0@Z ENDP ; std::_Ptr_cat<enum BeliefTypes *,enum BeliefTypes *>
_TEXT	ENDS
PUBLIC	??$_Destroy@W4BeliefTypes@@@std@@YAXPAW4BeliefTypes@@@Z ; std::_Destroy<enum BeliefTypes>
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\xmemory
;	COMDAT ??$_Destroy@W4BeliefTypes@@@std@@YAXPAW4BeliefTypes@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@W4BeliefTypes@@@std@@YAXPAW4BeliefTypes@@@Z PROC ; std::_Destroy<enum BeliefTypes>, COMDAT

; 59   : 	_DESTRUCTOR(_Ty, _Ptr);
; 60   : 	}

	ret	0
??$_Destroy@W4BeliefTypes@@@std@@YAXPAW4BeliefTypes@@@Z ENDP ; std::_Destroy<enum BeliefTypes>
_TEXT	ENDS
PUBLIC	??0CvString@@QAE@XZ				; CvString::CvString
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
;	COMDAT ??0CvString@@QAE@XZ
_TEXT	SEGMENT
??0CvString@@QAE@XZ PROC				; CvString::CvString, COMDAT
; _this$ = ecx

; 23   : 	CvString() {}

	push	esi
	mov	esi, ecx
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, esi
	pop	esi
	ret	0
??0CvString@@QAE@XZ ENDP				; CvString::CvString
_TEXT	ENDS
PUBLIC	??1CvString@@QAE@XZ				; CvString::~CvString
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??1CvString@@QAE@XZ
_TEXT	SEGMENT
??1CvString@@QAE@XZ PROC				; CvString::~CvString, COMDAT
; _this$ = ecx

; 28   : 	~CvString() {}

	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
??1CvString@@QAE@XZ ENDP				; CvString::~CvString
_TEXT	ENDS
PUBLIC	??BCvString@@QBEPBDXZ				; CvString::operator char const *
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??BCvString@@QBEPBDXZ
_TEXT	SEGMENT
??BCvString@@QBEPBDXZ PROC				; CvString::operator char const *, COMDAT
; _this$ = ecx

; 31   : 	operator const char*() const 	{ return c_str(); }												

	jmp	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
??BCvString@@QBEPBDXZ ENDP				; CvString::operator char const *
_TEXT	ENDS
PUBLIC	?GetCString@CvString@@QBEPBDXZ			; CvString::GetCString
; Function compile flags: /Ogtpy
;	COMDAT ?GetCString@CvString@@QBEPBDXZ
_TEXT	SEGMENT
?GetCString@CvString@@QBEPBDXZ PROC			; CvString::GetCString, COMDAT
; _this$ = ecx

; 42   : 	const char* GetCString() const 	{ return c_str(); }

	jmp	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
?GetCString@CvString@@QBEPBDXZ ENDP			; CvString::GetCString
_TEXT	ENDS
PUBLIC	?GetLength@CvString@@QBEHXZ			; CvString::GetLength
EXTRN	__imp_?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?GetLength@CvString@@QBEHXZ
_TEXT	SEGMENT
?GetLength@CvString@@QBEHXZ PROC			; CvString::GetLength, COMDAT
; _this$ = ecx

; 46   : 	int GetLength() const { return (int) size(); }

	jmp	DWORD PTR __imp_?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
?GetLength@CvString@@QBEHXZ ENDP			; CvString::GetLength
_TEXT	ENDS
PUBLIC	?GetDescriptionKey@CvBaseInfo@@QBEPBDXZ		; CvBaseInfo::GetDescriptionKey
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvinfos.h
;	COMDAT ?GetDescriptionKey@CvBaseInfo@@QBEPBDXZ
_TEXT	SEGMENT
?GetDescriptionKey@CvBaseInfo@@QBEPBDXZ PROC		; CvBaseInfo::GetDescriptionKey, COMDAT
; _this$ = ecx

; 69   : 		return m_strDescriptionKey.c_str();

	add	ecx, 64					; 00000040H
	jmp	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
?GetDescriptionKey@CvBaseInfo@@QBEPBDXZ ENDP		; CvBaseInfo::GetDescriptionKey
_TEXT	ENDS
PUBLIC	?getMap@CvGlobals@@QAEAAVCvMap@@XZ		; CvGlobals::getMap
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
;	COMDAT ?getMap@CvGlobals@@QAEAAVCvMap@@XZ
_TEXT	SEGMENT
?getMap@CvGlobals@@QAEAAVCvMap@@XZ PROC			; CvGlobals::getMap, COMDAT
; _this$ = ecx

; 175  : 		return *m_map;    // inlined for perf reasons, do not use outside of dll

	mov	eax, DWORD PTR [ecx+52]

; 176  : 	}

	ret	0
?getMap@CvGlobals@@QAEAAVCvMap@@XZ ENDP			; CvGlobals::getMap
_TEXT	ENDS
PUBLIC	?getGame@CvGlobals@@QAEAAVCvGame@@XZ		; CvGlobals::getGame
; Function compile flags: /Ogtpy
;	COMDAT ?getGame@CvGlobals@@QAEAAVCvGame@@XZ
_TEXT	SEGMENT
?getGame@CvGlobals@@QAEAAVCvGame@@XZ PROC		; CvGlobals::getGame, COMDAT
; _this$ = ecx

; 183  : 		return *m_game;    // inlined for perf reasons, do not use outside of dll

	mov	eax, DWORD PTR [ecx+48]

; 184  : 	}

	ret	0
?getGame@CvGlobals@@QAEAAVCvGame@@XZ ENDP		; CvGlobals::getGame
_TEXT	ENDS
PUBLIC	?getDLLIFace@CvGlobals@@QAEPAVICvEngineUtility4@@XZ ; CvGlobals::getDLLIFace
; Function compile flags: /Ogtpy
;	COMDAT ?getDLLIFace@CvGlobals@@QAEPAVICvEngineUtility4@@XZ
_TEXT	SEGMENT
?getDLLIFace@CvGlobals@@QAEPAVICvEngineUtility4@@XZ PROC ; CvGlobals::getDLLIFace, COMDAT
; _this$ = ecx

; 7703 : 		return m_pDLL;

	mov	eax, DWORD PTR [ecx+8564]

; 7704 : 	}

	ret	0
?getDLLIFace@CvGlobals@@QAEPAVICvEngineUtility4@@XZ ENDP ; CvGlobals::getDLLIFace
_TEXT	ENDS
PUBLIC	?getPlayer@CvPlayerAI@@SAAAV1@W4PlayerTypes@@@Z	; CvPlayerAI::getPlayer
EXTRN	?m_aPlayers@CvPlayerAI@@1PAV1@A:DWORD		; CvPlayerAI::m_aPlayers
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvplayerai.h
;	COMDAT ?getPlayer@CvPlayerAI@@SAAAV1@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_ePlayer$ = 8						; size = 4
?getPlayer@CvPlayerAI@@SAAAV1@W4PlayerTypes@@@Z PROC	; CvPlayerAI::getPlayer, COMDAT

; 28   : 		CvAssertMsg(ePlayer != NO_PLAYER, "Player is not assigned a valid value");
; 29   : 		CvAssertMsg(ePlayer < MAX_PLAYERS, "Player is not assigned a valid value");
; 30   : 		return m_aPlayers[ePlayer];

	mov	eax, DWORD PTR _ePlayer$[esp-4]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers

; 31   : 	}

	ret	0
?getPlayer@CvPlayerAI@@SAAAV1@W4PlayerTypes@@@Z ENDP	; CvPlayerAI::getPlayer
_TEXT	ENDS
PUBLIC	?getX@CvPlot@@QBEHXZ				; CvPlot::getX
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvplot.h
;	COMDAT ?getX@CvPlot@@QBEHXZ
_TEXT	SEGMENT
?getX@CvPlot@@QBEHXZ PROC				; CvPlot::getX, COMDAT
; _this$ = ecx

; 307  : 		return m_iX;

	movsx	eax, WORD PTR [ecx]

; 308  : 	}

	ret	0
?getX@CvPlot@@QBEHXZ ENDP				; CvPlot::getX
_TEXT	ENDS
PUBLIC	?getY@CvPlot@@QBEHXZ				; CvPlot::getY
; Function compile flags: /Ogtpy
;	COMDAT ?getY@CvPlot@@QBEHXZ
_TEXT	SEGMENT
?getY@CvPlot@@QBEHXZ PROC				; CvPlot::getY, COMDAT
; _this$ = ecx

; 312  : 		return m_iY;

	movsx	eax, WORD PTR [ecx+2]

; 313  : 	}

	ret	0
?getY@CvPlot@@QBEHXZ ENDP				; CvPlot::getY
_TEXT	ENDS
PUBLIC	?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ		; CvPlot::getPlotCity
EXTRN	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z:PROC	; CvPlayer::getCity
; Function compile flags: /Ogtpy
;	COMDAT ?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ
_TEXT	SEGMENT
?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ PROC		; CvPlot::getPlotCity, COMDAT
; _this$ = ecx

; 533  : 		if((m_plotCity.eOwner >= 0) && m_plotCity.eOwner < MAX_PLAYERS)

	mov	eax, DWORD PTR [ecx+104]
	test	eax, eax
	jl	SHORT $LN1@getPlotCit
	cmp	eax, 64					; 00000040H
	jge	SHORT $LN1@getPlotCit

; 534  : 			return (GET_PLAYER((PlayerTypes)m_plotCity.eOwner).getCity(m_plotCity.iID));

	mov	ecx, DWORD PTR [ecx+108]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	ecx
	mov	ecx, eax
	call	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z	; CvPlayer::getCity

; 537  : 	}

	ret	0
$LN1@getPlotCit:

; 535  : 
; 536  : 		return NULL;

	xor	eax, eax

; 537  : 	}

	ret	0
?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ ENDP		; CvPlot::getPlotCity
_TEXT	ENDS
PUBLIC	?coordRange@@YAHHH_N@Z				; coordRange
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvmap.h
;	COMDAT ?coordRange@@YAHHH_N@Z
_TEXT	SEGMENT
_iCoord$ = 8						; size = 4
_iRange$ = 12						; size = 4
_bWrap$ = 16						; size = 1
?coordRange@@YAHHH_N@Z PROC				; coordRange, COMDAT

; 88   : 	if(bWrap)

	cmp	BYTE PTR _bWrap$[esp-4], 0
	mov	eax, DWORD PTR _iCoord$[esp-4]
	je	SHORT $LN5@coordRange

; 89   : 	{
; 90   : 		if(iCoord < 0)
; 91   : 		{
; 92   : 			return (iRange + (iCoord % iRange));

	mov	ecx, DWORD PTR _iRange$[esp-4]
	test	eax, eax
	jge	SHORT $LN3@coordRange
	cdq
	idiv	ecx
	mov	eax, edx
	add	eax, ecx

; 97   : 		}
; 98   : 	}
; 99   : 
; 100  : 	return iCoord;
; 101  : }

	ret	0
$LN3@coordRange:

; 93   : 		}
; 94   : 		else if(iCoord >= iRange)

	cmp	eax, ecx
	jl	SHORT $LN5@coordRange

; 95   : 		{
; 96   : 			return (iCoord % iRange);

	cdq
	idiv	ecx
	mov	eax, edx
$LN5@coordRange:

; 97   : 		}
; 98   : 	}
; 99   : 
; 100  : 	return iCoord;
; 101  : }

	ret	0
?coordRange@@YAHHH_N@Z ENDP				; coordRange
_TEXT	ENDS
PUBLIC	?getGridWidth@CvMap@@QBEHXZ			; CvMap::getGridWidth
; Function compile flags: /Ogtpy
;	COMDAT ?getGridWidth@CvMap@@QBEHXZ
_TEXT	SEGMENT
?getGridWidth@CvMap@@QBEHXZ PROC			; CvMap::getGridWidth, COMDAT
; _this$ = ecx

; 198  : 		return m_iGridWidth;

	mov	eax, DWORD PTR [ecx+4020]

; 199  : 	}

	ret	0
?getGridWidth@CvMap@@QBEHXZ ENDP			; CvMap::getGridWidth
_TEXT	ENDS
PUBLIC	?getGridHeight@CvMap@@QBEHXZ			; CvMap::getGridHeight
; Function compile flags: /Ogtpy
;	COMDAT ?getGridHeight@CvMap@@QBEHXZ
_TEXT	SEGMENT
?getGridHeight@CvMap@@QBEHXZ PROC			; CvMap::getGridHeight, COMDAT
; _this$ = ecx

; 206  : 		return m_iGridHeight;

	mov	eax, DWORD PTR [ecx+4024]

; 207  : 	}

	ret	0
?getGridHeight@CvMap@@QBEHXZ ENDP			; CvMap::getGridHeight
_TEXT	ENDS
PUBLIC	?isWrapX@CvMap@@QBE_NXZ				; CvMap::isWrapX
; Function compile flags: /Ogtpy
;	COMDAT ?isWrapX@CvMap@@QBE_NXZ
_TEXT	SEGMENT
?isWrapX@CvMap@@QBE_NXZ PROC				; CvMap::isWrapX, COMDAT
; _this$ = ecx

; 228  : 		return m_bWrapX;

	mov	al, BYTE PTR [ecx+4056]

; 229  : 	}

	ret	0
?isWrapX@CvMap@@QBE_NXZ ENDP				; CvMap::isWrapX
_TEXT	ENDS
PUBLIC	?isWrapY@CvMap@@QBE_NXZ				; CvMap::isWrapY
; Function compile flags: /Ogtpy
;	COMDAT ?isWrapY@CvMap@@QBE_NXZ
_TEXT	SEGMENT
?isWrapY@CvMap@@QBE_NXZ PROC				; CvMap::isWrapY, COMDAT
; _this$ = ecx

; 233  : 		return m_bWrapY;

	mov	al, BYTE PTR [ecx+4057]

; 234  : 	}

	ret	0
?isWrapY@CvMap@@QBE_NXZ ENDP				; CvMap::isWrapY
_TEXT	ENDS
PUBLIC	?SetMinimumFaithNextPantheon@CvGameReligions@@QAEXH@Z ; CvGameReligions::SetMinimumFaithNextPantheon
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.h
;	COMDAT ?SetMinimumFaithNextPantheon@CvGameReligions@@QAEXH@Z
_TEXT	SEGMENT
_iMinFaith$ = 8						; size = 4
?SetMinimumFaithNextPantheon@CvGameReligions@@QAEXH@Z PROC ; CvGameReligions::SetMinimumFaithNextPantheon, COMDAT
; _this$ = ecx

; 186  : 		m_iMinimumFaithForNextPantheon = iMinFaith;

	mov	eax, DWORD PTR _iMinFaith$[esp-4]
	mov	DWORD PTR [ecx+5264], eax

; 187  : 	};

	ret	4
?SetMinimumFaithNextPantheon@CvGameReligions@@QAEXH@Z ENDP ; CvGameReligions::SetMinimumFaithNextPantheon
_TEXT	ENDS
PUBLIC	?GetMinimumFaithNextPantheon@CvGameReligions@@QBEHXZ ; CvGameReligions::GetMinimumFaithNextPantheon
; Function compile flags: /Ogtpy
;	COMDAT ?GetMinimumFaithNextPantheon@CvGameReligions@@QBEHXZ
_TEXT	SEGMENT
?GetMinimumFaithNextPantheon@CvGameReligions@@QBEHXZ PROC ; CvGameReligions::GetMinimumFaithNextPantheon, COMDAT
; _this$ = ecx

; 190  : 		return m_iMinimumFaithForNextPantheon;

	mov	eax, DWORD PTR [ecx+5264]

; 191  : 	};

	ret	0
?GetMinimumFaithNextPantheon@CvGameReligions@@QBEHXZ ENDP ; CvGameReligions::GetMinimumFaithNextPantheon
_TEXT	ENDS
PUBLIC	?SetNumExtraChildrenFunc@CvAStar@@QAEXP6AHPAVCvAStarNode@@PAV1@@Z@Z ; CvAStar::SetNumExtraChildrenFunc
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvastar.h
;	COMDAT ?SetNumExtraChildrenFunc@CvAStar@@QAEXP6AHPAVCvAStarNode@@PAV1@@Z@Z
_TEXT	SEGMENT
_newNumExtraChildrenFunc$ = 8				; size = 4
?SetNumExtraChildrenFunc@CvAStar@@QAEXP6AHPAVCvAStarNode@@PAV1@@Z@Z PROC ; CvAStar::SetNumExtraChildrenFunc, COMDAT
; _this$ = ecx

; 350  : 		udNumExtraChildrenFunc = newNumExtraChildrenFunc;

	mov	eax, DWORD PTR _newNumExtraChildrenFunc$[esp-4]
	mov	DWORD PTR [ecx+28], eax

; 351  : 	}

	ret	4
?SetNumExtraChildrenFunc@CvAStar@@QAEXP6AHPAVCvAStarNode@@PAV1@@Z@Z ENDP ; CvAStar::SetNumExtraChildrenFunc
_TEXT	ENDS
PUBLIC	?SetExtraChildGetterFunc@CvAStar@@QAEXP6AHPAVCvAStarNode@@HAAH1PAV1@@Z@Z ; CvAStar::SetExtraChildGetterFunc
; Function compile flags: /Ogtpy
;	COMDAT ?SetExtraChildGetterFunc@CvAStar@@QAEXP6AHPAVCvAStarNode@@HAAH1PAV1@@Z@Z
_TEXT	SEGMENT
_newGetExtraChildFunc$ = 8				; size = 4
?SetExtraChildGetterFunc@CvAStar@@QAEXP6AHPAVCvAStarNode@@HAAH1PAV1@@Z@Z PROC ; CvAStar::SetExtraChildGetterFunc, COMDAT
; _this$ = ecx

; 364  : 		udGetExtraChildFunc = newGetExtraChildFunc;

	mov	eax, DWORD PTR _newGetExtraChildFunc$[esp-4]
	mov	DWORD PTR [ecx+32], eax

; 365  : 	}

	ret	4
?SetExtraChildGetterFunc@CvAStar@@QAEXP6AHPAVCvAStarNode@@HAAH1PAV1@@Z@Z ENDP ; CvAStar::SetExtraChildGetterFunc
_TEXT	ENDS
PUBLIC	?size@?$BaseVector@VCvGreatWork@@$0A@@@QBEIXZ	; BaseVector<CvGreatWork,0>::size
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ?size@?$BaseVector@VCvGreatWork@@$0A@@@QBEIXZ
_TEXT	SEGMENT
?size@?$BaseVector@VCvGreatWork@@$0A@@@QBEIXZ PROC	; BaseVector<CvGreatWork,0>::size, COMDAT
; _this$ = ecx

; 169  : 		return m_uiCurrSize;

	mov	eax, DWORD PTR [ecx+4]

; 170  : 	};

	ret	0
?size@?$BaseVector@VCvGreatWork@@$0A@@@QBEIXZ ENDP	; BaseVector<CvGreatWork,0>::size
_TEXT	ENDS
PUBLIC	?dxWrap@@YAHH@Z					; dxWrap
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvgamecoreutils.h
;	COMDAT ?dxWrap@@YAHH@Z
_TEXT	SEGMENT
_iDX$ = 8						; size = 4
?dxWrap@@YAHH@Z PROC					; dxWrap, COMDAT

; 74   : 	const CvMap& kMap = GC.getMap();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52

; 75   : 	return wrapCoordDifference(iDX, kMap.getGridWidth(), kMap.isWrapX());

	mov	edx, DWORD PTR [eax+4020]
	cmp	BYTE PTR [eax+4056], 0
	mov	eax, DWORD PTR _iDX$[esp-4]
	je	SHORT $LN13@dxWrap
	mov	ecx, edx
	shr	ecx, 1
	cmp	eax, ecx
	jle	SHORT $LN11@dxWrap
	sub	eax, edx

; 76   : }

	ret	0

; 75   : 	return wrapCoordDifference(iDX, kMap.getGridWidth(), kMap.isWrapX());

$LN11@dxWrap:
	neg	ecx
	cmp	eax, ecx
	jge	SHORT $LN13@dxWrap
	add	eax, edx
$LN13@dxWrap:

; 76   : }

	ret	0
?dxWrap@@YAHH@Z ENDP					; dxWrap
_TEXT	ENDS
PUBLIC	?dyWrap@@YAHH@Z					; dyWrap
; Function compile flags: /Ogtpy
;	COMDAT ?dyWrap@@YAHH@Z
_TEXT	SEGMENT
_iDY$ = 8						; size = 4
?dyWrap@@YAHH@Z PROC					; dyWrap, COMDAT

; 80   : 	const CvMap& kMap = GC.getMap();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52

; 81   : 	return wrapCoordDifference(iDY, kMap.getGridHeight(), kMap.isWrapY());

	mov	edx, DWORD PTR [eax+4024]
	cmp	BYTE PTR [eax+4057], 0
	mov	eax, DWORD PTR _iDY$[esp-4]
	je	SHORT $LN13@dyWrap
	mov	ecx, edx
	shr	ecx, 1
	cmp	eax, ecx
	jle	SHORT $LN11@dyWrap
	sub	eax, edx

; 82   : }

	ret	0

; 81   : 	return wrapCoordDifference(iDY, kMap.getGridHeight(), kMap.isWrapY());

$LN11@dyWrap:
	neg	ecx
	cmp	eax, ecx
	jge	SHORT $LN13@dyWrap
	add	eax, edx
$LN13@dyWrap:

; 82   : }

	ret	0
?dyWrap@@YAHH@Z ENDP					; dyWrap
_TEXT	ENDS
PUBLIC	?plotDistance@@YAHHHHH@Z			; plotDistance
; Function compile flags: /Ogtpy
;	COMDAT ?plotDistance@@YAHHHHH@Z
_TEXT	SEGMENT
_iDX$ = 8						; size = 4
_iX1$ = 8						; size = 4
_iY1$ = 12						; size = 4
_iDY$ = 16						; size = 4
_iX2$ = 16						; size = 4
_iY2$ = 20						; size = 4
?plotDistance@@YAHHHHH@Z PROC				; plotDistance, COMDAT

; 145  : 	int iDX;
; 146  : 	int iWrappedDX = dxWrap(iX2 - iX1);

	mov	eax, DWORD PTR _iX2$[esp-4]
	sub	eax, DWORD PTR _iX1$[esp-4]
	push	ebx
	mov	ebx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	cmp	BYTE PTR [ebx+4056], 0
	mov	edx, DWORD PTR [ebx+4020]
	push	ebp
	push	esi
	je	SHORT $LN13@plotDistan
	mov	ecx, edx
	shr	ecx, 1
	cmp	eax, ecx
	jle	SHORT $LN15@plotDistan
	sub	eax, edx
	jmp	SHORT $LN13@plotDistan
$LN15@plotDistan:
	neg	ecx
	cmp	eax, ecx
	lea	ecx, DWORD PTR [edx+eax]
	jl	SHORT $LN17@plotDistan
$LN13@plotDistan:
	mov	ecx, eax
$LN17@plotDistan:

; 147  : 	int iWrappedDY = dyWrap(iY2 - iY1);

	mov	eax, DWORD PTR _iY2$[esp+8]
	mov	esi, DWORD PTR [ebx+4024]
	push	edi
	mov	edi, DWORD PTR _iY1$[esp+12]
	sub	eax, edi
	cmp	BYTE PTR [ebx+4057], 0
	je	SHORT $LN27@plotDistan
	mov	edx, esi
	shr	edx, 1
	cmp	eax, edx
	jle	SHORT $LN29@plotDistan
	sub	eax, esi
	jmp	SHORT $LN27@plotDistan
$LN29@plotDistan:
	neg	edx
	cmp	eax, edx
	lea	ebp, DWORD PTR [esi+eax]
	jl	SHORT $LN31@plotDistan
$LN27@plotDistan:
	mov	ebp, eax
$LN31@plotDistan:

; 148  : 	int iDY = abs(iWrappedDY);

	mov	eax, ebp
	cdq
	xor	eax, edx
	sub	eax, edx
	mov	DWORD PTR _iDY$[esp+12], eax

; 149  : 
; 150  : 	// convert to hex-space coordinates - the coordinate system axes are E and NE (not orthogonal)
; 151  : 	int iHX1 = xToHexspaceX(iX1, iY1);

	test	edi, edi
	jl	SHORT $LN35@plotDistan
	mov	eax, edi
	jmp	SHORT $LN59@plotDistan
$LN35@plotDistan:
	lea	eax, DWORD PTR [edi-1]
	cdq
	sub	eax, edx
$LN59@plotDistan:
	mov	esi, DWORD PTR _iX1$[esp+12]
	sar	eax, 1
	sub	esi, eax

; 152  : 	int iHX2 = xToHexspaceX(iX1 + iWrappedDX, iY1 + iWrappedDY);

	lea	eax, DWORD PTR [edi+ebp]
	pop	edi
	test	eax, eax
	jge	SHORT $LN60@plotDistan
	dec	eax
	cdq
	sub	eax, edx
$LN60@plotDistan:

; 153  : 
; 154  : 	iDX = abs(dxWrap(iHX2 - iHX1));

	mov	edx, DWORD PTR [ebx+4020]
	sar	eax, 1
	sub	ecx, eax
	add	ecx, DWORD PTR _iX1$[esp+8]
	sub	ecx, esi
	cmp	BYTE PTR [ebx+4056], 0
	je	SHORT $LN49@plotDistan
	mov	eax, edx
	shr	eax, 1
	cmp	ecx, eax
	jle	SHORT $LN51@plotDistan
	mov	eax, ecx
	sub	eax, edx
	jmp	SHORT $LN53@plotDistan
$LN51@plotDistan:
	neg	eax
	cmp	ecx, eax
	lea	eax, DWORD PTR [edx+ecx]
	jl	SHORT $LN53@plotDistan
$LN49@plotDistan:
	mov	eax, ecx
$LN53@plotDistan:
	cdq
	xor	eax, edx
	sub	eax, edx

; 155  : 
; 156  : #ifdef NQM_GAME_CORE_UTILS_OPTIMIZATIONS
; 157  : 	if (((iHX2 - iHX1) ^ (iWrappedDY)) >= 0)  // the signs match
; 158  : #else
; 159  : 	if((iHX2 - iHX1 >= 0) == (iWrappedDY >= 0))  // the signs match

	xor	edx, edx
	test	ecx, ecx
	setge	dl
	xor	ecx, ecx
	test	ebp, ebp
	setge	cl
	pop	esi
	pop	ebp
	mov	DWORD PTR _iDX$[esp], eax
	pop	ebx
	cmp	edx, ecx
	jne	SHORT $LN2@plotDistan

; 160  : #endif
; 161  : 	{
; 162  : 		return iDX + iDY;

	mov	edx, DWORD PTR _iDY$[esp-4]
	add	eax, edx

; 170  : #endif
; 171  : 	}
; 172  : }

	ret	0
$LN2@plotDistan:

; 163  : 	}
; 164  : 	else
; 165  : 	{
; 166  : #ifdef NQM_FAST_COMP
; 167  : 		return (MAX(iDX, iDY));
; 168  : #else
; 169  : 		return (std::max(iDX, iDY));

	cmp	eax, DWORD PTR _iDY$[esp-4]
	lea	eax, DWORD PTR _iDY$[esp-4]
	jl	SHORT $LN58@plotDistan
	lea	eax, DWORD PTR _iDX$[esp-4]
$LN58@plotDistan:
	mov	eax, DWORD PTR [eax]

; 170  : #endif
; 171  : 	}
; 172  : }

	ret	0
?plotDistance@@YAHHHHH@Z ENDP				; plotDistance
_TEXT	ENDS
PUBLIC	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluagame.cpp
;	COMDAT ?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z PROC ; CvLuaGame::GetInstance, COMDAT

; 44   : 	return &GC.getGame();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48

; 45   : }

	ret	0
?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ENDP ; CvLuaGame::GetInstance
_TEXT	ENDS
PUBLIC	?lCanHandleAction@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCanHandleAction
EXTRN	?canHandleAction@CvGame@@QAE_NHPAVCvPlot@@_N@Z:PROC ; CvGame::canHandleAction
EXTRN	?luaL_optbool@@YA_NPAUlua_State@@H_N@Z:PROC	; luaL_optbool
; Function compile flags: /Ogtpy
;	COMDAT ?lCanHandleAction@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bTestVisible$ = -4					; size = 1
_L$ = 8							; size = 4
?lCanHandleAction@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lCanHandleAction, COMDAT

; 394  : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 395  : 	const int iAction = lua_tointeger(L, 1);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	1
	push	esi
	call	_lua_tointeger

; 396  : 	CvPlot* pkPlot = CvLuaPlot::GetInstance(L, 2, false);

	push	esi
	mov	ebx, eax
	call	_lua_gettop
	push	2
	push	esi
	mov	ebp, eax
	xor	edi, edi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 5
	jne	SHORT $LN5@lCanHandle
	push	OFFSET $SG225517
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCanHandle
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	edi, eax
$LN5@lCanHandle:
	push	ebp
	push	esi
	call	_lua_settop

; 397  : 	const bool bTestVisible = luaL_optbool(L, 3, 0);

	push	0
	push	3
	push	esi
	call	?luaL_optbool@@YA_NPAUlua_State@@H_N@Z	; luaL_optbool

; 398  : 	const bool bResult = GetInstance()->canHandleAction(iAction, pkPlot, bTestVisible);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 20					; 00000014H
	mov	BYTE PTR _bTestVisible$[esp+20], al
	mov	eax, DWORD PTR _bTestVisible$[esp+20]
	push	eax
	push	edi
	push	ebx
	call	?canHandleAction@CvGame@@QAE_NHPAVCvPlot@@_N@Z ; CvGame::canHandleAction

; 399  : 	lua_pushboolean(L, bResult);

	movzx	ecx, al
	push	ecx
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 400  : 	return 1;

	mov	eax, 1
	pop	ebx

; 401  : }

	pop	ecx
	ret	0
?lCanHandleAction@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lCanHandleAction
_TEXT	ENDS
PUBLIC	?lHandleAction@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lHandleAction
EXTRN	?handleAction@CvGame@@QAEXH@Z:PROC		; CvGame::handleAction
; Function compile flags: /Ogtpy
;	COMDAT ?lHandleAction@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lHandleAction@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lHandleAction, COMDAT

; 406  : 	const int iAction = lua_tointeger(L, 1);

	mov	eax, DWORD PTR _L$[esp-4]
	push	1
	push	eax
	call	_lua_tointeger

; 407  : 	GetInstance()->handleAction(iAction);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 8
	push	eax
	call	?handleAction@CvGame@@QAEXH@Z		; CvGame::handleAction

; 408  : 	return 0;

	xor	eax, eax

; 409  : }

	ret	0
?lHandleAction@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lHandleAction
_TEXT	ENDS
PUBLIC	?lCyclePlotUnits@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lCyclePlotUnits
EXTRN	?cyclePlotUnits@CvGame@@QAE_NPAVCvPlot@@_N1H@Z:PROC ; CvGame::cyclePlotUnits
; Function compile flags: /Ogtpy
;	COMDAT ?lCyclePlotUnits@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bAuto$ = -8						; size = 1
_bForward$ = -4						; size = 1
_L$ = 8							; size = 4
?lCyclePlotUnits@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lCyclePlotUnits, COMDAT

; 431  : {

	sub	esp, 8
	push	ebx
	push	ebp
	push	esi

; 432  : 	CvPlot* pkPlot = CvLuaPlot::GetInstance(L, 1);

	mov	esi, DWORD PTR _L$[esp+16]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCyclePlot
	push	OFFSET $SG225517
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCyclePlot
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCyclePlot
	xor	bl, bl
$LN5@lCyclePlot:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN4@lCyclePlot
	push	OFFSET $SG225523
	push	esi
	call	_luaL_error
	push	esi
	call	?HandleMissingInstance@CvLuaPlot@@SAXPAUlua_State@@@Z ; CvLuaPlot::HandleMissingInstance
	add	esp, 12					; 0000000cH
$LN4@lCyclePlot:

; 433  : 	const bool bForward = lua_toboolean(L, 2);

	push	2
	push	esi
	call	_lua_toboolean
	test	eax, eax
	setne	al

; 434  : 	const bool bAuto = lua_toboolean(L, 3);

	push	3
	push	esi
	mov	BYTE PTR _bForward$[esp+40], al
	call	_lua_toboolean
	test	eax, eax
	setne	cl

; 435  : 	const int iCount = lua_tointeger(L, 4);

	push	4
	push	esi
	mov	BYTE PTR _bAuto$[esp+48], cl
	call	_lua_tointeger

; 436  : 
; 437  : 	const bool bResult = GetInstance()->cyclePlotUnits(pkPlot, bForward, bAuto, iCount);

	mov	edx, DWORD PTR _bAuto$[esp+48]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 24					; 00000018H
	push	eax
	mov	eax, DWORD PTR _bForward$[esp+28]
	push	edx
	push	eax
	push	edi
	call	?cyclePlotUnits@CvGame@@QAE_NPAVCvPlot@@_N1H@Z ; CvGame::cyclePlotUnits

; 438  : 	lua_pushboolean(L, bResult);

	movzx	ecx, al
	push	ecx
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 439  : 	return 1;

	mov	eax, 1
	pop	ebx

; 440  : }

	add	esp, 8
	ret	0
?lCyclePlotUnits@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lCyclePlotUnits
_TEXT	ENDS
PUBLIC	?lSelectionListMove@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSelectionListMove
EXTRN	?selectionListMove@CvGame@@QAEXPAVCvPlot@@_N@Z:PROC ; CvGame::selectionListMove
; Function compile flags: /Ogtpy
;	COMDAT ?lSelectionListMove@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bShift$ = -4						; size = 1
_L$ = 8							; size = 4
?lSelectionListMove@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lSelectionListMove, COMDAT

; 444  : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 445  : 	CvPlot* pkPlot = CvLuaPlot::GetInstance(L, 1);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lSelection
	push	OFFSET $SG225517
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lSelection
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lSelection
	xor	bl, bl
$LN5@lSelection:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN4@lSelection
	push	OFFSET $SG225523
	push	esi
	call	_luaL_error
	push	esi
	call	?HandleMissingInstance@CvLuaPlot@@SAXPAUlua_State@@@Z ; CvLuaPlot::HandleMissingInstance
	add	esp, 12					; 0000000cH
$LN4@lSelection:

; 446  : 	const bool bShift = lua_toboolean(L, 3);

	push	3
	push	esi
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	al
	mov	BYTE PTR _bShift$[esp+20], al

; 447  : 
; 448  : 	GetInstance()->selectionListMove(pkPlot, bShift);

	mov	ecx, DWORD PTR _bShift$[esp+20]
	push	ecx
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	call	?selectionListMove@CvGame@@QAEXPAVCvPlot@@_N@Z ; CvGame::selectionListMove
	pop	edi
	pop	esi
	pop	ebp

; 449  : 	return 0;

	xor	eax, eax
	pop	ebx

; 450  : }

	pop	ecx
	ret	0
?lSelectionListMove@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lSelectionListMove
_TEXT	ENDS
PUBLIC	?lSelectionListGameNetMessage@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSelectionListGameNetMessage
EXTRN	?selectionListGameNetMessage@CvGame@@QAEXHHHHH_N0@Z:PROC ; CvGame::selectionListGameNetMessage
EXTRN	_luaL_optinteger:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?lSelectionListGameNetMessage@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bShift$ = -16						; size = 1
_bAlt$ = -12						; size = 1
_iFlags$ = -8						; size = 4
_iData4$ = -4						; size = 4
_L$ = 8							; size = 4
?lSelectionListGameNetMessage@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lSelectionListGameNetMessage, COMDAT

; 454  : {

	sub	esp, 16					; 00000010H
	push	ebx
	push	ebp
	push	esi

; 455  : 	const int eMessage	= lua_tointeger(L, 1);

	mov	esi, DWORD PTR _L$[esp+24]
	push	edi
	push	1
	push	esi
	call	_lua_tointeger

; 456  : 	const int iData2	= luaL_optint(L, 2, -1);

	push	-1
	push	2
	push	esi
	mov	edi, eax
	call	_luaL_optinteger

; 457  : 	const int iData3	= luaL_optint(L, 3, -1);

	push	-1
	push	3
	push	esi
	mov	ebx, eax
	call	_luaL_optinteger

; 458  : 	const int iData4	= luaL_optint(L, 4, -1);

	push	-1
	push	4
	push	esi
	mov	ebp, eax
	call	_luaL_optinteger

; 459  : 	const int iFlags	= luaL_optint(L, 5, 0);

	push	0
	push	5
	push	esi
	mov	DWORD PTR _iData4$[esp+88], eax
	call	_luaL_optinteger

; 460  : 	const bool bAlt		= luaL_optbool(L, 6, 0);

	push	0
	push	6
	push	esi
	mov	DWORD PTR _iFlags$[esp+100], eax
	call	?luaL_optbool@@YA_NPAUlua_State@@H_N@Z	; luaL_optbool
	add	esp, 68					; 00000044H

; 461  : 	const bool bShift	= luaL_optbool(L, 7, 0);

	push	0
	push	7
	push	esi
	mov	BYTE PTR _bAlt$[esp+44], al
	call	?luaL_optbool@@YA_NPAUlua_State@@H_N@Z	; luaL_optbool

; 462  : 
; 463  : 	GetInstance()->selectionListGameNetMessage(eMessage, iData2, iData3, iData4, iFlags, bAlt, bShift);

	mov	ecx, DWORD PTR _bAlt$[esp+44]
	mov	edx, DWORD PTR _iFlags$[esp+44]
	add	esp, 12					; 0000000cH
	mov	BYTE PTR _bShift$[esp+32], al
	mov	eax, DWORD PTR _bShift$[esp+32]
	push	eax
	mov	eax, DWORD PTR _iData4$[esp+36]
	push	ecx
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edx
	push	eax
	push	ebp
	push	ebx
	push	edi
	call	?selectionListGameNetMessage@CvGame@@QAEXHHHHH_N0@Z ; CvGame::selectionListGameNetMessage
	pop	edi
	pop	esi
	pop	ebp

; 464  : 	return 0;

	xor	eax, eax
	pop	ebx

; 465  : }

	add	esp, 16					; 00000010H
	ret	0
?lSelectionListGameNetMessage@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lSelectionListGameNetMessage
_TEXT	ENDS
PUBLIC	?lSelectedCitiesGameNetMessage@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSelectedCitiesGameNetMessage
EXTRN	?selectedCitiesGameNetMessage@CvGame@@QAEXHHHH_N000@Z:PROC ; CvGame::selectedCitiesGameNetMessage
; Function compile flags: /Ogtpy
;	COMDAT ?lSelectedCitiesGameNetMessage@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bCtrl$ = -20						; size = 1
_bShift$ = -16						; size = 1
_bAlt$ = -12						; size = 1
_bOption$ = -8						; size = 1
_iData4$ = -4						; size = 4
_L$ = 8							; size = 4
?lSelectedCitiesGameNetMessage@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lSelectedCitiesGameNetMessage, COMDAT

; 469  : {

	sub	esp, 20					; 00000014H
	push	ebx
	push	ebp
	push	esi

; 470  : 	const int eMessage = lua_tointeger(L, 1);

	mov	esi, DWORD PTR _L$[esp+28]
	push	edi
	push	1
	push	esi
	call	_lua_tointeger

; 471  : 	const int iData2 = luaL_optint(L, 2, -1);

	push	-1
	push	2
	push	esi
	mov	edi, eax
	call	_luaL_optinteger

; 472  : 	const int iData3 = luaL_optint(L, 3, -1);

	push	-1
	push	3
	push	esi
	mov	ebx, eax
	call	_luaL_optinteger

; 473  : 	const int iData4 = luaL_optint(L, 4, -1);

	push	-1
	push	4
	push	esi
	mov	ebp, eax
	call	_luaL_optinteger

; 474  : 	const bool bOption	= luaL_optbool(L, 5, 0);

	push	0
	push	5
	push	esi
	mov	DWORD PTR _iData4$[esp+92], eax
	call	?luaL_optbool@@YA_NPAUlua_State@@H_N@Z	; luaL_optbool

; 475  : 	const bool bAlt		= luaL_optbool(L, 6, 0);

	push	0
	push	6
	push	esi
	mov	BYTE PTR _bOption$[esp+104], al
	call	?luaL_optbool@@YA_NPAUlua_State@@H_N@Z	; luaL_optbool
	add	esp, 68					; 00000044H

; 476  : 	const bool bShift	= luaL_optbool(L, 7, 0);

	push	0
	push	7
	push	esi
	mov	BYTE PTR _bAlt$[esp+48], al
	call	?luaL_optbool@@YA_NPAUlua_State@@H_N@Z	; luaL_optbool

; 477  : 	const bool bCtrl	= luaL_optbool(L, 8, 0);

	push	0
	push	8
	push	esi
	mov	BYTE PTR _bShift$[esp+60], al
	call	?luaL_optbool@@YA_NPAUlua_State@@H_N@Z	; luaL_optbool

; 478  : 	GetInstance()->selectedCitiesGameNetMessage(eMessage, iData2, iData3, iData4, bOption, bAlt, bShift, bCtrl);

	mov	ecx, DWORD PTR _bShift$[esp+60]
	mov	edx, DWORD PTR _bAlt$[esp+60]
	add	esp, 24					; 00000018H
	mov	BYTE PTR _bCtrl$[esp+36], al
	mov	eax, DWORD PTR _bCtrl$[esp+36]
	push	eax
	mov	eax, DWORD PTR _bOption$[esp+40]
	push	ecx
	mov	ecx, DWORD PTR _iData4$[esp+44]
	push	edx
	push	eax
	push	ecx
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	ebp
	push	ebx
	push	edi
	call	?selectedCitiesGameNetMessage@CvGame@@QAEXHHHH_N000@Z ; CvGame::selectedCitiesGameNetMessage
	pop	edi
	pop	esi
	pop	ebp

; 479  : 	return 0;

	xor	eax, eax
	pop	ebx

; 480  : }

	add	esp, 20					; 00000014H
	ret	0
?lSelectedCitiesGameNetMessage@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lSelectedCitiesGameNetMessage
_TEXT	ENDS
PUBLIC	?lCityPushOrder@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lCityPushOrder
EXTRN	?cityPushOrder@CvGame@@QAEXPAVCvCity@@W4OrderTypes@@H_N22@Z:PROC ; CvGame::cityPushOrder
; Function compile flags: /Ogtpy
;	COMDAT ?lCityPushOrder@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bCtrl$ = -12						; size = 1
_bShift$ = -8						; size = 1
_bAlt$ = -4						; size = 1
_L$ = 8							; size = 4
?lCityPushOrder@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lCityPushOrder, COMDAT

; 484  : {

	sub	esp, 12					; 0000000cH
	push	ebx
	push	ebp
	push	esi

; 485  : 	CvCity* pkCity			= CvLuaCity::GetInstance(L, 1);

	mov	esi, DWORD PTR _L$[esp+20]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCityPushO
	push	OFFSET $SG225459
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCityPushO
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCityPushO
	xor	bl, bl
$LN5@lCityPushO:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN4@lCityPushO
	push	OFFSET $SG225465
	push	esi
	call	_luaL_error
	push	esi
	call	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
	add	esp, 12					; 0000000cH
$LN4@lCityPushO:

; 486  : 	const OrderTypes eOrder	= (OrderTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 487  : 	const int iData			= lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger

; 488  : 	const bool bAlt			= luaL_optbool(L, 4, 0);

	push	0
	push	4
	push	esi
	mov	ebp, eax
	call	?luaL_optbool@@YA_NPAUlua_State@@H_N@Z	; luaL_optbool

; 489  : 	const bool bShift		= luaL_optbool(L, 5, 0);

	push	0
	push	5
	push	esi
	mov	BYTE PTR _bAlt$[esp+68], al
	call	?luaL_optbool@@YA_NPAUlua_State@@H_N@Z	; luaL_optbool

; 490  : 	const bool bCtrl		= luaL_optbool(L, 6, 0);

	push	0
	push	6
	push	esi
	mov	BYTE PTR _bShift$[esp+80], al
	call	?luaL_optbool@@YA_NPAUlua_State@@H_N@Z	; luaL_optbool

; 491  : 
; 492  : 	GetInstance()->cityPushOrder(pkCity, eOrder, iData, bAlt, bShift, bCtrl);

	mov	ecx, DWORD PTR _bShift$[esp+80]
	mov	edx, DWORD PTR _bAlt$[esp+80]
	add	esp, 52					; 00000034H
	mov	BYTE PTR _bCtrl$[esp+28], al
	mov	eax, DWORD PTR _bCtrl$[esp+28]
	push	eax
	push	ecx
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edx
	push	ebp
	push	ebx
	push	edi
	call	?cityPushOrder@CvGame@@QAEXPAVCvCity@@W4OrderTypes@@H_N22@Z ; CvGame::cityPushOrder
	pop	edi
	pop	esi
	pop	ebp

; 493  : 	return 0;

	xor	eax, eax
	pop	ebx

; 494  : }

	add	esp, 12					; 0000000cH
	ret	0
?lCityPushOrder@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lCityPushOrder
_TEXT	ENDS
PUBLIC	?lCityPurchaseUnit@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCityPurchaseUnit
EXTRN	?CityPurchase@CvGame@@QAEXPAVCvCity@@W4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z:PROC ; CvGame::CityPurchase
; Function compile flags: /Ogtpy
;	COMDAT ?lCityPurchaseUnit@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCityPurchaseUnit@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lCityPurchaseUnit, COMDAT

; 498  : {

	push	ebx
	push	ebp
	push	esi

; 499  : 	CvCity* pkCity = CvLuaCity::GetInstance(L, 1);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCityPurch
	push	OFFSET $SG225459
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCityPurch
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCityPurch
	xor	bl, bl
$LN5@lCityPurch:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN4@lCityPurch
	push	OFFSET $SG225465
	push	esi
	call	_luaL_error
	push	esi
	call	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
	add	esp, 12					; 0000000cH
$LN4@lCityPurch:

; 500  : 	const UnitTypes eUnitType = (UnitTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 501  : 	const YieldTypes ePurchaseYield = (YieldTypes)lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger

; 502  : 
; 503  : 	GetInstance()->CityPurchase(pkCity, eUnitType, NO_BUILDING, NO_PROJECT, ePurchaseYield);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 16					; 00000010H
	push	eax
	push	-1
	push	-1
	push	ebx
	push	edi
	call	?CityPurchase@CvGame@@QAEXPAVCvCity@@W4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvGame::CityPurchase
	pop	edi
	pop	esi
	pop	ebp

; 504  : 	return 0;

	xor	eax, eax
	pop	ebx

; 505  : }

	ret	0
?lCityPurchaseUnit@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lCityPurchaseUnit
_TEXT	ENDS
PUBLIC	?lCityPurchaseBuilding@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCityPurchaseBuilding
; Function compile flags: /Ogtpy
;	COMDAT ?lCityPurchaseBuilding@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCityPurchaseBuilding@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lCityPurchaseBuilding, COMDAT

; 509  : {

	push	ebx
	push	ebp
	push	esi

; 510  : 	CvCity* pkCity = CvLuaCity::GetInstance(L, 1);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCityPurch@2
	push	OFFSET $SG225459
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCityPurch@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCityPurch@2
	xor	bl, bl
$LN5@lCityPurch@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN4@lCityPurch@2
	push	OFFSET $SG225465
	push	esi
	call	_luaL_error
	push	esi
	call	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
	add	esp, 12					; 0000000cH
$LN4@lCityPurch@2:

; 511  : 	const BuildingTypes eBuildingType = (BuildingTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 512  : 	const YieldTypes ePurchaseYield = (YieldTypes)lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger

; 513  : 
; 514  : 	GetInstance()->CityPurchase(pkCity, NO_UNIT, eBuildingType, NO_PROJECT, ePurchaseYield);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 16					; 00000010H
	push	eax
	push	-1
	push	ebx
	push	-1
	push	edi
	call	?CityPurchase@CvGame@@QAEXPAVCvCity@@W4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvGame::CityPurchase
	pop	edi
	pop	esi
	pop	ebp

; 515  : 	return 0;

	xor	eax, eax
	pop	ebx

; 516  : }

	ret	0
?lCityPurchaseBuilding@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lCityPurchaseBuilding
_TEXT	ENDS
PUBLIC	?lCityPurchaseProject@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCityPurchaseProject
; Function compile flags: /Ogtpy
;	COMDAT ?lCityPurchaseProject@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCityPurchaseProject@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lCityPurchaseProject, COMDAT

; 520  : {

	push	ebx
	push	ebp
	push	esi

; 521  : 	CvCity* pkCity = CvLuaCity::GetInstance(L, 1);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCityPurch@3
	push	OFFSET $SG225459
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCityPurch@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCityPurch@3
	xor	bl, bl
$LN5@lCityPurch@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN4@lCityPurch@3
	push	OFFSET $SG225465
	push	esi
	call	_luaL_error
	push	esi
	call	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
	add	esp, 12					; 0000000cH
$LN4@lCityPurch@3:

; 522  : 	const ProjectTypes eProjectType = (ProjectTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 523  : 	const YieldTypes ePurchaseYield = (YieldTypes)lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger

; 524  : 
; 525  : 	GetInstance()->CityPurchase(pkCity, NO_UNIT, NO_BUILDING, eProjectType, ePurchaseYield);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 16					; 00000010H
	push	eax
	push	ebx
	push	-1
	push	-1
	push	edi
	call	?CityPurchase@CvGame@@QAEXPAVCvCity@@W4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvGame::CityPurchase
	pop	edi
	pop	esi
	pop	ebp

; 526  : 	return 0;

	xor	eax, eax
	pop	ebx

; 527  : }

	ret	0
?lCityPurchaseProject@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lCityPurchaseProject
_TEXT	ENDS
PUBLIC	?lSetUnitedNationsCountdown@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetUnitedNationsCountdown
EXTRN	?SetUnitedNationsCountdown@CvGame@@QAEXH@Z:PROC	; CvGame::SetUnitedNationsCountdown
; Function compile flags: /Ogtpy
;	COMDAT ?lSetUnitedNationsCountdown@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetUnitedNationsCountdown@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lSetUnitedNationsCountdown, COMDAT

; 556  : 	int iTurns = luaL_checkint(L, 1);

	mov	eax, DWORD PTR _L$[esp-4]
	push	1
	push	eax
	call	_luaL_checkinteger

; 557  : 	GC.getGame().SetUnitedNationsCountdown(iTurns);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 8
	push	eax
	call	?SetUnitedNationsCountdown@CvGame@@QAEXH@Z ; CvGame::SetUnitedNationsCountdown

; 558  : 	return 0;

	xor	eax, eax

; 559  : }

	ret	0
?lSetUnitedNationsCountdown@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lSetUnitedNationsCountdown
_TEXT	ENDS
PUBLIC	?lGetDiploResponse@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetDiploResponse
EXTRN	__imp_??1String@Localization@@UAE@XZ:PROC
EXTRN	__imp_?toUTF8@String@Localization@@QAEPBDXZ:PROC
EXTRN	?GetDiploResponse@CvGame@@QAE?AVString@Localization@@PBD0ABV23@1@Z:PROC ; CvGame::GetDiploResponse
EXTRN	__imp_?Empty@String@Localization@@2V12@A:BYTE
EXTRN	___CxxFrameHandler3:PROC
;	COMDAT xdata$x
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
xdata$x	SEGMENT
__unwindtable$?lGetDiploResponse@CvLuaGame@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetDiploResponse@CvLuaGame@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetDiploResponse@CvLuaGame@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetDiploResponse@CvLuaGame@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluagame.cpp
xdata$x	ENDS
;	COMDAT ?lGetDiploResponse@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_response$ = -92					; size = 80
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetDiploResponse@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetDiploResponse, COMDAT

; 647  : {

	push	-1
	push	__ehhandler$?lGetDiploResponse@CvLuaGame@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi

; 648  : 	CvGame& game = GC.getGame();
; 649  : 	const char* szLeaderType = luaL_checkstring(L, 1);

	mov	esi, DWORD PTR _L$[esp+96]
	push	edi
	mov	edi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	0
	push	1
	push	esi
	call	_luaL_checklstring

; 650  : 	const char* szResponseType = luaL_checkstring(L, 2);

	push	0
	push	2
	push	esi
	mov	ebx, eax
	call	_luaL_checklstring

; 651  : 
; 652  : 	Localization::String response
; 653  : 		= game.GetDiploResponse(szLeaderType, szResponseType, Localization::String::Empty, Localization::String::Empty);

	mov	ecx, DWORD PTR __imp_?Empty@String@Localization@@2V12@A
	add	esp, 24					; 00000018H
	push	ecx
	push	ecx
	push	eax
	push	ebx
	lea	eax, DWORD PTR _response$[esp+120]
	push	eax
	mov	ecx, edi
	call	?GetDiploResponse@CvGame@@QAE?AVString@Localization@@PBD0ABV23@1@Z ; CvGame::GetDiploResponse

; 654  : 
; 655  : 	lua_pushstring(L, response.toUTF8());

	lea	ecx, DWORD PTR _response$[esp+104]
	mov	DWORD PTR __$EHRec$[esp+112], 0
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8

; 656  : 
; 657  : 	return 1;

	lea	ecx, DWORD PTR _response$[esp+104]
	mov	DWORD PTR __$EHRec$[esp+112], -1
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 658  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+104]
	pop	edi
	pop	esi
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 92					; 0000005cH
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetDiploResponse@CvLuaGame@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _response$[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__ehhandler$?lGetDiploResponse@CvLuaGame@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetDiploResponse@CvLuaGame@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetDiploResponse@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetDiploResponse
PUBLIC	?lGetTurnString@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetTurnString
EXTRN	?setDateStr@CvGameTextMgr@@SAXAAVCvString@@H_NW4CalendarTypes@@HW4GameSpeedTypes@@@Z:PROC ; CvGameTextMgr::setDateStr
EXTRN	?getGameTurn@CvGame@@QAEHXZ:PROC		; CvGame::getGameTurn
EXTRN	?getCalendar@CvGame@@QBE?AW4CalendarTypes@@XZ:PROC ; CvGame::getCalendar
EXTRN	?getStartYear@CvGame@@QBEHXZ:PROC		; CvGame::getStartYear
EXTRN	?getGameSpeedType@CvGame@@QBE?AW4GameSpeedTypes@@XZ:PROC ; CvGame::getGameSpeedType
;	COMDAT xdata$x
; File s:\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetTurnString@CvLuaGame@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetTurnString@CvLuaGame@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetTurnString@CvLuaGame@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetTurnString@CvLuaGame@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluagame.cpp
xdata$x	ENDS
;	COMDAT ?lGetTurnString@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_strString$ = -40					; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetTurnString@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetTurnString, COMDAT

; 734  : {

	push	-1
	push	__ehhandler$?lGetTurnString@CvLuaGame@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 28					; 0000001cH
	push	esi

; 735  : 	CvGame& game = GC.getGame();

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48

; 736  : 	CvString strString;

	lea	ecx, DWORD PTR _strString$[esp+44]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 737  : 	CvGameTextMgr::setDateStr(strString,
; 738  : 		game.getGameTurn(),
; 739  : 		false,
; 740  : 		game.getCalendar(),
; 741  : 		game.getStartYear(),
; 742  : 		game.getGameSpeedType());

	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[esp+52], 0
	call	?getGameSpeedType@CvGame@@QBE?AW4GameSpeedTypes@@XZ ; CvGame::getGameSpeedType
	push	eax
	mov	ecx, esi
	call	?getStartYear@CvGame@@QBEHXZ		; CvGame::getStartYear
	push	eax
	mov	ecx, esi
	call	?getCalendar@CvGame@@QBE?AW4CalendarTypes@@XZ ; CvGame::getCalendar
	push	eax
	push	0
	mov	ecx, esi
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	push	eax
	lea	eax, DWORD PTR _strString$[esp+64]
	push	eax
	call	?setDateStr@CvGameTextMgr@@SAXAAVCvString@@H_NW4CalendarTypes@@HW4GameSpeedTypes@@@Z ; CvGameTextMgr::setDateStr
	add	esp, 24					; 00000018H

; 743  : 
; 744  : 	lua_pushstring(L, strString);

	lea	ecx, DWORD PTR _strString$[esp+44]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	ecx, DWORD PTR _L$[esp+40]
	push	eax
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 745  : 	return 1;

	lea	ecx, DWORD PTR _strString$[esp+44]
	mov	DWORD PTR __$EHRec$[esp+52], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 746  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+44]
	mov	eax, 1
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetTurnString@CvLuaGame@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _strString$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetTurnString@CvLuaGame@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetTurnString@CvLuaGame@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetTurnString@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetTurnString
PUBLIC	?lGetTutorialLevel@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetTutorialLevel
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTutorialLevel@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTutorialLevel@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetTutorialLevel, COMDAT

; 890  : 	lua_pushinteger(L, gDLL->GetTutorialLevel());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+868]
	call	edx
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 891  : 	return 1;

	mov	eax, 1

; 892  : }

	ret	0
?lGetTutorialLevel@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetTutorialLevel
_TEXT	ENDS
PUBLIC	?lHasAdvisorMessageBeenSeen@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lHasAdvisorMessageBeenSeen
EXTRN	?HasAdvisorMessageBeenSeen@CvGame@@QAE_NPBD@Z:PROC ; CvGame::HasAdvisorMessageBeenSeen
; Function compile flags: /Ogtpy
;	COMDAT ?lHasAdvisorMessageBeenSeen@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lHasAdvisorMessageBeenSeen@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lHasAdvisorMessageBeenSeen, COMDAT

; 895  : {

	push	esi

; 896  : 	const char* szAdvisorMessage = luaL_checkstring(L, 1);

	mov	esi, DWORD PTR _L$[esp]
	push	0
	push	1
	push	esi
	call	_luaL_checklstring

; 897  : 	const bool bResult = GC.getGame().HasAdvisorMessageBeenSeen(szAdvisorMessage);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 12					; 0000000cH
	push	eax
	call	?HasAdvisorMessageBeenSeen@CvGame@@QAE_NPBD@Z ; CvGame::HasAdvisorMessageBeenSeen

; 898  : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8

; 899  : 	return 1;

	mov	eax, 1
	pop	esi

; 900  : }

	ret	0
?lHasAdvisorMessageBeenSeen@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lHasAdvisorMessageBeenSeen
_TEXT	ENDS
PUBLIC	?lSetAdvisorMessageHasBeenSeen@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetAdvisorMessageHasBeenSeen
EXTRN	?SetAdvisorMessageHasBeenSeen@CvGame@@QAEXPBD_N@Z:PROC ; CvGame::SetAdvisorMessageHasBeenSeen
; Function compile flags: /Ogtpy
;	COMDAT ?lSetAdvisorMessageHasBeenSeen@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bSeen$ = -4						; size = 1
_L$ = 8							; size = 4
?lSetAdvisorMessageHasBeenSeen@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lSetAdvisorMessageHasBeenSeen, COMDAT

; 903  : {

	push	ecx
	push	esi

; 904  : 	const char* szAdvisorMessage = luaL_checkstring(L, 1);

	mov	esi, DWORD PTR _L$[esp+4]
	push	edi
	push	0
	push	1
	push	esi
	call	_luaL_checklstring

; 905  : 	const bool bSeen = lua_toboolean(L, 2);

	push	2
	push	esi
	mov	edi, eax
	call	_lua_toboolean
	add	esp, 20					; 00000014H
	test	eax, eax
	setne	al
	mov	BYTE PTR _bSeen$[esp+12], al

; 906  : 	GC.getGame().SetAdvisorMessageHasBeenSeen(szAdvisorMessage, bSeen);

	mov	ecx, DWORD PTR _bSeen$[esp+12]
	push	ecx
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	call	?SetAdvisorMessageHasBeenSeen@CvGame@@QAEXPBD_N@Z ; CvGame::SetAdvisorMessageHasBeenSeen
	pop	edi

; 907  : 	return 0;

	xor	eax, eax
	pop	esi

; 908  : }

	pop	ecx
	ret	0
?lSetAdvisorMessageHasBeenSeen@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lSetAdvisorMessageHasBeenSeen
_TEXT	ENDS
PUBLIC	?lSetAdvisorBadAttackInterrupt@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetAdvisorBadAttackInterrupt
; Function compile flags: /Ogtpy
;	COMDAT ?lSetAdvisorBadAttackInterrupt@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bValue$ = -4						; size = 1
_L$ = 8							; size = 4
?lSetAdvisorBadAttackInterrupt@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lSetAdvisorBadAttackInterrupt, COMDAT

; 911  : {

	push	ecx

; 912  : 	bool bValue = lua_toboolean(L, 1);

	mov	eax, DWORD PTR _L$[esp]
	push	1
	push	eax
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	cl
	mov	BYTE PTR _bValue$[esp+4], cl

; 913  : 	gDLL->SetAdvisorBadAttackInterrupt(bValue);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _bValue$[esp+4]
	mov	edx, DWORD PTR [edx+852]
	push	eax
	call	edx

; 914  : 	return 1;

	mov	eax, 1

; 915  : }

	pop	ecx
	ret	0
?lSetAdvisorBadAttackInterrupt@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lSetAdvisorBadAttackInterrupt
_TEXT	ENDS
PUBLIC	?lSetAdvisorCityAttackInterrupt@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetAdvisorCityAttackInterrupt
; Function compile flags: /Ogtpy
;	COMDAT ?lSetAdvisorCityAttackInterrupt@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bValue$ = -4						; size = 1
_L$ = 8							; size = 4
?lSetAdvisorCityAttackInterrupt@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lSetAdvisorCityAttackInterrupt, COMDAT

; 919  : {

	push	ecx

; 920  : 	bool bValue = lua_toboolean(L, 1);

	mov	eax, DWORD PTR _L$[esp]
	push	1
	push	eax
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	cl
	mov	BYTE PTR _bValue$[esp+4], cl

; 921  : 	gDLL->SetAdvisorCityAttackInterrupt(bValue);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _bValue$[esp+4]
	mov	edx, DWORD PTR [edx+860]
	push	eax
	call	edx

; 922  : 	return 1;

	mov	eax, 1

; 923  : }

	pop	ecx
	ret	0
?lSetAdvisorCityAttackInterrupt@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lSetAdvisorCityAttackInterrupt
_TEXT	ENDS
PUBLIC	?lChangeNoNukesCount@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lChangeNoNukesCount
EXTRN	?changeNoNukesCount@CvGame@@QAEXH@Z:PROC	; CvGame::changeNoNukesCount
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeNoNukesCount@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeNoNukesCount@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lChangeNoNukesCount, COMDAT

; 978  : 	int iNumNukes = lua_tointeger(L, 2);

	mov	eax, DWORD PTR _L$[esp-4]
	push	2
	push	eax
	call	_lua_tointeger

; 979  : 	GC.getGame().changeNoNukesCount(iNumNukes);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 8
	push	eax
	call	?changeNoNukesCount@CvGame@@QAEXH@Z	; CvGame::changeNoNukesCount

; 980  : 	return 1;

	mov	eax, 1

; 981  : }

	ret	0
?lChangeNoNukesCount@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lChangeNoNukesCount
_TEXT	ENDS
PUBLIC	?lChangeNukesExploded@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lChangeNukesExploded
EXTRN	?changeNukesExploded@CvGame@@QAEXH@Z:PROC	; CvGame::changeNukesExploded
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeNukesExploded@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeNukesExploded@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lChangeNukesExploded, COMDAT

; 992  : 	int iNumNukes = lua_tointeger(L, 2);

	mov	eax, DWORD PTR _L$[esp-4]
	push	2
	push	eax
	call	_lua_tointeger

; 993  : 	GC.getGame().changeNukesExploded(iNumNukes);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 8
	push	eax
	call	?changeNukesExploded@CvGame@@QAEXH@Z	; CvGame::changeNukesExploded

; 994  : 	return 1;

	mov	eax, 1

; 995  : }

	ret	0
?lChangeNukesExploded@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lChangeNukesExploded
_TEXT	ENDS
PUBLIC	?lGetNumWorldWonders@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumWorldWonders
EXTRN	?countNumBuildings@CvPlayer@@QBEHW4BuildingTypes@@@Z:PROC ; CvPlayer::countNumBuildings
EXTRN	?isWorldWonderClass@@YA_NABVCvBuildingClassInfo@@@Z:PROC ; isWorldWonderClass
EXTRN	?GetBuildingClassInfo@CvBuildingEntry@@QBEABVCvBuildingClassInfo@@XZ:PROC ; CvBuildingEntry::GetBuildingClassInfo
EXTRN	?getNumBuildingInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumBuildingInfos
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumWorldWonders@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumWorldWonders@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetNumWorldWonders, COMDAT

; 1029 : {

	push	ebx
	push	ebp
	push	esi

; 1030 : 	int iWonderCount = 0;

	xor	ebp, ebp
	push	edi
	xor	ebx, ebx
	npad	8
$LL17@lGetNumWor:

; 1035 : 	{
; 1036 : 		eLoopPlayer = (PlayerTypes) iPlayerLoop;
; 1037 : 		CvPlayerAI& kLoopPlayer = GET_PLAYER(eLoopPlayer);

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers

; 1038 : 
; 1039 : 		// Loop through all buildings, see if they're a world wonder
; 1040 : #ifdef AUI_WARNING_FIXES
; 1041 : 		for (uint iBuildingLoop = 0; iBuildingLoop < GC.getNumBuildingInfos(); iBuildingLoop++)
; 1042 : #else
; 1043 : 		for(int iBuildingLoop = 0; iBuildingLoop < GC.getNumBuildingInfos(); iBuildingLoop++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	lea	edi, DWORD PTR [ebx+eax]
	xor	esi, esi
	call	?getNumBuildingInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumBuildingInfos
	test	eax, eax
	jle	SHORT $LN7@lGetNumWor
	npad	8
$LL5@lGetNumWor:

; 1044 : #endif
; 1045 : 		{
; 1046 : 			const BuildingTypes eBuilding = static_cast<BuildingTypes>(iBuildingLoop);
; 1047 : 			CvBuildingEntry* pkBuildingInfo = GC.getBuildingInfo(eBuilding);

	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo

; 1048 : 			if(pkBuildingInfo)

	test	eax, eax
	je	SHORT $LN4@lGetNumWor

; 1049 : 			{
; 1050 : 				if(::isWorldWonderClass(pkBuildingInfo->GetBuildingClassInfo()))

	mov	ecx, eax
	call	?GetBuildingClassInfo@CvBuildingEntry@@QBEABVCvBuildingClassInfo@@XZ ; CvBuildingEntry::GetBuildingClassInfo
	push	eax
	call	?isWorldWonderClass@@YA_NABVCvBuildingClassInfo@@@Z ; isWorldWonderClass
	add	esp, 4
	test	al, al
	je	SHORT $LN4@lGetNumWor

; 1051 : 				{
; 1052 : 					iWonderCount += kLoopPlayer.countNumBuildings(eBuilding);

	push	esi
	mov	ecx, edi
	call	?countNumBuildings@CvPlayer@@QBEHW4BuildingTypes@@@Z ; CvPlayer::countNumBuildings
	add	ebp, eax
$LN4@lGetNumWor:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	inc	esi
	call	?getNumBuildingInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumBuildingInfos
	cmp	esi, eax
	jl	SHORT $LL5@lGetNumWor
$LN7@lGetNumWor:

; 1031 : 
; 1032 : 	// Loop through all players
; 1033 : 	PlayerTypes eLoopPlayer;
; 1034 : 	for(int iPlayerLoop = 0; iPlayerLoop < MAX_PLAYERS; iPlayerLoop++)

	add	ebx, 63236				; 0000f704H
	cmp	ebx, 4047104				; 003dc100H
	jl	SHORT $LL17@lGetNumWor

; 1053 : 				}
; 1054 : 			}
; 1055 : 		}
; 1056 : 	}
; 1057 : 
; 1058 : 	lua_pushinteger(L, iWonderCount);

	mov	ecx, DWORD PTR _L$[esp+12]
	push	ebp
	push	ecx
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 1059 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1060 : }

	ret	0
?lGetNumWorldWonders@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetNumWorldWonders
_TEXT	ENDS
PUBLIC	?lSetPausePlayer@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lSetPausePlayer
EXTRN	?setPausePlayer@CvGame@@QAEXW4PlayerTypes@@@Z:PROC ; CvGame::setPausePlayer
EXTRN	?isNetworkMultiPlayer@CvGame@@QBE_NXZ:PROC	; CvGame::isNetworkMultiPlayer
; Function compile flags: /Ogtpy
;	COMDAT ?lSetPausePlayer@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetPausePlayer@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lSetPausePlayer, COMDAT

; 1193 : {

	push	esi

; 1194 : 	CvGame& game = GC.getGame();

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48

; 1195 : 	if(!game.isNetworkMultiPlayer())

	mov	ecx, esi
	call	?isNetworkMultiPlayer@CvGame@@QBE_NXZ	; CvGame::isNetworkMultiPlayer
	test	al, al
	jne	SHORT $LN6@lSetPauseP

; 1196 : 	{
; 1197 : 		int iPlayer = lua_tointeger(L, 1);

	mov	eax, DWORD PTR _L$[esp]
	push	1
	push	eax
	call	_lua_tointeger
	add	esp, 8

; 1198 : 		game.setPausePlayer((PlayerTypes)iPlayer);

	push	eax
	mov	ecx, esi
	call	?setPausePlayer@CvGame@@QAEXW4PlayerTypes@@@Z ; CvGame::setPausePlayer
$LN6@lSetPauseP:

; 1199 : 	}
; 1200 : 
; 1201 : 	return 1;

	mov	eax, 1
	pop	esi

; 1202 : }

	ret	0
?lSetPausePlayer@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lSetPausePlayer
_TEXT	ENDS
PUBLIC	?lGetFaithCost@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetFaithCost
EXTRN	?GetFaithCost@CvGame@@QBEHPAVCvUnitEntry@@@Z:PROC ; CvGame::GetFaithCost
; Function compile flags: /Ogtpy
;	COMDAT ?lGetFaithCost@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFaithCost@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetFaithCost, COMDAT

; 1224 : {

	push	esi

; 1225 : 	const UnitTypes eUnit = (UnitTypes) lua_tointeger(L, 1);

	mov	esi, DWORD PTR _L$[esp]
	push	1
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 1226 : 	CvUnitEntry* pkUnitInfo = GC.getUnitInfo(eUnit);

	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z ; CvGlobals::getUnitInfo

; 1227 : 	const int iResult = GC.getGame().GetFaithCost(pkUnitInfo);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	eax
	call	?GetFaithCost@CvGame@@QBEHPAVCvUnitEntry@@@Z ; CvGame::GetFaithCost

; 1228 : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8

; 1229 : 	return 1;

	mov	eax, 1
	pop	esi

; 1230 : }

	ret	0
?lGetFaithCost@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetFaithCost
_TEXT	ENDS
PUBLIC	?lSetGameState@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lSetGameState
EXTRN	?setGameState@CvGame@@QAEXW4GameStateTypes@@@Z:PROC ; CvGame::setGameState
; Function compile flags: /Ogtpy
;	COMDAT ?lSetGameState@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetGameState@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lSetGameState, COMDAT

; 1259 : 	int iGameState = luaL_checkint(L, 1);

	mov	eax, DWORD PTR _L$[esp-4]
	push	1
	push	eax
	call	_luaL_checkinteger

; 1260 : 	GameStateTypes eGameState = static_cast<GameStateTypes>(iGameState);
; 1261 : 
; 1262 : 	GC.getGame().setGameState(eGameState);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 8
	push	eax
	call	?setGameState@CvGame@@QAEXW4GameStateTypes@@@Z ; CvGame::setGameState

; 1263 : 	return 0;

	xor	eax, eax

; 1264 : }

	ret	0
?lSetGameState@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lSetGameState
_TEXT	ENDS
PUBLIC	?lIsOption@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lIsOption
EXTRN	?isOption@CvGame@@QBE_NPBD@Z:PROC		; CvGame::isOption
EXTRN	_lua_tolstring:PROC
EXTRN	?isOption@CvGame@@QBE_NW4GameOptionTypes@@@Z:PROC ; CvGame::isOption
EXTRN	_lua_isnumber:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?lIsOption@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsOption@CvLuaGame@@KAHPAUlua_State@@@Z PROC		; CvLuaGame::lIsOption, COMDAT

; 1377 : {

	push	esi

; 1378 : 	CvGame& kGame = GC.getGame();
; 1379 : 	bool bResult = false;
; 1380 : 	if(lua_isnumber(L, 1))

	mov	esi, DWORD PTR _L$[esp]
	push	edi
	mov	edi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	1
	push	esi
	call	_lua_isnumber
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@lIsOption

; 1381 : 		bResult = kGame.isOption((GameOptionTypes)lua_tointeger(L, 1));

	push	1
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	?isOption@CvGame@@QBE_NW4GameOptionTypes@@@Z ; CvGame::isOption

; 1382 : 	else

	jmp	SHORT $LN1@lIsOption
$LN2@lIsOption:

; 1383 : 		bResult = kGame.isOption(lua_tostring(L, 1));

	push	0
	push	1
	push	esi
	call	_lua_tolstring
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, edi
	call	?isOption@CvGame@@QBE_NPBD@Z		; CvGame::isOption
$LN1@lIsOption:

; 1384 : 
; 1385 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi

; 1386 : 	return 1;

	mov	eax, 1
	pop	esi

; 1387 : }

	ret	0
?lIsOption@CvLuaGame@@KAHPAUlua_State@@@Z ENDP		; CvLuaGame::lIsOption
_TEXT	ENDS
PUBLIC	?lSetOption@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lSetOption
EXTRN	?setOption@CvGame@@QAEXPBD_N@Z:PROC		; CvGame::setOption
EXTRN	?setOption@CvGame@@QAEXW4GameOptionTypes@@_N@Z:PROC ; CvGame::setOption
; Function compile flags: /Ogtpy
;	COMDAT ?lSetOption@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetOption@CvLuaGame@@KAHPAUlua_State@@@Z PROC		; CvLuaGame::lSetOption, COMDAT

; 1392 : {

	push	esi

; 1393 : 	CvGame& kGame = GC.getGame();
; 1394 : 	if(lua_isnumber(L, 1))

	mov	esi, DWORD PTR _L$[esp]
	push	edi
	mov	edi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	1
	push	esi
	call	_lua_isnumber
	add	esp, 8

; 1395 : 		kGame.setOption((GameOptionTypes)lua_tointeger(L, 1), lua_toboolean(L, 2));

	push	2
	push	esi
	test	eax, eax
	je	SHORT $LN2@lSetOption
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	al
	movzx	ecx, al
	push	ecx
	push	1
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	?setOption@CvGame@@QAEXW4GameOptionTypes@@_N@Z ; CvGame::setOption
	pop	edi

; 1398 : 
; 1399 : 	return 0;

	xor	eax, eax
	pop	esi

; 1400 : }

	ret	0
$LN2@lSetOption:

; 1396 : 	else
; 1397 : 		kGame.setOption(lua_tostring(L, 1), lua_toboolean(L, 2));

	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	dl
	movzx	eax, dl
	push	eax
	push	0
	push	1
	push	esi
	call	_lua_tolstring
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, edi
	call	?setOption@CvGame@@QAEXPBD_N@Z		; CvGame::setOption
	pop	edi

; 1398 : 
; 1399 : 	return 0;

	xor	eax, eax
	pop	esi

; 1400 : }

	ret	0
?lSetOption@CvLuaGame@@KAHPAUlua_State@@@Z ENDP		; CvLuaGame::lSetOption
_TEXT	ENDS
PUBLIC	?lSetVictoryValid@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetVictoryValid
EXTRN	?setVictoryValid@CvGame@@QAEXW4VictoryTypes@@_N@Z:PROC ; CvGame::setVictoryValid
; Function compile flags: /Ogtpy
;	COMDAT ?lSetVictoryValid@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bValid$ = -4						; size = 1
_L$ = 8							; size = 4
?lSetVictoryValid@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lSetVictoryValid, COMDAT

; 1458 : {

	push	ecx
	push	ebx
	push	esi

; 1459 : 	CvGame& game = GC.getGame();

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi

; 1460 : 	VictoryTypes eVictoryType = (VictoryTypes)lua_tointeger(L, 1);

	mov	edi, DWORD PTR _L$[esp+12]
	push	1
	push	edi
	call	_lua_tointeger

; 1461 : 	bool bValid = lua_toboolean(L, 2);

	push	2
	push	edi
	mov	ebx, eax
	call	_lua_toboolean
	add	esp, 16					; 00000010H
	test	eax, eax
	setne	al
	mov	BYTE PTR _bValid$[esp+16], al

; 1462 : 	game.setVictoryValid(eVictoryType, bValid);

	mov	ecx, DWORD PTR _bValid$[esp+16]
	push	ecx
	push	ebx
	mov	ecx, esi
	call	?setVictoryValid@CvGame@@QAEXW4VictoryTypes@@_N@Z ; CvGame::setVictoryValid
	pop	edi
	pop	esi

; 1463 : 
; 1464 : #ifdef AUI_WARNING_FIXES
; 1465 : 	return 0;
; 1466 : #else
; 1467 : 	return true;

	mov	eax, 1
	pop	ebx

; 1468 : #endif
; 1469 : }

	pop	ecx
	ret	0
?lSetVictoryValid@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lSetVictoryValid
_TEXT	ENDS
PUBLIC	?lRand@CvLuaGame@@KAHPAUlua_State@@@Z		; CvLuaGame::lRand
EXTRN	?get@CvRandom@@QAEGGPBD@Z:PROC			; CvRandom::get
EXTRN	?getJonRand@CvGame@@QAEAAVCvRandom@@XZ:PROC	; CvGame::getJonRand
; Function compile flags: /Ogtpy
;	COMDAT ?lRand@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lRand@CvLuaGame@@KAHPAUlua_State@@@Z PROC		; CvLuaGame::lRand, COMDAT

; 1516 : {

	push	esi

; 1517 : 	const int max_num = luaL_checkinteger(L, 1);

	mov	esi, DWORD PTR _L$[esp]
	push	edi
	push	1
	push	esi
	call	_luaL_checkinteger

; 1518 : 	const char* strLog = luaL_checkstring(L, 2);

	push	0
	push	2
	push	esi
	mov	edi, eax
	call	_luaL_checklstring

; 1519 : 	const int rand_val = GetInstance()->getJonRand().get(max_num, strLog);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 20					; 00000014H
	push	eax
	push	edi
	call	?getJonRand@CvGame@@QAEAAVCvRandom@@XZ	; CvGame::getJonRand
	mov	ecx, eax
	call	?get@CvRandom@@QAEGGPBD@Z		; CvRandom::get
	movzx	eax, ax

; 1520 : 
; 1521 : 	lua_pushinteger(L, rand_val);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi

; 1522 : 	return 1;

	mov	eax, 1
	pop	esi

; 1523 : }

	ret	0
?lRand@CvLuaGame@@KAHPAUlua_State@@@Z ENDP		; CvLuaGame::lRand
_TEXT	ENDS
PUBLIC	?lGetReplayMessage@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetReplayMessage
EXTRN	_lua_rawseti:PROC
EXTRN	?getPlot@CvReplayMessage@@QBE_NIAAH0@Z:PROC	; CvReplayMessage::getPlot
EXTRN	?getNumPlots@CvReplayMessage@@QBEIXZ:PROC	; CvReplayMessage::getNumPlots
EXTRN	?getText@CvReplayMessage@@QBEABVCvString@@XZ:PROC ; CvReplayMessage::getText
EXTRN	?getType@CvReplayMessage@@QBE?AW4ReplayMessageTypes@@XZ:PROC ; CvReplayMessage::getType
EXTRN	?getTurn@CvReplayMessage@@QBEHXZ:PROC		; CvReplayMessage::getTurn
EXTRN	?getPlayer@CvReplayMessage@@QBE?AW4PlayerTypes@@XZ:PROC ; CvReplayMessage::getPlayer
EXTRN	?getReplayMessage@CvGame@@QBEPBVCvReplayMessage@@I@Z:PROC ; CvGame::getReplayMessage
EXTRN	?getNumReplayMessages@CvGame@@QBEIXZ:PROC	; CvGame::getNumReplayMessages
; Function compile flags: /Ogtpy
;	COMDAT ?lGetReplayMessage@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_i$223598 = -20						; size = 4
_nPlots$223594 = -16					; size = 4
_iPlotX$223602 = -12					; size = 4
_iPlotY$223603 = -8					; size = 4
_t$223587 = -4						; size = 4
_L$ = 8							; size = 4
?lGetReplayMessage@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetReplayMessage, COMDAT

; 1538 : {

	sub	esp, 20					; 00000014H
	push	ebx
	push	esi
	push	edi

; 1539 : 	CvGame& game = GC.getGame();

	mov	edi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48

; 1540 : 	const size_t nReplayMessages = game.getNumReplayMessages();

	mov	ecx, edi
	call	?getNumReplayMessages@CvGame@@QBEIXZ	; CvGame::getNumReplayMessages

; 1541 : 
; 1542 : 	unsigned int idx = luaL_checkint(L, 1);

	mov	esi, DWORD PTR _L$[esp+28]
	push	1
	push	esi
	mov	ebx, eax
	call	_luaL_checkinteger
	add	esp, 8

; 1543 : 	if(idx < nReplayMessages)

	cmp	eax, ebx
	jae	$LN7@lGetReplay
	push	ebp

; 1544 : 	{
; 1545 : 		const CvReplayMessage* pMessage = game.getReplayMessage(idx);

	push	eax
	mov	ecx, edi
	call	?getReplayMessage@CvGame@@QBEPBVCvReplayMessage@@I@Z ; CvGame::getReplayMessage

; 1546 : 
; 1547 : 		lua_createtable(L, 0, 5);

	push	5
	push	0
	push	esi
	mov	ebx, eax
	call	_lua_createtable

; 1548 : 		const int t = lua_gettop(L);

	push	esi
	call	_lua_gettop
	mov	edi, eax
	add	esp, 16					; 00000010H

; 1549 : 
; 1550 : 		lua_pushinteger(L, pMessage->getPlayer());

	mov	ecx, ebx
	mov	DWORD PTR _t$223587[esp+36], edi
	call	?getPlayer@CvReplayMessage@@QBE?AW4PlayerTypes@@XZ ; CvReplayMessage::getPlayer
	push	eax
	push	esi
	call	_lua_pushinteger

; 1551 : 		lua_setfield(L, t, "Player");

	push	OFFSET $SG223588
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 1552 : 
; 1553 : 		lua_pushinteger(L, pMessage->getTurn());

	mov	ecx, ebx
	call	?getTurn@CvReplayMessage@@QBEHXZ	; CvReplayMessage::getTurn
	push	eax
	push	esi
	call	_lua_pushinteger

; 1554 : 		lua_setfield(L, t, "Turn");

	push	OFFSET $SG223589
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 1555 : 
; 1556 : 		lua_pushinteger(L, pMessage->getType());

	mov	ecx, ebx
	call	?getType@CvReplayMessage@@QBE?AW4ReplayMessageTypes@@XZ ; CvReplayMessage::getType
	push	eax
	push	esi
	call	_lua_pushinteger

; 1557 : 		lua_setfield(L, t, "Type");

	push	OFFSET $SG223590
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 1558 : 
; 1559 : 		const CvString& text = pMessage->getText();

	mov	ecx, ebx
	call	?getText@CvReplayMessage@@QBEABVCvString@@XZ ; CvReplayMessage::getText
	mov	ebp, eax

; 1560 : 		if(text.GetLength() > 0)

	mov	ecx, ebp
	call	DWORD PTR __imp_?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
	test	eax, eax
	jle	SHORT $LN6@lGetReplay

; 1561 : 		{
; 1562 : 			lua_pushstring(L, text.c_str());

	mov	ecx, ebp
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring

; 1563 : 			lua_setfield(L, t, "Text");

	push	OFFSET $SG223593
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H
$LN6@lGetReplay:

; 1564 : 		}
; 1565 : 
; 1566 : 		const unsigned int nPlots = pMessage->getNumPlots();

	mov	ecx, ebx
	call	?getNumPlots@CvReplayMessage@@QBEIXZ	; CvReplayMessage::getNumPlots
	mov	DWORD PTR _nPlots$223594[esp+36], eax

; 1567 : 		if(nPlots > 0)

	test	eax, eax
	jbe	$LN5@lGetReplay

; 1568 : 		{
; 1569 : 			lua_createtable(L, nPlots, 0);

	push	0
	push	eax
	push	esi
	call	_lua_createtable

; 1570 : 			int plots_idx = 1;
; 1571 : 			int plots_t = lua_gettop(L);

	push	esi
	mov	edi, 1
	call	_lua_gettop
	add	esp, 16					; 00000010H

; 1572 : 
; 1573 : 			for(unsigned int i = 0; i < nPlots; i++)

	cmp	DWORD PTR _nPlots$223594[esp+36], 0
	mov	ebp, eax
	mov	DWORD PTR _i$223598[esp+36], 0
	jbe	SHORT $LN2@lGetReplay
$LL16@lGetReplay:

; 1574 : 			{
; 1575 : 				int iPlotX, iPlotY;
; 1576 : 				if(pMessage->getPlot(i, iPlotX, iPlotY))

	mov	edx, DWORD PTR _i$223598[esp+36]
	lea	eax, DWORD PTR _iPlotY$223603[esp+36]
	push	eax
	lea	ecx, DWORD PTR _iPlotX$223602[esp+40]
	push	ecx
	push	edx
	mov	ecx, ebx
	call	?getPlot@CvReplayMessage@@QBE_NIAAH0@Z	; CvReplayMessage::getPlot
	test	al, al
	je	SHORT $LN3@lGetReplay

; 1577 : 				{
; 1578 : 					lua_createtable(L, 0, 2);

	push	2
	push	0
	push	esi
	call	_lua_createtable

; 1579 : 					lua_pushinteger(L, iPlotX);

	mov	eax, DWORD PTR _iPlotX$223602[esp+48]
	push	eax
	push	esi
	call	_lua_pushinteger

; 1580 : 					lua_setfield(L, -2, "X");

	push	OFFSET $SG223605
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 1581 : 					lua_pushinteger(L, iPlotY);

	mov	ecx, DWORD PTR _iPlotY$223603[esp+68]
	push	ecx
	push	esi
	call	_lua_pushinteger

; 1582 : 					lua_setfield(L, -2, "Y");

	push	OFFSET $SG223606
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 1583 : 					lua_rawseti(L, plots_t, plots_idx++);

	push	edi
	push	ebp
	push	esi
	call	_lua_rawseti
	add	esp, 64					; 00000040H
	inc	edi
$LN3@lGetReplay:
	mov	eax, DWORD PTR _i$223598[esp+36]
	inc	eax
	mov	DWORD PTR _i$223598[esp+36], eax
	cmp	eax, DWORD PTR _nPlots$223594[esp+36]
	jb	SHORT $LL16@lGetReplay
$LN2@lGetReplay:

; 1584 : 				}
; 1585 : 			}
; 1586 : 
; 1587 : 			lua_setfield(L, t, "Plots");

	mov	edx, DWORD PTR _t$223587[esp+36]
	push	OFFSET $SG223607
	push	edx
	push	esi
	call	_lua_setfield
	add	esp, 12					; 0000000cH
$LN5@lGetReplay:
	pop	ebp
	pop	edi
	pop	esi

; 1588 : 		}
; 1589 : 
; 1590 : 		return 1;

	mov	eax, 1
	pop	ebx

; 1594 : }

	add	esp, 20					; 00000014H
	ret	0
$LN7@lGetReplay:
	pop	edi
	pop	esi

; 1591 : 	}
; 1592 : 
; 1593 : 	return 0;

	xor	eax, eax
	pop	ebx

; 1594 : }

	add	esp, 20					; 00000014H
	ret	0
?lGetReplayMessage@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetReplayMessage
_TEXT	ENDS
PUBLIC	?lGetReplayMessages@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetReplayMessages
; Function compile flags: /Ogtpy
;	COMDAT ?lGetReplayMessages@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_j$223631 = -36						; size = 4
_i$223615 = -32						; size = 4
_nPlots$223627 = -28					; size = 4
_game$ = -24						; size = 4
_iPlotX$223635 = -20					; size = 4
_iPlotY$223636 = -16					; size = 4
_plots_idx$223630 = -12					; size = 4
_messages_t$ = -8					; size = 4
_nMessages$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetReplayMessages@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetReplayMessages, COMDAT

; 1597 : {

	sub	esp, 36					; 00000024H
	push	ebx
	push	esi
	push	edi

; 1598 : 	CvGame& game = GC.getGame();

	mov	edi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48

; 1599 : 	const unsigned int nMessages = game.getNumReplayMessages();

	mov	ecx, edi
	mov	DWORD PTR _game$[esp+48], edi
	call	?getNumReplayMessages@CvGame@@QBEIXZ	; CvGame::getNumReplayMessages

; 1600 : 
; 1601 : 	lua_createtable(L, nMessages, 0);

	mov	esi, DWORD PTR _L$[esp+44]
	mov	ebx, eax
	push	0
	push	ebx
	push	esi
	mov	DWORD PTR _nMessages$[esp+60], ebx
	call	_lua_createtable

; 1602 : 	const int messages_t = lua_gettop(L);

	push	esi
	call	_lua_gettop
	add	esp, 16					; 00000010H
	mov	DWORD PTR _messages_t$[esp+48], eax

; 1603 : 	int messages_idx = 1;
; 1604 : 
; 1605 : 	for(unsigned int i = 0; i < nMessages; i++)

	mov	DWORD PTR _i$223615[esp+48], 0
	test	ebx, ebx
	jbe	$LN20@lGetReplay@2
	push	ebp
	jmp	SHORT $LN9@lGetReplay@2
	npad	6
$LL21@lGetReplay@2:
	mov	edi, DWORD PTR _game$[esp+52]
$LN9@lGetReplay@2:

; 1606 : 	{
; 1607 : 		const CvReplayMessage* pMessage = game.getReplayMessage(i);

	mov	eax, DWORD PTR _i$223615[esp+52]
	push	eax
	mov	ecx, edi
	call	?getReplayMessage@CvGame@@QBEPBVCvReplayMessage@@I@Z ; CvGame::getReplayMessage

; 1608 : 
; 1609 : 		lua_createtable(L, 0, 5);

	push	5
	push	0
	push	esi
	mov	edi, eax
	call	_lua_createtable

; 1610 : 		const int t = lua_gettop(L);

	push	esi
	call	_lua_gettop
	add	esp, 16					; 00000010H

; 1611 : 
; 1612 : 		lua_pushinteger(L, pMessage->getPlayer());

	mov	ecx, edi
	mov	ebp, eax
	call	?getPlayer@CvReplayMessage@@QBE?AW4PlayerTypes@@XZ ; CvReplayMessage::getPlayer
	push	eax
	push	esi
	call	_lua_pushinteger

; 1613 : 		lua_setfield(L, t, "Player");

	push	OFFSET $SG223621
	push	ebp
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 1614 : 
; 1615 : 		lua_pushinteger(L, pMessage->getTurn());

	mov	ecx, edi
	call	?getTurn@CvReplayMessage@@QBEHXZ	; CvReplayMessage::getTurn
	push	eax
	push	esi
	call	_lua_pushinteger

; 1616 : 		lua_setfield(L, t, "Turn");

	push	OFFSET $SG223622
	push	ebp
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 1617 : 
; 1618 : 		lua_pushinteger(L, pMessage->getType());

	mov	ecx, edi
	call	?getType@CvReplayMessage@@QBE?AW4ReplayMessageTypes@@XZ ; CvReplayMessage::getType
	push	eax
	push	esi
	call	_lua_pushinteger

; 1619 : 		lua_setfield(L, t, "Type");

	push	OFFSET $SG223623
	push	ebp
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H

; 1620 : 
; 1621 : 		const CvString& text = pMessage->getText();

	mov	ecx, edi
	call	?getText@CvReplayMessage@@QBEABVCvString@@XZ ; CvReplayMessage::getText
	mov	ebx, eax

; 1622 : 		if(text.GetLength() > 0)

	mov	ecx, ebx
	call	DWORD PTR __imp_?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
	test	eax, eax
	jle	SHORT $LN6@lGetReplay@2

; 1623 : 		{
; 1624 : 			lua_pushstring(L, text.c_str());

	mov	ecx, ebx
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring

; 1625 : 			lua_setfield(L, t, "Text");

	push	OFFSET $SG223626
	push	ebp
	push	esi
	call	_lua_setfield
	add	esp, 20					; 00000014H
$LN6@lGetReplay@2:

; 1626 : 		}
; 1627 : 
; 1628 : 		const unsigned int nPlots = pMessage->getNumPlots();

	mov	ecx, edi
	call	?getNumPlots@CvReplayMessage@@QBEIXZ	; CvReplayMessage::getNumPlots
	mov	DWORD PTR _nPlots$223627[esp+52], eax

; 1629 : 		if(nPlots > 0)

	test	eax, eax
	jbe	$LN5@lGetReplay@2

; 1630 : 		{
; 1631 : 			lua_createtable(L, nPlots, 0);

	push	0
	push	eax
	push	esi
	call	_lua_createtable

; 1632 : 			int idx = 1;
; 1633 : 			int plots_idx = lua_gettop(L);

	push	esi
	mov	ebx, 1
	call	_lua_gettop
	add	esp, 16					; 00000010H

; 1634 : 
; 1635 : 			for(unsigned int j = 0; j < nPlots; j++)

	cmp	DWORD PTR _nPlots$223627[esp+52], 0
	mov	DWORD PTR _plots_idx$223630[esp+52], eax
	mov	DWORD PTR _j$223631[esp+52], 0
	jbe	SHORT $LN2@lGetReplay@2
	npad	2
$LL22@lGetReplay@2:

; 1636 : 			{
; 1637 : 				int iPlotX, iPlotY;
; 1638 : 				if(pMessage->getPlot(j, iPlotX, iPlotY))

	mov	eax, DWORD PTR _j$223631[esp+52]
	lea	ecx, DWORD PTR _iPlotY$223636[esp+52]
	push	ecx
	lea	edx, DWORD PTR _iPlotX$223635[esp+56]
	push	edx
	push	eax
	mov	ecx, edi
	call	?getPlot@CvReplayMessage@@QBE_NIAAH0@Z	; CvReplayMessage::getPlot
	test	al, al
	je	SHORT $LN3@lGetReplay@2

; 1639 : 				{
; 1640 : 					lua_createtable(L, 0, 2);

	push	2
	push	0
	push	esi
	call	_lua_createtable

; 1641 : 					lua_pushinteger(L, iPlotX);

	mov	ecx, DWORD PTR _iPlotX$223635[esp+64]
	push	ecx
	push	esi
	call	_lua_pushinteger

; 1642 : 					lua_setfield(L, -2, "X");

	push	OFFSET $SG223638
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 1643 : 					lua_pushinteger(L, iPlotY);

	mov	edx, DWORD PTR _iPlotY$223636[esp+84]
	push	edx
	push	esi
	call	_lua_pushinteger

; 1644 : 					lua_setfield(L, -2, "Y");

	push	OFFSET $SG223639
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 1645 : 					lua_rawseti(L, plots_idx, idx++);

	mov	eax, DWORD PTR _plots_idx$223630[esp+104]
	push	ebx
	push	eax
	push	esi
	call	_lua_rawseti
	add	esp, 64					; 00000040H
	inc	ebx
$LN3@lGetReplay@2:
	mov	eax, DWORD PTR _j$223631[esp+52]
	inc	eax
	mov	DWORD PTR _j$223631[esp+52], eax
	cmp	eax, DWORD PTR _nPlots$223627[esp+52]
	jb	SHORT $LL22@lGetReplay@2
$LN2@lGetReplay@2:

; 1646 : 				}
; 1647 : 			}
; 1648 : 
; 1649 : 			lua_setfield(L, t, "Plots");

	push	OFFSET $SG223640
	push	ebp
	push	esi
	call	_lua_setfield
	add	esp, 12					; 0000000cH
$LN5@lGetReplay@2:

; 1650 : 		}
; 1651 : 
; 1652 : 		lua_rawseti(L, messages_t, messages_idx++);

	mov	edi, DWORD PTR _i$223615[esp+52]
	mov	ecx, DWORD PTR _messages_t$[esp+52]
	inc	edi
	push	edi
	push	ecx
	push	esi
	call	_lua_rawseti
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _i$223615[esp+52], edi
	cmp	edi, DWORD PTR _nMessages$[esp+52]
	jb	$LL21@lGetReplay@2
	pop	ebp
$LN20@lGetReplay@2:
	pop	edi
	pop	esi

; 1653 : 	}
; 1654 : 
; 1655 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1656 : }

	add	esp, 36					; 00000024H
	ret	0
?lGetReplayMessages@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetReplayMessages
_TEXT	ENDS
PUBLIC	?lDoMinorPledgeProtection@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lDoMinorPledgeProtection
EXTRN	?DoMinorPledgeProtection@CvGame@@QAEXW4PlayerTypes@@0_N1@Z:PROC ; CvGame::DoMinorPledgeProtection
; Function compile flags: /Ogtpy
;	COMDAT ?lDoMinorPledgeProtection@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bProtect$ = -4						; size = 1
_L$ = 8							; size = 4
?lDoMinorPledgeProtection@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lDoMinorPledgeProtection, COMDAT

; 1733 : {

	push	ecx
	push	ebx
	push	esi

; 1734 : 	const int iMajor = lua_tointeger(L, 1);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	1
	push	esi
	call	_lua_tointeger

; 1735 : 	const int iMinor = lua_tointeger(L, 2);

	push	2
	push	esi
	mov	edi, eax
	call	_lua_tointeger

; 1736 : 	const bool bProtect = lua_toboolean(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_toboolean
	add	esp, 24					; 00000018H
	test	eax, eax
	setne	al
	mov	BYTE PTR _bProtect$[esp+16], al

; 1737 : 	GC.getGame().DoMinorPledgeProtection((PlayerTypes)iMajor, (PlayerTypes)iMinor, bProtect);

	mov	ecx, DWORD PTR _bProtect$[esp+16]
	push	0
	push	ecx
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	ebx
	push	edi
	call	?DoMinorPledgeProtection@CvGame@@QAEXW4PlayerTypes@@0_N1@Z ; CvGame::DoMinorPledgeProtection
	pop	edi
	pop	esi

; 1738 : 
; 1739 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1740 : }

	pop	ecx
	ret	0
?lDoMinorPledgeProtection@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lDoMinorPledgeProtection
_TEXT	ENDS
PUBLIC	?lDoMinorBullyGold@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lDoMinorBullyGold
EXTRN	?DoMinorBullyGold@CvGame@@QAEXW4PlayerTypes@@0@Z:PROC ; CvGame::DoMinorBullyGold
; Function compile flags: /Ogtpy
;	COMDAT ?lDoMinorBullyGold@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lDoMinorBullyGold@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lDoMinorBullyGold, COMDAT

; 1763 : {

	push	esi

; 1764 : 	const int iBully = lua_tointeger(L, 1);

	mov	esi, DWORD PTR _L$[esp]
	push	edi
	push	1
	push	esi
	call	_lua_tointeger

; 1765 : 	const int iMinor = lua_tointeger(L, 2);

	push	2
	push	esi
	mov	edi, eax
	call	_lua_tointeger

; 1766 : 	GC.getGame().DoMinorBullyGold((PlayerTypes)iBully, (PlayerTypes)iMinor);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 16					; 00000010H
	push	eax
	push	edi
	call	?DoMinorBullyGold@CvGame@@QAEXW4PlayerTypes@@0@Z ; CvGame::DoMinorBullyGold
	pop	edi

; 1767 : 
; 1768 : 	return 1;

	mov	eax, 1
	pop	esi

; 1769 : }

	ret	0
?lDoMinorBullyGold@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lDoMinorBullyGold
_TEXT	ENDS
PUBLIC	?lDoMinorBullyUnit@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lDoMinorBullyUnit
EXTRN	?DoMinorBullyUnit@CvGame@@QAEXW4PlayerTypes@@0@Z:PROC ; CvGame::DoMinorBullyUnit
; Function compile flags: /Ogtpy
;	COMDAT ?lDoMinorBullyUnit@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lDoMinorBullyUnit@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lDoMinorBullyUnit, COMDAT

; 1773 : {

	push	esi

; 1774 : 	const int iBully = lua_tointeger(L, 1);

	mov	esi, DWORD PTR _L$[esp]
	push	edi
	push	1
	push	esi
	call	_lua_tointeger

; 1775 : 	const int iMinor = lua_tointeger(L, 2);

	push	2
	push	esi
	mov	edi, eax
	call	_lua_tointeger

; 1776 : 	GC.getGame().DoMinorBullyUnit((PlayerTypes)iBully, (PlayerTypes)iMinor);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 16					; 00000010H
	push	eax
	push	edi
	call	?DoMinorBullyUnit@CvGame@@QAEXW4PlayerTypes@@0@Z ; CvGame::DoMinorBullyUnit
	pop	edi

; 1777 : 
; 1778 : 	return 1;

	mov	eax, 1
	pop	esi

; 1779 : }

	ret	0
?lDoMinorBullyUnit@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lDoMinorBullyUnit
_TEXT	ENDS
PUBLIC	?lDoMinorBuyout@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lDoMinorBuyout
EXTRN	?DoMinorBuyout@CvGame@@QAEXW4PlayerTypes@@0@Z:PROC ; CvGame::DoMinorBuyout
; Function compile flags: /Ogtpy
;	COMDAT ?lDoMinorBuyout@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lDoMinorBuyout@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lDoMinorBuyout, COMDAT

; 1783 : {

	push	esi

; 1784 : 	const int iMajor = lua_tointeger(L, 1);

	mov	esi, DWORD PTR _L$[esp]
	push	edi
	push	1
	push	esi
	call	_lua_tointeger

; 1785 : 	const int iMinor = lua_tointeger(L, 2);

	push	2
	push	esi
	mov	edi, eax
	call	_lua_tointeger

; 1786 : 	GC.getGame().DoMinorBuyout((PlayerTypes)iMajor, (PlayerTypes)iMinor);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 16					; 00000010H
	push	eax
	push	edi
	call	?DoMinorBuyout@CvGame@@QAEXW4PlayerTypes@@0@Z ; CvGame::DoMinorBuyout
	pop	edi

; 1787 : 
; 1788 : 	return 1;

	mov	eax, 1
	pop	esi

; 1789 : }

	ret	0
?lDoMinorBuyout@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lDoMinorBuyout
_TEXT	ENDS
PUBLIC	?lGameplayDiplomacyAILeaderMessage@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGameplayDiplomacyAILeaderMessage
; Function compile flags: /Ogtpy
;	COMDAT ?lGameplayDiplomacyAILeaderMessage@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGameplayDiplomacyAILeaderMessage@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGameplayDiplomacyAILeaderMessage, COMDAT

; 1815 : {

	push	ebx
	push	esi

; 1816 : 	const int iPlayer = lua_tointeger(L, 1);

	mov	esi, DWORD PTR _L$[esp+4]
	push	edi
	push	1
	push	esi
	call	_lua_tointeger

; 1817 : 	const int eMessage = lua_tointeger(L, 2);

	push	2
	push	esi
	mov	edi, eax
	call	_lua_tointeger

; 1818 : 	const int iData1 = lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger

; 1819 : 	gDLL->GameplayDiplomacyAILeaderMessage((PlayerTypes) iPlayer, DIPLO_UI_STATE_DEFAULT_ROOT, "TEMP", (LeaderheadAnimationTypes) eMessage, iData1);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	edx, DWORD PTR [ecx]
	add	esp, 24					; 00000018H
	push	eax
	mov	eax, DWORD PTR [edx+736]
	push	ebx
	push	OFFSET $SG224168
	push	0
	push	edi
	call	eax
	pop	edi
	pop	esi

; 1820 : 
; 1821 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1822 : }

	ret	0
?lGameplayDiplomacyAILeaderMessage@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGameplayDiplomacyAILeaderMessage
_TEXT	ENDS
PUBLIC	?lIsCombatWarned@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lIsCombatWarned
EXTRN	?IsCombatWarned@CvGame@@QBE_NXZ:PROC		; CvGame::IsCombatWarned
; Function compile flags: /Ogtpy
;	COMDAT ?lIsCombatWarned@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsCombatWarned@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lIsCombatWarned, COMDAT

; 1880 : 	lua_pushboolean(L, GC.getGame().IsCombatWarned());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?IsCombatWarned@CvGame@@QBE_NXZ		; CvGame::IsCombatWarned
	mov	ecx, DWORD PTR _L$[esp-4]
	movzx	eax, al
	push	eax
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 1881 : 	return 1;

	mov	eax, 1

; 1882 : }

	ret	0
?lIsCombatWarned@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lIsCombatWarned
_TEXT	ENDS
PUBLIC	?lSetCombatWarned@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetCombatWarned
EXTRN	?SetCombatWarned@CvGame@@QAEX_N@Z:PROC		; CvGame::SetCombatWarned
; Function compile flags: /Ogtpy
;	COMDAT ?lSetCombatWarned@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetCombatWarned@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lSetCombatWarned, COMDAT

; 1887 : 	GC.getGame().SetCombatWarned(lua_toboolean(L, 1));

	mov	eax, DWORD PTR _L$[esp-4]
	push	esi
	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	1
	push	eax
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	cl
	movzx	edx, cl
	push	edx
	mov	ecx, esi
	call	?SetCombatWarned@CvGame@@QAEX_N@Z	; CvGame::SetCombatWarned

; 1888 : 	return 1;

	mov	eax, 1
	pop	esi

; 1889 : }

	ret	0
?lSetCombatWarned@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lSetCombatWarned
_TEXT	ENDS
PUBLIC	?lGetAdvisorCounsel@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetAdvisorCounsel
EXTRN	?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z:PROC ; CvAdvisorCounsel::BuildCounselList
EXTRN	?GetAdvisorCounsel@CvGame@@QAEPAVCvAdvisorCounsel@@XZ:PROC ; CvGame::GetAdvisorCounsel
EXTRN	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ:PROC ; CvGame::getActivePlayer
; Function compile flags: /Ogtpy
;	COMDAT ?lGetAdvisorCounsel@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bTableOpen$ = -13					; size = 1
_ui$224217 = -12					; size = 4
_eCurrentAdvisorType$ = -8				; size = 4
_iTopLevelLua$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetAdvisorCounsel@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetAdvisorCounsel, COMDAT

; 1893 : {

	sub	esp, 16					; 00000010H

; 1894 : 	const PlayerTypes ePlayer = GC.getGame().getActivePlayer();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	ebx
	push	ebp
	push	esi
	push	edi
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer

; 1895 : 	GC.getGame().GetAdvisorCounsel()->BuildCounselList(ePlayer);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	eax
	call	?GetAdvisorCounsel@CvGame@@QAEPAVCvAdvisorCounsel@@XZ ; CvGame::GetAdvisorCounsel
	mov	ecx, eax
	call	?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z ; CvAdvisorCounsel::BuildCounselList

; 1896 : 	lua_createtable(L, 0, 0);

	mov	esi, DWORD PTR _L$[esp+28]
	xor	ebx, ebx
	push	ebx
	push	ebx
	push	esi
	call	_lua_createtable

; 1897 : 	int iTopLevelLua = lua_gettop(L);

	push	esi
	call	_lua_gettop

; 1898 : 
; 1899 : 	AdvisorTypes eCurrentAdvisorType = NUM_ADVISOR_TYPES;
; 1900 : 	int iAdvisorTableLevel = -1;
; 1901 : 	int iAdvisorIndex = 0;
; 1902 : 	bool bTableOpen = false;
; 1903 : 	for(uint ui = 0; ui < GC.getGame().GetAdvisorCounsel()->m_aCounsel.size(); ui++)

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 16					; 00000010H
	mov	DWORD PTR _iTopLevelLua$[esp+32], eax
	mov	DWORD PTR _eCurrentAdvisorType$[esp+32], 4
	or	ebp, -1
	xor	edi, edi
	mov	BYTE PTR _bTableOpen$[esp+32], bl
	mov	DWORD PTR _ui$224217[esp+32], ebx
	call	?GetAdvisorCounsel@CvGame@@QAEPAVCvAdvisorCounsel@@XZ ; CvGame::GetAdvisorCounsel
	cmp	DWORD PTR [eax+4], ebx
	jbe	$LN34@lGetAdviso
	npad	7
$LL7@lGetAdviso:

; 1904 : 	{
; 1905 : 		if(GC.getGame().GetAdvisorCounsel()->m_aCounsel[ui].m_eAdvisor != eCurrentAdvisorType)

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetAdvisorCounsel@CvGame@@QAEPAVCvAdvisorCounsel@@XZ ; CvGame::GetAdvisorCounsel
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR _eCurrentAdvisorType$[esp+32]
	cmp	DWORD PTR [ebx+ecx], eax
	je	SHORT $LN4@lGetAdviso

; 1906 : 		{
; 1907 : 			// close out previous table
; 1908 : 			if(eCurrentAdvisorType != NUM_ADVISOR_TYPES)

	cmp	eax, 4
	je	SHORT $LN35@lGetAdviso

; 1909 : 			{
; 1910 : 				CvAssertMsg(bTableOpen, "Table should be open");
; 1911 : 				lua_rawseti(L, iTopLevelLua, eCurrentAdvisorType);

	mov	edx, DWORD PTR _iTopLevelLua$[esp+32]
	push	eax
	push	edx
	push	esi
	call	_lua_rawseti
	add	esp, 12					; 0000000cH

; 1912 : 				bTableOpen = false;

	mov	BYTE PTR _bTableOpen$[esp+32], 0
$LN35@lGetAdviso:

; 1913 : 			}
; 1914 : 
; 1915 : 			AdvisorTypes eNextAdvisorType = GC.getGame().GetAdvisorCounsel()->m_aCounsel[ui].m_eAdvisor;

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetAdvisorCounsel@CvGame@@QAEPAVCvAdvisorCounsel@@XZ ; CvGame::GetAdvisorCounsel
	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [ebx+eax]

; 1916 : 			if(eNextAdvisorType == NO_ADVISOR_TYPE)

	cmp	eax, -1
	je	SHORT $LN31@lGetAdviso

; 1917 : 			{
; 1918 : 				// no more valid advisor info. Bail out!
; 1919 : 				break;
; 1920 : 			}
; 1921 : 			eCurrentAdvisorType = eNextAdvisorType;
; 1922 : 			CvAssertMsg(!bTableOpen, "table should be open");
; 1923 : 			lua_createtable(L, 0, 0);

	push	0
	push	0
	push	esi
	mov	DWORD PTR _eCurrentAdvisorType$[esp+44], eax
	call	_lua_createtable

; 1924 : 			bTableOpen = true;
; 1925 : 			iAdvisorTableLevel = lua_gettop(L);

	push	esi
	mov	BYTE PTR _bTableOpen$[esp+48], 1
	call	_lua_gettop
	add	esp, 16					; 00000010H
	mov	ebp, eax

; 1926 : 			iAdvisorIndex = 0;

	xor	edi, edi
$LN4@lGetAdviso:

; 1927 : 		}
; 1928 : 
; 1929 : 		CvAssertMsg(bTableOpen, "Table should be open");
; 1930 : 		lua_pushstring(L, GC.getGame().GetAdvisorCounsel()->m_aCounsel[ui].m_strTxtKey);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetAdvisorCounsel@CvGame@@QAEPAVCvAdvisorCounsel@@XZ ; CvGame::GetAdvisorCounsel
	mov	ecx, DWORD PTR [eax]
	lea	edx, DWORD PTR [ecx+ebx+4]
	push	edx
	push	esi
	call	_lua_pushstring

; 1931 : 		lua_rawseti(L, iAdvisorTableLevel, iAdvisorIndex);

	push	edi
	push	ebp
	push	esi
	call	_lua_rawseti
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	inc	DWORD PTR _ui$224217[esp+52]
	add	esp, 20					; 00000014H

; 1932 : 		iAdvisorIndex++;

	inc	edi
	add	ebx, 520				; 00000208H
	call	?GetAdvisorCounsel@CvGame@@QAEPAVCvAdvisorCounsel@@XZ ; CvGame::GetAdvisorCounsel
	mov	ecx, DWORD PTR _ui$224217[esp+32]
	cmp	ecx, DWORD PTR [eax+4]
	jb	$LL7@lGetAdviso
$LN31@lGetAdviso:

; 1933 : 	}
; 1934 : 
; 1935 : 	if(bTableOpen)

	cmp	BYTE PTR _bTableOpen$[esp+32], 0
	je	SHORT $LN34@lGetAdviso

; 1936 : 	{
; 1937 : 		lua_rawseti(L, iTopLevelLua, eCurrentAdvisorType);

	mov	edx, DWORD PTR _eCurrentAdvisorType$[esp+32]
	mov	eax, DWORD PTR _iTopLevelLua$[esp+32]
	push	edx
	push	eax
	push	esi
	call	_lua_rawseti
	add	esp, 12					; 0000000cH
$LN34@lGetAdviso:
	pop	edi
	pop	esi
	pop	ebp

; 1938 : 	}
; 1939 : 
; 1940 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1941 : }

	add	esp, 16					; 00000010H
	ret	0
?lGetAdvisorCounsel@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetAdvisorCounsel
_TEXT	ENDS
PUBLIC	?lSetAdvisorRecommenderCity@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetAdvisorRecommenderCity
EXTRN	?UpdateCityRecommendations@CvAdvisorRecommender@@QAEXPAVCvCity@@@Z:PROC ; CvAdvisorRecommender::UpdateCityRecommendations
EXTRN	?GetAdvisorRecommender@CvGame@@QAEPAVCvAdvisorRecommender@@XZ:PROC ; CvGame::GetAdvisorRecommender
; Function compile flags: /Ogtpy
;	COMDAT ?lSetAdvisorRecommenderCity@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetAdvisorRecommenderCity@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lSetAdvisorRecommenderCity, COMDAT

; 1945 : {

	push	ebx
	push	ebp
	push	esi

; 1946 : 	CvCity* pkCity = CvLuaCity::GetInstance(L, 1);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lSetAdviso
	push	OFFSET $SG225459
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lSetAdviso
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lSetAdviso
	xor	bl, bl
$LN5@lSetAdviso:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN4@lSetAdviso
	push	OFFSET $SG225465
	push	esi
	call	_luaL_error
	push	esi
	call	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
	add	esp, 12					; 0000000cH
$LN4@lSetAdviso:

; 1947 : 	GC.getGame().GetAdvisorRecommender()->UpdateCityRecommendations(pkCity);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	call	?GetAdvisorRecommender@CvGame@@QAEPAVCvAdvisorRecommender@@XZ ; CvGame::GetAdvisorRecommender
	mov	ecx, eax
	call	?UpdateCityRecommendations@CvAdvisorRecommender@@QAEXPAVCvCity@@@Z ; CvAdvisorRecommender::UpdateCityRecommendations
	pop	edi
	pop	esi
	pop	ebp

; 1948 : 	return 1;

	mov	eax, 1
	pop	ebx

; 1949 : }

	ret	0
?lSetAdvisorRecommenderCity@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lSetAdvisorRecommenderCity
_TEXT	ENDS
PUBLIC	?lIsUnitRecommended@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsUnitRecommended
EXTRN	?IsUnitRecommended@CvAdvisorRecommender@@QAE_NW4UnitTypes@@W4AdvisorTypes@@@Z:PROC ; CvAdvisorRecommender::IsUnitRecommended
; Function compile flags: /Ogtpy
;	COMDAT ?lIsUnitRecommended@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsUnitRecommended@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lIsUnitRecommended, COMDAT

; 1953 : {

	push	esi

; 1954 : 	UnitTypes eUnit = (UnitTypes)lua_tointeger(L, 1);

	mov	esi, DWORD PTR _L$[esp]
	push	edi
	push	1
	push	esi
	call	_lua_tointeger

; 1955 : 	AdvisorTypes eAdvisor = (AdvisorTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	mov	edi, eax
	call	_lua_tointeger

; 1956 : 	bool bResult = GC.getGame().GetAdvisorRecommender()->IsUnitRecommended(eUnit, eAdvisor);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 16					; 00000010H
	push	eax
	push	edi
	call	?GetAdvisorRecommender@CvGame@@QAEPAVCvAdvisorRecommender@@XZ ; CvGame::GetAdvisorRecommender
	mov	ecx, eax
	call	?IsUnitRecommended@CvAdvisorRecommender@@QAE_NW4UnitTypes@@W4AdvisorTypes@@@Z ; CvAdvisorRecommender::IsUnitRecommended

; 1957 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi

; 1958 : 	return 1;

	mov	eax, 1
	pop	esi

; 1959 : }

	ret	0
?lIsUnitRecommended@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lIsUnitRecommended
_TEXT	ENDS
PUBLIC	?lIsBuildingRecommended@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsBuildingRecommended
EXTRN	?IsBuildingRecommended@CvAdvisorRecommender@@QAE_NW4BuildingTypes@@W4AdvisorTypes@@@Z:PROC ; CvAdvisorRecommender::IsBuildingRecommended
; Function compile flags: /Ogtpy
;	COMDAT ?lIsBuildingRecommended@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsBuildingRecommended@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lIsBuildingRecommended, COMDAT

; 1963 : {

	push	esi

; 1964 : 	BuildingTypes eBuilding = (BuildingTypes)lua_tointeger(L, 1);

	mov	esi, DWORD PTR _L$[esp]
	push	edi
	push	1
	push	esi
	call	_lua_tointeger

; 1965 : 	AdvisorTypes eAdvisor = (AdvisorTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	mov	edi, eax
	call	_lua_tointeger

; 1966 : 	bool bResult = GC.getGame().GetAdvisorRecommender()->IsBuildingRecommended(eBuilding, eAdvisor);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 16					; 00000010H
	push	eax
	push	edi
	call	?GetAdvisorRecommender@CvGame@@QAEPAVCvAdvisorRecommender@@XZ ; CvGame::GetAdvisorRecommender
	mov	ecx, eax
	call	?IsBuildingRecommended@CvAdvisorRecommender@@QAE_NW4BuildingTypes@@W4AdvisorTypes@@@Z ; CvAdvisorRecommender::IsBuildingRecommended

; 1967 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi

; 1968 : 	return 1;

	mov	eax, 1
	pop	esi

; 1969 : }

	ret	0
?lIsBuildingRecommended@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lIsBuildingRecommended
_TEXT	ENDS
PUBLIC	?lIsProjectRecommended@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsProjectRecommended
EXTRN	?IsProjectRecommended@CvAdvisorRecommender@@QAE_NW4ProjectTypes@@W4AdvisorTypes@@@Z:PROC ; CvAdvisorRecommender::IsProjectRecommended
; Function compile flags: /Ogtpy
;	COMDAT ?lIsProjectRecommended@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsProjectRecommended@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lIsProjectRecommended, COMDAT

; 1973 : {

	push	esi

; 1974 : 	ProjectTypes eProject = (ProjectTypes)lua_tointeger(L, 1);

	mov	esi, DWORD PTR _L$[esp]
	push	edi
	push	1
	push	esi
	call	_lua_tointeger

; 1975 : 	AdvisorTypes eAdvisor = (AdvisorTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	mov	edi, eax
	call	_lua_tointeger

; 1976 : 	bool bResult = GC.getGame().GetAdvisorRecommender()->IsProjectRecommended(eProject, eAdvisor);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 16					; 00000010H
	push	eax
	push	edi
	call	?GetAdvisorRecommender@CvGame@@QAEPAVCvAdvisorRecommender@@XZ ; CvGame::GetAdvisorRecommender
	mov	ecx, eax
	call	?IsProjectRecommended@CvAdvisorRecommender@@QAE_NW4ProjectTypes@@W4AdvisorTypes@@@Z ; CvAdvisorRecommender::IsProjectRecommended

; 1977 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi

; 1978 : 	return 1;

	mov	eax, 1
	pop	esi

; 1979 : }

	ret	0
?lIsProjectRecommended@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lIsProjectRecommended
_TEXT	ENDS
PUBLIC	?lSetAdvisorRecommenderTech@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetAdvisorRecommenderTech
EXTRN	?UpdateTechRecommendations@CvAdvisorRecommender@@QAEXW4PlayerTypes@@@Z:PROC ; CvAdvisorRecommender::UpdateTechRecommendations
; Function compile flags: /Ogtpy
;	COMDAT ?lSetAdvisorRecommenderTech@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetAdvisorRecommenderTech@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lSetAdvisorRecommenderTech, COMDAT

; 1984 : 	PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 1);

	mov	eax, DWORD PTR _L$[esp-4]
	push	1
	push	eax
	call	_lua_tointeger

; 1985 : 	GC.getGame().GetAdvisorRecommender()->UpdateTechRecommendations(ePlayer);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 8
	push	eax
	call	?GetAdvisorRecommender@CvGame@@QAEPAVCvAdvisorRecommender@@XZ ; CvGame::GetAdvisorRecommender
	mov	ecx, eax
	call	?UpdateTechRecommendations@CvAdvisorRecommender@@QAEXW4PlayerTypes@@@Z ; CvAdvisorRecommender::UpdateTechRecommendations

; 1986 : 	return 1;

	mov	eax, 1

; 1987 : }

	ret	0
?lSetAdvisorRecommenderTech@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lSetAdvisorRecommenderTech
_TEXT	ENDS
PUBLIC	?lIsTechRecommended@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsTechRecommended
EXTRN	?IsTechRecommended@CvAdvisorRecommender@@QAE_NW4TechTypes@@W4AdvisorTypes@@@Z:PROC ; CvAdvisorRecommender::IsTechRecommended
; Function compile flags: /Ogtpy
;	COMDAT ?lIsTechRecommended@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsTechRecommended@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lIsTechRecommended, COMDAT

; 1991 : {

	push	esi

; 1992 : 	TechTypes eTech = (TechTypes)lua_tointeger(L, 1);

	mov	esi, DWORD PTR _L$[esp]
	push	edi
	push	1
	push	esi
	call	_lua_tointeger

; 1993 : 	AdvisorTypes eAdvisor = (AdvisorTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	mov	edi, eax
	call	_lua_tointeger

; 1994 : 	bool bResult = GC.getGame().GetAdvisorRecommender()->IsTechRecommended(eTech, eAdvisor);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 16					; 00000010H
	push	eax
	push	edi
	call	?GetAdvisorRecommender@CvGame@@QAEPAVCvAdvisorRecommender@@XZ ; CvGame::GetAdvisorRecommender
	mov	ecx, eax
	call	?IsTechRecommended@CvAdvisorRecommender@@QAE_NW4TechTypes@@W4AdvisorTypes@@@Z ; CvAdvisorRecommender::IsTechRecommended

; 1995 : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi

; 1996 : 	return 1;

	mov	eax, 1
	pop	esi

; 1997 : }

	ret	0
?lIsTechRecommended@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lIsTechRecommended
_TEXT	ENDS
PUBLIC	?lGetVariableCitySizeFromPopulation@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetVariableCitySizeFromPopulation
EXTRN	?GetVariableCitySizeFromPopulation@CvGame@@QAEII@Z:PROC ; CvGame::GetVariableCitySizeFromPopulation
; Function compile flags: /Ogtpy
;	COMDAT ?lGetVariableCitySizeFromPopulation@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetVariableCitySizeFromPopulation@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetVariableCitySizeFromPopulation, COMDAT

; 2000 : {

	push	esi

; 2001 : 	unsigned int nPopulation = (unsigned int)lua_tointeger(L, 1);

	mov	esi, DWORD PTR _L$[esp]
	push	1
	push	esi
	call	_lua_tointeger

; 2002 : 	unsigned int nSize = GC.getGame().GetVariableCitySizeFromPopulation(nPopulation);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 8
	push	eax
	call	?GetVariableCitySizeFromPopulation@CvGame@@QAEII@Z ; CvGame::GetVariableCitySizeFromPopulation

; 2003 : 	lua_pushinteger(L, nSize);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8

; 2004 : 
; 2005 : 	return 1;

	mov	eax, 1
	pop	esi

; 2006 : }

	ret	0
?lGetVariableCitySizeFromPopulation@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetVariableCitySizeFromPopulation
_TEXT	ENDS
PUBLIC	?lGetResearchAgreementCost@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetResearchAgreementCost
EXTRN	?GetResearchAgreementCost@CvGame@@QAEHW4PlayerTypes@@0@Z:PROC ; CvGame::GetResearchAgreementCost
; Function compile flags: /Ogtpy
;	COMDAT ?lGetResearchAgreementCost@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetResearchAgreementCost@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetResearchAgreementCost, COMDAT

; 2009 : {

	push	esi

; 2010 : 	const PlayerTypes ePlayer1 = (PlayerTypes) lua_tointeger(L, 1);

	mov	esi, DWORD PTR _L$[esp]
	push	edi
	push	1
	push	esi
	call	_lua_tointeger

; 2011 : 	const PlayerTypes ePlayer2 = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	push	esi
	mov	edi, eax
	call	_lua_tointeger

; 2012 : 	int iCost = GC.getGame().GetResearchAgreementCost(ePlayer1, ePlayer2);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 16					; 00000010H
	push	eax
	push	edi
	call	?GetResearchAgreementCost@CvGame@@QAEHW4PlayerTypes@@0@Z ; CvGame::GetResearchAgreementCost

; 2013 : 	lua_pushinteger(L, iCost);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi

; 2014 : 
; 2015 : 	return 1;

	mov	eax, 1
	pop	esi

; 2016 : }

	ret	0
?lGetResearchAgreementCost@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetResearchAgreementCost
_TEXT	ENDS
PUBLIC	?lGetNumCitiesPolicyCostMod@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumCitiesPolicyCostMod
EXTRN	?GetNumCitiesPolicyCostMod@CvWorldInfo@@QBEHXZ:PROC ; CvWorldInfo::GetNumCitiesPolicyCostMod
EXTRN	?getWorldInfo@CvMap@@QBEABVCvWorldInfo@@XZ:PROC	; CvMap::getWorldInfo
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumCitiesPolicyCostMod@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumCitiesPolicyCostMod@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetNumCitiesPolicyCostMod, COMDAT

; 2033 : 	lua_pushinteger(L, GC.getMap().getWorldInfo().GetNumCitiesPolicyCostMod());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	call	?getWorldInfo@CvMap@@QBEABVCvWorldInfo@@XZ ; CvMap::getWorldInfo
	mov	ecx, eax
	call	?GetNumCitiesPolicyCostMod@CvWorldInfo@@QBEHXZ ; CvWorldInfo::GetNumCitiesPolicyCostMod
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 2034 : 	return 1;

	mov	eax, 1

; 2035 : }

	ret	0
?lGetNumCitiesPolicyCostMod@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetNumCitiesPolicyCostMod
_TEXT	ENDS
PUBLIC	?lGetNumCitiesTechCostMod@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumCitiesTechCostMod
EXTRN	?GetNumCitiesTechCostMod@CvWorldInfo@@QBEHXZ:PROC ; CvWorldInfo::GetNumCitiesTechCostMod
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumCitiesTechCostMod@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumCitiesTechCostMod@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetNumCitiesTechCostMod, COMDAT

; 2039 : 	lua_pushinteger(L, GC.getMap().getWorldInfo().GetNumCitiesTechCostMod());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	call	?getWorldInfo@CvMap@@QBEABVCvWorldInfo@@XZ ; CvMap::getWorldInfo
	mov	ecx, eax
	call	?GetNumCitiesTechCostMod@CvWorldInfo@@QBEHXZ ; CvWorldInfo::GetNumCitiesTechCostMod
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 2040 : 	return 1;

	mov	eax, 1

; 2041 : }

	ret	0
?lGetNumCitiesTechCostMod@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetNumCitiesTechCostMod
_TEXT	ENDS
PUBLIC	?lGetWorldNumCitiesUnhappinessPercent@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetWorldNumCitiesUnhappinessPercent
EXTRN	?getNumCitiesUnhappinessPercent@CvWorldInfo@@QBEHXZ:PROC ; CvWorldInfo::getNumCitiesUnhappinessPercent
; Function compile flags: /Ogtpy
;	COMDAT ?lGetWorldNumCitiesUnhappinessPercent@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetWorldNumCitiesUnhappinessPercent@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetWorldNumCitiesUnhappinessPercent, COMDAT

; 2081 : 	lua_pushinteger(L, GC.getMap().getWorldInfo().getNumCitiesUnhappinessPercent());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	call	?getWorldInfo@CvMap@@QBEABVCvWorldInfo@@XZ ; CvMap::getWorldInfo
	mov	ecx, eax
	call	?getNumCitiesUnhappinessPercent@CvWorldInfo@@QBEHXZ ; CvWorldInfo::getNumCitiesUnhappinessPercent
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 2082 : 	return 1;

	mov	eax, 1

; 2083 : }

	ret	0
?lGetWorldNumCitiesUnhappinessPercent@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetWorldNumCitiesUnhappinessPercent
_TEXT	ENDS
PUBLIC	?lGetCombatPrediction@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetCombatPrediction
EXTRN	?GetCombatPrediction@CvGame@@QAE?AW4CombatPredictionTypes@@PBVCvUnit@@0@Z:PROC ; CvGame::GetCombatPrediction
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCombatPrediction@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkInstance$227750 = -4					; size = 4
_L$ = 8							; size = 4
?lGetCombatPrediction@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetCombatPrediction, COMDAT

; 2130 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 2131 : 	const CvUnit* pAttackingUnit = CvLuaUnit::GetInstance(L, 1);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	edi, eax
	mov	bl, 1
	mov	DWORD PTR _pkInstance$227750[esp+32], 0
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetCombat
	push	OFFSET $SG225537
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetCombat
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$227750[esp+20], eax
	test	eax, eax
	je	SHORT $LN5@lGetCombat
	xor	bl, bl
$LN5@lGetCombat:
	push	edi
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN4@lGetCombat
	push	OFFSET $SG225543
	push	esi
	call	_luaL_error
	push	esi
	call	?HandleMissingInstance@CvLuaUnit@@SAXPAUlua_State@@@Z ; CvLuaUnit::HandleMissingInstance
	add	esp, 12					; 0000000cH
$LN4@lGetCombat:

; 2132 : 	const CvUnit* pDefendingUnit = CvLuaUnit::GetInstance(L, 2);

	push	esi
	call	_lua_gettop
	push	2
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN12@lGetCombat
	push	OFFSET $SG225537
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN12@lGetCombat
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN12@lGetCombat
	xor	bl, bl
$LN12@lGetCombat:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN11@lGetCombat
	push	esi
	call	?HandleMissingInstance@CvLuaUnit@@SAXPAUlua_State@@@Z ; CvLuaUnit::HandleMissingInstance
	add	esp, 4
$LN11@lGetCombat:

; 2133 : 	CombatPredictionTypes ePrediction = GC.getGame().GetCombatPrediction(pAttackingUnit, pDefendingUnit);

	mov	eax, DWORD PTR _pkInstance$227750[esp+20]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	push	eax
	call	?GetCombatPrediction@CvGame@@QAE?AW4CombatPredictionTypes@@PBVCvUnit@@0@Z ; CvGame::GetCombatPrediction

; 2134 : 	lua_pushinteger(L, ePrediction);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2135 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2136 : }

	pop	ecx
	ret	0
?lGetCombatPrediction@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetCombatPrediction
_TEXT	ENDS
PUBLIC	?lGetTimeString@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetTimeString
;	COMDAT xdata$x
; File s:\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetTimeString@CvLuaGame@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetTimeString@CvLuaGame@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetTimeString@CvLuaGame@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetTimeString@CvLuaGame@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluagame.cpp
xdata$x	ENDS
;	COMDAT ?lGetTimeString@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_timeString$ = -40					; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetTimeString@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetTimeString, COMDAT

; 2140 : {

	push	-1
	push	__ehhandler$?lGetTimeString@CvLuaGame@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 28					; 0000001cH
	push	esi

; 2141 : 	CvString timeString;

	lea	ecx, DWORD PTR _timeString$[esp+44]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2142 : 
; 2143 : 	CvGame& kGame = GC.getGame();

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48

; 2144 : 	CvGameTextMgr::setDateStr(timeString, kGame.getGameTurn(), true, kGame.getCalendar(), kGame.getStartYear(), kGame.getGameSpeedType());

	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[esp+52], 0
	call	?getGameSpeedType@CvGame@@QBE?AW4GameSpeedTypes@@XZ ; CvGame::getGameSpeedType
	push	eax
	mov	ecx, esi
	call	?getStartYear@CvGame@@QBEHXZ		; CvGame::getStartYear
	push	eax
	mov	ecx, esi
	call	?getCalendar@CvGame@@QBE?AW4CalendarTypes@@XZ ; CvGame::getCalendar
	push	eax
	push	1
	mov	ecx, esi
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	push	eax
	lea	eax, DWORD PTR _timeString$[esp+64]
	push	eax
	call	?setDateStr@CvGameTextMgr@@SAXAAVCvString@@H_NW4CalendarTypes@@HW4GameSpeedTypes@@@Z ; CvGameTextMgr::setDateStr
	add	esp, 24					; 00000018H

; 2145 : 
; 2146 : 	lua_pushstring(L, timeString.GetCString());

	lea	ecx, DWORD PTR _timeString$[esp+44]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	ecx, DWORD PTR _L$[esp+40]
	push	eax
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 2147 : 	return 1;

	lea	ecx, DWORD PTR _timeString$[esp+44]
	mov	DWORD PTR __$EHRec$[esp+52], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2148 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+44]
	mov	eax, 1
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetTimeString@CvLuaGame@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _timeString$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetTimeString@CvLuaGame@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetTimeString@CvLuaGame@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetTimeString@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetTimeString
PUBLIC	?lGetMinimumFaithNextPantheon@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetMinimumFaithNextPantheon
EXTRN	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ:PROC ; CvGame::GetGameReligions
; Function compile flags: /Ogtpy
;	COMDAT ?lGetMinimumFaithNextPantheon@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMinimumFaithNextPantheon@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetMinimumFaithNextPantheon, COMDAT

; 2152 : 	int iFaith = GC.getGame().GetGameReligions()->GetMinimumFaithNextPantheon();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions

; 2153 : 	lua_pushinteger(L, iFaith);

	mov	eax, DWORD PTR [eax+5264]
	mov	ecx, DWORD PTR _L$[esp-4]
	push	eax
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2154 : 	return 1;

	mov	eax, 1

; 2155 : }

	ret	0
?lGetMinimumFaithNextPantheon@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetMinimumFaithNextPantheon
_TEXT	ENDS
PUBLIC	?lSetMinimumFaithNextPantheon@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetMinimumFaithNextPantheon
; Function compile flags: /Ogtpy
;	COMDAT ?lSetMinimumFaithNextPantheon@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetMinimumFaithNextPantheon@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lSetMinimumFaithNextPantheon, COMDAT

; 2159 : 	GC.getGame().GetGameReligions()->SetMinimumFaithNextPantheon(lua_tointeger(L, 1));

	mov	eax, DWORD PTR _L$[esp-4]
	push	esi
	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	push	1
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	ecx, esi
	mov	edi, eax
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	DWORD PTR [eax+5264], edi
	pop	edi

; 2160 : 	return 1;

	mov	eax, 1
	pop	esi

; 2161 : }

	ret	0
?lSetMinimumFaithNextPantheon@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lSetMinimumFaithNextPantheon
_TEXT	ENDS
PUBLIC	?lGetNumFollowers@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumFollowers
EXTRN	?GetNumFollowers@CvGameReligions@@QBEHW4ReligionTypes@@@Z:PROC ; CvGameReligions::GetNumFollowers
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumFollowers@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumFollowers@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetNumFollowers, COMDAT

; 2302 : {

	push	esi

; 2303 : 	int iRtnValue;
; 2304 : 	ReligionTypes eReligion;
; 2305 : 	eReligion = (ReligionTypes)lua_tointeger(L, 1);

	mov	esi, DWORD PTR _L$[esp]
	push	1
	push	esi
	call	_lua_tointeger

; 2306 : 	iRtnValue = GC.getGame().GetGameReligions()->GetNumFollowers(eReligion);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 8
	push	eax
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetNumFollowers@CvGameReligions@@QBEHW4ReligionTypes@@@Z ; CvGameReligions::GetNumFollowers

; 2307 : 	lua_pushinteger(L, iRtnValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8

; 2308 : 	return 1;

	mov	eax, 1
	pop	esi

; 2309 : }

	ret	0
?lGetNumFollowers@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetNumFollowers
_TEXT	ENDS
PUBLIC	?lGetNumCitiesFollowing@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumCitiesFollowing
EXTRN	?GetNumCitiesFollowing@CvGameReligions@@QBEHW4ReligionTypes@@@Z:PROC ; CvGameReligions::GetNumCitiesFollowing
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumCitiesFollowing@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumCitiesFollowing@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetNumCitiesFollowing, COMDAT

; 2312 : {

	push	esi

; 2313 : 	int iRtnValue;
; 2314 : 	ReligionTypes eReligion;
; 2315 : 	eReligion = (ReligionTypes)lua_tointeger(L, 1);

	mov	esi, DWORD PTR _L$[esp]
	push	1
	push	esi
	call	_lua_tointeger

; 2316 : 	iRtnValue = GC.getGame().GetGameReligions()->GetNumCitiesFollowing(eReligion);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 8
	push	eax
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetNumCitiesFollowing@CvGameReligions@@QBEHW4ReligionTypes@@@Z ; CvGameReligions::GetNumCitiesFollowing

; 2317 : 	lua_pushinteger(L, iRtnValue);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8

; 2318 : 	return 1;

	mov	eax, 1
	pop	esi

; 2319 : }

	ret	0
?lGetNumCitiesFollowing@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetNumCitiesFollowing
_TEXT	ENDS
PUBLIC	?lGetBeliefsInReligion@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetBeliefsInReligion
EXTRN	??1CvReligionBeliefs@@QAE@XZ:PROC		; CvReligionBeliefs::~CvReligionBeliefs
EXTRN	?GetBelief@CvReligionBeliefs@@QBE?AW4BeliefTypes@@H@Z:PROC ; CvReligionBeliefs::GetBelief
EXTRN	?GetNumBeliefs@CvReligionBeliefs@@QBEHXZ:PROC	; CvReligionBeliefs::GetNumBeliefs
EXTRN	??0CvReligionBeliefs@@QAE@ABV0@@Z:PROC		; CvReligionBeliefs::CvReligionBeliefs
EXTRN	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z:PROC ; CvGameReligions::GetReligion
;	COMDAT xdata$x
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
xdata$x	SEGMENT
__unwindtable$?lGetBeliefsInReligion@CvLuaGame@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetBeliefsInReligion@CvLuaGame@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetBeliefsInReligion@CvLuaGame@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetBeliefsInReligion@CvLuaGame@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluagame.cpp
xdata$x	ENDS
;	COMDAT ?lGetBeliefsInReligion@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_beliefs$ = -188					; size = 176
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetBeliefsInReligion@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetBeliefsInReligion, COMDAT

; 2322 : {

	push	-1
	push	__ehhandler$?lGetBeliefsInReligion@CvLuaGame@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 176				; 000000b0H
	push	ebx
	push	esi
	push	edi

; 2323 : 	ReligionTypes eReligion;
; 2324 : 	eReligion = (ReligionTypes)lua_tointeger(L, 1);

	mov	edi, DWORD PTR _L$[esp+196]
	push	1
	push	edi
	call	_lua_tointeger

; 2325 : 
; 2326 : 	lua_createtable(L, 0, 0);

	push	0
	push	0
	push	edi
	mov	esi, eax
	call	_lua_createtable

; 2327 : 	const int t = lua_gettop(L);

	push	edi
	call	_lua_gettop

; 2328 : 	int idx = 1;
; 2329 : 
; 2330 : #ifdef AUI_WARNING_FIXES
; 2331 : 	const CvReligionBeliefs& beliefs = GC.getGame().GetGameReligions()->GetReligion(eReligion, NO_PLAYER)->m_Beliefs;
; 2332 : #else
; 2333 : 	CvReligionBeliefs beliefs = GC.getGame().GetGameReligions()->GetReligion(eReligion, NO_PLAYER)->m_Beliefs;

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 24					; 00000018H
	push	-1
	push	esi
	mov	ebx, eax
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	add	eax, 152				; 00000098H
	push	eax
	lea	ecx, DWORD PTR _beliefs$[esp+204]
	call	??0CvReligionBeliefs@@QAE@ABV0@@Z	; CvReligionBeliefs::CvReligionBeliefs

; 2334 : #endif
; 2335 : 	for(int iI = 0; iI < beliefs.GetNumBeliefs(); iI++)

	lea	ecx, DWORD PTR _beliefs$[esp+200]
	mov	DWORD PTR __$EHRec$[esp+208], 0
	xor	esi, esi
	call	?GetNumBeliefs@CvReligionBeliefs@@QBEHXZ ; CvReligionBeliefs::GetNumBeliefs
	test	eax, eax
	jle	SHORT $LN1@lGetBelief
$LL3@lGetBelief:

; 2336 : 	{
; 2337 : 		const BeliefTypes eBelief = beliefs.GetBelief(iI);

	push	esi
	lea	ecx, DWORD PTR _beliefs$[esp+204]
	call	?GetBelief@CvReligionBeliefs@@QBE?AW4BeliefTypes@@H@Z ; CvReligionBeliefs::GetBelief

; 2338 : 		lua_pushinteger(L, eBelief);

	push	eax
	push	edi
	call	_lua_pushinteger

; 2339 : 		lua_rawseti(L, t, idx++);

	inc	esi
	push	esi
	push	ebx
	push	edi
	call	_lua_rawseti
	add	esp, 20					; 00000014H
	lea	ecx, DWORD PTR _beliefs$[esp+200]
	call	?GetNumBeliefs@CvReligionBeliefs@@QBEHXZ ; CvReligionBeliefs::GetNumBeliefs
	cmp	esi, eax
	jl	SHORT $LL3@lGetBelief
$LN1@lGetBelief:

; 2340 : 	}
; 2341 : 
; 2342 : 	return 1;

	lea	ecx, DWORD PTR _beliefs$[esp+200]
	mov	DWORD PTR __$EHRec$[esp+208], -1
	call	??1CvReligionBeliefs@@QAE@XZ		; CvReligionBeliefs::~CvReligionBeliefs

; 2343 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+200]
	pop	edi
	pop	esi
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 188				; 000000bcH
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetBeliefsInReligion@CvLuaGame@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _beliefs$[ebp]
	jmp	??1CvReligionBeliefs@@QAE@XZ		; CvReligionBeliefs::~CvReligionBeliefs
__ehhandler$?lGetBeliefsInReligion@CvLuaGame@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetBeliefsInReligion@CvLuaGame@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetBeliefsInReligion@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetBeliefsInReligion
PUBLIC	?lGetNumReligionsStillToFound@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumReligionsStillToFound
EXTRN	?GetNumReligionsStillToFound@CvGameReligions@@QBEHXZ:PROC ; CvGameReligions::GetNumReligionsStillToFound
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumReligionsStillToFound@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumReligionsStillToFound@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetNumReligionsStillToFound, COMDAT

; 2347 : 	int iRtnValue;
; 2348 : 	iRtnValue = GC.getGame().GetGameReligions()->GetNumReligionsStillToFound();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetNumReligionsStillToFound@CvGameReligions@@QBEHXZ ; CvGameReligions::GetNumReligionsStillToFound

; 2349 : 	lua_pushinteger(L, iRtnValue);

	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 2350 : 	return 1;

	mov	eax, 1

; 2351 : }

	ret	0
?lGetNumReligionsStillToFound@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetNumReligionsStillToFound
_TEXT	ENDS
PUBLIC	?lGetNumReligionsFounded@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumReligionsFounded
EXTRN	?GetNumReligionsFounded@CvGameReligions@@QBEHXZ:PROC ; CvGameReligions::GetNumReligionsFounded
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumReligionsFounded@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumReligionsFounded@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetNumReligionsFounded, COMDAT

; 2355 : 	int iRtnValue;
; 2356 : 	iRtnValue = GC.getGame().GetGameReligions()->GetNumReligionsFounded();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetNumReligionsFounded@CvGameReligions@@QBEHXZ ; CvGameReligions::GetNumReligionsFounded

; 2357 : 	lua_pushinteger(L, iRtnValue);

	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 2358 : 	return 1;

	mov	eax, 1

; 2359 : }

	ret	0
?lGetNumReligionsFounded@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetNumReligionsFounded
_TEXT	ENDS
PUBLIC	?lGetReligionName@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetReligionName
EXTRN	?getReligionInfo@CvGlobals@@QAEPAVCvReligionEntry@@W4ReligionTypes@@@Z:PROC ; CvGlobals::getReligionInfo
; Function compile flags: /Ogtpy
;	COMDAT ?lGetReligionName@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv79 = -4						; size = 4
_L$ = 8							; size = 4
?lGetReligionName@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetReligionName, COMDAT

; 2390 : {

	push	ecx
	push	esi
	push	edi

; 2391 : 	const ReligionTypes eReligion = static_cast<ReligionTypes>(luaL_checkint(L, 1));

	mov	edi, DWORD PTR _L$[esp+8]
	push	1
	push	edi
	call	_luaL_checkinteger

; 2392 : 	const CvReligion* pkReligion = GC.getGame().GetGameReligions()->GetReligion(eReligion, NO_PLAYER);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 8
	mov	esi, eax
	push	-1
	push	esi
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion

; 2393 : #ifdef AUI_WARNING_FIXES
; 2394 : 	if (pkReligion && pkReligion->m_szCustomName[0] != '\0')
; 2395 : #else
; 2396 : 	if(pkReligion && strlen(pkReligion->m_szCustomName) > 0)

	test	eax, eax
	je	SHORT $LN2@lGetReligi
	lea	edx, DWORD PTR [eax+22]
	mov	eax, edx
	push	ebx
	lea	ebx, DWORD PTR [eax+1]
$LL9@lGetReligi:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL9@lGetReligi
	sub	eax, ebx
	pop	ebx
	je	SHORT $LN2@lGetReligi

; 2397 : #endif
; 2398 : 	{
; 2399 : 		lua_pushstring(L, pkReligion->m_szCustomName);

	push	edx
	push	edi
	call	_lua_pushstring
	add	esp, 8
	pop	edi

; 2400 : 		return 1;

	mov	eax, 1
	pop	esi

; 2411 : }

	pop	ecx
	ret	0
$LN2@lGetReligi:

; 2401 : 	}
; 2402 : 
; 2403 : 	CvReligionEntry* pkEntry = GC.getReligionInfo(eReligion);

	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getReligionInfo@CvGlobals@@QAEPAVCvReligionEntry@@W4ReligionTypes@@@Z ; CvGlobals::getReligionInfo

; 2404 : 	if(pkEntry != NULL)

	test	eax, eax
	je	SHORT $LN1@lGetReligi

; 2405 : 	{
; 2406 : 		lua_pushstring(L, pkEntry->GetDescriptionKey());

	lea	ecx, DWORD PTR [eax+64]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	edi
	call	_lua_pushstring
	add	esp, 8
	pop	edi

; 2407 : 		return 1;

	mov	eax, 1
	pop	esi

; 2411 : }

	pop	ecx
	ret	0
$LN1@lGetReligi:
	pop	edi

; 2408 : 	}
; 2409 : 
; 2410 : 	return 0;

	xor	eax, eax
	pop	esi

; 2411 : }

	pop	ecx
	ret	0
?lGetReligionName@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetReligionName
_TEXT	ENDS
PUBLIC	?lGetFounderBenefitsReligion@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetFounderBenefitsReligion
EXTRN	?GetFounderBenefitsReligion@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z:PROC ; CvGameReligions::GetFounderBenefitsReligion
; Function compile flags: /Ogtpy
;	COMDAT ?lGetFounderBenefitsReligion@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFounderBenefitsReligion@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetFounderBenefitsReligion, COMDAT

; 2414 : {

	push	esi

; 2415 : 	const PlayerTypes ePlayer = static_cast<PlayerTypes>(luaL_checkint(L, 1));

	mov	esi, DWORD PTR _L$[esp]
	push	1
	push	esi
	call	_luaL_checkinteger

; 2416 : 	ReligionTypes eReligion = GC.getGame().GetGameReligions()->GetFounderBenefitsReligion(ePlayer);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 8
	push	eax
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetFounderBenefitsReligion@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetFounderBenefitsReligion

; 2417 : 	lua_pushinteger(L, eReligion);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8

; 2418 : 	return 1;

	mov	eax, 1
	pop	esi

; 2419 : }

	ret	0
?lGetFounderBenefitsReligion@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetFounderBenefitsReligion
_TEXT	ENDS
PUBLIC	?lFoundPantheon@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lFoundPantheon
EXTRN	?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z:PROC ; CvGameReligions::FoundPantheon
; Function compile flags: /Ogtpy
;	COMDAT ?lFoundPantheon@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lFoundPantheon@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lFoundPantheon, COMDAT

; 2422 : {

	push	esi

; 2423 : 	const PlayerTypes ePlayer = static_cast<PlayerTypes>(luaL_checkint(L, 1));

	mov	esi, DWORD PTR _L$[esp]
	push	edi
	push	1
	push	esi
	call	_luaL_checkinteger

; 2424 : 	const BeliefTypes eBelief = static_cast<BeliefTypes>(luaL_checkint(L, 2));

	push	2
	push	esi
	mov	edi, eax
	call	_luaL_checkinteger

; 2425 : 
; 2426 : #ifdef AUI_RELIGION_FIX_SIMULTANEOUS_ENHANCE_OR_FOUND_CAUSING_MULTIPLE
; 2427 : 	CvGameReligions* pkGameReligions(GC.getGame().GetGameReligions());
; 2428 : 	CvGameReligions::FOUNDING_RESULT eResult = pkGameReligions->CanCreatePantheon(ePlayer, true);
; 2429 : 	if (eResult == CvGameReligions::FOUNDING_OK)
; 2430 : 	{
; 2431 : 		if (pkGameReligions->IsPantheonBeliefAvailable(eBelief))
; 2432 : 		{
; 2433 : 			pkGameReligions->FoundPantheon(ePlayer, eBelief);
; 2434 : 		}
; 2435 : 		else
; 2436 : 		{
; 2437 : 			CvGameReligions::NotifyPlayer(ePlayer, CvGameReligions::FOUNDING_BELIEF_IN_USE);
; 2438 : 		}
; 2439 : 	}
; 2440 : 	else
; 2441 : 	{
; 2442 : 		CvGameReligions::NotifyPlayer(ePlayer, eResult);
; 2443 : 	}
; 2444 : #else
; 2445 : 	GC.getGame().GetGameReligions()->FoundPantheon(ePlayer, eBelief);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 16					; 00000010H
	push	eax
	push	edi
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z ; CvGameReligions::FoundPantheon
	pop	edi

; 2446 : #endif
; 2447 : 
; 2448 : 	return 0;

	xor	eax, eax
	pop	esi

; 2449 : }

	ret	0
?lFoundPantheon@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lFoundPantheon
_TEXT	ENDS
PUBLIC	?lFoundReligion@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lFoundReligion
EXTRN	?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z:PROC ; CvGameReligions::FoundReligion
; Function compile flags: /Ogtpy
;	COMDAT ?lFoundReligion@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_stack_size$227895 = -28				; size = 4
_eBelief4$ = -24					; size = 4
_eBelief3$ = -20					; size = 4
_eBelief2$ = -16					; size = 4
_eBelief1$ = -12					; size = 4
_szCustomName$ = -8					; size = 4
_eReligion$ = -4					; size = 4
_L$ = 8							; size = 4
?lFoundReligion@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lFoundReligion, COMDAT

; 2452 : {

	sub	esp, 28					; 0000001cH
	push	ebx
	push	ebp
	push	esi

; 2453 : 	const PlayerTypes ePlayer = static_cast<PlayerTypes>(luaL_checkint(L, 1));

	mov	esi, DWORD PTR _L$[esp+36]
	push	edi
	push	1
	push	esi
	call	_luaL_checkinteger

; 2454 : 	const ReligionTypes eReligion = static_cast<ReligionTypes>(luaL_checkint(L, 2));

	push	2
	push	esi
	mov	ebp, eax
	call	_luaL_checkinteger

; 2455 : 	const char* szCustomName = lua_tostring(L, 3);

	push	0
	push	3
	push	esi
	mov	DWORD PTR _eReligion$[esp+72], eax
	call	_lua_tolstring

; 2456 : 	const BeliefTypes eBelief1 = static_cast<BeliefTypes>(luaL_checkint(L, 4));

	push	4
	push	esi
	mov	DWORD PTR _szCustomName$[esp+80], eax
	call	_luaL_checkinteger

; 2457 : 	const BeliefTypes eBelief2 = static_cast<BeliefTypes>(luaL_checkint(L, 5));

	push	5
	push	esi
	mov	DWORD PTR _eBelief1$[esp+88], eax
	call	_luaL_checkinteger

; 2458 : 	const BeliefTypes eBelief3 = static_cast<BeliefTypes>(luaL_checkint(L, 6));

	push	6
	push	esi
	mov	DWORD PTR _eBelief2$[esp+96], eax
	call	_luaL_checkinteger

; 2459 : 	const BeliefTypes eBelief4 = static_cast<BeliefTypes>(luaL_checkint(L, 7));

	push	7
	push	esi
	mov	DWORD PTR _eBelief3$[esp+104], eax
	call	_luaL_checkinteger

; 2460 : 	CvCity* pkHolyCity	= CvLuaCity::GetInstance(L, 8);

	push	esi
	mov	DWORD PTR _eBelief4$[esp+108], eax
	call	_lua_gettop
	add	esp, 64					; 00000040H
	push	8
	push	esi
	mov	DWORD PTR _stack_size$227895[esp+52], eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 8
	cmp	eax, 5
	jne	SHORT $LN5@lFoundReli
	push	OFFSET $SG225459
	push	8
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lFoundReli
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lFoundReli
	xor	bl, bl
$LN5@lFoundReli:
	mov	eax, DWORD PTR _stack_size$227895[esp+44]
	push	eax
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN4@lFoundReli
	push	esi
	call	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
	add	esp, 4
$LN4@lFoundReli:

; 2461 : 
; 2462 : #ifdef AUI_RELIGION_FIX_SIMULTANEOUS_ENHANCE_OR_FOUND_CAUSING_MULTIPLE
; 2463 : 	if (pkHolyCity && ePlayer != NO_PLAYER)
; 2464 : 	{
; 2465 : 		CvGameReligions* pkGameReligions(GC.getGame().GetGameReligions());
; 2466 : 		CvGameReligions::FOUNDING_RESULT eResult = pkGameReligions->CanFoundReligion(ePlayer, eReligion, szCustomName, eBelief1, eBelief2, eBelief3, eBelief4, pkHolyCity);
; 2467 : 		if (eResult == CvGameReligions::FOUNDING_OK)
; 2468 : 			pkGameReligions->FoundReligion(ePlayer, eReligion, szCustomName, eBelief1, eBelief2, eBelief3, eBelief4, pkHolyCity);
; 2469 : 		else
; 2470 : 		{
; 2471 : 			CvGameReligions::NotifyPlayer(ePlayer, eResult);
; 2472 : 			// We don't want them to lose the opportunity to found the religion, and the Great Prophet is already gone so just repost the notification
; 2473 : 			CvPlayerAI& kPlayer = GET_PLAYER(ePlayer);
; 2474 : 			if (kPlayer.isHuman() && eResult != CvGameReligions::FOUNDING_NO_RELIGIONS_AVAILABLE && eResult != CvGameReligions::FOUNDING_NO_BELIEFS_AVAILABLE)
; 2475 : 			{
; 2476 : 				CvNotifications* pNotifications = kPlayer.GetNotifications();
; 2477 : 				if (pNotifications)
; 2478 : 				{
; 2479 : 					CvString strBuffer = GetLocalizedText("TXT_KEY_NOTIFICATION_FOUND_RELIGION");
; 2480 : 					CvString strSummary = GetLocalizedText("TXT_KEY_NOTIFICATION_SUMMARY_FOUND_RELIGION");
; 2481 : 					pNotifications->Add(NOTIFICATION_FOUND_RELIGION, strBuffer, strSummary, pkHolyCity->getX(), pkHolyCity->getY(), -1, pkHolyCity->GetID());
; 2482 : 				}
; 2483 : 				kPlayer.GetReligions()->SetFoundingReligion(true);
; 2484 : 			}
; 2485 : #ifdef AUI_DLLNETMESSAGEHANDLER_FIX_RESPAWN_PROPHET_IF_BEATEN_TO_LAST_RELIGION
; 2486 : 			else if (kPlayer.getCapitalCity())
; 2487 : 			{
; 2488 : 				UnitTypes eUnit = (UnitTypes)GC.getInfoTypeForString("UNIT_PROPHET", true);
; 2489 : 				if (eUnit != NO_UNIT)
; 2490 : 				{
; 2491 : 					kPlayer.getCapitalCity()->GetCityCitizens()->DoSpawnGreatPerson(eUnit, false /*bIncrementCount*/, false, true);
; 2492 : 				}
; 2493 : 			}
; 2494 : #endif
; 2495 : 		}
; 2496 : 	}
; 2497 : #else
; 2498 : 	GC.getGame().GetGameReligions()->FoundReligion(ePlayer, eReligion, szCustomName, eBelief1, eBelief2, eBelief3, eBelief4, pkHolyCity);

	mov	ecx, DWORD PTR _eBelief4$[esp+44]
	mov	edx, DWORD PTR _eBelief3$[esp+44]
	mov	eax, DWORD PTR _eBelief2$[esp+44]
	push	edi
	push	ecx
	mov	ecx, DWORD PTR _eBelief1$[esp+52]
	push	edx
	mov	edx, DWORD PTR _szCustomName$[esp+56]
	push	eax
	mov	eax, DWORD PTR _eReligion$[esp+60]
	push	ecx
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edx
	push	eax
	push	ebp
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z ; CvGameReligions::FoundReligion
	pop	edi
	pop	esi
	pop	ebp

; 2499 : #endif
; 2500 : 
; 2501 : 	return 0;

	xor	eax, eax
	pop	ebx

; 2502 : }

	add	esp, 28					; 0000001cH
	ret	0
?lFoundReligion@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lFoundReligion
_TEXT	ENDS
PUBLIC	?lEnhanceReligion@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lEnhanceReligion
EXTRN	?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z:PROC ; CvGameReligions::EnhanceReligion
; Function compile flags: /Ogtpy
;	COMDAT ?lEnhanceReligion@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lEnhanceReligion@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lEnhanceReligion, COMDAT

; 2505 : {

	push	ebx
	push	ebp
	push	esi

; 2506 : 	const PlayerTypes ePlayer = static_cast<PlayerTypes>(luaL_checkint(L, 1));

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	1
	push	esi
	call	_luaL_checkinteger

; 2507 : 	const ReligionTypes eReligion = static_cast<ReligionTypes>(luaL_checkint(L, 2));

	push	2
	push	esi
	mov	edi, eax
	call	_luaL_checkinteger

; 2508 : 	const BeliefTypes eBelief1 = static_cast<BeliefTypes>(luaL_checkint(L, 3));

	push	3
	push	esi
	mov	ebx, eax
	call	_luaL_checkinteger

; 2509 : 	const BeliefTypes eBelief2 = static_cast<BeliefTypes>(luaL_checkint(L, 4));

	push	4
	push	esi
	mov	ebp, eax
	call	_luaL_checkinteger

; 2510 : 
; 2511 : #ifdef AUI_RELIGION_FIX_SIMULTANEOUS_ENHANCE_OR_FOUND_CAUSING_MULTIPLE
; 2512 : 	CvGameReligions* pkGameReligions(GC.getGame().GetGameReligions());
; 2513 : 
; 2514 : 	CvGameReligions::FOUNDING_RESULT eResult = pkGameReligions->CanEnhanceReligion(ePlayer, eReligion, eBelief1, eBelief2);
; 2515 : 	if (eResult == CvGameReligions::FOUNDING_OK)
; 2516 : 		pkGameReligions->EnhanceReligion(ePlayer, eReligion, eBelief1, eBelief2);
; 2517 : 	else
; 2518 : 	{
; 2519 : 		CvGameReligions::NotifyPlayer(ePlayer, eResult);
; 2520 : 		// We don't want them to lose the opportunity to enhance the religion, and the Great Prophet is already gone so just repost the notification
; 2521 : 		CvPlayerAI& kPlayer = GET_PLAYER(ePlayer);
; 2522 : 		CvCity* pkCity = kPlayer.getCapitalCity();
; 2523 : 		if (kPlayer.isHuman() && pkCity && eResult != CvGameReligions::FOUNDING_NO_BELIEFS_AVAILABLE)
; 2524 : 		{
; 2525 : 			CvNotifications* pNotifications = kPlayer.GetNotifications();
; 2526 : 			if (pNotifications)
; 2527 : 			{
; 2528 : 				CvString strBuffer = GetLocalizedText("TXT_KEY_NOTIFICATION_ENHANCE_RELIGION");
; 2529 : 				CvString strSummary = GetLocalizedText("TXT_KEY_NOTIFICATION_SUMMARY_ENHANCE_RELIGION");
; 2530 : 				pNotifications->Add(NOTIFICATION_ENHANCE_RELIGION, strBuffer, strSummary, pkCity->getX(), pkCity->getY(), -1, pkCity->GetID());
; 2531 : 			}
; 2532 : 			kPlayer.GetReligions()->SetFoundingReligion(true);
; 2533 : 		}
; 2534 : #ifdef AUI_DLLNETMESSAGEHANDLER_FIX_RESPAWN_PROPHET_IF_BEATEN_TO_LAST_RELIGION
; 2535 : 		else if (kPlayer.getCapitalCity())
; 2536 : 		{
; 2537 : 			UnitTypes eUnit = (UnitTypes)GC.getInfoTypeForString("UNIT_PROPHET", true);
; 2538 : 			if (eUnit != NO_UNIT)
; 2539 : 			{
; 2540 : 				kPlayer.getCapitalCity()->GetCityCitizens()->DoSpawnGreatPerson(eUnit, false /*bIncrementCount*/, false, true);
; 2541 : 			}
; 2542 : 	}
; 2543 : #endif
; 2544 : 	}
; 2545 : #else
; 2546 : 	GC.getGame().GetGameReligions()->EnhanceReligion(ePlayer, eReligion, eBelief1, eBelief2);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 32					; 00000020H
	push	eax
	push	ebp
	push	ebx
	push	edi
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z ; CvGameReligions::EnhanceReligion
	pop	edi
	pop	esi
	pop	ebp

; 2547 : #endif
; 2548 : 
; 2549 : 	return 0;

	xor	eax, eax
	pop	ebx

; 2550 : }

	ret	0
?lEnhanceReligion@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lEnhanceReligion
_TEXT	ENDS
PUBLIC	?lSetHolyCity@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lSetHolyCity
EXTRN	?SetHolyCity@CvGameReligions@@QAEXW4ReligionTypes@@PAVCvCity@@@Z:PROC ; CvGameReligions::SetHolyCity
; Function compile flags: /Ogtpy
;	COMDAT ?lSetHolyCity@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eReligion$ = -4					; size = 4
_L$ = 8							; size = 4
?lSetHolyCity@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lSetHolyCity, COMDAT

; 2553 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 2554 : 	const ReligionTypes eReligion = static_cast<ReligionTypes>(luaL_checkint(L, 1));

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	1
	push	esi
	call	_luaL_checkinteger

; 2555 : 	CvCity* pkHolyCity	= CvLuaCity::GetInstance(L, 2);

	push	esi
	mov	DWORD PTR _eReligion$[esp+32], eax
	call	_lua_gettop
	push	2
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 5
	jne	SHORT $LN5@lSetHolyCi
	push	OFFSET $SG225459
	push	2
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lSetHolyCi
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lSetHolyCi
	xor	bl, bl
$LN5@lSetHolyCi:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN4@lSetHolyCi
	push	esi
	call	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
	add	esp, 4
$LN4@lSetHolyCi:

; 2556 : 
; 2557 : 	GC.getGame().GetGameReligions()->SetHolyCity(eReligion, pkHolyCity);

	mov	eax, DWORD PTR _eReligion$[esp+20]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	push	eax
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?SetHolyCity@CvGameReligions@@QAEXW4ReligionTypes@@PAVCvCity@@@Z ; CvGameReligions::SetHolyCity
	pop	edi
	pop	esi
	pop	ebp

; 2558 : 
; 2559 : 	return 0;

	xor	eax, eax
	pop	ebx

; 2560 : }

	pop	ecx
	ret	0
?lSetHolyCity@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lSetHolyCity
_TEXT	ENDS
PUBLIC	?lGetFounder@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetFounder
; Function compile flags: /Ogtpy
;	COMDAT ?lGetFounder@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFounder@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetFounder, COMDAT

; 2563 : {

	push	esi

; 2564 : 	const ReligionTypes eReligion = static_cast<ReligionTypes>(luaL_checkint(L, 1));

	mov	esi, DWORD PTR _L$[esp]
	push	edi
	push	1
	push	esi
	call	_luaL_checkinteger

; 2565 : 	const PlayerTypes ePlayer = static_cast<PlayerTypes>(luaL_checkint(L, 2));

	push	2
	push	esi
	mov	edi, eax
	call	_luaL_checkinteger

; 2566 : 
; 2567 : 	const CvReligion* pReligion = GC.getGame().GetGameReligions()->GetReligion(eReligion, ePlayer);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 16					; 00000010H
	push	eax
	push	edi
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion

; 2568 : 
; 2569 : 	lua_pushinteger(L, (int)pReligion->m_eFounder);

	mov	eax, DWORD PTR [eax+4]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi

; 2570 : 	return 1;

	mov	eax, 1
	pop	esi

; 2571 : }

	ret	0
?lGetFounder@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetFounder
_TEXT	ENDS
PUBLIC	?lSetFounder@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lSetFounder
EXTRN	?SetFounder@CvGameReligions@@QAEXW4ReligionTypes@@W4PlayerTypes@@@Z:PROC ; CvGameReligions::SetFounder
; Function compile flags: /Ogtpy
;	COMDAT ?lSetFounder@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetFounder@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lSetFounder, COMDAT

; 2574 : {

	push	esi

; 2575 : 	const ReligionTypes eReligion = static_cast<ReligionTypes>(luaL_checkint(L, 1));

	mov	esi, DWORD PTR _L$[esp]
	push	edi
	push	1
	push	esi
	call	_luaL_checkinteger

; 2576 : 	const PlayerTypes eFounder = static_cast<PlayerTypes>(luaL_checkint(L, 2));

	push	2
	push	esi
	mov	edi, eax
	call	_luaL_checkinteger

; 2577 : 
; 2578 : 	GC.getGame().GetGameReligions()->SetFounder(eReligion, eFounder);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 16					; 00000010H
	push	eax
	push	edi
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?SetFounder@CvGameReligions@@QAEXW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::SetFounder
	pop	edi

; 2579 : 
; 2580 : 	return 0;

	xor	eax, eax
	pop	esi

; 2581 : }

	ret	0
?lSetFounder@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lSetFounder
_TEXT	ENDS
PUBLIC	?lGetTurnsBetweenMinorCivElections@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetTurnsBetweenMinorCivElections
EXTRN	?GetTurnsBetweenMinorCivElections@CvGame@@QAEHXZ:PROC ; CvGame::GetTurnsBetweenMinorCivElections
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTurnsBetweenMinorCivElections@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTurnsBetweenMinorCivElections@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetTurnsBetweenMinorCivElections, COMDAT

; 2585 : 	lua_pushinteger(L, GC.getGame().GetTurnsBetweenMinorCivElections());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetTurnsBetweenMinorCivElections@CvGame@@QAEHXZ ; CvGame::GetTurnsBetweenMinorCivElections
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 2586 : 	return 1;

	mov	eax, 1

; 2587 : }

	ret	0
?lGetTurnsBetweenMinorCivElections@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetTurnsBetweenMinorCivElections
_TEXT	ENDS
PUBLIC	?lGetTurnsUntilMinorCivElection@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetTurnsUntilMinorCivElection
EXTRN	?GetTurnsUntilMinorCivElection@CvGame@@QAEHXZ:PROC ; CvGame::GetTurnsUntilMinorCivElection
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTurnsUntilMinorCivElection@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTurnsUntilMinorCivElection@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetTurnsUntilMinorCivElection, COMDAT

; 2591 : 	lua_pushinteger(L, GC.getGame().GetTurnsUntilMinorCivElection());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetTurnsUntilMinorCivElection@CvGame@@QAEHXZ ; CvGame::GetTurnsUntilMinorCivElection
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 2592 : 	return 1;

	mov	eax, 1

; 2593 : }

	ret	0
?lGetTurnsUntilMinorCivElection@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetTurnsUntilMinorCivElection
_TEXT	ENDS
PUBLIC	?lGetNumActiveLeagues@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumActiveLeagues
EXTRN	?GetNumActiveLeagues@CvGameLeagues@@QAEHXZ:PROC	; CvGameLeagues::GetNumActiveLeagues
EXTRN	?GetGameLeagues@CvGame@@QAEPAVCvGameLeagues@@XZ:PROC ; CvGame::GetGameLeagues
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumActiveLeagues@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumActiveLeagues@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetNumActiveLeagues, COMDAT

; 2597 : 	lua_pushinteger(L, GC.getGame().GetGameLeagues()->GetNumActiveLeagues());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetGameLeagues@CvGame@@QAEPAVCvGameLeagues@@XZ ; CvGame::GetGameLeagues
	mov	ecx, eax
	call	?GetNumActiveLeagues@CvGameLeagues@@QAEHXZ ; CvGameLeagues::GetNumActiveLeagues
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 2598 : 	return 1;

	mov	eax, 1

; 2599 : }

	ret	0
?lGetNumActiveLeagues@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetNumActiveLeagues
_TEXT	ENDS
PUBLIC	?lGetNumLeaguesEverFounded@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumLeaguesEverFounded
EXTRN	?GetNumLeaguesEverFounded@CvGameLeagues@@QBEHXZ:PROC ; CvGameLeagues::GetNumLeaguesEverFounded
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumLeaguesEverFounded@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumLeaguesEverFounded@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetNumLeaguesEverFounded, COMDAT

; 2603 : #ifdef AUI_LEAGUES_FIX_POSSIBLE_DEALLOCATION_CRASH
; 2604 : 	lua_pushinteger(L, GC.getGame().GetGameLeagues()->GetNumActiveLeagues());
; 2605 : #else
; 2606 : 	lua_pushinteger(L, GC.getGame().GetGameLeagues()->GetNumLeaguesEverFounded());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetGameLeagues@CvGame@@QAEPAVCvGameLeagues@@XZ ; CvGame::GetGameLeagues
	mov	ecx, eax
	call	?GetNumLeaguesEverFounded@CvGameLeagues@@QBEHXZ ; CvGameLeagues::GetNumLeaguesEverFounded
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 2607 : #endif
; 2608 : 	return 1;

	mov	eax, 1

; 2609 : }

	ret	0
?lGetNumLeaguesEverFounded@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetNumLeaguesEverFounded
_TEXT	ENDS
PUBLIC	?lGetLeague@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetLeague
EXTRN	?GetLeague@CvGameLeagues@@QAEPAVCvLeague@@W4LeagueTypes@@@Z:PROC ; CvGameLeagues::GetLeague
; Function compile flags: /Ogtpy
;	COMDAT ?lGetLeague@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetLeague@CvLuaGame@@KAHPAUlua_State@@@Z PROC		; CvLuaGame::lGetLeague, COMDAT

; 2612 : {

	push	esi

; 2613 : #ifdef AUI_LEAGUES_FIX_POSSIBLE_DEALLOCATION_CRASH
; 2614 : 	CvLeague* pLeague = GC.getGame().GetGameLeagues()->GetActiveLeague();
; 2615 : #else
; 2616 : 	const LeagueTypes eLeague = (LeagueTypes) lua_tointeger(L, 1);

	mov	esi, DWORD PTR _L$[esp]
	push	1
	push	esi
	call	_lua_tointeger

; 2617 : 
; 2618 : 	CvLeague* pLeague = GC.getGame().GetGameLeagues()->GetLeague(eLeague);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 8
	push	eax
	call	?GetGameLeagues@CvGame@@QAEPAVCvGameLeagues@@XZ ; CvGame::GetGameLeagues
	mov	ecx, eax
	call	?GetLeague@CvGameLeagues@@QAEPAVCvLeague@@W4LeagueTypes@@@Z ; CvGameLeagues::GetLeague

; 2619 : #endif
; 2620 : 	if (pLeague != NULL)

	test	eax, eax
	je	SHORT $LN2@lGetLeague

; 2621 : 	{
; 2622 : 		CvLuaLeague::Push(L, pLeague);

	push	eax
	push	esi
	call	?Push@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAXPAUlua_State@@PAVCvLeague@@@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::Push
	add	esp, 8

; 2627 : 	}
; 2628 : 	return 1;

	mov	eax, 1
	pop	esi

; 2629 : }

	ret	0
$LN2@lGetLeague:

; 2623 : 	}
; 2624 : 	else
; 2625 : 	{
; 2626 : 		lua_pushnil(L);

	push	esi
	call	_lua_pushnil
	add	esp, 4

; 2627 : 	}
; 2628 : 	return 1;

	mov	eax, 1
	pop	esi

; 2629 : }

	ret	0
?lGetLeague@CvLuaGame@@KAHPAUlua_State@@@Z ENDP		; CvLuaGame::lGetLeague
_TEXT	ENDS
PUBLIC	?lGetActiveLeague@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetActiveLeague
EXTRN	?GetActiveLeague@CvGameLeagues@@QAEPAVCvLeague@@XZ:PROC ; CvGameLeagues::GetActiveLeague
; Function compile flags: /Ogtpy
;	COMDAT ?lGetActiveLeague@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetActiveLeague@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetActiveLeague, COMDAT

; 2633 : 	CvLeague* pLeague = GC.getGame().GetGameLeagues()->GetActiveLeague();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetGameLeagues@CvGame@@QAEPAVCvGameLeagues@@XZ ; CvGame::GetGameLeagues
	mov	ecx, eax
	call	?GetActiveLeague@CvGameLeagues@@QAEPAVCvLeague@@XZ ; CvGameLeagues::GetActiveLeague

; 2634 : 	if (pLeague != NULL)

	test	eax, eax
	je	SHORT $LN2@lGetActive

; 2635 : 	{
; 2636 : 		CvLuaLeague::Push(L, pLeague);

	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	?Push@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAXPAUlua_State@@PAVCvLeague@@@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::Push
	add	esp, 8

; 2641 : 	}
; 2642 : 	return 1;

	mov	eax, 1

; 2643 : }

	ret	0
$LN2@lGetActive:

; 2637 : 	}
; 2638 : 	else
; 2639 : 	{
; 2640 : 		lua_pushnil(L);

	mov	ecx, DWORD PTR _L$[esp-4]
	push	ecx
	call	_lua_pushnil
	add	esp, 4

; 2641 : 	}
; 2642 : 	return 1;

	mov	eax, 1

; 2643 : }

	ret	0
?lGetActiveLeague@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetActiveLeague
_TEXT	ENDS
PUBLIC	?lIsProcessingMessages@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsProcessingMessages
; Function compile flags: /Ogtpy
;	COMDAT ?lIsProcessingMessages@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsProcessingMessages@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lIsProcessingMessages, COMDAT

; 2647 : 	lua_pushboolean(L, gDLL->IsProcessingGameCoreMessages());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+908]
	call	edx
	mov	ecx, DWORD PTR _L$[esp-4]
	movzx	eax, al
	push	eax
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 2648 : 	return 1;

	mov	eax, 1

; 2649 : }

	ret	0
?lIsProcessingMessages@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lIsProcessingMessages
_TEXT	ENDS
PUBLIC	?lGetArtifactName@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetArtifactName
EXTRN	?GetGreatWorkName@CultureHelpers@@YA?AVCvString@@W4GreatWorkType@@@Z:PROC ; CultureHelpers::GetGreatWorkName
EXTRN	?GetArtifact@CultureHelpers@@YA?AW4GreatWorkType@@PAVCvPlot@@@Z:PROC ; CultureHelpers::GetArtifact
;	COMDAT xdata$x
; File s:\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetArtifactName@CvLuaGame@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetArtifactName@CvLuaGame@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetArtifactName@CvLuaGame@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetArtifactName@CvLuaGame@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluagame.cpp
xdata$x	ENDS
;	COMDAT ?lGetArtifactName@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_szName$ = -40						; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetArtifactName@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetArtifactName, COMDAT

; 2836 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetArtifactName@CvLuaGame@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 28					; 0000001cH
	push	ebx
	push	esi

; 2837 : 	CvPlot* pkPlot = CvLuaPlot::GetInstance(L, 1, false);

	mov	esi, DWORD PTR _L$[esp+44]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebx, eax
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN6@lGetArtifa
	push	OFFSET $SG225517
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN6@lGetArtifa
	push	-1
	push	esi
	call	_lua_touserdata
	add	esp, 8
	mov	edi, eax
$LN6@lGetArtifa:
	push	ebx
	push	esi
	call	_lua_settop

; 2838 : 	GreatWorkType eGreatWork = CultureHelpers::GetArtifact(pkPlot);

	push	edi
	call	?GetArtifact@CultureHelpers@@YA?AW4GreatWorkType@@PAVCvPlot@@@Z ; CultureHelpers::GetArtifact

; 2839 : 	CvString szName = CultureHelpers::GetGreatWorkName(eGreatWork);

	push	eax
	lea	eax, DWORD PTR _szName$[esp+68]
	push	eax
	call	?GetGreatWorkName@CultureHelpers@@YA?AVCvString@@W4GreatWorkType@@@Z ; CultureHelpers::GetGreatWorkName
	add	esp, 20					; 00000014H

; 2840 : 	lua_pushstring(L, szName);

	lea	ecx, DWORD PTR _szName$[esp+52]
	mov	DWORD PTR __$EHRec$[esp+60], 0
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8

; 2841 : 	return 1;

	lea	ecx, DWORD PTR _szName$[esp+52]
	mov	DWORD PTR __$EHRec$[esp+60], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2842 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+52]
	pop	edi
	pop	esi
	mov	eax, 1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetArtifactName@CvLuaGame@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _szName$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetArtifactName@CvLuaGame@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetArtifactName@CvLuaGame@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetArtifactName@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetArtifactName
PUBLIC	?lGetLongestCityConnectionPlots@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetLongestCityConnectionPlots
EXTRN	?RouteGetExtraChild@@YAHPAVCvAStarNode@@HAAH1PAVCvAStar@@@Z:PROC ; RouteGetExtraChild
EXTRN	?RouteGetNumExtraChildren@@YAHPAVCvAStarNode@@PAVCvAStar@@@Z:PROC ; RouteGetNumExtraChildren
EXTRN	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z:PROC	; CvPlayer::nextCity
EXTRN	?GeneratePath@CvAStar@@QAE_NHHHHH_N@Z:PROC	; CvAStar::GeneratePath
EXTRN	?getCivilizationTypeKey@CvPlayer@@QBEPBDXZ:PROC	; CvPlayer::getCivilizationTypeKey
EXTRN	?plot@CvCity@@QBEPAVCvPlot@@XZ:PROC		; CvCity::plot
EXTRN	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z:PROC	; CvPlayer::firstCity
EXTRN	?getRouteFinder@CvGlobals@@QAEAAVCvAStar@@XZ:PROC ; CvGlobals::getRouteFinder
; Function compile flags: /Ogtpy
;	COMDAT ?lGetLongestCityConnectionPlots@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ui$225281 = -44					; size = 4
_pFirstCityPlot$225294 = -40				; size = 4
_pFirstCity$225287 = -36				; size = 4
tv483 = -32						; size = 4
_iFurthestPlotDistance$ = -28				; size = 4
_pPlot1$ = -24						; size = 4
_pPlot2$ = -20						; size = 4
_pSecondCityPlot$225299 = -16				; size = 4
_iThisPlotDistance$225310 = -12				; size = 4
_iLoop2$225290 = -8					; size = 4
_iLoop1$225289 = -4					; size = 4
_L$ = 8							; size = 4
?lGetLongestCityConnectionPlots@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetLongestCityConnectionPlots, COMDAT

; 2852 : {

	sub	esp, 44					; 0000002cH
	push	ebx
	push	ebp
	push	esi
	push	edi

; 2853 : 	CvPlot* pPlot1 = NULL;
; 2854 : 	CvPlot* pPlot2 = NULL;
; 2855 : 
; 2856 : 	int iFurthestPlotDistance = 0;
; 2857 : 
; 2858 : 	GC.getRouteFinder().SetNumExtraChildrenFunc(NULL);

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR _pPlot1$[esp+60], 0
	mov	DWORD PTR _pPlot2$[esp+60], 0
	mov	DWORD PTR _iFurthestPlotDistance$[esp+60], 0
	call	?getRouteFinder@CvGlobals@@QAEAAVCvAStar@@XZ ; CvGlobals::getRouteFinder

; 2859 : 	GC.getRouteFinder().SetExtraChildGetterFunc(NULL);

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR [eax+28], 0
	call	?getRouteFinder@CvGlobals@@QAEAAVCvAStar@@XZ ; CvGlobals::getRouteFinder

; 2860 : 
; 2861 : 	for(uint ui = 0; ui < MAX_MAJOR_CIVS; ui++)

	xor	ebp, ebp
	xor	esi, esi
	mov	DWORD PTR [eax+32], 0
	mov	DWORD PTR _ui$225281[esp+60], ebp
	mov	DWORD PTR tv483[esp+60], esi
	npad	3
$LL17@lGetLonges:

; 2862 : 	{
; 2863 : 		PlayerTypes ePlayer = (PlayerTypes)ui;
; 2864 : 
; 2865 : 		CvCity* pFirstCity = NULL;
; 2866 : 		CvCity* pSecondCity = NULL;
; 2867 : 		int iLoop1;
; 2868 : 		int iLoop2;
; 2869 : 
; 2870 : 		for (pFirstCity = GET_PLAYER(ePlayer).firstCity(&iLoop1); pFirstCity != NULL; pFirstCity = GET_PLAYER(ePlayer).nextCity(&iLoop1))

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	0
	lea	edx, DWORD PTR _iLoop1$225289[esp+64]
	lea	ecx, DWORD PTR [esi+eax]
	push	edx
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pFirstCity$225287[esp+60], eax
	test	eax, eax
	je	$LN16@lGetLonges
$LL91@lGetLonges:

; 2871 : 		{
; 2872 : 			CvPlot* pFirstCityPlot = pFirstCity->plot();

	mov	ecx, DWORD PTR _pFirstCity$225287[esp+60]
	call	?plot@CvCity@@QBEPAVCvPlot@@XZ		; CvCity::plot
	mov	ebx, eax

; 2873 : 
; 2874 : 			for (pSecondCity = GET_PLAYER(ePlayer).firstCity(&iLoop2); pSecondCity != NULL; pSecondCity = GET_PLAYER(ePlayer).nextCity(&iLoop2))

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	0
	lea	edx, DWORD PTR _iLoop2$225290[esp+64]
	lea	ecx, DWORD PTR [esi+eax]
	push	edx
	mov	DWORD PTR _pFirstCityPlot$225294[esp+68], ebx
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	test	eax, eax
	je	$LN13@lGetLonges
	npad	5
$LL11@lGetLonges:

; 2875 : 			{
; 2876 : 				// don't measure distance to same city
; 2877 : 				if (pFirstCity == pSecondCity)

	cmp	DWORD PTR _pFirstCity$225287[esp+60], eax
	je	$LN10@lGetLonges

; 2878 : 				{
; 2879 : 					continue;
; 2880 : 				}
; 2881 : 
; 2882 : 				CvPlot* pSecondCityPlot = pSecondCity->plot();

	mov	ecx, eax
	call	?plot@CvCity@@QBEPAVCvPlot@@XZ		; CvCity::plot

; 2883 : 
; 2884 : 				bool bUsingXP2Scenario2 = gDLL->IsModActivated(CIV5_XP2_SCENARIO2_MODID) || gDLL->IsModActivated(CIV5_COMPLETE_SCENARIO1_MODID);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	edi, eax
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+44]
	push	OFFSET $SG92498
	mov	DWORD PTR _pSecondCityPlot$225299[esp+64], edi
	call	edx
	test	al, al
	jne	SHORT $LN20@lGetLonges
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+44]
	push	OFFSET $SG92500
	call	edx
	test	al, al
	je	$LN3@lGetLonges
$LN20@lGetLonges:

; 2885 : 				if(bUsingXP2Scenario2)
; 2886 : 				{
; 2887 : 					// active player
; 2888 : 					if (GC.getGame().getActivePlayer() == ePlayer)

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	eax, ebp
	jne	$LN3@lGetLonges

; 2889 : 					{
; 2890 : 						const char* szCivKey = GET_PLAYER(ePlayer).getCivilizationTypeKey();

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	lea	ecx, DWORD PTR [esi+eax]
	call	?getCivilizationTypeKey@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationTypeKey

; 2891 : 						if (strcmp(szCivKey, "CIVILIZATION_ENGLAND") == 0)

	mov	ecx, OFFSET $SG225305
	npad	4
$LL87@lGetLonges:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN88@lGetLonges
	test	dl, dl
	je	SHORT $LN89@lGetLonges
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN88@lGetLonges
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL87@lGetLonges
$LN89@lGetLonges:
	xor	eax, eax
	jmp	SHORT $LN90@lGetLonges
$LN88@lGetLonges:
	sbb	eax, eax
	sbb	eax, -1
$LN90@lGetLonges:
	test	eax, eax
	jne	SHORT $LN3@lGetLonges

; 2892 : 						{
; 2893 : 							if (pFirstCityPlot->getX() == 41 && pFirstCityPlot->getY() == 62 && // cairo
; 2894 : 								pSecondCityPlot->getX() == 32 && pSecondCityPlot->getY() == 6) // cape town

	cmp	WORD PTR [ebx], 41			; 00000029H
	jne	SHORT $LN3@lGetLonges
	cmp	WORD PTR [ebx+2], 62			; 0000003eH
	jne	SHORT $LN3@lGetLonges
	cmp	WORD PTR [edi], 32			; 00000020H
	jne	SHORT $LN3@lGetLonges
	cmp	WORD PTR [edi+2], 6
	jne	SHORT $LN3@lGetLonges

; 2895 : 							{
; 2896 : 								// assuming that there are fewer than 256 players
; 2897 : 								int iRouteValue = ROUTE_RAILROAD + 1;
; 2898 : 								int iPathfinderFlags = ui;
; 2899 : 								iPathfinderFlags |= (iRouteValue << 8);
; 2900 : 
; 2901 : 								if (GC.getRouteFinder().GeneratePath(pFirstCityPlot->getX(), pFirstCityPlot->getY(), pSecondCityPlot->getX(), pSecondCityPlot->getY(), iPathfinderFlags, true))

	push	1
	or	ebp, 512				; 00000200H
	push	ebp
	push	6
	push	32					; 00000020H
	push	62					; 0000003eH
	push	41					; 00000029H
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getRouteFinder@CvGlobals@@QAEAAVCvAStar@@XZ ; CvGlobals::getRouteFinder
	mov	ecx, eax
	call	?GeneratePath@CvAStar@@QAE_NHHHHH_N@Z	; CvAStar::GeneratePath
	test	al, al
	je	SHORT $LN3@lGetLonges

; 2902 : 								{
; 2903 : 									gDLL->UnlockAchievement(ACHIEVEMENT_XP2_53);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+828]
	push	295					; 00000127H
	call	eax
$LN3@lGetLonges:

; 2904 : 								}								
; 2905 : 							}
; 2906 : 						}
; 2907 : 					}
; 2908 : 				}
; 2909 : 
; 2910 : 				int iThisPlotDistance = plotDistance(pFirstCityPlot->getX(), pFirstCityPlot->getY(), pSecondCityPlot->getX(), pSecondCityPlot->getY());

	movsx	esi, WORD PTR [edi+2]
	movsx	edi, WORD PTR [edi]
	movsx	ebp, WORD PTR [ebx+2]
	movsx	ebx, WORD PTR [ebx]
	push	esi
	push	edi
	push	ebp
	push	ebx
	call	?plotDistance@@YAHHHHH@Z		; plotDistance
	add	esp, 16					; 00000010H

; 2911 : 				if (iThisPlotDistance > iFurthestPlotDistance)

	cmp	eax, DWORD PTR _iFurthestPlotDistance$[esp+60]
	mov	DWORD PTR _iThisPlotDistance$225310[esp+60], eax
	jle	SHORT $LN92@lGetLonges

; 2912 : 				{
; 2913 : 					// assuming that there are fewer than 256 players
; 2914 : 					int iRouteValue = ROUTE_RAILROAD + 1;
; 2915 : 					int iPathfinderFlags = ui;
; 2916 : 					iPathfinderFlags |= (iRouteValue << 8);

	mov	ecx, DWORD PTR _ui$225281[esp+60]

; 2917 : 
; 2918 : 					if (GC.getRouteFinder().GeneratePath(pFirstCityPlot->getX(), pFirstCityPlot->getY(), pSecondCityPlot->getX(), pSecondCityPlot->getY(), iPathfinderFlags, true))

	push	1
	or	ecx, 512				; 00000200H
	push	ecx
	push	esi
	push	edi
	push	ebp
	push	ebx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getRouteFinder@CvGlobals@@QAEAAVCvAStar@@XZ ; CvGlobals::getRouteFinder
	mov	ecx, eax
	call	?GeneratePath@CvAStar@@QAE_NHHHHH_N@Z	; CvAStar::GeneratePath
	test	al, al
	je	SHORT $LN92@lGetLonges

; 2919 : 					{
; 2920 : 						// found a connection
; 2921 : 						pPlot1 = pFirstCityPlot;

	mov	edx, DWORD PTR _pFirstCityPlot$225294[esp+60]

; 2922 : 						pPlot2 = pSecondCityPlot;

	mov	eax, DWORD PTR _pSecondCityPlot$225299[esp+60]

; 2923 : 						iFurthestPlotDistance = iThisPlotDistance;

	mov	ecx, DWORD PTR _iThisPlotDistance$225310[esp+60]
	mov	DWORD PTR _pPlot1$[esp+60], edx
	mov	DWORD PTR _pPlot2$[esp+60], eax
	mov	DWORD PTR _iFurthestPlotDistance$[esp+60], ecx
$LN92@lGetLonges:
	mov	esi, DWORD PTR tv483[esp+60]
	mov	ebx, DWORD PTR _pFirstCityPlot$225294[esp+60]
$LN10@lGetLonges:
	mov	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	0
	lea	eax, DWORD PTR _iLoop2$225290[esp+64]
	lea	ecx, DWORD PTR [esi+edx]
	push	eax
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	ebp, DWORD PTR _ui$225281[esp+60]
	test	eax, eax
	jne	$LL11@lGetLonges
$LN13@lGetLonges:

; 2862 : 	{
; 2863 : 		PlayerTypes ePlayer = (PlayerTypes)ui;
; 2864 : 
; 2865 : 		CvCity* pFirstCity = NULL;
; 2866 : 		CvCity* pSecondCity = NULL;
; 2867 : 		int iLoop1;
; 2868 : 		int iLoop2;
; 2869 : 
; 2870 : 		for (pFirstCity = GET_PLAYER(ePlayer).firstCity(&iLoop1); pFirstCity != NULL; pFirstCity = GET_PLAYER(ePlayer).nextCity(&iLoop1))

	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	0
	lea	edx, DWORD PTR _iLoop1$225289[esp+64]
	add	ecx, esi
	push	edx
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pFirstCity$225287[esp+60], eax
	test	eax, eax
	jne	$LL91@lGetLonges
$LN16@lGetLonges:

; 2860 : 
; 2861 : 	for(uint ui = 0; ui < MAX_MAJOR_CIVS; ui++)

	add	esi, 63236				; 0000f704H
	inc	ebp
	mov	DWORD PTR _ui$225281[esp+60], ebp
	mov	DWORD PTR tv483[esp+60], esi
	cmp	esi, 1391192				; 00153a58H
	jb	$LL17@lGetLonges

; 2924 : 					}
; 2925 : 				}
; 2926 : 			}
; 2927 : 		}
; 2928 : 	}
; 2929 : 
; 2930 : 	// reconnect the land route pathfinder water methods
; 2931 : 	GC.getRouteFinder().SetNumExtraChildrenFunc(RouteGetNumExtraChildren);

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getRouteFinder@CvGlobals@@QAEAAVCvAStar@@XZ ; CvGlobals::getRouteFinder

; 2932 : 	GC.getRouteFinder().SetExtraChildGetterFunc(RouteGetExtraChild);

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR [eax+28], OFFSET ?RouteGetNumExtraChildren@@YAHPAVCvAStarNode@@PAVCvAStar@@@Z ; RouteGetNumExtraChildren
	call	?getRouteFinder@CvGlobals@@QAEAAVCvAStar@@XZ ; CvGlobals::getRouteFinder

; 2933 : 
; 2934 : 	CvLuaPlot::Push(L, pPlot1);

	mov	esi, DWORD PTR _L$[esp+56]
	mov	DWORD PTR [eax+32], OFFSET ?RouteGetExtraChild@@YAHPAVCvAStarNode@@HAAH1PAVCvAStar@@@Z ; RouteGetExtraChild
	mov	eax, DWORD PTR _pPlot1$[esp+60]
	push	eax
	push	esi
	call	?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push

; 2935 : 	CvLuaPlot::Push(L, pPlot2);

	mov	ecx, DWORD PTR _pPlot2$[esp+68]
	push	ecx
	push	esi
	call	?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
	add	esp, 16					; 00000010H
	pop	edi
	pop	esi
	pop	ebp

; 2936 : 	return 2;

	mov	eax, 2
	pop	ebx

; 2937 : }

	add	esp, 44					; 0000002cH
	ret	0
?lGetLongestCityConnectionPlots@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetLongestCityConnectionPlots
_TEXT	ENDS
PUBLIC	?lSelectedUnit_SpeculativePopupTradeRoute_Display@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSelectedUnit_SpeculativePopupTradeRoute_Display
EXTRN	?DisplayTemporaryPopupTradeRoute@CvGameTrade@@QAEXHHW4TradeConnectionType@@W4DomainTypes@@@Z:PROC ; CvGameTrade::DisplayTemporaryPopupTradeRoute
EXTRN	?GetGameTrade@CvGame@@QAEPAVCvGameTrade@@XZ:PROC ; CvGame::GetGameTrade
; Function compile flags: /Ogtpy
;	COMDAT ?lSelectedUnit_SpeculativePopupTradeRoute_Display@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSelectedUnit_SpeculativePopupTradeRoute_Display@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lSelectedUnit_SpeculativePopupTradeRoute_Display, COMDAT

; 2941 : {

	push	ebx
	push	ebp
	push	esi

; 2942 : 	int iPlotX,iPlotY;
; 2943 : 	TradeConnectionType type;
; 2944 : 	DomainTypes eDomain;
; 2945 : 
; 2946 : 	iPlotX = lua_tointeger(L,1);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	1
	push	esi
	call	_lua_tointeger

; 2947 : 	iPlotY = lua_tointeger(L,2);

	push	2
	push	esi
	mov	edi, eax
	call	_lua_tointeger

; 2948 : 	type = (TradeConnectionType)lua_tointeger(L,3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger

; 2949 : 	eDomain = (DomainTypes)lua_tointeger(L, 4);

	push	4
	push	esi
	mov	ebp, eax
	call	_lua_tointeger

; 2950 : 
; 2951 : 	GC.getGame().GetGameTrade()->DisplayTemporaryPopupTradeRoute(iPlotX,iPlotY,type, eDomain);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 32					; 00000020H
	push	eax
	push	ebp
	push	ebx
	push	edi
	call	?GetGameTrade@CvGame@@QAEPAVCvGameTrade@@XZ ; CvGame::GetGameTrade
	mov	ecx, eax
	call	?DisplayTemporaryPopupTradeRoute@CvGameTrade@@QAEXHHW4TradeConnectionType@@W4DomainTypes@@@Z ; CvGameTrade::DisplayTemporaryPopupTradeRoute
	pop	edi
	pop	esi
	pop	ebp

; 2952 : 	return 0;

	xor	eax, eax
	pop	ebx

; 2953 : }

	ret	0
?lSelectedUnit_SpeculativePopupTradeRoute_Display@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lSelectedUnit_SpeculativePopupTradeRoute_Display
_TEXT	ENDS
PUBLIC	?lSelectedUnit_SpeculativePopupTradeRoute_Hide@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSelectedUnit_SpeculativePopupTradeRoute_Hide
EXTRN	?HideTemporaryPopupTradeRoute@CvGameTrade@@QAEXHHW4TradeConnectionType@@@Z:PROC ; CvGameTrade::HideTemporaryPopupTradeRoute
; Function compile flags: /Ogtpy
;	COMDAT ?lSelectedUnit_SpeculativePopupTradeRoute_Hide@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSelectedUnit_SpeculativePopupTradeRoute_Hide@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lSelectedUnit_SpeculativePopupTradeRoute_Hide, COMDAT

; 2956 : {

	push	ebx
	push	esi

; 2957 : 	int iPlotX,iPlotY;
; 2958 : 	TradeConnectionType type;
; 2959 : 	
; 2960 : 	iPlotX = lua_tointeger(L,1);

	mov	esi, DWORD PTR _L$[esp+4]
	push	edi
	push	1
	push	esi
	call	_lua_tointeger

; 2961 : 	iPlotY = lua_tointeger(L,2);

	push	2
	push	esi
	mov	edi, eax
	call	_lua_tointeger

; 2962 : 	type = (TradeConnectionType)lua_tointeger(L,3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger

; 2963 : 	GC.getGame().GetGameTrade()->HideTemporaryPopupTradeRoute(iPlotX,iPlotY,type);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 24					; 00000018H
	push	eax
	push	ebx
	push	edi
	call	?GetGameTrade@CvGame@@QAEPAVCvGameTrade@@XZ ; CvGame::GetGameTrade
	mov	ecx, eax
	call	?HideTemporaryPopupTradeRoute@CvGameTrade@@QAEXHHW4TradeConnectionType@@@Z ; CvGameTrade::HideTemporaryPopupTradeRoute
	pop	edi
	pop	esi

; 2964 : 	return 0;

	xor	eax, eax
	pop	ebx

; 2965 : }

	ret	0
?lSelectedUnit_SpeculativePopupTradeRoute_Hide@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lSelectedUnit_SpeculativePopupTradeRoute_Hide
_TEXT	ENDS
PUBLIC	?lMouseoverUnit@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lMouseoverUnit
EXTRN	?mouseoverUnit@CvGame@@QAEXPAVCvUnit@@_N@Z:PROC	; CvGame::mouseoverUnit
; Function compile flags: /Ogtpy
;	COMDAT ?lMouseoverUnit@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bEnter$ = -4						; size = 1
_L$ = 8							; size = 4
?lMouseoverUnit@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lMouseoverUnit, COMDAT

; 2968 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 2969 : 	CvUnit* pUnit;
; 2970 : 	bool bEnter;
; 2971 : 
; 2972 : 	pUnit = CvLuaUnit::GetInstance(L, 1);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lMouseover
	push	OFFSET $SG225537
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lMouseover
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lMouseover
	xor	bl, bl
$LN5@lMouseover:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN4@lMouseover
	push	OFFSET $SG225543
	push	esi
	call	_luaL_error
	push	esi
	call	?HandleMissingInstance@CvLuaUnit@@SAXPAUlua_State@@@Z ; CvLuaUnit::HandleMissingInstance
	add	esp, 12					; 0000000cH
$LN4@lMouseover:

; 2973 : 	bEnter = lua_toboolean(L, 2);

	push	2
	push	esi
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	al
	mov	BYTE PTR _bEnter$[esp+20], al

; 2974 : 
; 2975 : 	GC.getGame().mouseoverUnit(pUnit, bEnter);

	mov	ecx, DWORD PTR _bEnter$[esp+20]
	push	ecx
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	call	?mouseoverUnit@CvGame@@QAEXPAVCvUnit@@_N@Z ; CvGame::mouseoverUnit
	pop	edi
	pop	esi
	pop	ebp

; 2976 : 	return 0;

	xor	eax, eax
	pop	ebx

; 2977 : }

	pop	ecx
	ret	0
?lMouseoverUnit@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lMouseoverUnit
_TEXT	ENDS
PUBLIC	?lGetNumArchaeologySites@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumArchaeologySites
EXTRN	?GetNumArchaeologySites@CvGame@@QBEHXZ:PROC	; CvGame::GetNumArchaeologySites
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumArchaeologySites@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumArchaeologySites@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetNumArchaeologySites, COMDAT

; 2981 : 	lua_pushinteger(L, GC.getGame().GetNumArchaeologySites());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetNumArchaeologySites@CvGame@@QBEHXZ	; CvGame::GetNumArchaeologySites
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 2982 : 	return 1;

	mov	eax, 1

; 2983 : }

	ret	0
?lGetNumArchaeologySites@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetNumArchaeologySites
_TEXT	ENDS
PUBLIC	?lGetNumHiddenArchaeologySites@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumHiddenArchaeologySites
EXTRN	?GetNumHiddenArchaeologySites@CvGame@@QBEHXZ:PROC ; CvGame::GetNumHiddenArchaeologySites
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumHiddenArchaeologySites@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumHiddenArchaeologySites@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetNumHiddenArchaeologySites, COMDAT

; 2987 : 	lua_pushinteger(L, GC.getGame().GetNumHiddenArchaeologySites());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetNumHiddenArchaeologySites@CvGame@@QBEHXZ ; CvGame::GetNumHiddenArchaeologySites
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 2988 : 	return 1;

	mov	eax, 1

; 2989 : }

	ret	0
?lGetNumHiddenArchaeologySites@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetNumHiddenArchaeologySites
_TEXT	ENDS
PUBLIC	??D?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBEAAW4BeliefTypes@@XZ ; std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator*
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\vector
;	COMDAT ??D?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBEAAW4BeliefTypes@@XZ
_TEXT	SEGMENT
??D?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBEAAW4BeliefTypes@@XZ PROC ; std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator*, COMDAT
; _this$ = ecx

; 339  : 		return ((reference)**(_Mybase *)this);

	mov	eax, DWORD PTR [ecx]

; 340  : 		}

	ret	0
??D?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBEAAW4BeliefTypes@@XZ ENDP ; std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator++
; Function compile flags: /Ogtpy
;	COMDAT ??E?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator++, COMDAT
; _this$ = ecx

; 348  : 		{	// preincrement

	mov	eax, ecx

; 349  : 		++(*(_Mybase *)this);

	add	DWORD PTR [eax], 4

; 350  : 		return (*this);
; 351  : 		}

	ret	0
??E?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator++
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator!=
; Function compile flags: /Ogtpy
;	COMDAT ??9?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator!=, COMDAT
; _this$ = ecx

; 216  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	setne	cl
	mov	al, cl

; 217  : 		}

	ret	4
??9?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator!=
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::_Vector_val<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~_Vector_val<enum BeliefTypes,std::allocator<enum BeliefTypes> >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Vector_val@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~_Vector_val<enum BeliefTypes,std::allocator<enum BeliefTypes> >, COMDAT
; _this$ = ecx
	ret	0
??1?$_Vector_val@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~_Vector_val<enum BeliefTypes,std::allocator<enum BeliefTypes> >
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@PAW4BeliefTypes@@@Z ; std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@PAW4BeliefTypes@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@PAW4BeliefTypes@@@Z PROC ; std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >, COMDAT
; _this$ = ecx

; 333  : 		{	// construct with pointer _Ptr

	mov	eax, ecx
	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 334  : 		}

	ret	4
??0?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@PAW4BeliefTypes@@@Z ENDP ; std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >
_TEXT	ENDS
PUBLIC	?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvluamethodwrapper.h
;	COMDAT ?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXXZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXXZ@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod, COMDAT

; 223  : 	InstanceType* pkType = Derived::GetInstance(L);
; 224  : 	(pkType->*func)();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	DWORD PTR _func$[esp-4]

; 225  : 	return 0;

	xor	eax, eax

; 226  : }

	ret	0
?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEX_N@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEX_N@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEX_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool>, COMDAT

; 231  : 	const int idx = Derived::GetStartingArgIndex();
; 232  : 	InstanceType* pkType = Derived::GetInstance(L);
; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	mov	eax, DWORD PTR _L$[esp-4]
	push	esi
	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	1
	push	eax
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	cl
	movzx	edx, cl
	push	edx
	mov	ecx, esi
	call	DWORD PTR _func$[esp+4]

; 234  : 	return 0;

	xor	eax, eax
	pop	esi

; 235  : }

	ret	0
??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEX_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_N_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEX_N1@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,bool>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_N_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEX_N1@Z@Z
_TEXT	SEGMENT
$T228279 = -4						; size = 1
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_N_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEX_N1@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,bool>, COMDAT

; 239  : {

	push	ecx
	push	esi

; 240  : 	const int idx = Derived::GetStartingArgIndex();
; 241  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi

; 242  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1));

	mov	edi, DWORD PTR _L$[esp+8]
	push	2
	push	edi
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	al
	mov	BYTE PTR $T228279[esp+12], al
	mov	ecx, DWORD PTR $T228279[esp+12]
	push	ecx
	push	1
	push	edi
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	dl
	movzx	eax, dl
	push	eax
	mov	ecx, esi
	call	DWORD PTR _func$[esp+16]
	pop	edi

; 243  : 	return 0;

	xor	eax, eax
	pop	esi

; 244  : }

	pop	ecx
	ret	0
??$BasicLuaMethod@_N_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEX_N1@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,bool>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_N_N_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEX_N11@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,bool,bool>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_N_N_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEX_N11@Z@Z
_TEXT	SEGMENT
$T228301 = -8						; size = 1
$T228305 = -4						; size = 1
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_N_N_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEX_N11@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,bool,bool>, COMDAT

; 249  : {

	sub	esp, 8
	push	esi

; 250  : 	const int idx = Derived::GetStartingArgIndex();
; 251  : 	InstanceType* pkType = Derived::GetInstance(L);
; 252  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2));

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	mov	edi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	3
	push	esi
	call	_lua_toboolean
	test	eax, eax
	setne	al
	push	2
	push	esi
	mov	BYTE PTR $T228301[esp+32], al
	call	_lua_toboolean
	mov	edx, DWORD PTR $T228301[esp+32]
	add	esp, 16					; 00000010H
	test	eax, eax
	setne	cl
	mov	BYTE PTR $T228305[esp+16], cl
	mov	eax, DWORD PTR $T228305[esp+16]
	push	edx
	push	eax
	push	1
	push	esi
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	cl
	movzx	edx, cl
	push	edx
	mov	ecx, edi
	call	DWORD PTR _func$[esp+24]
	pop	edi

; 253  : 	return 0;

	xor	eax, eax
	pop	esi

; 254  : }

	add	esp, 8
	ret	0
??$BasicLuaMethod@_N_N_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEX_N11@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,bool,bool>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4HurryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum HurryTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4HurryTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4HurryTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum HurryTypes>, COMDAT

; 130  : {

	push	esi

; 131  : 	const int idx = Derived::GetStartingArgIndex();
; 132  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi

; 133  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	DWORD PTR _func$[esp+8]
	push	eax
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi

; 134  : 
; 135  : 	return 1;

	mov	eax, 1
	pop	esi

; 136  : }

	ret	0
??$BasicLuaMethod@HW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4HurryTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum HurryTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHW4VictoryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum VictoryTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHW4VictoryTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHW4VictoryTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum VictoryTypes>, COMDAT

; 78   : {

	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	DWORD PTR _func$[esp+8]
	push	eax
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	esi

; 84   : }

	ret	0
??$BasicLuaMethod@HW4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHW4VictoryTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum VictoryTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHXZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHXZ@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>, COMDAT

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);
; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	DWORD PTR _func$[esp-4]
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	ret	0
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHXZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHXZ@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>, COMDAT

; 122  : 	InstanceType* pkType = Derived::GetInstance(L);
; 123  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	DWORD PTR _func$[esp-4]
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 124  : 
; 125  : 	return 1;

	mov	eax, 1

; 126  : }

	ret	0
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4TechTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum TechTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4TechTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4TechTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum TechTypes>, COMDAT

; 130  : {

	push	esi

; 131  : 	const int idx = Derived::GetStartingArgIndex();
; 132  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi

; 133  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	DWORD PTR _func$[esp+8]
	push	eax
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi

; 134  : 
; 135  : 	return 1;

	mov	eax, 1
	pop	esi

; 136  : }

	ret	0
??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4TechTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum TechTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4ImprovementTypes@@PBVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHW4ImprovementTypes@@PBVCvPlot@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum ImprovementTypes,CvPlot const *>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4ImprovementTypes@@PBVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHW4ImprovementTypes@@PBVCvPlot@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4ImprovementTypes@@PBVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHW4ImprovementTypes@@PBVCvPlot@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum ImprovementTypes,CvPlot const *>, COMDAT

; 88   : {

	push	ebx
	push	esi

; 89   : 	const int idx = Derived::GetStartingArgIndex();
; 90   : 	InstanceType* pkType = Derived::GetInstance(L);
; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	mov	esi, DWORD PTR _L$[esp+4]
	push	edi
	mov	edi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	2
	push	esi
	call	_lua_tointeger
	push	1
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H
	push	ebx
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi

; 92   : 
; 93   : 	return 1;

	mov	eax, 1
	pop	ebx

; 94   : }

	ret	0
??$BasicLuaMethod@HW4ImprovementTypes@@PBVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHW4ImprovementTypes@@PBVCvPlot@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum ImprovementTypes,CvPlot const *>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NXZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NXZ@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool>, COMDAT

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);
; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	DWORD PTR _func$[esp-4]
	mov	ecx, DWORD PTR _L$[esp-4]
	movzx	eax, al
	push	eax
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	ret	0
??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4EraTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4EraTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum EraTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4EraTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4EraTypes@@XZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4EraTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4EraTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum EraTypes>, COMDAT

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);
; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	DWORD PTR _func$[esp-4]
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	ret	0
??$BasicLuaMethod@W4EraTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4EraTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum EraTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4TeamTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum TeamTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4TeamTypes@@XZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4TeamTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum TeamTypes>, COMDAT

; 122  : 	InstanceType* pkType = Derived::GetInstance(L);
; 123  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	DWORD PTR _func$[esp-4]
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 124  : 
; 125  : 	return 1;

	mov	eax, 1

; 126  : }

	ret	0
??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4TeamTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum TeamTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4CivilizationTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum CivilizationTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4CivilizationTypes@@XZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4CivilizationTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum CivilizationTypes>, COMDAT

; 122  : 	InstanceType* pkType = Derived::GetInstance(L);
; 123  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	DWORD PTR _func$[esp-4]
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 124  : 
; 125  : 	return 1;

	mov	eax, 1

; 126  : }

	ret	0
??$BasicLuaMethod@W4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4CivilizationTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum CivilizationTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum PlayerTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4PlayerTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4PlayerTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum PlayerTypes>, COMDAT

; 130  : {

	push	esi

; 131  : 	const int idx = Derived::GetStartingArgIndex();
; 132  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi

; 133  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	DWORD PTR _func$[esp+8]
	push	eax
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi

; 134  : 
; 135  : 	return 1;

	mov	eax, 1
	pop	esi

; 136  : }

	ret	0
??$BasicLuaMethod@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4PlayerTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum PlayerTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXH@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXH@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>, COMDAT

; 231  : 	const int idx = Derived::GetStartingArgIndex();
; 232  : 	InstanceType* pkType = Derived::GetInstance(L);
; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	mov	eax, DWORD PTR _L$[esp-4]
	push	esi
	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	1
	push	eax
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	DWORD PTR _func$[esp+4]

; 234  : 	return 0;

	xor	eax, eax
	pop	esi

; 235  : }

	ret	0
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXH@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHH@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHH@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHH@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,int>, COMDAT

; 130  : {

	push	esi

; 131  : 	const int idx = Derived::GetStartingArgIndex();
; 132  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi

; 133  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	DWORD PTR _func$[esp+8]
	push	eax
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi

; 134  : 
; 135  : 	return 1;

	mov	eax, 1
	pop	esi

; 136  : }

	ret	0
??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHH@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXHW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum PlayerTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXHW4PlayerTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXHW4PlayerTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum PlayerTypes>, COMDAT

; 239  : {

	push	esi

; 240  : 	const int idx = Derived::GetStartingArgIndex();
; 241  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi

; 242  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1));

	mov	edi, DWORD PTR _L$[esp+4]
	push	2
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	DWORD PTR _func$[esp+12]
	pop	edi

; 243  : 	return 0;

	xor	eax, eax
	pop	esi

; 244  : }

	ret	0
??$BasicLuaMethod@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXHW4PlayerTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum PlayerTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4FromUIDiploEventTypes@@W4PlayerTypes@@HH@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4FromUIDiploEventTypes@@W4PlayerTypes@@HH@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum FromUIDiploEventTypes,enum PlayerTypes,int,int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4FromUIDiploEventTypes@@W4PlayerTypes@@HH@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4FromUIDiploEventTypes@@W4PlayerTypes@@HH@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4FromUIDiploEventTypes@@W4PlayerTypes@@HH@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4FromUIDiploEventTypes@@W4PlayerTypes@@HH@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum FromUIDiploEventTypes,enum PlayerTypes,int,int>, COMDAT

; 259  : {

	push	ebx
	push	ebp
	push	esi

; 260  : 	const int idx = Derived::GetStartingArgIndex();
; 261  : 	InstanceType* pkType = Derived::GetInstance(L);
; 262  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2), CvLuaArgs::toValue<arg4>(L, idx + 3));

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	mov	edi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	4
	push	esi
	call	_lua_tointeger
	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	push	2
	push	esi
	mov	ebp, eax
	call	_lua_tointeger
	add	esp, 24					; 00000018H
	push	ebx
	push	ebp
	push	eax
	push	1
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+28]
	pop	edi
	pop	esi
	pop	ebp

; 263  : 	return 0;

	xor	eax, eax
	pop	ebx

; 264  : }

	ret	0
??$BasicLuaMethod@W4FromUIDiploEventTypes@@W4PlayerTypes@@HH@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4FromUIDiploEventTypes@@W4PlayerTypes@@HH@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum FromUIDiploEventTypes,enum PlayerTypes,int,int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4PlayerTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4PlayerTypes@@XZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4PlayerTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes>, COMDAT

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);
; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	DWORD PTR _func$[esp-4]
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	ret	0
??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4PlayerTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4PlayerTypes@@_N_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4PlayerTypes@@_N2@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes,bool,bool>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4PlayerTypes@@_N_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4PlayerTypes@@_N2@Z@Z
_TEXT	SEGMENT
$T228651 = -8						; size = 1
$T228655 = -4						; size = 1
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4PlayerTypes@@_N_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4PlayerTypes@@_N2@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes,bool,bool>, COMDAT

; 249  : {

	sub	esp, 8
	push	esi

; 250  : 	const int idx = Derived::GetStartingArgIndex();
; 251  : 	InstanceType* pkType = Derived::GetInstance(L);
; 252  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2));

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	mov	edi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	3
	push	esi
	call	_lua_toboolean
	test	eax, eax
	setne	al
	push	2
	push	esi
	mov	BYTE PTR $T228651[esp+32], al
	call	_lua_toboolean
	mov	edx, DWORD PTR $T228651[esp+32]
	add	esp, 16					; 00000010H
	test	eax, eax
	setne	cl
	mov	BYTE PTR $T228655[esp+16], cl
	mov	eax, DWORD PTR $T228655[esp+16]
	push	edx
	push	eax
	push	1
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+24]
	pop	edi

; 253  : 	return 0;

	xor	eax, eax
	pop	esi

; 254  : }

	add	esp, 8
	ret	0
??$BasicLuaMethod@W4PlayerTypes@@_N_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4PlayerTypes@@_N2@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes,bool,bool>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4PlayerTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4PlayerTypes@@XZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4PlayerTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes>, COMDAT

; 122  : 	InstanceType* pkType = Derived::GetInstance(L);
; 123  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	DWORD PTR _func$[esp-4]
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 124  : 
; 125  : 	return 1;

	mov	eax, 1

; 126  : }

	ret	0
??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4PlayerTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NXZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NXZ@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool>, COMDAT

; 122  : 	InstanceType* pkType = Derived::GetInstance(L);
; 123  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	DWORD PTR _func$[esp-4]
	mov	ecx, DWORD PTR _L$[esp-4]
	movzx	eax, al
	push	eax
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 124  : 
; 125  : 	return 1;

	mov	eax, 1

; 126  : }

	ret	0
??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4UnitTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum UnitTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4UnitTypes@@XZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4UnitTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum UnitTypes>, COMDAT

; 122  : 	InstanceType* pkType = Derived::GetInstance(L);
; 123  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	DWORD PTR _func$[esp-4]
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 124  : 
; 125  : 	return 1;

	mov	eax, 1

; 126  : }

	ret	0
??$BasicLuaMethod@W4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4UnitTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum UnitTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4TeamTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum TeamTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4TeamTypes@@XZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4TeamTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum TeamTypes>, COMDAT

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);
; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	DWORD PTR _func$[esp-4]
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	ret	0
??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4TeamTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum TeamTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4VictoryTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum VictoryTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4VictoryTypes@@XZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4VictoryTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum VictoryTypes>, COMDAT

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);
; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	DWORD PTR _func$[esp-4]
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	ret	0
??$BasicLuaMethod@W4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4VictoryTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum VictoryTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4TeamTypes@@W4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4TeamTypes@@W4VictoryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum TeamTypes,enum VictoryTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4TeamTypes@@W4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4TeamTypes@@W4VictoryTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4TeamTypes@@W4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4TeamTypes@@W4VictoryTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum TeamTypes,enum VictoryTypes>, COMDAT

; 239  : {

	push	esi

; 240  : 	const int idx = Derived::GetStartingArgIndex();
; 241  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi

; 242  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1));

	mov	edi, DWORD PTR _L$[esp+4]
	push	2
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	DWORD PTR _func$[esp+12]
	pop	edi

; 243  : 	return 0;

	xor	eax, eax
	pop	esi

; 244  : }

	ret	0
??$BasicLuaMethod@W4TeamTypes@@W4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4TeamTypes@@W4VictoryTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum TeamTypes,enum VictoryTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4GameStateTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4GameStateTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum GameStateTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4GameStateTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4GameStateTypes@@XZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4GameStateTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4GameStateTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum GameStateTypes>, COMDAT

; 122  : 	InstanceType* pkType = Derived::GetInstance(L);
; 123  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	DWORD PTR _func$[esp-4]
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 124  : 
; 125  : 	return 1;

	mov	eax, 1

; 126  : }

	ret	0
??$BasicLuaMethod@W4GameStateTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4GameStateTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum GameStateTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4TeamTypes@@W41@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4TeamTypes@@W43@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum TeamTypes,enum TeamTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4TeamTypes@@W41@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4TeamTypes@@W43@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4TeamTypes@@W41@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4TeamTypes@@W43@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum TeamTypes,enum TeamTypes>, COMDAT

; 78   : {

	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	DWORD PTR _func$[esp+8]
	push	eax
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	esi

; 84   : }

	ret	0
??$BasicLuaMethod@W4TeamTypes@@W41@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4TeamTypes@@W43@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum TeamTypes,enum TeamTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum TeamTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHW4TeamTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHW4TeamTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum TeamTypes>, COMDAT

; 78   : {

	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	DWORD PTR _func$[esp+8]
	push	eax
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	esi

; 84   : }

	ret	0
??$BasicLuaMethod@HW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHW4TeamTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum TeamTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4TeamTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4TeamTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum TeamTypes,int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4TeamTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4TeamTypes@@H@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4TeamTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4TeamTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum TeamTypes,int>, COMDAT

; 239  : {

	push	esi

; 240  : 	const int idx = Derived::GetStartingArgIndex();
; 241  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi

; 242  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1));

	mov	edi, DWORD PTR _L$[esp+4]
	push	2
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	DWORD PTR _func$[esp+12]
	pop	edi

; 243  : 	return 0;

	xor	eax, eax
	pop	esi

; 244  : }

	ret	0
??$BasicLuaMethod@W4TeamTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4TeamTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum TeamTypes,int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4HandicapTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4HandicapTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum HandicapTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4HandicapTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4HandicapTypes@@XZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4HandicapTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4HandicapTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum HandicapTypes>, COMDAT

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);
; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	DWORD PTR _func$[esp-4]
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	ret	0
??$BasicLuaMethod@W4HandicapTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4HandicapTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum HandicapTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4CalendarTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4CalendarTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum CalendarTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4CalendarTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4CalendarTypes@@XZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4CalendarTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4CalendarTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum CalendarTypes>, COMDAT

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);
; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	DWORD PTR _func$[esp-4]
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	ret	0
??$BasicLuaMethod@W4CalendarTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4CalendarTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum CalendarTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4GameSpeedTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4GameSpeedTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum GameSpeedTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4GameSpeedTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4GameSpeedTypes@@XZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4GameSpeedTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4GameSpeedTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum GameSpeedTypes>, COMDAT

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);
; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	DWORD PTR _func$[esp-4]
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	ret	0
??$BasicLuaMethod@W4GameSpeedTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4GameSpeedTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum GameSpeedTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4PlayerTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4PlayerTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes,int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4PlayerTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4PlayerTypes@@H@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4PlayerTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4PlayerTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes,int>, COMDAT

; 130  : {

	push	esi

; 131  : 	const int idx = Derived::GetStartingArgIndex();
; 132  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi

; 133  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	DWORD PTR _func$[esp+8]
	push	eax
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi

; 134  : 
; 135  : 	return 1;

	mov	eax, 1
	pop	esi

; 136  : }

	ret	0
??$BasicLuaMethod@W4PlayerTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4PlayerTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes,int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4TeamTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4TeamTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum TeamTypes,int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4TeamTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4TeamTypes@@H@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4TeamTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4TeamTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum TeamTypes,int>, COMDAT

; 130  : {

	push	esi

; 131  : 	const int idx = Derived::GetStartingArgIndex();
; 132  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi

; 133  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	DWORD PTR _func$[esp+8]
	push	eax
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi

; 134  : 
; 135  : 	return 1;

	mov	eax, 1
	pop	esi

; 136  : }

	ret	0
??$BasicLuaMethod@W4TeamTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4TeamTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum TeamTypes,int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum TeamTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4TeamTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4TeamTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum TeamTypes>, COMDAT

; 130  : {

	push	esi

; 131  : 	const int idx = Derived::GetStartingArgIndex();
; 132  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi

; 133  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	DWORD PTR _func$[esp+8]
	push	eax
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi

; 134  : 
; 135  : 	return 1;

	mov	eax, 1
	pop	esi

; 136  : }

	ret	0
??$BasicLuaMethod@HW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4TeamTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum TeamTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4MultiplayerOptionTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4MultiplayerOptionTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum MultiplayerOptionTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_NW4MultiplayerOptionTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4MultiplayerOptionTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4MultiplayerOptionTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4MultiplayerOptionTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum MultiplayerOptionTypes>, COMDAT

; 78   : {

	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	DWORD PTR _func$[esp+8]
	movzx	eax, al
	push	eax
	push	edi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	esi

; 84   : }

	ret	0
??$BasicLuaMethod@_NW4MultiplayerOptionTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4MultiplayerOptionTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum MultiplayerOptionTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4UnitTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum UnitTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4UnitTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4UnitTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum UnitTypes>, COMDAT

; 130  : {

	push	esi

; 131  : 	const int idx = Derived::GetStartingArgIndex();
; 132  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi

; 133  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	DWORD PTR _func$[esp+8]
	push	eax
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi

; 134  : 
; 135  : 	return 1;

	mov	eax, 1
	pop	esi

; 136  : }

	ret	0
??$BasicLuaMethod@HW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4UnitTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum UnitTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4UnitClassTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum UnitClassTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4UnitClassTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4UnitClassTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum UnitClassTypes>, COMDAT

; 130  : {

	push	esi

; 131  : 	const int idx = Derived::GetStartingArgIndex();
; 132  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi

; 133  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	DWORD PTR _func$[esp+8]
	push	eax
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi

; 134  : 
; 135  : 	return 1;

	mov	eax, 1
	pop	esi

; 136  : }

	ret	0
??$BasicLuaMethod@HW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4UnitClassTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum UnitClassTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4UnitClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NW4UnitClassTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum UnitClassTypes,int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_NW4UnitClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NW4UnitClassTypes@@H@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4UnitClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NW4UnitClassTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum UnitClassTypes,int>, COMDAT

; 140  : {

	push	ebx
	push	esi

; 141  : 	const int idx = Derived::GetStartingArgIndex();
; 142  : 	InstanceType* pkType = Derived::GetInstance(L);
; 143  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	mov	esi, DWORD PTR _L$[esp+4]
	push	edi
	mov	edi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	2
	push	esi
	call	_lua_tointeger
	push	1
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H
	push	ebx
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi

; 144  : 
; 145  : 	return 1;

	mov	eax, 1
	pop	ebx

; 146  : }

	ret	0
??$BasicLuaMethod@_NW4UnitClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NW4UnitClassTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum UnitClassTypes,int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4BuildingClassTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum BuildingClassTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4BuildingClassTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4BuildingClassTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum BuildingClassTypes>, COMDAT

; 130  : {

	push	esi

; 131  : 	const int idx = Derived::GetStartingArgIndex();
; 132  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi

; 133  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	DWORD PTR _func$[esp+8]
	push	eax
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi

; 134  : 
; 135  : 	return 1;

	mov	eax, 1
	pop	esi

; 136  : }

	ret	0
??$BasicLuaMethod@HW4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4BuildingClassTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum BuildingClassTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4BuildingClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NW4BuildingClassTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum BuildingClassTypes,int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_NW4BuildingClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NW4BuildingClassTypes@@H@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4BuildingClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NW4BuildingClassTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum BuildingClassTypes,int>, COMDAT

; 140  : {

	push	ebx
	push	esi

; 141  : 	const int idx = Derived::GetStartingArgIndex();
; 142  : 	InstanceType* pkType = Derived::GetInstance(L);
; 143  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	mov	esi, DWORD PTR _L$[esp+4]
	push	edi
	mov	edi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	2
	push	esi
	call	_lua_tointeger
	push	1
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H
	push	ebx
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi

; 144  : 
; 145  : 	return 1;

	mov	eax, 1
	pop	ebx

; 146  : }

	ret	0
??$BasicLuaMethod@_NW4BuildingClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NW4BuildingClassTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum BuildingClassTypes,int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4ProjectTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum ProjectTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4ProjectTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4ProjectTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum ProjectTypes>, COMDAT

; 130  : {

	push	esi

; 131  : 	const int idx = Derived::GetStartingArgIndex();
; 132  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi

; 133  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	DWORD PTR _func$[esp+8]
	push	eax
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi

; 134  : 
; 135  : 	return 1;

	mov	eax, 1
	pop	esi

; 136  : }

	ret	0
??$BasicLuaMethod@HW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4ProjectTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum ProjectTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NW4ProjectTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum ProjectTypes,int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_NW4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NW4ProjectTypes@@H@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NW4ProjectTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum ProjectTypes,int>, COMDAT

; 140  : {

	push	ebx
	push	esi

; 141  : 	const int idx = Derived::GetStartingArgIndex();
; 142  : 	InstanceType* pkType = Derived::GetInstance(L);
; 143  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	mov	esi, DWORD PTR _L$[esp+4]
	push	edi
	mov	edi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	2
	push	esi
	call	_lua_tointeger
	push	1
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H
	push	ebx
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi

; 144  : 
; 145  : 	return 1;

	mov	eax, 1
	pop	ebx

; 146  : }

	ret	0
??$BasicLuaMethod@_NW4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NW4ProjectTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum ProjectTypes,int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4VictoryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum VictoryTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_NW4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4VictoryTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4VictoryTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum VictoryTypes>, COMDAT

; 78   : {

	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	DWORD PTR _func$[esp+8]
	movzx	eax, al
	push	eax
	push	edi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	esi

; 84   : }

	ret	0
??$BasicLuaMethod@_NW4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4VictoryTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum VictoryTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4SpecialUnitTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NW4SpecialUnitTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum SpecialUnitTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_NW4SpecialUnitTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NW4SpecialUnitTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4SpecialUnitTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NW4SpecialUnitTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum SpecialUnitTypes>, COMDAT

; 130  : {

	push	esi

; 131  : 	const int idx = Derived::GetStartingArgIndex();
; 132  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi

; 133  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	DWORD PTR _func$[esp+8]
	movzx	eax, al
	push	eax
	push	edi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi

; 134  : 
; 135  : 	return 1;

	mov	eax, 1
	pop	esi

; 136  : }

	ret	0
??$BasicLuaMethod@_NW4SpecialUnitTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NW4SpecialUnitTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum SpecialUnitTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4SpecialUnitTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4SpecialUnitTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum SpecialUnitTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4SpecialUnitTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4SpecialUnitTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4SpecialUnitTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4SpecialUnitTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum SpecialUnitTypes>, COMDAT

; 231  : 	const int idx = Derived::GetStartingArgIndex();
; 232  : 	InstanceType* pkType = Derived::GetInstance(L);
; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	mov	eax, DWORD PTR _L$[esp-4]
	push	esi
	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	1
	push	eax
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	DWORD PTR _func$[esp+4]

; 234  : 	return 0;

	xor	eax, eax
	pop	esi

; 235  : }

	ret	0
??$BasicLuaMethod@W4SpecialUnitTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4SpecialUnitTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum SpecialUnitTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@PBD@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXPBD@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<char const *>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@PBD@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXPBD@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@PBD@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXPBD@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<char const *>, COMDAT

; 231  : 	const int idx = Derived::GetStartingArgIndex();
; 232  : 	InstanceType* pkType = Derived::GetInstance(L);
; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	mov	eax, DWORD PTR _L$[esp-4]
	push	esi
	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	1
	push	eax
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	DWORD PTR _func$[esp+4]

; 234  : 	return 0;

	xor	eax, eax
	pop	esi

; 235  : }

	ret	0
??$BasicLuaMethod@PBD@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXPBD@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<char const *>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@I@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEIXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<unsigned int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@I@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEIXZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@I@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEIXZ@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<unsigned int>, COMDAT

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);
; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	DWORD PTR _func$[esp-4]
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	ret	0
??$BasicLuaMethod@I@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEIXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<unsigned int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4PlayerTypes@@W4LeaderHeadTypes@@W4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4PlayerTypes@@W4LeaderHeadTypes@@W4CivilizationTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes,enum LeaderHeadTypes,enum CivilizationTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4PlayerTypes@@W4LeaderHeadTypes@@W4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4PlayerTypes@@W4LeaderHeadTypes@@W4CivilizationTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4PlayerTypes@@W4LeaderHeadTypes@@W4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4PlayerTypes@@W4LeaderHeadTypes@@W4CivilizationTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes,enum LeaderHeadTypes,enum CivilizationTypes>, COMDAT

; 249  : {

	push	ebx
	push	esi

; 250  : 	const int idx = Derived::GetStartingArgIndex();
; 251  : 	InstanceType* pkType = Derived::GetInstance(L);
; 252  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2));

	mov	esi, DWORD PTR _L$[esp+4]
	push	edi
	mov	edi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	3
	push	esi
	call	_lua_tointeger
	push	2
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H
	push	ebx
	push	eax
	push	1
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+20]
	pop	edi
	pop	esi

; 253  : 	return 0;

	xor	eax, eax
	pop	ebx

; 254  : }

	ret	0
??$BasicLuaMethod@W4PlayerTypes@@W4LeaderHeadTypes@@W4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4PlayerTypes@@W4LeaderHeadTypes@@W4CivilizationTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes,enum LeaderHeadTypes,enum CivilizationTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HHW4YieldTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXHHW4YieldTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,int,enum YieldTypes,int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HHW4YieldTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXHHW4YieldTypes@@H@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HHW4YieldTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXHHW4YieldTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,int,enum YieldTypes,int>, COMDAT

; 259  : {

	push	ebx
	push	ebp
	push	esi

; 260  : 	const int idx = Derived::GetStartingArgIndex();
; 261  : 	InstanceType* pkType = Derived::GetInstance(L);
; 262  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2), CvLuaArgs::toValue<arg4>(L, idx + 3));

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	mov	edi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	4
	push	esi
	call	_lua_tointeger
	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	push	2
	push	esi
	mov	ebp, eax
	call	_lua_tointeger
	add	esp, 24					; 00000018H
	push	ebx
	push	ebp
	push	eax
	push	1
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+28]
	pop	edi
	pop	esi
	pop	ebp

; 263  : 	return 0;

	xor	eax, eax
	pop	ebx

; 264  : }

	ret	0
??$BasicLuaMethod@HHW4YieldTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXHHW4YieldTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,int,enum YieldTypes,int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HHH@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXHHH@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,int,int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HHH@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXHHH@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HHH@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXHHH@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,int,int>, COMDAT

; 249  : {

	push	ebx
	push	esi

; 250  : 	const int idx = Derived::GetStartingArgIndex();
; 251  : 	InstanceType* pkType = Derived::GetInstance(L);
; 252  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2));

	mov	esi, DWORD PTR _L$[esp+4]
	push	edi
	mov	edi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	3
	push	esi
	call	_lua_tointeger
	push	2
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H
	push	ebx
	push	eax
	push	1
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+20]
	pop	edi
	pop	esi

; 253  : 	return 0;

	xor	eax, eax
	pop	ebx

; 254  : }

	ret	0
??$BasicLuaMethod@HHH@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXHHH@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,int,int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4CivilizationTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum CivilizationTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_NW4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4CivilizationTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4CivilizationTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum CivilizationTypes>, COMDAT

; 78   : {

	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	DWORD PTR _func$[esp+8]
	movzx	eax, al
	push	eax
	push	edi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	esi

; 84   : }

	ret	0
??$BasicLuaMethod@_NW4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4CivilizationTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum CivilizationTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4LeaderHeadTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4LeaderHeadTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum LeaderHeadTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_NW4LeaderHeadTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4LeaderHeadTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4LeaderHeadTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4LeaderHeadTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum LeaderHeadTypes>, COMDAT

; 78   : {

	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	DWORD PTR _func$[esp+8]
	movzx	eax, al
	push	eax
	push	edi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	esi

; 84   : }

	ret	0
??$BasicLuaMethod@_NW4LeaderHeadTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4LeaderHeadTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum LeaderHeadTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4UnitTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum UnitTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_NW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4UnitTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4UnitTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum UnitTypes>, COMDAT

; 78   : {

	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	DWORD PTR _func$[esp+8]
	movzx	eax, al
	push	eax
	push	edi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	esi

; 84   : }

	ret	0
??$BasicLuaMethod@_NW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4UnitTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum UnitTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4BuildingTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum BuildingTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_NW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4BuildingTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4BuildingTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum BuildingTypes>, COMDAT

; 78   : {

	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	DWORD PTR _func$[esp+8]
	movzx	eax, al
	push	eax
	push	edi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	esi

; 84   : }

	ret	0
??$BasicLuaMethod@_NW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4BuildingTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum BuildingTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4ControlTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NW4ControlTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum ControlTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_NW4ControlTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NW4ControlTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4ControlTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NW4ControlTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum ControlTypes>, COMDAT

; 130  : {

	push	esi

; 131  : 	const int idx = Derived::GetStartingArgIndex();
; 132  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi

; 133  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	DWORD PTR _func$[esp+8]
	movzx	eax, al
	push	eax
	push	edi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi

; 134  : 
; 135  : 	return 1;

	mov	eax, 1
	pop	esi

; 136  : }

	ret	0
??$BasicLuaMethod@_NW4ControlTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NW4ControlTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum ControlTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4ControlTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4ControlTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum ControlTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4ControlTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4ControlTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4ControlTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4ControlTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum ControlTypes>, COMDAT

; 231  : 	const int idx = Derived::GetStartingArgIndex();
; 232  : 	InstanceType* pkType = Derived::GetInstance(L);
; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	mov	eax, DWORD PTR _L$[esp-4]
	push	esi
	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	1
	push	eax
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	DWORD PTR _func$[esp+4]

; 234  : 	return 0;

	xor	eax, eax
	pop	esi

; 235  : }

	ret	0
??$BasicLuaMethod@W4ControlTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4ControlTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum ControlTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4PlayerTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4PlayerTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes,int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4PlayerTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4PlayerTypes@@H@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4PlayerTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4PlayerTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes,int>, COMDAT

; 239  : {

	push	esi

; 240  : 	const int idx = Derived::GetStartingArgIndex();
; 241  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi

; 242  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1));

	mov	edi, DWORD PTR _L$[esp+4]
	push	2
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	DWORD PTR _func$[esp+12]
	pop	edi

; 243  : 	return 0;

	xor	eax, eax
	pop	esi

; 244  : }

	ret	0
??$BasicLuaMethod@W4PlayerTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4PlayerTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes,int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4PlayerTypes@@W41@HH@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4PlayerTypes@@1HH@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes,enum PlayerTypes,int,int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4PlayerTypes@@W41@HH@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4PlayerTypes@@1HH@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4PlayerTypes@@W41@HH@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4PlayerTypes@@1HH@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes,enum PlayerTypes,int,int>, COMDAT

; 259  : {

	push	ebx
	push	ebp
	push	esi

; 260  : 	const int idx = Derived::GetStartingArgIndex();
; 261  : 	InstanceType* pkType = Derived::GetInstance(L);
; 262  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2), CvLuaArgs::toValue<arg4>(L, idx + 3));

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	mov	edi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	4
	push	esi
	call	_lua_tointeger
	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	push	2
	push	esi
	mov	ebp, eax
	call	_lua_tointeger
	add	esp, 24					; 00000018H
	push	ebx
	push	ebp
	push	eax
	push	1
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+28]
	pop	edi
	pop	esi
	pop	ebp

; 263  : 	return 0;

	xor	eax, eax
	pop	ebx

; 264  : }

	ret	0
??$BasicLuaMethod@W4PlayerTypes@@W41@HH@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4PlayerTypes@@1HH@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes,enum PlayerTypes,int,int>
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@W4BeliefTypes@@@std@@QAEXPAW4BeliefTypes@@@Z ; std::allocator<enum BeliefTypes>::destroy
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\xmemory
;	COMDAT ?destroy@?$allocator@W4BeliefTypes@@@std@@QAEXPAW4BeliefTypes@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@W4BeliefTypes@@@std@@QAEXPAW4BeliefTypes@@@Z PROC ; std::allocator<enum BeliefTypes>::destroy, COMDAT
; _this$ = ecx

; 160  : 		_Destroy(_Ptr);
; 161  : 		}

	ret	4
?destroy@?$allocator@W4BeliefTypes@@@std@@QAEXPAW4BeliefTypes@@@Z ENDP ; std::allocator<enum BeliefTypes>::destroy
_TEXT	ENDS
PUBLIC	?isPlot@CvMap@@QBEHHH@Z				; CvMap::isPlot
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvmap.h
;	COMDAT ?isPlot@CvMap@@QBEHHH@Z
_TEXT	SEGMENT
_iX$ = 8						; size = 4
_iY$ = 12						; size = 4
?isPlot@CvMap@@QBEHHH@Z PROC				; CvMap::isPlot, COMDAT
; _this$ = ecx

; 157  : #ifdef AUI_WARNING_FIXES
; 158  : 		return ((iX >= 0) && (uint(iX) < getGridWidth()) && (iY >= 0) && (uint(iY) < getGridHeight()));
; 159  : #else
; 160  : 		return ((iX >= 0) && (iX < getGridWidth()) && (iY >= 0) && (iY < getGridHeight()));

	mov	eax, DWORD PTR _iX$[esp-4]
	test	eax, eax
	jl	SHORT $LN3@isPlot
	cmp	eax, DWORD PTR [ecx+4020]
	jge	SHORT $LN3@isPlot
	mov	eax, DWORD PTR _iY$[esp-4]
	test	eax, eax
	jl	SHORT $LN3@isPlot
	cmp	eax, DWORD PTR [ecx+4024]
	jge	SHORT $LN3@isPlot
	mov	eax, 1

; 161  : #endif
; 162  : 	}

	ret	8
$LN3@isPlot:

; 157  : #ifdef AUI_WARNING_FIXES
; 158  : 		return ((iX >= 0) && (uint(iX) < getGridWidth()) && (iY >= 0) && (uint(iY) < getGridHeight()));
; 159  : #else
; 160  : 		return ((iX >= 0) && (iX < getGridWidth()) && (iY >= 0) && (iY < getGridHeight()));

	xor	eax, eax

; 161  : #endif
; 162  : 	}

	ret	8
?isPlot@CvMap@@QBEHHH@Z ENDP				; CvMap::isPlot
_TEXT	ENDS
PUBLIC	?plotNum@CvMap@@QBEHHH@Z			; CvMap::plotNum
; Function compile flags: /Ogtpy
;	COMDAT ?plotNum@CvMap@@QBEHHH@Z
_TEXT	SEGMENT
_iX$ = 8						; size = 4
_iY$ = 12						; size = 4
?plotNum@CvMap@@QBEHHH@Z PROC				; CvMap::plotNum, COMDAT
; _this$ = ecx

; 183  : 		return ((iY * getGridWidth()) + iX);

	mov	eax, DWORD PTR [ecx+4020]
	imul	eax, DWORD PTR _iY$[esp-4]
	add	eax, DWORD PTR _iX$[esp-4]

; 184  : #endif
; 185  : 	}

	ret	8
?plotNum@CvMap@@QBEHHH@Z ENDP				; CvMap::plotNum
_TEXT	ENDS
PUBLIC	?plot@CvMap@@QBEPAVCvPlot@@HH@Z			; CvMap::plot
; Function compile flags: /Ogtpy
;	COMDAT ?plot@CvMap@@QBEPAVCvPlot@@HH@Z
_TEXT	SEGMENT
_iX$ = 8						; size = 4
_iY$ = 12						; size = 4
?plot@CvMap@@QBEPAVCvPlot@@HH@Z PROC			; CvMap::plot, COMDAT
; _this$ = ecx

; 273  : 		if((iX == INVALID_PLOT_COORD) || (iY == INVALID_PLOT_COORD))

	mov	eax, DWORD PTR _iX$[esp-4]
	push	ebp
	cmp	eax, -2147483647			; 80000001H
	je	$LN1@plot
	mov	ebp, DWORD PTR _iY$[esp]
	cmp	ebp, -2147483647			; 80000001H
	je	$LN1@plot

; 276  : 		}
; 277  : 		int iMapX = coordRange(iX, getGridWidth(), isWrapX());

	cmp	BYTE PTR [ecx+4056], 0
	push	ebx
	push	esi
	mov	esi, DWORD PTR [ecx+4020]
	push	edi
	je	SHORT $LN11@plot
	test	eax, eax
	jge	SHORT $LN13@plot
	cdq
	idiv	esi
	mov	edi, edx
	add	edi, esi
	jmp	SHORT $LN15@plot
$LN13@plot:
	cmp	eax, esi
	jl	SHORT $LN11@plot
	cdq
	idiv	esi
	mov	edi, edx
	jmp	SHORT $LN15@plot
$LN11@plot:
	mov	edi, eax
$LN15@plot:

; 278  : 		int iMapY = coordRange(iY, getGridHeight(), isWrapY());

	cmp	BYTE PTR [ecx+4057], 0
	mov	ebx, DWORD PTR [ecx+4024]
	je	SHORT $LN40@plot
	test	ebp, ebp
	jge	SHORT $LN23@plot
	mov	eax, ebp
	cdq
	idiv	ebx
	add	edx, ebx
	jmp	SHORT $LN25@plot
$LN23@plot:
	cmp	ebp, ebx
	jl	SHORT $LN40@plot
	mov	eax, ebp
	cdq
	idiv	ebx
	jmp	SHORT $LN25@plot
$LN40@plot:
	mov	edx, ebp
$LN25@plot:

; 279  : 		return ((isPlot(iMapX, iMapY)) ? &(m_pMapPlots[plotNum(iMapX, iMapY)]) : NULL);

	test	edi, edi
	jl	SHORT $LN5@plot
	cmp	edi, esi
	jge	SHORT $LN5@plot
	test	edx, edx
	jl	SHORT $LN5@plot
	cmp	edx, ebx
	jge	SHORT $LN5@plot
	imul	esi, edx
	add	esi, edi
	imul	esi, 484				; 000001e4H
	add	esi, DWORD PTR [ecx+4068]
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx
	pop	ebp

; 280  : 	}

	ret	8
$LN5@plot:
	pop	edi
	pop	esi
	pop	ebx

; 279  : 		return ((isPlot(iMapX, iMapY)) ? &(m_pMapPlots[plotNum(iMapX, iMapY)]) : NULL);

	xor	eax, eax
	pop	ebp

; 280  : 	}

	ret	8
$LN1@plot:

; 274  : 		{
; 275  : 			return NULL;

	xor	eax, eax
	pop	ebp

; 280  : 	}

	ret	8
?plot@CvMap@@QBEPAVCvPlot@@HH@Z ENDP			; CvMap::plot
_TEXT	ENDS
PUBLIC	?GetNumGreatWorks@CvGameCulture@@QBEHXZ		; CvGameCulture::GetNumGreatWorks
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvcultureclasses.h
;	COMDAT ?GetNumGreatWorks@CvGameCulture@@QBEHXZ
_TEXT	SEGMENT
?GetNumGreatWorks@CvGameCulture@@QBEHXZ PROC		; CvGameCulture::GetNumGreatWorks, COMDAT
; _this$ = ecx

; 68   : 		return m_CurrentGreatWorks.size();

	mov	eax, DWORD PTR [ecx+4]

; 69   : 	}

	ret	0
?GetNumGreatWorks@CvGameCulture@@QBEHXZ ENDP		; CvGameCulture::GetNumGreatWorks
_TEXT	ENDS
PUBLIC	?lUpdateScore@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lUpdateScore
EXTRN	?updateScore@CvGame@@QAEX_N@Z:PROC		; CvGame::updateScore
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluagame.cpp
;	COMDAT ?lUpdateScore@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lUpdateScore@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lUpdateScore, COMDAT

; 414  : 	return BasicLuaMethod(L, &CvGame::updateScore);

	mov	eax, DWORD PTR _L$[esp-4]
	push	esi
	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	1
	push	eax
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	cl
	movzx	edx, cl
	push	edx
	mov	ecx, esi
	call	?updateScore@CvGame@@QAEX_N@Z		; CvGame::updateScore
	xor	eax, eax
	pop	esi

; 415  : }

	ret	0
?lUpdateScore@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lUpdateScore
_TEXT	ENDS
PUBLIC	?lCycleCities@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lCycleCities
EXTRN	?cycleCities@CvGame@@QAEX_N0@Z:PROC		; CvGame::cycleCities
; Function compile flags: /Ogtpy
;	COMDAT ?lCycleCities@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T229671 = -4						; size = 1
_L$ = 8							; size = 4
?lCycleCities@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lCycleCities, COMDAT

; 419  : {

	push	ecx
	push	esi

; 420  : 	return BasicLuaMethod(L, &CvGame::cycleCities);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	mov	edi, DWORD PTR _L$[esp+8]
	push	2
	push	edi
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	al
	mov	BYTE PTR $T229671[esp+12], al
	mov	ecx, DWORD PTR $T229671[esp+12]
	push	ecx
	push	1
	push	edi
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	dl
	movzx	eax, dl
	push	eax
	mov	ecx, esi
	call	?cycleCities@CvGame@@QAEX_N0@Z		; CvGame::cycleCities
	pop	edi
	xor	eax, eax
	pop	esi

; 421  : }

	pop	ecx
	ret	0
?lCycleCities@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lCycleCities
_TEXT	ENDS
PUBLIC	?lCycleUnits@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lCycleUnits
EXTRN	?cycleUnits@CvGame@@QAEX_N00@Z:PROC		; CvGame::cycleUnits
; Function compile flags: /Ogtpy
;	COMDAT ?lCycleUnits@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCycleUnits@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lCycleUnits, COMDAT

; 426  : 	return BasicLuaMethod(L, &CvGame::cycleUnits);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?cycleUnits@CvGame@@QAEX_N00@Z	; CvGame::cycleUnits
	push	eax
	call	??$BasicLuaMethod@_N_N_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEX_N11@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,bool,bool>
	add	esp, 8

; 427  : }

	ret	0
?lCycleUnits@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lCycleUnits
_TEXT	ENDS
PUBLIC	?lGetProductionPerPopulation@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetProductionPerPopulation
EXTRN	?getProductionPerPopulation@CvGame@@QAEHW4HurryTypes@@@Z:PROC ; CvGame::getProductionPerPopulation
; Function compile flags: /Ogtpy
;	COMDAT ?lGetProductionPerPopulation@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProductionPerPopulation@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetProductionPerPopulation, COMDAT

; 531  : {

	push	esi

; 532  : 	return BasicLuaMethod(L, &CvGame::getProductionPerPopulation);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	?getProductionPerPopulation@CvGame@@QAEHW4HurryTypes@@@Z ; CvGame::getProductionPerPopulation
	push	eax
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	mov	eax, 1
	pop	esi

; 533  : }

	ret	0
?lGetProductionPerPopulation@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetProductionPerPopulation
_TEXT	ENDS
PUBLIC	?lGetAdjustedPopulationPercent@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetAdjustedPopulationPercent
EXTRN	?getAdjustedPopulationPercent@CvGame@@QBEHW4VictoryTypes@@@Z:PROC ; CvGame::getAdjustedPopulationPercent
; Function compile flags: /Ogtpy
;	COMDAT ?lGetAdjustedPopulationPercent@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetAdjustedPopulationPercent@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetAdjustedPopulationPercent, COMDAT

; 537  : {

	push	esi

; 538  : 	return BasicLuaMethod(L, &CvGame::getAdjustedPopulationPercent);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	?getAdjustedPopulationPercent@CvGame@@QBEHW4VictoryTypes@@@Z ; CvGame::getAdjustedPopulationPercent
	push	eax
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	mov	eax, 1
	pop	esi

; 539  : }

	ret	0
?lGetAdjustedPopulationPercent@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetAdjustedPopulationPercent
_TEXT	ENDS
PUBLIC	?lGetAdjustedLandPercent@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetAdjustedLandPercent
EXTRN	?getAdjustedLandPercent@CvGame@@QBEHW4VictoryTypes@@@Z:PROC ; CvGame::getAdjustedLandPercent
; Function compile flags: /Ogtpy
;	COMDAT ?lGetAdjustedLandPercent@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetAdjustedLandPercent@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetAdjustedLandPercent, COMDAT

; 543  : {

	push	esi

; 544  : 	return BasicLuaMethod(L, &CvGame::getAdjustedLandPercent);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	?getAdjustedLandPercent@CvGame@@QBEHW4VictoryTypes@@@Z ; CvGame::getAdjustedLandPercent
	push	eax
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	mov	eax, 1
	pop	esi

; 545  : }

	ret	0
?lGetAdjustedLandPercent@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetAdjustedLandPercent
_TEXT	ENDS
PUBLIC	?lGetUnitedNationsCountdown@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetUnitedNationsCountdown
EXTRN	?GetUnitedNationsCountdown@CvGame@@QBEHXZ:PROC	; CvGame::GetUnitedNationsCountdown
; Function compile flags: /Ogtpy
;	COMDAT ?lGetUnitedNationsCountdown@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnitedNationsCountdown@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetUnitedNationsCountdown, COMDAT

; 550  : 	return BasicLuaMethod(L, &CvGame::GetUnitedNationsCountdown);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetUnitedNationsCountdown@CvGame@@QBEHXZ ; CvGame::GetUnitedNationsCountdown
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 551  : }

	ret	0
?lGetUnitedNationsCountdown@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetUnitedNationsCountdown
_TEXT	ENDS
PUBLIC	?lCountCivPlayersAlive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCountCivPlayersAlive
EXTRN	?countCivPlayersAlive@CvGame@@QBEHXZ:PROC	; CvGame::countCivPlayersAlive
; Function compile flags: /Ogtpy
;	COMDAT ?lCountCivPlayersAlive@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCountCivPlayersAlive@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lCountCivPlayersAlive, COMDAT

; 564  : 	return BasicLuaMethod(L, &CvGame::countCivPlayersAlive);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?countCivPlayersAlive@CvGame@@QBEHXZ	; CvGame::countCivPlayersAlive
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 565  : }

	ret	0
?lCountCivPlayersAlive@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lCountCivPlayersAlive
_TEXT	ENDS
PUBLIC	?lCountCivPlayersEverAlive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCountCivPlayersEverAlive
EXTRN	?countCivPlayersEverAlive@CvGame@@QBEHXZ:PROC	; CvGame::countCivPlayersEverAlive
; Function compile flags: /Ogtpy
;	COMDAT ?lCountCivPlayersEverAlive@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCountCivPlayersEverAlive@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lCountCivPlayersEverAlive, COMDAT

; 570  : 	return BasicLuaMethod(L, &CvGame::countCivPlayersEverAlive);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?countCivPlayersEverAlive@CvGame@@QBEHXZ ; CvGame::countCivPlayersEverAlive
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 571  : }

	ret	0
?lCountCivPlayersEverAlive@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lCountCivPlayersEverAlive
_TEXT	ENDS
PUBLIC	?lCountCivTeamsAlive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCountCivTeamsAlive
EXTRN	?countCivTeamsAlive@CvGame@@QBEHXZ:PROC		; CvGame::countCivTeamsAlive
; Function compile flags: /Ogtpy
;	COMDAT ?lCountCivTeamsAlive@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCountCivTeamsAlive@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lCountCivTeamsAlive, COMDAT

; 576  : 	return BasicLuaMethod(L, &CvGame::countCivTeamsAlive);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?countCivTeamsAlive@CvGame@@QBEHXZ	; CvGame::countCivTeamsAlive
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 577  : }

	ret	0
?lCountCivTeamsAlive@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lCountCivTeamsAlive
_TEXT	ENDS
PUBLIC	?lCountCivTeamsEverAlive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCountCivTeamsEverAlive
EXTRN	?countCivTeamsEverAlive@CvGame@@QBEHXZ:PROC	; CvGame::countCivTeamsEverAlive
; Function compile flags: /Ogtpy
;	COMDAT ?lCountCivTeamsEverAlive@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCountCivTeamsEverAlive@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lCountCivTeamsEverAlive, COMDAT

; 582  : 	return BasicLuaMethod(L, &CvGame::countCivTeamsEverAlive);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?countCivTeamsEverAlive@CvGame@@QBEHXZ	; CvGame::countCivTeamsEverAlive
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 583  : }

	ret	0
?lCountCivTeamsEverAlive@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lCountCivTeamsEverAlive
_TEXT	ENDS
PUBLIC	?lCountHumanPlayersAlive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCountHumanPlayersAlive
EXTRN	?countHumanPlayersAlive@CvGame@@QBEHXZ:PROC	; CvGame::countHumanPlayersAlive
; Function compile flags: /Ogtpy
;	COMDAT ?lCountHumanPlayersAlive@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCountHumanPlayersAlive@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lCountHumanPlayersAlive, COMDAT

; 588  : 	return BasicLuaMethod(L, &CvGame::countHumanPlayersAlive);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?countHumanPlayersAlive@CvGame@@QBEHXZ	; CvGame::countHumanPlayersAlive
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 589  : }

	ret	0
?lCountHumanPlayersAlive@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lCountHumanPlayersAlive
_TEXT	ENDS
PUBLIC	?lCountHumanPlayersEverAlive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCountHumanPlayersEverAlive
EXTRN	?countHumanPlayersEverAlive@CvGame@@QBEHXZ:PROC	; CvGame::countHumanPlayersEverAlive
; Function compile flags: /Ogtpy
;	COMDAT ?lCountHumanPlayersEverAlive@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCountHumanPlayersEverAlive@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lCountHumanPlayersEverAlive, COMDAT

; 594  : 	return BasicLuaMethod(L, &CvGame::countHumanPlayersEverAlive);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?countHumanPlayersEverAlive@CvGame@@QBEHXZ ; CvGame::countHumanPlayersEverAlive
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 595  : }

	ret	0
?lCountHumanPlayersEverAlive@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lCountHumanPlayersEverAlive
_TEXT	ENDS
PUBLIC	?lCountTotalCivPower@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCountTotalCivPower
EXTRN	?countTotalCivPower@CvGame@@QAEHXZ:PROC		; CvGame::countTotalCivPower
; Function compile flags: /Ogtpy
;	COMDAT ?lCountTotalCivPower@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCountTotalCivPower@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lCountTotalCivPower, COMDAT

; 600  : 	return BasicLuaMethod(L, &CvGame::countTotalCivPower);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?countTotalCivPower@CvGame@@QAEHXZ	; CvGame::countTotalCivPower
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 601  : }

	ret	0
?lCountTotalCivPower@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lCountTotalCivPower
_TEXT	ENDS
PUBLIC	?lCountTotalNukeUnits@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCountTotalNukeUnits
EXTRN	?countTotalNukeUnits@CvGame@@QAEHXZ:PROC	; CvGame::countTotalNukeUnits
; Function compile flags: /Ogtpy
;	COMDAT ?lCountTotalNukeUnits@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCountTotalNukeUnits@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lCountTotalNukeUnits, COMDAT

; 606  : 	return BasicLuaMethod(L, &CvGame::countTotalNukeUnits);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?countTotalNukeUnits@CvGame@@QAEHXZ	; CvGame::countTotalNukeUnits
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 607  : }

	ret	0
?lCountTotalNukeUnits@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lCountTotalNukeUnits
_TEXT	ENDS
PUBLIC	?lCountKnownTechNumTeams@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCountKnownTechNumTeams
EXTRN	?countKnownTechNumTeams@CvGame@@QAEHW4TechTypes@@@Z:PROC ; CvGame::countKnownTechNumTeams
; Function compile flags: /Ogtpy
;	COMDAT ?lCountKnownTechNumTeams@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCountKnownTechNumTeams@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lCountKnownTechNumTeams, COMDAT

; 611  : {

	push	esi

; 612  : 	return BasicLuaMethod(L, &CvGame::countKnownTechNumTeams);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	?countKnownTechNumTeams@CvGame@@QAEHW4TechTypes@@@Z ; CvGame::countKnownTechNumTeams
	push	eax
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	mov	eax, 1
	pop	esi

; 613  : }

	ret	0
?lCountKnownTechNumTeams@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lCountKnownTechNumTeams
_TEXT	ENDS
PUBLIC	?lGoldenAgeLength@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGoldenAgeLength
EXTRN	?goldenAgeLength@CvGame@@QBEHXZ:PROC		; CvGame::goldenAgeLength
; Function compile flags: /Ogtpy
;	COMDAT ?lGoldenAgeLength@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGoldenAgeLength@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGoldenAgeLength, COMDAT

; 618  : 	return BasicLuaMethod(L, &CvGame::goldenAgeLength);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?goldenAgeLength@CvGame@@QBEHXZ		; CvGame::goldenAgeLength
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 619  : }

	ret	0
?lGoldenAgeLength@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGoldenAgeLength
_TEXT	ENDS
PUBLIC	?lVictoryDelay@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lVictoryDelay
EXTRN	?victoryDelay@CvGame@@QBEHW4VictoryTypes@@@Z:PROC ; CvGame::victoryDelay
; Function compile flags: /Ogtpy
;	COMDAT ?lVictoryDelay@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lVictoryDelay@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lVictoryDelay, COMDAT

; 623  : {

	push	esi

; 624  : 	return BasicLuaMethod(L, &CvGame::victoryDelay);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	?victoryDelay@CvGame@@QBEHW4VictoryTypes@@@Z ; CvGame::victoryDelay
	push	eax
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	mov	eax, 1
	pop	esi

; 625  : }

	ret	0
?lVictoryDelay@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lVictoryDelay
_TEXT	ENDS
PUBLIC	?lGetImprovementUpgradeTime@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetImprovementUpgradeTime
EXTRN	?getImprovementUpgradeTime@CvGame@@QBEHW4ImprovementTypes@@PBVCvPlot@@@Z:PROC ; CvGame::getImprovementUpgradeTime
; Function compile flags: /Ogtpy
;	COMDAT ?lGetImprovementUpgradeTime@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetImprovementUpgradeTime@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetImprovementUpgradeTime, COMDAT

; 629  : {

	push	ebx
	push	esi

; 630  : 	return BasicLuaMethod(L, &CvGame::getImprovementUpgradeTime);

	mov	esi, DWORD PTR _L$[esp+4]
	push	edi
	mov	edi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	2
	push	esi
	call	_lua_tointeger
	push	1
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H
	push	ebx
	push	eax
	mov	ecx, edi
	call	?getImprovementUpgradeTime@CvGame@@QBEHW4ImprovementTypes@@PBVCvPlot@@@Z ; CvGame::getImprovementUpgradeTime
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	mov	eax, 1
	pop	ebx

; 631  : }

	ret	0
?lGetImprovementUpgradeTime@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetImprovementUpgradeTime
_TEXT	ENDS
PUBLIC	?lCanTrainNukes@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lCanTrainNukes
EXTRN	?canTrainNukes@CvGame@@QBE_NXZ:PROC		; CvGame::canTrainNukes
; Function compile flags: /Ogtpy
;	COMDAT ?lCanTrainNukes@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanTrainNukes@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lCanTrainNukes, COMDAT

; 636  : 	return BasicLuaMethod(L, &CvGame::canTrainNukes);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?canTrainNukes@CvGame@@QBE_NXZ		; CvGame::canTrainNukes
	mov	ecx, DWORD PTR _L$[esp-4]
	movzx	eax, al
	push	eax
	push	ecx
	call	_lua_pushboolean
	add	esp, 8
	mov	eax, 1

; 637  : }

	ret	0
?lCanTrainNukes@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lCanTrainNukes
_TEXT	ENDS
PUBLIC	?lGetCurrentEra@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetCurrentEra
EXTRN	?getCurrentEra@CvGame@@QBE?AW4EraTypes@@XZ:PROC	; CvGame::getCurrentEra
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCurrentEra@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCurrentEra@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetCurrentEra, COMDAT

; 642  : 	return BasicLuaMethod(L, &CvGame::getCurrentEra);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getCurrentEra@CvGame@@QBE?AW4EraTypes@@XZ ; CvGame::getCurrentEra
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 643  : }

	ret	0
?lGetCurrentEra@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetCurrentEra
_TEXT	ENDS
PUBLIC	?lGetActiveTeam@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetActiveTeam
EXTRN	?getActiveTeam@CvGame@@QAE?AW4TeamTypes@@XZ:PROC ; CvGame::getActiveTeam
; Function compile flags: /Ogtpy
;	COMDAT ?lGetActiveTeam@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetActiveTeam@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetActiveTeam, COMDAT

; 663  : 	return BasicLuaMethod(L, &CvGame::getActiveTeam);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getActiveTeam@CvGame@@QAE?AW4TeamTypes@@XZ ; CvGame::getActiveTeam
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 664  : }

	ret	0
?lGetActiveTeam@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetActiveTeam
_TEXT	ENDS
PUBLIC	?lGetActiveCivilizationType@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetActiveCivilizationType
EXTRN	?getActiveCivilizationType@CvGame@@QAE?AW4CivilizationTypes@@XZ:PROC ; CvGame::getActiveCivilizationType
; Function compile flags: /Ogtpy
;	COMDAT ?lGetActiveCivilizationType@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetActiveCivilizationType@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetActiveCivilizationType, COMDAT

; 669  : 	return BasicLuaMethod(L, &CvGame::getActiveCivilizationType);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getActiveCivilizationType@CvGame@@QAE?AW4CivilizationTypes@@XZ ; CvGame::getActiveCivilizationType
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 670  : }

	ret	0
?lGetActiveCivilizationType@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetActiveCivilizationType
_TEXT	ENDS
PUBLIC	?lIsNetworkMultiPlayer@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsNetworkMultiPlayer
; Function compile flags: /Ogtpy
;	COMDAT ?lIsNetworkMultiPlayer@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsNetworkMultiPlayer@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lIsNetworkMultiPlayer, COMDAT

; 675  : 	return BasicLuaMethod(L, &CvGame::isNetworkMultiPlayer);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?isNetworkMultiPlayer@CvGame@@QBE_NXZ	; CvGame::isNetworkMultiPlayer
	mov	ecx, DWORD PTR _L$[esp-4]
	movzx	eax, al
	push	eax
	push	ecx
	call	_lua_pushboolean
	add	esp, 8
	mov	eax, 1

; 676  : }

	ret	0
?lIsNetworkMultiPlayer@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lIsNetworkMultiPlayer
_TEXT	ENDS
PUBLIC	?lIsGameMultiPlayer@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsGameMultiPlayer
EXTRN	?isGameMultiPlayer@CvGame@@QBE_NXZ:PROC		; CvGame::isGameMultiPlayer
; Function compile flags: /Ogtpy
;	COMDAT ?lIsGameMultiPlayer@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsGameMultiPlayer@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lIsGameMultiPlayer, COMDAT

; 681  : 	return BasicLuaMethod(L, &CvGame::isGameMultiPlayer);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?isGameMultiPlayer@CvGame@@QBE_NXZ	; CvGame::isGameMultiPlayer
	mov	ecx, DWORD PTR _L$[esp-4]
	movzx	eax, al
	push	eax
	push	ecx
	call	_lua_pushboolean
	add	esp, 8
	mov	eax, 1

; 682  : }

	ret	0
?lIsGameMultiPlayer@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lIsGameMultiPlayer
_TEXT	ENDS
PUBLIC	?lIsTeamGame@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lIsTeamGame
EXTRN	?isTeamGame@CvGame@@QBE_NXZ:PROC		; CvGame::isTeamGame
; Function compile flags: /Ogtpy
;	COMDAT ?lIsTeamGame@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsTeamGame@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lIsTeamGame, COMDAT

; 687  : 	return BasicLuaMethod(L, &CvGame::isTeamGame);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?isTeamGame@CvGame@@QBE_NXZ		; CvGame::isTeamGame
	mov	ecx, DWORD PTR _L$[esp-4]
	movzx	eax, al
	push	eax
	push	ecx
	call	_lua_pushboolean
	add	esp, 8
	mov	eax, 1

; 688  : }

	ret	0
?lIsTeamGame@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lIsTeamGame
_TEXT	ENDS
PUBLIC	?lReviveActivePlayer@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lReviveActivePlayer
EXTRN	?ReviveActivePlayer@CvGame@@QAEXXZ:PROC		; CvGame::ReviveActivePlayer
; Function compile flags: /Ogtpy
;	COMDAT ?lReviveActivePlayer@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lReviveActivePlayer@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lReviveActivePlayer, COMDAT

; 693  : 	return BasicLuaMethod(L, &CvGame::ReviveActivePlayer);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?ReviveActivePlayer@CvGame@@QAEXXZ	; CvGame::ReviveActivePlayer
	xor	eax, eax

; 694  : }

	ret	0
?lReviveActivePlayer@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lReviveActivePlayer
_TEXT	ENDS
PUBLIC	?lGetNumHumanPlayers@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumHumanPlayers
EXTRN	?getNumHumanPlayers@CvGame@@QAEHXZ:PROC		; CvGame::getNumHumanPlayers
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumHumanPlayers@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumHumanPlayers@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetNumHumanPlayers, COMDAT

; 699  : 	return BasicLuaMethod(L, &CvGame::getNumHumanPlayers);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getNumHumanPlayers@CvGame@@QAEHXZ	; CvGame::getNumHumanPlayers
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 700  : }

	ret	0
?lGetNumHumanPlayers@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetNumHumanPlayers
_TEXT	ENDS
PUBLIC	?lGetNumSequentialHumans@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumSequentialHumans
EXTRN	?getNumSequentialHumans@CvGame@@QAEHW4PlayerTypes@@@Z:PROC ; CvGame::getNumSequentialHumans
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumSequentialHumans@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumSequentialHumans@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetNumSequentialHumans, COMDAT

; 704  : {

	push	esi

; 705  : 	return BasicLuaMethod(L, &CvGame::getNumSequentialHumans);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	?getNumSequentialHumans@CvGame@@QAEHW4PlayerTypes@@@Z ; CvGame::getNumSequentialHumans
	push	eax
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	mov	eax, 1
	pop	esi

; 706  : }

	ret	0
?lGetNumSequentialHumans@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetNumSequentialHumans
_TEXT	ENDS
PUBLIC	?lGetGameTurn@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetGameTurn
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGameTurn@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGameTurn@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetGameTurn, COMDAT

; 711  : 	return BasicLuaMethod(L, &CvGame::getGameTurn);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 712  : }

	ret	0
?lGetGameTurn@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetGameTurn
_TEXT	ENDS
PUBLIC	?lSetGameTurn@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lSetGameTurn
EXTRN	?setGameTurn@CvGame@@QAEXH@Z:PROC		; CvGame::setGameTurn
; Function compile flags: /Ogtpy
;	COMDAT ?lSetGameTurn@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetGameTurn@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lSetGameTurn, COMDAT

; 717  : 	return BasicLuaMethod(L, &CvGame::setGameTurn);

	mov	eax, DWORD PTR _L$[esp-4]
	push	esi
	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	1
	push	eax
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	?setGameTurn@CvGame@@QAEXH@Z		; CvGame::setGameTurn
	xor	eax, eax
	pop	esi

; 718  : }

	ret	0
?lSetGameTurn@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lSetGameTurn
_TEXT	ENDS
PUBLIC	?lGetTurnYear@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetTurnYear
EXTRN	?getTurnYear@CvGame@@QAEHH@Z:PROC		; CvGame::getTurnYear
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTurnYear@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTurnYear@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetTurnYear, COMDAT

; 722  : {

	push	esi

; 723  : 	return BasicLuaMethod(L, &CvGame::getTurnYear);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	?getTurnYear@CvGame@@QAEHH@Z		; CvGame::getTurnYear
	push	eax
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	mov	eax, 1
	pop	esi

; 724  : }

	ret	0
?lGetTurnYear@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetTurnYear
_TEXT	ENDS
PUBLIC	?lGetGameTurnYear@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGameTurnYear
EXTRN	?getGameTurnYear@CvGame@@QAEHXZ:PROC		; CvGame::getGameTurnYear
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGameTurnYear@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGameTurnYear@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetGameTurnYear, COMDAT

; 729  : 	return BasicLuaMethod(L, &CvGame::getGameTurnYear);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getGameTurnYear@CvGame@@QAEHXZ		; CvGame::getGameTurnYear
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 730  : }

	ret	0
?lGetGameTurnYear@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetGameTurnYear
_TEXT	ENDS
PUBLIC	?lGetElapsedGameTurns@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetElapsedGameTurns
EXTRN	?getElapsedGameTurns@CvGame@@QBEHXZ:PROC	; CvGame::getElapsedGameTurns
; Function compile flags: /Ogtpy
;	COMDAT ?lGetElapsedGameTurns@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetElapsedGameTurns@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetElapsedGameTurns, COMDAT

; 751  : 	return BasicLuaMethod(L, &CvGame::getElapsedGameTurns);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getElapsedGameTurns@CvGame@@QBEHXZ	; CvGame::getElapsedGameTurns
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 752  : }

	ret	0
?lGetElapsedGameTurns@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetElapsedGameTurns
_TEXT	ENDS
PUBLIC	?lGetMaxTurns@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetMaxTurns
EXTRN	?getMaxTurns@CvGame@@QBEHXZ:PROC		; CvGame::getMaxTurns
; Function compile flags: /Ogtpy
;	COMDAT ?lGetMaxTurns@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMaxTurns@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetMaxTurns, COMDAT

; 757  : 	return BasicLuaMethod(L, &CvGame::getMaxTurns);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getMaxTurns@CvGame@@QBEHXZ		; CvGame::getMaxTurns
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 758  : }

	ret	0
?lGetMaxTurns@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetMaxTurns
_TEXT	ENDS
PUBLIC	?lSetMaxTurns@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lSetMaxTurns
EXTRN	?setMaxTurns@CvGame@@QAEXH@Z:PROC		; CvGame::setMaxTurns
; Function compile flags: /Ogtpy
;	COMDAT ?lSetMaxTurns@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetMaxTurns@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lSetMaxTurns, COMDAT

; 763  : 	return BasicLuaMethod(L, &CvGame::setMaxTurns);

	mov	eax, DWORD PTR _L$[esp-4]
	push	esi
	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	1
	push	eax
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	?setMaxTurns@CvGame@@QAEXH@Z		; CvGame::setMaxTurns
	xor	eax, eax
	pop	esi

; 764  : }

	ret	0
?lSetMaxTurns@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lSetMaxTurns
_TEXT	ENDS
PUBLIC	?lChangeMaxTurns@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lChangeMaxTurns
EXTRN	?changeMaxTurns@CvGame@@QAEXH@Z:PROC		; CvGame::changeMaxTurns
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeMaxTurns@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeMaxTurns@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lChangeMaxTurns, COMDAT

; 769  : 	return BasicLuaMethod(L, &CvGame::changeMaxTurns);

	mov	eax, DWORD PTR _L$[esp-4]
	push	esi
	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	1
	push	eax
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	?changeMaxTurns@CvGame@@QAEXH@Z		; CvGame::changeMaxTurns
	xor	eax, eax
	pop	esi

; 770  : }

	ret	0
?lChangeMaxTurns@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lChangeMaxTurns
_TEXT	ENDS
PUBLIC	?lGetMaxCityElimination@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetMaxCityElimination
EXTRN	?getMaxCityElimination@CvGame@@QBEHXZ:PROC	; CvGame::getMaxCityElimination
; Function compile flags: /Ogtpy
;	COMDAT ?lGetMaxCityElimination@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMaxCityElimination@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetMaxCityElimination, COMDAT

; 775  : 	return BasicLuaMethod(L, &CvGame::getMaxCityElimination);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getMaxCityElimination@CvGame@@QBEHXZ	; CvGame::getMaxCityElimination
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 776  : }

	ret	0
?lGetMaxCityElimination@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetMaxCityElimination
_TEXT	ENDS
PUBLIC	?lSetMaxCityElimination@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetMaxCityElimination
EXTRN	?setMaxCityElimination@CvGame@@QAEXH@Z:PROC	; CvGame::setMaxCityElimination
; Function compile flags: /Ogtpy
;	COMDAT ?lSetMaxCityElimination@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetMaxCityElimination@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lSetMaxCityElimination, COMDAT

; 781  : 	return BasicLuaMethod(L, &CvGame::setMaxCityElimination);

	mov	eax, DWORD PTR _L$[esp-4]
	push	esi
	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	1
	push	eax
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	?setMaxCityElimination@CvGame@@QAEXH@Z	; CvGame::setMaxCityElimination
	xor	eax, eax
	pop	esi

; 782  : }

	ret	0
?lSetMaxCityElimination@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lSetMaxCityElimination
_TEXT	ENDS
PUBLIC	?lGetNumAdvancedStartPoints@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumAdvancedStartPoints
EXTRN	?getNumAdvancedStartPoints@CvGame@@QBEHXZ:PROC	; CvGame::getNumAdvancedStartPoints
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumAdvancedStartPoints@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumAdvancedStartPoints@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetNumAdvancedStartPoints, COMDAT

; 787  : 	return BasicLuaMethod(L, &CvGame::getNumAdvancedStartPoints);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getNumAdvancedStartPoints@CvGame@@QBEHXZ ; CvGame::getNumAdvancedStartPoints
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 788  : }

	ret	0
?lGetNumAdvancedStartPoints@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetNumAdvancedStartPoints
_TEXT	ENDS
PUBLIC	?lSetNumAdvancedStartPoints@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetNumAdvancedStartPoints
EXTRN	?setNumAdvancedStartPoints@CvGame@@QAEXH@Z:PROC	; CvGame::setNumAdvancedStartPoints
; Function compile flags: /Ogtpy
;	COMDAT ?lSetNumAdvancedStartPoints@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetNumAdvancedStartPoints@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lSetNumAdvancedStartPoints, COMDAT

; 793  : 	return BasicLuaMethod(L, &CvGame::setNumAdvancedStartPoints);

	mov	eax, DWORD PTR _L$[esp-4]
	push	esi
	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	1
	push	eax
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	?setNumAdvancedStartPoints@CvGame@@QAEXH@Z ; CvGame::setNumAdvancedStartPoints
	xor	eax, eax
	pop	esi

; 794  : }

	ret	0
?lSetNumAdvancedStartPoints@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lSetNumAdvancedStartPoints
_TEXT	ENDS
PUBLIC	?lGetStartTurn@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetStartTurn
EXTRN	?getStartTurn@CvGame@@QBEHXZ:PROC		; CvGame::getStartTurn
; Function compile flags: /Ogtpy
;	COMDAT ?lGetStartTurn@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetStartTurn@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetStartTurn, COMDAT

; 799  : 	return BasicLuaMethod(L, &CvGame::getStartTurn);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getStartTurn@CvGame@@QBEHXZ		; CvGame::getStartTurn
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 800  : }

	ret	0
?lGetStartTurn@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetStartTurn
_TEXT	ENDS
PUBLIC	?lGetWinningTurn@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetWinningTurn
EXTRN	?GetWinningTurn@CvGame@@QBEHXZ:PROC		; CvGame::GetWinningTurn
; Function compile flags: /Ogtpy
;	COMDAT ?lGetWinningTurn@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetWinningTurn@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetWinningTurn, COMDAT

; 805  : 	return BasicLuaMethod(L, &CvGame::GetWinningTurn);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetWinningTurn@CvGame@@QBEHXZ		; CvGame::GetWinningTurn
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 806  : }

	ret	0
?lGetWinningTurn@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetWinningTurn
_TEXT	ENDS
PUBLIC	?lGetStartYear@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetStartYear
; Function compile flags: /Ogtpy
;	COMDAT ?lGetStartYear@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetStartYear@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetStartYear, COMDAT

; 811  : 	return BasicLuaMethod(L, &CvGame::getStartYear);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getStartYear@CvGame@@QBEHXZ		; CvGame::getStartYear
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 812  : }

	ret	0
?lGetStartYear@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetStartYear
_TEXT	ENDS
PUBLIC	?lSetStartYear@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lSetStartYear
EXTRN	?setStartYear@CvGame@@QAEXH@Z:PROC		; CvGame::setStartYear
; Function compile flags: /Ogtpy
;	COMDAT ?lSetStartYear@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetStartYear@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lSetStartYear, COMDAT

; 817  : 	return BasicLuaMethod(L, &CvGame::setStartYear);

	mov	eax, DWORD PTR _L$[esp-4]
	push	esi
	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	1
	push	eax
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	?setStartYear@CvGame@@QAEXH@Z		; CvGame::setStartYear
	xor	eax, eax
	pop	esi

; 818  : }

	ret	0
?lSetStartYear@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lSetStartYear
_TEXT	ENDS
PUBLIC	?lGetEstimateEndTurn@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetEstimateEndTurn
EXTRN	?getEstimateEndTurn@CvGame@@QBEHXZ:PROC		; CvGame::getEstimateEndTurn
; Function compile flags: /Ogtpy
;	COMDAT ?lGetEstimateEndTurn@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetEstimateEndTurn@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetEstimateEndTurn, COMDAT

; 823  : 	return BasicLuaMethod(L, &CvGame::getEstimateEndTurn);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getEstimateEndTurn@CvGame@@QBEHXZ	; CvGame::getEstimateEndTurn
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 824  : }

	ret	0
?lGetEstimateEndTurn@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetEstimateEndTurn
_TEXT	ENDS
PUBLIC	?lSetEstimateEndTurn@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetEstimateEndTurn
EXTRN	?setEstimateEndTurn@CvGame@@QAEXH@Z:PROC	; CvGame::setEstimateEndTurn
; Function compile flags: /Ogtpy
;	COMDAT ?lSetEstimateEndTurn@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetEstimateEndTurn@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lSetEstimateEndTurn, COMDAT

; 829  : 	return BasicLuaMethod(L, &CvGame::setEstimateEndTurn);

	mov	eax, DWORD PTR _L$[esp-4]
	push	esi
	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	1
	push	eax
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	?setEstimateEndTurn@CvGame@@QAEXH@Z	; CvGame::setEstimateEndTurn
	xor	eax, eax
	pop	esi

; 830  : }

	ret	0
?lSetEstimateEndTurn@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lSetEstimateEndTurn
_TEXT	ENDS
PUBLIC	?lGetTurnSlice@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetTurnSlice
EXTRN	?getTurnSlice@CvGame@@QBEHXZ:PROC		; CvGame::getTurnSlice
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTurnSlice@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTurnSlice@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetTurnSlice, COMDAT

; 835  : 	return BasicLuaMethod(L, &CvGame::getTurnSlice);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getTurnSlice@CvGame@@QBEHXZ		; CvGame::getTurnSlice
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 836  : }

	ret	0
?lGetTurnSlice@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetTurnSlice
_TEXT	ENDS
PUBLIC	?lGetMinutesPlayed@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetMinutesPlayed
EXTRN	?getMinutesPlayed@CvGame@@QBEHXZ:PROC		; CvGame::getMinutesPlayed
; Function compile flags: /Ogtpy
;	COMDAT ?lGetMinutesPlayed@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMinutesPlayed@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetMinutesPlayed, COMDAT

; 841  : 	return BasicLuaMethod(L, &CvGame::getMinutesPlayed);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getMinutesPlayed@CvGame@@QBEHXZ	; CvGame::getMinutesPlayed
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 842  : }

	ret	0
?lGetMinutesPlayed@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetMinutesPlayed
_TEXT	ENDS
PUBLIC	?lGetTargetScore@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetTargetScore
EXTRN	?getTargetScore@CvGame@@QBEHXZ:PROC		; CvGame::getTargetScore
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTargetScore@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTargetScore@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetTargetScore, COMDAT

; 847  : 	return BasicLuaMethod(L, &CvGame::getTargetScore);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getTargetScore@CvGame@@QBEHXZ		; CvGame::getTargetScore
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 848  : }

	ret	0
?lGetTargetScore@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetTargetScore
_TEXT	ENDS
PUBLIC	?lSetTargetScore@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lSetTargetScore
EXTRN	?setTargetScore@CvGame@@QAEXH@Z:PROC		; CvGame::setTargetScore
; Function compile flags: /Ogtpy
;	COMDAT ?lSetTargetScore@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetTargetScore@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lSetTargetScore, COMDAT

; 853  : 	return BasicLuaMethod(L, &CvGame::setTargetScore);

	mov	eax, DWORD PTR _L$[esp-4]
	push	esi
	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	1
	push	eax
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	?setTargetScore@CvGame@@QAEXH@Z		; CvGame::setTargetScore
	xor	eax, eax
	pop	esi

; 854  : }

	ret	0
?lSetTargetScore@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lSetTargetScore
_TEXT	ENDS
PUBLIC	?lIsStaticTutorialActive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsStaticTutorialActive
EXTRN	?IsStaticTutorialActive@CvGame@@QBE_NXZ:PROC	; CvGame::IsStaticTutorialActive
; Function compile flags: /Ogtpy
;	COMDAT ?lIsStaticTutorialActive@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsStaticTutorialActive@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lIsStaticTutorialActive, COMDAT

; 858  : 	return BasicLuaMethod(L, &CvGame::IsStaticTutorialActive);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?IsStaticTutorialActive@CvGame@@QBE_NXZ	; CvGame::IsStaticTutorialActive
	mov	ecx, DWORD PTR _L$[esp-4]
	movzx	eax, al
	push	eax
	push	ecx
	call	_lua_pushboolean
	add	esp, 8
	mov	eax, 1

; 859  : }

	ret	0
?lIsStaticTutorialActive@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lIsStaticTutorialActive
_TEXT	ENDS
PUBLIC	?lSetStaticTutorialActive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetStaticTutorialActive
EXTRN	?SetStaticTutorialActive@CvGame@@QAEX_N@Z:PROC	; CvGame::SetStaticTutorialActive
; Function compile flags: /Ogtpy
;	COMDAT ?lSetStaticTutorialActive@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetStaticTutorialActive@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lSetStaticTutorialActive, COMDAT

; 863  : 	return BasicLuaMethod(L, &CvGame::SetStaticTutorialActive);

	mov	eax, DWORD PTR _L$[esp-4]
	push	esi
	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	1
	push	eax
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	cl
	movzx	edx, cl
	push	edx
	mov	ecx, esi
	call	?SetStaticTutorialActive@CvGame@@QAEX_N@Z ; CvGame::SetStaticTutorialActive
	xor	eax, eax
	pop	esi

; 864  : }

	ret	0
?lSetStaticTutorialActive@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lSetStaticTutorialActive
_TEXT	ENDS
PUBLIC	?lIsEverRightClickMoved@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsEverRightClickMoved
EXTRN	?IsEverRightClickMoved@CvGame@@QBE_NXZ:PROC	; CvGame::IsEverRightClickMoved
; Function compile flags: /Ogtpy
;	COMDAT ?lIsEverRightClickMoved@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsEverRightClickMoved@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lIsEverRightClickMoved, COMDAT

; 868  : 	return BasicLuaMethod(L, &CvGame::IsEverRightClickMoved);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?IsEverRightClickMoved@CvGame@@QBE_NXZ	; CvGame::IsEverRightClickMoved
	mov	ecx, DWORD PTR _L$[esp-4]
	movzx	eax, al
	push	eax
	push	ecx
	call	_lua_pushboolean
	add	esp, 8
	mov	eax, 1

; 869  : }

	ret	0
?lIsEverRightClickMoved@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lIsEverRightClickMoved
_TEXT	ENDS
PUBLIC	?lSetEverRightClickMoved@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetEverRightClickMoved
EXTRN	?SetEverRightClickMoved@CvGame@@QAEX_N@Z:PROC	; CvGame::SetEverRightClickMoved
; Function compile flags: /Ogtpy
;	COMDAT ?lSetEverRightClickMoved@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetEverRightClickMoved@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lSetEverRightClickMoved, COMDAT

; 873  : 	return BasicLuaMethod(L, &CvGame::SetEverRightClickMoved);

	mov	eax, DWORD PTR _L$[esp-4]
	push	esi
	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	1
	push	eax
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	cl
	movzx	edx, cl
	push	edx
	mov	ecx, esi
	call	?SetEverRightClickMoved@CvGame@@QAEX_N@Z ; CvGame::SetEverRightClickMoved
	xor	eax, eax
	pop	esi

; 874  : }

	ret	0
?lSetEverRightClickMoved@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lSetEverRightClickMoved
_TEXT	ENDS
PUBLIC	?lGetNumGameTurnActive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumGameTurnActive
EXTRN	?getNumGameTurnActive@CvGame@@QAEHXZ:PROC	; CvGame::getNumGameTurnActive
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumGameTurnActive@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumGameTurnActive@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetNumGameTurnActive, COMDAT

; 936  : 	return BasicLuaMethod(L, &CvGame::getNumGameTurnActive);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getNumGameTurnActive@CvGame@@QAEHXZ	; CvGame::getNumGameTurnActive
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 937  : }

	ret	0
?lGetNumGameTurnActive@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetNumGameTurnActive
_TEXT	ENDS
PUBLIC	?lCountNumHumanGameTurnActive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCountNumHumanGameTurnActive
EXTRN	?countNumHumanGameTurnActive@CvGame@@QAEHXZ:PROC ; CvGame::countNumHumanGameTurnActive
; Function compile flags: /Ogtpy
;	COMDAT ?lCountNumHumanGameTurnActive@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCountNumHumanGameTurnActive@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lCountNumHumanGameTurnActive, COMDAT

; 942  : 	return BasicLuaMethod(L, &CvGame::countNumHumanGameTurnActive);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?countNumHumanGameTurnActive@CvGame@@QAEHXZ ; CvGame::countNumHumanGameTurnActive
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 943  : }

	ret	0
?lCountNumHumanGameTurnActive@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lCountNumHumanGameTurnActive
_TEXT	ENDS
PUBLIC	?lGetNumCities@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetNumCities
EXTRN	?getNumCities@CvGame@@QBEHXZ:PROC		; CvGame::getNumCities
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumCities@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumCities@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetNumCities, COMDAT

; 948  : 	return BasicLuaMethod(L, &CvGame::getNumCities);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getNumCities@CvGame@@QBEHXZ		; CvGame::getNumCities
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 949  : }

	ret	0
?lGetNumCities@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetNumCities
_TEXT	ENDS
PUBLIC	?lGetNumCivCities@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumCivCities
EXTRN	?getNumCivCities@CvGame@@QBEHXZ:PROC		; CvGame::getNumCivCities
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumCivCities@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumCivCities@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetNumCivCities, COMDAT

; 954  : 	return BasicLuaMethod(L, &CvGame::getNumCivCities);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getNumCivCities@CvGame@@QBEHXZ		; CvGame::getNumCivCities
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 955  : }

	ret	0
?lGetNumCivCities@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetNumCivCities
_TEXT	ENDS
PUBLIC	?lGetTotalPopulation@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetTotalPopulation
EXTRN	?getTotalPopulation@CvGame@@QBEHXZ:PROC		; CvGame::getTotalPopulation
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTotalPopulation@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTotalPopulation@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetTotalPopulation, COMDAT

; 960  : 	return BasicLuaMethod(L, &CvGame::getTotalPopulation);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getTotalPopulation@CvGame@@QBEHXZ	; CvGame::getTotalPopulation
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 961  : }

	ret	0
?lGetTotalPopulation@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetTotalPopulation
_TEXT	ENDS
PUBLIC	?lGetNoNukesCount@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNoNukesCount
EXTRN	?getNoNukesCount@CvGame@@QBEHXZ:PROC		; CvGame::getNoNukesCount
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNoNukesCount@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNoNukesCount@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetNoNukesCount, COMDAT

; 966  : 	return BasicLuaMethod(L, &CvGame::getNoNukesCount);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getNoNukesCount@CvGame@@QBEHXZ		; CvGame::getNoNukesCount
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 967  : }

	ret	0
?lGetNoNukesCount@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetNoNukesCount
_TEXT	ENDS
PUBLIC	?lIsNoNukes@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lIsNoNukes
EXTRN	?isNoNukes@CvGame@@QBE_NXZ:PROC			; CvGame::isNoNukes
; Function compile flags: /Ogtpy
;	COMDAT ?lIsNoNukes@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsNoNukes@CvLuaGame@@KAHPAUlua_State@@@Z PROC		; CvLuaGame::lIsNoNukes, COMDAT

; 972  : 	return BasicLuaMethod(L, &CvGame::isNoNukes);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?isNoNukes@CvGame@@QBE_NXZ		; CvGame::isNoNukes
	mov	ecx, DWORD PTR _L$[esp-4]
	movzx	eax, al
	push	eax
	push	ecx
	call	_lua_pushboolean
	add	esp, 8
	mov	eax, 1

; 973  : }

	ret	0
?lIsNoNukes@CvLuaGame@@KAHPAUlua_State@@@Z ENDP		; CvLuaGame::lIsNoNukes
_TEXT	ENDS
PUBLIC	?lGetNukesExploded@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNukesExploded
EXTRN	?getNukesExploded@CvGame@@QBEHXZ:PROC		; CvGame::getNukesExploded
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNukesExploded@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNukesExploded@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetNukesExploded, COMDAT

; 986  : 	return BasicLuaMethod(L, &CvGame::getNukesExploded);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getNukesExploded@CvGame@@QBEHXZ	; CvGame::getNukesExploded
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 987  : }

	ret	0
?lGetNukesExploded@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetNukesExploded
_TEXT	ENDS
PUBLIC	?lGetMaxPopulation@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetMaxPopulation
EXTRN	?getMaxPopulation@CvGame@@QBEHXZ:PROC		; CvGame::getMaxPopulation
; Function compile flags: /Ogtpy
;	COMDAT ?lGetMaxPopulation@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMaxPopulation@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetMaxPopulation, COMDAT

; 1000 : 	return BasicLuaMethod(L, &CvGame::getMaxPopulation);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getMaxPopulation@CvGame@@QBEHXZ	; CvGame::getMaxPopulation
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 1001 : }

	ret	0
?lGetMaxPopulation@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetMaxPopulation
_TEXT	ENDS
PUBLIC	?lGetInitPopulation@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetInitPopulation
EXTRN	?getInitPopulation@CvGame@@QBEHXZ:PROC		; CvGame::getInitPopulation
; Function compile flags: /Ogtpy
;	COMDAT ?lGetInitPopulation@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetInitPopulation@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetInitPopulation, COMDAT

; 1006 : 	return BasicLuaMethod(L, &CvGame::getInitPopulation);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getInitPopulation@CvGame@@QBEHXZ	; CvGame::getInitPopulation
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 1007 : }

	ret	0
?lGetInitPopulation@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetInitPopulation
_TEXT	ENDS
PUBLIC	?lGetInitLand@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetInitLand
EXTRN	?getInitLand@CvGame@@QBEHXZ:PROC		; CvGame::getInitLand
; Function compile flags: /Ogtpy
;	COMDAT ?lGetInitLand@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetInitLand@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetInitLand, COMDAT

; 1012 : 	return BasicLuaMethod(L, &CvGame::getInitLand);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getInitLand@CvGame@@QBEHXZ		; CvGame::getInitLand
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 1013 : }

	ret	0
?lGetInitLand@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetInitLand
_TEXT	ENDS
PUBLIC	?lGetInitTech@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetInitTech
EXTRN	?getInitTech@CvGame@@QBEHXZ:PROC		; CvGame::getInitTech
; Function compile flags: /Ogtpy
;	COMDAT ?lGetInitTech@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetInitTech@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetInitTech, COMDAT

; 1018 : 	return BasicLuaMethod(L, &CvGame::getInitTech);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getInitTech@CvGame@@QBEHXZ		; CvGame::getInitTech
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 1019 : }

	ret	0
?lGetInitTech@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetInitTech
_TEXT	ENDS
PUBLIC	?lGetInitWonders@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetInitWonders
EXTRN	?getInitWonders@CvGame@@QBEHXZ:PROC		; CvGame::getInitWonders
; Function compile flags: /Ogtpy
;	COMDAT ?lGetInitWonders@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetInitWonders@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetInitWonders, COMDAT

; 1024 : 	return BasicLuaMethod(L, &CvGame::getInitWonders);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getInitWonders@CvGame@@QBEHXZ		; CvGame::getInitWonders
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 1025 : }

	ret	0
?lGetInitWonders@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetInitWonders
_TEXT	ENDS
PUBLIC	?lGetAIAutoPlay@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetAIAutoPlay
EXTRN	?getAIAutoPlay@CvGame@@QAEHXZ:PROC		; CvGame::getAIAutoPlay
; Function compile flags: /Ogtpy
;	COMDAT ?lGetAIAutoPlay@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetAIAutoPlay@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetAIAutoPlay, COMDAT

; 1065 : 	return BasicLuaMethod(L, &CvGame::getAIAutoPlay);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getAIAutoPlay@CvGame@@QAEHXZ		; CvGame::getAIAutoPlay
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 1066 : }

	ret	0
?lGetAIAutoPlay@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetAIAutoPlay
_TEXT	ENDS
PUBLIC	?lSetAIAutoPlay@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lSetAIAutoPlay
EXTRN	?setAIAutoPlay@CvGame@@QAEXHW4PlayerTypes@@@Z:PROC ; CvGame::setAIAutoPlay
; Function compile flags: /Ogtpy
;	COMDAT ?lSetAIAutoPlay@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetAIAutoPlay@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lSetAIAutoPlay, COMDAT

; 1070 : {

	push	esi

; 1071 : 	return BasicLuaMethod(L, &CvGame::setAIAutoPlay);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	mov	edi, DWORD PTR _L$[esp+4]
	push	2
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	?setAIAutoPlay@CvGame@@QAEXHW4PlayerTypes@@@Z ; CvGame::setAIAutoPlay
	pop	edi
	xor	eax, eax
	pop	esi

; 1072 : }

	ret	0
?lSetAIAutoPlay@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lSetAIAutoPlay
_TEXT	ENDS
PUBLIC	?lIsScoreDirty@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lIsScoreDirty
EXTRN	?isScoreDirty@CvGame@@QBE_NXZ:PROC		; CvGame::isScoreDirty
; Function compile flags: /Ogtpy
;	COMDAT ?lIsScoreDirty@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsScoreDirty@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lIsScoreDirty, COMDAT

; 1077 : 	return BasicLuaMethod(L, &CvGame::isScoreDirty);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?isScoreDirty@CvGame@@QBE_NXZ		; CvGame::isScoreDirty
	mov	ecx, DWORD PTR _L$[esp-4]
	movzx	eax, al
	push	eax
	push	ecx
	call	_lua_pushboolean
	add	esp, 8
	mov	eax, 1

; 1078 : }

	ret	0
?lIsScoreDirty@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lIsScoreDirty
_TEXT	ENDS
PUBLIC	?lSetScoreDirty@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lSetScoreDirty
EXTRN	?setScoreDirty@CvGame@@QAEX_N@Z:PROC		; CvGame::setScoreDirty
; Function compile flags: /Ogtpy
;	COMDAT ?lSetScoreDirty@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetScoreDirty@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lSetScoreDirty, COMDAT

; 1083 : 	return BasicLuaMethod(L, &CvGame::setScoreDirty);

	mov	eax, DWORD PTR _L$[esp-4]
	push	esi
	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	1
	push	eax
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	cl
	movzx	edx, cl
	push	edx
	mov	ecx, esi
	call	?setScoreDirty@CvGame@@QAEX_N@Z		; CvGame::setScoreDirty
	xor	eax, eax
	pop	esi

; 1084 : }

	ret	0
?lSetScoreDirty@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lSetScoreDirty
_TEXT	ENDS
PUBLIC	?lIsCircumnavigated@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsCircumnavigated
EXTRN	?isCircumnavigated@CvGame@@QBE_NXZ:PROC		; CvGame::isCircumnavigated
; Function compile flags: /Ogtpy
;	COMDAT ?lIsCircumnavigated@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsCircumnavigated@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lIsCircumnavigated, COMDAT

; 1089 : 	return BasicLuaMethod(L, &CvGame::isCircumnavigated);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?isCircumnavigated@CvGame@@QBE_NXZ	; CvGame::isCircumnavigated
	mov	ecx, DWORD PTR _L$[esp-4]
	movzx	eax, al
	push	eax
	push	ecx
	call	_lua_pushboolean
	add	esp, 8
	mov	eax, 1

; 1090 : }

	ret	0
?lIsCircumnavigated@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lIsCircumnavigated
_TEXT	ENDS
PUBLIC	?lMakeCircumnavigated@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lMakeCircumnavigated
EXTRN	?makeCircumnavigated@CvGame@@QAEXXZ:PROC	; CvGame::makeCircumnavigated
; Function compile flags: /Ogtpy
;	COMDAT ?lMakeCircumnavigated@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lMakeCircumnavigated@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lMakeCircumnavigated, COMDAT

; 1095 : 	return BasicLuaMethod(L, &CvGame::makeCircumnavigated);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?makeCircumnavigated@CvGame@@QAEXXZ	; CvGame::makeCircumnavigated
	xor	eax, eax

; 1096 : }

	ret	0
?lMakeCircumnavigated@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lMakeCircumnavigated
_TEXT	ENDS
PUBLIC	?lDoFromUIDiploEvent@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lDoFromUIDiploEvent
EXTRN	?DoFromUIDiploEvent@CvGame@@QAEXW4FromUIDiploEventTypes@@W4PlayerTypes@@HH@Z:PROC ; CvGame::DoFromUIDiploEvent
; Function compile flags: /Ogtpy
;	COMDAT ?lDoFromUIDiploEvent@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lDoFromUIDiploEvent@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lDoFromUIDiploEvent, COMDAT

; 1100 : {

	push	ebx
	push	ebp
	push	esi

; 1101 : 	return BasicLuaMethod(L, &CvGame::DoFromUIDiploEvent);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	mov	edi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	4
	push	esi
	call	_lua_tointeger
	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	push	2
	push	esi
	mov	ebp, eax
	call	_lua_tointeger
	add	esp, 24					; 00000018H
	push	ebx
	push	ebp
	push	eax
	push	1
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	?DoFromUIDiploEvent@CvGame@@QAEXW4FromUIDiploEventTypes@@W4PlayerTypes@@HH@Z ; CvGame::DoFromUIDiploEvent
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx

; 1102 : }

	ret	0
?lDoFromUIDiploEvent@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lDoFromUIDiploEvent
_TEXT	ENDS
PUBLIC	?lIsDebugMode@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lIsDebugMode
EXTRN	?isDebugMode@CvGame@@QBE_NXZ:PROC		; CvGame::isDebugMode
; Function compile flags: /Ogtpy
;	COMDAT ?lIsDebugMode@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsDebugMode@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lIsDebugMode, COMDAT

; 1107 : 	return BasicLuaMethod(L, &CvGame::isDebugMode);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?isDebugMode@CvGame@@QBE_NXZ		; CvGame::isDebugMode
	mov	ecx, DWORD PTR _L$[esp-4]
	movzx	eax, al
	push	eax
	push	ecx
	call	_lua_pushboolean
	add	esp, 8
	mov	eax, 1

; 1108 : }

	ret	0
?lIsDebugMode@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lIsDebugMode
_TEXT	ENDS
PUBLIC	?lSetDebugMode@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lSetDebugMode
EXTRN	?setDebugMode@CvGame@@QAEX_N@Z:PROC		; CvGame::setDebugMode
; Function compile flags: /Ogtpy
;	COMDAT ?lSetDebugMode@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetDebugMode@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lSetDebugMode, COMDAT

; 1113 : 	return BasicLuaMethod(L, &CvGame::setDebugMode);

	mov	eax, DWORD PTR _L$[esp-4]
	push	esi
	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	1
	push	eax
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	cl
	movzx	edx, cl
	push	edx
	mov	ecx, esi
	call	?setDebugMode@CvGame@@QAEX_N@Z		; CvGame::setDebugMode
	xor	eax, eax
	pop	esi

; 1114 : }

	ret	0
?lSetDebugMode@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lSetDebugMode
_TEXT	ENDS
PUBLIC	?lToggleDebugMode@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lToggleDebugMode
EXTRN	?toggleDebugMode@CvGame@@QAEXXZ:PROC		; CvGame::toggleDebugMode
; Function compile flags: /Ogtpy
;	COMDAT ?lToggleDebugMode@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lToggleDebugMode@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lToggleDebugMode, COMDAT

; 1119 : 	return BasicLuaMethod(L, &CvGame::toggleDebugMode);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?toggleDebugMode@CvGame@@QAEXXZ		; CvGame::toggleDebugMode
	xor	eax, eax

; 1120 : }

	ret	0
?lToggleDebugMode@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lToggleDebugMode
_TEXT	ENDS
PUBLIC	?lUpdateFOW@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lUpdateFOW
EXTRN	?setFOW@CvGame@@QAEX_N@Z:PROC			; CvGame::setFOW
; Function compile flags: /Ogtpy
;	COMDAT ?lUpdateFOW@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lUpdateFOW@CvLuaGame@@KAHPAUlua_State@@@Z PROC		; CvLuaGame::lUpdateFOW, COMDAT

; 1125 : 	return BasicLuaMethod(L, &CvGame::setFOW);

	mov	eax, DWORD PTR _L$[esp-4]
	push	esi
	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	1
	push	eax
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	cl
	movzx	edx, cl
	push	edx
	mov	ecx, esi
	call	?setFOW@CvGame@@QAEX_N@Z		; CvGame::setFOW
	xor	eax, eax
	pop	esi

; 1126 : }

	ret	0
?lUpdateFOW@CvLuaGame@@KAHPAUlua_State@@@Z ENDP		; CvLuaGame::lUpdateFOW
_TEXT	ENDS
PUBLIC	?lGetPitbossTurnTime@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetPitbossTurnTime
EXTRN	?getPitbossTurnTime@CvGame@@QBEHXZ:PROC		; CvGame::getPitbossTurnTime
; Function compile flags: /Ogtpy
;	COMDAT ?lGetPitbossTurnTime@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetPitbossTurnTime@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetPitbossTurnTime, COMDAT

; 1131 : 	return BasicLuaMethod(L, &CvGame::getPitbossTurnTime);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getPitbossTurnTime@CvGame@@QBEHXZ	; CvGame::getPitbossTurnTime
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 1132 : }

	ret	0
?lGetPitbossTurnTime@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetPitbossTurnTime
_TEXT	ENDS
PUBLIC	?lSetPitbossTurnTime@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetPitbossTurnTime
EXTRN	?setPitbossTurnTime@CvGame@@QAEXH@Z:PROC	; CvGame::setPitbossTurnTime
; Function compile flags: /Ogtpy
;	COMDAT ?lSetPitbossTurnTime@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetPitbossTurnTime@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lSetPitbossTurnTime, COMDAT

; 1137 : 	return BasicLuaMethod(L, &CvGame::setPitbossTurnTime);

	mov	eax, DWORD PTR _L$[esp-4]
	push	esi
	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	1
	push	eax
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	?setPitbossTurnTime@CvGame@@QAEXH@Z	; CvGame::setPitbossTurnTime
	xor	eax, eax
	pop	esi

; 1138 : }

	ret	0
?lSetPitbossTurnTime@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lSetPitbossTurnTime
_TEXT	ENDS
PUBLIC	?lIsHotSeat@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lIsHotSeat
EXTRN	?isHotSeat@CvGame@@QBE_NXZ:PROC			; CvGame::isHotSeat
; Function compile flags: /Ogtpy
;	COMDAT ?lIsHotSeat@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsHotSeat@CvLuaGame@@KAHPAUlua_State@@@Z PROC		; CvLuaGame::lIsHotSeat, COMDAT

; 1143 : 	return BasicLuaMethod(L, &CvGame::isHotSeat);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?isHotSeat@CvGame@@QBE_NXZ		; CvGame::isHotSeat
	mov	ecx, DWORD PTR _L$[esp-4]
	movzx	eax, al
	push	eax
	push	ecx
	call	_lua_pushboolean
	add	esp, 8
	mov	eax, 1

; 1144 : }

	ret	0
?lIsHotSeat@CvLuaGame@@KAHPAUlua_State@@@Z ENDP		; CvLuaGame::lIsHotSeat
_TEXT	ENDS
PUBLIC	?lIsPbem@CvLuaGame@@KAHPAUlua_State@@@Z		; CvLuaGame::lIsPbem
EXTRN	?isPbem@CvGame@@QBE_NXZ:PROC			; CvGame::isPbem
; Function compile flags: /Ogtpy
;	COMDAT ?lIsPbem@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsPbem@CvLuaGame@@KAHPAUlua_State@@@Z PROC		; CvLuaGame::lIsPbem, COMDAT

; 1149 : 	return BasicLuaMethod(L, &CvGame::isPbem);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?isPbem@CvGame@@QBE_NXZ			; CvGame::isPbem
	mov	ecx, DWORD PTR _L$[esp-4]
	movzx	eax, al
	push	eax
	push	ecx
	call	_lua_pushboolean
	add	esp, 8
	mov	eax, 1

; 1150 : }

	ret	0
?lIsPbem@CvLuaGame@@KAHPAUlua_State@@@Z ENDP		; CvLuaGame::lIsPbem
_TEXT	ENDS
PUBLIC	?lIsPitboss@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lIsPitboss
EXTRN	?isPitboss@CvGame@@QBE_NXZ:PROC			; CvGame::isPitboss
; Function compile flags: /Ogtpy
;	COMDAT ?lIsPitboss@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsPitboss@CvLuaGame@@KAHPAUlua_State@@@Z PROC		; CvLuaGame::lIsPitboss, COMDAT

; 1155 : 	return BasicLuaMethod(L, &CvGame::isPitboss);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?isPitboss@CvGame@@QBE_NXZ		; CvGame::isPitboss
	mov	ecx, DWORD PTR _L$[esp-4]
	movzx	eax, al
	push	eax
	push	ecx
	call	_lua_pushboolean
	add	esp, 8
	mov	eax, 1

; 1156 : }

	ret	0
?lIsPitboss@CvLuaGame@@KAHPAUlua_State@@@Z ENDP		; CvLuaGame::lIsPitboss
_TEXT	ENDS
PUBLIC	?lIsSimultaneousTeamTurns@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsSimultaneousTeamTurns
EXTRN	?isSimultaneousTeamTurns@CvGame@@QBE_NXZ:PROC	; CvGame::isSimultaneousTeamTurns
; Function compile flags: /Ogtpy
;	COMDAT ?lIsSimultaneousTeamTurns@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsSimultaneousTeamTurns@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lIsSimultaneousTeamTurns, COMDAT

; 1161 : #ifdef AUI_GAME_BETTER_HYBRID_MODE
; 1162 : 	return BasicLuaMethod(L, &CvGame::isAnySimultaneousTurns);
; 1163 : #else
; 1164 : 	return BasicLuaMethod(L, &CvGame::isSimultaneousTeamTurns);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?isSimultaneousTeamTurns@CvGame@@QBE_NXZ ; CvGame::isSimultaneousTeamTurns
	mov	ecx, DWORD PTR _L$[esp-4]
	movzx	eax, al
	push	eax
	push	ecx
	call	_lua_pushboolean
	add	esp, 8
	mov	eax, 1

; 1165 : #endif
; 1166 : }

	ret	0
?lIsSimultaneousTeamTurns@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lIsSimultaneousTeamTurns
_TEXT	ENDS
PUBLIC	?lIsFinalInitialized@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsFinalInitialized
EXTRN	?isFinalInitialized@CvGame@@QBE_NXZ:PROC	; CvGame::isFinalInitialized
; Function compile flags: /Ogtpy
;	COMDAT ?lIsFinalInitialized@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsFinalInitialized@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lIsFinalInitialized, COMDAT

; 1171 : 	return BasicLuaMethod(L, &CvGame::isFinalInitialized);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?isFinalInitialized@CvGame@@QBE_NXZ	; CvGame::isFinalInitialized
	mov	ecx, DWORD PTR _L$[esp-4]
	movzx	eax, al
	push	eax
	push	ecx
	call	_lua_pushboolean
	add	esp, 8
	mov	eax, 1

; 1172 : }

	ret	0
?lIsFinalInitialized@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lIsFinalInitialized
_TEXT	ENDS
PUBLIC	?lGetActivePlayer@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetActivePlayer
; Function compile flags: /Ogtpy
;	COMDAT ?lGetActivePlayer@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetActivePlayer@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetActivePlayer, COMDAT

; 1177 : 	return BasicLuaMethod(L, &CvGame::getActivePlayer);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 1178 : }

	ret	0
?lGetActivePlayer@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetActivePlayer
_TEXT	ENDS
PUBLIC	?lSetActivePlayer@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetActivePlayer
EXTRN	?setActivePlayer@CvGame@@QAEXW4PlayerTypes@@_N1@Z:PROC ; CvGame::setActivePlayer
; Function compile flags: /Ogtpy
;	COMDAT ?lSetActivePlayer@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetActivePlayer@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lSetActivePlayer, COMDAT

; 1183 : 	return BasicLuaMethod(L, &CvGame::setActivePlayer);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?setActivePlayer@CvGame@@QAEXW4PlayerTypes@@_N1@Z ; CvGame::setActivePlayer
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@_N_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4PlayerTypes@@_N2@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes,bool,bool>
	add	esp, 8

; 1184 : }

	ret	0
?lSetActivePlayer@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lSetActivePlayer
_TEXT	ENDS
PUBLIC	?lGetPausePlayer@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetPausePlayer
EXTRN	?getPausePlayer@CvGame@@QAE?AW4PlayerTypes@@XZ:PROC ; CvGame::getPausePlayer
; Function compile flags: /Ogtpy
;	COMDAT ?lGetPausePlayer@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetPausePlayer@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetPausePlayer, COMDAT

; 1189 : 	return BasicLuaMethod(L, &CvGame::getPausePlayer);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getPausePlayer@CvGame@@QAE?AW4PlayerTypes@@XZ ; CvGame::getPausePlayer
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 1190 : }

	ret	0
?lGetPausePlayer@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetPausePlayer
_TEXT	ENDS
PUBLIC	?lIsPaused@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lIsPaused
EXTRN	?isPaused@CvGame@@QAE_NXZ:PROC			; CvGame::isPaused
; Function compile flags: /Ogtpy
;	COMDAT ?lIsPaused@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsPaused@CvLuaGame@@KAHPAUlua_State@@@Z PROC		; CvLuaGame::lIsPaused, COMDAT

; 1207 : 	return BasicLuaMethod(L, &CvGame::isPaused);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?isPaused@CvGame@@QAE_NXZ		; CvGame::isPaused
	mov	ecx, DWORD PTR _L$[esp-4]
	movzx	eax, al
	push	eax
	push	ecx
	call	_lua_pushboolean
	add	esp, 8
	mov	eax, 1

; 1208 : }

	ret	0
?lIsPaused@CvLuaGame@@KAHPAUlua_State@@@Z ENDP		; CvLuaGame::lIsPaused
_TEXT	ENDS
PUBLIC	?lGetBestLandUnit@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetBestLandUnit
EXTRN	?getBestLandUnit@CvGame@@QAE?AW4UnitTypes@@XZ:PROC ; CvGame::getBestLandUnit
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBestLandUnit@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBestLandUnit@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetBestLandUnit, COMDAT

; 1213 : 	return BasicLuaMethod(L, &CvGame::getBestLandUnit);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getBestLandUnit@CvGame@@QAE?AW4UnitTypes@@XZ ; CvGame::getBestLandUnit
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 1214 : }

	ret	0
?lGetBestLandUnit@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetBestLandUnit
_TEXT	ENDS
PUBLIC	?lGetBestLandUnitCombat@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetBestLandUnitCombat
EXTRN	?getBestLandUnitCombat@CvGame@@QAEHXZ:PROC	; CvGame::getBestLandUnitCombat
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBestLandUnitCombat@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBestLandUnitCombat@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetBestLandUnitCombat, COMDAT

; 1219 : 	return BasicLuaMethod(L, &CvGame::getBestLandUnitCombat);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getBestLandUnitCombat@CvGame@@QAEHXZ	; CvGame::getBestLandUnitCombat
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 1220 : }

	ret	0
?lGetBestLandUnitCombat@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetBestLandUnitCombat
_TEXT	ENDS
PUBLIC	?lGetWinner@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetWinner
EXTRN	?getWinner@CvGame@@QBE?AW4TeamTypes@@XZ:PROC	; CvGame::getWinner
; Function compile flags: /Ogtpy
;	COMDAT ?lGetWinner@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetWinner@CvLuaGame@@KAHPAUlua_State@@@Z PROC		; CvLuaGame::lGetWinner, COMDAT

; 1235 : 	return BasicLuaMethod(L, &CvGame::getWinner);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getWinner@CvGame@@QBE?AW4TeamTypes@@XZ	; CvGame::getWinner
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 1236 : }

	ret	0
?lGetWinner@CvLuaGame@@KAHPAUlua_State@@@Z ENDP		; CvLuaGame::lGetWinner
_TEXT	ENDS
PUBLIC	?lGetVictory@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetVictory
EXTRN	?getVictory@CvGame@@QBE?AW4VictoryTypes@@XZ:PROC ; CvGame::getVictory
; Function compile flags: /Ogtpy
;	COMDAT ?lGetVictory@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetVictory@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetVictory, COMDAT

; 1241 : 	return BasicLuaMethod(L, &CvGame::getVictory);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getVictory@CvGame@@QBE?AW4VictoryTypes@@XZ ; CvGame::getVictory
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 1242 : }

	ret	0
?lGetVictory@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetVictory
_TEXT	ENDS
PUBLIC	?lSetWinner@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lSetWinner
EXTRN	?setWinner@CvGame@@QAEXW4TeamTypes@@W4VictoryTypes@@@Z:PROC ; CvGame::setWinner
; Function compile flags: /Ogtpy
;	COMDAT ?lSetWinner@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetWinner@CvLuaGame@@KAHPAUlua_State@@@Z PROC		; CvLuaGame::lSetWinner, COMDAT

; 1246 : {

	push	esi

; 1247 : 	return BasicLuaMethod(L, &CvGame::setWinner);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	mov	edi, DWORD PTR _L$[esp+4]
	push	2
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	?setWinner@CvGame@@QAEXW4TeamTypes@@W4VictoryTypes@@@Z ; CvGame::setWinner
	pop	edi
	xor	eax, eax
	pop	esi

; 1248 : }

	ret	0
?lSetWinner@CvLuaGame@@KAHPAUlua_State@@@Z ENDP		; CvLuaGame::lSetWinner
_TEXT	ENDS
PUBLIC	?lGetGameState@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetGameState
EXTRN	?getGameState@CvGame@@QAE?AW4GameStateTypes@@XZ:PROC ; CvGame::getGameState
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGameState@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGameState@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetGameState, COMDAT

; 1253 : 	return BasicLuaMethod(L, &CvGame::getGameState);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getGameState@CvGame@@QAE?AW4GameStateTypes@@XZ ; CvGame::getGameState
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 1254 : }

	ret	0
?lGetGameState@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetGameState
_TEXT	ENDS
PUBLIC	?lGetVotesNeededForDiploVictory@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetVotesNeededForDiploVictory
EXTRN	?GetVotesNeededForDiploVictory@CvGame@@QBEHXZ:PROC ; CvGame::GetVotesNeededForDiploVictory
; Function compile flags: /Ogtpy
;	COMDAT ?lGetVotesNeededForDiploVictory@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetVotesNeededForDiploVictory@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetVotesNeededForDiploVictory, COMDAT

; 1269 : 	return BasicLuaMethod(L, &CvGame::GetVotesNeededForDiploVictory);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetVotesNeededForDiploVictory@CvGame@@QBEHXZ ; CvGame::GetVotesNeededForDiploVictory
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 1270 : }

	ret	0
?lGetVotesNeededForDiploVictory@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetVotesNeededForDiploVictory
_TEXT	ENDS
PUBLIC	?lIsUnitedNationsActive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsUnitedNationsActive
EXTRN	?IsUnitedNationsActive@CvGame@@QAE_NXZ:PROC	; CvGame::IsUnitedNationsActive
; Function compile flags: /Ogtpy
;	COMDAT ?lIsUnitedNationsActive@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsUnitedNationsActive@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lIsUnitedNationsActive, COMDAT

; 1275 : 	return BasicLuaMethod(L, &CvGame::IsUnitedNationsActive);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?IsUnitedNationsActive@CvGame@@QAE_NXZ	; CvGame::IsUnitedNationsActive
	mov	ecx, DWORD PTR _L$[esp-4]
	movzx	eax, al
	push	eax
	push	ecx
	call	_lua_pushboolean
	add	esp, 8
	mov	eax, 1

; 1276 : }

	ret	0
?lIsUnitedNationsActive@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lIsUnitedNationsActive
_TEXT	ENDS
PUBLIC	?lGetNumVictoryVotesTallied@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumVictoryVotesTallied
EXTRN	?GetNumVictoryVotesTallied@CvGame@@QBEHXZ:PROC	; CvGame::GetNumVictoryVotesTallied
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumVictoryVotesTallied@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumVictoryVotesTallied@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetNumVictoryVotesTallied, COMDAT

; 1281 : 	return BasicLuaMethod(L, &CvGame::GetNumVictoryVotesTallied);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetNumVictoryVotesTallied@CvGame@@QBEHXZ ; CvGame::GetNumVictoryVotesTallied
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 1282 : }

	ret	0
?lGetNumVictoryVotesTallied@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetNumVictoryVotesTallied
_TEXT	ENDS
PUBLIC	?lGetVoteCast@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetVoteCast
EXTRN	?GetVoteCast@CvGame@@QBE?AW4TeamTypes@@W42@@Z:PROC ; CvGame::GetVoteCast
; Function compile flags: /Ogtpy
;	COMDAT ?lGetVoteCast@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetVoteCast@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetVoteCast, COMDAT

; 1286 : {

	push	esi

; 1287 : 	return BasicLuaMethod(L, &CvGame::GetVoteCast);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	?GetVoteCast@CvGame@@QBE?AW4TeamTypes@@W42@@Z ; CvGame::GetVoteCast
	push	eax
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	mov	eax, 1
	pop	esi

; 1288 : }

	ret	0
?lGetVoteCast@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetVoteCast
_TEXT	ENDS
PUBLIC	?lGetPreviousVoteCast@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetPreviousVoteCast
EXTRN	?GetPreviousVoteCast@CvGame@@QBE?AW4TeamTypes@@W42@@Z:PROC ; CvGame::GetPreviousVoteCast
; Function compile flags: /Ogtpy
;	COMDAT ?lGetPreviousVoteCast@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetPreviousVoteCast@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetPreviousVoteCast, COMDAT

; 1292 : {

	push	esi

; 1293 : 	return BasicLuaMethod(L, &CvGame::GetPreviousVoteCast);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	?GetPreviousVoteCast@CvGame@@QBE?AW4TeamTypes@@W42@@Z ; CvGame::GetPreviousVoteCast
	push	eax
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	mov	eax, 1
	pop	esi

; 1294 : }

	ret	0
?lGetPreviousVoteCast@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetPreviousVoteCast
_TEXT	ENDS
PUBLIC	?lGetNumVotesForTeam@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumVotesForTeam
EXTRN	?GetNumVotesForTeam@CvGame@@QBEHW4TeamTypes@@@Z:PROC ; CvGame::GetNumVotesForTeam
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumVotesForTeam@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumVotesForTeam@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetNumVotesForTeam, COMDAT

; 1298 : {

	push	esi

; 1299 : 	return BasicLuaMethod(L, &CvGame::GetNumVotesForTeam);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	?GetNumVotesForTeam@CvGame@@QBEHW4TeamTypes@@@Z ; CvGame::GetNumVotesForTeam
	push	eax
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	mov	eax, 1
	pop	esi

; 1300 : }

	ret	0
?lGetNumVotesForTeam@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetNumVotesForTeam
_TEXT	ENDS
PUBLIC	?lSetNumVotesForTeam@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetNumVotesForTeam
EXTRN	?SetNumVotesForTeam@CvGame@@QAEXW4TeamTypes@@H@Z:PROC ; CvGame::SetNumVotesForTeam
; Function compile flags: /Ogtpy
;	COMDAT ?lSetNumVotesForTeam@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetNumVotesForTeam@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lSetNumVotesForTeam, COMDAT

; 1304 : {

	push	esi

; 1305 : 	return BasicLuaMethod(L, &CvGame::SetNumVotesForTeam);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	mov	edi, DWORD PTR _L$[esp+4]
	push	2
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	?SetNumVotesForTeam@CvGame@@QAEXW4TeamTypes@@H@Z ; CvGame::SetNumVotesForTeam
	pop	edi
	xor	eax, eax
	pop	esi

; 1306 : }

	ret	0
?lSetNumVotesForTeam@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lSetNumVotesForTeam
_TEXT	ENDS
PUBLIC	?lChangeNumVotesForTeam@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lChangeNumVotesForTeam
EXTRN	?ChangeNumVotesForTeam@CvGame@@QAEXW4TeamTypes@@H@Z:PROC ; CvGame::ChangeNumVotesForTeam
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeNumVotesForTeam@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeNumVotesForTeam@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lChangeNumVotesForTeam, COMDAT

; 1310 : {

	push	esi

; 1311 : 	return BasicLuaMethod(L, &CvGame::ChangeNumVotesForTeam);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	mov	edi, DWORD PTR _L$[esp+4]
	push	2
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	?ChangeNumVotesForTeam@CvGame@@QAEXW4TeamTypes@@H@Z ; CvGame::ChangeNumVotesForTeam
	pop	edi
	xor	eax, eax
	pop	esi

; 1312 : }

	ret	0
?lChangeNumVotesForTeam@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lChangeNumVotesForTeam
_TEXT	ENDS
PUBLIC	?lGetHandicapType@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetHandicapType
EXTRN	?getHandicapType@CvGame@@QBE?AW4HandicapTypes@@XZ:PROC ; CvGame::getHandicapType
; Function compile flags: /Ogtpy
;	COMDAT ?lGetHandicapType@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHandicapType@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetHandicapType, COMDAT

; 1317 : 	return BasicLuaMethod(L, &CvGame::getHandicapType);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getHandicapType@CvGame@@QBE?AW4HandicapTypes@@XZ ; CvGame::getHandicapType
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 1318 : }

	ret	0
?lGetHandicapType@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetHandicapType
_TEXT	ENDS
PUBLIC	?lGetCalendar@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetCalendar
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCalendar@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCalendar@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetCalendar, COMDAT

; 1323 : 	return BasicLuaMethod(L, &CvGame::getCalendar);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getCalendar@CvGame@@QBE?AW4CalendarTypes@@XZ ; CvGame::getCalendar
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 1324 : }

	ret	0
?lGetCalendar@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetCalendar
_TEXT	ENDS
PUBLIC	?lGetStartEra@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetStartEra
EXTRN	?getStartEra@CvGame@@QBE?AW4EraTypes@@XZ:PROC	; CvGame::getStartEra
; Function compile flags: /Ogtpy
;	COMDAT ?lGetStartEra@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetStartEra@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetStartEra, COMDAT

; 1329 : 	return BasicLuaMethod(L, &CvGame::getStartEra);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getStartEra@CvGame@@QBE?AW4EraTypes@@XZ ; CvGame::getStartEra
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 1330 : }

	ret	0
?lGetStartEra@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetStartEra
_TEXT	ENDS
PUBLIC	?lGetGameSpeedType@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGameSpeedType
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGameSpeedType@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGameSpeedType@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetGameSpeedType, COMDAT

; 1335 : 	return BasicLuaMethod(L, &CvGame::getGameSpeedType);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getGameSpeedType@CvGame@@QBE?AW4GameSpeedTypes@@XZ ; CvGame::getGameSpeedType
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 1336 : }

	ret	0
?lGetGameSpeedType@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetGameSpeedType
_TEXT	ENDS
PUBLIC	?lGetRankPlayer@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetRankPlayer
EXTRN	?getRankPlayer@CvGame@@QAE?AW4PlayerTypes@@H@Z:PROC ; CvGame::getRankPlayer
; Function compile flags: /Ogtpy
;	COMDAT ?lGetRankPlayer@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetRankPlayer@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetRankPlayer, COMDAT

; 1340 : {

	push	esi

; 1341 : 	return BasicLuaMethod(L, &CvGame::getRankPlayer);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	?getRankPlayer@CvGame@@QAE?AW4PlayerTypes@@H@Z ; CvGame::getRankPlayer
	push	eax
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	mov	eax, 1
	pop	esi

; 1342 : }

	ret	0
?lGetRankPlayer@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetRankPlayer
_TEXT	ENDS
PUBLIC	?lGetPlayerRank@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetPlayerRank
EXTRN	?getPlayerRank@CvGame@@QAEHW4PlayerTypes@@@Z:PROC ; CvGame::getPlayerRank
; Function compile flags: /Ogtpy
;	COMDAT ?lGetPlayerRank@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetPlayerRank@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetPlayerRank, COMDAT

; 1346 : {

	push	esi

; 1347 : 	return BasicLuaMethod(L, &CvGame::getPlayerRank);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	?getPlayerRank@CvGame@@QAEHW4PlayerTypes@@@Z ; CvGame::getPlayerRank
	push	eax
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	mov	eax, 1
	pop	esi

; 1348 : }

	ret	0
?lGetPlayerRank@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetPlayerRank
_TEXT	ENDS
PUBLIC	?lGetPlayerScore@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetPlayerScore
EXTRN	?getPlayerScore@CvGame@@QAEHW4PlayerTypes@@@Z:PROC ; CvGame::getPlayerScore
; Function compile flags: /Ogtpy
;	COMDAT ?lGetPlayerScore@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetPlayerScore@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetPlayerScore, COMDAT

; 1352 : {

	push	esi

; 1353 : 	return BasicLuaMethod(L, &CvGame::getPlayerScore);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	?getPlayerScore@CvGame@@QAEHW4PlayerTypes@@@Z ; CvGame::getPlayerScore
	push	eax
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	mov	eax, 1
	pop	esi

; 1354 : }

	ret	0
?lGetPlayerScore@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetPlayerScore
_TEXT	ENDS
PUBLIC	?lGetRankTeam@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetRankTeam
EXTRN	?getRankTeam@CvGame@@QAE?AW4TeamTypes@@H@Z:PROC	; CvGame::getRankTeam
; Function compile flags: /Ogtpy
;	COMDAT ?lGetRankTeam@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetRankTeam@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetRankTeam, COMDAT

; 1358 : {

	push	esi

; 1359 : 	return BasicLuaMethod(L, &CvGame::getRankTeam);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	?getRankTeam@CvGame@@QAE?AW4TeamTypes@@H@Z ; CvGame::getRankTeam
	push	eax
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	mov	eax, 1
	pop	esi

; 1360 : }

	ret	0
?lGetRankTeam@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetRankTeam
_TEXT	ENDS
PUBLIC	?lGetTeamRank@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetTeamRank
EXTRN	?getTeamRank@CvGame@@QAEHW4TeamTypes@@@Z:PROC	; CvGame::getTeamRank
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTeamRank@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTeamRank@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetTeamRank, COMDAT

; 1364 : {

	push	esi

; 1365 : 	return BasicLuaMethod(L, &CvGame::getTeamRank);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	?getTeamRank@CvGame@@QAEHW4TeamTypes@@@Z ; CvGame::getTeamRank
	push	eax
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	mov	eax, 1
	pop	esi

; 1366 : }

	ret	0
?lGetTeamRank@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetTeamRank
_TEXT	ENDS
PUBLIC	?lGetTeamScore@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetTeamScore
EXTRN	?getTeamScore@CvGame@@QBEHW4TeamTypes@@@Z:PROC	; CvGame::getTeamScore
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTeamScore@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTeamScore@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetTeamScore, COMDAT

; 1370 : {

	push	esi

; 1371 : 	return BasicLuaMethod(L, &CvGame::getTeamScore);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	?getTeamScore@CvGame@@QBEHW4TeamTypes@@@Z ; CvGame::getTeamScore
	push	eax
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	mov	eax, 1
	pop	esi

; 1372 : }

	ret	0
?lGetTeamScore@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetTeamScore
_TEXT	ENDS
PUBLIC	?lIsMPOption@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lIsMPOption
EXTRN	?isMPOption@CvGame@@QBE_NW4MultiplayerOptionTypes@@@Z:PROC ; CvGame::isMPOption
; Function compile flags: /Ogtpy
;	COMDAT ?lIsMPOption@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsMPOption@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lIsMPOption, COMDAT

; 1404 : {

	push	esi

; 1405 : 	return BasicLuaMethod(L, &CvGame::isMPOption);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	?isMPOption@CvGame@@QBE_NW4MultiplayerOptionTypes@@@Z ; CvGame::isMPOption
	movzx	eax, al
	push	eax
	push	edi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	mov	eax, 1
	pop	esi

; 1406 : }

	ret	0
?lIsMPOption@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lIsMPOption
_TEXT	ENDS
PUBLIC	?lGetUnitCreatedCount@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetUnitCreatedCount
EXTRN	?getUnitCreatedCount@CvGame@@QAEHW4UnitTypes@@@Z:PROC ; CvGame::getUnitCreatedCount
; Function compile flags: /Ogtpy
;	COMDAT ?lGetUnitCreatedCount@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnitCreatedCount@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetUnitCreatedCount, COMDAT

; 1410 : {

	push	esi

; 1411 : 	return BasicLuaMethod(L, &CvGame::getUnitCreatedCount);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	?getUnitCreatedCount@CvGame@@QAEHW4UnitTypes@@@Z ; CvGame::getUnitCreatedCount
	push	eax
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	mov	eax, 1
	pop	esi

; 1412 : }

	ret	0
?lGetUnitCreatedCount@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetUnitCreatedCount
_TEXT	ENDS
PUBLIC	?lGetUnitClassCreatedCount@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetUnitClassCreatedCount
EXTRN	?getUnitClassCreatedCount@CvGame@@QAEHW4UnitClassTypes@@@Z:PROC ; CvGame::getUnitClassCreatedCount
; Function compile flags: /Ogtpy
;	COMDAT ?lGetUnitClassCreatedCount@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnitClassCreatedCount@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetUnitClassCreatedCount, COMDAT

; 1416 : {

	push	esi

; 1417 : 	return BasicLuaMethod(L, &CvGame::getUnitClassCreatedCount);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	?getUnitClassCreatedCount@CvGame@@QAEHW4UnitClassTypes@@@Z ; CvGame::getUnitClassCreatedCount
	push	eax
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	mov	eax, 1
	pop	esi

; 1418 : }

	ret	0
?lGetUnitClassCreatedCount@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetUnitClassCreatedCount
_TEXT	ENDS
PUBLIC	?lIsUnitClassMaxedOut@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsUnitClassMaxedOut
EXTRN	?isUnitClassMaxedOut@CvGame@@QAE_NW4UnitClassTypes@@H@Z:PROC ; CvGame::isUnitClassMaxedOut
; Function compile flags: /Ogtpy
;	COMDAT ?lIsUnitClassMaxedOut@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsUnitClassMaxedOut@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lIsUnitClassMaxedOut, COMDAT

; 1422 : {

	push	ebx
	push	esi

; 1423 : 	return BasicLuaMethod(L, &CvGame::isUnitClassMaxedOut);

	mov	esi, DWORD PTR _L$[esp+4]
	push	edi
	mov	edi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	2
	push	esi
	call	_lua_tointeger
	push	1
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H
	push	ebx
	push	eax
	mov	ecx, edi
	call	?isUnitClassMaxedOut@CvGame@@QAE_NW4UnitClassTypes@@H@Z ; CvGame::isUnitClassMaxedOut
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	mov	eax, 1
	pop	ebx

; 1424 : }

	ret	0
?lIsUnitClassMaxedOut@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lIsUnitClassMaxedOut
_TEXT	ENDS
PUBLIC	?lGetBuildingClassCreatedCount@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetBuildingClassCreatedCount
EXTRN	?getBuildingClassCreatedCount@CvGame@@QAEHW4BuildingClassTypes@@@Z:PROC ; CvGame::getBuildingClassCreatedCount
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBuildingClassCreatedCount@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBuildingClassCreatedCount@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetBuildingClassCreatedCount, COMDAT

; 1428 : {

	push	esi

; 1429 : 	return BasicLuaMethod(L, &CvGame::getBuildingClassCreatedCount);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	?getBuildingClassCreatedCount@CvGame@@QAEHW4BuildingClassTypes@@@Z ; CvGame::getBuildingClassCreatedCount
	push	eax
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	mov	eax, 1
	pop	esi

; 1430 : }

	ret	0
?lGetBuildingClassCreatedCount@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetBuildingClassCreatedCount
_TEXT	ENDS
PUBLIC	?lIsBuildingClassMaxedOut@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsBuildingClassMaxedOut
EXTRN	?isBuildingClassMaxedOut@CvGame@@QAE_NW4BuildingClassTypes@@H@Z:PROC ; CvGame::isBuildingClassMaxedOut
; Function compile flags: /Ogtpy
;	COMDAT ?lIsBuildingClassMaxedOut@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsBuildingClassMaxedOut@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lIsBuildingClassMaxedOut, COMDAT

; 1434 : {

	push	ebx
	push	esi

; 1435 : 	return BasicLuaMethod(L, &CvGame::isBuildingClassMaxedOut);

	mov	esi, DWORD PTR _L$[esp+4]
	push	edi
	mov	edi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	2
	push	esi
	call	_lua_tointeger
	push	1
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H
	push	ebx
	push	eax
	mov	ecx, edi
	call	?isBuildingClassMaxedOut@CvGame@@QAE_NW4BuildingClassTypes@@H@Z ; CvGame::isBuildingClassMaxedOut
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	mov	eax, 1
	pop	ebx

; 1436 : }

	ret	0
?lIsBuildingClassMaxedOut@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lIsBuildingClassMaxedOut
_TEXT	ENDS
PUBLIC	?lGetProjectCreatedCount@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetProjectCreatedCount
EXTRN	?getProjectCreatedCount@CvGame@@QAEHW4ProjectTypes@@@Z:PROC ; CvGame::getProjectCreatedCount
; Function compile flags: /Ogtpy
;	COMDAT ?lGetProjectCreatedCount@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProjectCreatedCount@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetProjectCreatedCount, COMDAT

; 1440 : {

	push	esi

; 1441 : 	return BasicLuaMethod(L, &CvGame::getProjectCreatedCount);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	?getProjectCreatedCount@CvGame@@QAEHW4ProjectTypes@@@Z ; CvGame::getProjectCreatedCount
	push	eax
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	mov	eax, 1
	pop	esi

; 1442 : }

	ret	0
?lGetProjectCreatedCount@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetProjectCreatedCount
_TEXT	ENDS
PUBLIC	?lIsProjectMaxedOut@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsProjectMaxedOut
EXTRN	?isProjectMaxedOut@CvGame@@QAE_NW4ProjectTypes@@H@Z:PROC ; CvGame::isProjectMaxedOut
; Function compile flags: /Ogtpy
;	COMDAT ?lIsProjectMaxedOut@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsProjectMaxedOut@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lIsProjectMaxedOut, COMDAT

; 1446 : {

	push	ebx
	push	esi

; 1447 : 	return BasicLuaMethod(L, &CvGame::isProjectMaxedOut);

	mov	esi, DWORD PTR _L$[esp+4]
	push	edi
	mov	edi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	2
	push	esi
	call	_lua_tointeger
	push	1
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H
	push	ebx
	push	eax
	mov	ecx, edi
	call	?isProjectMaxedOut@CvGame@@QAE_NW4ProjectTypes@@H@Z ; CvGame::isProjectMaxedOut
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	mov	eax, 1
	pop	ebx

; 1448 : }

	ret	0
?lIsProjectMaxedOut@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lIsProjectMaxedOut
_TEXT	ENDS
PUBLIC	?lIsVictoryValid@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lIsVictoryValid
EXTRN	?isVictoryValid@CvGame@@QBE_NW4VictoryTypes@@@Z:PROC ; CvGame::isVictoryValid
; Function compile flags: /Ogtpy
;	COMDAT ?lIsVictoryValid@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsVictoryValid@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lIsVictoryValid, COMDAT

; 1452 : {

	push	esi

; 1453 : 	return BasicLuaMethod(L, &CvGame::isVictoryValid);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	?isVictoryValid@CvGame@@QBE_NW4VictoryTypes@@@Z ; CvGame::isVictoryValid
	movzx	eax, al
	push	eax
	push	edi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	mov	eax, 1
	pop	esi

; 1454 : }

	ret	0
?lIsVictoryValid@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lIsVictoryValid
_TEXT	ENDS
PUBLIC	?lIsSpecialUnitValid@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsSpecialUnitValid
EXTRN	?isSpecialUnitValid@CvGame@@QAE_NW4SpecialUnitTypes@@@Z:PROC ; CvGame::isSpecialUnitValid
; Function compile flags: /Ogtpy
;	COMDAT ?lIsSpecialUnitValid@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsSpecialUnitValid@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lIsSpecialUnitValid, COMDAT

; 1473 : {

	push	esi

; 1474 : 	return BasicLuaMethod(L, &CvGame::isSpecialUnitValid);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	?isSpecialUnitValid@CvGame@@QAE_NW4SpecialUnitTypes@@@Z ; CvGame::isSpecialUnitValid
	movzx	eax, al
	push	eax
	push	edi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	mov	eax, 1
	pop	esi

; 1475 : }

	ret	0
?lIsSpecialUnitValid@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lIsSpecialUnitValid
_TEXT	ENDS
PUBLIC	?lMakeSpecialUnitValid@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lMakeSpecialUnitValid
EXTRN	?makeSpecialUnitValid@CvGame@@QAEXW4SpecialUnitTypes@@@Z:PROC ; CvGame::makeSpecialUnitValid
; Function compile flags: /Ogtpy
;	COMDAT ?lMakeSpecialUnitValid@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lMakeSpecialUnitValid@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lMakeSpecialUnitValid, COMDAT

; 1480 : 	return BasicLuaMethod(L, &CvGame::makeSpecialUnitValid);

	mov	eax, DWORD PTR _L$[esp-4]
	push	esi
	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	1
	push	eax
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	?makeSpecialUnitValid@CvGame@@QAEXW4SpecialUnitTypes@@@Z ; CvGame::makeSpecialUnitValid
	xor	eax, eax
	pop	esi

; 1481 : }

	ret	0
?lMakeSpecialUnitValid@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lMakeSpecialUnitValid
_TEXT	ENDS
PUBLIC	?lIsNukesValid@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lIsNukesValid
EXTRN	?isNukesValid@CvGame@@QBE_NXZ:PROC		; CvGame::isNukesValid
; Function compile flags: /Ogtpy
;	COMDAT ?lIsNukesValid@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsNukesValid@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lIsNukesValid, COMDAT

; 1486 : 	return BasicLuaMethod(L, &CvGame::isNukesValid);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?isNukesValid@CvGame@@QBE_NXZ		; CvGame::isNukesValid
	mov	ecx, DWORD PTR _L$[esp-4]
	movzx	eax, al
	push	eax
	push	ecx
	call	_lua_pushboolean
	add	esp, 8
	mov	eax, 1

; 1487 : }

	ret	0
?lIsNukesValid@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lIsNukesValid
_TEXT	ENDS
PUBLIC	?lMakeNukesValid@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lMakeNukesValid
EXTRN	?makeNukesValid@CvGame@@QAEX_N@Z:PROC		; CvGame::makeNukesValid
; Function compile flags: /Ogtpy
;	COMDAT ?lMakeNukesValid@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lMakeNukesValid@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lMakeNukesValid, COMDAT

; 1492 : 	return BasicLuaMethod(L, &CvGame::makeNukesValid);

	mov	eax, DWORD PTR _L$[esp-4]
	push	esi
	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	1
	push	eax
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	cl
	movzx	edx, cl
	push	edx
	mov	ecx, esi
	call	?makeNukesValid@CvGame@@QAEX_N@Z	; CvGame::makeNukesValid
	xor	eax, eax
	pop	esi

; 1493 : }

	ret	0
?lMakeNukesValid@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lMakeNukesValid
_TEXT	ENDS
PUBLIC	?lIsInAdvancedStart@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsInAdvancedStart
EXTRN	?isInAdvancedStart@CvGame@@QBE_NXZ:PROC		; CvGame::isInAdvancedStart
; Function compile flags: /Ogtpy
;	COMDAT ?lIsInAdvancedStart@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsInAdvancedStart@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lIsInAdvancedStart, COMDAT

; 1498 : 	return BasicLuaMethod(L, &CvGame::isInAdvancedStart);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?isInAdvancedStart@CvGame@@QBE_NXZ	; CvGame::isInAdvancedStart
	mov	ecx, DWORD PTR _L$[esp-4]
	movzx	eax, al
	push	eax
	push	ecx
	call	_lua_pushboolean
	add	esp, 8
	mov	eax, 1

; 1499 : }

	ret	0
?lIsInAdvancedStart@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lIsInAdvancedStart
_TEXT	ENDS
PUBLIC	?lSetName@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lSetName
EXTRN	?setName@CvGame@@QAEXPBD@Z:PROC			; CvGame::setName
; Function compile flags: /Ogtpy
;	COMDAT ?lSetName@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetName@CvLuaGame@@KAHPAUlua_State@@@Z PROC		; CvLuaGame::lSetName, COMDAT

; 1504 : 	return BasicLuaMethod(L, &CvGame::setName);

	mov	eax, DWORD PTR _L$[esp-4]
	push	esi
	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	1
	push	eax
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	?setName@CvGame@@QAEXPBD@Z		; CvGame::setName
	xor	eax, eax
	pop	esi

; 1505 : }

	ret	0
?lSetName@CvLuaGame@@KAHPAUlua_State@@@Z ENDP		; CvLuaGame::lSetName
_TEXT	ENDS
PUBLIC	?lCalculateSyncChecksum@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCalculateSyncChecksum
EXTRN	?calculateSyncChecksum@CvGame@@QAEHXZ:PROC	; CvGame::calculateSyncChecksum
; Function compile flags: /Ogtpy
;	COMDAT ?lCalculateSyncChecksum@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCalculateSyncChecksum@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lCalculateSyncChecksum, COMDAT

; 1528 : 	return BasicLuaMethod(L, &CvGame::calculateSyncChecksum);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?calculateSyncChecksum@CvGame@@QAEHXZ	; CvGame::calculateSyncChecksum
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 1529 : }

	ret	0
?lCalculateSyncChecksum@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lCalculateSyncChecksum
_TEXT	ENDS
PUBLIC	?lCalculateOptionsChecksum@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCalculateOptionsChecksum
EXTRN	?calculateOptionsChecksum@CvGame@@QAEHXZ:PROC	; CvGame::calculateOptionsChecksum
; Function compile flags: /Ogtpy
;	COMDAT ?lCalculateOptionsChecksum@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCalculateOptionsChecksum@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lCalculateOptionsChecksum, COMDAT

; 1534 : 	return BasicLuaMethod(L, &CvGame::calculateOptionsChecksum);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?calculateOptionsChecksum@CvGame@@QAEHXZ ; CvGame::calculateOptionsChecksum
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 1535 : }

	ret	0
?lCalculateOptionsChecksum@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lCalculateOptionsChecksum
_TEXT	ENDS
PUBLIC	?lGetNumReplayMessages@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumReplayMessages
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumReplayMessages@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumReplayMessages@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetNumReplayMessages, COMDAT

; 1661 : 	return BasicLuaMethod(L, &CvGame::getNumReplayMessages);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getNumReplayMessages@CvGame@@QBEIXZ	; CvGame::getNumReplayMessages
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 1662 : }

	ret	0
?lGetNumReplayMessages@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetNumReplayMessages
_TEXT	ENDS
PUBLIC	?lSaveReplay@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lSaveReplay
EXTRN	?saveReplay@CvGame@@QAEXXZ:PROC			; CvGame::saveReplay
; Function compile flags: /Ogtpy
;	COMDAT ?lSaveReplay@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSaveReplay@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lSaveReplay, COMDAT

; 1674 : 	return BasicLuaMethod(L, &CvGame::saveReplay);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?saveReplay@CvGame@@QAEXXZ		; CvGame::saveReplay
	xor	eax, eax

; 1675 : }

	ret	0
?lSaveReplay@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lSaveReplay
_TEXT	ENDS
PUBLIC	?lAddPlayer@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lAddPlayer
EXTRN	?addPlayer@CvGame@@QAEXW4PlayerTypes@@W4LeaderHeadTypes@@W4CivilizationTypes@@@Z:PROC ; CvGame::addPlayer
; Function compile flags: /Ogtpy
;	COMDAT ?lAddPlayer@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lAddPlayer@CvLuaGame@@KAHPAUlua_State@@@Z PROC		; CvLuaGame::lAddPlayer, COMDAT

; 1679 : {

	push	ebx
	push	esi

; 1680 : 	return BasicLuaMethod(L, &CvGame::addPlayer);

	mov	esi, DWORD PTR _L$[esp+4]
	push	edi
	mov	edi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	3
	push	esi
	call	_lua_tointeger
	push	2
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H
	push	ebx
	push	eax
	push	1
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	?addPlayer@CvGame@@QAEXW4PlayerTypes@@W4LeaderHeadTypes@@W4CivilizationTypes@@@Z ; CvGame::addPlayer
	pop	edi
	pop	esi
	xor	eax, eax
	pop	ebx

; 1681 : }

	ret	0
?lAddPlayer@CvLuaGame@@KAHPAUlua_State@@@Z ENDP		; CvLuaGame::lAddPlayer
_TEXT	ENDS
PUBLIC	?lSetPlotExtraYield@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetPlotExtraYield
EXTRN	?setPlotExtraYield@CvGame@@QAEXHHW4YieldTypes@@H@Z:PROC ; CvGame::setPlotExtraYield
; Function compile flags: /Ogtpy
;	COMDAT ?lSetPlotExtraYield@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetPlotExtraYield@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lSetPlotExtraYield, COMDAT

; 1685 : {

	push	ebx
	push	ebp
	push	esi

; 1686 : 	return BasicLuaMethod(L, &CvGame::setPlotExtraYield);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	mov	edi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	4
	push	esi
	call	_lua_tointeger
	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	push	2
	push	esi
	mov	ebp, eax
	call	_lua_tointeger
	add	esp, 24					; 00000018H
	push	ebx
	push	ebp
	push	eax
	push	1
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	?setPlotExtraYield@CvGame@@QAEXHHW4YieldTypes@@H@Z ; CvGame::setPlotExtraYield
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx

; 1687 : }

	ret	0
?lSetPlotExtraYield@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lSetPlotExtraYield
_TEXT	ENDS
PUBLIC	?lChangePlotExtraCost@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lChangePlotExtraCost
EXTRN	?changePlotExtraCost@CvGame@@QAEXHHH@Z:PROC	; CvGame::changePlotExtraCost
; Function compile flags: /Ogtpy
;	COMDAT ?lChangePlotExtraCost@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangePlotExtraCost@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lChangePlotExtraCost, COMDAT

; 1691 : {

	push	ebx
	push	esi

; 1692 : 	return BasicLuaMethod(L, &CvGame::changePlotExtraCost);

	mov	esi, DWORD PTR _L$[esp+4]
	push	edi
	mov	edi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	3
	push	esi
	call	_lua_tointeger
	push	2
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H
	push	ebx
	push	eax
	push	1
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	?changePlotExtraCost@CvGame@@QAEXHHH@Z	; CvGame::changePlotExtraCost
	pop	edi
	pop	esi
	xor	eax, eax
	pop	ebx

; 1693 : }

	ret	0
?lChangePlotExtraCost@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lChangePlotExtraCost
_TEXT	ENDS
PUBLIC	?lIsCivEverActive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsCivEverActive
EXTRN	?isCivEverActive@CvGame@@QBE_NW4CivilizationTypes@@@Z:PROC ; CvGame::isCivEverActive
; Function compile flags: /Ogtpy
;	COMDAT ?lIsCivEverActive@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsCivEverActive@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lIsCivEverActive, COMDAT

; 1697 : {

	push	esi

; 1698 : 	return BasicLuaMethod(L, &CvGame::isCivEverActive);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	?isCivEverActive@CvGame@@QBE_NW4CivilizationTypes@@@Z ; CvGame::isCivEverActive
	movzx	eax, al
	push	eax
	push	edi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	mov	eax, 1
	pop	esi

; 1699 : }

	ret	0
?lIsCivEverActive@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lIsCivEverActive
_TEXT	ENDS
PUBLIC	?lIsLeaderEverActive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsLeaderEverActive
EXTRN	?isLeaderEverActive@CvGame@@QBE_NW4LeaderHeadTypes@@@Z:PROC ; CvGame::isLeaderEverActive
; Function compile flags: /Ogtpy
;	COMDAT ?lIsLeaderEverActive@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsLeaderEverActive@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lIsLeaderEverActive, COMDAT

; 1703 : {

	push	esi

; 1704 : 	return BasicLuaMethod(L, &CvGame::isLeaderEverActive);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	?isLeaderEverActive@CvGame@@QBE_NW4LeaderHeadTypes@@@Z ; CvGame::isLeaderEverActive
	movzx	eax, al
	push	eax
	push	edi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	mov	eax, 1
	pop	esi

; 1705 : }

	ret	0
?lIsLeaderEverActive@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lIsLeaderEverActive
_TEXT	ENDS
PUBLIC	?lIsUnitEverActive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsUnitEverActive
EXTRN	?isUnitEverActive@CvGame@@QBE_NW4UnitTypes@@@Z:PROC ; CvGame::isUnitEverActive
; Function compile flags: /Ogtpy
;	COMDAT ?lIsUnitEverActive@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsUnitEverActive@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lIsUnitEverActive, COMDAT

; 1709 : {

	push	esi

; 1710 : 	return BasicLuaMethod(L, &CvGame::isUnitEverActive);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	?isUnitEverActive@CvGame@@QBE_NW4UnitTypes@@@Z ; CvGame::isUnitEverActive
	movzx	eax, al
	push	eax
	push	edi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	mov	eax, 1
	pop	esi

; 1711 : }

	ret	0
?lIsUnitEverActive@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lIsUnitEverActive
_TEXT	ENDS
PUBLIC	?lIsBuildingEverActive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsBuildingEverActive
EXTRN	?isBuildingEverActive@CvGame@@QBE_NW4BuildingTypes@@@Z:PROC ; CvGame::isBuildingEverActive
; Function compile flags: /Ogtpy
;	COMDAT ?lIsBuildingEverActive@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsBuildingEverActive@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lIsBuildingEverActive, COMDAT

; 1715 : {

	push	esi

; 1716 : 	return BasicLuaMethod(L, &CvGame::isBuildingEverActive);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	?isBuildingEverActive@CvGame@@QBE_NW4BuildingTypes@@@Z ; CvGame::isBuildingEverActive
	movzx	eax, al
	push	eax
	push	edi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	mov	eax, 1
	pop	esi

; 1717 : }

	ret	0
?lIsBuildingEverActive@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lIsBuildingEverActive
_TEXT	ENDS
PUBLIC	?lCanDoControl@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lCanDoControl
EXTRN	?canDoControl@CvGame@@QAE_NW4ControlTypes@@@Z:PROC ; CvGame::canDoControl
; Function compile flags: /Ogtpy
;	COMDAT ?lCanDoControl@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanDoControl@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lCanDoControl, COMDAT

; 1721 : {

	push	esi

; 1722 : 	return BasicLuaMethod(L, &CvGame::canDoControl);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	?canDoControl@CvGame@@QAE_NW4ControlTypes@@@Z ; CvGame::canDoControl
	movzx	eax, al
	push	eax
	push	edi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	mov	eax, 1
	pop	esi

; 1723 : }

	ret	0
?lCanDoControl@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lCanDoControl
_TEXT	ENDS
PUBLIC	?lDoControl@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lDoControl
EXTRN	?doControl@CvGame@@QAEXW4ControlTypes@@@Z:PROC	; CvGame::doControl
; Function compile flags: /Ogtpy
;	COMDAT ?lDoControl@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lDoControl@CvLuaGame@@KAHPAUlua_State@@@Z PROC		; CvLuaGame::lDoControl, COMDAT

; 1728 : 	return BasicLuaMethod(L, &CvGame::doControl);

	mov	eax, DWORD PTR _L$[esp-4]
	push	esi
	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	1
	push	eax
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	?doControl@CvGame@@QAEXW4ControlTypes@@@Z ; CvGame::doControl
	xor	eax, eax
	pop	esi

; 1729 : }

	ret	0
?lDoControl@CvLuaGame@@KAHPAUlua_State@@@Z ENDP		; CvLuaGame::lDoControl
_TEXT	ENDS
PUBLIC	?lDoMinorGiftGold@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lDoMinorGiftGold
EXTRN	?DoMinorGiftGold@CvGame@@QAEXW4PlayerTypes@@H@Z:PROC ; CvGame::DoMinorGiftGold
; Function compile flags: /Ogtpy
;	COMDAT ?lDoMinorGiftGold@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lDoMinorGiftGold@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lDoMinorGiftGold, COMDAT

; 1751 : {

	push	esi

; 1752 : 	return BasicLuaMethod(L, &CvGame::DoMinorGiftGold);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	mov	edi, DWORD PTR _L$[esp+4]
	push	2
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	?DoMinorGiftGold@CvGame@@QAEXW4PlayerTypes@@H@Z ; CvGame::DoMinorGiftGold
	pop	edi
	xor	eax, eax
	pop	esi

; 1753 : }

	ret	0
?lDoMinorGiftGold@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lDoMinorGiftGold
_TEXT	ENDS
PUBLIC	?lDoMinorGiftTileImprovement@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lDoMinorGiftTileImprovement
EXTRN	?DoMinorGiftTileImprovement@CvGame@@QAEXW4PlayerTypes@@0HH@Z:PROC ; CvGame::DoMinorGiftTileImprovement
; Function compile flags: /Ogtpy
;	COMDAT ?lDoMinorGiftTileImprovement@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lDoMinorGiftTileImprovement@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lDoMinorGiftTileImprovement, COMDAT

; 1757 : {

	push	ebx
	push	ebp
	push	esi

; 1758 : 	return BasicLuaMethod(L, &CvGame::DoMinorGiftTileImprovement);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	mov	edi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	4
	push	esi
	call	_lua_tointeger
	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	push	2
	push	esi
	mov	ebp, eax
	call	_lua_tointeger
	add	esp, 24					; 00000018H
	push	ebx
	push	ebp
	push	eax
	push	1
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	?DoMinorGiftTileImprovement@CvGame@@QAEXW4PlayerTypes@@0HH@Z ; CvGame::DoMinorGiftTileImprovement
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx

; 1759 : }

	ret	0
?lDoMinorGiftTileImprovement@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lDoMinorGiftTileImprovement
_TEXT	ENDS
PUBLIC	?lGetBestWondersPlayer@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetBestWondersPlayer
EXTRN	?GetBestWondersPlayer@CvGame@@QAE?AW4PlayerTypes@@XZ:PROC ; CvGame::GetBestWondersPlayer
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBestWondersPlayer@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBestWondersPlayer@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetBestWondersPlayer, COMDAT

; 1794 : 	return BasicLuaMethod(L, &CvGame::GetBestWondersPlayer);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetBestWondersPlayer@CvGame@@QAE?AW4PlayerTypes@@XZ ; CvGame::GetBestWondersPlayer
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 1795 : }

	ret	0
?lGetBestWondersPlayer@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetBestWondersPlayer
_TEXT	ENDS
PUBLIC	?lGetBestPoliciesPlayer@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetBestPoliciesPlayer
EXTRN	?GetBestPoliciesPlayer@CvGame@@QAE?AW4PlayerTypes@@XZ:PROC ; CvGame::GetBestPoliciesPlayer
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBestPoliciesPlayer@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBestPoliciesPlayer@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetBestPoliciesPlayer, COMDAT

; 1800 : 	return BasicLuaMethod(L, &CvGame::GetBestPoliciesPlayer);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetBestPoliciesPlayer@CvGame@@QAE?AW4PlayerTypes@@XZ ; CvGame::GetBestPoliciesPlayer
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 1801 : }

	ret	0
?lGetBestPoliciesPlayer@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetBestPoliciesPlayer
_TEXT	ENDS
PUBLIC	?lGetBestGreatPeoplePlayer@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetBestGreatPeoplePlayer
EXTRN	?GetBestGreatPeoplePlayer@CvGame@@QAE?AW4PlayerTypes@@XZ:PROC ; CvGame::GetBestGreatPeoplePlayer
; Function compile flags: /Ogtpy
;	COMDAT ?lGetBestGreatPeoplePlayer@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBestGreatPeoplePlayer@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetBestGreatPeoplePlayer, COMDAT

; 1806 : 	return BasicLuaMethod(L, &CvGame::GetBestGreatPeoplePlayer);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetBestGreatPeoplePlayer@CvGame@@QAE?AW4PlayerTypes@@XZ ; CvGame::GetBestGreatPeoplePlayer
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 1807 : }

	ret	0
?lGetBestGreatPeoplePlayer@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetBestGreatPeoplePlayer
_TEXT	ENDS
PUBLIC	?lIsEverAttackedTutorial@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsEverAttackedTutorial
EXTRN	?IsEverAttackedTutorial@CvGame@@QBE_NXZ:PROC	; CvGame::IsEverAttackedTutorial
; Function compile flags: /Ogtpy
;	COMDAT ?lIsEverAttackedTutorial@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsEverAttackedTutorial@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lIsEverAttackedTutorial, COMDAT

; 1811 : 	return BasicLuaMethod(L, &CvGame::IsEverAttackedTutorial);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?IsEverAttackedTutorial@CvGame@@QBE_NXZ	; CvGame::IsEverAttackedTutorial
	mov	ecx, DWORD PTR _L$[esp-4]
	movzx	eax, al
	push	eax
	push	ecx
	call	_lua_pushboolean
	add	esp, 8
	mov	eax, 1

; 1812 : }

	ret	0
?lIsEverAttackedTutorial@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lIsEverAttackedTutorial
_TEXT	ENDS
PUBLIC	?lGetDealDuration@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetDealDuration
EXTRN	?GetDealDuration@CvGame@@QAEHXZ:PROC		; CvGame::GetDealDuration
; Function compile flags: /Ogtpy
;	COMDAT ?lGetDealDuration@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetDealDuration@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetDealDuration, COMDAT

; 2087 : 	return BasicLuaMethod(L, &CvGame::GetDealDuration);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetDealDuration@CvGame@@QAEHXZ		; CvGame::GetDealDuration
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 2088 : }

	ret	0
?lGetDealDuration@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetDealDuration
_TEXT	ENDS
PUBLIC	?lGetPeaceDuration@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetPeaceDuration
EXTRN	?GetPeaceDuration@CvGame@@QAEHXZ:PROC		; CvGame::GetPeaceDuration
; Function compile flags: /Ogtpy
;	COMDAT ?lGetPeaceDuration@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetPeaceDuration@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetPeaceDuration, COMDAT

; 2092 : 	return BasicLuaMethod(L, &CvGame::GetPeaceDuration);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetPeaceDuration@CvGame@@QAEHXZ	; CvGame::GetPeaceDuration
	push	eax
	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8
	mov	eax, 1

; 2093 : }

	ret	0
?lGetPeaceDuration@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetPeaceDuration
_TEXT	ENDS
PUBLIC	?lGetHolyCityForReligion@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetHolyCityForReligion
; Function compile flags: /Ogtpy
;	COMDAT ?lGetHolyCityForReligion@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHolyCityForReligion@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetHolyCityForReligion, COMDAT

; 2362 : {

	push	ebx
	push	ebp
	push	esi
	push	edi

; 2363 : 	const ReligionTypes eReligion = static_cast<ReligionTypes>(luaL_checkint(L, 1));

	mov	edi, DWORD PTR _L$[esp+12]
	push	1
	push	edi
	call	_luaL_checkinteger

; 2364 : 	const PlayerTypes ePlayer = static_cast<PlayerTypes>(luaL_checkint(L, 2));

	push	2
	push	edi
	mov	esi, eax
	call	_luaL_checkinteger

; 2365 : 	const CvReligion* pkReligion = GC.getGame().GetGameReligions()->GetReligion(eReligion, ePlayer);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 16					; 00000010H
	push	eax
	push	esi
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion

; 2366 : 
; 2367 : 	CvCity* pkHolyCity = NULL;
; 2368 : 	if(pkReligion)

	test	eax, eax
	je	$LN2@lGetHolyCi

; 2369 : 	{
; 2370 : 		CvPlot* pkPlot = GC.getMap().plot(pkReligion->m_iHolyCityX, pkReligion->m_iHolyCityY);

	mov	ebx, DWORD PTR [eax+12]
	mov	eax, DWORD PTR [eax+8]
	cmp	eax, -2147483647			; 80000001H
	je	$LN2@lGetHolyCi
	cmp	ebx, -2147483647			; 80000001H
	je	$LN2@lGetHolyCi
	mov	ebp, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	cmp	BYTE PTR [ebp+4056], 0
	mov	ecx, DWORD PTR [ebp+4020]
	je	SHORT $LN21@lGetHolyCi
	test	eax, eax
	jge	SHORT $LN23@lGetHolyCi
	cdq
	idiv	ecx
	mov	esi, edx
	add	esi, ecx
	jmp	SHORT $LN25@lGetHolyCi
$LN23@lGetHolyCi:
	cmp	eax, ecx
	jl	SHORT $LN21@lGetHolyCi
	cdq
	idiv	ecx
	mov	esi, edx
	jmp	SHORT $LN25@lGetHolyCi
$LN21@lGetHolyCi:
	mov	esi, eax
$LN25@lGetHolyCi:
	cmp	BYTE PTR [ebp+4057], 0
	mov	edi, DWORD PTR [ebp+4024]
	je	SHORT $LN31@lGetHolyCi
	test	ebx, ebx
	jge	SHORT $LN33@lGetHolyCi
	mov	eax, ebx
	cdq
	idiv	edi
	add	edx, edi
	jmp	SHORT $LN35@lGetHolyCi
$LN33@lGetHolyCi:
	cmp	ebx, edi
	jl	SHORT $LN31@lGetHolyCi
	mov	eax, ebx
	cdq
	idiv	edi
	jmp	SHORT $LN35@lGetHolyCi
$LN31@lGetHolyCi:
	mov	edx, ebx
$LN35@lGetHolyCi:
	test	esi, esi
	jl	SHORT $LN55@lGetHolyCi
	cmp	esi, ecx
	jge	SHORT $LN55@lGetHolyCi
	test	edx, edx
	jl	SHORT $LN55@lGetHolyCi
	cmp	edx, edi
	jge	SHORT $LN55@lGetHolyCi
	imul	ecx, edx
	add	ecx, esi
	imul	ecx, 484				; 000001e4H
	add	ecx, DWORD PTR [ebp+4068]

; 2371 : 		if(pkPlot)

	test	ecx, ecx
	je	SHORT $LN55@lGetHolyCi

; 2372 : 		{
; 2373 : 			pkHolyCity = pkPlot->getPlotCity();

	mov	eax, DWORD PTR [ecx+104]
	test	eax, eax
	jl	SHORT $LN55@lGetHolyCi
	cmp	eax, 64					; 00000040H
	jge	SHORT $LN55@lGetHolyCi
	mov	ecx, DWORD PTR [ecx+108]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	ecx
	mov	ecx, eax
	call	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z	; CvPlayer::getCity

; 2374 : 		}
; 2375 : 	}
; 2376 : 
; 2377 : 	if(pkHolyCity)

	test	eax, eax
	je	SHORT $LN55@lGetHolyCi

; 2378 : 	{
; 2379 : 		CvLuaCity::Push(L, pkHolyCity);

	mov	edx, DWORD PTR _L$[esp+12]
	push	eax
	push	edx
	call	?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 2384 : 	}
; 2385 : 
; 2386 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2387 : }

	ret	0
$LN55@lGetHolyCi:

; 2380 : 	}
; 2381 : 	else

	mov	edi, DWORD PTR _L$[esp+12]
$LN2@lGetHolyCi:

; 2382 : 	{
; 2383 : 		lua_pushnil(L);

	push	edi
	call	_lua_pushnil
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebp

; 2384 : 	}
; 2385 : 
; 2386 : 	return 1;

	mov	eax, 1
	pop	ebx

; 2387 : }

	ret	0
?lGetHolyCityForReligion@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetHolyCityForReligion
_TEXT	ENDS
PUBLIC	?lGetGreatWorkTooltip@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGreatWorkTooltip
EXTRN	?GetGreatWorkTooltip@CvGameCulture@@QBE?AVCvString@@HW4PlayerTypes@@@Z:PROC ; CvGameCulture::GetGreatWorkTooltip
EXTRN	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ:PROC ; CvGame::GetGameCulture
;	COMDAT xdata$x
; File s:\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetGreatWorkTooltip@CvLuaGame@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetGreatWorkTooltip@CvLuaGame@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetGreatWorkTooltip@CvLuaGame@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetGreatWorkTooltip@CvLuaGame@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluagame.cpp
xdata$x	ENDS
;	COMDAT ?lGetGreatWorkTooltip@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_szTooltip$225188 = -40					; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetGreatWorkTooltip@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetGreatWorkTooltip, COMDAT

; 2652 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetGreatWorkTooltip@CvLuaGame@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 28					; 0000001cH
	push	ebx
	push	esi

; 2653 : #ifdef AUI_WARNING_FIXES
; 2654 : 	const uint iIndex = lua_tointeger(L, 1);
; 2655 : #else
; 2656 : 	const int iIndex = lua_tointeger(L, 1);

	mov	esi, DWORD PTR _L$[esp+44]
	push	edi
	push	1
	push	esi
	call	_lua_tointeger

; 2657 : #endif
; 2658 : 	PlayerTypes eOwner = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	mov	edi, eax
	call	_lua_tointeger

; 2659 : 	if (iIndex < GC.getGame().GetGameCulture()->GetNumGreatWorks())

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 16					; 00000010H
	mov	ebx, eax
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	cmp	edi, DWORD PTR [eax+4]
	jge	SHORT $LN1@lGetGreatW

; 2660 : 	{
; 2661 : 		CvString szTooltip = GC.getGame().GetGameCulture()->GetGreatWorkTooltip(iIndex, eOwner);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	ebx
	push	edi
	lea	eax, DWORD PTR _szTooltip$225188[esp+60]
	push	eax
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	ecx, eax
	call	?GetGreatWorkTooltip@CvGameCulture@@QBE?AVCvString@@HW4PlayerTypes@@@Z ; CvGameCulture::GetGreatWorkTooltip

; 2662 : 		lua_pushstring(L, szTooltip);

	lea	ecx, DWORD PTR _szTooltip$225188[esp+52]
	mov	DWORD PTR __$EHRec$[esp+60], 0
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	esi
	call	_lua_pushstring
	add	esp, 8

; 2663 : 		return 1;

	lea	ecx, DWORD PTR _szTooltip$225188[esp+52]
	mov	DWORD PTR __$EHRec$[esp+60], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	pop	edi
	pop	esi
	mov	eax, 1
	pop	ebx

; 2664 : 	}
; 2665 : 	return 0;
; 2666 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+40]
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
$LN1@lGetGreatW:
	mov	ecx, DWORD PTR __$EHRec$[esp+52]
	pop	edi
	pop	esi
	xor	eax, eax
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetGreatWorkTooltip@CvLuaGame@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _szTooltip$225188[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetGreatWorkTooltip@CvLuaGame@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetGreatWorkTooltip@CvLuaGame@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetGreatWorkTooltip@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetGreatWorkTooltip
PUBLIC	?lGetGreatWorkName@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGreatWorkName
EXTRN	?GetGreatWorkName@CvGameCulture@@QBE?AVCvString@@H@Z:PROC ; CvGameCulture::GetGreatWorkName
;	COMDAT xdata$x
; File s:\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetGreatWorkName@CvLuaGame@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetGreatWorkName@CvLuaGame@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetGreatWorkName@CvLuaGame@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetGreatWorkName@CvLuaGame@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluagame.cpp
xdata$x	ENDS
;	COMDAT ?lGetGreatWorkName@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_szTooltip$225196 = -40					; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetGreatWorkName@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetGreatWorkName, COMDAT

; 2669 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetGreatWorkName@CvLuaGame@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 28					; 0000001cH
	push	esi
	push	edi

; 2670 : #ifdef AUI_WARNING_FIXES
; 2671 : 	const uint iIndex = lua_tointeger(L, 1);
; 2672 : #else
; 2673 : 	const int iIndex = lua_tointeger(L, 1);

	mov	edi, DWORD PTR _L$[esp+44]
	push	1
	push	edi
	call	_lua_tointeger

; 2674 : #endif
; 2675 : 	if (iIndex < GC.getGame().GetGameCulture()->GetNumGreatWorks())

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 8
	mov	esi, eax
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	cmp	esi, DWORD PTR [eax+4]
	jge	SHORT $LN1@lGetGreatW@2

; 2676 : 	{
; 2677 : 		CvString szTooltip = GC.getGame().GetGameCulture()->GetGreatWorkName(iIndex);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	esi
	lea	eax, DWORD PTR _szTooltip$225196[esp+52]
	push	eax
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	ecx, eax
	call	?GetGreatWorkName@CvGameCulture@@QBE?AVCvString@@H@Z ; CvGameCulture::GetGreatWorkName

; 2678 : 		lua_pushstring(L, szTooltip);

	lea	ecx, DWORD PTR _szTooltip$225196[esp+48]
	mov	DWORD PTR __$EHRec$[esp+56], 0
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	edi
	call	_lua_pushstring
	add	esp, 8

; 2679 : 		return 1;

	lea	ecx, DWORD PTR _szTooltip$225196[esp+48]
	mov	DWORD PTR __$EHRec$[esp+56], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	pop	edi
	mov	eax, 1
	pop	esi

; 2680 : 	}
; 2681 : 	return 0;
; 2682 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+40]
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
$LN1@lGetGreatW@2:
	mov	ecx, DWORD PTR __$EHRec$[esp+48]
	pop	edi
	xor	eax, eax
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetGreatWorkName@CvLuaGame@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _szTooltip$225196[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetGreatWorkName@CvLuaGame@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetGreatWorkName@CvLuaGame@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetGreatWorkName@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetGreatWorkName
PUBLIC	?lGetGreatWorkType@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGreatWorkType
EXTRN	?GetGreatWorkType@CvGameCulture@@QBE?AW4GreatWorkType@@H@Z:PROC ; CvGameCulture::GetGreatWorkType
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGreatWorkType@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGreatWorkType@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetGreatWorkType, COMDAT

; 2685 : {

	push	esi
	push	edi

; 2686 : #ifdef AUI_WARNING_FIXES
; 2687 : 	const uint iIndex = lua_tointeger(L, 1);
; 2688 : #else
; 2689 : 	const int iIndex = lua_tointeger(L, 1);

	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger

; 2690 : #endif
; 2691 : 	if (iIndex < GC.getGame().GetGameCulture()->GetNumGreatWorks())

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 8
	mov	esi, eax
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	cmp	esi, DWORD PTR [eax+4]
	jge	SHORT $LN1@lGetGreatW@3

; 2692 : 	{
; 2693 : 		GreatWorkType eGreatWork = GC.getGame().GetGameCulture()->GetGreatWorkType(iIndex);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	esi
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	ecx, eax
	call	?GetGreatWorkType@CvGameCulture@@QBE?AW4GreatWorkType@@H@Z ; CvGameCulture::GetGreatWorkType

; 2694 : 		lua_pushinteger(L, eGreatWork);

	push	eax
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi

; 2695 : 		return 1;

	mov	eax, 1
	pop	esi

; 2699 : }

	ret	0
$LN1@lGetGreatW@3:
	pop	edi

; 2696 : 	}
; 2697 : 
; 2698 : 	return 0;

	xor	eax, eax
	pop	esi

; 2699 : }

	ret	0
?lGetGreatWorkType@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetGreatWorkType
_TEXT	ENDS
PUBLIC	?lGetGreatWorkClass@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGreatWorkClass
EXTRN	?GetGreatWorkClass@CvGameCulture@@QBE?AW4GreatWorkClass@@H@Z:PROC ; CvGameCulture::GetGreatWorkClass
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGreatWorkClass@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGreatWorkClass@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetGreatWorkClass, COMDAT

; 2702 : {

	push	esi
	push	edi

; 2703 : #ifdef AUI_WARNING_FIXES
; 2704 : 	const uint iIndex = lua_tointeger(L, 1);
; 2705 : #else
; 2706 : 	const int iIndex = lua_tointeger(L, 1);

	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger

; 2707 : #endif
; 2708 : 	if (iIndex < GC.getGame().GetGameCulture()->GetNumGreatWorks())

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 8
	mov	esi, eax
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	cmp	esi, DWORD PTR [eax+4]
	jge	SHORT $LN1@lGetGreatW@4

; 2709 : 	{
; 2710 : 		GreatWorkClass eGreatWork = GC.getGame().GetGameCulture()->GetGreatWorkClass(iIndex);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	esi
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	ecx, eax
	call	?GetGreatWorkClass@CvGameCulture@@QBE?AW4GreatWorkClass@@H@Z ; CvGameCulture::GetGreatWorkClass

; 2711 : 		lua_pushinteger(L, eGreatWork);

	push	eax
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi

; 2712 : 		return 1;

	mov	eax, 1
	pop	esi

; 2716 : }

	ret	0
$LN1@lGetGreatW@4:
	pop	edi

; 2713 : 	}
; 2714 : 
; 2715 : 	return 0;

	xor	eax, eax
	pop	esi

; 2716 : }

	ret	0
?lGetGreatWorkClass@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetGreatWorkClass
_TEXT	ENDS
PUBLIC	?lGetGreatWorkArtist@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGreatWorkArtist
EXTRN	?GetGreatWorkArtist@CvGameCulture@@QBE?AVCvString@@H@Z:PROC ; CvGameCulture::GetGreatWorkArtist
;	COMDAT xdata$x
; File s:\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetGreatWorkArtist@CvLuaGame@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetGreatWorkArtist@CvLuaGame@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetGreatWorkArtist@CvLuaGame@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetGreatWorkArtist@CvLuaGame@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluagame.cpp
xdata$x	ENDS
;	COMDAT ?lGetGreatWorkArtist@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_szTooltip$225216 = -40					; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetGreatWorkArtist@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetGreatWorkArtist, COMDAT

; 2719 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetGreatWorkArtist@CvLuaGame@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 28					; 0000001cH
	push	esi
	push	edi

; 2720 : #ifdef AUI_WARNING_FIXES
; 2721 : 	const uint iIndex = lua_tointeger(L, 1);
; 2722 : #else
; 2723 : 	const int iIndex = lua_tointeger(L, 1);

	mov	edi, DWORD PTR _L$[esp+44]
	push	1
	push	edi
	call	_lua_tointeger

; 2724 : #endif
; 2725 : 	if (iIndex < GC.getGame().GetGameCulture()->GetNumGreatWorks())

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 8
	mov	esi, eax
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	cmp	esi, DWORD PTR [eax+4]
	jge	SHORT $LN1@lGetGreatW@5

; 2726 : 	{
; 2727 : 		CvString szTooltip = GC.getGame().GetGameCulture()->GetGreatWorkArtist(iIndex);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	esi
	lea	eax, DWORD PTR _szTooltip$225216[esp+52]
	push	eax
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	ecx, eax
	call	?GetGreatWorkArtist@CvGameCulture@@QBE?AVCvString@@H@Z ; CvGameCulture::GetGreatWorkArtist

; 2728 : 		lua_pushstring(L, szTooltip);

	lea	ecx, DWORD PTR _szTooltip$225216[esp+48]
	mov	DWORD PTR __$EHRec$[esp+56], 0
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	edi
	call	_lua_pushstring
	add	esp, 8

; 2729 : 		return 1;

	lea	ecx, DWORD PTR _szTooltip$225216[esp+48]
	mov	DWORD PTR __$EHRec$[esp+56], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	pop	edi
	mov	eax, 1
	pop	esi

; 2730 : 	}
; 2731 : 	return 0;
; 2732 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+40]
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
$LN1@lGetGreatW@5:
	mov	ecx, DWORD PTR __$EHRec$[esp+48]
	pop	edi
	xor	eax, eax
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetGreatWorkArtist@CvLuaGame@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _szTooltip$225216[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetGreatWorkArtist@CvLuaGame@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetGreatWorkArtist@CvLuaGame@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetGreatWorkArtist@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetGreatWorkArtist
PUBLIC	?lGetGreatWorkEra@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGreatWorkEra
EXTRN	?GetGreatWorkEra@CvGameCulture@@QBE?AVCvString@@H@Z:PROC ; CvGameCulture::GetGreatWorkEra
;	COMDAT xdata$x
; File s:\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetGreatWorkEra@CvLuaGame@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetGreatWorkEra@CvLuaGame@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetGreatWorkEra@CvLuaGame@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetGreatWorkEra@CvLuaGame@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluagame.cpp
xdata$x	ENDS
;	COMDAT ?lGetGreatWorkEra@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_szTooltip$225224 = -40					; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetGreatWorkEra@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetGreatWorkEra, COMDAT

; 2735 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetGreatWorkEra@CvLuaGame@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 28					; 0000001cH
	push	esi
	push	edi

; 2736 : #ifdef AUI_WARNING_FIXES
; 2737 : 	const uint iIndex = lua_tointeger(L, 1);
; 2738 : #else
; 2739 : 	const int iIndex = lua_tointeger(L, 1);

	mov	edi, DWORD PTR _L$[esp+44]
	push	1
	push	edi
	call	_lua_tointeger

; 2740 : #endif
; 2741 : 	if (iIndex < GC.getGame().GetGameCulture()->GetNumGreatWorks())

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 8
	mov	esi, eax
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	cmp	esi, DWORD PTR [eax+4]
	jge	SHORT $LN1@lGetGreatW@6

; 2742 : 	{
; 2743 : 		CvString szTooltip = GC.getGame().GetGameCulture()->GetGreatWorkEra(iIndex);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	esi
	lea	eax, DWORD PTR _szTooltip$225224[esp+52]
	push	eax
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	ecx, eax
	call	?GetGreatWorkEra@CvGameCulture@@QBE?AVCvString@@H@Z ; CvGameCulture::GetGreatWorkEra

; 2744 : 		lua_pushstring(L, szTooltip);

	lea	ecx, DWORD PTR _szTooltip$225224[esp+48]
	mov	DWORD PTR __$EHRec$[esp+56], 0
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	edi
	call	_lua_pushstring
	add	esp, 8

; 2745 : 		return 1;

	lea	ecx, DWORD PTR _szTooltip$225224[esp+48]
	mov	DWORD PTR __$EHRec$[esp+56], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	pop	edi
	mov	eax, 1
	pop	esi

; 2746 : 	}
; 2747 : 	return 0;
; 2748 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+40]
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
$LN1@lGetGreatW@6:
	mov	ecx, DWORD PTR __$EHRec$[esp+48]
	pop	edi
	xor	eax, eax
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetGreatWorkEra@CvLuaGame@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _szTooltip$225224[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetGreatWorkEra@CvLuaGame@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetGreatWorkEra@CvLuaGame@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetGreatWorkEra@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetGreatWorkEra
PUBLIC	?lGetGreatWorkEraAbbreviation@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGreatWorkEraAbbreviation
EXTRN	?GetGreatWorkEraAbbreviation@CvGameCulture@@QBE?AVCvString@@H@Z:PROC ; CvGameCulture::GetGreatWorkEraAbbreviation
;	COMDAT xdata$x
; File s:\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetGreatWorkEraAbbreviation@CvLuaGame@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetGreatWorkEraAbbreviation@CvLuaGame@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetGreatWorkEraAbbreviation@CvLuaGame@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetGreatWorkEraAbbreviation@CvLuaGame@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluagame.cpp
xdata$x	ENDS
;	COMDAT ?lGetGreatWorkEraAbbreviation@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_szTooltip$225232 = -40					; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetGreatWorkEraAbbreviation@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetGreatWorkEraAbbreviation, COMDAT

; 2751 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetGreatWorkEraAbbreviation@CvLuaGame@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 28					; 0000001cH
	push	esi
	push	edi

; 2752 : #ifdef AUI_WARNING_FIXES
; 2753 : 	const uint iIndex = lua_tointeger(L, 1);
; 2754 : #else
; 2755 : 	const int iIndex = lua_tointeger(L, 1);

	mov	edi, DWORD PTR _L$[esp+44]
	push	1
	push	edi
	call	_lua_tointeger

; 2756 : #endif
; 2757 : 	if (iIndex < GC.getGame().GetGameCulture()->GetNumGreatWorks())

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 8
	mov	esi, eax
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	cmp	esi, DWORD PTR [eax+4]
	jge	SHORT $LN1@lGetGreatW@7

; 2758 : 	{
; 2759 : 		CvString szTooltip = GC.getGame().GetGameCulture()->GetGreatWorkEraAbbreviation(iIndex);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	esi
	lea	eax, DWORD PTR _szTooltip$225232[esp+52]
	push	eax
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	ecx, eax
	call	?GetGreatWorkEraAbbreviation@CvGameCulture@@QBE?AVCvString@@H@Z ; CvGameCulture::GetGreatWorkEraAbbreviation

; 2760 : 		lua_pushstring(L, szTooltip);

	lea	ecx, DWORD PTR _szTooltip$225232[esp+48]
	mov	DWORD PTR __$EHRec$[esp+56], 0
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	edi
	call	_lua_pushstring
	add	esp, 8

; 2761 : 		return 1;

	lea	ecx, DWORD PTR _szTooltip$225232[esp+48]
	mov	DWORD PTR __$EHRec$[esp+56], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	pop	edi
	mov	eax, 1
	pop	esi

; 2762 : 	}
; 2763 : 	return 0;
; 2764 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+40]
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
$LN1@lGetGreatW@7:
	mov	ecx, DWORD PTR __$EHRec$[esp+48]
	pop	edi
	xor	eax, eax
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetGreatWorkEraAbbreviation@CvLuaGame@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _szTooltip$225232[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetGreatWorkEraAbbreviation@CvLuaGame@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetGreatWorkEraAbbreviation@CvLuaGame@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetGreatWorkEraAbbreviation@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetGreatWorkEraAbbreviation
PUBLIC	?lGetGreatWorkEraShort@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGreatWorkEraShort
EXTRN	?GetGreatWorkEraShort@CvGameCulture@@QBE?AVCvString@@H@Z:PROC ; CvGameCulture::GetGreatWorkEraShort
;	COMDAT xdata$x
; File s:\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetGreatWorkEraShort@CvLuaGame@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetGreatWorkEraShort@CvLuaGame@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetGreatWorkEraShort@CvLuaGame@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetGreatWorkEraShort@CvLuaGame@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluagame.cpp
xdata$x	ENDS
;	COMDAT ?lGetGreatWorkEraShort@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_szTooltip$225240 = -40					; size = 28
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetGreatWorkEraShort@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetGreatWorkEraShort, COMDAT

; 2768 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?lGetGreatWorkEraShort@CvLuaGame@@KAHPAUlua_State@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 28					; 0000001cH
	push	esi
	push	edi

; 2769 : #ifdef AUI_WARNING_FIXES
; 2770 : 	const uint iIndex = lua_tointeger(L, 1);
; 2771 : #else
; 2772 : 	const int iIndex = lua_tointeger(L, 1);

	mov	edi, DWORD PTR _L$[esp+44]
	push	1
	push	edi
	call	_lua_tointeger

; 2773 : #endif
; 2774 : 	if (iIndex < GC.getGame().GetGameCulture()->GetNumGreatWorks())

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 8
	mov	esi, eax
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	cmp	esi, DWORD PTR [eax+4]
	jge	SHORT $LN1@lGetGreatW@8

; 2775 : 	{
; 2776 : 		CvString szTooltip = GC.getGame().GetGameCulture()->GetGreatWorkEraShort(iIndex);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	esi
	lea	eax, DWORD PTR _szTooltip$225240[esp+52]
	push	eax
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	ecx, eax
	call	?GetGreatWorkEraShort@CvGameCulture@@QBE?AVCvString@@H@Z ; CvGameCulture::GetGreatWorkEraShort

; 2777 : 		lua_pushstring(L, szTooltip);

	lea	ecx, DWORD PTR _szTooltip$225240[esp+48]
	mov	DWORD PTR __$EHRec$[esp+56], 0
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	edi
	call	_lua_pushstring
	add	esp, 8

; 2778 : 		return 1;

	lea	ecx, DWORD PTR _szTooltip$225240[esp+48]
	mov	DWORD PTR __$EHRec$[esp+56], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	pop	edi
	mov	eax, 1
	pop	esi

; 2779 : 	}
; 2780 : 	return 0;
; 2781 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+40]
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
$LN1@lGetGreatW@8:
	mov	ecx, DWORD PTR __$EHRec$[esp+48]
	pop	edi
	xor	eax, eax
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetGreatWorkEraShort@CvLuaGame@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _szTooltip$225240[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetGreatWorkEraShort@CvLuaGame@@KAHPAUlua_State@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?lGetGreatWorkEraShort@CvLuaGame@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetGreatWorkEraShort@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetGreatWorkEraShort
PUBLIC	?lGetGreatWorkCreator@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGreatWorkCreator
EXTRN	?GetGreatWorkCreator@CvGameCulture@@QBE?AW4PlayerTypes@@H@Z:PROC ; CvGameCulture::GetGreatWorkCreator
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGreatWorkCreator@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGreatWorkCreator@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetGreatWorkCreator, COMDAT

; 2785 : {

	push	esi
	push	edi

; 2786 : #ifdef AUI_WARNING_FIXES
; 2787 : 	const uint iIndex = lua_tointeger(L, 1);
; 2788 : #else
; 2789 : 	const int iIndex = lua_tointeger(L, 1);

	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger

; 2790 : #endif
; 2791 : 	if (iIndex < GC.getGame().GetGameCulture()->GetNumGreatWorks())

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 8
	mov	esi, eax
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	cmp	esi, DWORD PTR [eax+4]
	jge	SHORT $LN1@lGetGreatW@9

; 2792 : 	{
; 2793 : 		PlayerTypes ePlayer = GC.getGame().GetGameCulture()->GetGreatWorkCreator(iIndex);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	esi
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	ecx, eax
	call	?GetGreatWorkCreator@CvGameCulture@@QBE?AW4PlayerTypes@@H@Z ; CvGameCulture::GetGreatWorkCreator

; 2794 : 		lua_pushinteger(L, ePlayer);

	push	eax
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi

; 2795 : 		return 1;

	mov	eax, 1
	pop	esi

; 2798 : }

	ret	0
$LN1@lGetGreatW@9:
	pop	edi

; 2796 : 	}
; 2797 : 	return 0;

	xor	eax, eax
	pop	esi

; 2798 : }

	ret	0
?lGetGreatWorkCreator@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetGreatWorkCreator
_TEXT	ENDS
PUBLIC	?lGetGreatWorkController@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGreatWorkController
EXTRN	?GetGreatWorkController@CvGameCulture@@QBE?AW4PlayerTypes@@H@Z:PROC ; CvGameCulture::GetGreatWorkController
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGreatWorkController@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGreatWorkController@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetGreatWorkController, COMDAT

; 2802 : {

	push	esi
	push	edi

; 2803 : #ifdef AUI_WARNING_FIXES
; 2804 : 	const uint iIndex = lua_tointeger(L, 1);
; 2805 : #else
; 2806 : 	const int iIndex = lua_tointeger(L, 1);

	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger

; 2807 : #endif
; 2808 : 	if (iIndex < GC.getGame().GetGameCulture()->GetNumGreatWorks())

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 8
	mov	esi, eax
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	cmp	esi, DWORD PTR [eax+4]
	jge	SHORT $LN1@lGetGreatW@10

; 2809 : 	{
; 2810 : 		PlayerTypes ePlayer = GC.getGame().GetGameCulture()->GetGreatWorkController(iIndex);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	esi
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	ecx, eax
	call	?GetGreatWorkController@CvGameCulture@@QBE?AW4PlayerTypes@@H@Z ; CvGameCulture::GetGreatWorkController

; 2811 : 		lua_pushinteger(L, ePlayer);

	push	eax
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi

; 2812 : 		return 1;

	mov	eax, 1
	pop	esi

; 2815 : }

	ret	0
$LN1@lGetGreatW@10:
	pop	edi

; 2813 : 	}
; 2814 : 	return 0;

	xor	eax, eax
	pop	esi

; 2815 : }

	ret	0
?lGetGreatWorkController@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetGreatWorkController
_TEXT	ENDS
PUBLIC	?lGetGreatWorkCurrentThemingBonus@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGreatWorkCurrentThemingBonus
EXTRN	?GetGreatWorkCurrentThemingBonus@CvGameCulture@@QBEHH@Z:PROC ; CvGameCulture::GetGreatWorkCurrentThemingBonus
; Function compile flags: /Ogtpy
;	COMDAT ?lGetGreatWorkCurrentThemingBonus@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGreatWorkCurrentThemingBonus@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetGreatWorkCurrentThemingBonus, COMDAT

; 2819 : {

	push	esi
	push	edi

; 2820 : #ifdef AUI_WARNING_FIXES
; 2821 : 	const uint iIndex = lua_tointeger(L, 1);
; 2822 : #else
; 2823 : 	const int iIndex = lua_tointeger(L, 1);

	mov	edi, DWORD PTR _L$[esp+4]
	push	1
	push	edi
	call	_lua_tointeger

; 2824 : #endif
; 2825 : 	if (iIndex < GC.getGame().GetGameCulture()->GetNumGreatWorks())

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 8
	mov	esi, eax
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	cmp	esi, DWORD PTR [eax+4]
	jge	SHORT $LN1@lGetGreatW@11

; 2826 : 	{
; 2827 : 		int iBonus = GC.getGame().GetGameCulture()->GetGreatWorkCurrentThemingBonus(iIndex);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	esi
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	ecx, eax
	call	?GetGreatWorkCurrentThemingBonus@CvGameCulture@@QBEHH@Z ; CvGameCulture::GetGreatWorkCurrentThemingBonus

; 2828 : 		lua_pushinteger(L, iBonus);

	push	eax
	push	edi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi

; 2829 : 		return 1;

	mov	eax, 1
	pop	esi

; 2832 : }

	ret	0
$LN1@lGetGreatW@11:
	pop	edi

; 2830 : 	}
; 2831 : 	return 0;

	xor	eax, eax
	pop	esi

; 2832 : }

	ret	0
?lGetGreatWorkCurrentThemingBonus@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetGreatWorkCurrentThemingBonus
_TEXT	ENDS
PUBLIC	?begin@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::begin
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\vector
;	COMDAT ?begin@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@XZ PROC ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::begin, COMDAT
; _this$ = ecx

; 667  : 		return (iterator(_Myfirst));

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 668  : 		}

	ret	4
?begin@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@XZ ENDP ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@XZ PROC ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::end, COMDAT
; _this$ = ecx

; 677  : 		return (iterator(_Mylast));

	mov	ecx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 678  : 		}

	ret	4
?end@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@XZ ENDP ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::end
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@0AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<enum BeliefTypes> >
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@0AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@0AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<enum BeliefTypes> >, COMDAT

; 233  : 	for (; _First != _Last; ++_First)
; 234  : 		_Al.destroy(_First);
; 235  : 	}

	ret	0
??$_Destroy_range@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@0AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<enum BeliefTypes> >
_TEXT	ENDS
PUBLIC	?lDoMinorGoldGift@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lDoMinorGoldGift
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluagame.cpp
;	COMDAT ?lDoMinorGoldGift@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lDoMinorGoldGift@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lDoMinorGoldGift, COMDAT

; 1745 : {

	push	esi

; 1746 : 	return lDoMinorGiftGold(L);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	mov	edi, DWORD PTR _L$[esp+4]
	push	2
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	push	1
	push	edi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, esi
	call	?DoMinorGiftGold@CvGame@@QAEXW4PlayerTypes@@H@Z ; CvGame::DoMinorGiftGold
	pop	edi
	xor	eax, eax
	pop	esi

; 1747 : }

	ret	0
?lDoMinorGoldGift@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lDoMinorGoldGift
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@0AAV?$allocator@W4BeliefTypes@@@0@@Z ; std::_Destroy_range<std::allocator<enum BeliefTypes> >
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@0AAV?$allocator@W4BeliefTypes@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@0AAV?$allocator@W4BeliefTypes@@@0@@Z PROC ; std::_Destroy_range<std::allocator<enum BeliefTypes> >, COMDAT

; 225  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 226  : 	}

	ret	0
??$_Destroy_range@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@0AAV?$allocator@W4BeliefTypes@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<enum BeliefTypes> >
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXPAW4BeliefTypes@@0@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Destroy
; Function compile flags: /Ogtpy
; File s:\msvs2008\vc\include\vector
;	COMDAT ?_Destroy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXPAW4BeliefTypes@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXPAW4BeliefTypes@@0@Z PROC ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Destroy, COMDAT
; _this$ = ecx

; 1119 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1120 : 		}

	ret	8
?_Destroy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXPAW4BeliefTypes@@0@Z ENDP ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Destroy
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXXZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Tidy
; Function compile flags: /Ogtpy
;	COMDAT ?_Tidy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXXZ PROC ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	esi
	mov	esi, ecx

; 1124 : 		if (_Myfirst != 0)

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN4@Tidy

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);
; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@Tidy:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 1135 : 		}

	ret	0
?_Tidy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXXZ ENDP ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Tidy
_TEXT	ENDS
PUBLIC	??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ PROC ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >, COMDAT
; _this$ = ecx

; 558  : 		{	// destroy the object

	push	esi
	mov	esi, ecx

; 559  : 		_Tidy();

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN6@vector
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@vector:
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 560  : 		}

	ret	0
??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ENDP ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
_TEXT	ENDS
PUBLIC	?lGetAvailablePantheonBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetAvailablePantheonBeliefs
EXTRN	?GetAvailablePantheonBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ:PROC ; CvGameReligions::GetAvailablePantheonBeliefs
; Function compile flags: /Ogtpy
; File s:\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluagame.cpp
;	COMDAT ?lGetAvailablePantheonBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_availableBeliefs$ = -16				; size = 16
_L$ = 8							; size = 4
?lGetAvailablePantheonBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetAvailablePantheonBeliefs, COMDAT

; 2164 : {

	sub	esp, 16					; 00000010H
	push	ebx
	push	ebp
	push	esi
	push	edi

; 2165 : 	lua_createtable(L, 0, 0);

	mov	edi, DWORD PTR _L$[esp+28]
	push	0
	push	0
	push	edi
	call	_lua_createtable

; 2166 : 	const int t = lua_gettop(L);

	push	edi
	call	_lua_gettop

; 2167 : 	int idx = 1;
; 2168 : 
; 2169 : #ifdef AUI_WARNING_FIXES
; 2170 : 	const std::vector<BeliefTypes>& availableBeliefs = GC.getGame().GetGameReligions()->GetAvailablePantheonBeliefs();
; 2171 : 	for (std::vector<BeliefTypes>::const_iterator it = availableBeliefs.begin(); it != availableBeliefs.end(); ++it)
; 2172 : #else
; 2173 : 	std::vector<BeliefTypes> availableBeliefs = GC.getGame().GetGameReligions()->GetAvailablePantheonBeliefs();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	ebp, eax
	add	esp, 16					; 00000010H
	lea	eax, DWORD PTR _availableBeliefs$[esp+32]
	push	eax
	mov	ebx, 1
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetAvailablePantheonBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ; CvGameReligions::GetAvailablePantheonBeliefs

; 2174 : 	for(std::vector<BeliefTypes>::iterator it = availableBeliefs.begin();

	mov	esi, DWORD PTR _availableBeliefs$[esp+36]

; 2175 : 	        it!= availableBeliefs.end(); ++it)

	cmp	esi, DWORD PTR _availableBeliefs$[esp+40]
	je	SHORT $LN1@lGetAvaila
$LL17@lGetAvaila:

; 2176 : #endif
; 2177 : 	{
; 2178 : 		const BeliefTypes eBelief = (*it);
; 2179 : 		lua_pushinteger(L, eBelief);

	mov	ecx, DWORD PTR [esi]
	push	ecx
	push	edi
	call	_lua_pushinteger

; 2180 : 		lua_rawseti(L, t, idx++);

	push	ebx
	push	ebp
	push	edi
	call	_lua_rawseti
	add	esi, 4
	add	esp, 20					; 00000014H
	inc	ebx
	cmp	esi, DWORD PTR _availableBeliefs$[esp+40]
	jne	SHORT $LL17@lGetAvaila

; 2175 : 	        it!= availableBeliefs.end(); ++it)

	mov	esi, DWORD PTR _availableBeliefs$[esp+36]
$LN1@lGetAvaila:

; 2181 : 	}
; 2182 : 
; 2183 : 	return 1;

	test	esi, esi
	je	SHORT $LN42@lGetAvaila
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN42@lGetAvaila:
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx

; 2184 : }

	add	esp, 16					; 00000010H
	ret	0
?lGetAvailablePantheonBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetAvailablePantheonBeliefs
_TEXT	ENDS
PUBLIC	?lGetAvailableFounderBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetAvailableFounderBeliefs
EXTRN	?GetAvailableFounderBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ:PROC ; CvGameReligions::GetAvailableFounderBeliefs
; Function compile flags: /Ogtpy
;	COMDAT ?lGetAvailableFounderBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_availableBeliefs$ = -16				; size = 16
_L$ = 8							; size = 4
?lGetAvailableFounderBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetAvailableFounderBeliefs, COMDAT

; 2187 : {

	sub	esp, 16					; 00000010H
	push	ebx
	push	ebp
	push	esi
	push	edi

; 2188 : 	lua_createtable(L, 0, 0);

	mov	edi, DWORD PTR _L$[esp+28]
	push	0
	push	0
	push	edi
	call	_lua_createtable

; 2189 : 	const int t = lua_gettop(L);

	push	edi
	call	_lua_gettop

; 2190 : 	int idx = 1;
; 2191 : 
; 2192 : #ifdef AUI_WARNING_FIXES
; 2193 : 	const std::vector<BeliefTypes>& availableBeliefs = GC.getGame().GetGameReligions()->GetAvailableFounderBeliefs();
; 2194 : 	for (std::vector<BeliefTypes>::const_iterator it = availableBeliefs.begin(); it != availableBeliefs.end(); ++it)
; 2195 : #else
; 2196 : 	std::vector<BeliefTypes> availableBeliefs = GC.getGame().GetGameReligions()->GetAvailableFounderBeliefs();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	ebp, eax
	add	esp, 16					; 00000010H
	lea	eax, DWORD PTR _availableBeliefs$[esp+32]
	push	eax
	mov	ebx, 1
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetAvailableFounderBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ; CvGameReligions::GetAvailableFounderBeliefs

; 2197 : 	for(std::vector<BeliefTypes>::iterator it = availableBeliefs.begin();

	mov	esi, DWORD PTR _availableBeliefs$[esp+36]

; 2198 : 	        it!= availableBeliefs.end(); ++it)

	cmp	esi, DWORD PTR _availableBeliefs$[esp+40]
	je	SHORT $LN1@lGetAvaila@2
$LL17@lGetAvaila@2:

; 2199 : #endif
; 2200 : 	{
; 2201 : 		const BeliefTypes eBelief = (*it);
; 2202 : 		lua_pushinteger(L, eBelief);

	mov	ecx, DWORD PTR [esi]
	push	ecx
	push	edi
	call	_lua_pushinteger

; 2203 : 		lua_rawseti(L, t, idx++);

	push	ebx
	push	ebp
	push	edi
	call	_lua_rawseti
	add	esi, 4
	add	esp, 20					; 00000014H
	inc	ebx
	cmp	esi, DWORD PTR _availableBeliefs$[esp+40]
	jne	SHORT $LL17@lGetAvaila@2

; 2198 : 	        it!= availableBeliefs.end(); ++it)

	mov	esi, DWORD PTR _availableBeliefs$[esp+36]
$LN1@lGetAvaila@2:

; 2204 : 	}
; 2205 : 
; 2206 : 	return 1;

	test	esi, esi
	je	SHORT $LN42@lGetAvaila@2
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN42@lGetAvaila@2:
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx

; 2207 : }

	add	esp, 16					; 00000010H
	ret	0
?lGetAvailableFounderBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetAvailableFounderBeliefs
_TEXT	ENDS
PUBLIC	?lGetAvailableFollowerBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetAvailableFollowerBeliefs
EXTRN	?GetAvailableFollowerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ:PROC ; CvGameReligions::GetAvailableFollowerBeliefs
; Function compile flags: /Ogtpy
;	COMDAT ?lGetAvailableFollowerBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_availableBeliefs$ = -16				; size = 16
_L$ = 8							; size = 4
?lGetAvailableFollowerBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetAvailableFollowerBeliefs, COMDAT

; 2210 : {

	sub	esp, 16					; 00000010H
	push	ebx
	push	ebp
	push	esi
	push	edi

; 2211 : 	lua_createtable(L, 0, 0);

	mov	edi, DWORD PTR _L$[esp+28]
	push	0
	push	0
	push	edi
	call	_lua_createtable

; 2212 : 	const int t = lua_gettop(L);

	push	edi
	call	_lua_gettop

; 2213 : 	int idx = 1;
; 2214 : 
; 2215 : #ifdef AUI_WARNING_FIXES
; 2216 : 	const std::vector<BeliefTypes>& availableBeliefs = GC.getGame().GetGameReligions()->GetAvailableFollowerBeliefs();
; 2217 : 	for (std::vector<BeliefTypes>::const_iterator it = availableBeliefs.begin(); it != availableBeliefs.end(); ++it)
; 2218 : #else
; 2219 : 	std::vector<BeliefTypes> availableBeliefs = GC.getGame().GetGameReligions()->GetAvailableFollowerBeliefs();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	ebp, eax
	add	esp, 16					; 00000010H
	lea	eax, DWORD PTR _availableBeliefs$[esp+32]
	push	eax
	mov	ebx, 1
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetAvailableFollowerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ; CvGameReligions::GetAvailableFollowerBeliefs

; 2220 : 	for(std::vector<BeliefTypes>::iterator it = availableBeliefs.begin();

	mov	esi, DWORD PTR _availableBeliefs$[esp+36]

; 2221 : 	        it!= availableBeliefs.end(); ++it)

	cmp	esi, DWORD PTR _availableBeliefs$[esp+40]
	je	SHORT $LN1@lGetAvaila@3
$LL17@lGetAvaila@3:

; 2222 : #endif
; 2223 : 	{
; 2224 : 		const BeliefTypes eBelief = (*it);
; 2225 : 		lua_pushinteger(L, eBelief);

	mov	ecx, DWORD PTR [esi]
	push	ecx
	push	edi
	call	_lua_pushinteger

; 2226 : 		lua_rawseti(L, t, idx++);

	push	ebx
	push	ebp
	push	edi
	call	_lua_rawseti
	add	esi, 4
	add	esp, 20					; 00000014H
	inc	ebx
	cmp	esi, DWORD PTR _availableBeliefs$[esp+40]
	jne	SHORT $LL17@lGetAvaila@3

; 2221 : 	        it!= availableBeliefs.end(); ++it)

	mov	esi, DWORD PTR _availableBeliefs$[esp+36]
$LN1@lGetAvaila@3:

; 2227 : 	}
; 2228 : 
; 2229 : 	return 1;

	test	esi, esi
	je	SHORT $LN42@lGetAvaila@3
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN42@lGetAvaila@3:
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx

; 2230 : }

	add	esp, 16					; 00000010H
	ret	0
?lGetAvailableFollowerBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetAvailableFollowerBeliefs
_TEXT	ENDS
PUBLIC	?lGetAvailableEnhancerBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetAvailableEnhancerBeliefs
EXTRN	?GetAvailableEnhancerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ:PROC ; CvGameReligions::GetAvailableEnhancerBeliefs
; Function compile flags: /Ogtpy
;	COMDAT ?lGetAvailableEnhancerBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_availableBeliefs$ = -16				; size = 16
_L$ = 8							; size = 4
?lGetAvailableEnhancerBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetAvailableEnhancerBeliefs, COMDAT

; 2233 : {

	sub	esp, 16					; 00000010H
	push	ebx
	push	ebp
	push	esi
	push	edi

; 2234 : 	lua_createtable(L, 0, 0);

	mov	edi, DWORD PTR _L$[esp+28]
	push	0
	push	0
	push	edi
	call	_lua_createtable

; 2235 : 	const int t = lua_gettop(L);

	push	edi
	call	_lua_gettop

; 2236 : 	int idx = 1;
; 2237 : 
; 2238 : #ifdef AUI_WARNING_FIXES
; 2239 : 	const std::vector<BeliefTypes>& availableBeliefs = GC.getGame().GetGameReligions()->GetAvailableEnhancerBeliefs();
; 2240 : 	for (std::vector<BeliefTypes>::const_iterator it = availableBeliefs.begin(); it != availableBeliefs.end(); ++it)
; 2241 : #else
; 2242 : 	std::vector<BeliefTypes> availableBeliefs = GC.getGame().GetGameReligions()->GetAvailableEnhancerBeliefs();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	ebp, eax
	add	esp, 16					; 00000010H
	lea	eax, DWORD PTR _availableBeliefs$[esp+32]
	push	eax
	mov	ebx, 1
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetAvailableEnhancerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ; CvGameReligions::GetAvailableEnhancerBeliefs

; 2243 : 	for(std::vector<BeliefTypes>::iterator it = availableBeliefs.begin();

	mov	esi, DWORD PTR _availableBeliefs$[esp+36]

; 2244 : 	        it!= availableBeliefs.end(); ++it)

	cmp	esi, DWORD PTR _availableBeliefs$[esp+40]
	je	SHORT $LN1@lGetAvaila@4
$LL17@lGetAvaila@4:

; 2245 : #endif
; 2246 : 	{
; 2247 : 		const BeliefTypes eBelief = (*it);
; 2248 : 		lua_pushinteger(L, eBelief);

	mov	ecx, DWORD PTR [esi]
	push	ecx
	push	edi
	call	_lua_pushinteger

; 2249 : 		lua_rawseti(L, t, idx++);

	push	ebx
	push	ebp
	push	edi
	call	_lua_rawseti
	add	esi, 4
	add	esp, 20					; 00000014H
	inc	ebx
	cmp	esi, DWORD PTR _availableBeliefs$[esp+40]
	jne	SHORT $LL17@lGetAvaila@4

; 2244 : 	        it!= availableBeliefs.end(); ++it)

	mov	esi, DWORD PTR _availableBeliefs$[esp+36]
$LN1@lGetAvaila@4:

; 2250 : 	}
; 2251 : 
; 2252 : 	return 1;

	test	esi, esi
	je	SHORT $LN42@lGetAvaila@4
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN42@lGetAvaila@4:
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx

; 2253 : }

	add	esp, 16					; 00000010H
	ret	0
?lGetAvailableEnhancerBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetAvailableEnhancerBeliefs
_TEXT	ENDS
PUBLIC	?lGetAvailableBonusBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetAvailableBonusBeliefs
EXTRN	?GetAvailableBonusBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ:PROC ; CvGameReligions::GetAvailableBonusBeliefs
; Function compile flags: /Ogtpy
;	COMDAT ?lGetAvailableBonusBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_availableBeliefs$ = -16				; size = 16
_L$ = 8							; size = 4
?lGetAvailableBonusBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetAvailableBonusBeliefs, COMDAT

; 2256 : {

	sub	esp, 16					; 00000010H
	push	ebx
	push	ebp
	push	esi
	push	edi

; 2257 : 	lua_createtable(L, 0, 0);

	mov	edi, DWORD PTR _L$[esp+28]
	push	0
	push	0
	push	edi
	call	_lua_createtable

; 2258 : 	const int t = lua_gettop(L);

	push	edi
	call	_lua_gettop

; 2259 : 	int idx = 1;
; 2260 : 
; 2261 : #ifdef AUI_WARNING_FIXES
; 2262 : 	const std::vector<BeliefTypes>& availableBeliefs = GC.getGame().GetGameReligions()->GetAvailableBonusBeliefs();
; 2263 : 	for (std::vector<BeliefTypes>::const_iterator it = availableBeliefs.begin(); it != availableBeliefs.end(); ++it)
; 2264 : #else
; 2265 : 	std::vector<BeliefTypes> availableBeliefs = GC.getGame().GetGameReligions()->GetAvailableBonusBeliefs();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	ebp, eax
	add	esp, 16					; 00000010H
	lea	eax, DWORD PTR _availableBeliefs$[esp+32]
	push	eax
	mov	ebx, 1
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetAvailableBonusBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ; CvGameReligions::GetAvailableBonusBeliefs

; 2266 : 	for(std::vector<BeliefTypes>::iterator it = availableBeliefs.begin();

	mov	esi, DWORD PTR _availableBeliefs$[esp+36]

; 2267 : 	        it!= availableBeliefs.end(); ++it)

	cmp	esi, DWORD PTR _availableBeliefs$[esp+40]
	je	SHORT $LN1@lGetAvaila@5
$LL17@lGetAvaila@5:

; 2268 : #endif
; 2269 : 	{
; 2270 : 		const BeliefTypes eBelief = (*it);
; 2271 : 		lua_pushinteger(L, eBelief);

	mov	ecx, DWORD PTR [esi]
	push	ecx
	push	edi
	call	_lua_pushinteger

; 2272 : 		lua_rawseti(L, t, idx++);

	push	ebx
	push	ebp
	push	edi
	call	_lua_rawseti
	add	esi, 4
	add	esp, 20					; 00000014H
	inc	ebx
	cmp	esi, DWORD PTR _availableBeliefs$[esp+40]
	jne	SHORT $LL17@lGetAvaila@5

; 2267 : 	        it!= availableBeliefs.end(); ++it)

	mov	esi, DWORD PTR _availableBeliefs$[esp+36]
$LN1@lGetAvaila@5:

; 2273 : 	}
; 2274 : 
; 2275 : 	return 1;

	test	esi, esi
	je	SHORT $LN42@lGetAvaila@5
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN42@lGetAvaila@5:
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx

; 2276 : }

	add	esp, 16					; 00000010H
	ret	0
?lGetAvailableBonusBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetAvailableBonusBeliefs
_TEXT	ENDS
PUBLIC	?lGetAvailableReformationBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetAvailableReformationBeliefs
EXTRN	?GetAvailableReformationBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ:PROC ; CvGameReligions::GetAvailableReformationBeliefs
; Function compile flags: /Ogtpy
;	COMDAT ?lGetAvailableReformationBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_availableBeliefs$ = -16				; size = 16
_L$ = 8							; size = 4
?lGetAvailableReformationBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetAvailableReformationBeliefs, COMDAT

; 2279 : {

	sub	esp, 16					; 00000010H
	push	ebx
	push	ebp
	push	esi
	push	edi

; 2280 : 	lua_createtable(L, 0, 0);

	mov	edi, DWORD PTR _L$[esp+28]
	push	0
	push	0
	push	edi
	call	_lua_createtable

; 2281 : 	const int t = lua_gettop(L);

	push	edi
	call	_lua_gettop

; 2282 : 	int idx = 1;
; 2283 : 
; 2284 : #ifdef AUI_WARNING_FIXES
; 2285 : 	const std::vector<BeliefTypes>& availableBeliefs = GC.getGame().GetGameReligions()->GetAvailableReformationBeliefs();
; 2286 : 	for (std::vector<BeliefTypes>::const_iterator it = availableBeliefs.begin(); it != availableBeliefs.end(); ++it)
; 2287 : #else
; 2288 : 	std::vector<BeliefTypes> availableBeliefs = GC.getGame().GetGameReligions()->GetAvailableReformationBeliefs();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	ebp, eax
	add	esp, 16					; 00000010H
	lea	eax, DWORD PTR _availableBeliefs$[esp+32]
	push	eax
	mov	ebx, 1
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetAvailableReformationBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ; CvGameReligions::GetAvailableReformationBeliefs

; 2289 : 	for(std::vector<BeliefTypes>::iterator it = availableBeliefs.begin();

	mov	esi, DWORD PTR _availableBeliefs$[esp+36]

; 2290 : 	        it!= availableBeliefs.end(); ++it)

	cmp	esi, DWORD PTR _availableBeliefs$[esp+40]
	je	SHORT $LN1@lGetAvaila@6
$LL17@lGetAvaila@6:

; 2291 : #endif
; 2292 : 	{
; 2293 : 		const BeliefTypes eBelief = (*it);
; 2294 : 		lua_pushinteger(L, eBelief);

	mov	ecx, DWORD PTR [esi]
	push	ecx
	push	edi
	call	_lua_pushinteger

; 2295 : 		lua_rawseti(L, t, idx++);

	push	ebx
	push	ebp
	push	edi
	call	_lua_rawseti
	add	esi, 4
	add	esp, 20					; 00000014H
	inc	ebx
	cmp	esi, DWORD PTR _availableBeliefs$[esp+40]
	jne	SHORT $LL17@lGetAvaila@6

; 2290 : 	        it!= availableBeliefs.end(); ++it)

	mov	esi, DWORD PTR _availableBeliefs$[esp+36]
$LN1@lGetAvaila@6:

; 2296 : 	}
; 2297 : 
; 2298 : 	return 1;

	test	esi, esi
	je	SHORT $LN42@lGetAvaila@6
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN42@lGetAvaila@6:
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx

; 2299 : }

	add	esp, 16					; 00000010H
	ret	0
?lGetAvailableReformationBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetAvailableReformationBeliefs
_TEXT	ENDS
PUBLIC	?RegisterMembers@CvLuaGame@@SAXPAUlua_State@@@Z	; CvLuaGame::RegisterMembers
; Function compile flags: /Ogtpy
;	COMDAT ?RegisterMembers@CvLuaGame@@SAXPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?RegisterMembers@CvLuaGame@@SAXPAUlua_State@@@Z PROC	; CvLuaGame::RegisterMembers, COMDAT

; 48   : {

	push	esi

; 49   : 	Method(CanHandleAction);

	mov	esi, DWORD PTR _L$[esp]
	push	0
	push	OFFSET ?lCanHandleAction@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCanHandleAction
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221576
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 50   : 	Method(HandleAction);

	push	0
	push	OFFSET ?lHandleAction@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lHandleAction
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221577
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 51   : 	Method(UpdateScore);

	push	0
	push	OFFSET ?lUpdateScore@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lUpdateScore
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221578
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 52   : 	Method(CycleCities);

	push	0
	push	OFFSET ?lCycleCities@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCycleCities
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221579
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 53   : 	Method(CycleUnits);

	push	0
	push	OFFSET ?lCycleUnits@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCycleUnits
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221580
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 54   : 	Method(CyclePlotUnits);

	push	0
	push	OFFSET ?lCyclePlotUnits@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCyclePlotUnits
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221581
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 55   : 
; 56   : 	Method(SelectionListMove);

	push	0
	push	OFFSET ?lSelectionListMove@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSelectionListMove
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221582
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 57   : 	Method(SelectionListGameNetMessage);

	push	0
	push	OFFSET ?lSelectionListGameNetMessage@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSelectionListGameNetMessage
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221583
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 58   : 	Method(SelectedCitiesGameNetMessage);

	push	0
	push	OFFSET ?lSelectedCitiesGameNetMessage@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSelectedCitiesGameNetMessage
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221584
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 59   : 	Method(CityPushOrder);

	push	0
	push	OFFSET ?lCityPushOrder@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCityPushOrder
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221585
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 60   : 	Method(CityPurchaseUnit);

	push	0
	push	OFFSET ?lCityPurchaseUnit@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCityPurchaseUnit
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221586
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 61   : 	Method(CityPurchaseBuilding);

	push	0
	push	OFFSET ?lCityPurchaseBuilding@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCityPurchaseBuilding
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221587
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 62   : 	Method(CityPurchaseProject);

	push	0
	push	OFFSET ?lCityPurchaseProject@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCityPurchaseProject
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221588
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 63   : 
; 64   : 	Method(GetProductionPerPopulation);

	push	0
	push	OFFSET ?lGetProductionPerPopulation@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetProductionPerPopulation
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221589
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 65   : 
; 66   : 	Method(GetAdjustedPopulationPercent);

	push	0
	push	OFFSET ?lGetAdjustedPopulationPercent@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetAdjustedPopulationPercent
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221590
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 67   : 	Method(GetAdjustedLandPercent);

	push	0
	push	OFFSET ?lGetAdjustedLandPercent@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetAdjustedLandPercent
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221591
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 68   : 
; 69   : 	Method(GetUnitedNationsCountdown);

	push	0
	push	OFFSET ?lGetUnitedNationsCountdown@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetUnitedNationsCountdown
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221592
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 70   : 	Method(SetUnitedNationsCountdown);

	push	0
	push	OFFSET ?lSetUnitedNationsCountdown@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetUnitedNationsCountdown
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221593
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 71   : 
; 72   : 	Method(CountCivPlayersAlive);

	push	0
	push	OFFSET ?lCountCivPlayersAlive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCountCivPlayersAlive
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221594
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 73   : 	Method(CountCivPlayersEverAlive);

	push	0
	push	OFFSET ?lCountCivPlayersEverAlive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCountCivPlayersEverAlive
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221595
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 74   : 	Method(CountCivTeamsAlive);

	push	0
	push	OFFSET ?lCountCivTeamsAlive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCountCivTeamsAlive
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221596
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 75   : 	Method(CountCivTeamsEverAlive);

	push	0
	push	OFFSET ?lCountCivTeamsEverAlive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCountCivTeamsEverAlive
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221597
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 76   : 	Method(CountHumanPlayersAlive);

	push	0
	push	OFFSET ?lCountHumanPlayersAlive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCountHumanPlayersAlive
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221598
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 77   : 	Method(CountHumanPlayersEverAlive);

	push	0
	push	OFFSET ?lCountHumanPlayersEverAlive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCountHumanPlayersEverAlive
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221599
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 78   : 
; 79   : 	Method(CountTotalCivPower);

	push	0
	push	OFFSET ?lCountTotalCivPower@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCountTotalCivPower
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221600
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 80   : 	Method(CountTotalNukeUnits);

	push	0
	push	OFFSET ?lCountTotalNukeUnits@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCountTotalNukeUnits
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221601
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 81   : 	Method(CountKnownTechNumTeams);

	push	0
	push	OFFSET ?lCountKnownTechNumTeams@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCountKnownTechNumTeams
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221602
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 82   : 
; 83   : 	Method(GoldenAgeLength);

	push	0
	push	OFFSET ?lGoldenAgeLength@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGoldenAgeLength
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221603
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 84   : 	Method(VictoryDelay);

	push	0
	push	OFFSET ?lVictoryDelay@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lVictoryDelay
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221604
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 85   : 	Method(GetImprovementUpgradeTime);

	push	0
	push	OFFSET ?lGetImprovementUpgradeTime@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetImprovementUpgradeTime
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221605
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 86   : 	Method(CanTrainNukes);

	push	0
	push	OFFSET ?lCanTrainNukes@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCanTrainNukes
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221606
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 87   : 
; 88   : 	Method(GetCurrentEra);

	push	0
	push	OFFSET ?lGetCurrentEra@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetCurrentEra
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221607
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 89   : 
; 90   : 	Method(GetDiploResponse);

	push	0
	push	OFFSET ?lGetDiploResponse@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetDiploResponse
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221608
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 91   : 
; 92   : 	Method(GetActiveTeam);

	push	0
	push	OFFSET ?lGetActiveTeam@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetActiveTeam
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221609
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 93   : 	Method(GetActiveCivilizationType);

	push	0
	push	OFFSET ?lGetActiveCivilizationType@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetActiveCivilizationType
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221610
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 94   : 	Method(IsNetworkMultiPlayer);

	push	0
	push	OFFSET ?lIsNetworkMultiPlayer@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsNetworkMultiPlayer
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221611
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 95   : 	Method(IsGameMultiPlayer);

	push	0
	push	OFFSET ?lIsGameMultiPlayer@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsGameMultiPlayer
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221612
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 96   : 	Method(IsTeamGame);

	push	0
	push	OFFSET ?lIsTeamGame@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsTeamGame
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221613
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 97   : 
; 98   : 	Method(ReviveActivePlayer);

	push	0
	push	OFFSET ?lReviveActivePlayer@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lReviveActivePlayer
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221614
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 99   : 
; 100  : 	Method(GetNumHumanPlayers);

	push	0
	push	OFFSET ?lGetNumHumanPlayers@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumHumanPlayers
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221615
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 101  : 	Method(GetNumSequentialHumans);

	push	0
	push	OFFSET ?lGetNumSequentialHumans@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumSequentialHumans
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221616
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 102  : 	Method(GetGameTurn);

	push	0
	push	OFFSET ?lGetGameTurn@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGameTurn
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221617
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 103  : 	Method(SetGameTurn);

	push	0
	push	OFFSET ?lSetGameTurn@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetGameTurn
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221618
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 104  : 	Method(GetTurnYear);

	push	0
	push	OFFSET ?lGetTurnYear@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetTurnYear
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221619
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 105  : 	Method(GetGameTurnYear);

	push	0
	push	OFFSET ?lGetGameTurnYear@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGameTurnYear
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221620
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 106  : 	Method(GetTurnString);

	push	0
	push	OFFSET ?lGetTurnString@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetTurnString
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221621
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 107  : 
; 108  : 	Method(GetElapsedGameTurns);

	push	0
	push	OFFSET ?lGetElapsedGameTurns@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetElapsedGameTurns
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221622
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 109  : 	Method(GetMaxTurns);

	push	0
	push	OFFSET ?lGetMaxTurns@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetMaxTurns
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221623
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 110  : 	Method(SetMaxTurns);

	push	0
	push	OFFSET ?lSetMaxTurns@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetMaxTurns
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221624
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 111  : 	Method(ChangeMaxTurns);

	push	0
	push	OFFSET ?lChangeMaxTurns@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lChangeMaxTurns
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221625
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 112  : 	Method(GetMaxCityElimination);

	push	0
	push	OFFSET ?lGetMaxCityElimination@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetMaxCityElimination
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221626
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 113  : 	Method(SetMaxCityElimination);

	push	0
	push	OFFSET ?lSetMaxCityElimination@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetMaxCityElimination
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221627
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 114  : 	Method(GetNumAdvancedStartPoints);

	push	0
	push	OFFSET ?lGetNumAdvancedStartPoints@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumAdvancedStartPoints
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221628
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 115  : 	Method(SetNumAdvancedStartPoints);

	push	0
	push	OFFSET ?lSetNumAdvancedStartPoints@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetNumAdvancedStartPoints
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221629
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 116  : 	Method(GetStartTurn);

	push	0
	push	OFFSET ?lGetStartTurn@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetStartTurn
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221630
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 117  : 	Method(GetWinningTurn);

	push	0
	push	OFFSET ?lGetWinningTurn@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetWinningTurn
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221631
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 118  : 	Method(GetStartYear);

	push	0
	push	OFFSET ?lGetStartYear@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetStartYear
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221632
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 119  : 	Method(SetStartYear);

	push	0
	push	OFFSET ?lSetStartYear@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetStartYear
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221633
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 120  : 	Method(GetEstimateEndTurn);

	push	0
	push	OFFSET ?lGetEstimateEndTurn@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetEstimateEndTurn
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221634
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 121  : 	Method(SetEstimateEndTurn);

	push	0
	push	OFFSET ?lSetEstimateEndTurn@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetEstimateEndTurn
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221635
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 122  : 	Method(GetTurnSlice);

	push	0
	push	OFFSET ?lGetTurnSlice@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetTurnSlice
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221636
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 123  : 	Method(GetMinutesPlayed);

	push	0
	push	OFFSET ?lGetMinutesPlayed@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetMinutesPlayed
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221637
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 124  : 	Method(GetTargetScore);

	push	0
	push	OFFSET ?lGetTargetScore@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetTargetScore
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221638
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 125  : 	Method(SetTargetScore);

	push	0
	push	OFFSET ?lSetTargetScore@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetTargetScore
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221639
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 126  : 
; 127  : 	Method(IsStaticTutorialActive);

	push	0
	push	OFFSET ?lIsStaticTutorialActive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsStaticTutorialActive
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221640
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 128  : 	Method(SetStaticTutorialActive);

	push	0
	push	OFFSET ?lSetStaticTutorialActive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetStaticTutorialActive
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221641
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 129  : 	Method(IsEverRightClickMoved);

	push	0
	push	OFFSET ?lIsEverRightClickMoved@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsEverRightClickMoved
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221642
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 130  : 	Method(SetEverRightClickMoved);

	push	0
	push	OFFSET ?lSetEverRightClickMoved@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetEverRightClickMoved
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221643
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 131  : 
; 132  : 	Method(IsTutorialLogging);

	push	0
	push	OFFSET ?lIsTutorialLogging@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsTutorialLogging
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221644
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 133  : 	Method(IsTutorialDebugging);

	push	0
	push	OFFSET ?lIsTutorialDebugging@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsTutorialDebugging
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221645
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 134  : 	Method(GetTutorialLevel);

	push	0
	push	OFFSET ?lGetTutorialLevel@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetTutorialLevel
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221646
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 135  : 
; 136  : 	Method(HasAdvisorMessageBeenSeen);

	push	0
	push	OFFSET ?lHasAdvisorMessageBeenSeen@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lHasAdvisorMessageBeenSeen
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221647
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 137  : 	Method(SetAdvisorMessageHasBeenSeen);

	push	0
	push	OFFSET ?lSetAdvisorMessageHasBeenSeen@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetAdvisorMessageHasBeenSeen
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221648
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 138  : 
; 139  : 	Method(SetAdvisorBadAttackInterrupt);

	push	0
	push	OFFSET ?lSetAdvisorBadAttackInterrupt@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetAdvisorBadAttackInterrupt
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221649
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 140  : 	Method(SetAdvisorCityAttackInterrupt);

	push	0
	push	OFFSET ?lSetAdvisorCityAttackInterrupt@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetAdvisorCityAttackInterrupt
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221650
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 141  : 
; 142  : 	Method(GetAllowRClickMovementWhileScrolling);

	push	0
	push	OFFSET ?lGetAllowRClickMovementWhileScrolling@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetAllowRClickMovementWhileScrolling
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221651
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 143  : 
; 144  : 	Method(GetNumGameTurnActive);

	push	0
	push	OFFSET ?lGetNumGameTurnActive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumGameTurnActive
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221652
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 145  : 	Method(CountNumHumanGameTurnActive);

	push	0
	push	OFFSET ?lCountNumHumanGameTurnActive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCountNumHumanGameTurnActive
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221653
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 146  : 	Method(GetNumCities);

	push	0
	push	OFFSET ?lGetNumCities@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumCities
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221654
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 147  : 	Method(GetNumCivCities);

	push	0
	push	OFFSET ?lGetNumCivCities@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumCivCities
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221655
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 148  : 	Method(GetTotalPopulation);

	push	0
	push	OFFSET ?lGetTotalPopulation@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetTotalPopulation
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221656
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 149  : 
; 150  : 	Method(GetNoNukesCount);

	push	0
	push	OFFSET ?lGetNoNukesCount@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNoNukesCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221657
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 151  : 	Method(IsNoNukes);

	push	0
	push	OFFSET ?lIsNoNukes@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsNoNukes
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221658
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 152  : 	Method(ChangeNoNukesCount);

	push	0
	push	OFFSET ?lChangeNoNukesCount@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lChangeNoNukesCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221659
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 153  : 	Method(GetNukesExploded);

	push	0
	push	OFFSET ?lGetNukesExploded@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNukesExploded
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221660
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 154  : 	Method(ChangeNukesExploded);

	push	0
	push	OFFSET ?lChangeNukesExploded@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lChangeNukesExploded
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221661
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 155  : 
; 156  : 	Method(GetMaxPopulation);

	push	0
	push	OFFSET ?lGetMaxPopulation@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetMaxPopulation
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221662
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 157  : 	Method(GetInitPopulation);

	push	0
	push	OFFSET ?lGetInitPopulation@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetInitPopulation
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221663
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 158  : 	Method(GetInitLand);

	push	0
	push	OFFSET ?lGetInitLand@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetInitLand
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221664
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 159  : 	Method(GetInitTech);

	push	0
	push	OFFSET ?lGetInitTech@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetInitTech
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221665
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 160  : 	Method(GetInitWonders);

	push	0
	push	OFFSET ?lGetInitWonders@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetInitWonders
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221666
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 161  : 	Method(GetNumWorldWonders);

	push	0
	push	OFFSET ?lGetNumWorldWonders@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumWorldWonders
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221667
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 162  : 
; 163  : 	Method(GetAIAutoPlay);

	push	0
	push	OFFSET ?lGetAIAutoPlay@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetAIAutoPlay
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221668
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 164  : 	Method(SetAIAutoPlay);

	push	0
	push	OFFSET ?lSetAIAutoPlay@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetAIAutoPlay
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221669
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 165  : 
; 166  : 	Method(IsScoreDirty);

	push	0
	push	OFFSET ?lIsScoreDirty@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsScoreDirty
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221670
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 167  : 	Method(SetScoreDirty);

	push	0
	push	OFFSET ?lSetScoreDirty@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetScoreDirty
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221671
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 168  : 	Method(IsCircumnavigated);

	push	0
	push	OFFSET ?lIsCircumnavigated@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsCircumnavigated
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221672
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 169  : 	Method(MakeCircumnavigated);

	push	0
	push	OFFSET ?lMakeCircumnavigated@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lMakeCircumnavigated
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221673
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 170  : 
; 171  : 	Method(DoFromUIDiploEvent);

	push	0
	push	OFFSET ?lDoFromUIDiploEvent@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lDoFromUIDiploEvent
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221674
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 172  : 
; 173  : 	Method(IsDebugMode);

	push	0
	push	OFFSET ?lIsDebugMode@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsDebugMode
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221675
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 174  : 	Method(SetDebugMode);

	push	0
	push	OFFSET ?lSetDebugMode@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetDebugMode
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221676
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 175  : 	Method(ToggleDebugMode);

	push	0
	push	OFFSET ?lToggleDebugMode@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lToggleDebugMode
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221677
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 176  : 	Method(UpdateFOW);

	push	0
	push	OFFSET ?lUpdateFOW@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lUpdateFOW
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221678
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 177  : 
; 178  : 	Method(GetPitbossTurnTime);

	push	0
	push	OFFSET ?lGetPitbossTurnTime@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetPitbossTurnTime
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221679
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 179  : 	Method(SetPitbossTurnTime);

	push	0
	push	OFFSET ?lSetPitbossTurnTime@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetPitbossTurnTime
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221680
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 180  : 	Method(IsHotSeat);

	push	0
	push	OFFSET ?lIsHotSeat@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsHotSeat
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221681
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 181  : 	Method(IsPbem);

	push	0
	push	OFFSET ?lIsPbem@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsPbem
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221682
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 182  : 	Method(IsPitboss);

	push	0
	push	OFFSET ?lIsPitboss@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsPitboss
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221683
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 183  : 	Method(IsSimultaneousTeamTurns);

	push	0
	push	OFFSET ?lIsSimultaneousTeamTurns@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsSimultaneousTeamTurns
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221684
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 184  : 
; 185  : 	Method(IsFinalInitialized);

	push	0
	push	OFFSET ?lIsFinalInitialized@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsFinalInitialized
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221685
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 186  : 
; 187  : 	Method(GetActivePlayer);

	push	0
	push	OFFSET ?lGetActivePlayer@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetActivePlayer
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221686
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 188  : 	Method(SetActivePlayer);

	push	0
	push	OFFSET ?lSetActivePlayer@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetActivePlayer
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221687
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 189  : 	Method(GetPausePlayer);

	push	0
	push	OFFSET ?lGetPausePlayer@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetPausePlayer
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221688
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 190  : 	Method(SetPausePlayer);

	push	0
	push	OFFSET ?lSetPausePlayer@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetPausePlayer
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221689
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 191  : 	Method(IsPaused);

	push	0
	push	OFFSET ?lIsPaused@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsPaused
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221690
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 192  : 	Method(GetBestLandUnit);

	push	0
	push	OFFSET ?lGetBestLandUnit@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetBestLandUnit
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221691
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 193  : 	Method(GetBestLandUnitCombat);

	push	0
	push	OFFSET ?lGetBestLandUnitCombat@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetBestLandUnitCombat
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221692
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 194  : 
; 195  : 	Method(GetFaithCost);

	push	0
	push	OFFSET ?lGetFaithCost@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetFaithCost
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221693
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 196  : 
; 197  : 	Method(GetWinner);

	push	0
	push	OFFSET ?lGetWinner@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetWinner
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221694
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 198  : 	Method(GetVictory);

	push	0
	push	OFFSET ?lGetVictory@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetVictory
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221695
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 199  : 	Method(SetWinner);

	push	0
	push	OFFSET ?lSetWinner@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetWinner
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221696
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 200  : 	Method(GetGameState);

	push	0
	push	OFFSET ?lGetGameState@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGameState
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221697
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 201  : 	Method(SetGameState);

	push	0
	push	OFFSET ?lSetGameState@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetGameState
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221698
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 202  : 
; 203  : 	Method(GetVotesNeededForDiploVictory);

	push	0
	push	OFFSET ?lGetVotesNeededForDiploVictory@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetVotesNeededForDiploVictory
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221699
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 204  : 	Method(IsUnitedNationsActive);

	push	0
	push	OFFSET ?lIsUnitedNationsActive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsUnitedNationsActive
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221700
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 205  : 
; 206  : 	Method(GetNumVictoryVotesTallied);

	push	0
	push	OFFSET ?lGetNumVictoryVotesTallied@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumVictoryVotesTallied
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221701
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 207  : 	Method(GetVoteCast);

	push	0
	push	OFFSET ?lGetVoteCast@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetVoteCast
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221702
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 208  : 	Method(GetPreviousVoteCast);

	push	0
	push	OFFSET ?lGetPreviousVoteCast@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetPreviousVoteCast
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221703
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 209  : 	Method(GetNumVotesForTeam);

	push	0
	push	OFFSET ?lGetNumVotesForTeam@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumVotesForTeam
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221704
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 210  : 	Method(SetNumVotesForTeam);

	push	0
	push	OFFSET ?lSetNumVotesForTeam@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetNumVotesForTeam
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221705
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 211  : 	Method(ChangeNumVotesForTeam);

	push	0
	push	OFFSET ?lChangeNumVotesForTeam@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lChangeNumVotesForTeam
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221706
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 212  : 
; 213  : 	Method(GetHandicapType);

	push	0
	push	OFFSET ?lGetHandicapType@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetHandicapType
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221707
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 214  : 	Method(GetCalendar);

	push	0
	push	OFFSET ?lGetCalendar@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetCalendar
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221708
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 215  : 	Method(GetStartEra);

	push	0
	push	OFFSET ?lGetStartEra@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetStartEra
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221709
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 216  : 	Method(GetGameSpeedType);

	push	0
	push	OFFSET ?lGetGameSpeedType@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGameSpeedType
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221710
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 217  : 	Method(GetRankPlayer);

	push	0
	push	OFFSET ?lGetRankPlayer@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetRankPlayer
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221711
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 218  : 	Method(GetPlayerRank);

	push	0
	push	OFFSET ?lGetPlayerRank@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetPlayerRank
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221712
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 219  : 	Method(GetPlayerScore);

	push	0
	push	OFFSET ?lGetPlayerScore@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetPlayerScore
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221713
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 220  : 	Method(GetRankTeam);

	push	0
	push	OFFSET ?lGetRankTeam@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetRankTeam
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221714
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 221  : 	Method(GetTeamRank);

	push	0
	push	OFFSET ?lGetTeamRank@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetTeamRank
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221715
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 222  : 	Method(GetTeamScore);

	push	0
	push	OFFSET ?lGetTeamScore@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetTeamScore
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221716
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 223  : 	Method(IsOption);

	push	0
	push	OFFSET ?lIsOption@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsOption
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221717
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 224  : 	Method(SetOption);

	push	0
	push	OFFSET ?lSetOption@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetOption
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221718
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 225  : 	Method(IsMPOption);

	push	0
	push	OFFSET ?lIsMPOption@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsMPOption
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221719
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 226  : 	Method(GetUnitCreatedCount);

	push	0
	push	OFFSET ?lGetUnitCreatedCount@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetUnitCreatedCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221720
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 227  : 	Method(GetUnitClassCreatedCount);

	push	0
	push	OFFSET ?lGetUnitClassCreatedCount@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetUnitClassCreatedCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221721
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 228  : 	Method(IsUnitClassMaxedOut);

	push	0
	push	OFFSET ?lIsUnitClassMaxedOut@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsUnitClassMaxedOut
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221722
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 229  : 	Method(GetBuildingClassCreatedCount);

	push	0
	push	OFFSET ?lGetBuildingClassCreatedCount@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetBuildingClassCreatedCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221723
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 230  : 	Method(IsBuildingClassMaxedOut);

	push	0
	push	OFFSET ?lIsBuildingClassMaxedOut@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsBuildingClassMaxedOut
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221724
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 231  : 
; 232  : 	Method(GetProjectCreatedCount);

	push	0
	push	OFFSET ?lGetProjectCreatedCount@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetProjectCreatedCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221725
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 233  : 	Method(IsProjectMaxedOut);

	push	0
	push	OFFSET ?lIsProjectMaxedOut@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsProjectMaxedOut
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221726
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 234  : 
; 235  : 	Method(IsVictoryValid);

	push	0
	push	OFFSET ?lIsVictoryValid@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsVictoryValid
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221727
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 236  : 	Method(SetVictoryValid);

	push	0
	push	OFFSET ?lSetVictoryValid@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetVictoryValid
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221728
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 237  : 	Method(IsSpecialUnitValid);

	push	0
	push	OFFSET ?lIsSpecialUnitValid@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsSpecialUnitValid
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221729
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 238  : 	Method(MakeSpecialUnitValid);

	push	0
	push	OFFSET ?lMakeSpecialUnitValid@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lMakeSpecialUnitValid
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221730
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 239  : 	Method(IsNukesValid);

	push	0
	push	OFFSET ?lIsNukesValid@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsNukesValid
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221731
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 240  : 	Method(MakeNukesValid);

	push	0
	push	OFFSET ?lMakeNukesValid@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lMakeNukesValid
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221732
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 241  : 	Method(IsInAdvancedStart);

	push	0
	push	OFFSET ?lIsInAdvancedStart@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsInAdvancedStart
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221733
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 242  : 
; 243  : 	Method(SetName);

	push	0
	push	OFFSET ?lSetName@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetName
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221734
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 244  : 	Method(GetName);

	push	0
	push	OFFSET ?lGetName@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetName
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221735
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 245  : 	Method(Rand);

	push	0
	push	OFFSET ?lRand@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lRand
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221736
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 246  : 	Method(CalculateSyncChecksum);

	push	0
	push	OFFSET ?lCalculateSyncChecksum@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCalculateSyncChecksum
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221737
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 247  : 	Method(CalculateOptionsChecksum);

	push	0
	push	OFFSET ?lCalculateOptionsChecksum@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCalculateOptionsChecksum
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221738
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 248  : 
; 249  : 	Method(GetReplayMessage);

	push	0
	push	OFFSET ?lGetReplayMessage@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetReplayMessage
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221739
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 250  : 	Method(GetReplayMessages);

	push	0
	push	OFFSET ?lGetReplayMessages@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetReplayMessages
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221740
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 251  : 	Method(GetNumReplayMessages);

	push	0
	push	OFFSET ?lGetNumReplayMessages@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumReplayMessages
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221741
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 252  : 	Method(GetReplayInfo);

	push	0
	push	OFFSET ?lGetReplayInfo@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetReplayInfo
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221742
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 253  : 
; 254  : 	Method(SaveReplay);

	push	0
	push	OFFSET ?lSaveReplay@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSaveReplay
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221743
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 255  : 
; 256  : 	Method(AddPlayer);

	push	0
	push	OFFSET ?lAddPlayer@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lAddPlayer
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221744
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 257  : 
; 258  : 	Method(SetPlotExtraYield);

	push	0
	push	OFFSET ?lSetPlotExtraYield@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetPlotExtraYield
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221745
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 259  : 	Method(ChangePlotExtraCost);

	push	0
	push	OFFSET ?lChangePlotExtraCost@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lChangePlotExtraCost
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221746
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 260  : 
; 261  : 	Method(IsCivEverActive);

	push	0
	push	OFFSET ?lIsCivEverActive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsCivEverActive
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221747
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 262  : 	Method(IsLeaderEverActive);

	push	0
	push	OFFSET ?lIsLeaderEverActive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsLeaderEverActive
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221748
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 263  : 	Method(IsUnitEverActive);

	push	0
	push	OFFSET ?lIsUnitEverActive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsUnitEverActive
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221749
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 264  : 	Method(IsBuildingEverActive);

	push	0
	push	OFFSET ?lIsBuildingEverActive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsBuildingEverActive
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221750
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 265  : 
; 266  : 	Method(CanDoControl);

	push	0
	push	OFFSET ?lCanDoControl@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCanDoControl
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221751
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 267  : 	Method(DoControl);

	push	0
	push	OFFSET ?lDoControl@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lDoControl
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221752
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 268  : 
; 269  : 	Method(DoMinorPledgeProtection);

	push	0
	push	OFFSET ?lDoMinorPledgeProtection@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lDoMinorPledgeProtection
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221753
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 270  : 	Method(DoMinorGoldGift);

	push	0
	push	OFFSET ?lDoMinorGoldGift@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lDoMinorGoldGift
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221754
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 271  : 	Method(DoMinorGiftGold);

	push	0
	push	OFFSET ?lDoMinorGiftGold@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lDoMinorGiftGold
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221755
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 272  : 	Method(DoMinorGiftTileImprovement);

	push	0
	push	OFFSET ?lDoMinorGiftTileImprovement@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lDoMinorGiftTileImprovement
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221756
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 273  : 	Method(DoMinorBullyGold);

	push	0
	push	OFFSET ?lDoMinorBullyGold@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lDoMinorBullyGold
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221757
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 274  : 	Method(DoMinorBullyUnit);

	push	0
	push	OFFSET ?lDoMinorBullyUnit@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lDoMinorBullyUnit
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221758
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 275  : 	Method(DoMinorBuyout);

	push	0
	push	OFFSET ?lDoMinorBuyout@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lDoMinorBuyout
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221759
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 276  : 
; 277  : 	Method(GetBestWondersPlayer);

	push	0
	push	OFFSET ?lGetBestWondersPlayer@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetBestWondersPlayer
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221760
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 278  : 	Method(GetBestPoliciesPlayer);

	push	0
	push	OFFSET ?lGetBestPoliciesPlayer@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetBestPoliciesPlayer
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221761
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 279  : 	Method(GetBestGreatPeoplePlayer);

	push	0
	push	OFFSET ?lGetBestGreatPeoplePlayer@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetBestGreatPeoplePlayer
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221762
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 280  : 
; 281  : 	Method(IsEverAttackedTutorial);

	push	0
	push	OFFSET ?lIsEverAttackedTutorial@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsEverAttackedTutorial
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221763
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 282  : 
; 283  : 	Method(GameplayDiplomacyAILeaderMessage);

	push	0
	push	OFFSET ?lGameplayDiplomacyAILeaderMessage@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGameplayDiplomacyAILeaderMessage
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221764
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 284  : 
; 285  : 	Method(GetResourceUsageType);

	push	0
	push	OFFSET ?lGetResourceUsageType@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetResourceUsageType
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221765
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 286  : 
; 287  : 	Method(GetNumResourceRequiredForUnit);

	push	0
	push	OFFSET ?lGetNumResourceRequiredForUnit@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumResourceRequiredForUnit
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221766
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 288  : 	Method(GetNumResourceRequiredForBuilding);

	push	0
	push	OFFSET ?lGetNumResourceRequiredForBuilding@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumResourceRequiredForBuilding
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221767
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 289  : 
; 290  : 	Method(IsCombatWarned);

	push	0
	push	OFFSET ?lIsCombatWarned@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsCombatWarned
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221768
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 291  : 	Method(SetCombatWarned);

	push	0
	push	OFFSET ?lSetCombatWarned@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetCombatWarned
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221769
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 292  : 
; 293  : 	Method(GetAdvisorCounsel);

	push	0
	push	OFFSET ?lGetAdvisorCounsel@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetAdvisorCounsel
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221770
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 294  : 	Method(SetAdvisorRecommenderCity);

	push	0
	push	OFFSET ?lSetAdvisorRecommenderCity@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetAdvisorRecommenderCity
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221771
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 295  : 
; 296  : 	Method(IsUnitRecommended);

	push	0
	push	OFFSET ?lIsUnitRecommended@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsUnitRecommended
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221772
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 297  : 	Method(IsBuildingRecommended);

	push	0
	push	OFFSET ?lIsBuildingRecommended@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsBuildingRecommended
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221773
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 298  : 	Method(IsProjectRecommended);

	push	0
	push	OFFSET ?lIsProjectRecommended@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsProjectRecommended
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221774
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 299  : 
; 300  : 	Method(SetAdvisorRecommenderTech);

	push	0
	push	OFFSET ?lSetAdvisorRecommenderTech@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetAdvisorRecommenderTech
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221775
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 301  : 	Method(IsTechRecommended);

	push	0
	push	OFFSET ?lIsTechRecommended@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsTechRecommended
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221776
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 302  : 
; 303  : 	Method(GetVariableCitySizeFromPopulation);

	push	0
	push	OFFSET ?lGetVariableCitySizeFromPopulation@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetVariableCitySizeFromPopulation
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221777
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 304  : 
; 305  : 	Method(GetResearchAgreementCost);

	push	0
	push	OFFSET ?lGetResearchAgreementCost@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetResearchAgreementCost
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221778
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 306  : 
; 307  : 	Method(GetCustomOption);

	push	0
	push	OFFSET ?lGetCustomOption@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetCustomOption
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221779
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 308  : 
; 309  : 	Method(GetNumCitiesPolicyCostMod);

	push	0
	push	OFFSET ?lGetNumCitiesPolicyCostMod@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumCitiesPolicyCostMod
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221780
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 310  : 	Method(GetNumCitiesTechCostMod);

	push	0
	push	OFFSET ?lGetNumCitiesTechCostMod@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumCitiesTechCostMod
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221781
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 311  : 
; 312  : 	Method(GetBuildingYieldChange);

	push	0
	push	OFFSET ?lGetBuildingYieldChange@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetBuildingYieldChange
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221782
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 313  : 	Method(GetBuildingYieldModifier);

	push	0
	push	OFFSET ?lGetBuildingYieldModifier@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetBuildingYieldModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221783
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 314  : 
; 315  : 	Method(GetWorldNumCitiesUnhappinessPercent);

	push	0
	push	OFFSET ?lGetWorldNumCitiesUnhappinessPercent@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetWorldNumCitiesUnhappinessPercent
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221784
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 316  : 
; 317  : 	Method(GetDealDuration);

	push	0
	push	OFFSET ?lGetDealDuration@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetDealDuration
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221785
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 318  : 	Method(GetPeaceDuration);

	push	0
	push	OFFSET ?lGetPeaceDuration@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetPeaceDuration
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221786
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 319  : 
; 320  : 	Method(GetUnitUpgradesTo);

	push	0
	push	OFFSET ?lGetUnitUpgradesTo@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetUnitUpgradesTo
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221787
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 321  : 
; 322  : 	Method(GetCombatPrediction);

	push	0
	push	OFFSET ?lGetCombatPrediction@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetCombatPrediction
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221788
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 323  : 
; 324  : 	Method(GetTimeString);

	push	0
	push	OFFSET ?lGetTimeString@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetTimeString
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221789
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 325  : 
; 326  : 	Method(GetMinimumFaithNextPantheon);

	push	0
	push	OFFSET ?lGetMinimumFaithNextPantheon@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetMinimumFaithNextPantheon
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221790
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 327  : 	Method(SetMinimumFaithNextPantheon);

	push	0
	push	OFFSET ?lSetMinimumFaithNextPantheon@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetMinimumFaithNextPantheon
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221791
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 328  : 
; 329  : 	Method(GetAvailablePantheonBeliefs);

	push	0
	push	OFFSET ?lGetAvailablePantheonBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetAvailablePantheonBeliefs
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221792
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 330  : 	Method(GetAvailableFounderBeliefs);

	push	0
	push	OFFSET ?lGetAvailableFounderBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetAvailableFounderBeliefs
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221793
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 331  : 	Method(GetAvailableFollowerBeliefs);

	push	0
	push	OFFSET ?lGetAvailableFollowerBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetAvailableFollowerBeliefs
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221794
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 332  : 	Method(GetAvailableEnhancerBeliefs);

	push	0
	push	OFFSET ?lGetAvailableEnhancerBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetAvailableEnhancerBeliefs
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221795
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 333  : 	Method(GetAvailableBonusBeliefs);

	push	0
	push	OFFSET ?lGetAvailableBonusBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetAvailableBonusBeliefs
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221796
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 334  : 	Method(GetAvailableReformationBeliefs);

	push	0
	push	OFFSET ?lGetAvailableReformationBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetAvailableReformationBeliefs
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221797
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 335  : 
; 336  : 	Method(GetNumFollowers);

	push	0
	push	OFFSET ?lGetNumFollowers@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumFollowers
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221798
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 337  : 	Method(GetNumCitiesFollowing);

	push	0
	push	OFFSET ?lGetNumCitiesFollowing@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumCitiesFollowing
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221799
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 338  : 
; 339  : 	Method(GetBeliefsInReligion);

	push	0
	push	OFFSET ?lGetBeliefsInReligion@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetBeliefsInReligion
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221800
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 340  : 	Method(GetNumReligionsStillToFound);

	push	0
	push	OFFSET ?lGetNumReligionsStillToFound@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumReligionsStillToFound
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221801
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 341  : 	Method(GetNumReligionsFounded);

	push	0
	push	OFFSET ?lGetNumReligionsFounded@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumReligionsFounded
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221802
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 342  : 	Method(GetHolyCityForReligion);

	push	0
	push	OFFSET ?lGetHolyCityForReligion@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetHolyCityForReligion
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221803
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 343  : 	Method(GetReligionName);

	push	0
	push	OFFSET ?lGetReligionName@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetReligionName
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221804
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 344  : 	Method(GetFounderBenefitsReligion);

	push	0
	push	OFFSET ?lGetFounderBenefitsReligion@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetFounderBenefitsReligion
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221805
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 345  : 
; 346  : 	Method(FoundPantheon);

	push	0
	push	OFFSET ?lFoundPantheon@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lFoundPantheon
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221806
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 347  : 	Method(FoundReligion);

	push	0
	push	OFFSET ?lFoundReligion@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lFoundReligion
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221807
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 348  : 	Method(EnhanceReligion);

	push	0
	push	OFFSET ?lEnhanceReligion@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lEnhanceReligion
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221808
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 349  : 	Method(SetHolyCity);

	push	0
	push	OFFSET ?lSetHolyCity@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetHolyCity
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221809
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 350  : 	Method(GetFounder);

	push	0
	push	OFFSET ?lGetFounder@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetFounder
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221810
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 351  : 	Method(SetFounder);

	push	0
	push	OFFSET ?lSetFounder@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetFounder
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221811
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 352  : 
; 353  : 	Method(GetTurnsBetweenMinorCivElections);

	push	0
	push	OFFSET ?lGetTurnsBetweenMinorCivElections@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetTurnsBetweenMinorCivElections
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221812
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 354  : 	Method(GetTurnsUntilMinorCivElection);

	push	0
	push	OFFSET ?lGetTurnsUntilMinorCivElection@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetTurnsUntilMinorCivElection
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221813
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 355  : 
; 356  : 	Method(GetNumActiveLeagues);

	push	0
	push	OFFSET ?lGetNumActiveLeagues@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumActiveLeagues
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221814
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 357  : 	Method(GetNumLeaguesEverFounded);

	push	0
	push	OFFSET ?lGetNumLeaguesEverFounded@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumLeaguesEverFounded
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221815
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 358  : 	Method(GetLeague);

	push	0
	push	OFFSET ?lGetLeague@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetLeague
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221816
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 359  : 	Method(GetActiveLeague);

	push	0
	push	OFFSET ?lGetActiveLeague@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetActiveLeague
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221817
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 360  : 
; 361  : 	Method(IsProcessingMessages);

	push	0
	push	OFFSET ?lIsProcessingMessages@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsProcessingMessages
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221818
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 362  : 
; 363  : 	Method(GetGreatWorkTooltip);

	push	0
	push	OFFSET ?lGetGreatWorkTooltip@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGreatWorkTooltip
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221819
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 364  : 	Method(GetGreatWorkName);

	push	0
	push	OFFSET ?lGetGreatWorkName@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGreatWorkName
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221820
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 365  : 	Method(GetGreatWorkType);

	push	0
	push	OFFSET ?lGetGreatWorkType@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGreatWorkType
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221821
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 366  : 	Method(GetGreatWorkClass);

	push	0
	push	OFFSET ?lGetGreatWorkClass@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGreatWorkClass
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221822
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 367  : 	Method(GetGreatWorkArtist);

	push	0
	push	OFFSET ?lGetGreatWorkArtist@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGreatWorkArtist
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221823
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 368  : 	Method(GetGreatWorkEra);

	push	0
	push	OFFSET ?lGetGreatWorkEra@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGreatWorkEra
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221824
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 369  : 	Method(GetGreatWorkEraAbbreviation);

	push	0
	push	OFFSET ?lGetGreatWorkEraAbbreviation@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGreatWorkEraAbbreviation
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221825
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 370  : 	Method(GetGreatWorkEraShort);

	push	0
	push	OFFSET ?lGetGreatWorkEraShort@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGreatWorkEraShort
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221826
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 371  : 	Method(GetGreatWorkCreator);

	push	0
	push	OFFSET ?lGetGreatWorkCreator@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGreatWorkCreator
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221827
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 372  : 	Method(GetGreatWorkController);

	push	0
	push	OFFSET ?lGetGreatWorkController@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGreatWorkController
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221828
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 373  : 	Method(GetGreatWorkCurrentThemingBonus);

	push	0
	push	OFFSET ?lGetGreatWorkCurrentThemingBonus@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGreatWorkCurrentThemingBonus
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221829
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 374  : 	Method(GetArtifactName);

	push	0
	push	OFFSET ?lGetArtifactName@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetArtifactName
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221830
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 375  : 
; 376  : 	Method(GetNumFreePolicies);

	push	0
	push	OFFSET ?lGetNumFreePolicies@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumFreePolicies
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221831
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 377  : 
; 378  : 	Method(GetLongestCityConnectionPlots);

	push	0
	push	OFFSET ?lGetLongestCityConnectionPlots@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetLongestCityConnectionPlots
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221832
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 379  : 
; 380  : 	Method(SelectedUnit_SpeculativePopupTradeRoute_Display);

	push	0
	push	OFFSET ?lSelectedUnit_SpeculativePopupTradeRoute_Display@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSelectedUnit_SpeculativePopupTradeRoute_Display
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221833
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 381  : 	Method(SelectedUnit_SpeculativePopupTradeRoute_Hide);

	push	0
	push	OFFSET ?lSelectedUnit_SpeculativePopupTradeRoute_Hide@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSelectedUnit_SpeculativePopupTradeRoute_Hide
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221834
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 382  : 	Method(MouseoverUnit);

	push	0
	push	OFFSET ?lMouseoverUnit@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lMouseoverUnit
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221835
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 383  : 
; 384  : 	Method(GetNumArchaeologySites);

	push	0
	push	OFFSET ?lGetNumArchaeologySites@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumArchaeologySites
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221836
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 385  : 	Method(GetNumHiddenArchaeologySites);

	push	0
	push	OFFSET ?lGetNumHiddenArchaeologySites@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumHiddenArchaeologySites
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG221837
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield
	add	esp, 24					; 00000018H
	pop	esi

; 386  : }

	ret	0
?RegisterMembers@CvLuaGame@@SAXPAUlua_State@@@Z ENDP	; CvLuaGame::RegisterMembers
_TEXT	ENDS
END
