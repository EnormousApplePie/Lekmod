; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	c:\Users\EnormousApplePie\Desktop\Cleanup (v1)\Lekmod Files\Lekmod DLL versions\v30\LEKMOD_DLL\CvGameCoreDLL_Expansion2\CvAchievementUnlocker.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?NO_QUEST_DATA@CvMinorCivQuest@@2HB		; CvMinorCivQuest::NO_QUEST_DATA
PUBLIC	?NO_TURN@CvMinorCivQuest@@2HB			; CvMinorCivQuest::NO_TURN
PUBLIC	?ms_iNumImprovementsPillagedPerTurn@CvAchievementUnlocker@@0HA ; CvAchievementUnlocker::ms_iNumImprovementsPillagedPerTurn
_BSS	SEGMENT
?ms_iNumImprovementsPillagedPerTurn@CvAchievementUnlocker@@0HA DD 01H DUP (?) ; CvAchievementUnlocker::ms_iNumImprovementsPillagedPerTurn
_BSS	ENDS
CONST	SEGMENT
$SG218693 DB	'LEADER_ALEXANDER', 00H
	ORG $+3
$SG218732 DB	'BELIEF_PAPAL_PRIMACY', 00H
	ORG $+3
$SG218758 DB	'CIVILIZATION_ETHIOPIA', 00H
	ORG $+2
$SG218761 DB	'UNIT_PROPHET', 00H
	ORG $+3
$SG218773 DB	'CIVILIZATION_CARTHAGE', 00H
	ORG $+2
$SG218776 DB	'CIVILIZATION_ROME', 00H
	ORG $+2
$SG218779 DB	'UNIT_CARTHAGINIAN_FOREST_ELEPHANT', 00H
	ORG $+2
$SG218795 DB	'CIVILIZATION_BYZANTIUM', 00H
	ORG $+1
$SG218798 DB	'CIVILIZATION_GREECE', 00H
$SG218801 DB	'UNIT_BYZANTINE_DROMON', 00H
	ORG $+2
$SG218809 DB	'UNIT_SKY_FORTRESS', 00H
	ORG $+2
$SG218828 DB	'CIVILIZATION_SWEDEN', 00H
$SG218831 DB	'UNIT_GREAT_GENERAL', 00H
	ORG $+1
$SG218834 DB	'UNIT_SWEDISH_HAKKAPELIITTA', 00H
	ORG $+1
$SG218862 DB	'BUILDING_COLOSSUS', 00H
	ORG $+2
$SG218865 DB	'BUILDING_PETRA', 00H
	ORG $+1
$SG218868 DB	'BUILDING_CARAVANSARY', 00H
	ORG $+3
$SG218871 DB	'BUILDING_HARBOR', 00H
$SG92492 DB	'b103d2e0-3aab-40d7-a2f3-375d2eabfcaf', 00H
	ORG $+3
_CIV5_XP1_SCENARIO3_MODID DD FLAT:$SG92492
CONST	ENDS
;	COMDAT ?NO_TURN@CvMinorCivQuest@@2HB
CONST	SEGMENT
?NO_TURN@CvMinorCivQuest@@2HB DD 0ffffffffH		; CvMinorCivQuest::NO_TURN
CONST	ENDS
;	COMDAT ?NO_QUEST_DATA@CvMinorCivQuest@@2HB
CONST	SEGMENT
?NO_QUEST_DATA@CvMinorCivQuest@@2HB DD 0ffffffffH	; CvMinorCivQuest::NO_QUEST_DATA
CONST	ENDS
PUBLIC	?EndTurn@CvAchievementUnlocker@@SAXXZ		; CvAchievementUnlocker::EndTurn
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\desktop\cleanup (v1)\lekmod files\lekmod dll versions\v30\lekmod_dll\cvgamecoredll_expansion2\cvachievementunlocker.cpp
;	COMDAT ?EndTurn@CvAchievementUnlocker@@SAXXZ
_TEXT	SEGMENT
?EndTurn@CvAchievementUnlocker@@SAXXZ PROC		; CvAchievementUnlocker::EndTurn, COMDAT

; 62   : 	//Reset the per turn counters.
; 63   : 	ms_iNumImprovementsPillagedPerTurn = 0;

	mov	DWORD PTR ?ms_iNumImprovementsPillagedPerTurn@CvAchievementUnlocker@@0HA, 0 ; CvAchievementUnlocker::ms_iNumImprovementsPillagedPerTurn

; 64   : }

	ret	0
?EndTurn@CvAchievementUnlocker@@SAXXZ ENDP		; CvAchievementUnlocker::EndTurn
_TEXT	ENDS
PUBLIC	??0CvPlayerAchievements@@QAE@ABVCvPlayer@@@Z	; CvPlayerAchievements::CvPlayerAchievements
; Function compile flags: /Ogtpy
;	COMDAT ??0CvPlayerAchievements@@QAE@ABVCvPlayer@@@Z
_TEXT	SEGMENT
_kPlayer$ = 8						; size = 4
??0CvPlayerAchievements@@QAE@ABVCvPlayer@@@Z PROC	; CvPlayerAchievements::CvPlayerAchievements, COMDAT
; _this$ = ecx

; 123  : {

	mov	eax, ecx
	mov	ecx, DWORD PTR _kPlayer$[esp-4]
	mov	DWORD PTR [eax], ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, -999				; fffffc19H
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], ecx
	mov	DWORD PTR [eax+20], ecx
	mov	DWORD PTR [eax+24], ecx
	mov	DWORD PTR [eax+28], ecx
	mov	DWORD PTR [eax+32], ecx
	mov	DWORD PTR [eax+36], ecx
	mov	DWORD PTR [eax+40], ecx
	mov	DWORD PTR [eax+44], ecx
	mov	DWORD PTR [eax+48], ecx
	mov	DWORD PTR [eax+52], ecx
	mov	DWORD PTR [eax+56], ecx
	mov	DWORD PTR [eax+60], ecx
	mov	DWORD PTR [eax+64], ecx
	mov	DWORD PTR [eax+68], ecx
	mov	DWORD PTR [eax+72], ecx
	mov	DWORD PTR [eax+76], ecx

; 124  : }

	ret	4
??0CvPlayerAchievements@@QAE@ABVCvPlayer@@@Z ENDP	; CvPlayerAchievements::CvPlayerAchievements
_TEXT	ENDS
PUBLIC	?EndTurn@CvPlayerAchievements@@QAEXXZ		; CvPlayerAchievements::EndTurn
; Function compile flags: /Ogtpy
;	COMDAT ?EndTurn@CvPlayerAchievements@@QAEXXZ
_TEXT	SEGMENT
?EndTurn@CvPlayerAchievements@@QAEXXZ PROC		; CvPlayerAchievements::EndTurn, COMDAT
; _this$ = ecx

; 397  : }

	ret	0
?EndTurn@CvPlayerAchievements@@QAEXXZ ENDP		; CvPlayerAchievements::EndTurn
_TEXT	ENDS
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??0CvString@@QAE@PBD@Z				; CvString::CvString
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:PROC
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
; File c:\users\enormousapplepie\desktop\cleanup (v1)\lekmod files\lekmod dll versions\v30\lekmod_dll\cvgamecoredllutil\include\cvstring.h
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??0CvString@@QAE@PBD@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
??0CvString@@QAE@PBD@Z PROC				; CvString::CvString, COMDAT
; _this$ = ecx

; 25   : 	CvString(const char* s) : std::string(s ? s : "") {CvAssertMsg(s != NULL, "Passing NULL to std::string; possible heap corruption!");}

	mov	eax, DWORD PTR _s$[esp-4]
	push	esi
	mov	esi, ecx
	test	eax, eax
	jne	SHORT $LN4@CvString
	mov	eax, OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN4@CvString:
	push	eax
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	eax, esi
	pop	esi
	ret	4
??0CvString@@QAE@PBD@Z ENDP				; CvString::CvString
_TEXT	ENDS
PUBLIC	??1CvString@@QAE@XZ				; CvString::~CvString
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??1CvString@@QAE@XZ
_TEXT	SEGMENT
??1CvString@@QAE@XZ PROC				; CvString::~CvString, COMDAT
; _this$ = ecx

; 28   : 	~CvString() {}

	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
??1CvString@@QAE@XZ ENDP				; CvString::~CvString
_TEXT	ENDS
PUBLIC	?getMap@CvGlobals@@QAEAAVCvMap@@XZ		; CvGlobals::getMap
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\desktop\cleanup (v1)\lekmod files\lekmod dll versions\v30\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
;	COMDAT ?getMap@CvGlobals@@QAEAAVCvMap@@XZ
_TEXT	SEGMENT
?getMap@CvGlobals@@QAEAAVCvMap@@XZ PROC			; CvGlobals::getMap, COMDAT
; _this$ = ecx

; 175  : 		return *m_map;    // inlined for perf reasons, do not use outside of dll

	mov	eax, DWORD PTR [ecx+52]

; 176  : 	}

	ret	0
?getMap@CvGlobals@@QAEAAVCvMap@@XZ ENDP			; CvGlobals::getMap
_TEXT	ENDS
PUBLIC	?getGame@CvGlobals@@QAEAAVCvGame@@XZ		; CvGlobals::getGame
; Function compile flags: /Ogtpy
;	COMDAT ?getGame@CvGlobals@@QAEAAVCvGame@@XZ
_TEXT	SEGMENT
?getGame@CvGlobals@@QAEAAVCvGame@@XZ PROC		; CvGlobals::getGame, COMDAT
; _this$ = ecx

; 183  : 		return *m_game;    // inlined for perf reasons, do not use outside of dll

	mov	eax, DWORD PTR [ecx+48]

; 184  : 	}

	ret	0
?getGame@CvGlobals@@QAEAAVCvGame@@XZ ENDP		; CvGlobals::getGame
_TEXT	ENDS
PUBLIC	?getDLLIFace@CvGlobals@@QAEPAVICvEngineUtility4@@XZ ; CvGlobals::getDLLIFace
; Function compile flags: /Ogtpy
;	COMDAT ?getDLLIFace@CvGlobals@@QAEPAVICvEngineUtility4@@XZ
_TEXT	SEGMENT
?getDLLIFace@CvGlobals@@QAEPAVICvEngineUtility4@@XZ PROC ; CvGlobals::getDLLIFace, COMDAT
; _this$ = ecx

; 7703 : 		return m_pDLL;

	mov	eax, DWORD PTR [ecx+8564]

; 7704 : 	}

	ret	0
?getDLLIFace@CvGlobals@@QAEPAVICvEngineUtility4@@XZ ENDP ; CvGlobals::getDLLIFace
_TEXT	ENDS
PUBLIC	?getPlayer@CvPlayerAI@@SAAAV1@W4PlayerTypes@@@Z	; CvPlayerAI::getPlayer
EXTRN	?m_aPlayers@CvPlayerAI@@1PAV1@A:DWORD		; CvPlayerAI::m_aPlayers
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\desktop\cleanup (v1)\lekmod files\lekmod dll versions\v30\lekmod_dll\cvgamecoredll_expansion2\cvplayerai.h
;	COMDAT ?getPlayer@CvPlayerAI@@SAAAV1@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_ePlayer$ = 8						; size = 4
?getPlayer@CvPlayerAI@@SAAAV1@W4PlayerTypes@@@Z PROC	; CvPlayerAI::getPlayer, COMDAT

; 28   : 		CvAssertMsg(ePlayer != NO_PLAYER, "Player is not assigned a valid value");
; 29   : 		CvAssertMsg(ePlayer < MAX_PLAYERS, "Player is not assigned a valid value");
; 30   : 		return m_aPlayers[ePlayer];

	mov	eax, DWORD PTR _ePlayer$[esp-4]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers

; 31   : 	}

	ret	0
?getPlayer@CvPlayerAI@@SAAAV1@W4PlayerTypes@@@Z ENDP	; CvPlayerAI::getPlayer
_TEXT	ENDS
PUBLIC	?getPlotType@CvPlot@@QBE?AW4PlotTypes@@XZ	; CvPlot::getPlotType
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\desktop\cleanup (v1)\lekmod files\lekmod dll versions\v30\lekmod_dll\cvgamecoredll_expansion2\cvplot.h
;	COMDAT ?getPlotType@CvPlot@@QBE?AW4PlotTypes@@XZ
_TEXT	SEGMENT
?getPlotType@CvPlot@@QBE?AW4PlotTypes@@XZ PROC		; CvPlot::getPlotType, COMDAT
; _this$ = ecx

; 405  : 		return (PlotTypes)m_ePlotType;

	movsx	eax, BYTE PTR [ecx+5]

; 406  : 	}

	ret	0
?getPlotType@CvPlot@@QBE?AW4PlotTypes@@XZ ENDP		; CvPlot::getPlotType
_TEXT	ENDS
PUBLIC	?coordRange@@YAHHH_N@Z				; coordRange
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\desktop\cleanup (v1)\lekmod files\lekmod dll versions\v30\lekmod_dll\cvgamecoredll_expansion2\cvmap.h
;	COMDAT ?coordRange@@YAHHH_N@Z
_TEXT	SEGMENT
_iCoord$ = 8						; size = 4
_iRange$ = 12						; size = 4
_bWrap$ = 16						; size = 1
?coordRange@@YAHHH_N@Z PROC				; coordRange, COMDAT

; 88   : 	if(bWrap)

	cmp	BYTE PTR _bWrap$[esp-4], 0
	mov	eax, DWORD PTR _iCoord$[esp-4]
	je	SHORT $LN5@coordRange

; 89   : 	{
; 90   : 		if(iCoord < 0)
; 91   : 		{
; 92   : 			return (iRange + (iCoord % iRange));

	mov	ecx, DWORD PTR _iRange$[esp-4]
	test	eax, eax
	jge	SHORT $LN3@coordRange
	cdq
	idiv	ecx
	mov	eax, edx
	add	eax, ecx

; 97   : 		}
; 98   : 	}
; 99   : 
; 100  : 	return iCoord;
; 101  : }

	ret	0
$LN3@coordRange:

; 93   : 		}
; 94   : 		else if(iCoord >= iRange)

	cmp	eax, ecx
	jl	SHORT $LN5@coordRange

; 95   : 		{
; 96   : 			return (iCoord % iRange);

	cdq
	idiv	ecx
	mov	eax, edx
$LN5@coordRange:

; 97   : 		}
; 98   : 	}
; 99   : 
; 100  : 	return iCoord;
; 101  : }

	ret	0
?coordRange@@YAHHH_N@Z ENDP				; coordRange
_TEXT	ENDS
PUBLIC	?getGridWidth@CvMap@@QBEHXZ			; CvMap::getGridWidth
; Function compile flags: /Ogtpy
;	COMDAT ?getGridWidth@CvMap@@QBEHXZ
_TEXT	SEGMENT
?getGridWidth@CvMap@@QBEHXZ PROC			; CvMap::getGridWidth, COMDAT
; _this$ = ecx

; 198  : 		return m_iGridWidth;

	mov	eax, DWORD PTR [ecx+4020]

; 199  : 	}

	ret	0
?getGridWidth@CvMap@@QBEHXZ ENDP			; CvMap::getGridWidth
_TEXT	ENDS
PUBLIC	?getGridHeight@CvMap@@QBEHXZ			; CvMap::getGridHeight
; Function compile flags: /Ogtpy
;	COMDAT ?getGridHeight@CvMap@@QBEHXZ
_TEXT	SEGMENT
?getGridHeight@CvMap@@QBEHXZ PROC			; CvMap::getGridHeight, COMDAT
; _this$ = ecx

; 206  : 		return m_iGridHeight;

	mov	eax, DWORD PTR [ecx+4024]

; 207  : 	}

	ret	0
?getGridHeight@CvMap@@QBEHXZ ENDP			; CvMap::getGridHeight
_TEXT	ENDS
PUBLIC	?isWrapX@CvMap@@QBE_NXZ				; CvMap::isWrapX
; Function compile flags: /Ogtpy
;	COMDAT ?isWrapX@CvMap@@QBE_NXZ
_TEXT	SEGMENT
?isWrapX@CvMap@@QBE_NXZ PROC				; CvMap::isWrapX, COMDAT
; _this$ = ecx

; 228  : 		return m_bWrapX;

	mov	al, BYTE PTR [ecx+4056]

; 229  : 	}

	ret	0
?isWrapX@CvMap@@QBE_NXZ ENDP				; CvMap::isWrapX
_TEXT	ENDS
PUBLIC	?isWrapY@CvMap@@QBE_NXZ				; CvMap::isWrapY
; Function compile flags: /Ogtpy
;	COMDAT ?isWrapY@CvMap@@QBE_NXZ
_TEXT	SEGMENT
?isWrapY@CvMap@@QBE_NXZ PROC				; CvMap::isWrapY, COMDAT
; _this$ = ecx

; 233  : 		return m_bWrapY;

	mov	al, BYTE PTR [ecx+4057]

; 234  : 	}

	ret	0
?isWrapY@CvMap@@QBE_NXZ ENDP				; CvMap::isWrapY
_TEXT	ENDS
PUBLIC	?getTeam@CvTeam@@SAAAV1@W4TeamTypes@@@Z		; CvTeam::getTeam
EXTRN	?m_aTeams@CvTeam@@1PAV1@A:DWORD			; CvTeam::m_aTeams
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\desktop\cleanup (v1)\lekmod files\lekmod dll versions\v30\lekmod_dll\cvgamecoredll_expansion2\cvteam.h
;	COMDAT ?getTeam@CvTeam@@SAAAV1@W4TeamTypes@@@Z
_TEXT	SEGMENT
_eTeam$ = 8						; size = 4
?getTeam@CvTeam@@SAAAV1@W4TeamTypes@@@Z PROC		; CvTeam::getTeam, COMDAT

; 29   : 		CvAssertMsg(eTeam != NO_TEAM, "eTeam is not assigned a valid value");
; 30   : 		CvAssertMsg(eTeam < MAX_TEAMS, "eTeam is not assigned a valid value");
; 31   : 		return m_aTeams[eTeam];

	mov	eax, DWORD PTR _eTeam$[esp-4]
	imul	eax, 2980				; 00000ba4H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams

; 32   : 	}

	ret	0
?getTeam@CvTeam@@SAAAV1@W4TeamTypes@@@Z ENDP		; CvTeam::getTeam
_TEXT	ENDS
PUBLIC	??A?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@QBEABW4TeamTypes@@I@Z ; std::vector<enum TeamTypes,std::allocator<enum TeamTypes> >::operator[]
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??A?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@QBEABW4TeamTypes@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@QBEABW4TeamTypes@@I@Z PROC ; std::vector<enum TeamTypes,std::allocator<enum TeamTypes> >::operator[], COMDAT
; _this$ = ecx

; 760  : 
; 761  :  #if _HAS_ITERATOR_DEBUGGING
; 762  : 		if (size() <= _Pos)
; 763  : 			{
; 764  : 			_DEBUG_ERROR("vector subscript out of range");
; 765  : 			_SCL_SECURE_OUT_OF_RANGE;
; 766  : 			}
; 767  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 768  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 769  : 
; 770  : 		return (*(_Myfirst + _Pos));

	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR __Pos$[esp-4]
	lea	eax, DWORD PTR [eax+ecx*4]

; 771  : 		}

	ret	4
??A?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@QBEABW4TeamTypes@@I@Z ENDP ; std::vector<enum TeamTypes,std::allocator<enum TeamTypes> >::operator[]
_TEXT	ENDS
PUBLIC	?get@?$FAutoVariable@HVCvUnit@@@@QBEABHXZ	; FAutoVariable<int,CvUnit>::get
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\desktop\cleanup (v1)\lekmod files\lekmod dll versions\v30\lekmod_dll\fireplace\include\fireworks\fautovariable.h
;	COMDAT ?get@?$FAutoVariable@HVCvUnit@@@@QBEABHXZ
_TEXT	SEGMENT
?get@?$FAutoVariable@HVCvUnit@@@@QBEABHXZ PROC		; FAutoVariable<int,CvUnit>::get, COMDAT
; _this$ = ecx

; 177  : 	return m_value;

	lea	eax, DWORD PTR [ecx+4]

; 178  : }

	ret	0
?get@?$FAutoVariable@HVCvUnit@@@@QBEABHXZ ENDP		; FAutoVariable<int,CvUnit>::get
_TEXT	ENDS
PUBLIC	??$?6H@FDataStream@@QAEAAV0@ABH@Z		; FDataStream::operator<<<int>
EXTRN	?Write@FDataStream@@IAEXABH@Z:PROC		; FDataStream::Write
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\desktop\cleanup (v1)\lekmod files\lekmod dll versions\v30\lekmod_dll\fireplace\include\fireworks\fdatastream.h
;	COMDAT ??$?6H@FDataStream@@QAEAAV0@ABH@Z
_TEXT	SEGMENT
_kData$ = 8						; size = 4
??$?6H@FDataStream@@QAEAAV0@ABH@Z PROC			; FDataStream::operator<<<int>, COMDAT
; _this$ = ecx

; 246  : 	// If the compiler produces an error here complaining about 
; 247  : 	// YouMustImplementASerializeOperatorForThisTypeError then
; 248  : 	// it could not find a specialization for the type supplied
; 249  : 	// in scope. If a specialization exists, be sure to include
; 250  : 	// the header (FStlContainerSerialization.h, for example), 
; 251  : 	// if not, implement :
; 252  : 	// FDataStream & operator<<(FDataStream &, YourCustomType &)
; 253  : 	Write( kData );

	mov	eax, DWORD PTR _kData$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 254  : 	return ( *this );

	mov	eax, esi
	pop	esi

; 255  : }

	ret	4
??$?6H@FDataStream@@QAEAAV0@ABH@Z ENDP			; FDataStream::operator<<<int>
_TEXT	ENDS
PUBLIC	??$?5H@FDataStream@@QAEAAV0@AAH@Z		; FDataStream::operator>><int>
EXTRN	?Read@FDataStream@@IAEXAAH@Z:PROC		; FDataStream::Read
; Function compile flags: /Ogtpy
;	COMDAT ??$?5H@FDataStream@@QAEAAV0@AAH@Z
_TEXT	SEGMENT
_kData$ = 8						; size = 4
??$?5H@FDataStream@@QAEAAV0@AAH@Z PROC			; FDataStream::operator>><int>, COMDAT
; _this$ = ecx

; 260  : 	// If the compiler produces an error here complaining about 
; 261  : 	// YouMustImplementASerializeOperatorForThisTypeError then
; 262  : 	// it could not find a specialization for the type supplied
; 263  : 	// in scope. If a specialization exists, be sure to include
; 264  : 	// the header (FStlContainerSerialization.h, for example), 
; 265  : 	// if not, implement :
; 266  : 	// FDataStream & operator>>(FDataStream &, YourCustomType &)
; 267  : 	Read( kData );

	mov	eax, DWORD PTR _kData$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 268  : 	return ( *this );

	mov	eax, esi
	pop	esi

; 269  : }

	ret	4
??$?5H@FDataStream@@QAEAAV0@AAH@Z ENDP			; FDataStream::operator>><int>
_TEXT	ENDS
PUBLIC	??B?$FAutoVariable@W4PlayerTypes@@VCvPlayer@@@@QBEABW4PlayerTypes@@XZ ; FAutoVariable<enum PlayerTypes,CvPlayer>::operator enum PlayerTypes const &
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\desktop\cleanup (v1)\lekmod files\lekmod dll versions\v30\lekmod_dll\fireplace\include\fireworks\fautovariable.h
;	COMDAT ??B?$FAutoVariable@W4PlayerTypes@@VCvPlayer@@@@QBEABW4PlayerTypes@@XZ
_TEXT	SEGMENT
??B?$FAutoVariable@W4PlayerTypes@@VCvPlayer@@@@QBEABW4PlayerTypes@@XZ PROC ; FAutoVariable<enum PlayerTypes,CvPlayer>::operator enum PlayerTypes const &, COMDAT
; _this$ = ecx

; 194  : 	return m_value;

	lea	eax, DWORD PTR [ecx+4]

; 195  : }

	ret	0
??B?$FAutoVariable@W4PlayerTypes@@VCvPlayer@@@@QBEABW4PlayerTypes@@XZ ENDP ; FAutoVariable<enum PlayerTypes,CvPlayer>::operator enum PlayerTypes const &
_TEXT	ENDS
PUBLIC	??B?$FAutoVariable@_NVCvPlayer@@@@QBEAB_NXZ	; FAutoVariable<bool,CvPlayer>::operator bool const &
; Function compile flags: /Ogtpy
;	COMDAT ??B?$FAutoVariable@_NVCvPlayer@@@@QBEAB_NXZ
_TEXT	SEGMENT
??B?$FAutoVariable@_NVCvPlayer@@@@QBEAB_NXZ PROC	; FAutoVariable<bool,CvPlayer>::operator bool const &, COMDAT
; _this$ = ecx

; 194  : 	return m_value;

	lea	eax, DWORD PTR [ecx+4]

; 195  : }

	ret	0
??B?$FAutoVariable@_NVCvPlayer@@@@QBEAB_NXZ ENDP	; FAutoVariable<bool,CvPlayer>::operator bool const &
_TEXT	ENDS
PUBLIC	?Check_PSG@CvAchievementUnlocker@@SA_NXZ	; CvAchievementUnlocker::Check_PSG
EXTRN	?gGlobals@@3VCvGlobals@@A:BYTE			; gGlobals
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\desktop\cleanup (v1)\lekmod files\lekmod dll versions\v30\lekmod_dll\cvgamecoredll_expansion2\cvachievementunlocker.cpp
;	COMDAT ?Check_PSG@CvAchievementUnlocker@@SA_NXZ
_TEXT	SEGMENT
_iGeneralsStat$ = -12					; size = 4
_iWinsStat$ = -8					; size = 4
_iArmyStat$ = -4					; size = 4
?Check_PSG@CvAchievementUnlocker@@SA_NXZ PROC		; CvAchievementUnlocker::Check_PSG, COMDAT

; 33   : {

	sub	esp, 12					; 0000000cH

; 34   : 	const int PSG_STAT_MATCH_VALUE = 100;
; 35   : 
; 36   : 	int32 iGeneralsStat = 0;
; 37   : 	int32 iWinsStat = 0;
; 38   : 	int32 iArmyStat = 0;
; 39   : 	if(gDLL->GetSteamStat(ESTEAMSTAT_GREATGENERALS, &iGeneralsStat) &&
; 40   : 	        gDLL->GetSteamStat(ESTEAMSTAT_TOTAL_WINS, &iWinsStat) &&
; 41   : 	        gDLL->GetSteamStat(ESTEAMSTAT_STANDINGARMY, &iArmyStat))

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	lea	edx, DWORD PTR _iGeneralsStat$[esp+12]
	mov	DWORD PTR _iGeneralsStat$[esp+12], 0
	mov	DWORD PTR _iWinsStat$[esp+12], 0
	mov	DWORD PTR _iArmyStat$[esp+12], 0
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+836]
	push	edx
	push	123					; 0000007bH
	call	eax
	test	al, al
	je	SHORT $LN1@Check_PSG
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	edx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [edx+836]
	lea	eax, DWORD PTR _iWinsStat$[esp+12]
	push	eax
	push	0
	call	edx
	test	al, al
	je	SHORT $LN1@Check_PSG
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+836]
	lea	edx, DWORD PTR _iArmyStat$[esp+12]
	push	edx
	push	124					; 0000007cH
	call	eax
	test	al, al
	je	SHORT $LN1@Check_PSG

; 42   : 	{
; 43   : 		if(iGeneralsStat >= PSG_STAT_MATCH_VALUE && iWinsStat >= PSG_STAT_MATCH_VALUE && iArmyStat >= PSG_STAT_MATCH_VALUE)

	mov	eax, 100				; 00000064H
	cmp	DWORD PTR _iGeneralsStat$[esp+12], eax
	jl	SHORT $LN1@Check_PSG
	cmp	DWORD PTR _iWinsStat$[esp+12], eax
	jl	SHORT $LN1@Check_PSG
	cmp	DWORD PTR _iArmyStat$[esp+12], eax
	jl	SHORT $LN1@Check_PSG

; 44   : 		{
; 45   : 			gDLL->UnlockAchievement(ACHIEVEMENT_PSG);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+828]
	push	119					; 00000077H
	call	eax

; 46   : 			return true;

	mov	al, 1

; 50   : }

	add	esp, 12					; 0000000cH
	ret	0
$LN1@Check_PSG:

; 47   : 		}
; 48   : 	}
; 49   : 	return false;

	xor	al, al

; 50   : }

	add	esp, 12					; 0000000cH
	ret	0
?Check_PSG@CvAchievementUnlocker@@SA_NXZ ENDP		; CvAchievementUnlocker::Check_PSG
_TEXT	ENDS
PUBLIC	?FarmImprovementPillaged@CvAchievementUnlocker@@SAXXZ ; CvAchievementUnlocker::FarmImprovementPillaged
; Function compile flags: /Ogtpy
;	COMDAT ?FarmImprovementPillaged@CvAchievementUnlocker@@SAXXZ
_TEXT	SEGMENT
?FarmImprovementPillaged@CvAchievementUnlocker@@SAXXZ PROC ; CvAchievementUnlocker::FarmImprovementPillaged, COMDAT

; 54   : 	ms_iNumImprovementsPillagedPerTurn++;

	mov	eax, DWORD PTR ?ms_iNumImprovementsPillagedPerTurn@CvAchievementUnlocker@@0HA ; CvAchievementUnlocker::ms_iNumImprovementsPillagedPerTurn
	inc	eax

; 55   : 
; 56   : 	if(ms_iNumImprovementsPillagedPerTurn >= 9)

	cmp	eax, 9
	mov	DWORD PTR ?ms_iNumImprovementsPillagedPerTurn@CvAchievementUnlocker@@0HA, eax ; CvAchievementUnlocker::ms_iNumImprovementsPillagedPerTurn
	jl	SHORT $LN1@FarmImprov

; 57   : 		gDLL->UnlockAchievement(ACHIEVEMENT_SCENARIO_04_PILLAGE);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+828]
	push	152					; 00000098H
	call	edx
$LN1@FarmImprov:

; 58   : }

	ret	0
?FarmImprovementPillaged@CvAchievementUnlocker@@SAXXZ ENDP ; CvAchievementUnlocker::FarmImprovementPillaged
_TEXT	ENDS
PUBLIC	?BoughtCityState@CvPlayerAchievements@@QAEXH@Z	; CvPlayerAchievements::BoughtCityState
; Function compile flags: /Ogtpy
;	COMDAT ?BoughtCityState@CvPlayerAchievements@@QAEXH@Z
_TEXT	SEGMENT
_iNumUnits$ = 8						; size = 4
?BoughtCityState@CvPlayerAchievements@@QAEXH@Z PROC	; CvPlayerAchievements::BoughtCityState, COMDAT
; _this$ = ecx

; 239  : 	if (iNumUnits >= 15)

	cmp	DWORD PTR _iNumUnits$[esp-4], 15	; 0000000fH
	jl	SHORT $LN1@BoughtCity

; 240  : 	{
; 241  : 		gDLL->UnlockAchievement(ACHIEVEMENT_XP1_35);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+828]
	mov	DWORD PTR _iNumUnits$[esp-4], 225	; 000000e1H
	jmp	edx
$LN1@BoughtCity:

; 242  : 	}
; 243  : }

	ret	4
?BoughtCityState@CvPlayerAchievements@@QAEXH@Z ENDP	; CvPlayerAchievements::BoughtCityState
_TEXT	ENDS
PUBLIC	?FinishedBuilding@CvPlayerAchievements@@QAEXPAVCvCity@@W4BuildingTypes@@@Z ; CvPlayerAchievements::FinishedBuilding
EXTRN	?GetNumBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z:PROC ; CvCityBuildings::GetNumBuilding
EXTRN	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ:PROC ; CvCity::GetCityBuildings
EXTRN	?isHuman@CvPlayer@@QBE_NXZ:PROC			; CvPlayer::isHuman
EXTRN	?isLocalPlayer@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::isLocalPlayer
EXTRN	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z:PROC ; CvGlobals::getInfoTypeForString
; Function compile flags: /Ogtpy
;	COMDAT ?FinishedBuilding@CvPlayerAchievements@@QAEXPAVCvCity@@W4BuildingTypes@@@Z
_TEXT	SEGMENT
_pkCity$ = 8						; size = 4
_eBuilding$ = 12					; size = 4
?FinishedBuilding@CvPlayerAchievements@@QAEXPAVCvCity@@W4BuildingTypes@@@Z PROC ; CvPlayerAchievements::FinishedBuilding, COMDAT
; _this$ = ecx

; 404  : {

	push	esi
	push	edi
	mov	esi, ecx

; 405  : 	if(m_eCollossusType == UNDEFINED_TYPE)

	mov	edi, -999				; fffffc19H
	cmp	DWORD PTR [esi+16], edi
	jne	SHORT $LN7@FinishedBu

; 406  : 	{
; 407  : 		m_eCollossusType = (BuildingTypes)GC.getInfoTypeForString("BUILDING_COLOSSUS", true);

	push	1
	push	OFFSET $SG218862
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR [esi+16], eax
$LN7@FinishedBu:

; 408  : 	}
; 409  : 
; 410  : 	if(m_ePetraType == UNDEFINED_TYPE)

	cmp	DWORD PTR [esi+20], edi
	jne	SHORT $LN6@FinishedBu

; 411  : 	{
; 412  : 		m_ePetraType = (BuildingTypes)GC.getInfoTypeForString("BUILDING_PETRA", true);

	push	1
	push	OFFSET $SG218865
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR [esi+20], eax
$LN6@FinishedBu:

; 413  : 	}
; 414  : 
; 415  : 	if(m_eCaravansaryType == UNDEFINED_TYPE)

	cmp	DWORD PTR [esi+24], edi
	jne	SHORT $LN5@FinishedBu

; 416  : 	{
; 417  : 		m_eCaravansaryType = (BuildingTypes)GC.getInfoTypeForString("BUILDING_CARAVANSARY", true);

	push	1
	push	OFFSET $SG218868
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR [esi+24], eax
$LN5@FinishedBu:

; 418  : 	}
; 419  : 
; 420  : 	if(m_eHarborType == UNDEFINED_TYPE)

	cmp	DWORD PTR [esi+28], edi
	jne	SHORT $LN4@FinishedBu

; 421  : 	{
; 422  : 		m_eHarborType = (BuildingTypes)GC.getInfoTypeForString("BUILDING_HARBOR", true);

	push	1
	push	OFFSET $SG218871
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR [esi+28], eax
$LN4@FinishedBu:

; 423  : 	}
; 424  : 
; 425  : 	if(m_kPlayer.isLocalPlayer() && m_kPlayer.isHuman() && m_eCollossusType != NO_BUILDING && m_ePetraType != NO_BUILDING && m_eCaravansaryType != NO_BUILDING && m_eHarborType != NO_BUILDING)

	mov	ecx, DWORD PTR [esi]
	call	?isLocalPlayer@CvPlayer@@QBE_NXZ	; CvPlayer::isLocalPlayer
	test	al, al
	je	$LN1@FinishedBu
	mov	ecx, DWORD PTR [esi]
	call	?isHuman@CvPlayer@@QBE_NXZ		; CvPlayer::isHuman
	test	al, al
	je	SHORT $LN1@FinishedBu
	or	eax, -1
	cmp	DWORD PTR [esi+16], eax
	je	SHORT $LN1@FinishedBu
	cmp	DWORD PTR [esi+20], eax
	je	SHORT $LN1@FinishedBu
	cmp	DWORD PTR [esi+24], eax
	je	SHORT $LN1@FinishedBu
	cmp	DWORD PTR [esi+28], eax
	je	SHORT $LN1@FinishedBu

; 426  : 	{
; 427  : 		CvCityBuildings* pkBuildings = pkCity->GetCityBuildings();

	mov	ecx, DWORD PTR _pkCity$[esp+4]
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	edi, eax

; 428  : 		if(pkBuildings != NULL)

	test	edi, edi
	je	SHORT $LN1@FinishedBu

; 429  : 		{
; 430  : 			if(pkBuildings->GetNumBuilding(m_eCollossusType) > 0 &&
; 431  : 				pkBuildings->GetNumBuilding(m_ePetraType) > 0 &&
; 432  : 				pkBuildings->GetNumBuilding(m_eCaravansaryType) > 0 &&
; 433  : 				pkBuildings->GetNumBuilding(m_eHarborType) > 0)

	mov	eax, DWORD PTR [esi+16]
	push	eax
	mov	ecx, edi
	call	?GetNumBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetNumBuilding
	test	eax, eax
	jle	SHORT $LN1@FinishedBu
	mov	ecx, DWORD PTR [esi+20]
	push	ecx
	mov	ecx, edi
	call	?GetNumBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetNumBuilding
	test	eax, eax
	jle	SHORT $LN1@FinishedBu
	mov	edx, DWORD PTR [esi+24]
	push	edx
	mov	ecx, edi
	call	?GetNumBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetNumBuilding
	test	eax, eax
	jle	SHORT $LN1@FinishedBu
	mov	eax, DWORD PTR [esi+28]
	push	eax
	mov	ecx, edi
	call	?GetNumBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetNumBuilding
	test	eax, eax
	jle	SHORT $LN1@FinishedBu

; 434  : 			{
; 435  : 				gDLL->UnlockAchievement(ACHIEVEMENT_XP2_30);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+828]
	push	272					; 00000110H
	call	eax
$LN1@FinishedBu:
	pop	edi
	pop	esi

; 436  : 			}
; 437  : 		}
; 438  : 	}
; 439  : }

	ret	8
?FinishedBuilding@CvPlayerAchievements@@QAEXPAVCvCity@@W4BuildingTypes@@@Z ENDP ; CvPlayerAchievements::FinishedBuilding
_TEXT	ENDS
PUBLIC	?Read@CvPlayerAchievements@@QAEXAAVFDataStream@@@Z ; CvPlayerAchievements::Read
; Function compile flags: /Ogtpy
;	COMDAT ?Read@CvPlayerAchievements@@QAEXAAVFDataStream@@@Z
_TEXT	SEGMENT
_iVersion$ = -4						; size = 4
_kStream$ = 8						; size = 4
?Read@CvPlayerAchievements@@QAEXAAVFDataStream@@@Z PROC	; CvPlayerAchievements::Read, COMDAT
; _this$ = ecx

; 442  : {

	push	ecx
	push	esi
	push	edi

; 443  : 	int iVersion = 0;
; 444  : 	kStream >> iVersion;

	mov	edi, DWORD PTR _kStream$[esp+8]
	lea	eax, DWORD PTR _iVersion$[esp+12]
	mov	esi, ecx
	push	eax
	mov	ecx, edi
	mov	DWORD PTR _iVersion$[esp+16], 0
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 445  : 	kStream >> m_iAchievement_XP1_32_Progress;

	lea	ecx, DWORD PTR [esi+4]
	push	ecx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 446  : 	kStream >> m_iAchievement_XP1_33_Progress;

	add	esi, 8
	push	esi
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read
	pop	edi
	pop	esi

; 447  : }

	pop	ecx
	ret	4
?Read@CvPlayerAchievements@@QAEXAAVFDataStream@@@Z ENDP	; CvPlayerAchievements::Read
_TEXT	ENDS
PUBLIC	?Write@CvPlayerAchievements@@QBEXAAVFDataStream@@@Z ; CvPlayerAchievements::Write
; Function compile flags: /Ogtpy
;	COMDAT ?Write@CvPlayerAchievements@@QBEXAAVFDataStream@@@Z
_TEXT	SEGMENT
_iVersion$ = -4						; size = 4
_kStream$ = 8						; size = 4
?Write@CvPlayerAchievements@@QBEXAAVFDataStream@@@Z PROC ; CvPlayerAchievements::Write, COMDAT
; _this$ = ecx

; 450  : {

	push	ecx
	push	esi
	push	edi

; 451  : 	int iVersion = 1;
; 452  : 	kStream << iVersion;

	mov	edi, DWORD PTR _kStream$[esp+8]
	lea	eax, DWORD PTR _iVersion$[esp+12]
	mov	esi, ecx
	push	eax
	mov	ecx, edi
	mov	DWORD PTR _iVersion$[esp+16], 1
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 453  : 	kStream << m_iAchievement_XP1_32_Progress;

	lea	ecx, DWORD PTR [esi+4]
	push	ecx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 454  : 	kStream << m_iAchievement_XP1_33_Progress;

	add	esi, 8
	push	esi
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write
	pop	edi
	pop	esi

; 455  : }

	pop	ecx
	ret	4
?Write@CvPlayerAchievements@@QBEXAAVFDataStream@@@Z ENDP ; CvPlayerAchievements::Write
_TEXT	ENDS
PUBLIC	?getX@CvUnit@@QBEHXZ				; CvUnit::getX
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\desktop\cleanup (v1)\lekmod files\lekmod dll versions\v30\lekmod_dll\cvgamecoredll_expansion2\cvunit.h
;	COMDAT ?getX@CvUnit@@QBEHXZ
_TEXT	SEGMENT
?getX@CvUnit@@QBEHXZ PROC				; CvUnit::getX, COMDAT
; _this$ = ecx

; 673  : 		return m_iX.get();

	mov	eax, DWORD PTR [ecx+76]

; 674  : 	}

	ret	0
?getX@CvUnit@@QBEHXZ ENDP				; CvUnit::getX
_TEXT	ENDS
PUBLIC	?getY@CvUnit@@QBEHXZ				; CvUnit::getY
; Function compile flags: /Ogtpy
;	COMDAT ?getY@CvUnit@@QBEHXZ
_TEXT	SEGMENT
?getY@CvUnit@@QBEHXZ PROC				; CvUnit::getY, COMDAT
; _this$ = ecx

; 678  : 		return m_iY.get();

	mov	eax, DWORD PTR [ecx+88]

; 679  : 	}

	ret	0
?getY@CvUnit@@QBEHXZ ENDP				; CvUnit::getY
_TEXT	ENDS
EXTRN	?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B:DWORD ; CvPreGame::sr_TeamTypes
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\desktop\cleanup (v1)\lekmod files\lekmod dll versions\v30\lekmod_dll\cvgamecoredll_expansion2\cvpregame.h
;	COMDAT ?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z PROC ; CvPreGame::teamType, COMDAT
; _p$ = eax

; 299  : 	if(p >= 0 && p < MAX_PLAYERS)

	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN1@teamType

; 300  : 		return sr_TeamTypes[p];

	mov	ecx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax*4]

; 302  : }

	ret	0
$LN1@teamType:

; 301  : 	return NO_TEAM;

	or	eax, -1

; 302  : }

	ret	0
?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ENDP ; CvPreGame::teamType
_TEXT	ENDS
PUBLIC	?isAlive@CvPlayer@@QBE_NXZ			; CvPlayer::isAlive
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\desktop\cleanup (v1)\lekmod files\lekmod dll versions\v30\lekmod_dll\cvgamecoredll_expansion2\cvplayer.h
;	COMDAT ?isAlive@CvPlayer@@QBE_NXZ
_TEXT	SEGMENT
?isAlive@CvPlayer@@QBE_NXZ PROC				; CvPlayer::isAlive, COMDAT
; _this$ = ecx

; 1092 : 		return m_bAlive;

	mov	al, BYTE PTR [ecx+2256]

; 1093 : 	}

	ret	0
?isAlive@CvPlayer@@QBE_NXZ ENDP				; CvPlayer::isAlive
_TEXT	ENDS
PUBLIC	?GetID@CvPlayer@@QBE?AW4PlayerTypes@@XZ		; CvPlayer::GetID
; Function compile flags: /Ogtpy
;	COMDAT ?GetID@CvPlayer@@QBE?AW4PlayerTypes@@XZ
_TEXT	SEGMENT
?GetID@CvPlayer@@QBE?AW4PlayerTypes@@XZ PROC		; CvPlayer::GetID, COMDAT
; _this$ = ecx

; 1168 : 		return m_eID;

	mov	eax, DWORD PTR [ecx+44]

; 1169 : 	}

	ret	0
?GetID@CvPlayer@@QBE?AW4PlayerTypes@@XZ ENDP		; CvPlayer::GetID
_TEXT	ENDS
PUBLIC	?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ		; CvPlayer::getTeam
; Function compile flags: /Ogtpy
;	COMDAT ?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ
_TEXT	SEGMENT
?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ PROC		; CvPlayer::getTeam, COMDAT
; _this$ = ecx

; 1178 : 		return CvPreGame::teamType(m_eID);

	mov	eax, DWORD PTR [ecx+44]
	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN5@getTeam
	mov	ecx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax*4]

; 1179 : 	}

	ret	0

; 1178 : 		return CvPreGame::teamType(m_eID);

$LN5@getTeam:
	or	eax, -1

; 1179 : 	}

	ret	0
?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ ENDP		; CvPlayer::getTeam
_TEXT	ENDS
PUBLIC	?isPlot@CvMap@@QBEHHH@Z				; CvMap::isPlot
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\desktop\cleanup (v1)\lekmod files\lekmod dll versions\v30\lekmod_dll\cvgamecoredll_expansion2\cvmap.h
;	COMDAT ?isPlot@CvMap@@QBEHHH@Z
_TEXT	SEGMENT
_iX$ = 8						; size = 4
_iY$ = 12						; size = 4
?isPlot@CvMap@@QBEHHH@Z PROC				; CvMap::isPlot, COMDAT
; _this$ = ecx

; 157  : #ifdef AUI_WARNING_FIXES
; 158  : 		return ((iX >= 0) && (uint(iX) < getGridWidth()) && (iY >= 0) && (uint(iY) < getGridHeight()));
; 159  : #else
; 160  : 		return ((iX >= 0) && (iX < getGridWidth()) && (iY >= 0) && (iY < getGridHeight()));

	mov	eax, DWORD PTR _iX$[esp-4]
	test	eax, eax
	jl	SHORT $LN3@isPlot
	cmp	eax, DWORD PTR [ecx+4020]
	jge	SHORT $LN3@isPlot
	mov	eax, DWORD PTR _iY$[esp-4]
	test	eax, eax
	jl	SHORT $LN3@isPlot
	cmp	eax, DWORD PTR [ecx+4024]
	jge	SHORT $LN3@isPlot
	mov	eax, 1

; 161  : #endif
; 162  : 	}

	ret	8
$LN3@isPlot:

; 157  : #ifdef AUI_WARNING_FIXES
; 158  : 		return ((iX >= 0) && (uint(iX) < getGridWidth()) && (iY >= 0) && (uint(iY) < getGridHeight()));
; 159  : #else
; 160  : 		return ((iX >= 0) && (iX < getGridWidth()) && (iY >= 0) && (iY < getGridHeight()));

	xor	eax, eax

; 161  : #endif
; 162  : 	}

	ret	8
?isPlot@CvMap@@QBEHHH@Z ENDP				; CvMap::isPlot
_TEXT	ENDS
PUBLIC	?plotNum@CvMap@@QBEHHH@Z			; CvMap::plotNum
; Function compile flags: /Ogtpy
;	COMDAT ?plotNum@CvMap@@QBEHHH@Z
_TEXT	SEGMENT
_iX$ = 8						; size = 4
_iY$ = 12						; size = 4
?plotNum@CvMap@@QBEHHH@Z PROC				; CvMap::plotNum, COMDAT
; _this$ = ecx

; 183  : 		return ((iY * getGridWidth()) + iX);

	mov	eax, DWORD PTR [ecx+4020]
	imul	eax, DWORD PTR _iY$[esp-4]
	add	eax, DWORD PTR _iX$[esp-4]

; 184  : #endif
; 185  : 	}

	ret	8
?plotNum@CvMap@@QBEHHH@Z ENDP				; CvMap::plotNum
_TEXT	ENDS
PUBLIC	?plot@CvMap@@QBEPAVCvPlot@@HH@Z			; CvMap::plot
; Function compile flags: /Ogtpy
;	COMDAT ?plot@CvMap@@QBEPAVCvPlot@@HH@Z
_TEXT	SEGMENT
_iX$ = 8						; size = 4
_iY$ = 12						; size = 4
?plot@CvMap@@QBEPAVCvPlot@@HH@Z PROC			; CvMap::plot, COMDAT
; _this$ = ecx

; 273  : 		if((iX == INVALID_PLOT_COORD) || (iY == INVALID_PLOT_COORD))

	mov	eax, DWORD PTR _iX$[esp-4]
	push	ebp
	cmp	eax, -2147483647			; 80000001H
	je	$LN1@plot
	mov	ebp, DWORD PTR _iY$[esp]
	cmp	ebp, -2147483647			; 80000001H
	je	$LN1@plot

; 276  : 		}
; 277  : 		int iMapX = coordRange(iX, getGridWidth(), isWrapX());

	cmp	BYTE PTR [ecx+4056], 0
	push	ebx
	push	esi
	mov	esi, DWORD PTR [ecx+4020]
	push	edi
	je	SHORT $LN11@plot
	test	eax, eax
	jge	SHORT $LN13@plot
	cdq
	idiv	esi
	mov	edi, edx
	add	edi, esi
	jmp	SHORT $LN15@plot
$LN13@plot:
	cmp	eax, esi
	jl	SHORT $LN11@plot
	cdq
	idiv	esi
	mov	edi, edx
	jmp	SHORT $LN15@plot
$LN11@plot:
	mov	edi, eax
$LN15@plot:

; 278  : 		int iMapY = coordRange(iY, getGridHeight(), isWrapY());

	cmp	BYTE PTR [ecx+4057], 0
	mov	ebx, DWORD PTR [ecx+4024]
	je	SHORT $LN40@plot
	test	ebp, ebp
	jge	SHORT $LN23@plot
	mov	eax, ebp
	cdq
	idiv	ebx
	add	edx, ebx
	jmp	SHORT $LN25@plot
$LN23@plot:
	cmp	ebp, ebx
	jl	SHORT $LN40@plot
	mov	eax, ebp
	cdq
	idiv	ebx
	jmp	SHORT $LN25@plot
$LN40@plot:
	mov	edx, ebp
$LN25@plot:

; 279  : 		return ((isPlot(iMapX, iMapY)) ? &(m_pMapPlots[plotNum(iMapX, iMapY)]) : NULL);

	test	edi, edi
	jl	SHORT $LN5@plot
	cmp	edi, esi
	jge	SHORT $LN5@plot
	test	edx, edx
	jl	SHORT $LN5@plot
	cmp	edx, ebx
	jge	SHORT $LN5@plot
	imul	esi, edx
	add	esi, edi
	imul	esi, 484				; 000001e4H
	add	esi, DWORD PTR [ecx+4068]
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx
	pop	ebp

; 280  : 	}

	ret	8
$LN5@plot:
	pop	edi
	pop	esi
	pop	ebx

; 279  : 		return ((isPlot(iMapX, iMapY)) ? &(m_pMapPlots[plotNum(iMapX, iMapY)]) : NULL);

	xor	eax, eax
	pop	ebp

; 280  : 	}

	ret	8
$LN1@plot:

; 274  : 		{
; 275  : 			return NULL;

	xor	eax, eax
	pop	ebp

; 280  : 	}

	ret	8
?plot@CvMap@@QBEPAVCvPlot@@HH@Z ENDP			; CvMap::plot
_TEXT	ENDS
PUBLIC	?AlexanderConquest@CvAchievementUnlocker@@SAXW4PlayerTypes@@@Z ; CvAchievementUnlocker::AlexanderConquest
EXTRN	?isMinorCiv@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::isMinorCiv
EXTRN	?isBarbarian@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::isBarbarian
EXTRN	?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z:PROC	; CvTeam::isHasMet
EXTRN	?getGameTurnYear@CvGame@@QAEHXZ:PROC		; CvGame::getGameTurnYear
EXTRN	__imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z:PROC
EXTRN	?getLeaderTypeKey@CvPlayer@@QBEPBDXZ:PROC	; CvPlayer::getLeaderTypeKey
EXTRN	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ:PROC ; CvGame::getActivePlayer
EXTRN	___CxxFrameHandler3:PROC
;	COMDAT xdata$x
; File c:\users\enormousapplepie\desktop\cleanup (v1)\lekmod files\lekmod dll versions\v30\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?AlexanderConquest@CvAchievementUnlocker@@SAXW4PlayerTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AlexanderConquest@CvAchievementUnlocker@@SAXW4PlayerTypes@@@Z$0
__ehfuncinfo$?AlexanderConquest@CvAchievementUnlocker@@SAXW4PlayerTypes@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AlexanderConquest@CvAchievementUnlocker@@SAXW4PlayerTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\desktop\cleanup (v1)\lekmod files\lekmod dll versions\v30\lekmod_dll\cvgamecoredll_expansion2\cvachievementunlocker.cpp
xdata$x	ENDS
;	COMDAT ?AlexanderConquest@CvAchievementUnlocker@@SAXW4PlayerTypes@@@Z
_TEXT	SEGMENT
_szLeaderName$218689 = -40				; size = 28
__$EHRec$ = -12						; size = 12
_ePlayer$ = 8						; size = 4
?AlexanderConquest@CvAchievementUnlocker@@SAXW4PlayerTypes@@@Z PROC ; CvAchievementUnlocker::AlexanderConquest, COMDAT

; 68   : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?AlexanderConquest@CvAchievementUnlocker@@SAXW4PlayerTypes@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 28					; 0000001cH
	push	ebx

; 69   : 	//Test For Alexander Conquest
; 70   : 	CvGame& kGame = GC.getGame();

	mov	ebx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48

; 71   : 	if (ePlayer == kGame.getActivePlayer())

	mov	ecx, ebx
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	mov	ecx, DWORD PTR _ePlayer$[esp+40]
	cmp	ecx, eax
	jne	$LN9@AlexanderC

; 72   : 	{
; 73   : 		CvString szLeaderName = (CvString)GET_PLAYER(ePlayer).getLeaderTypeKey();

	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	edi
	call	?getLeaderTypeKey@CvPlayer@@QBEPBDXZ	; CvPlayer::getLeaderTypeKey
	xor	edi, edi
	cmp	eax, edi
	jne	SHORT $LN20@AlexanderC
	mov	eax, OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN20@AlexanderC:
	push	esi
	push	eax
	lea	ecx, DWORD PTR _szLeaderName$218689[esp+56]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z

; 74   : 		if(szLeaderName == "LEADER_ALEXANDER")

	lea	eax, DWORD PTR _szLeaderName$218689[esp+52]
	push	OFFSET $SG218693
	push	eax
	mov	DWORD PTR __$EHRec$[esp+68], edi
	call	DWORD PTR __imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
	add	esp, 8
	test	al, al
	je	$LN7@AlexanderC

; 75   : 		{
; 76   : 			if(kGame.getGameTurnYear() <= 350)

	mov	ecx, ebx
	call	?getGameTurnYear@CvGame@@QAEHXZ		; CvGame::getGameTurnYear
	cmp	eax, 350				; 0000015eH
	jg	$LN7@AlexanderC
	npad	4
$LL6@AlexanderC:

; 79   : 				{
; 80   : 					CvPlayer* pPlayer = &GET_PLAYER((PlayerTypes) iPlayerLoop);

	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	lea	esi, DWORD PTR [edi+ecx]

; 81   : 
; 82   : 					//All known players must be dead and killed by us
; 83   : 					if(GET_TEAM(pPlayer->getTeam()).isHasMet(GET_PLAYER(kGame.getActivePlayer()).getTeam()))

	mov	ecx, ebx
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	edx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	eax, DWORD PTR [eax+44]
	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN30@AlexanderC
	mov	ecx, DWORD PTR [edx+4]
	mov	eax, DWORD PTR [ecx+eax*4]
	jmp	SHORT $LN31@AlexanderC
$LN30@AlexanderC:
	or	eax, -1
$LN31@AlexanderC:
	mov	ecx, DWORD PTR [esi+44]
	cmp	ecx, 63					; 0000003fH
	ja	SHORT $LN39@AlexanderC
	mov	edx, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [edx+ecx*4]
	jmp	SHORT $LN40@AlexanderC
$LN39@AlexanderC:
	or	ecx, -1
$LN40@AlexanderC:
	imul	ecx, 2980				; 00000ba4H
	add	ecx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	push	eax
	call	?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isHasMet
	test	al, al
	je	SHORT $LN5@AlexanderC

; 84   : 					{
; 85   : 						if(!pPlayer->isBarbarian() && !pPlayer->isMinorCiv())

	mov	ecx, esi
	call	?isBarbarian@CvPlayer@@QBE_NXZ		; CvPlayer::isBarbarian
	test	al, al
	jne	SHORT $LN5@AlexanderC
	mov	ecx, esi
	call	?isMinorCiv@CvPlayer@@QBE_NXZ		; CvPlayer::isMinorCiv
	test	al, al
	jne	SHORT $LN5@AlexanderC

; 86   : 						{
; 87   : 							if(pPlayer->isAlive() && pPlayer->GetID() != GET_PLAYER(kGame.getActivePlayer()).GetID())

	cmp	BYTE PTR [esi+2256], al
	je	SHORT $LN5@AlexanderC
	mov	esi, DWORD PTR [esi+44]
	mov	ecx, ebx
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	imul	eax, 63236				; 0000f704H
	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	cmp	esi, DWORD PTR [eax+ecx+44]
	jne	SHORT $LN7@AlexanderC
$LN5@AlexanderC:

; 77   : 			{
; 78   : 				for(int iPlayerLoop = 0; iPlayerLoop < MAX_PLAYERS; iPlayerLoop++)

	add	edi, 63236				; 0000f704H
	cmp	edi, 4047104				; 003dc100H
	jl	$LL6@AlexanderC

; 88   : 							{
; 89   : 								return;	// Nope.
; 90   : 							}
; 91   : 						}
; 92   : 					}
; 93   : 				}
; 94   : 				// Yep.
; 95   : 				gDLL->UnlockAchievement(ACHIEVEMENT_SPECIAL_CONQUEST_WORLD);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+828]
	push	116					; 00000074H
	call	eax
$LN7@AlexanderC:

; 96   : 			}
; 97   : 		}
; 98   : 	}

	lea	ecx, DWORD PTR _szLeaderName$218689[esp+52]
	mov	DWORD PTR __$EHRec$[esp+60], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	pop	esi
	pop	edi
$LN9@AlexanderC:

; 99   : }

	mov	ecx, DWORD PTR __$EHRec$[esp+44]
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AlexanderConquest@CvAchievementUnlocker@@SAXW4PlayerTypes@@@Z$0:
	lea	ecx, DWORD PTR _szLeaderName$218689[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?AlexanderConquest@CvAchievementUnlocker@@SAXW4PlayerTypes@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?AlexanderConquest@CvAchievementUnlocker@@SAXW4PlayerTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AlexanderConquest@CvAchievementUnlocker@@SAXW4PlayerTypes@@@Z ENDP ; CvAchievementUnlocker::AlexanderConquest
PUBLIC	?AlliedWithCityState@CvPlayerAchievements@@QAEXW4PlayerTypes@@@Z ; CvPlayerAchievements::AlliedWithCityState
EXTRN	?GetAlly@CvMinorCivAI@@QBE?AW4PlayerTypes@@XZ:PROC ; CvMinorCivAI::GetAlly
EXTRN	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ:PROC ; CvPlayer::GetMinorCivAI
EXTRN	?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z:PROC ; CvReligionBeliefs::HasBelief
EXTRN	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z:PROC ; CvGameReligions::GetReligion
EXTRN	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ:PROC ; CvGame::GetGameReligions
EXTRN	?GetReligionCreatedByPlayer@CvPlayerReligions@@QBE?AW4ReligionTypes@@XZ:PROC ; CvPlayerReligions::GetReligionCreatedByPlayer
EXTRN	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ:PROC ; CvPlayer::GetReligions
; Function compile flags: /Ogtpy
;	COMDAT ?AlliedWithCityState@CvPlayerAchievements@@QAEXW4PlayerTypes@@@Z
_TEXT	SEGMENT
_eNewCityStateAlly$ = 8					; size = 4
?AlliedWithCityState@CvPlayerAchievements@@QAEXW4PlayerTypes@@@Z PROC ; CvPlayerAchievements::AlliedWithCityState, COMDAT
; _this$ = ecx

; 131  : {

	push	ebx
	mov	ebx, ecx

; 132  : 	if(m_kPlayer.GetID() != GC.getGame().getActivePlayer())

	mov	eax, DWORD PTR [ebx]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	esi
	mov	esi, DWORD PTR [eax+44]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	esi, eax
	jne	$LN1@AlliedWith

; 133  : 		return;
; 134  : 
; 135  : 	//Cache value if needed
; 136  : 	if(m_ePapalPrimacyType == UNDEFINED_TYPE)

	cmp	DWORD PTR [ebx+12], -999		; fffffc19H
	jne	SHORT $LN11@AlliedWith

; 137  : 	{
; 138  : 		m_ePapalPrimacyType = (BeliefTypes)GC.getInfoTypeForString("BELIEF_PAPAL_PRIMACY", true);

	push	1
	push	OFFSET $SG218732
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR [ebx+12], eax
$LN11@AlliedWith:

; 139  : 	}
; 140  : 	
; 141  : 	if(m_ePapalPrimacyType != NO_BELIEF)

	cmp	DWORD PTR [ebx+12], -1
	je	$LN1@AlliedWith

; 142  : 	{
; 143  : 		const ReligionTypes eReligion = m_kPlayer.GetReligions()->GetReligionCreatedByPlayer();

	mov	ecx, DWORD PTR [ebx]
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	ecx, eax
	call	?GetReligionCreatedByPlayer@CvPlayerReligions@@QBE?AW4ReligionTypes@@XZ ; CvPlayerReligions::GetReligionCreatedByPlayer

; 144  : 		if(eReligion != NO_RELIGION)

	cmp	eax, -1
	je	$LN1@AlliedWith

; 145  : 		{
; 146  : 			const CvReligion* pReligion = GC.getGame().GetGameReligions()->GetReligion(eReligion, m_kPlayer.GetID());

	mov	ecx, DWORD PTR [ebx]
	mov	ecx, DWORD PTR [ecx+44]
	push	ecx
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	eax
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion

; 147  : 			if(pReligion != NULL)

	test	eax, eax
	je	$LN1@AlliedWith

; 148  : 			{
; 149  : 				if(pReligion->m_Beliefs.HasBelief(m_ePapalPrimacyType))

	mov	edx, DWORD PTR [ebx+12]
	push	edx
	lea	ecx, DWORD PTR [eax+152]
	call	?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z ; CvReligionBeliefs::HasBelief
	test	al, al
	je	SHORT $LN1@AlliedWith
	push	ebp
	push	edi

; 150  : 				{
; 151  : 					int iNumAllies = 0;

	xor	ebp, ebp
	xor	edi, edi
	npad	12
$LL6@AlliedWith:

; 154  : 					{
; 155  : 						const PlayerTypes ePlayer = static_cast<PlayerTypes>(i);
; 156  : 						CvPlayerAI& kPlayer = GET_PLAYER(ePlayer);

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers

; 157  : 						if(kPlayer.isAlive() && kPlayer.isMinorCiv())

	cmp	BYTE PTR [edi+eax+2256], 0
	lea	esi, DWORD PTR [edi+eax]
	je	SHORT $LN5@AlliedWith
	mov	ecx, esi
	call	?isMinorCiv@CvPlayer@@QBE_NXZ		; CvPlayer::isMinorCiv
	test	al, al
	je	SHORT $LN5@AlliedWith

; 158  : 						{
; 159  : 							const PlayerTypes eAlly = kPlayer.GetMinorCivAI()->GetAlly();

	mov	ecx, esi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetAlly@CvMinorCivAI@@QBE?AW4PlayerTypes@@XZ ; CvMinorCivAI::GetAlly

; 160  : 							if(eAlly == m_kPlayer.GetID())

	mov	ecx, DWORD PTR [ebx]
	cmp	eax, DWORD PTR [ecx+44]
	jne	SHORT $LN5@AlliedWith

; 161  : 								iNumAllies++;

	inc	ebp
$LN5@AlliedWith:

; 152  : 					//We've got the belief! How many city state Allies do we have??
; 153  : 					for(int i = 0; i < MAX_CIV_PLAYERS; ++i)

	add	edi, 63236				; 0000f704H
	cmp	edi, 3983868				; 003cc9fcH
	jl	SHORT $LL6@AlliedWith
	pop	edi

; 162  : 						}
; 163  : 					}
; 164  : 
; 165  : 					if(iNumAllies >= 12)

	cmp	ebp, 12					; 0000000cH
	pop	ebp
	jl	SHORT $LN1@AlliedWith

; 166  : 					{
; 167  : 						gDLL->UnlockAchievement(ACHIEVEMENT_XP1_27);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	edx, DWORD PTR [ecx]
	pop	esi
	pop	ebx
	mov	DWORD PTR _eNewCityStateAlly$[esp-4], 217 ; 000000d9H
	mov	eax, DWORD PTR [edx+828]
	jmp	eax
$LN1@AlliedWith:
	pop	esi
	pop	ebx

; 168  : 					}
; 169  : 				}
; 170  : 			}
; 171  : 		}
; 172  : 	}
; 173  : }

	ret	4
?AlliedWithCityState@CvPlayerAchievements@@QAEXW4PlayerTypes@@@Z ENDP ; CvPlayerAchievements::AlliedWithCityState
_TEXT	ENDS
PUBLIC	?AddUnit@CvPlayerAchievements@@QAEXPAVCvUnit@@@Z ; CvPlayerAchievements::AddUnit
EXTRN	?getUnitType@CvUnit@@QBE?BW4UnitTypes@@XZ:PROC	; CvUnit::getUnitType
EXTRN	?getCivilizationType@CvPlayer@@QBE?AW4CivilizationTypes@@XZ:PROC ; CvPlayer::getCivilizationType
; Function compile flags: /Ogtpy
;	COMDAT ?AddUnit@CvPlayerAchievements@@QAEXPAVCvUnit@@@Z
_TEXT	SEGMENT
_pUnit$ = 8						; size = 4
?AddUnit@CvPlayerAchievements@@QAEXPAVCvUnit@@@Z PROC	; CvPlayerAchievements::AddUnit, COMDAT
; _this$ = ecx

; 176  : {

	push	esi
	mov	esi, ecx

; 177  : 	if(m_kPlayer.GetID() != GC.getGame().getActivePlayer())

	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	mov	edi, DWORD PTR [eax+44]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	edi, eax
	jne	$LN1@AddUnit

; 178  : 		return;
; 179  : 
; 180  : 	//Attempt to read from cache
; 181  : 	if(m_eEthiopiaType == UNDEFINED_TYPE)

	mov	edi, -999				; fffffc19H
	cmp	DWORD PTR [esi+32], edi
	jne	SHORT $LN5@AddUnit

; 182  : 	{
; 183  : 		m_eEthiopiaType = (CivilizationTypes)GC.getInfoTypeForString("CIVILIZATION_ETHIOPIA", true);

	push	1
	push	OFFSET $SG218758
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR [esi+32], eax
$LN5@AddUnit:

; 184  : 	}
; 185  : 
; 186  : 	if(m_eGreatProphetType == UNDEFINED_TYPE)

	cmp	DWORD PTR [esi+60], edi
	jne	SHORT $LN4@AddUnit

; 187  : 	{
; 188  : 		m_eGreatProphetType = (UnitTypes)GC.getInfoTypeForString("UNIT_PROPHET", true);

	push	1
	push	OFFSET $SG218761
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR [esi+60], eax
$LN4@AddUnit:

; 189  : 	}
; 190  : 
; 191  : 	if(m_eEthiopiaType != NO_CIVILIZATION && m_eGreatProphetType != NO_UNIT)

	or	eax, -1
	cmp	DWORD PTR [esi+32], eax
	je	SHORT $LN1@AddUnit
	cmp	DWORD PTR [esi+60], eax
	je	SHORT $LN1@AddUnit

; 192  : 	{
; 193  : 		//* ACHIEVEMENT_XP1_32 - As Ethiopia, earn 5 great prophets
; 194  : 		if(m_kPlayer.getCivilizationType() == m_eEthiopiaType && pUnit->getUnitType() == m_eGreatProphetType)

	mov	ecx, DWORD PTR [esi]
	call	?getCivilizationType@CvPlayer@@QBE?AW4CivilizationTypes@@XZ ; CvPlayer::getCivilizationType
	cmp	eax, DWORD PTR [esi+32]
	jne	SHORT $LN1@AddUnit
	mov	ecx, DWORD PTR _pUnit$[esp+4]
	call	?getUnitType@CvUnit@@QBE?BW4UnitTypes@@XZ ; CvUnit::getUnitType
	cmp	eax, DWORD PTR [esi+60]
	jne	SHORT $LN1@AddUnit

; 195  : 		{
; 196  : 			m_iAchievement_XP1_32_Progress++;

	inc	DWORD PTR [esi+4]

; 197  : 			if(m_iAchievement_XP1_32_Progress >= 5)

	cmp	DWORD PTR [esi+4], 5
	jl	SHORT $LN1@AddUnit

; 198  : 			{
; 199  : 				gDLL->UnlockAchievement(ACHIEVEMENT_XP1_32);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	edx, DWORD PTR [ecx]
	pop	edi
	pop	esi
	mov	DWORD PTR _pUnit$[esp-4], 222		; 000000deH
	mov	eax, DWORD PTR [edx+828]
	jmp	eax
$LN1@AddUnit:
	pop	edi
	pop	esi

; 200  : 			}
; 201  : 		}	
; 202  : 	}
; 203  : }

	ret	4
?AddUnit@CvPlayerAchievements@@QAEXPAVCvUnit@@@Z ENDP	; CvPlayerAchievements::AddUnit
_TEXT	ENDS
PUBLIC	?AttackedUnitWithUnit@CvPlayerAchievements@@QAEXPAVCvUnit@@0@Z ; CvPlayerAchievements::AttackedUnitWithUnit
EXTRN	?plot@CvUnit@@QBEPAVCvPlot@@XZ:PROC		; CvUnit::plot
EXTRN	?getCivilizationType@CvUnit@@QBE?AW4CivilizationTypes@@XZ:PROC ; CvUnit::getCivilizationType
; Function compile flags: /Ogtpy
;	COMDAT ?AttackedUnitWithUnit@CvPlayerAchievements@@QAEXPAVCvUnit@@0@Z
_TEXT	SEGMENT
_pAttackingUnit$ = 8					; size = 4
_pDefendingUnit$ = 12					; size = 4
?AttackedUnitWithUnit@CvPlayerAchievements@@QAEXPAVCvUnit@@0@Z PROC ; CvPlayerAchievements::AttackedUnitWithUnit, COMDAT
; _this$ = ecx

; 206  : {

	push	esi
	mov	esi, ecx

; 207  : 	if(m_kPlayer.GetID() != GC.getGame().getActivePlayer())

	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	mov	edi, DWORD PTR [eax+44]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	edi, eax
	jne	$LN1@AttackedUn

; 208  : 		return;
; 209  : 
; 210  : 	if(m_eCarthageType == UNDEFINED_TYPE)

	mov	edi, -999				; fffffc19H
	cmp	DWORD PTR [esi+44], edi
	jne	SHORT $LN5@AttackedUn

; 211  : 	{
; 212  : 		m_eCarthageType = (CivilizationTypes)GC.getInfoTypeForString("CIVILIZATION_CARTHAGE", true);

	push	1
	push	OFFSET $SG218773
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR [esi+44], eax
$LN5@AttackedUn:

; 213  : 	}
; 214  : 
; 215  : 	if(m_eRomeType == UNDEFINED_TYPE)

	cmp	DWORD PTR [esi+48], edi
	jne	SHORT $LN4@AttackedUn

; 216  : 	{
; 217  : 		m_eRomeType = (CivilizationTypes)GC.getInfoTypeForString("CIVILIZATION_ROME", true);

	push	1
	push	OFFSET $SG218776
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR [esi+48], eax
$LN4@AttackedUn:

; 218  : 	}
; 219  : 
; 220  : 	if(m_eAfricanForestElephantType == UNDEFINED_TYPE)

	cmp	DWORD PTR [esi+64], edi
	jne	SHORT $LN3@AttackedUn

; 221  : 	{
; 222  : 		m_eAfricanForestElephantType = (UnitTypes)GC.getInfoTypeForString("UNIT_CARTHAGINIAN_FOREST_ELEPHANT", true);

	push	1
	push	OFFSET $SG218779
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR [esi+64], eax
$LN3@AttackedUn:

; 223  : 	}
; 224  : 	
; 225  : 	if(m_eCarthageType != NO_CIVILIZATION && m_eRomeType != NO_CIVILIZATION && m_eAfricanForestElephantType != NO_UNIT)

	or	eax, -1
	cmp	DWORD PTR [esi+44], eax
	je	SHORT $LN1@AttackedUn
	cmp	DWORD PTR [esi+48], eax
	je	SHORT $LN1@AttackedUn
	cmp	DWORD PTR [esi+64], eax
	je	SHORT $LN1@AttackedUn

; 226  : 	{
; 227  : 		if(pAttackingUnit->getCivilizationType() == m_eCarthageType &&
; 228  : 			pAttackingUnit->getUnitType() == m_eAfricanForestElephantType &&
; 229  : 			pAttackingUnit->plot()->getPlotType() == PLOT_MOUNTAIN &&
; 230  : 			pDefendingUnit->getCivilizationType() == m_eRomeType)

	mov	edi, DWORD PTR _pAttackingUnit$[esp+4]
	mov	ecx, edi
	call	?getCivilizationType@CvUnit@@QBE?AW4CivilizationTypes@@XZ ; CvUnit::getCivilizationType
	cmp	eax, DWORD PTR [esi+44]
	jne	SHORT $LN1@AttackedUn
	mov	ecx, edi
	call	?getUnitType@CvUnit@@QBE?BW4UnitTypes@@XZ ; CvUnit::getUnitType
	cmp	eax, DWORD PTR [esi+64]
	jne	SHORT $LN1@AttackedUn
	mov	ecx, edi
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot
	cmp	BYTE PTR [eax+5], 0
	jne	SHORT $LN1@AttackedUn
	mov	ecx, DWORD PTR _pDefendingUnit$[esp+4]
	call	?getCivilizationType@CvUnit@@QBE?AW4CivilizationTypes@@XZ ; CvUnit::getCivilizationType
	cmp	eax, DWORD PTR [esi+48]
	jne	SHORT $LN1@AttackedUn

; 231  : 		{
; 232  : 			gDLL->UnlockAchievement(ACHIEVEMENT_XP1_29);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+828]
	push	219					; 000000dbH
	call	eax
$LN1@AttackedUn:
	pop	edi
	pop	esi

; 233  : 		}
; 234  : 	}
; 235  : }

	ret	8
?AttackedUnitWithUnit@CvPlayerAchievements@@QAEXPAVCvUnit@@0@Z ENDP ; CvPlayerAchievements::AttackedUnitWithUnit
_TEXT	ENDS
PUBLIC	?KilledUnitWithUnit@CvPlayerAchievements@@QAEXPAVCvUnit@@0@Z ; CvPlayerAchievements::KilledUnitWithUnit
EXTRN	?getUnitByIndex@CvPlot@@QBEPAVCvUnit@@H@Z:PROC	; CvPlot::getUnitByIndex
EXTRN	?getNumUnits@CvPlot@@QBEHXZ:PROC		; CvPlot::getNumUnits
EXTRN	?getDomainType@CvUnit@@QBE?AW4DomainTypes@@XZ:PROC ; CvUnit::getDomainType
; Function compile flags: /Ogtpy
;	COMDAT ?KilledUnitWithUnit@CvPlayerAchievements@@QAEXPAVCvUnit@@0@Z
_TEXT	SEGMENT
_pKillingUnit$ = 8					; size = 4
_pKilledUnit$ = 12					; size = 4
?KilledUnitWithUnit@CvPlayerAchievements@@QAEXPAVCvUnit@@0@Z PROC ; CvPlayerAchievements::KilledUnitWithUnit, COMDAT
; _this$ = ecx

; 246  : {

	push	ebx
	mov	ebx, ecx

; 247  : 	if(m_kPlayer.GetID() != GC.getGame().getActivePlayer())

	mov	eax, DWORD PTR [ebx]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	esi
	mov	esi, DWORD PTR [eax+44]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	esi, eax
	jne	$LN2@KilledUnit
	push	ebp

; 248  : 		return;
; 249  : 
; 250  : 	if(m_eByzantinesType == UNDEFINED_TYPE)

	mov	ebp, -999				; fffffc19H
	cmp	DWORD PTR [ebx+36], ebp
	jne	SHORT $LN82@KilledUnit

; 251  : 	{
; 252  : 		m_eByzantinesType = (CivilizationTypes)GC.getInfoTypeForString("CIVILIZATION_BYZANTIUM", true);

	push	1
	push	OFFSET $SG218795
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR [ebx+36], eax
$LN82@KilledUnit:

; 253  : 	}
; 254  : 
; 255  : 	if(m_eGreekType == UNDEFINED_TYPE)

	cmp	DWORD PTR [ebx+40], ebp
	jne	SHORT $LN85@KilledUnit

; 256  : 	{
; 257  : 		m_eGreekType = (CivilizationTypes)GC.getInfoTypeForString("CIVILIZATION_GREECE", true);

	push	1
	push	OFFSET $SG218798
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR [ebx+40], eax
$LN85@KilledUnit:

; 258  : 	}
; 259  : 
; 260  : 	if(m_eDromonType == UNDEFINED_TYPE)

	cmp	DWORD PTR [ebx+56], ebp
	jne	SHORT $LN12@KilledUnit

; 261  : 	{
; 262  : 		m_eDromonType = (UnitTypes)GC.getInfoTypeForString("UNIT_BYZANTINE_DROMON", true);

	push	1
	push	OFFSET $SG218801
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR [ebx+56], eax
$LN12@KilledUnit:

; 263  : 	}
; 264  : 
; 265  : 	if(m_eDromonType != NO_UNIT && m_eByzantinesType != NO_CIVILIZATION && m_eGreekType != NO_CIVILIZATION)

	mov	esi, DWORD PTR _pKillingUnit$[esp+8]
	or	eax, -1
	push	edi
	cmp	DWORD PTR [ebx+56], eax
	je	SHORT $LN84@KilledUnit
	cmp	DWORD PTR [ebx+36], eax
	je	SHORT $LN84@KilledUnit
	cmp	DWORD PTR [ebx+40], eax
	je	SHORT $LN84@KilledUnit

; 266  : 	{
; 267  : 		//* ACHIEVEMENT_XP1_33 - As Byzantines, sink 10 Greek ships with a Dromon
; 268  : 		if(	pKillingUnit->getCivilizationType() == m_eByzantinesType && 
; 269  : 			pKillingUnit->getUnitType() == m_eDromonType &&
; 270  : 			pKilledUnit->getCivilizationType() == m_eGreekType &&
; 271  : 			pKilledUnit->getDomainType() == DOMAIN_SEA)

	mov	ecx, esi
	call	?getCivilizationType@CvUnit@@QBE?AW4CivilizationTypes@@XZ ; CvUnit::getCivilizationType
	cmp	eax, DWORD PTR [ebx+36]
	jne	SHORT $LN84@KilledUnit
	mov	ecx, esi
	call	?getUnitType@CvUnit@@QBE?BW4UnitTypes@@XZ ; CvUnit::getUnitType
	cmp	eax, DWORD PTR [ebx+56]
	jne	SHORT $LN84@KilledUnit
	mov	edi, DWORD PTR _pKilledUnit$[esp+12]
	mov	ecx, edi
	call	?getCivilizationType@CvUnit@@QBE?AW4CivilizationTypes@@XZ ; CvUnit::getCivilizationType
	cmp	eax, DWORD PTR [ebx+40]
	jne	SHORT $LN84@KilledUnit
	mov	ecx, edi
	call	?getDomainType@CvUnit@@QBE?AW4DomainTypes@@XZ ; CvUnit::getDomainType
	test	eax, eax
	jne	SHORT $LN84@KilledUnit

; 272  : 		{
; 273  : 			m_iAchievement_XP1_33_Progress++;

	inc	DWORD PTR [ebx+8]

; 274  : 			if(m_iAchievement_XP1_33_Progress >= 10)

	cmp	DWORD PTR [ebx+8], 10			; 0000000aH
	jl	SHORT $LN84@KilledUnit

; 275  : 			{
; 276  : 				gDLL->UnlockAchievement(ACHIEVEMENT_XP1_33);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+828]
	push	223					; 000000dfH
	call	eax
$LN84@KilledUnit:

; 277  : 			}
; 278  : 		}
; 279  : 	}
; 280  : 
; 281  : 	bool bUsingXP1Scenario3 = gDLL->IsModActivated(CIV5_XP1_SCENARIO3_MODID);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+44]
	push	OFFSET $SG92492
	call	eax

; 282  : 	if(bUsingXP1Scenario3)

	test	al, al
	je	$LN88@KilledUnit

; 283  : 	{
; 284  : 		if(m_eSkyFortress == UNDEFINED_TYPE)

	cmp	DWORD PTR [ebx+76], ebp
	jne	SHORT $LN86@KilledUnit

; 285  : 		{
; 286  : 			m_eSkyFortress = (UnitTypes)GC.getInfoTypeForString("UNIT_SKY_FORTRESS" , true);

	push	1
	push	OFFSET $SG218809
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR [ebx+76], eax
$LN86@KilledUnit:

; 287  : 		}
; 288  : 
; 289  : 		if(pKillingUnit->getDomainType() == DOMAIN_AIR)

	mov	ecx, esi
	call	?getDomainType@CvUnit@@QBE?AW4DomainTypes@@XZ ; CvUnit::getDomainType
	cmp	eax, 1
	jne	$LN88@KilledUnit

; 290  : 		{
; 291  : 			const int iX = pKillingUnit->getX();

	mov	eax, DWORD PTR [esi+76]

; 292  : 			const int iY = pKillingUnit->getY();

	mov	ebp, DWORD PTR [esi+88]

; 293  : 
; 294  : 			CvPlot* pkPlot = GC.getMap().plot(iX, iY);

	cmp	eax, -2147483647			; 80000001H
	je	$LN88@KilledUnit
	cmp	ebp, -2147483647			; 80000001H
	je	$LN88@KilledUnit
	mov	edi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	cmp	BYTE PTR [edi+4056], 0
	mov	ecx, DWORD PTR [edi+4020]
	je	SHORT $LN81@KilledUnit
	test	eax, eax
	jge	SHORT $LN50@KilledUnit
	cdq
	idiv	ecx
	mov	esi, edx
	add	esi, ecx
	jmp	SHORT $LN52@KilledUnit
$LN50@KilledUnit:
	cmp	eax, ecx
	jl	SHORT $LN81@KilledUnit
	cdq
	idiv	ecx
	mov	esi, edx
	jmp	SHORT $LN52@KilledUnit
$LN81@KilledUnit:
	mov	esi, eax
$LN52@KilledUnit:
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	cmp	BYTE PTR [edx+4057], 0
	mov	edi, DWORD PTR [edi+4024]
	je	SHORT $LN83@KilledUnit
	test	ebp, ebp
	jge	SHORT $LN60@KilledUnit
	mov	eax, ebp
	cdq
	idiv	edi
	add	edx, edi
	jmp	SHORT $LN62@KilledUnit
$LN60@KilledUnit:
	cmp	ebp, edi
	jl	SHORT $LN83@KilledUnit
	mov	eax, ebp
	cdq
	idiv	edi
	jmp	SHORT $LN62@KilledUnit
$LN83@KilledUnit:
	mov	edx, ebp
$LN62@KilledUnit:
	test	esi, esi
	jl	SHORT $LN88@KilledUnit
	cmp	esi, ecx
	jge	SHORT $LN88@KilledUnit
	test	edx, edx
	jl	SHORT $LN88@KilledUnit
	cmp	edx, edi
	jge	SHORT $LN88@KilledUnit
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	imul	ecx, edx
	add	ecx, esi
	imul	ecx, 484				; 000001e4H
	add	ecx, DWORD PTR [eax+4068]
	mov	edi, ecx

; 295  : 			if(pkPlot != NULL)

	je	SHORT $LN88@KilledUnit

; 296  : 			{
; 297  : 				const int iNumUnits = pkPlot->getNumUnits();

	call	?getNumUnits@CvPlot@@QBEHXZ		; CvPlot::getNumUnits
	mov	ebp, eax

; 298  : 				for(int i = 0; i < iNumUnits; ++i)

	xor	esi, esi
	test	ebp, ebp
	jle	SHORT $LN88@KilledUnit
	npad	6
$LL4@KilledUnit:

; 299  : 				{
; 300  : 					CvUnit* pUnit = pkPlot->getUnitByIndex(i);

	push	esi
	mov	ecx, edi
	call	?getUnitByIndex@CvPlot@@QBEPAVCvUnit@@H@Z ; CvPlot::getUnitByIndex

; 301  : 					if(pUnit && pUnit->getUnitType() == m_eSkyFortress)

	test	eax, eax
	je	SHORT $LN3@KilledUnit
	mov	ecx, eax
	call	?getUnitType@CvUnit@@QBE?BW4UnitTypes@@XZ ; CvUnit::getUnitType
	cmp	eax, DWORD PTR [ebx+76]
	jne	SHORT $LN3@KilledUnit

; 302  : 					{
; 303  : 						gDLL->UnlockAchievement(ACHIEVEMENT_XP1_46);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+828]
	push	236					; 000000ecH
	call	eax
$LN3@KilledUnit:
	inc	esi
	cmp	esi, ebp
	jl	SHORT $LL4@KilledUnit
$LN88@KilledUnit:
	pop	edi
	pop	ebp
$LN2@KilledUnit:
	pop	esi
	pop	ebx

; 304  : 					}
; 305  : 				}
; 306  : 			}
; 307  : 		}
; 308  : 	}
; 309  : }

	ret	8
?KilledUnitWithUnit@CvPlayerAchievements@@QAEXPAVCvUnit@@0@Z ENDP ; CvPlayerAchievements::KilledUnitWithUnit
_TEXT	ENDS
PUBLIC	?StartTurn@CvPlayerAchievements@@QAEXXZ		; CvPlayerAchievements::StartTurn
EXTRN	?nextUnit@CvPlayer@@QBEPBVCvUnit@@PAH_N@Z:PROC	; CvPlayer::nextUnit
EXTRN	?firstUnit@CvPlayer@@QBEPBVCvUnit@@PAH_N@Z:PROC	; CvPlayer::firstUnit
; Function compile flags: /Ogtpy
;	COMDAT ?StartTurn@CvPlayerAchievements@@QAEXXZ
_TEXT	SEGMENT
_iLoop$218837 = -4					; size = 4
?StartTurn@CvPlayerAchievements@@QAEXXZ PROC		; CvPlayerAchievements::StartTurn, COMDAT
; _this$ = ecx

; 312  : {

	push	ecx
	push	esi
	push	edi
	mov	edi, ecx

; 313  : 	if(m_kPlayer.GetID() != GC.getGame().getActivePlayer())

	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	esi, DWORD PTR [eax+44]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	esi, eax
	jne	$LN7@StartTurn

; 314  : 		return;
; 315  : 
; 316  : 	if(m_eSwedenType == UNDEFINED_TYPE)

	mov	esi, -999				; fffffc19H
	cmp	DWORD PTR [edi+52], esi
	jne	SHORT $LN31@StartTurn

; 317  : 	{
; 318  : 		m_eSwedenType = (CivilizationTypes)GC.getInfoTypeForString("CIVILIZATION_SWEDEN", true);

	push	1
	push	OFFSET $SG218828
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR [edi+52], eax
$LN31@StartTurn:

; 319  : 	}
; 320  : 
; 321  : 	if(m_eGreatGeneralType == UNDEFINED_TYPE)

	cmp	DWORD PTR [edi+68], esi
	jne	SHORT $LN33@StartTurn

; 322  : 	{
; 323  : 		m_eGreatGeneralType = (UnitTypes)GC.getInfoTypeForString("UNIT_GREAT_GENERAL", true);

	push	1
	push	OFFSET $SG218831
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR [edi+68], eax
$LN33@StartTurn:

; 324  : 	}
; 325  : 
; 326  : 	if(m_eHakkapelittaType == UNDEFINED_TYPE)

	cmp	DWORD PTR [edi+72], esi
	jne	SHORT $LN12@StartTurn

; 327  : 	{
; 328  : 		m_eHakkapelittaType = (UnitTypes)GC.getInfoTypeForString("UNIT_SWEDISH_HAKKAPELIITTA", true);

	push	1
	push	OFFSET $SG218834
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR [edi+72], eax
$LN12@StartTurn:

; 329  : 	}
; 330  : 
; 331  : 	if(m_eSwedenType != NO_CIVILIZATION && m_eGreatGeneralType != NO_UNIT && m_eHakkapelittaType != NO_UNIT)

	or	eax, -1
	cmp	DWORD PTR [edi+52], eax
	je	$LN7@StartTurn
	cmp	DWORD PTR [edi+68], eax
	je	$LN7@StartTurn
	cmp	DWORD PTR [edi+72], eax
	je	$LN7@StartTurn

; 332  : 	{
; 333  : 		if(m_kPlayer.getCivilizationType() == m_eSwedenType)

	mov	ecx, DWORD PTR [edi]
	call	?getCivilizationType@CvPlayer@@QBE?AW4CivilizationTypes@@XZ ; CvPlayer::getCivilizationType
	cmp	eax, DWORD PTR [edi+52]
	jne	$LN7@StartTurn

; 334  : 		{
; 335  : 			int iLoop = 0;
; 336  : 			for(const CvUnit* pUnit = m_kPlayer.firstUnit(&iLoop); pUnit != NULL; pUnit = m_kPlayer.nextUnit(&iLoop))

	push	0
	lea	ecx, DWORD PTR _iLoop$218837[esp+16]
	push	ecx
	mov	ecx, DWORD PTR [edi]
	mov	DWORD PTR _iLoop$218837[esp+20], 0
	call	?firstUnit@CvPlayer@@QBEPBVCvUnit@@PAH_N@Z ; CvPlayer::firstUnit
	mov	esi, eax
	test	esi, esi
	je	SHORT $LN7@StartTurn
	push	ebx
	push	ebp
	npad	7
$LL9@StartTurn:

; 337  : 			{
; 338  : 				if(pUnit->getUnitType() == m_eGreatGeneralType)

	mov	ecx, esi
	call	?getUnitType@CvUnit@@QBE?BW4UnitTypes@@XZ ; CvUnit::getUnitType
	cmp	eax, DWORD PTR [edi+68]
	jne	SHORT $LN8@StartTurn

; 339  : 				{
; 340  : 					CvPlot* pPlot = pUnit->plot();

	mov	ecx, esi
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot
	mov	ebx, eax

; 341  : 					if(pPlot != NULL)

	test	ebx, ebx
	je	SHORT $LN8@StartTurn

; 342  : 					{
; 343  : 						int iNumUnits = pPlot->getNumUnits();

	mov	ecx, ebx
	call	?getNumUnits@CvPlot@@QBEHXZ		; CvPlot::getNumUnits
	mov	ebp, eax

; 344  : 						for(int i = 0; i < iNumUnits; ++i)

	xor	esi, esi
	test	ebp, ebp
	jle	SHORT $LN8@StartTurn
$LL4@StartTurn:

; 345  : 						{
; 346  : 							CvUnit* pStackedUnit = pPlot->getUnitByIndex(i);

	push	esi
	mov	ecx, ebx
	call	?getUnitByIndex@CvPlot@@QBEPAVCvUnit@@H@Z ; CvPlot::getUnitByIndex

; 347  : 							if(pStackedUnit->getUnitType() == m_eHakkapelittaType)

	mov	ecx, eax
	call	?getUnitType@CvUnit@@QBE?BW4UnitTypes@@XZ ; CvUnit::getUnitType
	cmp	eax, DWORD PTR [edi+72]
	je	SHORT $LN28@StartTurn
	inc	esi
	cmp	esi, ebp
	jl	SHORT $LL4@StartTurn
$LN8@StartTurn:

; 334  : 		{
; 335  : 			int iLoop = 0;
; 336  : 			for(const CvUnit* pUnit = m_kPlayer.firstUnit(&iLoop); pUnit != NULL; pUnit = m_kPlayer.nextUnit(&iLoop))

	mov	ecx, DWORD PTR [edi]
	push	0
	lea	edx, DWORD PTR _iLoop$218837[esp+24]
	push	edx
	call	?nextUnit@CvPlayer@@QBEPBVCvUnit@@PAH_N@Z ; CvPlayer::nextUnit
	mov	esi, eax
	test	esi, esi
	jne	SHORT $LL9@StartTurn
	pop	ebp
	pop	ebx
	pop	edi
	pop	esi

; 350  : 								return;
; 351  : 							}
; 352  : 						}
; 353  : 					}	
; 354  : 				}
; 355  : 			}
; 356  : 		}
; 357  : 		
; 358  : 	}
; 359  : #ifdef AUI_ACHIEVEMENT_FIX_RELIGION_WE_ARE_FAMILY_WORKING
; 360  : 	ReligionTypes eMyReligion = m_kPlayer.GetReligions()->GetReligionCreatedByPlayer();
; 361  : 	if (eMyReligion > RELIGION_PANTHEON)
; 362  : 	{
; 363  : 		if (GC.getMap().numPlots() >= 80 * 52) // Determine if this is a standard size or larger map.
; 364  : 		{
; 365  : 			bool bSpreadToAllCapitals = true;
; 366  : 			for (int iI = 0; iI < MAX_CIV_PLAYERS; ++iI)
; 367  : 			{
; 368  : 				CvPlayer& kPlayer = GET_PLAYER((PlayerTypes)iI);
; 369  : 				if (kPlayer.isAlive() && !kPlayer.isMinorCiv())
; 370  : 				{
; 371  : 					CvCity* pCapital = kPlayer.getCapitalCity();
; 372  : 					if (pCapital != NULL)
; 373  : 					{
; 374  : 						CvCityReligions* pCityReligions = pCapital->GetCityReligions();
; 375  : 						if (pCityReligions != NULL)
; 376  : 						{
; 377  : 							if (pCityReligions->GetReligiousMajority() != eMyReligion)
; 378  : 							{
; 379  : 								bSpreadToAllCapitals = false;
; 380  : 								break;
; 381  : 							}
; 382  : 						}
; 383  : 					}
; 384  : 				}
; 385  : 			}
; 386  : 			if (bSpreadToAllCapitals)
; 387  : 			{
; 388  : 				gDLL->UnlockAchievement(ACHIEVEMENT_XP1_19);
; 389  : 			}
; 390  : 		}
; 391  : 	}
; 392  : #endif
; 393  : }

	pop	ecx
	ret	0
$LN28@StartTurn:

; 348  : 							{
; 349  : 								gDLL->UnlockAchievement(ACHIEVEMENT_XP1_31);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+828]
	push	221					; 000000ddH
	call	edx
	pop	ebp
	pop	ebx
$LN7@StartTurn:
	pop	edi
	pop	esi

; 350  : 								return;
; 351  : 							}
; 352  : 						}
; 353  : 					}	
; 354  : 				}
; 355  : 			}
; 356  : 		}
; 357  : 		
; 358  : 	}
; 359  : #ifdef AUI_ACHIEVEMENT_FIX_RELIGION_WE_ARE_FAMILY_WORKING
; 360  : 	ReligionTypes eMyReligion = m_kPlayer.GetReligions()->GetReligionCreatedByPlayer();
; 361  : 	if (eMyReligion > RELIGION_PANTHEON)
; 362  : 	{
; 363  : 		if (GC.getMap().numPlots() >= 80 * 52) // Determine if this is a standard size or larger map.
; 364  : 		{
; 365  : 			bool bSpreadToAllCapitals = true;
; 366  : 			for (int iI = 0; iI < MAX_CIV_PLAYERS; ++iI)
; 367  : 			{
; 368  : 				CvPlayer& kPlayer = GET_PLAYER((PlayerTypes)iI);
; 369  : 				if (kPlayer.isAlive() && !kPlayer.isMinorCiv())
; 370  : 				{
; 371  : 					CvCity* pCapital = kPlayer.getCapitalCity();
; 372  : 					if (pCapital != NULL)
; 373  : 					{
; 374  : 						CvCityReligions* pCityReligions = pCapital->GetCityReligions();
; 375  : 						if (pCityReligions != NULL)
; 376  : 						{
; 377  : 							if (pCityReligions->GetReligiousMajority() != eMyReligion)
; 378  : 							{
; 379  : 								bSpreadToAllCapitals = false;
; 380  : 								break;
; 381  : 							}
; 382  : 						}
; 383  : 					}
; 384  : 				}
; 385  : 			}
; 386  : 			if (bSpreadToAllCapitals)
; 387  : 			{
; 388  : 				gDLL->UnlockAchievement(ACHIEVEMENT_XP1_19);
; 389  : 			}
; 390  : 		}
; 391  : 	}
; 392  : #endif
; 393  : }

	pop	ecx
	ret	0
?StartTurn@CvPlayerAchievements@@QAEXXZ ENDP		; CvPlayerAchievements::StartTurn
_TEXT	ENDS
END
