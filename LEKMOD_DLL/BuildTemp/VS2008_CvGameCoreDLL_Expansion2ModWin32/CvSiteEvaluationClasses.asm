; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	c:\Users\EnormousApplePie\Documents\GitHub\Lekmod\LEKMOD_DLL\CvGameCoreDLL_Expansion2\CvSiteEvaluationClasses.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?NO_QUEST_DATA@CvMinorCivQuest@@2HB		; CvMinorCivQuest::NO_QUEST_DATA
PUBLIC	?NO_TURN@CvMinorCivQuest@@2HB			; CvMinorCivQuest::NO_TURN
CONST	SEGMENT
$SG223423 DB	'FLAVOR_GROWTH', 00H
	ORG $+2
$SG223424 DB	'FLAVOR_EXPANSION', 00H
	ORG $+3
$SG223425 DB	'FLAVOR_NAVAL', 00H
	ORG $+3
$SG223444 DB	'GAMEOPTION_AI_TWEAKS', 00H
	ORG $+3
$SG223445 DB	'GAMEOPTION_AI_GIMP_NO_BUILDING_SETTLERS', 00H
$SG223496 DB	'FLAVOR_GROWTH', 00H
	ORG $+2
$SG223497 DB	'FLAVOR_EXPANSION', 00H
	ORG $+3
$SG223502 DB	'FLAVOR_GOLD', 00H
$SG223503 DB	'FLAVOR_TILE_IMPROVEMENT', 00H
$SG223508 DB	'FLAVOR_PRODUCTION', 00H
	ORG $+2
$SG223509 DB	'FLAVOR_WONDER', 00H
	ORG $+2
$SG223513 DB	'FLAVOR_SCIENCE', 00H
	ORG $+1
$SG223517 DB	'FLAVOR_HAPPINESS', 00H
	ORG $+3
$SG223521 DB	'FLAVOR_RELIGION', 00H
$SG223568 DB	'IMPROVEMENT_TERRACE_FARM', 00H
	ORG $+3
$SG223645 DB	'IMPROVEMENT_BRAZILWOOD_CAMP', 00H
$SG223653 DB	'IMPROVEMENT_KASBAH', 00H
	ORG $+1
$SG223661 DB	'IMPROVEMENT_POLDER', 00H
CONST	ENDS
;	COMDAT ?NO_TURN@CvMinorCivQuest@@2HB
CONST	SEGMENT
?NO_TURN@CvMinorCivQuest@@2HB DD 0ffffffffH		; CvMinorCivQuest::NO_TURN
CONST	ENDS
;	COMDAT ?NO_QUEST_DATA@CvMinorCivQuest@@2HB
CONST	SEGMENT
?NO_QUEST_DATA@CvMinorCivQuest@@2HB DD 0ffffffffH	; CvMinorCivQuest::NO_QUEST_DATA
CONST	ENDS
PUBLIC	?wrapCoordDifference@@YAHHI_N@Z			; wrapCoordDifference
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvgamecoreutils.h
;	COMDAT ?wrapCoordDifference@@YAHHI_N@Z
_TEXT	SEGMENT
_iDiff$ = 8						; size = 4
_uiRange$ = 12						; size = 4
_bWrap$ = 16						; size = 1
?wrapCoordDifference@@YAHHI_N@Z PROC			; wrapCoordDifference, COMDAT

; 57   : 	if(bWrap)

	cmp	BYTE PTR _bWrap$[esp-4], 0
	mov	eax, DWORD PTR _iDiff$[esp-4]
	je	SHORT $LN5@wrapCoordD

; 58   : 	{
; 59   : 		if(iDiff > (int)(uiRange >> 1))		// Using an unsigned int so we can safely assume that value >> 1 == value / 2

	mov	edx, DWORD PTR _uiRange$[esp-4]
	mov	ecx, edx
	shr	ecx, 1
	cmp	eax, ecx
	jle	SHORT $LN3@wrapCoordD

; 60   : 		{
; 61   : 			return (iDiff - (int)uiRange);

	sub	eax, edx

; 66   : 		}
; 67   : 	}
; 68   : 
; 69   : 	return iDiff;
; 70   : }

	ret	0
$LN3@wrapCoordD:

; 62   : 		}
; 63   : 		else if(iDiff < -(int)(uiRange >> 1))

	neg	ecx
	cmp	eax, ecx
	jge	SHORT $LN5@wrapCoordD

; 64   : 		{
; 65   : 			return (iDiff + (int)uiRange);

	add	eax, edx
$LN5@wrapCoordD:

; 66   : 		}
; 67   : 	}
; 68   : 
; 69   : 	return iDiff;
; 70   : }

	ret	0
?wrapCoordDifference@@YAHHI_N@Z ENDP			; wrapCoordDifference
_TEXT	ENDS
PUBLIC	?xToHexspaceX@@YAHHH@Z				; xToHexspaceX
; Function compile flags: /Ogtpy
;	COMDAT ?xToHexspaceX@@YAHHH@Z
_TEXT	SEGMENT
_iX$ = 8						; size = 4
_iY$ = 12						; size = 4
?xToHexspaceX@@YAHHH@Z PROC				; xToHexspaceX, COMDAT

; 86   : 	return iX - ((iY >= 0) ? (iY>>1) : ((iY - 1)/2));

	mov	ecx, DWORD PTR _iY$[esp-4]
	test	ecx, ecx
	jge	SHORT $LN5@xToHexspac
	lea	eax, DWORD PTR [ecx-1]
	cdq
	sub	eax, edx
	mov	ecx, eax
$LN5@xToHexspac:
	mov	eax, DWORD PTR _iX$[esp-4]
	sar	ecx, 1
	sub	eax, ecx

; 87   : }

	ret	0
?xToHexspaceX@@YAHHH@Z ENDP				; xToHexspaceX
_TEXT	ENDS
PUBLIC	?hexspaceXToX@@YAHHH@Z				; hexspaceXToX
; Function compile flags: /Ogtpy
;	COMDAT ?hexspaceXToX@@YAHHH@Z
_TEXT	SEGMENT
_iHexspaceX$ = 8					; size = 4
_iHexspaceY$ = 12					; size = 4
?hexspaceXToX@@YAHHH@Z PROC				; hexspaceXToX, COMDAT

; 91   : 	return iHexspaceX + ((iHexspaceY >= 0) ? (iHexspaceY>>1) : ((iHexspaceY - 1)/2));

	mov	eax, DWORD PTR _iHexspaceY$[esp-4]
	test	eax, eax
	jl	SHORT $LN3@hexspaceXT
	mov	ecx, DWORD PTR _iHexspaceX$[esp-4]
	sar	eax, 1
	add	eax, ecx

; 92   : }

	ret	0
$LN3@hexspaceXT:

; 91   : 	return iHexspaceX + ((iHexspaceY >= 0) ? (iHexspaceY>>1) : ((iHexspaceY - 1)/2));

	dec	eax
	cdq
	sub	eax, edx
	mov	edx, DWORD PTR _iHexspaceX$[esp-4]
	sar	eax, 1
	add	eax, edx

; 92   : }

	ret	0
?hexspaceXToX@@YAHHH@Z ENDP				; hexspaceXToX
_TEXT	ENDS
PUBLIC	?hexDistance@@YAHHH@Z				; hexDistance
; Function compile flags: /Ogtpy
;	COMDAT ?hexDistance@@YAHHH@Z
_TEXT	SEGMENT
_iDX$ = 8						; size = 4
_iDY$ = 12						; size = 4
?hexDistance@@YAHHH@Z PROC				; hexDistance, COMDAT

; 96   : 	// I'm assuming iDX and iDY are in hex-space
; 97   : #ifdef NQM_GAME_CORE_UTILS_OPTIMIZATIONS
; 98   : 	// Delnar: Using abs() because I trust the compiler to generate more efficient code than if I'd write an abs(int) function myself, especially if the CPU has an abs(int) operation
; 99   : 	if ((iDX ^ iDY) >= 0)  // the signs match
; 100  : 	{
; 101  : 		return abs(iDX) + abs(iDY);
; 102  : 	}
; 103  : 	else
; 104  : 	{
; 105  : 		return MAX(abs(iDX), abs(iDY));
; 106  : 	}
; 107  : #else
; 108  : 	if((iDX >= 0) == (iDY >= 0))  // the signs match

	mov	eax, DWORD PTR _iDX$[esp-4]
	xor	ecx, ecx
	test	eax, eax
	setge	cl
	push	esi
	mov	esi, DWORD PTR _iDY$[esp]
	xor	edx, edx
	test	esi, esi
	setge	dl
	cmp	ecx, edx
	jne	SHORT $LN2@hexDistanc

; 109  : 	{
; 110  : 		int iAbsDX = iDX >= 0 ? iDX : -iDX;

	test	eax, eax
	jge	SHORT $LN6@hexDistanc
	neg	eax
$LN6@hexDistanc:

; 111  : 		int iAbsDY = iDY >= 0 ? iDY : -iDY;

	test	esi, esi
	jge	SHORT $LN8@hexDistanc
	neg	esi
$LN8@hexDistanc:

; 112  : 		return iAbsDX + iAbsDY;

	add	eax, esi
	pop	esi

; 119  : 	}
; 120  : #endif
; 121  : }

	ret	0
$LN2@hexDistanc:

; 113  : 	}
; 114  : 	else
; 115  : 	{
; 116  : 		int iAbsDX = iDX >= 0 ? iDX : -iDX;

	test	eax, eax
	jge	SHORT $LN10@hexDistanc
	neg	eax
$LN10@hexDistanc:

; 117  : 		int iAbsDY = iDY >= 0 ? iDY : -iDY;

	test	esi, esi
	jge	SHORT $LN12@hexDistanc
	neg	esi
$LN12@hexDistanc:

; 118  : 		return iAbsDX >= iAbsDY ? iAbsDX : iAbsDY;

	cmp	eax, esi
	jge	SHORT $LN1@hexDistanc
	mov	eax, esi
$LN1@hexDistanc:
	pop	esi

; 119  : 	}
; 120  : #endif
; 121  : }

	ret	0
?hexDistance@@YAHHH@Z ENDP				; hexDistance
_TEXT	ENDS
PUBLIC	?GetNextSpecializationDesired@CvCitySpecializationAI@@QBE?AW4CitySpecializationTypes@@XZ ; CvCitySpecializationAI::GetNextSpecializationDesired
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvcityspecializationai.h
;	COMDAT ?GetNextSpecializationDesired@CvCitySpecializationAI@@QBE?AW4CitySpecializationTypes@@XZ
_TEXT	SEGMENT
?GetNextSpecializationDesired@CvCitySpecializationAI@@QBE?AW4CitySpecializationTypes@@XZ PROC ; CvCitySpecializationAI::GetNextSpecializationDesired, COMDAT
; _this$ = ecx

; 142  : 		return m_eNextSpecializationDesired;

	mov	eax, DWORD PTR [ecx+12]

; 143  : 	};

	ret	0
?GetNextSpecializationDesired@CvCitySpecializationAI@@QBE?AW4CitySpecializationTypes@@XZ ENDP ; CvCitySpecializationAI::GetNextSpecializationDesired
_TEXT	ENDS
PUBLIC	??_7CvCitySiteEvaluator@@6B@			; CvCitySiteEvaluator::`vftable'
PUBLIC	??0CvCitySiteEvaluator@@QAE@XZ			; CvCitySiteEvaluator::CvCitySiteEvaluator
PUBLIC	??_R4CvCitySiteEvaluator@@6B@			; CvCitySiteEvaluator::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCvCitySiteEvaluator@@@8			; CvCitySiteEvaluator `RTTI Type Descriptor'
PUBLIC	??_R3CvCitySiteEvaluator@@8			; CvCitySiteEvaluator::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CvCitySiteEvaluator@@8			; CvCitySiteEvaluator::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CvCitySiteEvaluator@@8		; CvCitySiteEvaluator::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?Init@CvCitySiteEvaluator@@UAEXXZ		; CvCitySiteEvaluator::Init
PUBLIC	?ComputeFlavorMultipliers@CvCitySiteEvaluator@@UAEXPAVCvPlayer@@@Z ; CvCitySiteEvaluator::ComputeFlavorMultipliers
PUBLIC	?CanFound@CvCitySiteEvaluator@@UBE_NPAVCvPlot@@PBVCvPlayer@@_N@Z ; CvCitySiteEvaluator::CanFound
PUBLIC	?PlotFoundValue@CvCitySiteEvaluator@@UAEHPAVCvPlot@@PAVCvPlayer@@W4YieldTypes@@_N@Z ; CvCitySiteEvaluator::PlotFoundValue
PUBLIC	?PlotFertilityValue@CvCitySiteEvaluator@@UAEHPAVCvPlot@@@Z ; CvCitySiteEvaluator::PlotFertilityValue
PUBLIC	?BestFoundValueForSpecificYield@CvCitySiteEvaluator@@UAEHPAVCvPlayer@@W4YieldTypes@@@Z ; CvCitySiteEvaluator::BestFoundValueForSpecificYield
PUBLIC	?ComputeFoodValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z ; CvCitySiteEvaluator::ComputeFoodValue
PUBLIC	?ComputeHappinessValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z ; CvCitySiteEvaluator::ComputeHappinessValue
PUBLIC	?ComputeProductionValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z ; CvCitySiteEvaluator::ComputeProductionValue
PUBLIC	?ComputeGoldValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z ; CvCitySiteEvaluator::ComputeGoldValue
PUBLIC	?ComputeScienceValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z ; CvCitySiteEvaluator::ComputeScienceValue
PUBLIC	?ComputeFaithValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z ; CvCitySiteEvaluator::ComputeFaithValue
PUBLIC	?ComputeTradeableResourceValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z ; CvCitySiteEvaluator::ComputeTradeableResourceValue
PUBLIC	?ComputeStrategicValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@H@Z ; CvCitySiteEvaluator::ComputeStrategicValue
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R1A@?0A@EA@CvCitySiteEvaluator@@8
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvsiteevaluationclasses.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@CvCitySiteEvaluator@@8 DD FLAT:??_R0?AVCvCitySiteEvaluator@@@8 ; CvCitySiteEvaluator::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CvCitySiteEvaluator@@8
rdata$r	ENDS
;	COMDAT ??_R2CvCitySiteEvaluator@@8
rdata$r	SEGMENT
??_R2CvCitySiteEvaluator@@8 DD FLAT:??_R1A@?0A@EA@CvCitySiteEvaluator@@8 ; CvCitySiteEvaluator::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CvCitySiteEvaluator@@8
rdata$r	SEGMENT
??_R3CvCitySiteEvaluator@@8 DD 00H			; CvCitySiteEvaluator::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CvCitySiteEvaluator@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCvCitySiteEvaluator@@@8
_DATA	SEGMENT
??_R0?AVCvCitySiteEvaluator@@@8 DD FLAT:??_7type_info@@6B@ ; CvCitySiteEvaluator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCvCitySiteEvaluator@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CvCitySiteEvaluator@@6B@
rdata$r	SEGMENT
??_R4CvCitySiteEvaluator@@6B@ DD 00H			; CvCitySiteEvaluator::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCvCitySiteEvaluator@@@8
	DD	FLAT:??_R3CvCitySiteEvaluator@@8
rdata$r	ENDS
;	COMDAT ??_7CvCitySiteEvaluator@@6B@
CONST	SEGMENT
??_7CvCitySiteEvaluator@@6B@ DD FLAT:??_R4CvCitySiteEvaluator@@6B@ ; CvCitySiteEvaluator::`vftable'
	DD	FLAT:?Init@CvCitySiteEvaluator@@UAEXXZ
	DD	FLAT:?ComputeFlavorMultipliers@CvCitySiteEvaluator@@UAEXPAVCvPlayer@@@Z
	DD	FLAT:?CanFound@CvCitySiteEvaluator@@UBE_NPAVCvPlot@@PBVCvPlayer@@_N@Z
	DD	FLAT:?PlotFoundValue@CvCitySiteEvaluator@@UAEHPAVCvPlot@@PAVCvPlayer@@W4YieldTypes@@_N@Z
	DD	FLAT:?PlotFertilityValue@CvCitySiteEvaluator@@UAEHPAVCvPlot@@@Z
	DD	FLAT:?BestFoundValueForSpecificYield@CvCitySiteEvaluator@@UAEHPAVCvPlayer@@W4YieldTypes@@@Z
	DD	FLAT:?ComputeFoodValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z
	DD	FLAT:?ComputeHappinessValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z
	DD	FLAT:?ComputeProductionValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z
	DD	FLAT:?ComputeGoldValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z
	DD	FLAT:?ComputeScienceValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z
	DD	FLAT:?ComputeFaithValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z
	DD	FLAT:?ComputeTradeableResourceValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z
	DD	FLAT:?ComputeStrategicValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@H@Z
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??0CvCitySiteEvaluator@@QAE@XZ
_TEXT	SEGMENT
??0CvCitySiteEvaluator@@QAE@XZ PROC			; CvCitySiteEvaluator::CvCitySiteEvaluator, COMDAT
; _this$ = ecx

; 24   : {

	mov	eax, ecx
	mov	DWORD PTR [eax], OFFSET ??_7CvCitySiteEvaluator@@6B@

; 25   : 	m_iExpansionIndex = 12;

	mov	DWORD PTR [eax+72], 12			; 0000000cH

; 26   : 	m_iGrowthIndex = 13;

	mov	DWORD PTR [eax+76], 13			; 0000000dH

; 27   : }

	ret	0
??0CvCitySiteEvaluator@@QAE@XZ ENDP			; CvCitySiteEvaluator::CvCitySiteEvaluator
_TEXT	ENDS
PUBLIC	??1CvCitySiteEvaluator@@QAE@XZ			; CvCitySiteEvaluator::~CvCitySiteEvaluator
; Function compile flags: /Ogtpy
;	COMDAT ??1CvCitySiteEvaluator@@QAE@XZ
_TEXT	SEGMENT
??1CvCitySiteEvaluator@@QAE@XZ PROC			; CvCitySiteEvaluator::~CvCitySiteEvaluator, COMDAT
; _this$ = ecx

; 31   : {

	mov	DWORD PTR [ecx], OFFSET ??_7CvCitySiteEvaluator@@6B@

; 32   : }

	ret	0
??1CvCitySiteEvaluator@@QAE@XZ ENDP			; CvCitySiteEvaluator::~CvCitySiteEvaluator
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?BestFoundValueForSpecificYield@CvCitySiteEvaluator@@UAEHPAVCvPlayer@@W4YieldTypes@@@Z
_TEXT	SEGMENT
_pPlayer$ = 8						; size = 4
_eYield$ = 12						; size = 4
?BestFoundValueForSpecificYield@CvCitySiteEvaluator@@UAEHPAVCvPlayer@@W4YieldTypes@@@Z PROC ; CvCitySiteEvaluator::BestFoundValueForSpecificYield, COMDAT
; _this$ = ecx

; 765  : 	pPlayer;
; 766  : 	eYield;
; 767  : 	return 0;

	xor	eax, eax

; 768  : }

	ret	8
?BestFoundValueForSpecificYield@CvCitySiteEvaluator@@UAEHPAVCvPlayer@@W4YieldTypes@@@Z ENDP ; CvCitySiteEvaluator::BestFoundValueForSpecificYield
_TEXT	ENDS
PUBLIC	??_7CvSiteEvaluatorForSettler@@6B@		; CvSiteEvaluatorForSettler::`vftable'
PUBLIC	??0CvSiteEvaluatorForSettler@@QAE@XZ		; CvSiteEvaluatorForSettler::CvSiteEvaluatorForSettler
PUBLIC	??_R4CvSiteEvaluatorForSettler@@6B@		; CvSiteEvaluatorForSettler::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCvSiteEvaluatorForSettler@@@8		; CvSiteEvaluatorForSettler `RTTI Type Descriptor'
PUBLIC	??_R3CvSiteEvaluatorForSettler@@8		; CvSiteEvaluatorForSettler::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CvSiteEvaluatorForSettler@@8		; CvSiteEvaluatorForSettler::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CvSiteEvaluatorForSettler@@8	; CvSiteEvaluatorForSettler::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?PlotFoundValue@CvSiteEvaluatorForSettler@@UAEHPAVCvPlot@@PAVCvPlayer@@W4YieldTypes@@_N@Z ; CvSiteEvaluatorForSettler::PlotFoundValue
;	COMDAT ??_R1A@?0A@EA@CvSiteEvaluatorForSettler@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CvSiteEvaluatorForSettler@@8 DD FLAT:??_R0?AVCvSiteEvaluatorForSettler@@@8 ; CvSiteEvaluatorForSettler::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CvSiteEvaluatorForSettler@@8
rdata$r	ENDS
;	COMDAT ??_R2CvSiteEvaluatorForSettler@@8
rdata$r	SEGMENT
??_R2CvSiteEvaluatorForSettler@@8 DD FLAT:??_R1A@?0A@EA@CvSiteEvaluatorForSettler@@8 ; CvSiteEvaluatorForSettler::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CvCitySiteEvaluator@@8
rdata$r	ENDS
;	COMDAT ??_R3CvSiteEvaluatorForSettler@@8
rdata$r	SEGMENT
??_R3CvSiteEvaluatorForSettler@@8 DD 00H		; CvSiteEvaluatorForSettler::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CvSiteEvaluatorForSettler@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCvSiteEvaluatorForSettler@@@8
_DATA	SEGMENT
??_R0?AVCvSiteEvaluatorForSettler@@@8 DD FLAT:??_7type_info@@6B@ ; CvSiteEvaluatorForSettler `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCvSiteEvaluatorForSettler@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CvSiteEvaluatorForSettler@@6B@
rdata$r	SEGMENT
??_R4CvSiteEvaluatorForSettler@@6B@ DD 00H		; CvSiteEvaluatorForSettler::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCvSiteEvaluatorForSettler@@@8
	DD	FLAT:??_R3CvSiteEvaluatorForSettler@@8
rdata$r	ENDS
;	COMDAT ??_7CvSiteEvaluatorForSettler@@6B@
CONST	SEGMENT
??_7CvSiteEvaluatorForSettler@@6B@ DD FLAT:??_R4CvSiteEvaluatorForSettler@@6B@ ; CvSiteEvaluatorForSettler::`vftable'
	DD	FLAT:?Init@CvCitySiteEvaluator@@UAEXXZ
	DD	FLAT:?ComputeFlavorMultipliers@CvCitySiteEvaluator@@UAEXPAVCvPlayer@@@Z
	DD	FLAT:?CanFound@CvCitySiteEvaluator@@UBE_NPAVCvPlot@@PBVCvPlayer@@_N@Z
	DD	FLAT:?PlotFoundValue@CvSiteEvaluatorForSettler@@UAEHPAVCvPlot@@PAVCvPlayer@@W4YieldTypes@@_N@Z
	DD	FLAT:?PlotFertilityValue@CvCitySiteEvaluator@@UAEHPAVCvPlot@@@Z
	DD	FLAT:?BestFoundValueForSpecificYield@CvCitySiteEvaluator@@UAEHPAVCvPlayer@@W4YieldTypes@@@Z
	DD	FLAT:?ComputeFoodValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z
	DD	FLAT:?ComputeHappinessValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z
	DD	FLAT:?ComputeProductionValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z
	DD	FLAT:?ComputeGoldValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z
	DD	FLAT:?ComputeScienceValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z
	DD	FLAT:?ComputeFaithValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z
	DD	FLAT:?ComputeTradeableResourceValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z
	DD	FLAT:?ComputeStrategicValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@H@Z
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??0CvSiteEvaluatorForSettler@@QAE@XZ
_TEXT	SEGMENT
??0CvSiteEvaluatorForSettler@@QAE@XZ PROC		; CvSiteEvaluatorForSettler::CvSiteEvaluatorForSettler, COMDAT
; _this$ = ecx

; 1097 : {

	mov	eax, ecx
	mov	DWORD PTR [eax+72], 12			; 0000000cH
	mov	DWORD PTR [eax+76], 13			; 0000000dH
	mov	DWORD PTR [eax], OFFSET ??_7CvSiteEvaluatorForSettler@@6B@

; 1098 : }

	ret	0
??0CvSiteEvaluatorForSettler@@QAE@XZ ENDP		; CvSiteEvaluatorForSettler::CvSiteEvaluatorForSettler
_TEXT	ENDS
PUBLIC	??1CvSiteEvaluatorForSettler@@QAE@XZ		; CvSiteEvaluatorForSettler::~CvSiteEvaluatorForSettler
; Function compile flags: /Ogtpy
;	COMDAT ??1CvSiteEvaluatorForSettler@@QAE@XZ
_TEXT	SEGMENT
??1CvSiteEvaluatorForSettler@@QAE@XZ PROC		; CvSiteEvaluatorForSettler::~CvSiteEvaluatorForSettler, COMDAT
; _this$ = ecx

; 1103 : }

	mov	DWORD PTR [ecx], OFFSET ??_7CvCitySiteEvaluator@@6B@
	ret	0
??1CvSiteEvaluatorForSettler@@QAE@XZ ENDP		; CvSiteEvaluatorForSettler::~CvSiteEvaluatorForSettler
_TEXT	ENDS
PUBLIC	??_7CvSiteEvaluatorForStart@@6B@		; CvSiteEvaluatorForStart::`vftable'
PUBLIC	??0CvSiteEvaluatorForStart@@QAE@XZ		; CvSiteEvaluatorForStart::CvSiteEvaluatorForStart
PUBLIC	??_R4CvSiteEvaluatorForStart@@6B@		; CvSiteEvaluatorForStart::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCvSiteEvaluatorForStart@@@8		; CvSiteEvaluatorForStart `RTTI Type Descriptor'
PUBLIC	??_R3CvSiteEvaluatorForStart@@8			; CvSiteEvaluatorForStart::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CvSiteEvaluatorForStart@@8			; CvSiteEvaluatorForStart::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CvSiteEvaluatorForStart@@8	; CvSiteEvaluatorForStart::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?ComputeFlavorMultipliers@CvSiteEvaluatorForStart@@UAEXPAVCvPlayer@@@Z ; CvSiteEvaluatorForStart::ComputeFlavorMultipliers
PUBLIC	?PlotFoundValue@CvSiteEvaluatorForStart@@UAEHPAVCvPlot@@PAVCvPlayer@@W4YieldTypes@@_N@Z ; CvSiteEvaluatorForStart::PlotFoundValue
;	COMDAT ??_R1A@?0A@EA@CvSiteEvaluatorForStart@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CvSiteEvaluatorForStart@@8 DD FLAT:??_R0?AVCvSiteEvaluatorForStart@@@8 ; CvSiteEvaluatorForStart::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CvSiteEvaluatorForStart@@8
rdata$r	ENDS
;	COMDAT ??_R2CvSiteEvaluatorForStart@@8
rdata$r	SEGMENT
??_R2CvSiteEvaluatorForStart@@8 DD FLAT:??_R1A@?0A@EA@CvSiteEvaluatorForStart@@8 ; CvSiteEvaluatorForStart::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CvCitySiteEvaluator@@8
rdata$r	ENDS
;	COMDAT ??_R3CvSiteEvaluatorForStart@@8
rdata$r	SEGMENT
??_R3CvSiteEvaluatorForStart@@8 DD 00H			; CvSiteEvaluatorForStart::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CvSiteEvaluatorForStart@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCvSiteEvaluatorForStart@@@8
_DATA	SEGMENT
??_R0?AVCvSiteEvaluatorForStart@@@8 DD FLAT:??_7type_info@@6B@ ; CvSiteEvaluatorForStart `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCvSiteEvaluatorForStart@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CvSiteEvaluatorForStart@@6B@
rdata$r	SEGMENT
??_R4CvSiteEvaluatorForStart@@6B@ DD 00H		; CvSiteEvaluatorForStart::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCvSiteEvaluatorForStart@@@8
	DD	FLAT:??_R3CvSiteEvaluatorForStart@@8
rdata$r	ENDS
;	COMDAT ??_7CvSiteEvaluatorForStart@@6B@
CONST	SEGMENT
??_7CvSiteEvaluatorForStart@@6B@ DD FLAT:??_R4CvSiteEvaluatorForStart@@6B@ ; CvSiteEvaluatorForStart::`vftable'
	DD	FLAT:?Init@CvCitySiteEvaluator@@UAEXXZ
	DD	FLAT:?ComputeFlavorMultipliers@CvSiteEvaluatorForStart@@UAEXPAVCvPlayer@@@Z
	DD	FLAT:?CanFound@CvCitySiteEvaluator@@UBE_NPAVCvPlot@@PBVCvPlayer@@_N@Z
	DD	FLAT:?PlotFoundValue@CvSiteEvaluatorForStart@@UAEHPAVCvPlot@@PAVCvPlayer@@W4YieldTypes@@_N@Z
	DD	FLAT:?PlotFertilityValue@CvCitySiteEvaluator@@UAEHPAVCvPlot@@@Z
	DD	FLAT:?BestFoundValueForSpecificYield@CvCitySiteEvaluator@@UAEHPAVCvPlayer@@W4YieldTypes@@@Z
	DD	FLAT:?ComputeFoodValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z
	DD	FLAT:?ComputeHappinessValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z
	DD	FLAT:?ComputeProductionValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z
	DD	FLAT:?ComputeGoldValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z
	DD	FLAT:?ComputeScienceValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z
	DD	FLAT:?ComputeFaithValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z
	DD	FLAT:?ComputeTradeableResourceValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z
	DD	FLAT:?ComputeStrategicValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@H@Z
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??0CvSiteEvaluatorForStart@@QAE@XZ
_TEXT	SEGMENT
??0CvSiteEvaluatorForStart@@QAE@XZ PROC			; CvSiteEvaluatorForStart::CvSiteEvaluatorForStart, COMDAT
; _this$ = ecx

; 1153 : {

	mov	eax, ecx
	mov	DWORD PTR [eax+72], 12			; 0000000cH
	mov	DWORD PTR [eax+76], 13			; 0000000dH
	mov	DWORD PTR [eax], OFFSET ??_7CvSiteEvaluatorForStart@@6B@

; 1154 : }

	ret	0
??0CvSiteEvaluatorForStart@@QAE@XZ ENDP			; CvSiteEvaluatorForStart::CvSiteEvaluatorForStart
_TEXT	ENDS
PUBLIC	??1CvSiteEvaluatorForStart@@QAE@XZ		; CvSiteEvaluatorForStart::~CvSiteEvaluatorForStart
; Function compile flags: /Ogtpy
;	COMDAT ??1CvSiteEvaluatorForStart@@QAE@XZ
_TEXT	SEGMENT
??1CvSiteEvaluatorForStart@@QAE@XZ PROC			; CvSiteEvaluatorForStart::~CvSiteEvaluatorForStart, COMDAT
; _this$ = ecx

; 1159 : }

	mov	DWORD PTR [ecx], OFFSET ??_7CvCitySiteEvaluator@@6B@
	ret	0
??1CvSiteEvaluatorForStart@@QAE@XZ ENDP			; CvSiteEvaluatorForStart::~CvSiteEvaluatorForStart
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?ComputeFlavorMultipliers@CvSiteEvaluatorForStart@@UAEXPAVCvPlayer@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?ComputeFlavorMultipliers@CvSiteEvaluatorForStart@@UAEXPAVCvPlayer@@@Z PROC ; CvSiteEvaluatorForStart::ComputeFlavorMultipliers, COMDAT
; _this$ = ecx

; 1164 : 	// Set all to 1; we assign start position without considering flavors yet
; 1165 : 	for(int iI = 0; iI < NUM_SITE_EVALUATION_FACTORS; iI++)
; 1166 : 	{
; 1167 : 		m_iFlavorMultiplier[iI] = 1;

	mov	eax, 1
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], eax
	mov	DWORD PTR [ecx+16], eax
	mov	DWORD PTR [ecx+20], eax
	mov	DWORD PTR [ecx+24], eax
	mov	DWORD PTR [ecx+28], eax
	mov	DWORD PTR [ecx+32], eax
	mov	DWORD PTR [ecx+36], eax

; 1168 : 	}
; 1169 : }

	ret	4
?ComputeFlavorMultipliers@CvSiteEvaluatorForStart@@UAEXPAVCvPlayer@@@Z ENDP ; CvSiteEvaluatorForStart::ComputeFlavorMultipliers
_TEXT	ENDS
PUBLIC	??$max@H@std@@YAABHABH0@Z			; std::max<int>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$max@H@std@@YAABHABH0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@H@std@@YAABHABH0@Z PROC				; std::max<int>, COMDAT

; 3384 : 	return (_DEBUG_LT(_Left, _Right) ? _Right : _Left);

	mov	eax, DWORD PTR __Left$[esp-4]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR __Right$[esp-4]
	cmp	edx, DWORD PTR [ecx]
	jge	SHORT $LN4@max
	mov	eax, ecx
$LN4@max:

; 3385 : 	}

	ret	0
??$max@H@std@@YAABHABH0@Z ENDP				; std::max<int>
_TEXT	ENDS
PUBLIC	??$min@H@std@@YAABHABH0@Z			; std::min<int>
; Function compile flags: /Ogtpy
;	COMDAT ??$min@H@std@@YAABHABH0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@H@std@@YAABHABH0@Z PROC				; std::min<int>, COMDAT

; 3399 : 	return (_DEBUG_LT(_Right, _Left) ? _Right : _Left);

	mov	eax, DWORD PTR __Right$[esp-4]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR __Left$[esp-4]
	cmp	edx, DWORD PTR [ecx]
	jl	SHORT $LN4@min
	mov	eax, ecx
$LN4@min:

; 3400 : 	}

	ret	0
??$min@H@std@@YAABHABH0@Z ENDP				; std::min<int>
_TEXT	ENDS
PUBLIC	?getMap@CvGlobals@@QAEAAVCvMap@@XZ		; CvGlobals::getMap
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
;	COMDAT ?getMap@CvGlobals@@QAEAAVCvMap@@XZ
_TEXT	SEGMENT
?getMap@CvGlobals@@QAEAAVCvMap@@XZ PROC			; CvGlobals::getMap, COMDAT
; _this$ = ecx

; 175  : 		return *m_map;    // inlined for perf reasons, do not use outside of dll

	mov	eax, DWORD PTR [ecx+52]

; 176  : 	}

	ret	0
?getMap@CvGlobals@@QAEAAVCvMap@@XZ ENDP			; CvGlobals::getMap
_TEXT	ENDS
PUBLIC	?getGame@CvGlobals@@QAEAAVCvGame@@XZ		; CvGlobals::getGame
; Function compile flags: /Ogtpy
;	COMDAT ?getGame@CvGlobals@@QAEAAVCvGame@@XZ
_TEXT	SEGMENT
?getGame@CvGlobals@@QAEAAVCvGame@@XZ PROC		; CvGlobals::getGame, COMDAT
; _this$ = ecx

; 183  : 		return *m_game;    // inlined for perf reasons, do not use outside of dll

	mov	eax, DWORD PTR [ecx+48]

; 184  : 	}

	ret	0
?getGame@CvGlobals@@QAEAAVCvGame@@XZ ENDP		; CvGlobals::getGame
_TEXT	ENDS
PUBLIC	?getNumFlavorTypes@CvGlobals@@QAEHXZ		; CvGlobals::getNumFlavorTypes
; Function compile flags: /Ogtpy
;	COMDAT ?getNumFlavorTypes@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getNumFlavorTypes@CvGlobals@@QAEHXZ PROC		; CvGlobals::getNumFlavorTypes, COMDAT
; _this$ = ecx

; 804  : 		return m_iNumFlavorTypes;

	mov	eax, DWORD PTR [ecx+1764]

; 805  : 	}

	ret	0
?getNumFlavorTypes@CvGlobals@@QAEHXZ ENDP		; CvGlobals::getNumFlavorTypes
_TEXT	ENDS
PUBLIC	?getFlavorTypes@CvGlobals@@QAEAAVCvString@@W4FlavorTypes@@@Z ; CvGlobals::getFlavorTypes
; Function compile flags: /Ogtpy
;	COMDAT ?getFlavorTypes@CvGlobals@@QAEAAVCvString@@W4FlavorTypes@@@Z
_TEXT	SEGMENT
_e$ = 8							; size = 4
?getFlavorTypes@CvGlobals@@QAEAAVCvString@@W4FlavorTypes@@@Z PROC ; CvGlobals::getFlavorTypes, COMDAT
; _this$ = ecx

; 812  : 		CvAssert(e > -1); /*CvAssert(e < GC.getNumFlavorTypes())*/;
; 813  : 		return m_paszFlavorTypes[e];

	mov	eax, DWORD PTR _e$[esp-4]
	lea	edx, DWORD PTR [eax*8]
	sub	edx, eax
	mov	eax, DWORD PTR [ecx+1760]
	lea	eax, DWORD PTR [eax+edx*4]

; 814  : 	}

	ret	4
?getFlavorTypes@CvGlobals@@QAEAAVCvString@@W4FlavorTypes@@@Z ENDP ; CvGlobals::getFlavorTypes
_TEXT	ENDS
PUBLIC	?getMIN_CITY_RANGE@CvGlobals@@QAEHXZ		; CvGlobals::getMIN_CITY_RANGE
; Function compile flags: /Ogtpy
;	COMDAT ?getMIN_CITY_RANGE@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getMIN_CITY_RANGE@CvGlobals@@QAEHXZ PROC		; CvGlobals::getMIN_CITY_RANGE, COMDAT
; _this$ = ecx

; 5324 : 		return m_iMIN_CITY_RANGE;

	mov	eax, DWORD PTR [ecx+6248]

; 5325 : 	}

	ret	0
?getMIN_CITY_RANGE@CvGlobals@@QAEHXZ ENDP		; CvGlobals::getMIN_CITY_RANGE
_TEXT	ENDS
PUBLIC	?getMIN_WATER_SIZE_FOR_OCEAN@CvGlobals@@QAEHXZ	; CvGlobals::getMIN_WATER_SIZE_FOR_OCEAN
; Function compile flags: /Ogtpy
;	COMDAT ?getMIN_WATER_SIZE_FOR_OCEAN@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getMIN_WATER_SIZE_FOR_OCEAN@CvGlobals@@QAEHXZ PROC	; CvGlobals::getMIN_WATER_SIZE_FOR_OCEAN, COMDAT
; _this$ = ecx

; 5952 : 		return m_iMIN_WATER_SIZE_FOR_OCEAN;

	mov	eax, DWORD PTR [ecx+6876]

; 5953 : 	}

	ret	0
?getMIN_WATER_SIZE_FOR_OCEAN@CvGlobals@@QAEHXZ ENDP	; CvGlobals::getMIN_WATER_SIZE_FOR_OCEAN
_TEXT	ENDS
PUBLIC	?getSTART_AREA_FOOD_MULTIPLIER@CvGlobals@@QAEHXZ ; CvGlobals::getSTART_AREA_FOOD_MULTIPLIER
; Function compile flags: /Ogtpy
;	COMDAT ?getSTART_AREA_FOOD_MULTIPLIER@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getSTART_AREA_FOOD_MULTIPLIER@CvGlobals@@QAEHXZ PROC	; CvGlobals::getSTART_AREA_FOOD_MULTIPLIER, COMDAT
; _this$ = ecx

; 6236 : 		return m_iSTART_AREA_FOOD_MULTIPLIER;

	mov	eax, DWORD PTR [ecx+7160]

; 6237 : 	}

	ret	0
?getSTART_AREA_FOOD_MULTIPLIER@CvGlobals@@QAEHXZ ENDP	; CvGlobals::getSTART_AREA_FOOD_MULTIPLIER
_TEXT	ENDS
PUBLIC	?getSTART_AREA_HAPPINESS_MULTIPLIER@CvGlobals@@QAEHXZ ; CvGlobals::getSTART_AREA_HAPPINESS_MULTIPLIER
; Function compile flags: /Ogtpy
;	COMDAT ?getSTART_AREA_HAPPINESS_MULTIPLIER@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getSTART_AREA_HAPPINESS_MULTIPLIER@CvGlobals@@QAEHXZ PROC ; CvGlobals::getSTART_AREA_HAPPINESS_MULTIPLIER, COMDAT
; _this$ = ecx

; 6240 : 		return m_iSTART_AREA_HAPPINESS_MULTIPLIER;

	mov	eax, DWORD PTR [ecx+7164]

; 6241 : 	}

	ret	0
?getSTART_AREA_HAPPINESS_MULTIPLIER@CvGlobals@@QAEHXZ ENDP ; CvGlobals::getSTART_AREA_HAPPINESS_MULTIPLIER
_TEXT	ENDS
PUBLIC	?getSTART_AREA_PRODUCTION_MULTIPLIER@CvGlobals@@QAEHXZ ; CvGlobals::getSTART_AREA_PRODUCTION_MULTIPLIER
; Function compile flags: /Ogtpy
;	COMDAT ?getSTART_AREA_PRODUCTION_MULTIPLIER@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getSTART_AREA_PRODUCTION_MULTIPLIER@CvGlobals@@QAEHXZ PROC ; CvGlobals::getSTART_AREA_PRODUCTION_MULTIPLIER, COMDAT
; _this$ = ecx

; 6244 : 		return m_iSTART_AREA_PRODUCTION_MULTIPLIER;

	mov	eax, DWORD PTR [ecx+7168]

; 6245 : 	}

	ret	0
?getSTART_AREA_PRODUCTION_MULTIPLIER@CvGlobals@@QAEHXZ ENDP ; CvGlobals::getSTART_AREA_PRODUCTION_MULTIPLIER
_TEXT	ENDS
PUBLIC	?getSTART_AREA_GOLD_MULTIPLIER@CvGlobals@@QAEHXZ ; CvGlobals::getSTART_AREA_GOLD_MULTIPLIER
; Function compile flags: /Ogtpy
;	COMDAT ?getSTART_AREA_GOLD_MULTIPLIER@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getSTART_AREA_GOLD_MULTIPLIER@CvGlobals@@QAEHXZ PROC	; CvGlobals::getSTART_AREA_GOLD_MULTIPLIER, COMDAT
; _this$ = ecx

; 6248 : 		return m_iSTART_AREA_GOLD_MULTIPLIER;

	mov	eax, DWORD PTR [ecx+7172]

; 6249 : 	}

	ret	0
?getSTART_AREA_GOLD_MULTIPLIER@CvGlobals@@QAEHXZ ENDP	; CvGlobals::getSTART_AREA_GOLD_MULTIPLIER
_TEXT	ENDS
PUBLIC	?getSTART_AREA_SCIENCE_MULTIPLIER@CvGlobals@@QAEHXZ ; CvGlobals::getSTART_AREA_SCIENCE_MULTIPLIER
; Function compile flags: /Ogtpy
;	COMDAT ?getSTART_AREA_SCIENCE_MULTIPLIER@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getSTART_AREA_SCIENCE_MULTIPLIER@CvGlobals@@QAEHXZ PROC ; CvGlobals::getSTART_AREA_SCIENCE_MULTIPLIER, COMDAT
; _this$ = ecx

; 6252 : 		return m_iSTART_AREA_SCIENCE_MULTIPLIER;

	mov	eax, DWORD PTR [ecx+7176]

; 6253 : 	}

	ret	0
?getSTART_AREA_SCIENCE_MULTIPLIER@CvGlobals@@QAEHXZ ENDP ; CvGlobals::getSTART_AREA_SCIENCE_MULTIPLIER
_TEXT	ENDS
PUBLIC	?getSTART_AREA_FAITH_MULTIPLIER@CvGlobals@@QAEHXZ ; CvGlobals::getSTART_AREA_FAITH_MULTIPLIER
; Function compile flags: /Ogtpy
;	COMDAT ?getSTART_AREA_FAITH_MULTIPLIER@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getSTART_AREA_FAITH_MULTIPLIER@CvGlobals@@QAEHXZ PROC	; CvGlobals::getSTART_AREA_FAITH_MULTIPLIER, COMDAT
; _this$ = ecx

; 6259 : 		return m_iSTART_AREA_FAITH_MULTIPLIER;

	mov	eax, DWORD PTR [ecx+7180]

; 6260 : 	}

	ret	0
?getSTART_AREA_FAITH_MULTIPLIER@CvGlobals@@QAEHXZ ENDP	; CvGlobals::getSTART_AREA_FAITH_MULTIPLIER
_TEXT	ENDS
PUBLIC	?getSTART_AREA_RESOURCE_MULTIPLIER@CvGlobals@@QAEHXZ ; CvGlobals::getSTART_AREA_RESOURCE_MULTIPLIER
; Function compile flags: /Ogtpy
;	COMDAT ?getSTART_AREA_RESOURCE_MULTIPLIER@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getSTART_AREA_RESOURCE_MULTIPLIER@CvGlobals@@QAEHXZ PROC ; CvGlobals::getSTART_AREA_RESOURCE_MULTIPLIER, COMDAT
; _this$ = ecx

; 6263 : 		return m_iSTART_AREA_RESOURCE_MULTIPLIER;

	mov	eax, DWORD PTR [ecx+7184]

; 6264 : 	}

	ret	0
?getSTART_AREA_RESOURCE_MULTIPLIER@CvGlobals@@QAEHXZ ENDP ; CvGlobals::getSTART_AREA_RESOURCE_MULTIPLIER
_TEXT	ENDS
PUBLIC	?getSTART_AREA_STRATEGIC_MULTIPLIER@CvGlobals@@QAEHXZ ; CvGlobals::getSTART_AREA_STRATEGIC_MULTIPLIER
; Function compile flags: /Ogtpy
;	COMDAT ?getSTART_AREA_STRATEGIC_MULTIPLIER@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getSTART_AREA_STRATEGIC_MULTIPLIER@CvGlobals@@QAEHXZ PROC ; CvGlobals::getSTART_AREA_STRATEGIC_MULTIPLIER, COMDAT
; _this$ = ecx

; 6267 : 		return m_iSTART_AREA_STRATEGIC_MULTIPLIER;

	mov	eax, DWORD PTR [ecx+7188]

; 6268 : 	}

	ret	0
?getSTART_AREA_STRATEGIC_MULTIPLIER@CvGlobals@@QAEHXZ ENDP ; CvGlobals::getSTART_AREA_STRATEGIC_MULTIPLIER
_TEXT	ENDS
PUBLIC	?getSTART_AREA_BUILD_ON_COAST_PERCENT@CvGlobals@@QAEHXZ ; CvGlobals::getSTART_AREA_BUILD_ON_COAST_PERCENT
; Function compile flags: /Ogtpy
;	COMDAT ?getSTART_AREA_BUILD_ON_COAST_PERCENT@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getSTART_AREA_BUILD_ON_COAST_PERCENT@CvGlobals@@QAEHXZ PROC ; CvGlobals::getSTART_AREA_BUILD_ON_COAST_PERCENT, COMDAT
; _this$ = ecx

; 6271 : 		return m_iSTART_AREA_BUILD_ON_COAST_PERCENT;

	mov	eax, DWORD PTR [ecx+7192]

; 6272 : 	}

	ret	0
?getSTART_AREA_BUILD_ON_COAST_PERCENT@CvGlobals@@QAEHXZ ENDP ; CvGlobals::getSTART_AREA_BUILD_ON_COAST_PERCENT
_TEXT	ENDS
PUBLIC	?getSETTLER_FOOD_MULTIPLIER@CvGlobals@@QAEHXZ	; CvGlobals::getSETTLER_FOOD_MULTIPLIER
; Function compile flags: /Ogtpy
;	COMDAT ?getSETTLER_FOOD_MULTIPLIER@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getSETTLER_FOOD_MULTIPLIER@CvGlobals@@QAEHXZ PROC	; CvGlobals::getSETTLER_FOOD_MULTIPLIER, COMDAT
; _this$ = ecx

; 6275 : 		return m_iSETTLER_FOOD_MULTIPLIER;

	mov	eax, DWORD PTR [ecx+7196]

; 6276 : 	}

	ret	0
?getSETTLER_FOOD_MULTIPLIER@CvGlobals@@QAEHXZ ENDP	; CvGlobals::getSETTLER_FOOD_MULTIPLIER
_TEXT	ENDS
PUBLIC	?getSETTLER_HAPPINESS_MULTIPLIER@CvGlobals@@QAEHXZ ; CvGlobals::getSETTLER_HAPPINESS_MULTIPLIER
; Function compile flags: /Ogtpy
;	COMDAT ?getSETTLER_HAPPINESS_MULTIPLIER@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getSETTLER_HAPPINESS_MULTIPLIER@CvGlobals@@QAEHXZ PROC	; CvGlobals::getSETTLER_HAPPINESS_MULTIPLIER, COMDAT
; _this$ = ecx

; 6279 : 		return m_iSETTLER_HAPPINESS_MULTIPLIER;

	mov	eax, DWORD PTR [ecx+7200]

; 6280 : 	}

	ret	0
?getSETTLER_HAPPINESS_MULTIPLIER@CvGlobals@@QAEHXZ ENDP	; CvGlobals::getSETTLER_HAPPINESS_MULTIPLIER
_TEXT	ENDS
PUBLIC	?getSETTLER_PRODUCTION_MULTIPLIER@CvGlobals@@QAEHXZ ; CvGlobals::getSETTLER_PRODUCTION_MULTIPLIER
; Function compile flags: /Ogtpy
;	COMDAT ?getSETTLER_PRODUCTION_MULTIPLIER@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getSETTLER_PRODUCTION_MULTIPLIER@CvGlobals@@QAEHXZ PROC ; CvGlobals::getSETTLER_PRODUCTION_MULTIPLIER, COMDAT
; _this$ = ecx

; 6283 : 		return m_iSETTLER_PRODUCTION_MULTIPLIER;

	mov	eax, DWORD PTR [ecx+7204]

; 6284 : 	}

	ret	0
?getSETTLER_PRODUCTION_MULTIPLIER@CvGlobals@@QAEHXZ ENDP ; CvGlobals::getSETTLER_PRODUCTION_MULTIPLIER
_TEXT	ENDS
PUBLIC	?getSETTLER_GOLD_MULTIPLIER@CvGlobals@@QAEHXZ	; CvGlobals::getSETTLER_GOLD_MULTIPLIER
; Function compile flags: /Ogtpy
;	COMDAT ?getSETTLER_GOLD_MULTIPLIER@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getSETTLER_GOLD_MULTIPLIER@CvGlobals@@QAEHXZ PROC	; CvGlobals::getSETTLER_GOLD_MULTIPLIER, COMDAT
; _this$ = ecx

; 6287 : 		return m_iSETTLER_GOLD_MULTIPLIER;

	mov	eax, DWORD PTR [ecx+7208]

; 6288 : 	}

	ret	0
?getSETTLER_GOLD_MULTIPLIER@CvGlobals@@QAEHXZ ENDP	; CvGlobals::getSETTLER_GOLD_MULTIPLIER
_TEXT	ENDS
PUBLIC	?getSETTLER_SCIENCE_MULTIPLIER@CvGlobals@@QAEHXZ ; CvGlobals::getSETTLER_SCIENCE_MULTIPLIER
; Function compile flags: /Ogtpy
;	COMDAT ?getSETTLER_SCIENCE_MULTIPLIER@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getSETTLER_SCIENCE_MULTIPLIER@CvGlobals@@QAEHXZ PROC	; CvGlobals::getSETTLER_SCIENCE_MULTIPLIER, COMDAT
; _this$ = ecx

; 6291 : 		return m_iSETTLER_SCIENCE_MULTIPLIER;

	mov	eax, DWORD PTR [ecx+7212]

; 6292 : 	}

	ret	0
?getSETTLER_SCIENCE_MULTIPLIER@CvGlobals@@QAEHXZ ENDP	; CvGlobals::getSETTLER_SCIENCE_MULTIPLIER
_TEXT	ENDS
PUBLIC	?getSETTLER_FAITH_MULTIPLIER@CvGlobals@@QAEHXZ	; CvGlobals::getSETTLER_FAITH_MULTIPLIER
; Function compile flags: /Ogtpy
;	COMDAT ?getSETTLER_FAITH_MULTIPLIER@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getSETTLER_FAITH_MULTIPLIER@CvGlobals@@QAEHXZ PROC	; CvGlobals::getSETTLER_FAITH_MULTIPLIER, COMDAT
; _this$ = ecx

; 6298 : 		return m_iSETTLER_FAITH_MULTIPLIER;

	mov	eax, DWORD PTR [ecx+7216]

; 6299 : 	}

	ret	0
?getSETTLER_FAITH_MULTIPLIER@CvGlobals@@QAEHXZ ENDP	; CvGlobals::getSETTLER_FAITH_MULTIPLIER
_TEXT	ENDS
PUBLIC	?getSETTLER_RESOURCE_MULTIPLIER@CvGlobals@@QAEHXZ ; CvGlobals::getSETTLER_RESOURCE_MULTIPLIER
; Function compile flags: /Ogtpy
;	COMDAT ?getSETTLER_RESOURCE_MULTIPLIER@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getSETTLER_RESOURCE_MULTIPLIER@CvGlobals@@QAEHXZ PROC	; CvGlobals::getSETTLER_RESOURCE_MULTIPLIER, COMDAT
; _this$ = ecx

; 6302 : 		return m_iSETTLER_RESOURCE_MULTIPLIER;

	mov	eax, DWORD PTR [ecx+7220]

; 6303 : 	}

	ret	0
?getSETTLER_RESOURCE_MULTIPLIER@CvGlobals@@QAEHXZ ENDP	; CvGlobals::getSETTLER_RESOURCE_MULTIPLIER
_TEXT	ENDS
PUBLIC	?getSETTLER_STRATEGIC_MULTIPLIER@CvGlobals@@QAEHXZ ; CvGlobals::getSETTLER_STRATEGIC_MULTIPLIER
; Function compile flags: /Ogtpy
;	COMDAT ?getSETTLER_STRATEGIC_MULTIPLIER@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getSETTLER_STRATEGIC_MULTIPLIER@CvGlobals@@QAEHXZ PROC	; CvGlobals::getSETTLER_STRATEGIC_MULTIPLIER, COMDAT
; _this$ = ecx

; 6306 : 		return m_iSETTLER_STRATEGIC_MULTIPLIER;

	mov	eax, DWORD PTR [ecx+7224]

; 6307 : 	}

	ret	0
?getSETTLER_STRATEGIC_MULTIPLIER@CvGlobals@@QAEHXZ ENDP	; CvGlobals::getSETTLER_STRATEGIC_MULTIPLIER
_TEXT	ENDS
PUBLIC	?getSETTLER_BUILD_ON_COAST_PERCENT@CvGlobals@@QAEHXZ ; CvGlobals::getSETTLER_BUILD_ON_COAST_PERCENT
; Function compile flags: /Ogtpy
;	COMDAT ?getSETTLER_BUILD_ON_COAST_PERCENT@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getSETTLER_BUILD_ON_COAST_PERCENT@CvGlobals@@QAEHXZ PROC ; CvGlobals::getSETTLER_BUILD_ON_COAST_PERCENT, COMDAT
; _this$ = ecx

; 6310 : 		return m_iSETTLER_BUILD_ON_COAST_PERCENT;

	mov	eax, DWORD PTR [ecx+7228]

; 6311 : 	}

	ret	0
?getSETTLER_BUILD_ON_COAST_PERCENT@CvGlobals@@QAEHXZ ENDP ; CvGlobals::getSETTLER_BUILD_ON_COAST_PERCENT
_TEXT	ENDS
PUBLIC	?getCITY_RING_1_MULTIPLIER@CvGlobals@@QAEHXZ	; CvGlobals::getCITY_RING_1_MULTIPLIER
; Function compile flags: /Ogtpy
;	COMDAT ?getCITY_RING_1_MULTIPLIER@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getCITY_RING_1_MULTIPLIER@CvGlobals@@QAEHXZ PROC	; CvGlobals::getCITY_RING_1_MULTIPLIER, COMDAT
; _this$ = ecx

; 6317 : 		return m_iCITY_RING_1_MULTIPLIER;

	mov	eax, DWORD PTR [ecx+7232]

; 6318 : 	}

	ret	0
?getCITY_RING_1_MULTIPLIER@CvGlobals@@QAEHXZ ENDP	; CvGlobals::getCITY_RING_1_MULTIPLIER
_TEXT	ENDS
PUBLIC	?getCITY_RING_2_MULTIPLIER@CvGlobals@@QAEHXZ	; CvGlobals::getCITY_RING_2_MULTIPLIER
; Function compile flags: /Ogtpy
;	COMDAT ?getCITY_RING_2_MULTIPLIER@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getCITY_RING_2_MULTIPLIER@CvGlobals@@QAEHXZ PROC	; CvGlobals::getCITY_RING_2_MULTIPLIER, COMDAT
; _this$ = ecx

; 6321 : 		return m_iCITY_RING_2_MULTIPLIER;

	mov	eax, DWORD PTR [ecx+7236]

; 6322 : 	}

	ret	0
?getCITY_RING_2_MULTIPLIER@CvGlobals@@QAEHXZ ENDP	; CvGlobals::getCITY_RING_2_MULTIPLIER
_TEXT	ENDS
PUBLIC	?getCITY_RING_3_MULTIPLIER@CvGlobals@@QAEHXZ	; CvGlobals::getCITY_RING_3_MULTIPLIER
; Function compile flags: /Ogtpy
;	COMDAT ?getCITY_RING_3_MULTIPLIER@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getCITY_RING_3_MULTIPLIER@CvGlobals@@QAEHXZ PROC	; CvGlobals::getCITY_RING_3_MULTIPLIER, COMDAT
; _this$ = ecx

; 6325 : 		return m_iCITY_RING_3_MULTIPLIER;

	mov	eax, DWORD PTR [ecx+7240]

; 6326 : 	}

	ret	0
?getCITY_RING_3_MULTIPLIER@CvGlobals@@QAEHXZ ENDP	; CvGlobals::getCITY_RING_3_MULTIPLIER
_TEXT	ENDS
PUBLIC	?getCITY_RING_4_MULTIPLIER@CvGlobals@@QAEHXZ	; CvGlobals::getCITY_RING_4_MULTIPLIER
; Function compile flags: /Ogtpy
;	COMDAT ?getCITY_RING_4_MULTIPLIER@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getCITY_RING_4_MULTIPLIER@CvGlobals@@QAEHXZ PROC	; CvGlobals::getCITY_RING_4_MULTIPLIER, COMDAT
; _this$ = ecx

; 6329 : 		return m_iCITY_RING_4_MULTIPLIER;

	mov	eax, DWORD PTR [ecx+7244]

; 6330 : 	}

	ret	0
?getCITY_RING_4_MULTIPLIER@CvGlobals@@QAEHXZ ENDP	; CvGlobals::getCITY_RING_4_MULTIPLIER
_TEXT	ENDS
PUBLIC	?getCITY_RING_5_MULTIPLIER@CvGlobals@@QAEHXZ	; CvGlobals::getCITY_RING_5_MULTIPLIER
; Function compile flags: /Ogtpy
;	COMDAT ?getCITY_RING_5_MULTIPLIER@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getCITY_RING_5_MULTIPLIER@CvGlobals@@QAEHXZ PROC	; CvGlobals::getCITY_RING_5_MULTIPLIER, COMDAT
; _this$ = ecx

; 6333 : 		return m_iCITY_RING_5_MULTIPLIER;

	mov	eax, DWORD PTR [ecx+7248]

; 6334 : 	}

	ret	0
?getCITY_RING_5_MULTIPLIER@CvGlobals@@QAEHXZ ENDP	; CvGlobals::getCITY_RING_5_MULTIPLIER
_TEXT	ENDS
PUBLIC	?getBUILD_ON_RESOURCE_PERCENT@CvGlobals@@QAEHXZ	; CvGlobals::getBUILD_ON_RESOURCE_PERCENT
; Function compile flags: /Ogtpy
;	COMDAT ?getBUILD_ON_RESOURCE_PERCENT@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getBUILD_ON_RESOURCE_PERCENT@CvGlobals@@QAEHXZ PROC	; CvGlobals::getBUILD_ON_RESOURCE_PERCENT, COMDAT
; _this$ = ecx

; 6389 : 		return m_iBUILD_ON_RESOURCE_PERCENT;

	mov	eax, DWORD PTR [ecx+7260]

; 6390 : 	}

	ret	0
?getBUILD_ON_RESOURCE_PERCENT@CvGlobals@@QAEHXZ ENDP	; CvGlobals::getBUILD_ON_RESOURCE_PERCENT
_TEXT	ENDS
PUBLIC	?getBUILD_ON_RIVER_PERCENT@CvGlobals@@QAEHXZ	; CvGlobals::getBUILD_ON_RIVER_PERCENT
; Function compile flags: /Ogtpy
;	COMDAT ?getBUILD_ON_RIVER_PERCENT@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getBUILD_ON_RIVER_PERCENT@CvGlobals@@QAEHXZ PROC	; CvGlobals::getBUILD_ON_RIVER_PERCENT, COMDAT
; _this$ = ecx

; 6393 : 		return m_iBUILD_ON_RIVER_PERCENT;

	mov	eax, DWORD PTR [ecx+7264]

; 6394 : 	}

	ret	0
?getBUILD_ON_RIVER_PERCENT@CvGlobals@@QAEHXZ ENDP	; CvGlobals::getBUILD_ON_RIVER_PERCENT
_TEXT	ENDS
PUBLIC	?getCHOKEPOINT_STRATEGIC_VALUE@CvGlobals@@QAEHXZ ; CvGlobals::getCHOKEPOINT_STRATEGIC_VALUE
; Function compile flags: /Ogtpy
;	COMDAT ?getCHOKEPOINT_STRATEGIC_VALUE@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getCHOKEPOINT_STRATEGIC_VALUE@CvGlobals@@QAEHXZ PROC	; CvGlobals::getCHOKEPOINT_STRATEGIC_VALUE, COMDAT
; _this$ = ecx

; 6397 : 		return m_iCHOKEPOINT_STRATEGIC_VALUE;

	mov	eax, DWORD PTR [ecx+7268]

; 6398 : 	}

	ret	0
?getCHOKEPOINT_STRATEGIC_VALUE@CvGlobals@@QAEHXZ ENDP	; CvGlobals::getCHOKEPOINT_STRATEGIC_VALUE
_TEXT	ENDS
PUBLIC	?getHILL_STRATEGIC_VALUE@CvGlobals@@QAEHXZ	; CvGlobals::getHILL_STRATEGIC_VALUE
; Function compile flags: /Ogtpy
;	COMDAT ?getHILL_STRATEGIC_VALUE@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getHILL_STRATEGIC_VALUE@CvGlobals@@QAEHXZ PROC		; CvGlobals::getHILL_STRATEGIC_VALUE, COMDAT
; _this$ = ecx

; 6401 : 		return m_iHILL_STRATEGIC_VALUE;

	mov	eax, DWORD PTR [ecx+7272]

; 6402 : 	}

	ret	0
?getHILL_STRATEGIC_VALUE@CvGlobals@@QAEHXZ ENDP		; CvGlobals::getHILL_STRATEGIC_VALUE
_TEXT	ENDS
PUBLIC	?getALREADY_OWNED_STRATEGIC_VALUE@CvGlobals@@QAEHXZ ; CvGlobals::getALREADY_OWNED_STRATEGIC_VALUE
; Function compile flags: /Ogtpy
;	COMDAT ?getALREADY_OWNED_STRATEGIC_VALUE@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getALREADY_OWNED_STRATEGIC_VALUE@CvGlobals@@QAEHXZ PROC ; CvGlobals::getALREADY_OWNED_STRATEGIC_VALUE, COMDAT
; _this$ = ecx

; 6405 : 		return m_iALREADY_OWNED_STRATEGIC_VALUE;

	mov	eax, DWORD PTR [ecx+7276]

; 6406 : 	}

	ret	0
?getALREADY_OWNED_STRATEGIC_VALUE@CvGlobals@@QAEHXZ ENDP ; CvGlobals::getALREADY_OWNED_STRATEGIC_VALUE
_TEXT	ENDS
PUBLIC	?getPlayer@CvPlayerAI@@SAAAV1@W4PlayerTypes@@@Z	; CvPlayerAI::getPlayer
EXTRN	?m_aPlayers@CvPlayerAI@@1PAV1@A:DWORD		; CvPlayerAI::m_aPlayers
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvplayerai.h
;	COMDAT ?getPlayer@CvPlayerAI@@SAAAV1@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_ePlayer$ = 8						; size = 4
?getPlayer@CvPlayerAI@@SAAAV1@W4PlayerTypes@@@Z PROC	; CvPlayerAI::getPlayer, COMDAT

; 28   : 		CvAssertMsg(ePlayer != NO_PLAYER, "Player is not assigned a valid value");
; 29   : 		CvAssertMsg(ePlayer < MAX_PLAYERS, "Player is not assigned a valid value");
; 30   : 		return m_aPlayers[ePlayer];

	mov	eax, DWORD PTR _ePlayer$[esp-4]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers

; 31   : 	}

	ret	0
?getPlayer@CvPlayerAI@@SAAAV1@W4PlayerTypes@@@Z ENDP	; CvPlayerAI::getPlayer
_TEXT	ENDS
PUBLIC	?isCity@CvPlot@@QBE_NXZ				; CvPlot::isCity
EXTRN	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z:PROC	; CvPlayer::getCity
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvplot.h
;	COMDAT ?isCity@CvPlot@@QBE_NXZ
_TEXT	SEGMENT
?isCity@CvPlot@@QBE_NXZ PROC				; CvPlot::isCity, COMDAT
; _this$ = ecx

; 245  : 		if((m_plotCity.eOwner >= 0) && m_plotCity.eOwner < MAX_PLAYERS)

	mov	eax, DWORD PTR [ecx+104]
	test	eax, eax
	jl	SHORT $LN1@isCity
	cmp	eax, 64					; 00000040H
	jge	SHORT $LN1@isCity

; 246  : 			return (GET_PLAYER((PlayerTypes)m_plotCity.eOwner).getCity(m_plotCity.iID)) != NULL;

	mov	ecx, DWORD PTR [ecx+108]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	ecx
	mov	ecx, eax
	call	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z	; CvPlayer::getCity
	neg	eax
	sbb	eax, eax
	neg	eax

; 249  : 	}

	ret	0
$LN1@isCity:

; 247  : 
; 248  : 		return false;

	xor	al, al

; 249  : 	}

	ret	0
?isCity@CvPlot@@QBE_NXZ ENDP				; CvPlot::isCity
_TEXT	ENDS
PUBLIC	?getX@CvPlot@@QBEHXZ				; CvPlot::getX
; Function compile flags: /Ogtpy
;	COMDAT ?getX@CvPlot@@QBEHXZ
_TEXT	SEGMENT
?getX@CvPlot@@QBEHXZ PROC				; CvPlot::getX, COMDAT
; _this$ = ecx

; 307  : 		return m_iX;

	movsx	eax, WORD PTR [ecx]

; 308  : 	}

	ret	0
?getX@CvPlot@@QBEHXZ ENDP				; CvPlot::getX
_TEXT	ENDS
PUBLIC	?getY@CvPlot@@QBEHXZ				; CvPlot::getY
; Function compile flags: /Ogtpy
;	COMDAT ?getY@CvPlot@@QBEHXZ
_TEXT	SEGMENT
?getY@CvPlot@@QBEHXZ PROC				; CvPlot::getY, COMDAT
; _this$ = ecx

; 312  : 		return m_iY;

	movsx	eax, WORD PTR [ecx+2]

; 313  : 	}

	ret	0
?getY@CvPlot@@QBEHXZ ENDP				; CvPlot::getY
_TEXT	ENDS
PUBLIC	?getArea@CvPlot@@QBEHXZ				; CvPlot::getArea
; Function compile flags: /Ogtpy
;	COMDAT ?getArea@CvPlot@@QBEHXZ
_TEXT	SEGMENT
?getArea@CvPlot@@QBEHXZ PROC				; CvPlot::getArea, COMDAT
; _this$ = ecx

; 324  : 		return m_iArea;

	mov	eax, DWORD PTR [ecx+356]

; 325  : 	}

	ret	0
?getArea@CvPlot@@QBEHXZ ENDP				; CvPlot::getArea
_TEXT	ENDS
PUBLIC	?getLandmass@CvPlot@@QBEHXZ			; CvPlot::getLandmass
; Function compile flags: /Ogtpy
;	COMDAT ?getLandmass@CvPlot@@QBEHXZ
_TEXT	SEGMENT
?getLandmass@CvPlot@@QBEHXZ PROC			; CvPlot::getLandmass, COMDAT
; _this$ = ecx

; 331  : 		return m_iLandmass;

	mov	eax, DWORD PTR [ecx+360]

; 332  : 	}

	ret	0
?getLandmass@CvPlot@@QBEHXZ ENDP			; CvPlot::getLandmass
_TEXT	ENDS
PUBLIC	?getOwner@CvPlot@@QBE?AW4PlayerTypes@@XZ	; CvPlot::getOwner
; Function compile flags: /Ogtpy
;	COMDAT ?getOwner@CvPlot@@QBE?AW4PlayerTypes@@XZ
_TEXT	SEGMENT
?getOwner@CvPlot@@QBE?AW4PlayerTypes@@XZ PROC		; CvPlot::getOwner, COMDAT
; _this$ = ecx

; 387  : 		return (PlayerTypes)m_eOwner;

	movsx	eax, BYTE PTR [ecx+4]

; 388  : 	}

	ret	0
?getOwner@CvPlot@@QBE?AW4PlayerTypes@@XZ ENDP		; CvPlot::getOwner
_TEXT	ENDS
PUBLIC	?isWater@CvPlot@@QBE_NXZ			; CvPlot::isWater
; Function compile flags: /Ogtpy
;	COMDAT ?isWater@CvPlot@@QBE_NXZ
_TEXT	SEGMENT
?isWater@CvPlot@@QBE_NXZ PROC				; CvPlot::isWater, COMDAT
; _this$ = ecx

; 409  : 		return (PlotTypes)m_ePlotType == PLOT_OCEAN;

	xor	eax, eax
	cmp	BYTE PTR [ecx+5], 3
	sete	al

; 410  : 	};

	ret	0
?isWater@CvPlot@@QBE_NXZ ENDP				; CvPlot::isWater
_TEXT	ENDS
PUBLIC	?isHills@CvPlot@@QBE_NXZ			; CvPlot::isHills
; Function compile flags: /Ogtpy
;	COMDAT ?isHills@CvPlot@@QBE_NXZ
_TEXT	SEGMENT
?isHills@CvPlot@@QBE_NXZ PROC				; CvPlot::isHills, COMDAT
; _this$ = ecx

; 413  : 		return (PlotTypes)m_ePlotType == PLOT_HILLS;

	xor	eax, eax
	cmp	BYTE PTR [ecx+5], 1
	sete	al

; 414  : 	};

	ret	0
?isHills@CvPlot@@QBE_NXZ ENDP				; CvPlot::isHills
_TEXT	ENDS
PUBLIC	?isMountain@CvPlot@@QBE_NXZ			; CvPlot::isMountain
; Function compile flags: /Ogtpy
;	COMDAT ?isMountain@CvPlot@@QBE_NXZ
_TEXT	SEGMENT
?isMountain@CvPlot@@QBE_NXZ PROC			; CvPlot::isMountain, COMDAT
; _this$ = ecx

; 422  : 		return (PlotTypes)m_ePlotType == PLOT_MOUNTAIN;

	xor	eax, eax
	cmp	BYTE PTR [ecx+5], al
	sete	al

; 423  : 	};

	ret	0
?isMountain@CvPlot@@QBE_NXZ ENDP			; CvPlot::isMountain
_TEXT	ENDS
PUBLIC	?isRiver@CvPlot@@QBE_NXZ			; CvPlot::isRiver
; Function compile flags: /Ogtpy
;	COMDAT ?isRiver@CvPlot@@QBE_NXZ
_TEXT	SEGMENT
?isRiver@CvPlot@@QBE_NXZ PROC				; CvPlot::isRiver, COMDAT
; _this$ = ecx

; 426  : 		return m_iRiverCrossingCount > 0;

	xor	eax, eax
	cmp	BYTE PTR [ecx+457], al
	setg	al

; 427  : 	}

	ret	0
?isRiver@CvPlot@@QBE_NXZ ENDP				; CvPlot::isRiver
_TEXT	ENDS
PUBLIC	?getTerrainType@CvPlot@@QBE?AW4TerrainTypes@@XZ	; CvPlot::getTerrainType
; Function compile flags: /Ogtpy
;	COMDAT ?getTerrainType@CvPlot@@QBE?AW4TerrainTypes@@XZ
_TEXT	SEGMENT
?getTerrainType@CvPlot@@QBE?AW4TerrainTypes@@XZ PROC	; CvPlot::getTerrainType, COMDAT
; _this$ = ecx

; 431  : 		return (TerrainTypes)m_eTerrainType;

	movsx	eax, BYTE PTR [ecx+6]

; 432  : 	}

	ret	0
?getTerrainType@CvPlot@@QBE?AW4TerrainTypes@@XZ ENDP	; CvPlot::getTerrainType
_TEXT	ENDS
PUBLIC	?isImpassable@CvPlot@@QBE_NXZ			; CvPlot::isImpassable
; Function compile flags: /Ogtpy
;	COMDAT ?isImpassable@CvPlot@@QBE_NXZ
_TEXT	SEGMENT
?isImpassable@CvPlot@@QBE_NXZ PROC			; CvPlot::isImpassable, COMDAT
; _this$ = ecx

; 444  : 		return m_bIsImpassable;

	mov	al, BYTE PTR [ecx+462]
	shr	al, 7

; 445  : 	}

	ret	0
?isImpassable@CvPlot@@QBE_NXZ ENDP			; CvPlot::isImpassable
_TEXT	ENDS
PUBLIC	?coordRange@@YAHHH_N@Z				; coordRange
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvmap.h
;	COMDAT ?coordRange@@YAHHH_N@Z
_TEXT	SEGMENT
_iCoord$ = 8						; size = 4
_iRange$ = 12						; size = 4
_bWrap$ = 16						; size = 1
?coordRange@@YAHHH_N@Z PROC				; coordRange, COMDAT

; 88   : 	if(bWrap)

	cmp	BYTE PTR _bWrap$[esp-4], 0
	mov	eax, DWORD PTR _iCoord$[esp-4]
	je	SHORT $LN5@coordRange

; 89   : 	{
; 90   : 		if(iCoord < 0)
; 91   : 		{
; 92   : 			return (iRange + (iCoord % iRange));

	mov	ecx, DWORD PTR _iRange$[esp-4]
	test	eax, eax
	jge	SHORT $LN3@coordRange
	cdq
	idiv	ecx
	mov	eax, edx
	add	eax, ecx

; 97   : 		}
; 98   : 	}
; 99   : 
; 100  : 	return iCoord;
; 101  : }

	ret	0
$LN3@coordRange:

; 93   : 		}
; 94   : 		else if(iCoord >= iRange)

	cmp	eax, ecx
	jl	SHORT $LN5@coordRange

; 95   : 		{
; 96   : 			return (iCoord % iRange);

	cdq
	idiv	ecx
	mov	eax, edx
$LN5@coordRange:

; 97   : 		}
; 98   : 	}
; 99   : 
; 100  : 	return iCoord;
; 101  : }

	ret	0
?coordRange@@YAHHH_N@Z ENDP				; coordRange
_TEXT	ENDS
PUBLIC	?getGridWidth@CvMap@@QBEHXZ			; CvMap::getGridWidth
; Function compile flags: /Ogtpy
;	COMDAT ?getGridWidth@CvMap@@QBEHXZ
_TEXT	SEGMENT
?getGridWidth@CvMap@@QBEHXZ PROC			; CvMap::getGridWidth, COMDAT
; _this$ = ecx

; 198  : 		return m_iGridWidth;

	mov	eax, DWORD PTR [ecx+4020]

; 199  : 	}

	ret	0
?getGridWidth@CvMap@@QBEHXZ ENDP			; CvMap::getGridWidth
_TEXT	ENDS
PUBLIC	?getGridHeight@CvMap@@QBEHXZ			; CvMap::getGridHeight
; Function compile flags: /Ogtpy
;	COMDAT ?getGridHeight@CvMap@@QBEHXZ
_TEXT	SEGMENT
?getGridHeight@CvMap@@QBEHXZ PROC			; CvMap::getGridHeight, COMDAT
; _this$ = ecx

; 206  : 		return m_iGridHeight;

	mov	eax, DWORD PTR [ecx+4024]

; 207  : 	}

	ret	0
?getGridHeight@CvMap@@QBEHXZ ENDP			; CvMap::getGridHeight
_TEXT	ENDS
PUBLIC	?isWrapX@CvMap@@QBE_NXZ				; CvMap::isWrapX
; Function compile flags: /Ogtpy
;	COMDAT ?isWrapX@CvMap@@QBE_NXZ
_TEXT	SEGMENT
?isWrapX@CvMap@@QBE_NXZ PROC				; CvMap::isWrapX, COMDAT
; _this$ = ecx

; 228  : 		return m_bWrapX;

	mov	al, BYTE PTR [ecx+4056]

; 229  : 	}

	ret	0
?isWrapX@CvMap@@QBE_NXZ ENDP				; CvMap::isWrapX
_TEXT	ENDS
PUBLIC	?isWrapY@CvMap@@QBE_NXZ				; CvMap::isWrapY
; Function compile flags: /Ogtpy
;	COMDAT ?isWrapY@CvMap@@QBE_NXZ
_TEXT	SEGMENT
?isWrapY@CvMap@@QBE_NXZ PROC				; CvMap::isWrapY, COMDAT
; _this$ = ecx

; 233  : 		return m_bWrapY;

	mov	al, BYTE PTR [ecx+4057]

; 234  : 	}

	ret	0
?isWrapY@CvMap@@QBE_NXZ ENDP				; CvMap::isWrapY
_TEXT	ENDS
PUBLIC	?GetNaturalWonderYieldModifier@CvPlayerTraits@@QBEHXZ ; CvPlayerTraits::GetNaturalWonderYieldModifier
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvtraitclasses.h
;	COMDAT ?GetNaturalWonderYieldModifier@CvPlayerTraits@@QBEHXZ
_TEXT	SEGMENT
?GetNaturalWonderYieldModifier@CvPlayerTraits@@QBEHXZ PROC ; CvPlayerTraits::GetNaturalWonderYieldModifier, COMDAT
; _this$ = ecx

; 636  : 		return m_iNaturalWonderYieldModifier;

	mov	eax, DWORD PTR [ecx+212]

; 637  : 	};

	ret	0
?GetNaturalWonderYieldModifier@CvPlayerTraits@@QBEHXZ ENDP ; CvPlayerTraits::GetNaturalWonderYieldModifier
_TEXT	ENDS
PUBLIC	?IsMoveFriendlyWoodsAsRoad@CvPlayerTraits@@QBE_NXZ ; CvPlayerTraits::IsMoveFriendlyWoodsAsRoad
; Function compile flags: /Ogtpy
;	COMDAT ?IsMoveFriendlyWoodsAsRoad@CvPlayerTraits@@QBE_NXZ
_TEXT	SEGMENT
?IsMoveFriendlyWoodsAsRoad@CvPlayerTraits@@QBE_NXZ PROC	; CvPlayerTraits::IsMoveFriendlyWoodsAsRoad, COMDAT
; _this$ = ecx

; 753  : 		return m_bMoveFriendlyWoodsAsRoad;

	mov	al, BYTE PTR [ecx+333]

; 754  : 	};

	ret	0
?IsMoveFriendlyWoodsAsRoad@CvPlayerTraits@@QBE_NXZ ENDP	; CvPlayerTraits::IsMoveFriendlyWoodsAsRoad
_TEXT	ENDS
PUBLIC	?IsFaithFromUnimprovedForest@CvPlayerTraits@@QBE_NXZ ; CvPlayerTraits::IsFaithFromUnimprovedForest
; Function compile flags: /Ogtpy
;	COMDAT ?IsFaithFromUnimprovedForest@CvPlayerTraits@@QBE_NXZ
_TEXT	SEGMENT
?IsFaithFromUnimprovedForest@CvPlayerTraits@@QBE_NXZ PROC ; CvPlayerTraits::IsFaithFromUnimprovedForest, COMDAT
; _this$ = ecx

; 815  : 		return m_bFaithFromUnimprovedForest;

	mov	al, BYTE PTR [ecx+341]

; 816  : 	};

	ret	0
?IsFaithFromUnimprovedForest@CvPlayerTraits@@QBE_NXZ ENDP ; CvPlayerTraits::IsFaithFromUnimprovedForest
_TEXT	ENDS
PUBLIC	??A?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@QBEABW4TeamTypes@@I@Z ; std::vector<enum TeamTypes,std::allocator<enum TeamTypes> >::operator[]
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??A?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@QBEABW4TeamTypes@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@QBEABW4TeamTypes@@I@Z PROC ; std::vector<enum TeamTypes,std::allocator<enum TeamTypes> >::operator[], COMDAT
; _this$ = ecx

; 760  : 
; 761  :  #if _HAS_ITERATOR_DEBUGGING
; 762  : 		if (size() <= _Pos)
; 763  : 			{
; 764  : 			_DEBUG_ERROR("vector subscript out of range");
; 765  : 			_SCL_SECURE_OUT_OF_RANGE;
; 766  : 			}
; 767  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 768  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 769  : 
; 770  : 		return (*(_Myfirst + _Pos));

	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR __Pos$[esp-4]
	lea	eax, DWORD PTR [eax+ecx*4]

; 771  : 		}

	ret	4
??A?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@QBEABW4TeamTypes@@I@Z ENDP ; std::vector<enum TeamTypes,std::allocator<enum TeamTypes> >::operator[]
_TEXT	ENDS
PUBLIC	??B?$FAutoVariable@W4PlayerTypes@@VCvPlayer@@@@QBEABW4PlayerTypes@@XZ ; FAutoVariable<enum PlayerTypes,CvPlayer>::operator enum PlayerTypes const &
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fautovariable.h
;	COMDAT ??B?$FAutoVariable@W4PlayerTypes@@VCvPlayer@@@@QBEABW4PlayerTypes@@XZ
_TEXT	SEGMENT
??B?$FAutoVariable@W4PlayerTypes@@VCvPlayer@@@@QBEABW4PlayerTypes@@XZ PROC ; FAutoVariable<enum PlayerTypes,CvPlayer>::operator enum PlayerTypes const &, COMDAT
; _this$ = ecx

; 194  : 	return m_value;

	lea	eax, DWORD PTR [ecx+4]

; 195  : }

	ret	0
??B?$FAutoVariable@W4PlayerTypes@@VCvPlayer@@@@QBEABW4PlayerTypes@@XZ ENDP ; FAutoVariable<enum PlayerTypes,CvPlayer>::operator enum PlayerTypes const &
_TEXT	ENDS
PUBLIC	??B?$FAutoVariable@DVCvPlot@@@@QBEABDXZ		; FAutoVariable<char,CvPlot>::operator char const &
; Function compile flags: /Ogtpy
;	COMDAT ??B?$FAutoVariable@DVCvPlot@@@@QBEABDXZ
_TEXT	SEGMENT
??B?$FAutoVariable@DVCvPlot@@@@QBEABDXZ PROC		; FAutoVariable<char,CvPlot>::operator char const &, COMDAT
; _this$ = ecx

; 194  : 	return m_value;

	lea	eax, DWORD PTR [ecx+4]

; 195  : }

	ret	0
??B?$FAutoVariable@DVCvPlot@@@@QBEABDXZ ENDP		; FAutoVariable<char,CvPlot>::operator char const &
_TEXT	ENDS
PUBLIC	?dxWrap@@YAHH@Z					; dxWrap
EXTRN	?gGlobals@@3VCvGlobals@@A:BYTE			; gGlobals
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvgamecoreutils.h
;	COMDAT ?dxWrap@@YAHH@Z
_TEXT	SEGMENT
_iDX$ = 8						; size = 4
?dxWrap@@YAHH@Z PROC					; dxWrap, COMDAT

; 74   : 	const CvMap& kMap = GC.getMap();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52

; 75   : 	return wrapCoordDifference(iDX, kMap.getGridWidth(), kMap.isWrapX());

	mov	edx, DWORD PTR [eax+4020]
	cmp	BYTE PTR [eax+4056], 0
	mov	eax, DWORD PTR _iDX$[esp-4]
	je	SHORT $LN13@dxWrap
	mov	ecx, edx
	shr	ecx, 1
	cmp	eax, ecx
	jle	SHORT $LN11@dxWrap
	sub	eax, edx

; 76   : }

	ret	0

; 75   : 	return wrapCoordDifference(iDX, kMap.getGridWidth(), kMap.isWrapX());

$LN11@dxWrap:
	neg	ecx
	cmp	eax, ecx
	jge	SHORT $LN13@dxWrap
	add	eax, edx
$LN13@dxWrap:

; 76   : }

	ret	0
?dxWrap@@YAHH@Z ENDP					; dxWrap
_TEXT	ENDS
PUBLIC	?dyWrap@@YAHH@Z					; dyWrap
; Function compile flags: /Ogtpy
;	COMDAT ?dyWrap@@YAHH@Z
_TEXT	SEGMENT
_iDY$ = 8						; size = 4
?dyWrap@@YAHH@Z PROC					; dyWrap, COMDAT

; 80   : 	const CvMap& kMap = GC.getMap();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52

; 81   : 	return wrapCoordDifference(iDY, kMap.getGridHeight(), kMap.isWrapY());

	mov	edx, DWORD PTR [eax+4024]
	cmp	BYTE PTR [eax+4057], 0
	mov	eax, DWORD PTR _iDY$[esp-4]
	je	SHORT $LN13@dyWrap
	mov	ecx, edx
	shr	ecx, 1
	cmp	eax, ecx
	jle	SHORT $LN11@dyWrap
	sub	eax, edx

; 82   : }

	ret	0

; 81   : 	return wrapCoordDifference(iDY, kMap.getGridHeight(), kMap.isWrapY());

$LN11@dyWrap:
	neg	ecx
	cmp	eax, ecx
	jge	SHORT $LN13@dyWrap
	add	eax, edx
$LN13@dyWrap:

; 82   : }

	ret	0
?dyWrap@@YAHH@Z ENDP					; dyWrap
_TEXT	ENDS
PUBLIC	?plotDistance@@YAHHHHH@Z			; plotDistance
; Function compile flags: /Ogtpy
;	COMDAT ?plotDistance@@YAHHHHH@Z
_TEXT	SEGMENT
_iDX$ = 8						; size = 4
_iX1$ = 8						; size = 4
_iY1$ = 12						; size = 4
_iDY$ = 16						; size = 4
_iX2$ = 16						; size = 4
_iY2$ = 20						; size = 4
?plotDistance@@YAHHHHH@Z PROC				; plotDistance, COMDAT

; 145  : 	int iDX;
; 146  : 	int iWrappedDX = dxWrap(iX2 - iX1);

	mov	eax, DWORD PTR _iX2$[esp-4]
	sub	eax, DWORD PTR _iX1$[esp-4]
	push	ebx
	mov	ebx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	cmp	BYTE PTR [ebx+4056], 0
	mov	edx, DWORD PTR [ebx+4020]
	push	ebp
	push	esi
	je	SHORT $LN13@plotDistan
	mov	ecx, edx
	shr	ecx, 1
	cmp	eax, ecx
	jle	SHORT $LN15@plotDistan
	sub	eax, edx
	jmp	SHORT $LN13@plotDistan
$LN15@plotDistan:
	neg	ecx
	cmp	eax, ecx
	lea	ecx, DWORD PTR [edx+eax]
	jl	SHORT $LN17@plotDistan
$LN13@plotDistan:
	mov	ecx, eax
$LN17@plotDistan:

; 147  : 	int iWrappedDY = dyWrap(iY2 - iY1);

	mov	eax, DWORD PTR _iY2$[esp+8]
	mov	esi, DWORD PTR [ebx+4024]
	push	edi
	mov	edi, DWORD PTR _iY1$[esp+12]
	sub	eax, edi
	cmp	BYTE PTR [ebx+4057], 0
	je	SHORT $LN27@plotDistan
	mov	edx, esi
	shr	edx, 1
	cmp	eax, edx
	jle	SHORT $LN29@plotDistan
	sub	eax, esi
	jmp	SHORT $LN27@plotDistan
$LN29@plotDistan:
	neg	edx
	cmp	eax, edx
	lea	ebp, DWORD PTR [esi+eax]
	jl	SHORT $LN31@plotDistan
$LN27@plotDistan:
	mov	ebp, eax
$LN31@plotDistan:

; 148  : 	int iDY = abs(iWrappedDY);

	mov	eax, ebp
	cdq
	xor	eax, edx
	sub	eax, edx
	mov	DWORD PTR _iDY$[esp+12], eax

; 149  : 
; 150  : 	// convert to hex-space coordinates - the coordinate system axes are E and NE (not orthogonal)
; 151  : 	int iHX1 = xToHexspaceX(iX1, iY1);

	test	edi, edi
	jl	SHORT $LN35@plotDistan
	mov	eax, edi
	jmp	SHORT $LN59@plotDistan
$LN35@plotDistan:
	lea	eax, DWORD PTR [edi-1]
	cdq
	sub	eax, edx
$LN59@plotDistan:
	mov	esi, DWORD PTR _iX1$[esp+12]
	sar	eax, 1
	sub	esi, eax

; 152  : 	int iHX2 = xToHexspaceX(iX1 + iWrappedDX, iY1 + iWrappedDY);

	lea	eax, DWORD PTR [edi+ebp]
	pop	edi
	test	eax, eax
	jge	SHORT $LN60@plotDistan
	dec	eax
	cdq
	sub	eax, edx
$LN60@plotDistan:

; 153  : 
; 154  : 	iDX = abs(dxWrap(iHX2 - iHX1));

	mov	edx, DWORD PTR [ebx+4020]
	sar	eax, 1
	sub	ecx, eax
	add	ecx, DWORD PTR _iX1$[esp+8]
	sub	ecx, esi
	cmp	BYTE PTR [ebx+4056], 0
	je	SHORT $LN49@plotDistan
	mov	eax, edx
	shr	eax, 1
	cmp	ecx, eax
	jle	SHORT $LN51@plotDistan
	mov	eax, ecx
	sub	eax, edx
	jmp	SHORT $LN53@plotDistan
$LN51@plotDistan:
	neg	eax
	cmp	ecx, eax
	lea	eax, DWORD PTR [edx+ecx]
	jl	SHORT $LN53@plotDistan
$LN49@plotDistan:
	mov	eax, ecx
$LN53@plotDistan:
	cdq
	xor	eax, edx
	sub	eax, edx

; 155  : 
; 156  : #ifdef NQM_GAME_CORE_UTILS_OPTIMIZATIONS
; 157  : 	if (((iHX2 - iHX1) ^ (iWrappedDY)) >= 0)  // the signs match
; 158  : #else
; 159  : 	if((iHX2 - iHX1 >= 0) == (iWrappedDY >= 0))  // the signs match

	xor	edx, edx
	test	ecx, ecx
	setge	dl
	xor	ecx, ecx
	test	ebp, ebp
	setge	cl
	pop	esi
	pop	ebp
	mov	DWORD PTR _iDX$[esp], eax
	pop	ebx
	cmp	edx, ecx
	jne	SHORT $LN2@plotDistan

; 160  : #endif
; 161  : 	{
; 162  : 		return iDX + iDY;

	mov	edx, DWORD PTR _iDY$[esp-4]
	add	eax, edx

; 170  : #endif
; 171  : 	}
; 172  : }

	ret	0
$LN2@plotDistan:

; 163  : 	}
; 164  : 	else
; 165  : 	{
; 166  : #ifdef NQM_FAST_COMP
; 167  : 		return (MAX(iDX, iDY));
; 168  : #else
; 169  : 		return (std::max(iDX, iDY));

	cmp	eax, DWORD PTR _iDY$[esp-4]
	lea	eax, DWORD PTR _iDY$[esp-4]
	jl	SHORT $LN58@plotDistan
	lea	eax, DWORD PTR _iDX$[esp-4]
$LN58@plotDistan:
	mov	eax, DWORD PTR [eax]

; 170  : #endif
; 171  : 	}
; 172  : }

	ret	0
?plotDistance@@YAHHHHH@Z ENDP				; plotDistance
_TEXT	ENDS
EXTRN	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z:PROC ; CvGlobals::getInfoTypeForString
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvsiteevaluationclasses.cpp
;	COMDAT ?Init@CvCitySiteEvaluator@@UAEXXZ
_TEXT	SEGMENT
?Init@CvCitySiteEvaluator@@UAEXXZ PROC			; CvCitySiteEvaluator::Init, COMDAT
; _this$ = ecx

; 36   : {

	push	esi
	mov	esi, ecx

; 37   : 	// Set up city ring multipliers
; 38   : 	m_iRingModifier[0] = 1;   // Items under city get handled separately

	mov	DWORD PTR [esi+40], 1

; 39   : 	m_iRingModifier[1] = /*6*/ GC.getCITY_RING_1_MULTIPLIER();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7232
	mov	DWORD PTR [esi+44], eax

; 40   : 	m_iRingModifier[2] = /*3*/ GC.getCITY_RING_2_MULTIPLIER();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7236
	mov	DWORD PTR [esi+48], ecx

; 41   : 	m_iRingModifier[3] = /*2*/ GC.getCITY_RING_3_MULTIPLIER();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7240
	mov	DWORD PTR [esi+52], edx

; 42   : 	m_iRingModifier[4] = /*1*/ GC.getCITY_RING_4_MULTIPLIER();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7244
	mov	DWORD PTR [esi+56], eax

; 43   : 	m_iRingModifier[5] = /*1*/ GC.getCITY_RING_5_MULTIPLIER();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7248

; 44   : 	m_iRingModifier[6] = 0;
; 45   : 	m_iRingModifier[7] = 0;
; 46   : 
; 47   : 	m_iGrowthIndex = GC.getInfoTypeForString("FLAVOR_GROWTH");

	push	0
	mov	DWORD PTR [esi+60], ecx
	push	OFFSET $SG223423
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR [esi+64], 0
	mov	DWORD PTR [esi+68], 0
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString

; 48   : 	m_iExpansionIndex = GC.getInfoTypeForString("FLAVOR_EXPANSION");

	push	0
	push	OFFSET $SG223424
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR [esi+76], eax
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString

; 49   : 	m_iNavalIndex = GC.getInfoTypeForString("FLAVOR_NAVAL");

	push	0
	push	OFFSET $SG223425
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR [esi+72], eax
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR [esi+80], eax

; 50   : 
; 51   : 	m_iBrazilMultiplier = 1000;	//fertility boost from jungles

	mov	eax, 1000				; 000003e8H
	mov	DWORD PTR [esi+84], eax

; 52   : 	m_iSpainMultiplier = 55000;	//fertility boost from natural wonders

	mov	DWORD PTR [esi+88], 55000		; 0000d6d8H

; 53   : 	m_iMorrocoMultiplier = 1000; //fertility boost from desert

	mov	DWORD PTR [esi+92], eax

; 54   : 	m_iNetherlandsMultiplier = 2000; //fertility boost from marshes and flood plains

	mov	DWORD PTR [esi+96], 2000		; 000007d0H

; 55   : 	m_iIncaMultiplier = 500; //fertility boost for hill tiles surrounded my mountains

	mov	DWORD PTR [esi+100], 500		; 000001f4H
	pop	esi

; 56   : }

	ret	0
?Init@CvCitySiteEvaluator@@UAEXXZ ENDP			; CvCitySiteEvaluator::Init
_TEXT	ENDS
EXTRN	?GetFlavorValue@CvCitySpecializationXMLEntry@@QBEHH@Z:PROC ; CvCitySpecializationXMLEntry::GetFlavorValue
EXTRN	?GetPersonalityIndividualFlavor@CvFlavorManager@@QAEHW4FlavorTypes@@@Z:PROC ; CvFlavorManager::GetPersonalityIndividualFlavor
EXTRN	?GetFlavorManager@CvPlayer@@QBEPAVCvFlavorManager@@XZ:PROC ; CvPlayer::GetFlavorManager
EXTRN	__imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z:PROC
EXTRN	?getCitySpecializationInfo@CvGlobals@@QAEPAVCvCitySpecializationXMLEntry@@W4CitySpecializationTypes@@@Z:PROC ; CvGlobals::getCitySpecializationInfo
EXTRN	?GetCitySpecializationAI@CvPlayer@@QBEPAVCvCitySpecializationAI@@XZ:PROC ; CvPlayer::GetCitySpecializationAI
; Function compile flags: /Ogtpy
;	COMDAT ?ComputeFlavorMultipliers@CvCitySiteEvaluator@@UAEXPAVCvPlayer@@@Z
_TEXT	SEGMENT
tv845 = -4						; size = 4
_pPlayer$ = 8						; size = 4
?ComputeFlavorMultipliers@CvCitySiteEvaluator@@UAEXPAVCvPlayer@@@Z PROC ; CvCitySiteEvaluator::ComputeFlavorMultipliers, COMDAT
; _this$ = ecx

; 195  : {

	push	ecx
	push	ebp
	push	esi
	mov	esi, ecx

; 196  : 	// Set all to 0
; 197  : 	for(int iI = 0; iI < NUM_YIELD_TYPES; iI++)
; 198  : 	{
; 199  : 		m_iFlavorMultiplier[iI] = 0;
; 200  : 	}
; 201  : 
; 202  : 	m_iFlavorMultiplier[SITE_EVALUATION_HAPPINESS] = 0;
; 203  : 
; 204  : 	// Find out if player has a desired next city specialization
; 205  : 	CitySpecializationTypes eNextSpecialization = pPlayer->GetCitySpecializationAI()->GetNextSpecializationDesired();

	mov	ecx, DWORD PTR _pPlayer$[esp+8]
	push	edi
	xor	edi, edi
	mov	DWORD PTR [esi+4], edi
	mov	DWORD PTR [esi+8], edi
	mov	DWORD PTR [esi+12], edi
	mov	DWORD PTR [esi+16], edi
	mov	DWORD PTR [esi+20], edi
	mov	DWORD PTR [esi+24], edi
	mov	DWORD PTR [esi+28], edi
	call	?GetCitySpecializationAI@CvPlayer@@QBEPAVCvCitySpecializationAI@@XZ ; CvPlayer::GetCitySpecializationAI
	mov	eax, DWORD PTR [eax+12]

; 206  : 	CvCitySpecializationXMLEntry* pkCitySpecializationEntry = NULL;

	xor	ebp, ebp

; 207  : 	if(eNextSpecialization != NO_CITY_SPECIALIZATION)

	cmp	eax, -1
	je	SHORT $LN28@ComputeFla

; 208  : 		pkCitySpecializationEntry = GC.getCitySpecializationInfo(eNextSpecialization);

	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getCitySpecializationInfo@CvGlobals@@QAEPAVCvCitySpecializationXMLEntry@@W4CitySpecializationTypes@@@Z ; CvGlobals::getCitySpecializationInfo
	mov	ebp, eax
$LN28@ComputeFla:

; 209  : 
; 210  : 
; 211  : 	for(int iFlavorLoop = 0; iFlavorLoop < GC.getNumFlavorTypes(); iFlavorLoop++)

	cmp	DWORD PTR ?gGlobals@@3VCvGlobals@@A+1764, edi
	jle	$LN25@ComputeFla
	mov	DWORD PTR tv845[esp+16], edi
	push	ebx
	npad	2
$LL64@ComputeFla:

; 212  : 	{
; 213  : 		const FlavorTypes eFlavor = static_cast<FlavorTypes>(iFlavorLoop);
; 214  : 		const CvString& strFlavor = GC.getFlavorTypes(eFlavor);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+1760
	mov	ecx, DWORD PTR tv845[esp+20]
	lea	ebx, DWORD PTR [ecx+eax]

; 215  : 		if(strFlavor == "FLAVOR_GROWTH" ||
; 216  : 		        strFlavor == "FLAVOR_EXPANSION")

	push	OFFSET $SG223496
	push	ebx
	call	DWORD PTR __imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
	add	esp, 8
	test	al, al
	jne	$LN23@ComputeFla
	push	OFFSET $SG223497
	push	ebx
	call	DWORD PTR __imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
	add	esp, 8
	test	al, al
	jne	$LN23@ComputeFla

; 222  : 			}
; 223  : 		}
; 224  : 		else if(strFlavor == "FLAVOR_GOLD" ||
; 225  : 		        strFlavor == "FLAVOR_TILE_IMPROVEMENT")

	push	OFFSET $SG223502
	push	ebx
	call	DWORD PTR __imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
	add	esp, 8
	test	al, al
	jne	$LN19@ComputeFla
	push	OFFSET $SG223503
	push	ebx
	call	DWORD PTR __imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
	add	esp, 8
	test	al, al
	jne	$LN19@ComputeFla

; 234  : 		        strFlavor == "FLAVOR_WONDER")

	push	OFFSET $SG223508
	push	ebx
	call	DWORD PTR __imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
	add	esp, 8
	test	al, al
	jne	$LN15@ComputeFla
	push	OFFSET $SG223509
	push	ebx
	call	DWORD PTR __imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
	add	esp, 8
	test	al, al
	jne	$LN15@ComputeFla

; 242  : 		else if(strFlavor == "FLAVOR_SCIENCE")

	push	OFFSET $SG223513
	push	ebx
	call	DWORD PTR __imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
	add	esp, 8
	test	al, al
	je	SHORT $LN12@ComputeFla

; 243  : 		{
; 244  : 			// Doubled since only one flavor related to science
; 245  : 			m_iFlavorMultiplier[YIELD_SCIENCE] += pPlayer->GetFlavorManager()->GetPersonalityIndividualFlavor(eFlavor) * 2;

	mov	ecx, DWORD PTR _pPlayer$[esp+16]
	push	edi
	call	?GetFlavorManager@CvPlayer@@QBEPAVCvFlavorManager@@XZ ; CvPlayer::GetFlavorManager
	mov	ecx, eax
	call	?GetPersonalityIndividualFlavor@CvFlavorManager@@QAEHW4FlavorTypes@@@Z ; CvFlavorManager::GetPersonalityIndividualFlavor
	add	eax, eax
	add	DWORD PTR [esi+16], eax

; 246  : 			if(pkCitySpecializationEntry)

	test	ebp, ebp
	je	$LN26@ComputeFla

; 247  : 			{
; 248  : 				m_iFlavorMultiplier[YIELD_SCIENCE] += pkCitySpecializationEntry->GetFlavorValue(eFlavor) * 2;

	push	edi
	mov	ecx, ebp
	call	?GetFlavorValue@CvCitySpecializationXMLEntry@@QBEHH@Z ; CvCitySpecializationXMLEntry::GetFlavorValue
	add	eax, eax
	add	DWORD PTR [esi+16], eax

; 249  : 			}
; 250  : 		}

	jmp	$LN26@ComputeFla
$LN12@ComputeFla:

; 251  : 		else if(strFlavor == "FLAVOR_HAPPINESS")

	push	OFFSET $SG223517
	push	ebx
	call	DWORD PTR __imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
	add	esp, 8
	test	al, al
	je	SHORT $LN9@ComputeFla

; 252  : 		{
; 253  : 			// Doubled since only one flavor related to Happiness
; 254  : 			m_iFlavorMultiplier[SITE_EVALUATION_HAPPINESS] += pPlayer->GetFlavorManager()->GetPersonalityIndividualFlavor(eFlavor) * 2;

	mov	ecx, DWORD PTR _pPlayer$[esp+16]
	push	edi
	call	?GetFlavorManager@CvPlayer@@QBEPAVCvFlavorManager@@XZ ; CvPlayer::GetFlavorManager
	mov	ecx, eax
	call	?GetPersonalityIndividualFlavor@CvFlavorManager@@QAEHW4FlavorTypes@@@Z ; CvFlavorManager::GetPersonalityIndividualFlavor
	add	eax, eax
	add	DWORD PTR [esi+28], eax

; 255  : 			if(pkCitySpecializationEntry)

	test	ebp, ebp
	je	$LN26@ComputeFla

; 256  : 			{
; 257  : 				m_iFlavorMultiplier[SITE_EVALUATION_HAPPINESS] += pkCitySpecializationEntry->GetFlavorValue(eFlavor) * 2;

	push	edi
	mov	ecx, ebp
	call	?GetFlavorValue@CvCitySpecializationXMLEntry@@QBEHH@Z ; CvCitySpecializationXMLEntry::GetFlavorValue
	add	eax, eax
	add	DWORD PTR [esi+28], eax

; 258  : 			}
; 259  : 		}

	jmp	$LN26@ComputeFla
$LN9@ComputeFla:

; 260  : 		else if(strFlavor == "FLAVOR_RELIGION")

	push	OFFSET $SG223521
	push	ebx
	call	DWORD PTR __imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
	add	esp, 8
	test	al, al
	je	$LN26@ComputeFla

; 261  : 		{
; 262  : 			// Doubled since only one flavor related to faith
; 263  : 			m_iFlavorMultiplier[YIELD_FAITH] += pPlayer->GetFlavorManager()->GetPersonalityIndividualFlavor(eFlavor) * 2;

	mov	ecx, DWORD PTR _pPlayer$[esp+16]
	push	edi
	call	?GetFlavorManager@CvPlayer@@QBEPAVCvFlavorManager@@XZ ; CvPlayer::GetFlavorManager
	mov	ecx, eax
	call	?GetPersonalityIndividualFlavor@CvFlavorManager@@QAEHW4FlavorTypes@@@Z ; CvFlavorManager::GetPersonalityIndividualFlavor
	add	eax, eax
	add	DWORD PTR [esi+24], eax

; 264  : 			if (pkCitySpecializationEntry)

	test	ebp, ebp
	je	$LN26@ComputeFla

; 265  : 			{
; 266  : 				m_iFlavorMultiplier[YIELD_FAITH] += pkCitySpecializationEntry->GetFlavorValue(eFlavor) * 2;

	push	edi
	mov	ecx, ebp
	call	?GetFlavorValue@CvCitySpecializationXMLEntry@@QBEHH@Z ; CvCitySpecializationXMLEntry::GetFlavorValue
	add	eax, eax
	add	DWORD PTR [esi+24], eax
	jmp	SHORT $LN26@ComputeFla
$LN15@ComputeFla:

; 235  : 		{
; 236  : 			m_iFlavorMultiplier[YIELD_PRODUCTION] += pPlayer->GetFlavorManager()->GetPersonalityIndividualFlavor(eFlavor);

	mov	ecx, DWORD PTR _pPlayer$[esp+16]
	push	edi
	call	?GetFlavorManager@CvPlayer@@QBEPAVCvFlavorManager@@XZ ; CvPlayer::GetFlavorManager
	mov	ecx, eax
	call	?GetPersonalityIndividualFlavor@CvFlavorManager@@QAEHW4FlavorTypes@@@Z ; CvFlavorManager::GetPersonalityIndividualFlavor
	add	DWORD PTR [esi+8], eax

; 237  : 			if(pkCitySpecializationEntry)

	test	ebp, ebp
	je	SHORT $LN26@ComputeFla

; 238  : 			{
; 239  : 				m_iFlavorMultiplier[YIELD_PRODUCTION] += pkCitySpecializationEntry->GetFlavorValue(eFlavor);

	push	edi
	mov	ecx, ebp
	call	?GetFlavorValue@CvCitySpecializationXMLEntry@@QBEHH@Z ; CvCitySpecializationXMLEntry::GetFlavorValue
	add	DWORD PTR [esi+8], eax

; 240  : 			}
; 241  : 		}

	jmp	SHORT $LN26@ComputeFla
$LN19@ComputeFla:

; 226  : 		{
; 227  : 			m_iFlavorMultiplier[YIELD_GOLD] += pPlayer->GetFlavorManager()->GetPersonalityIndividualFlavor(eFlavor);

	mov	ecx, DWORD PTR _pPlayer$[esp+16]
	push	edi
	call	?GetFlavorManager@CvPlayer@@QBEPAVCvFlavorManager@@XZ ; CvPlayer::GetFlavorManager
	mov	ecx, eax
	call	?GetPersonalityIndividualFlavor@CvFlavorManager@@QAEHW4FlavorTypes@@@Z ; CvFlavorManager::GetPersonalityIndividualFlavor
	add	DWORD PTR [esi+12], eax

; 228  : 			if(pkCitySpecializationEntry)

	test	ebp, ebp
	je	SHORT $LN26@ComputeFla

; 229  : 			{
; 230  : 				m_iFlavorMultiplier[YIELD_GOLD] += pkCitySpecializationEntry->GetFlavorValue(eFlavor);

	push	edi
	mov	ecx, ebp
	call	?GetFlavorValue@CvCitySpecializationXMLEntry@@QBEHH@Z ; CvCitySpecializationXMLEntry::GetFlavorValue
	add	DWORD PTR [esi+12], eax

; 231  : 			}
; 232  : 		}
; 233  : 		else if(strFlavor == "FLAVOR_PRODUCTION" ||

	jmp	SHORT $LN26@ComputeFla
$LN23@ComputeFla:

; 217  : 		{
; 218  : 			m_iFlavorMultiplier[YIELD_FOOD] += pPlayer->GetFlavorManager()->GetPersonalityIndividualFlavor(eFlavor);

	mov	ecx, DWORD PTR _pPlayer$[esp+16]
	push	edi
	call	?GetFlavorManager@CvPlayer@@QBEPAVCvFlavorManager@@XZ ; CvPlayer::GetFlavorManager
	mov	ecx, eax
	call	?GetPersonalityIndividualFlavor@CvFlavorManager@@QAEHW4FlavorTypes@@@Z ; CvFlavorManager::GetPersonalityIndividualFlavor
	add	DWORD PTR [esi+4], eax

; 219  : 			if(pkCitySpecializationEntry)

	test	ebp, ebp
	je	SHORT $LN26@ComputeFla

; 220  : 			{
; 221  : 				m_iFlavorMultiplier[YIELD_FOOD] += pkCitySpecializationEntry->GetFlavorValue(eFlavor);

	push	edi
	mov	ecx, ebp
	call	?GetFlavorValue@CvCitySpecializationXMLEntry@@QBEHH@Z ; CvCitySpecializationXMLEntry::GetFlavorValue
	add	DWORD PTR [esi+4], eax
$LN26@ComputeFla:
	add	DWORD PTR tv845[esp+20], 28		; 0000001cH
	inc	edi
	cmp	edi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+1764
	jl	$LL64@ComputeFla
	xor	edi, edi
	pop	ebx
$LN25@ComputeFla:

; 267  : 			}
; 268  : 		}
; 269  : 	}
; 270  : 
; 271  : 	// Make sure none are negative
; 272  : 	for(int iI = 0; iI < NUM_YIELD_TYPES; iI++)
; 273  : 	{
; 274  : 		if(m_iFlavorMultiplier[iI] < 0)

	cmp	DWORD PTR [esi+4], edi
	jge	SHORT $LN3@ComputeFla

; 275  : 		{
; 276  : 			m_iFlavorMultiplier[iI] = 0;

	mov	DWORD PTR [esi+4], edi
$LN3@ComputeFla:

; 267  : 			}
; 268  : 		}
; 269  : 	}
; 270  : 
; 271  : 	// Make sure none are negative
; 272  : 	for(int iI = 0; iI < NUM_YIELD_TYPES; iI++)
; 273  : 	{
; 274  : 		if(m_iFlavorMultiplier[iI] < 0)

	cmp	DWORD PTR [esi+8], edi
	jge	SHORT $LN54@ComputeFla

; 275  : 		{
; 276  : 			m_iFlavorMultiplier[iI] = 0;

	mov	DWORD PTR [esi+8], edi
$LN54@ComputeFla:

; 267  : 			}
; 268  : 		}
; 269  : 	}
; 270  : 
; 271  : 	// Make sure none are negative
; 272  : 	for(int iI = 0; iI < NUM_YIELD_TYPES; iI++)
; 273  : 	{
; 274  : 		if(m_iFlavorMultiplier[iI] < 0)

	cmp	DWORD PTR [esi+12], edi
	jge	SHORT $LN56@ComputeFla

; 275  : 		{
; 276  : 			m_iFlavorMultiplier[iI] = 0;

	mov	DWORD PTR [esi+12], edi
$LN56@ComputeFla:

; 267  : 			}
; 268  : 		}
; 269  : 	}
; 270  : 
; 271  : 	// Make sure none are negative
; 272  : 	for(int iI = 0; iI < NUM_YIELD_TYPES; iI++)
; 273  : 	{
; 274  : 		if(m_iFlavorMultiplier[iI] < 0)

	cmp	DWORD PTR [esi+16], edi
	jge	SHORT $LN58@ComputeFla

; 275  : 		{
; 276  : 			m_iFlavorMultiplier[iI] = 0;

	mov	DWORD PTR [esi+16], edi
$LN58@ComputeFla:

; 267  : 			}
; 268  : 		}
; 269  : 	}
; 270  : 
; 271  : 	// Make sure none are negative
; 272  : 	for(int iI = 0; iI < NUM_YIELD_TYPES; iI++)
; 273  : 	{
; 274  : 		if(m_iFlavorMultiplier[iI] < 0)

	cmp	DWORD PTR [esi+20], edi
	jge	SHORT $LN60@ComputeFla

; 275  : 		{
; 276  : 			m_iFlavorMultiplier[iI] = 0;

	mov	DWORD PTR [esi+20], edi
$LN60@ComputeFla:

; 267  : 			}
; 268  : 		}
; 269  : 	}
; 270  : 
; 271  : 	// Make sure none are negative
; 272  : 	for(int iI = 0; iI < NUM_YIELD_TYPES; iI++)
; 273  : 	{
; 274  : 		if(m_iFlavorMultiplier[iI] < 0)

	cmp	DWORD PTR [esi+24], edi

; 277  : 		}
; 278  : 	}
; 279  : 
; 280  : 	// Set tradable resources and strategic value to times 10 (so multiplying this by the number of map gives a number from 1 to 100)
; 281  : 	m_iFlavorMultiplier[SITE_EVALUATION_RESOURCES] = 10;

	mov	eax, 10					; 0000000aH
	jge	SHORT $LN63@ComputeFla

; 275  : 		{
; 276  : 			m_iFlavorMultiplier[iI] = 0;

	mov	DWORD PTR [esi+24], edi
$LN63@ComputeFla:
	pop	edi

; 282  : 	m_iFlavorMultiplier[SITE_EVALUATION_STRATEGIC] = 10;

	mov	DWORD PTR [esi+36], eax
	mov	DWORD PTR [esi+32], eax
	pop	esi
	pop	ebp

; 283  : }

	pop	ecx
	ret	4
?ComputeFlavorMultipliers@CvCitySiteEvaluator@@UAEXPAVCvPlayer@@@Z ENDP ; CvCitySiteEvaluator::ComputeFlavorMultipliers
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?PlotFertilityValue@CvCitySiteEvaluator@@UAEHPAVCvPlot@@@Z
_TEXT	SEGMENT
_pPlot$ = 8						; size = 4
?PlotFertilityValue@CvCitySiteEvaluator@@UAEHPAVCvPlot@@@Z PROC ; CvCitySiteEvaluator::PlotFertilityValue, COMDAT
; _this$ = ecx

; 745  : {

	push	esi
	push	edi

; 746  : 	int rtnValue = 0;
; 747  : 
; 748  : 	if(!pPlot->isWater() && !pPlot->isImpassable() && !pPlot->isMountain())

	mov	edi, DWORD PTR _pPlot$[esp+4]
	mov	esi, ecx
	mov	cl, BYTE PTR [edi+5]
	xor	eax, eax
	cmp	cl, 3
	je	SHORT $LN1@PlotFertil
	test	BYTE PTR [edi+462], 128			; 00000080H
	jne	SHORT $LN1@PlotFertil
	test	cl, cl
	je	SHORT $LN1@PlotFertil

; 749  : 	{
; 750  : 		rtnValue += ComputeFoodValue(pPlot, NULL);

	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+24]
	push	ebx
	push	0
	push	edi
	mov	ecx, esi
	call	edx
	mov	ebx, eax

; 751  : 		rtnValue += ComputeProductionValue(pPlot, NULL);

	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+32]
	push	0
	push	edi
	mov	ecx, esi
	call	edx
	add	ebx, eax

; 752  : 		rtnValue += ComputeGoldValue(pPlot, NULL);

	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+36]
	push	0
	push	edi
	mov	ecx, esi
	call	edx
	add	ebx, eax

; 753  : 		rtnValue += ComputeScienceValue(pPlot, NULL);

	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+40]
	push	0
	push	edi
	mov	ecx, esi
	call	edx
	add	ebx, eax

; 754  : 		rtnValue += ComputeTradeableResourceValue(pPlot, NULL);

	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+48]
	push	0
	push	edi
	mov	ecx, esi
	call	edx
	add	ebx, eax

; 755  : 	}
; 756  : 
; 757  : 	if(rtnValue < 0) rtnValue = 0;

	jns	SHORT $LN11@PlotFertil
	pop	ebx
	pop	edi
	xor	eax, eax
	pop	esi

; 760  : }

	ret	4
$LN11@PlotFertil:

; 758  : 
; 759  : 	return rtnValue;

	mov	eax, ebx
	pop	ebx
$LN1@PlotFertil:
	pop	edi
	pop	esi

; 760  : }

	ret	4
?PlotFertilityValue@CvCitySiteEvaluator@@UAEHPAVCvPlot@@@Z ENDP ; CvCitySiteEvaluator::PlotFertilityValue
_TEXT	ENDS
EXTRN	?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B:DWORD ; CvPreGame::sr_TeamTypes
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvpregame.h
;	COMDAT ?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z PROC ; CvPreGame::teamType, COMDAT
; _p$ = eax

; 299  : 	if(p >= 0 && p < MAX_PLAYERS)

	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN1@teamType

; 300  : 		return sr_TeamTypes[p];

	mov	ecx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax*4]

; 302  : }

	ret	0
$LN1@teamType:

; 301  : 	return NO_TEAM;

	or	eax, -1

; 302  : }

	ret	0
?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ENDP ; CvPreGame::teamType
_TEXT	ENDS
PUBLIC	?GetID@CvPlayer@@QBE?AW4PlayerTypes@@XZ		; CvPlayer::GetID
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvplayer.h
;	COMDAT ?GetID@CvPlayer@@QBE?AW4PlayerTypes@@XZ
_TEXT	SEGMENT
?GetID@CvPlayer@@QBE?AW4PlayerTypes@@XZ PROC		; CvPlayer::GetID, COMDAT
; _this$ = ecx

; 1168 : 		return m_eID;

	mov	eax, DWORD PTR [ecx+44]

; 1169 : 	}

	ret	0
?GetID@CvPlayer@@QBE?AW4PlayerTypes@@XZ ENDP		; CvPlayer::GetID
_TEXT	ENDS
PUBLIC	?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ		; CvPlayer::getTeam
; Function compile flags: /Ogtpy
;	COMDAT ?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ
_TEXT	SEGMENT
?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ PROC		; CvPlayer::getTeam, COMDAT
; _this$ = ecx

; 1178 : 		return CvPreGame::teamType(m_eID);

	mov	eax, DWORD PTR [ecx+44]
	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN5@getTeam
	mov	ecx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax*4]

; 1179 : 	}

	ret	0

; 1178 : 		return CvPreGame::teamType(m_eID);

$LN5@getTeam:
	or	eax, -1

; 1179 : 	}

	ret	0
?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ ENDP		; CvPlayer::getTeam
_TEXT	ENDS
PUBLIC	?getFeatureType@CvPlot@@QBE?AW4FeatureTypes@@XZ	; CvPlot::getFeatureType
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvplot.h
;	COMDAT ?getFeatureType@CvPlot@@QBE?AW4FeatureTypes@@XZ
_TEXT	SEGMENT
?getFeatureType@CvPlot@@QBE?AW4FeatureTypes@@XZ PROC	; CvPlot::getFeatureType, COMDAT
; _this$ = ecx

; 435  : #ifdef AUI_WARNING_FIXES
; 436  : 		int f = m_eFeatureType;
; 437  : #else
; 438  : 		char f = m_eFeatureType;
; 439  : #endif
; 440  : 		return (FeatureTypes)f;

	movsx	eax, BYTE PTR [ecx+432]

; 441  : 	}

	ret	0
?getFeatureType@CvPlot@@QBE?AW4FeatureTypes@@XZ ENDP	; CvPlot::getFeatureType
_TEXT	ENDS
PUBLIC	?isPlot@CvMap@@QBEHHH@Z				; CvMap::isPlot
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvmap.h
;	COMDAT ?isPlot@CvMap@@QBEHHH@Z
_TEXT	SEGMENT
_iX$ = 8						; size = 4
_iY$ = 12						; size = 4
?isPlot@CvMap@@QBEHHH@Z PROC				; CvMap::isPlot, COMDAT
; _this$ = ecx

; 157  : #ifdef AUI_WARNING_FIXES
; 158  : 		return ((iX >= 0) && (uint(iX) < getGridWidth()) && (iY >= 0) && (uint(iY) < getGridHeight()));
; 159  : #else
; 160  : 		return ((iX >= 0) && (iX < getGridWidth()) && (iY >= 0) && (iY < getGridHeight()));

	mov	eax, DWORD PTR _iX$[esp-4]
	test	eax, eax
	jl	SHORT $LN3@isPlot
	cmp	eax, DWORD PTR [ecx+4020]
	jge	SHORT $LN3@isPlot
	mov	eax, DWORD PTR _iY$[esp-4]
	test	eax, eax
	jl	SHORT $LN3@isPlot
	cmp	eax, DWORD PTR [ecx+4024]
	jge	SHORT $LN3@isPlot
	mov	eax, 1

; 161  : #endif
; 162  : 	}

	ret	8
$LN3@isPlot:

; 157  : #ifdef AUI_WARNING_FIXES
; 158  : 		return ((iX >= 0) && (uint(iX) < getGridWidth()) && (iY >= 0) && (uint(iY) < getGridHeight()));
; 159  : #else
; 160  : 		return ((iX >= 0) && (iX < getGridWidth()) && (iY >= 0) && (iY < getGridHeight()));

	xor	eax, eax

; 161  : #endif
; 162  : 	}

	ret	8
?isPlot@CvMap@@QBEHHH@Z ENDP				; CvMap::isPlot
_TEXT	ENDS
PUBLIC	?plotNum@CvMap@@QBEHHH@Z			; CvMap::plotNum
; Function compile flags: /Ogtpy
;	COMDAT ?plotNum@CvMap@@QBEHHH@Z
_TEXT	SEGMENT
_iX$ = 8						; size = 4
_iY$ = 12						; size = 4
?plotNum@CvMap@@QBEHHH@Z PROC				; CvMap::plotNum, COMDAT
; _this$ = ecx

; 183  : 		return ((iY * getGridWidth()) + iX);

	mov	eax, DWORD PTR [ecx+4020]
	imul	eax, DWORD PTR _iY$[esp-4]
	add	eax, DWORD PTR _iX$[esp-4]

; 184  : #endif
; 185  : 	}

	ret	8
?plotNum@CvMap@@QBEHHH@Z ENDP				; CvMap::plotNum
_TEXT	ENDS
PUBLIC	?plot@CvMap@@QBEPAVCvPlot@@HH@Z			; CvMap::plot
; Function compile flags: /Ogtpy
;	COMDAT ?plot@CvMap@@QBEPAVCvPlot@@HH@Z
_TEXT	SEGMENT
_iX$ = 8						; size = 4
_iY$ = 12						; size = 4
?plot@CvMap@@QBEPAVCvPlot@@HH@Z PROC			; CvMap::plot, COMDAT
; _this$ = ecx

; 273  : 		if((iX == INVALID_PLOT_COORD) || (iY == INVALID_PLOT_COORD))

	mov	eax, DWORD PTR _iX$[esp-4]
	push	ebp
	cmp	eax, -2147483647			; 80000001H
	je	$LN1@plot
	mov	ebp, DWORD PTR _iY$[esp]
	cmp	ebp, -2147483647			; 80000001H
	je	$LN1@plot

; 276  : 		}
; 277  : 		int iMapX = coordRange(iX, getGridWidth(), isWrapX());

	cmp	BYTE PTR [ecx+4056], 0
	push	ebx
	push	esi
	mov	esi, DWORD PTR [ecx+4020]
	push	edi
	je	SHORT $LN11@plot
	test	eax, eax
	jge	SHORT $LN13@plot
	cdq
	idiv	esi
	mov	edi, edx
	add	edi, esi
	jmp	SHORT $LN15@plot
$LN13@plot:
	cmp	eax, esi
	jl	SHORT $LN11@plot
	cdq
	idiv	esi
	mov	edi, edx
	jmp	SHORT $LN15@plot
$LN11@plot:
	mov	edi, eax
$LN15@plot:

; 278  : 		int iMapY = coordRange(iY, getGridHeight(), isWrapY());

	cmp	BYTE PTR [ecx+4057], 0
	mov	ebx, DWORD PTR [ecx+4024]
	je	SHORT $LN40@plot
	test	ebp, ebp
	jge	SHORT $LN23@plot
	mov	eax, ebp
	cdq
	idiv	ebx
	add	edx, ebx
	jmp	SHORT $LN25@plot
$LN23@plot:
	cmp	ebp, ebx
	jl	SHORT $LN40@plot
	mov	eax, ebp
	cdq
	idiv	ebx
	jmp	SHORT $LN25@plot
$LN40@plot:
	mov	edx, ebp
$LN25@plot:

; 279  : 		return ((isPlot(iMapX, iMapY)) ? &(m_pMapPlots[plotNum(iMapX, iMapY)]) : NULL);

	test	edi, edi
	jl	SHORT $LN5@plot
	cmp	edi, esi
	jge	SHORT $LN5@plot
	test	edx, edx
	jl	SHORT $LN5@plot
	cmp	edx, ebx
	jge	SHORT $LN5@plot
	imul	esi, edx
	add	esi, edi
	imul	esi, 484				; 000001e4H
	add	esi, DWORD PTR [ecx+4068]
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx
	pop	ebp

; 280  : 	}

	ret	8
$LN5@plot:
	pop	edi
	pop	esi
	pop	ebx

; 279  : 		return ((isPlot(iMapX, iMapY)) ? &(m_pMapPlots[plotNum(iMapX, iMapY)]) : NULL);

	xor	eax, eax
	pop	ebp

; 280  : 	}

	ret	8
$LN1@plot:

; 274  : 		{
; 275  : 			return NULL;

	xor	eax, eax
	pop	ebp

; 280  : 	}

	ret	8
?plot@CvMap@@QBEPAVCvPlot@@HH@Z ENDP			; CvMap::plot
_TEXT	ENDS
PUBLIC	?plotXY@@YAPAVCvPlot@@HHHH@Z			; plotXY
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvgamecoreutils.h
;	COMDAT ?plotXY@@YAPAVCvPlot@@HHHH@Z
_TEXT	SEGMENT
_iX$ = 8						; size = 4
_iY$ = 12						; size = 4
_iDX$ = 16						; size = 4
_iDY$ = 20						; size = 4
?plotXY@@YAPAVCvPlot@@HHHH@Z PROC			; plotXY, COMDAT

; 214  : 	// convert the start coord to hex-space coordinates
; 215  : 	int iStartHexX = xToHexspaceX(iX, iY);

	mov	ecx, DWORD PTR _iY$[esp-4]
	test	ecx, ecx
	jl	SHORT $LN5@plotXY
	mov	eax, ecx
	jmp	SHORT $LN55@plotXY
$LN5@plotXY:
	lea	eax, DWORD PTR [ecx-1]
	cdq
	sub	eax, edx
$LN55@plotXY:
	push	esi

; 216  : 
; 217  : 	int iPlotHexX = iStartHexX + iDX;

	mov	esi, DWORD PTR _iX$[esp]
	sar	eax, 1
	sub	esi, eax

; 218  : 	int iPlotY = iY + iDY; // Y is the same in both coordinate systems

	mov	eax, DWORD PTR _iDY$[esp]
	add	esi, DWORD PTR _iDX$[esp]
	push	edi
	lea	edi, DWORD PTR [ecx+eax]

; 219  : 
; 220  : 	// convert from hex-space coordinates to the storage array
; 221  : 	iPlotHexX = hexspaceXToX(iPlotHexX, iPlotY);

	test	edi, edi
	jl	SHORT $LN9@plotXY
	mov	eax, edi
	jmp	SHORT $LN56@plotXY
$LN9@plotXY:
	lea	eax, DWORD PTR [edi-1]
	cdq
	sub	eax, edx
$LN56@plotXY:
	sar	eax, 1
	add	esi, eax

; 222  : 
; 223  : 	return GC.getMap().plot(iPlotHexX , iPlotY);

	cmp	esi, -2147483647			; 80000001H
	je	$LN13@plotXY
	cmp	edi, -2147483647			; 80000001H
	je	$LN13@plotXY
	push	ebp
	mov	ebp, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	cmp	BYTE PTR [ebp+4056], 0
	mov	ecx, DWORD PTR [ebp+4020]
	je	SHORT $LN23@plotXY
	test	esi, esi
	jge	SHORT $LN25@plotXY
	mov	eax, esi
	cdq
	idiv	ecx
	mov	esi, edx
	add	esi, ecx
	jmp	SHORT $LN23@plotXY
$LN25@plotXY:
	cmp	esi, ecx
	jl	SHORT $LN23@plotXY
	mov	eax, esi
	cdq
	idiv	ecx
	mov	esi, edx
$LN23@plotXY:
	cmp	BYTE PTR [ebp+4057], 0
	push	ebx
	mov	ebx, DWORD PTR [ebp+4024]
	je	SHORT $LN52@plotXY
	test	edi, edi
	jge	SHORT $LN35@plotXY
	mov	eax, edi
	cdq
	idiv	ebx
	add	edx, ebx
	jmp	SHORT $LN37@plotXY
$LN35@plotXY:
	cmp	edi, ebx
	jl	SHORT $LN52@plotXY
	mov	eax, edi
	cdq
	idiv	ebx
	jmp	SHORT $LN37@plotXY
$LN52@plotXY:
	mov	edx, edi
$LN37@plotXY:
	test	esi, esi
	jl	SHORT $LN17@plotXY
	cmp	esi, ecx
	jge	SHORT $LN17@plotXY
	test	edx, edx
	jl	SHORT $LN17@plotXY
	cmp	edx, ebx
	jge	SHORT $LN17@plotXY
	imul	ecx, edx
	add	ecx, esi
	imul	ecx, 484				; 000001e4H
	add	ecx, DWORD PTR [ebp+4068]
	pop	ebx
	pop	ebp
	pop	edi
	mov	eax, ecx
	pop	esi

; 224  : }

	ret	0

; 222  : 
; 223  : 	return GC.getMap().plot(iPlotHexX , iPlotY);

$LN17@plotXY:
	pop	ebx
	pop	ebp
	pop	edi
	xor	eax, eax
	pop	esi

; 224  : }

	ret	0

; 222  : 
; 223  : 	return GC.getMap().plot(iPlotHexX , iPlotY);

$LN13@plotXY:
	pop	edi
	xor	eax, eax
	pop	esi

; 224  : }

	ret	0
?plotXY@@YAPAVCvPlot@@HHHH@Z ENDP			; plotXY
_TEXT	ENDS
PUBLIC	?plotXYWithRangeCheck@@YAPAVCvPlot@@HHHHH@Z	; plotXYWithRangeCheck
; Function compile flags: /Ogtpy
;	COMDAT ?plotXYWithRangeCheck@@YAPAVCvPlot@@HHHHH@Z
_TEXT	SEGMENT
_iX$ = 8						; size = 4
_iY$ = 12						; size = 4
_iDX$ = 16						; size = 4
_iDY$ = 20						; size = 4
_iRange$ = 24						; size = 4
?plotXYWithRangeCheck@@YAPAVCvPlot@@HHHHH@Z PROC	; plotXYWithRangeCheck, COMDAT

; 234  : #ifdef NQM_GAME_CORE_UTILS_OPTIMIZATIONS
; 235  : 	// I'm assuming iDX and iDY are in hex-space
; 236  : 	if (hexDistance(iDX, iDY) > iRange)
; 237  : #else
; 238  : 	int hexRange;
; 239  : 
; 240  : 	// I'm assuming iDX and iDY are in hex-space
; 241  : 	if((iDX >= 0) == (iDY >= 0))  // the signs match

	mov	edx, DWORD PTR _iDX$[esp-4]
	xor	eax, eax
	test	edx, edx
	setge	al
	xor	ecx, ecx
	push	esi
	mov	esi, DWORD PTR _iDY$[esp]
	test	esi, esi
	setge	cl
	cmp	eax, ecx

; 242  : 	{
; 243  : 		int iAbsDX = iDX >= 0 ? iDX : -iDX;

	mov	ecx, edx
	jne	SHORT $LN3@plotXYWith
	test	edx, edx
	jge	SHORT $LN7@plotXYWith
	neg	ecx
$LN7@plotXYWith:

; 244  : 		int iAbsDY = iDY >= 0 ? iDY : -iDY;

	mov	eax, esi
	test	esi, esi
	jge	SHORT $LN9@plotXYWith
	neg	eax
$LN9@plotXYWith:

; 245  : 		hexRange = iAbsDX + iAbsDY;

	add	eax, ecx

; 246  : 	}
; 247  : 	else

	jmp	SHORT $LN14@plotXYWith
$LN3@plotXYWith:

; 248  : 	{
; 249  : 		int iAbsDX = iDX >= 0 ? iDX : -iDX;

	test	edx, edx
	jge	SHORT $LN11@plotXYWith
	neg	ecx
$LN11@plotXYWith:

; 250  : 		int iAbsDY = iDY >= 0 ? iDY : -iDY;

	mov	eax, esi
	test	esi, esi
	jge	SHORT $LN13@plotXYWith
	neg	eax
$LN13@plotXYWith:

; 251  : 		hexRange = iAbsDX >= iAbsDY ? iAbsDX : iAbsDY;

	cmp	ecx, eax
	jl	SHORT $LN14@plotXYWith
	mov	eax, ecx
$LN14@plotXYWith:

; 252  : 	}
; 253  : 
; 254  : 	if(hexRange > iRange)

	cmp	eax, DWORD PTR _iRange$[esp]
	jle	SHORT $LN1@plotXYWith

; 255  : #endif
; 256  : 	{
; 257  : 		return NULL;

	xor	eax, eax
	pop	esi

; 261  : }

	ret	0
$LN1@plotXYWith:

; 258  : 	}
; 259  : 
; 260  : 	return plotXY(iX, iY, iDX, iDY);

	mov	eax, DWORD PTR _iX$[esp]
	push	esi
	push	edx
	mov	edx, DWORD PTR _iY$[esp+8]
	push	edx
	push	eax
	call	?plotXY@@YAPAVCvPlot@@HHHH@Z		; plotXY
	add	esp, 16					; 00000010H
	pop	esi

; 261  : }

	ret	0
?plotXYWithRangeCheck@@YAPAVCvPlot@@HHHHH@Z ENDP	; plotXYWithRangeCheck
_TEXT	ENDS
EXTRN	?isFreshWater@CvPlot@@QBE_NXZ:PROC		; CvPlot::isFreshWater
EXTRN	?isFoundFreshWater@CvTerrainInfo@@QBE_NXZ:PROC	; CvTerrainInfo::isFoundFreshWater
EXTRN	?isCoastalLand@CvPlot@@QBE_NH@Z:PROC		; CvPlot::isCoastalLand
EXTRN	?isFoundCoast@CvTerrainInfo@@QBE_NXZ:PROC	; CvTerrainInfo::isFoundCoast
EXTRN	?isFound@CvTerrainInfo@@QBE_NXZ:PROC		; CvTerrainInfo::isFound
EXTRN	?getTerrainInfo@CvGlobals@@QAEPAVCvTerrainInfo@@W4TerrainTypes@@@Z:PROC ; CvGlobals::getTerrainInfo
EXTRN	?isOwned@CvPlot@@QBE_NXZ:PROC			; CvPlot::isOwned
EXTRN	?isNoCity@CvFeatureInfo@@QBE_NXZ:PROC		; CvFeatureInfo::isNoCity
EXTRN	?getFeatureInfo@CvGlobals@@QAEPAVCvFeatureInfo@@W4FeatureTypes@@@Z:PROC ; CvGlobals::getFeatureInfo
EXTRN	?getNumCities@CvPlayer@@QBEHXZ:PROC		; CvPlayer::getNumCities
EXTRN	?isOption@CvGame@@QBE_NPBD@Z:PROC		; CvGame::isOption
EXTRN	?isOption@CvGame@@QBE_NW4GameOptionTypes@@@Z:PROC ; CvGame::isOption
EXTRN	?isHuman@CvPlayer@@QBE_NXZ:PROC			; CvPlayer::isHuman
EXTRN	?isFinalInitialized@CvGame@@QBE_NXZ:PROC	; CvGame::isFinalInitialized
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvsiteevaluationclasses.cpp
;	COMDAT ?CanFound@CvCitySiteEvaluator@@UBE_NPAVCvPlot@@PBVCvPlayer@@_N@Z
_TEXT	SEGMENT
tv333 = 8						; size = 4
_pPlot$ = 8						; size = 4
_pPlayer$ = 12						; size = 4
_iDX$ = 16						; size = 4
_bTestVisible$ = 16					; size = 1
?CanFound@CvCitySiteEvaluator@@UBE_NPAVCvPlot@@PBVCvPlayer@@_N@Z PROC ; CvCitySiteEvaluator::CanFound, COMDAT
; _this$ = ecx

; 60   : {

	push	ebp

; 61   : 	CvAssert(pPlot);
; 62   : 	if(!pPlot)

	mov	ebp, DWORD PTR _pPlot$[esp]
	test	ebp, ebp
	jne	SHORT $LN36@CanFound

; 63   : 		return false;

	xor	al, al
	pop	ebp

; 191  : }

	ret	12					; 0000000cH
$LN36@CanFound:

; 64   : 
; 65   : 	CvPlot* pLoopPlot(NULL);
; 66   : 	bool bValid(false);
; 67   : 	int iRange(0), iDX(0), iDY(0);
; 68   : 
; 69   : 	// Used to have a Python hook: CANNOT_FOUND_CITY_CALLBACK
; 70   : 
; 71   : 	if(GC.getGame().isFinalInitialized())

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	ebx
	push	esi
	xor	bl, bl
	call	?isFinalInitialized@CvGame@@QBE_NXZ	; CvGame::isFinalInitialized
	mov	esi, DWORD PTR _pPlayer$[esp+8]
	test	al, al
	je	SHORT $LN29@CanFound

; 72   : 	{
; 73   : #ifdef NQM_AI_GIMP_NO_BUILDING_SETTLERS
; 74   : 		if (pPlayer && (pPlayer->isHuman() && GC.getGame().isOption(GAMEOPTION_ONE_CITY_CHALLENGE)) || (!pPlayer->isHuman() && (GC.getGame().isOption("GAMEOPTION_AI_TWEAKS") || GC.getGame().isOption("GAMEOPTION_AI_GIMP_NO_BUILDING_SETTLERS"))))

	test	esi, esi
	je	SHORT $LN31@CanFound
	mov	ecx, esi
	call	?isHuman@CvPlayer@@QBE_NXZ		; CvPlayer::isHuman
	test	al, al
	je	SHORT $LN31@CanFound
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	5
	call	?isOption@CvGame@@QBE_NW4GameOptionTypes@@@Z ; CvGame::isOption
	test	al, al
	jne	SHORT $LN30@CanFound
$LN31@CanFound:
	mov	ecx, esi
	call	?isHuman@CvPlayer@@QBE_NXZ		; CvPlayer::isHuman
	test	al, al
	jne	SHORT $LN29@CanFound
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	OFFSET $SG223444
	call	?isOption@CvGame@@QBE_NPBD@Z		; CvGame::isOption
	test	al, al
	jne	SHORT $LN30@CanFound
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	OFFSET $SG223445
	call	?isOption@CvGame@@QBE_NPBD@Z		; CvGame::isOption
	test	al, al
	je	SHORT $LN29@CanFound
$LN30@CanFound:

; 75   : #else
; 76   : 		if(GC.getGame().isOption(GAMEOPTION_ONE_CITY_CHALLENGE) && pPlayer && pPlayer->isHuman())
; 77   : #endif
; 78   : 		{
; 79   : 			if(pPlayer->getNumCities() > 0)

	mov	ecx, esi
	call	?getNumCities@CvPlayer@@QBEHXZ		; CvPlayer::getNumCities
	test	eax, eax

; 80   : 			{
; 81   : 				return false;

	jg	$LN27@CanFound
$LN29@CanFound:

; 82   : 			}
; 83   : 		}
; 84   : 	}
; 85   : 
; 86   : 	if(pPlot->isImpassable() || pPlot->isMountain())

	test	BYTE PTR [ebp+462], 128			; 00000080H
	jne	$LN27@CanFound
	cmp	BYTE PTR [ebp+5], 0
	je	$LN27@CanFound

; 89   : 	}
; 90   : 
; 91   : 	if(pPlot->getFeatureType() != NO_FEATURE)

	mov	al, BYTE PTR [ebp+432]
	cmp	al, -1
	je	SHORT $LN25@CanFound

; 92   : 	{
; 93   : 		if(GC.getFeatureInfo(pPlot->getFeatureType())->isNoCity())

	movsx	eax, al
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getFeatureInfo@CvGlobals@@QAEPAVCvFeatureInfo@@W4FeatureTypes@@@Z ; CvGlobals::getFeatureInfo
	mov	ecx, eax
	call	?isNoCity@CvFeatureInfo@@QBE_NXZ	; CvFeatureInfo::isNoCity
	test	al, al

; 94   : 		{
; 95   : 			return false;

	jne	$LN27@CanFound
$LN25@CanFound:

; 96   : 		}
; 97   : 	}
; 98   : 
; 99   : 	if(pPlayer)

	test	esi, esi
	je	SHORT $LN23@CanFound

; 100  : 	{
; 101  : 		if(pPlot->isOwned() && (pPlot->getOwner() != pPlayer->GetID()))

	mov	ecx, ebp
	call	?isOwned@CvPlot@@QBE_NXZ		; CvPlot::isOwned
	test	al, al
	je	SHORT $LN23@CanFound
	movsx	ecx, BYTE PTR [ebp+4]
	cmp	ecx, DWORD PTR [esi+44]

; 102  : 		{
; 103  : 			return false;

	jne	$LN27@CanFound
$LN23@CanFound:

; 104  : 		}
; 105  : 	}
; 106  : 
; 107  : 	CvTerrainInfo* pTerrainInfo = GC.getTerrainInfo(pPlot->getTerrainType());

	movsx	eax, BYTE PTR [ebp+6]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getTerrainInfo@CvGlobals@@QAEPAVCvTerrainInfo@@W4TerrainTypes@@@Z ; CvGlobals::getTerrainInfo
	mov	esi, eax

; 108  : 
; 109  : 	if(!bValid)
; 110  : 	{
; 111  : 		if(pTerrainInfo->isFound())

	mov	ecx, esi
	call	?isFound@CvTerrainInfo@@QBE_NXZ		; CvTerrainInfo::isFound
	test	al, al

; 112  : 		{
; 113  : 			bValid = true;
; 114  : 		}
; 115  : 	}
; 116  : 
; 117  : 	if(!bValid)

	jne	SHORT $LN91@CanFound

; 118  : 	{
; 119  : 		if(pTerrainInfo->isFoundCoast())

	mov	ecx, esi
	call	?isFoundCoast@CvTerrainInfo@@QBE_NXZ	; CvTerrainInfo::isFoundCoast
	test	al, al
	je	SHORT $LN86@CanFound

; 120  : 		{
; 121  : 			if(pPlot->isCoastalLand())

	push	-1
	mov	ecx, ebp
	call	?isCoastalLand@CvPlot@@QBE_NH@Z		; CvPlot::isCoastalLand
	test	al, al

; 122  : 			{
; 123  : 				bValid = true;
; 124  : 			}
; 125  : 		}
; 126  : 	}
; 127  : 
; 128  : 	if(!bValid)

	jne	SHORT $LN91@CanFound
$LN86@CanFound:

; 129  : 	{
; 130  : 		if(pTerrainInfo->isFoundFreshWater())

	mov	ecx, esi
	call	?isFoundFreshWater@CvTerrainInfo@@QBE_NXZ ; CvTerrainInfo::isFoundFreshWater
	test	al, al
	je	SHORT $LN15@CanFound

; 131  : 		{
; 132  : 			if(pPlot->isFreshWater())

	mov	ecx, ebp
	call	?isFreshWater@CvPlot@@QBE_NXZ		; CvPlot::isFreshWater
	test	al, al
	je	SHORT $LN15@CanFound
$LN91@CanFound:

; 133  : 			{
; 134  : 				bValid = true;

	mov	bl, 1
$LN15@CanFound:

; 135  : 			}
; 136  : 		}
; 137  : 	}
; 138  : 
; 139  : 	// Used to have a Python hook: CAN_FOUND_CITIES_ON_WATER_CALLBACK
; 140  : 
; 141  : 	if(pPlot->isWater())

	cmp	BYTE PTR [ebp+5], 3

; 142  : 	{
; 143  : 		return false;

	je	$LN27@CanFound

; 144  : 	}
; 145  : 
; 146  : 	if(!bValid)

	test	bl, bl

; 147  : 	{
; 148  : 		return false;

	je	$LN27@CanFound

; 149  : 	}
; 150  : 
; 151  : 	if(!bTestVisible)

	cmp	BYTE PTR _bTestVisible$[esp+8], 0
	push	edi
	jne	SHORT $LN9@CanFound

; 152  : 	{
; 153  : 		// look at same land mass
; 154  : 		iRange = GC.getMIN_CITY_RANGE();

	mov	edi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+6248

; 155  : 
; 156  : #ifdef AUI_HEXSPACE_DX_LOOPS
; 157  : 		int iMaxDX;
; 158  : 		for (iDY = -iRange; iDY <= iRange; iDY++)
; 159  : 		{
; 160  : 			iMaxDX = iRange - MAX(0, iDY);
; 161  : 			for (iDX = -iRange - MIN(0, iDY); iDX <= iMaxDX; iDX++) // MIN() and MAX() stuff is to reduce loops (hexspace!)
; 162  : 			{
; 163  : 				pLoopPlot = plotXY(pPlot->getX(), pPlot->getY(), iDX, iDY);
; 164  : #else
; 165  : 		for(iDX = -(iRange); iDX <= iRange; iDX++)

	mov	esi, edi
	neg	esi
	mov	eax, esi
	cmp	eax, edi
	mov	DWORD PTR tv333[esp+12], esi
	mov	DWORD PTR _iDX$[esp+12], esi
	jg	SHORT $LN9@CanFound
$LL11@CanFound:

; 166  : 		{
; 167  : 			for(iDY = -(iRange); iDY <= iRange; iDY++)

	cmp	esi, edi
	jg	SHORT $LN10@CanFound
$LL8@CanFound:

; 168  : 			{
; 169  : 				pLoopPlot = plotXYWithRangeCheck(pPlot->getX(), pPlot->getY(), iDX, iDY, iRange);

	movsx	edx, WORD PTR [ebp+2]
	push	edi
	push	esi
	push	eax
	movsx	eax, WORD PTR [ebp]
	push	edx
	push	eax
	call	?plotXYWithRangeCheck@@YAPAVCvPlot@@HHHHH@Z ; plotXYWithRangeCheck
	mov	ebx, eax
	add	esp, 20					; 00000014H

; 170  : #endif
; 171  : 
; 172  : 				if(pLoopPlot != NULL)

	test	ebx, ebx
	je	SHORT $LN7@CanFound

; 173  : 				{
; 174  : 					if(pLoopPlot->isCity())

	mov	ecx, ebx
	call	?isCity@CvPlot@@QBE_NXZ			; CvPlot::isCity
	test	al, al
	je	SHORT $LN7@CanFound

; 175  : 					{
; 176  : 						if(pLoopPlot->getLandmass() == pPlot->getLandmass())

	mov	ecx, DWORD PTR [ebx+360]
	cmp	ecx, DWORD PTR [ebp+360]
	je	SHORT $LN82@CanFound

; 177  : 						{
; 178  : 							return false;
; 179  : 						}
; 180  : 						else if(hexDistance(iDX, iDY) < iRange)  // one less for off shore

	mov	edx, DWORD PTR _iDX$[esp+12]
	push	esi
	push	edx
	call	?hexDistance@@YAHHH@Z			; hexDistance
	add	esp, 8
	cmp	eax, edi
	jl	SHORT $LN82@CanFound
$LN7@CanFound:

; 166  : 		{
; 167  : 			for(iDY = -(iRange); iDY <= iRange; iDY++)

	mov	eax, DWORD PTR _iDX$[esp+12]
	inc	esi
	cmp	esi, edi
	jle	SHORT $LL8@CanFound
	mov	esi, DWORD PTR tv333[esp+12]
$LN10@CanFound:

; 155  : 
; 156  : #ifdef AUI_HEXSPACE_DX_LOOPS
; 157  : 		int iMaxDX;
; 158  : 		for (iDY = -iRange; iDY <= iRange; iDY++)
; 159  : 		{
; 160  : 			iMaxDX = iRange - MAX(0, iDY);
; 161  : 			for (iDX = -iRange - MIN(0, iDY); iDX <= iMaxDX; iDX++) // MIN() and MAX() stuff is to reduce loops (hexspace!)
; 162  : 			{
; 163  : 				pLoopPlot = plotXY(pPlot->getX(), pPlot->getY(), iDX, iDY);
; 164  : #else
; 165  : 		for(iDX = -(iRange); iDX <= iRange; iDX++)

	inc	eax
	cmp	eax, edi
	mov	DWORD PTR _iDX$[esp+12], eax
	jle	SHORT $LL11@CanFound
$LN9@CanFound:
	pop	edi
	pop	esi
	pop	ebx

; 183  : 						}
; 184  : 					}
; 185  : 				}
; 186  : 			}
; 187  : 		}
; 188  : 	}
; 189  : 
; 190  : 	return true;

	mov	al, 1
	pop	ebp

; 191  : }

	ret	12					; 0000000cH
$LN82@CanFound:
	pop	edi
	pop	esi
	pop	ebx

; 181  : 						{
; 182  : 							return false;

	xor	al, al
	pop	ebp

; 191  : }

	ret	12					; 0000000cH
$LN27@CanFound:
	pop	esi
	pop	ebx

; 87   : 	{
; 88   : 		return false;

	xor	al, al
	pop	ebp

; 191  : }

	ret	12					; 0000000cH
?CanFound@CvCitySiteEvaluator@@UBE_NPAVCvPlot@@PBVCvPlayer@@_N@Z ENDP ; CvCitySiteEvaluator::CanFound
_TEXT	ENDS
EXTRN	?GetBoldness@CvDiplomacyAI@@QBEHXZ:PROC		; CvDiplomacyAI::GetBoldness
EXTRN	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ:PROC ; CvPlayer::GetDiplomacyAI
EXTRN	?isCoastalCiv@CvCivilizationInfo@@QBE_NXZ:PROC	; CvCivilizationInfo::isCoastalCiv
EXTRN	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ:PROC ; CvPlayer::getCivilizationInfo
EXTRN	?GetPersonalityAndGrandStrategy@CvGrandStrategyAI@@QAEHW4FlavorTypes@@@Z:PROC ; CvGrandStrategyAI::GetPersonalityAndGrandStrategy
EXTRN	?GetGrandStrategyAI@CvPlayer@@QBEPAVCvGrandStrategyAI@@XZ:PROC ; CvPlayer::GetGrandStrategyAI
EXTRN	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ:PROC ; CvPlayer::GetPlayerTraits
EXTRN	?GetNumAdjacentMountains@CvPlot@@QBEHXZ:PROC	; CvPlot::GetNumAdjacentMountains
EXTRN	?getResourceType@CvPlot@@QBE?AW4ResourceTypes@@W4TeamTypes@@@Z:PROC ; CvPlot::getResourceType
EXTRN	?getImprovementType@CvPlot@@QBE?AW4ImprovementTypes@@XZ:PROC ; CvPlot::getImprovementType
EXTRN	?IsNaturalWonder@CvPlot@@QBE_NXZ:PROC		; CvPlot::IsNaturalWonder
EXTRN	?getCivilizationType@CvPlayer@@QBE?AW4CivilizationTypes@@XZ:PROC ; CvPlayer::getCivilizationType
EXTRN	?GetRequiredCivilization@CvImprovementEntry@@QBE?AW4CivilizationTypes@@XZ:PROC ; CvImprovementEntry::GetRequiredCivilization
EXTRN	?IsSpecificCivRequired@CvImprovementEntry@@QBE_NXZ:PROC ; CvImprovementEntry::IsSpecificCivRequired
EXTRN	?getImprovementInfo@CvGlobals@@QAEPAVCvImprovementEntry@@W4ImprovementTypes@@@Z:PROC ; CvGlobals::getImprovementInfo
EXTRN	?getArea@CvCity@@QBEHXZ:PROC			; CvCity::getArea
EXTRN	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ:PROC	; CvPlayer::getCapitalCity
; Function compile flags: /Ogtpy
;	COMDAT ?PlotFoundValue@CvCitySiteEvaluator@@UAEHPAVCvPlot@@PAVCvPlayer@@W4YieldTypes@@_N@Z
_TEXT	SEGMENT
_bIsInca$ = -85						; size = 1
_iDistance$223584 = -84					; size = 4
_rtnValue$ = -80					; size = 4
_iClosestEnemyCity$ = -76				; size = 4
_iClosestCityOfMine$ = -72				; size = 4
_iDX$223574 = -68					; size = 4
_iCelticForestCount$ = -64				; size = 4
_iIroquoisForestCount$ = -60				; size = 4
_iNaturalWonderCount$ = -56				; size = 4
_iBrazilJungleCount$ = -52				; size = 4
_iDesertCount$ = -48					; size = 4
_iWetlandsCount$ = -44					; size = 4
$T225110 = -40						; size = 4
_iFaithValue$ = -40					; size = 4
$T225106 = -36						; size = 4
_iScienceValue$ = -36					; size = 4
$T225102 = -32						; size = 4
_iGoldValue$ = -32					; size = 4
$T225098 = -28						; size = 4
_iProductionValue$ = -28				; size = 4
_iHappinessValue$ = -24					; size = 4
$T225094 = -20						; size = 4
_iFoodValue$ = -20					; size = 4
_iStrategicValue$ = -16					; size = 4
_iDY$223578 = -12					; size = 4
_iCapitalArea$ = -8					; size = 4
$T225125 = -4						; size = 4
$T225121 = -4						; size = 4
_ePlotResource$223611 = -4				; size = 4
_pPlot$ = 8						; size = 4
_iSweetSpot$223686 = 12					; size = 4
_pPlayer$ = 12						; size = 4
$T225046 = 16						; size = 4
$T225045 = 16						; size = 4
_eYield$ = 16						; size = 4
___formal$ = 20						; size = 1
?PlotFoundValue@CvCitySiteEvaluator@@UAEHPAVCvPlot@@PAVCvPlayer@@W4YieldTypes@@_N@Z PROC ; CvCitySiteEvaluator::PlotFoundValue, COMDAT
; _this$ = ecx

; 287  : {

	sub	esp, 88					; 00000058H
	push	ebx
	push	esi

; 288  : 	CvAssert(pPlot);
; 289  : 	if(!pPlot)

	mov	esi, DWORD PTR _pPlot$[esp+92]
	push	edi
	xor	edi, edi
	mov	ebx, ecx
	cmp	esi, edi
	jne	SHORT $LN100@PlotFoundV
	pop	edi
	pop	esi

; 290  : 		return 0;

	xor	eax, eax
	pop	ebx

; 739  : 
; 740  : 	return rtnValue;
; 741  : }

	add	esp, 88					; 00000058H
	ret	16					; 00000010H
$LN100@PlotFoundV:

; 291  : #ifdef AUI_WARNING_FIXES
; 292  : 	if (!pPlayer)
; 293  : 		return 0;
; 294  : #endif
; 295  : 
; 296  : 	// Make sure this player can even build a city here
; 297  : 	if(!CanFound(pPlot, pPlayer, false))

	mov	eax, DWORD PTR [ebx]
	mov	edx, DWORD PTR [eax+8]
	push	ebp
	mov	ebp, DWORD PTR _pPlayer$[esp+100]
	push	edi
	push	ebp
	push	esi
	call	edx
	test	al, al
	jne	SHORT $LN99@PlotFoundV
	pop	ebp
	pop	edi
	pop	esi

; 298  : 	{
; 299  : 		return 0;

	xor	eax, eax
	pop	ebx

; 739  : 
; 740  : 	return rtnValue;
; 741  : }

	add	esp, 88					; 00000058H
	ret	16					; 00000010H
$LN99@PlotFoundV:

; 300  : 	}
; 301  : 
; 302  : 	int rtnValue = 0;
; 303  : 
; 304  : 	int iFoodValue = 0;
; 305  : 	int iHappinessValue = 0;
; 306  : 	int iProductionValue = 0;
; 307  : 	int iGoldValue = 0;
; 308  : 	int iScienceValue = 0;
; 309  : 	int iFaithValue = 0;
; 310  : 	int iResourceValue = 0;
; 311  : 	int iStrategicValue = 0;
; 312  : 
; 313  : 	int iCelticForestCount = 0;
; 314  : 	int iIroquoisForestCount = 0;
; 315  : 	int iBrazilJungleCount = 0;
; 316  : 	int iNaturalWonderCount = 0;
; 317  : 	int iDesertCount = 0;
; 318  : 	int iWetlandsCount = 0;
; 319  : 
; 320  : 	int iTotalFoodValue = 0;
; 321  : 	int iTotalHappinessValue = 0;
; 322  : 	int iTotalProductionValue = 0;
; 323  : 	int iTotalGoldValue = 0;
; 324  : 	int iTotalScienceValue = 0;
; 325  : 	int iTotalFaithValue = 0;
; 326  : 	int iTotalResourceValue = 0;
; 327  : 	int iTotalStrategicValue = 0;
; 328  : 
; 329  : 	int iClosestCityOfMine = 999;

	mov	eax, 999				; 000003e7H

; 330  : 	int iClosestEnemyCity = 999;
; 331  : 
; 332  : 	int iCapitalArea = NULL;
; 333  : 
; 334  : 	bool bIsInca = false;
; 335  : 	int iAdjacentMountains = 0;
; 336  : 
; 337  : 	if ( pPlayer->getCapitalCity() )

	mov	ecx, ebp
	mov	DWORD PTR _rtnValue$[esp+104], edi
	mov	DWORD PTR _iFaithValue$[esp+104], edi
	mov	DWORD PTR _iCelticForestCount$[esp+104], edi
	mov	DWORD PTR _iIroquoisForestCount$[esp+104], edi
	mov	DWORD PTR _iBrazilJungleCount$[esp+104], edi
	mov	DWORD PTR _iNaturalWonderCount$[esp+104], edi
	mov	DWORD PTR _iDesertCount$[esp+104], edi
	mov	DWORD PTR _iWetlandsCount$[esp+104], edi
	mov	DWORD PTR _iClosestCityOfMine$[esp+104], eax
	mov	DWORD PTR _iClosestEnemyCity$[esp+104], eax
	mov	DWORD PTR _iCapitalArea$[esp+104], edi
	mov	BYTE PTR _bIsInca$[esp+104], 0
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity
	test	eax, eax
	je	SHORT $LN98@PlotFoundV

; 338  : 		iCapitalArea = pPlayer->getCapitalCity()->getArea();

	mov	ecx, ebp
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity
	mov	ecx, eax
	call	?getArea@CvCity@@QBEHXZ			; CvCity::getArea
	mov	DWORD PTR _iCapitalArea$[esp+104], eax
$LN98@PlotFoundV:

; 339  : 
; 340  : 	// Custom code for Inca ideal terrace farm locations
; 341  : 	ImprovementTypes eIncaImprovement = (ImprovementTypes)GC.getInfoTypeForString("IMPROVEMENT_TERRACE_FARM", true);  

	push	1
	push	OFFSET $SG223568
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString

; 342  : 	if(eIncaImprovement != NO_IMPROVEMENT)

	cmp	eax, -1
	je	SHORT $LN95@PlotFoundV

; 343  : 	{
; 344  : 		CvImprovementEntry* pkEntry = GC.getImprovementInfo(eIncaImprovement);

	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getImprovementInfo@CvGlobals@@QAEPAVCvImprovementEntry@@W4ImprovementTypes@@@Z ; CvGlobals::getImprovementInfo
	mov	ebp, eax

; 345  : 		if(pkEntry != NULL && pkEntry->IsSpecificCivRequired())

	cmp	ebp, edi
	je	SHORT $LN95@PlotFoundV
	mov	ecx, ebp
	call	?IsSpecificCivRequired@CvImprovementEntry@@QBE_NXZ ; CvImprovementEntry::IsSpecificCivRequired
	test	al, al
	je	SHORT $LN95@PlotFoundV

; 346  : 		{
; 347  : 			CivilizationTypes eCiv = pkEntry->GetRequiredCivilization();

	mov	ecx, ebp
	call	?GetRequiredCivilization@CvImprovementEntry@@QBE?AW4CivilizationTypes@@XZ ; CvImprovementEntry::GetRequiredCivilization

; 348  : 			if(eCiv == pPlayer->getCivilizationType())

	mov	ecx, DWORD PTR _pPlayer$[esp+100]
	mov	edi, eax
	call	?getCivilizationType@CvPlayer@@QBE?AW4CivilizationTypes@@XZ ; CvPlayer::getCivilizationType
	cmp	edi, eax
	jne	SHORT $LN95@PlotFoundV

; 349  : 			{
; 350  : 				bIsInca = true;

	mov	BYTE PTR _bIsInca$[esp+104], 1
$LN95@PlotFoundV:

; 363  : 	{
; 364  : 		for (int iDY = -7; iDY <= 7; iDY++)

	mov	eax, -7					; fffffff9H
	mov	DWORD PTR _iDX$223574[esp+104], -7	; fffffff9H
	mov	DWORD PTR _iDY$223578[esp+104], eax
	jmp	SHORT $LN91@PlotFoundV
	npad	1
$LL210@PlotFoundV:

; 351  : 			}
; 352  : 		}
; 353  : 	}
; 354  : 
; 355  : #ifdef AUI_HEXSPACE_DX_LOOPS
; 356  : 	int iDX, iMaxDX;
; 357  : 	for (int iDY = -7; iDY <= 7; iDY++)
; 358  : 	{
; 359  : 		iMaxDX = 7 - MAX(0, iDY);
; 360  : 		for (iDX = -7 - MIN(0, iDY); iDX <= iMaxDX; iDX++) // MIN() and MAX() stuff is to reduce loops (hexspace!)
; 361  : #else
; 362  : 	for (int iDX = -7; iDX <= 7; iDX++)

	mov	esi, DWORD PTR _pPlot$[esp+100]

; 363  : 	{
; 364  : 		for (int iDY = -7; iDY <= 7; iDY++)

	mov	eax, -7					; fffffff9H
	mov	DWORD PTR _iDY$223578[esp+104], eax
	jmp	SHORT $LN91@PlotFoundV
	npad	1
$LL211@PlotFoundV:
	mov	esi, DWORD PTR _pPlot$[esp+100]
$LN91@PlotFoundV:

; 365  : #endif
; 366  : 		{
; 367  : 			CvPlot* pLoopPlot = plotXY(pPlot->getX(), pPlot->getY(), iDX, iDY);

	movsx	edi, WORD PTR [esi+2]
	movsx	ebp, WORD PTR [esi]
	push	eax
	mov	eax, DWORD PTR _iDX$223574[esp+108]
	push	eax
	push	edi
	push	ebp
	call	?plotXY@@YAPAVCvPlot@@HHHH@Z		; plotXY
	mov	esi, eax
	add	esp, 16					; 00000010H

; 368  : 
; 369  : 			if (pLoopPlot != NULL)

	test	esi, esi
	je	$LN90@PlotFoundV

; 370  : 			{
; 371  : #ifdef AUI_FIX_HEX_DISTANCE_INSTEAD_OF_PLOT_DISTANCE
; 372  : 				int iDistance = hexDistance(iDX, iDY);
; 373  : #else
; 374  : 				int iDistance = plotDistance(pPlot->getX(), pPlot->getY(), pLoopPlot->getX(), pLoopPlot->getY());

	movsx	ecx, WORD PTR [esi+2]
	movsx	edx, WORD PTR [esi]
	push	ecx
	push	edx
	push	edi
	push	ebp
	call	?plotDistance@@YAHHHHH@Z		; plotDistance
	mov	edi, eax
	add	esp, 16					; 00000010H

; 375  : #endif
; 376  : #ifndef AUI_HEXSPACE_DX_LOOPS
; 377  : 				if (iDistance <= 7)

	cmp	edi, 7
	mov	DWORD PTR _iDistance$223584[esp+104], edi
	jg	$LN90@PlotFoundV

; 378  : #endif
; 379  : 				{
; 380  : 					if ((pLoopPlot->getOwner() == NO_PLAYER) || (pLoopPlot->getOwner() == pPlayer->GetID()))

	mov	al, BYTE PTR [esi+4]
	cmp	al, -1
	je	SHORT $LN85@PlotFoundV
	mov	ecx, DWORD PTR _pPlayer$[esp+100]
	movsx	eax, al
	cmp	eax, DWORD PTR [ecx+44]
	je	SHORT $LN85@PlotFoundV

; 534  : 										}
; 535  : 									}
; 536  : 									
; 537  : 								}
; 538  : 							}
; 539  : 						}
; 540  : 					}
; 541  : 					else // this tile is owned by someone else
; 542  : 					{
; 543  : 						// See if there are other cities nearby (only count major civs)
; 544  : 						if (iClosestEnemyCity > iDistance)

	cmp	DWORD PTR _iClosestEnemyCity$[esp+104], edi
	jle	$LN90@PlotFoundV

; 545  : 						{
; 546  : 							if (pLoopPlot->isCity() && (pLoopPlot->getOwner() < MAX_MAJOR_CIVS))

	mov	eax, DWORD PTR [esi+104]
	test	eax, eax
	jl	$LN90@PlotFoundV
	cmp	eax, 64					; 00000040H
	jge	$LN90@PlotFoundV
	mov	edx, DWORD PTR [esi+108]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	edx
	mov	ecx, eax
	call	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z	; CvPlayer::getCity
	test	eax, eax
	setne	al
	test	al, al
	je	$LN90@PlotFoundV
	cmp	BYTE PTR [esi+4], 22			; 00000016H
	jge	$LN90@PlotFoundV

; 547  : 							{
; 548  : 								iClosestEnemyCity = iDistance;

	mov	DWORD PTR _iClosestEnemyCity$[esp+104], edi
	jmp	$LN90@PlotFoundV
$LN85@PlotFoundV:

; 381  : 					{
; 382  : 						// See if there are other cities nearby
; 383  : 						if (iClosestCityOfMine > iDistance)

	cmp	DWORD PTR _iClosestCityOfMine$[esp+104], edi
	jle	SHORT $LN83@PlotFoundV

; 384  : 						{
; 385  : 							if (pLoopPlot->isCity())

	mov	eax, DWORD PTR [esi+104]
	test	eax, eax
	jl	SHORT $LN83@PlotFoundV
	cmp	eax, 64					; 00000040H
	jge	SHORT $LN83@PlotFoundV
	mov	ecx, DWORD PTR [esi+108]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	ecx
	mov	ecx, eax
	call	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z	; CvPlayer::getCity
	test	eax, eax
	setne	al
	test	al, al
	je	SHORT $LN83@PlotFoundV

; 386  : 							{
; 387  : 								iClosestCityOfMine = iDistance;

	mov	DWORD PTR _iClosestCityOfMine$[esp+104], edi
$LN83@PlotFoundV:

; 388  : 							}
; 389  : 						}
; 390  : 
; 391  : 						// Skip the city plot itself for now
; 392  : 						if (iDistance <= 5)

	cmp	edi, 5
	jg	$LN90@PlotFoundV

; 393  : 						{
; 394  : 							int iRingModifier = m_iRingModifier[iDistance];

	mov	eax, DWORD PTR _iDistance$223584[esp+104]
	mov	ebp, DWORD PTR [ebx+eax*4+40]

; 395  : 
; 396  : 							iFoodValue = 0;

	xor	edi, edi

; 397  : 							iProductionValue = 0;
; 398  : 							iGoldValue = 0;
; 399  : 							iScienceValue = 0;
; 400  : 							iHappinessValue = 0;
; 401  : 							iResourceValue = 0;
; 402  : 							iStrategicValue = 0;
; 403  : 
; 404  : 							if (iDistance > 0 && iDistance <= NUM_CITY_RINGS)

	dec	eax
	mov	DWORD PTR _iFoodValue$[esp+104], edi
	mov	DWORD PTR _iProductionValue$[esp+104], edi
	mov	DWORD PTR _iGoldValue$[esp+104], edi
	mov	DWORD PTR _iScienceValue$[esp+104], edi
	mov	DWORD PTR _iHappinessValue$[esp+104], edi
	mov	DWORD PTR _iStrategicValue$[esp+104], edi
	cmp	eax, 2
	ja	$LN72@PlotFoundV

; 405  : 							{
; 406  : 								if (eYield == NO_YIELD || eYield == YIELD_FOOD)

	mov	eax, DWORD PTR _eYield$[esp+100]
	cmp	eax, -1
	je	SHORT $LN79@PlotFoundV
	cmp	eax, edi
	jne	SHORT $LN80@PlotFoundV
$LN79@PlotFoundV:

; 407  : 								{
; 408  : 									iFoodValue = iRingModifier * ComputeFoodValue(pLoopPlot, pPlayer) * /*15*/ GC.getSETTLER_FOOD_MULTIPLIER();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7196
	mov	ecx, DWORD PTR _pPlayer$[esp+100]
	mov	eax, DWORD PTR [ebx]
	push	ecx
	mov	DWORD PTR $T225094[esp+108], edx
	mov	edx, DWORD PTR [eax+24]
	push	esi
	mov	ecx, ebx
	call	edx
	imul	eax, DWORD PTR $T225094[esp+104]
	imul	eax, ebp
	mov	DWORD PTR _iFoodValue$[esp+104], eax
	mov	eax, DWORD PTR _eYield$[esp+100]
$LN80@PlotFoundV:

; 409  : 								}
; 410  : 								if (eYield == NO_YIELD || eYield == YIELD_PRODUCTION)

	cmp	eax, -1
	je	SHORT $LN77@PlotFoundV
	cmp	eax, 1
	jne	SHORT $LN78@PlotFoundV
$LN77@PlotFoundV:

; 411  : 								{
; 412  : 									iProductionValue = iRingModifier * ComputeProductionValue(pLoopPlot, pPlayer) * /*3*/ GC.getSETTLER_PRODUCTION_MULTIPLIER();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7204
	mov	edx, DWORD PTR [ebx]
	mov	edx, DWORD PTR [edx+32]
	mov	DWORD PTR $T225098[esp+104], eax
	mov	eax, DWORD PTR _pPlayer$[esp+100]
	push	eax
	push	esi
	mov	ecx, ebx
	call	edx
	imul	eax, DWORD PTR $T225098[esp+104]
	imul	eax, ebp
	mov	DWORD PTR _iProductionValue$[esp+104], eax
	mov	eax, DWORD PTR _eYield$[esp+100]
$LN78@PlotFoundV:

; 413  : 								}
; 414  : 								if (eYield == NO_YIELD || eYield == YIELD_GOLD)

	cmp	eax, -1
	je	SHORT $LN75@PlotFoundV
	cmp	eax, 2
	jne	SHORT $LN76@PlotFoundV
$LN75@PlotFoundV:

; 415  : 								{
; 416  : 									iGoldValue = iRingModifier * ComputeGoldValue(pLoopPlot, pPlayer) * /*2*/ GC.getSETTLER_GOLD_MULTIPLIER();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7208
	mov	edx, DWORD PTR [ebx]
	mov	edx, DWORD PTR [edx+36]
	mov	DWORD PTR $T225102[esp+104], eax
	mov	eax, DWORD PTR _pPlayer$[esp+100]
	push	eax
	push	esi
	mov	ecx, ebx
	call	edx
	imul	eax, DWORD PTR $T225102[esp+104]
	imul	eax, ebp
	mov	DWORD PTR _iGoldValue$[esp+104], eax
	mov	eax, DWORD PTR _eYield$[esp+100]
$LN76@PlotFoundV:

; 417  : 								}
; 418  : 								if (eYield == NO_YIELD || eYield == YIELD_SCIENCE)

	cmp	eax, -1
	je	SHORT $LN73@PlotFoundV
	cmp	eax, 3
	jne	SHORT $LN74@PlotFoundV
$LN73@PlotFoundV:

; 419  : 								{
; 420  : 									iScienceValue = iRingModifier * ComputeScienceValue(pLoopPlot, pPlayer) * /*1*/ GC.getSETTLER_SCIENCE_MULTIPLIER();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7212
	mov	edx, DWORD PTR [ebx]
	mov	edx, DWORD PTR [edx+40]
	mov	DWORD PTR $T225106[esp+104], eax
	mov	eax, DWORD PTR _pPlayer$[esp+100]
	push	eax
	push	esi
	mov	ecx, ebx
	call	edx
	imul	eax, DWORD PTR $T225106[esp+104]
	imul	eax, ebp
	mov	DWORD PTR _iScienceValue$[esp+104], eax
	mov	eax, DWORD PTR _eYield$[esp+100]
$LN74@PlotFoundV:

; 421  : 								}
; 422  : 								if (eYield == NO_YIELD || eYield == YIELD_FAITH)

	cmp	eax, -1
	je	SHORT $LN71@PlotFoundV
	cmp	eax, 5
	jne	SHORT $LN72@PlotFoundV
$LN71@PlotFoundV:

; 423  : 								{
; 424  : 									iFaithValue = iRingModifier * ComputeFaithValue(pLoopPlot, pPlayer) * /*1*/ GC.getSETTLER_FAITH_MULTIPLIER();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7216
	mov	edx, DWORD PTR [ebx]
	mov	edx, DWORD PTR [edx+44]
	mov	DWORD PTR $T225110[esp+104], eax
	mov	eax, DWORD PTR _pPlayer$[esp+100]
	push	eax
	push	esi
	mov	ecx, ebx
	call	edx
	imul	eax, DWORD PTR $T225110[esp+104]
	imul	eax, ebp
	mov	DWORD PTR _iFaithValue$[esp+104], eax
$LN72@PlotFoundV:

; 425  : 								}
; 426  : 							}
; 427  : 
; 428  : 							// whether or not we are working these we get the benefit as long as culture can grow to take them
; 429  : 							if (iDistance <= 5 && pLoopPlot->getOwner() == NO_PLAYER) // there is no benefit if we already own these tiles

	cmp	BYTE PTR [esi+4], -1
	jne	SHORT $LN69@PlotFoundV

; 430  : 							{
; 431  : 								iHappinessValue = iRingModifier * ComputeHappinessValue(pLoopPlot, pPlayer) * /*6*/ GC.getSETTLER_HAPPINESS_MULTIPLIER();

	mov	ecx, DWORD PTR _pPlayer$[esp+100]
	mov	eax, DWORD PTR [ebx]
	mov	edx, DWORD PTR [eax+28]
	mov	edi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7200
	push	ecx
	push	esi
	mov	ecx, ebx
	call	edx
	imul	eax, edi

; 432  : 								iResourceValue = iRingModifier * ComputeTradeableResourceValue(pLoopPlot, pPlayer) * /*1*/ GC.getSETTLER_RESOURCE_MULTIPLIER();

	mov	edx, DWORD PTR [ebx]
	imul	eax, ebp
	mov	edx, DWORD PTR [edx+48]
	mov	DWORD PTR _iHappinessValue$[esp+104], eax
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7220
	mov	DWORD PTR $T225121[esp+104], eax
	mov	eax, DWORD PTR _pPlayer$[esp+100]
	push	eax
	push	esi
	mov	ecx, ebx
	call	edx
	mov	edi, eax
	imul	edi, DWORD PTR $T225121[esp+104]
	imul	edi, ebp

; 433  : 								if (iDistance)

	cmp	DWORD PTR _iDistance$223584[esp+104], 0
	je	SHORT $LN69@PlotFoundV

; 434  : 									iStrategicValue = ComputeStrategicValue(pLoopPlot, pPlayer, iDistance) * /*1*/ GC.getSETTLER_STRATEGIC_MULTIPLIER();  // the ring is included in the computation

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7224
	mov	ecx, DWORD PTR _pPlayer$[esp+100]
	mov	edx, DWORD PTR [ebx]
	mov	edx, DWORD PTR [edx+52]
	mov	DWORD PTR $T225125[esp+104], eax
	mov	eax, DWORD PTR _iDistance$223584[esp+104]
	push	eax
	push	ecx
	push	esi
	mov	ecx, ebx
	call	edx
	imul	eax, DWORD PTR $T225125[esp+104]
	mov	DWORD PTR _iStrategicValue$[esp+104], eax
$LN69@PlotFoundV:

; 435  : 							}
; 436  : 
; 437  : 							iTotalFoodValue += iFoodValue;
; 438  : 							iTotalHappinessValue += iHappinessValue;
; 439  : 							iTotalProductionValue += iProductionValue;
; 440  : 							iTotalGoldValue += iGoldValue;
; 441  : 							iTotalScienceValue += iScienceValue;
; 442  : 							iTotalFaithValue += iFaithValue;
; 443  : 							iTotalResourceValue += iResourceValue;
; 444  : 							iTotalStrategicValue += iStrategicValue;
; 445  : 
; 446  : 							int iPlotValue = iFoodValue + iHappinessValue + iProductionValue + iGoldValue + iScienceValue + iFaithValue + iResourceValue;

	mov	eax, DWORD PTR _iFaithValue$[esp+104]
	add	edi, eax
	add	edi, DWORD PTR _iScienceValue$[esp+104]
	add	edi, DWORD PTR _iGoldValue$[esp+104]
	add	edi, DWORD PTR _iProductionValue$[esp+104]
	add	edi, DWORD PTR _iHappinessValue$[esp+104]
	add	edi, DWORD PTR _iFoodValue$[esp+104]

; 447  : 							
; 448  : 							if (iPlotValue == 0)

	jne	SHORT $LN68@PlotFoundV

; 449  : 							{
; 450  : 								// this tile is so bad it gets negatives
; 451  : 								iPlotValue -= iRingModifier * GC.getSETTLER_FOOD_MULTIPLIER() * 2;

	imul	ebp, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7196
	neg	ebp
	add	ebp, ebp
	mov	edi, ebp
$LN68@PlotFoundV:

; 452  : 							}
; 453  : 							iPlotValue += iStrategicValue;

	add	edi, DWORD PTR _iStrategicValue$[esp+104]

; 454  : 
; 455  : 							// if this tile is a NW boost the value just so that we force the AI to claim them (if we can work it)
; 456  : 							if (pLoopPlot->IsNaturalWonder() && iDistance > 0 && iDistance <= NUM_CITY_RINGS)

	mov	ecx, esi
	call	?IsNaturalWonder@CvPlot@@QBE_NXZ	; CvPlot::IsNaturalWonder
	test	al, al
	je	SHORT $LN212@PlotFoundV
	mov	eax, DWORD PTR _iDistance$223584[esp+104]
	dec	eax
	cmp	eax, 2
	ja	SHORT $LN212@PlotFoundV

; 457  : 							{
; 458  : 								//iPlotValue += iPlotValue * 2 + 10;
; 459  : 								iPlotValue += iPlotValue * 2 + 500;

	lea	edi, DWORD PTR [edi+edi*2+500]
$LN212@PlotFoundV:

; 460  : 							}
; 461  : 
; 462  : 							// lower value a lot if we already own this tile
; 463  : 							if (iPlotValue > 0 && pLoopPlot->getOwner() == pPlayer->GetID())

	test	edi, edi
	jle	SHORT $LN213@PlotFoundV
	movsx	ecx, BYTE PTR [esi+4]
	mov	edx, DWORD PTR _pPlayer$[esp+100]
	cmp	ecx, DWORD PTR [edx+44]
	jne	SHORT $LN213@PlotFoundV

; 464  : 							{
; 465  : 								iPlotValue /= 4;

	mov	eax, edi
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	mov	edi, eax
$LN213@PlotFoundV:

; 466  : 							}
; 467  : 
; 468  : 							// add this plot into the total
; 469  : 							rtnValue += iPlotValue;

	add	DWORD PTR _rtnValue$[esp+104], edi

; 470  : 
; 471  : 							FeatureTypes ePlotFeature = pLoopPlot->getFeatureType();

	movsx	edi, BYTE PTR [esi+432]

; 472  : 							ImprovementTypes ePlotImprovement = pLoopPlot->getImprovementType();

	mov	ecx, esi
	call	?getImprovementType@CvPlot@@QBE?AW4ImprovementTypes@@XZ ; CvPlot::getImprovementType

; 473  : 							ResourceTypes ePlotResource = pLoopPlot->getResourceType();

	push	-1
	mov	ecx, esi
	mov	ebp, eax
	call	?getResourceType@CvPlot@@QBE?AW4ResourceTypes@@W4TeamTypes@@@Z ; CvPlot::getResourceType
	mov	DWORD PTR _ePlotResource$223611[esp+104], eax

; 474  : 
; 475  : 							if (ePlotFeature == FEATURE_FOREST)
; 476  : 							{
; 477  : 								if (iDistance <= 5)
; 478  : 								{
; 479  : 									++iIroquoisForestCount;

	mov	eax, 1
	cmp	edi, 5
	jne	SHORT $LN65@PlotFoundV
	add	DWORD PTR _iIroquoisForestCount$[esp+104], eax

; 480  : 									if (iDistance == 1)

	cmp	DWORD PTR _iDistance$223584[esp+104], eax
	jne	SHORT $LN55@PlotFoundV

; 481  : 									{
; 482  : 										if (ePlotImprovement == NO_IMPROVEMENT)

	cmp	ebp, -1
	jne	SHORT $LN55@PlotFoundV

; 483  : 										{
; 484  : 											++iCelticForestCount;

	inc	DWORD PTR _iCelticForestCount$[esp+104]

; 485  : 										}
; 486  : 									}
; 487  : 								}
; 488  : 							}

	jmp	SHORT $LN55@PlotFoundV
$LN65@PlotFoundV:

; 489  : 							else if (ePlotFeature == FEATURE_JUNGLE)

	cmp	edi, eax
	jne	SHORT $LN60@PlotFoundV

; 490  : 							{
; 491  : 								if (iDistance <= NUM_CITY_RINGS)

	cmp	DWORD PTR _iDistance$223584[esp+104], 3
	jg	SHORT $LN55@PlotFoundV

; 492  : 								{
; 493  : 									++iBrazilJungleCount;

	add	DWORD PTR _iBrazilJungleCount$[esp+104], eax

; 494  : 								}
; 495  : 							}

	jmp	SHORT $LN55@PlotFoundV
$LN60@PlotFoundV:

; 496  : 							else if (ePlotFeature == FEATURE_MARSH || ePlotFeature == FEATURE_FLOOD_PLAINS)

	cmp	edi, 2
	je	SHORT $LN56@PlotFoundV
	cmp	edi, 4
	jne	SHORT $LN55@PlotFoundV
$LN56@PlotFoundV:

; 497  : 							{
; 498  : 								if (iDistance <= NUM_CITY_RINGS)

	cmp	DWORD PTR _iDistance$223584[esp+104], 3
	jg	SHORT $LN55@PlotFoundV

; 499  : 								{
; 500  : 									++iWetlandsCount;

	add	DWORD PTR _iWetlandsCount$[esp+104], eax
$LN55@PlotFoundV:

; 501  : 								}
; 502  : 							}
; 503  : 
; 504  : 							if (pLoopPlot->IsNaturalWonder())

	mov	ecx, esi
	call	?IsNaturalWonder@CvPlot@@QBE_NXZ	; CvPlot::IsNaturalWonder
	test	al, al

; 505  : 							{
; 506  : 								if (iDistance <= 1)

	mov	eax, 1
	je	SHORT $LN53@PlotFoundV
	cmp	DWORD PTR _iDistance$223584[esp+104], eax
	jg	SHORT $LN53@PlotFoundV

; 507  : 								{
; 508  : 									++iNaturalWonderCount;

	add	DWORD PTR _iNaturalWonderCount$[esp+104], eax
$LN53@PlotFoundV:

; 509  : 								}
; 510  : 							}
; 511  : 
; 512  : 							if (pLoopPlot->getTerrainType() == TERRAIN_DESERT)

	cmp	BYTE PTR [esi+6], 2
	jne	SHORT $LN50@PlotFoundV

; 513  : 							{
; 514  : 								if (iDistance <= NUM_CITY_RINGS)

	cmp	DWORD PTR _iDistance$223584[esp+104], 3
	jg	SHORT $LN50@PlotFoundV

; 515  : 								{
; 516  : 									if (ePlotResource == NO_RESOURCE)

	cmp	DWORD PTR _ePlotResource$223611[esp+104], -1
	jne	SHORT $LN50@PlotFoundV

; 517  : 									{
; 518  : 										++iDesertCount;

	add	DWORD PTR _iDesertCount$[esp+104], eax
$LN50@PlotFoundV:

; 519  : 									}
; 520  : 								}
; 521  : 							}
; 522  : 
; 523  : 							if (bIsInca)

	cmp	BYTE PTR _bIsInca$[esp+104], 0
	je	SHORT $LN90@PlotFoundV

; 524  : 							{
; 525  : 								if (pLoopPlot->isHills())

	cmp	BYTE PTR [esi+5], 1
	jne	SHORT $LN90@PlotFoundV

; 526  : 								{
; 527  : 									if (iDistance <= NUM_CITY_RINGS)

	cmp	DWORD PTR _iDistance$223584[esp+104], 3
	jg	SHORT $LN90@PlotFoundV

; 528  : 									{
; 529  : 										iAdjacentMountains = pLoopPlot->GetNumAdjacentMountains();

	mov	ecx, esi
	call	?GetNumAdjacentMountains@CvPlot@@QBEHXZ	; CvPlot::GetNumAdjacentMountains

; 530  : 										if (iAdjacentMountains > 0 && iAdjacentMountains < 6)

	lea	ecx, DWORD PTR [eax-1]
	cmp	ecx, 4
	ja	SHORT $LN90@PlotFoundV

; 531  : 										{
; 532  : 											//give the bonus if it's hills, with additional if bordered by mountains
; 533  : 											rtnValue += m_iIncaMultiplier + (iAdjacentMountains * m_iIncaMultiplier);

	inc	eax
	imul	eax, DWORD PTR [ebx+100]
	add	DWORD PTR _rtnValue$[esp+104], eax
$LN90@PlotFoundV:
	mov	eax, DWORD PTR _iDY$223578[esp+104]
	inc	eax
	cmp	eax, 7
	mov	DWORD PTR _iDY$223578[esp+104], eax
	jle	$LL211@PlotFoundV
	mov	eax, DWORD PTR _iDX$223574[esp+104]
	inc	eax
	cmp	eax, 7
	mov	DWORD PTR _iDX$223574[esp+104], eax
	jle	$LL210@PlotFoundV

; 549  : 							}
; 550  : 						}
; 551  : 					}
; 552  : 				}
; 553  : 			}
; 554  : 		}
; 555  : 	}
; 556  : 
; 557  : 	if (pPlayer->GetPlayerTraits()->IsFaithFromUnimprovedForest())

	mov	ebp, DWORD PTR _pPlayer$[esp+100]
	mov	ecx, ebp
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	cmp	BYTE PTR [eax+341], 0
	je	SHORT $LN42@PlotFoundV

; 558  : 	{
; 559  : 		if (iCelticForestCount >= 3)

	mov	eax, DWORD PTR _iCelticForestCount$[esp+104]
	cmp	eax, 3

; 560  : 		{
; 561  : 			rtnValue += 2 * 1000 * m_iFlavorMultiplier[YIELD_FAITH];

	mov	esi, DWORD PTR _rtnValue$[esp+104]
	jl	SHORT $LN41@PlotFoundV
	mov	edx, DWORD PTR [ebx+24]
	imul	edx, 2000				; 000007d0H
	add	esi, edx
	jmp	SHORT $LN35@PlotFoundV
$LN41@PlotFoundV:

; 562  : 		}
; 563  : 		else if (iCelticForestCount >= 1)

	cmp	eax, 1
	jl	SHORT $LN35@PlotFoundV

; 564  : 		{
; 565  : 			rtnValue += 1 * 1000 * m_iFlavorMultiplier[YIELD_FAITH];

	mov	eax, DWORD PTR [ebx+24]
	imul	eax, 1000				; 000003e8H

; 566  : 		}
; 567  : 	}

	jmp	SHORT $LN228@PlotFoundV
$LN42@PlotFoundV:

; 568  : 	else if (pPlayer->GetPlayerTraits()->IsMoveFriendlyWoodsAsRoad())

	mov	ecx, ebp
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	cmp	BYTE PTR [eax+333], 0
	je	SHORT $LN37@PlotFoundV

; 569  : 	{
; 570  : 		rtnValue += iIroquoisForestCount * 10;	

	mov	eax, DWORD PTR _iIroquoisForestCount$[esp+104]
	mov	edx, DWORD PTR _rtnValue$[esp+104]
	lea	ecx, DWORD PTR [eax+eax*4]
	lea	esi, DWORD PTR [edx+ecx*2]
	jmp	SHORT $LN35@PlotFoundV
$LN37@PlotFoundV:

; 571  : 	}
; 572  : 	else if (pPlayer->GetPlayerTraits()->GetNaturalWonderYieldModifier() > 0)	//ie: Spain

	mov	ecx, ebp
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	cmp	DWORD PTR [eax+212], 0

; 573  : 	{
; 574  : 		rtnValue += iNaturalWonderCount * m_iSpainMultiplier;	

	mov	esi, DWORD PTR _rtnValue$[esp+104]
	jle	SHORT $LN35@PlotFoundV
	mov	eax, DWORD PTR [ebx+88]
	imul	eax, DWORD PTR _iNaturalWonderCount$[esp+104]
$LN228@PlotFoundV:
	add	esi, eax
$LN35@PlotFoundV:

; 575  : 	}
; 576  : 
; 577  : 	// Custom code for Brazil
; 578  : 	ImprovementTypes eBrazilImprovement = (ImprovementTypes)GC.getInfoTypeForString("IMPROVEMENT_BRAZILWOOD_CAMP", true);  

	push	1
	push	OFFSET $SG223645
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString

; 579  : 	if(eBrazilImprovement != NO_IMPROVEMENT)

	cmp	eax, -1
	je	SHORT $LN217@PlotFoundV

; 580  : 	{
; 581  : 		CvImprovementEntry* pkEntry = GC.getImprovementInfo(eBrazilImprovement);

	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getImprovementInfo@CvGlobals@@QAEPAVCvImprovementEntry@@W4ImprovementTypes@@@Z ; CvGlobals::getImprovementInfo
	mov	edi, eax

; 582  : 		if(pkEntry != NULL && pkEntry->IsSpecificCivRequired())

	test	edi, edi
	je	SHORT $LN217@PlotFoundV
	mov	ecx, edi
	call	?IsSpecificCivRequired@CvImprovementEntry@@QBE_NXZ ; CvImprovementEntry::IsSpecificCivRequired
	test	al, al
	je	SHORT $LN217@PlotFoundV

; 583  : 		{
; 584  : 			CivilizationTypes eCiv = pkEntry->GetRequiredCivilization();

	mov	ecx, edi
	call	?GetRequiredCivilization@CvImprovementEntry@@QBE?AW4CivilizationTypes@@XZ ; CvImprovementEntry::GetRequiredCivilization

; 585  : 			if(eCiv == pPlayer->getCivilizationType())

	mov	ecx, ebp
	mov	edi, eax
	call	?getCivilizationType@CvPlayer@@QBE?AW4CivilizationTypes@@XZ ; CvPlayer::getCivilizationType
	cmp	edi, eax
	jne	SHORT $LN217@PlotFoundV

; 586  : 			{
; 587  : 				rtnValue += iBrazilJungleCount * m_iBrazilMultiplier;

	mov	ecx, DWORD PTR [ebx+84]
	imul	ecx, DWORD PTR _iBrazilJungleCount$[esp+104]
	add	esi, ecx
$LN217@PlotFoundV:

; 588  : 			}
; 589  : 		}
; 590  : 	}
; 591  : 
; 592  : 	// Custom code for Morocco
; 593  : 	ImprovementTypes eMoroccoImprovement = (ImprovementTypes)GC.getInfoTypeForString("IMPROVEMENT_KASBAH", true);  

	push	1
	push	OFFSET $SG223653
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString

; 594  : 	if(eMoroccoImprovement != NO_IMPROVEMENT)

	cmp	eax, -1
	je	SHORT $LN218@PlotFoundV

; 595  : 	{
; 596  : 		CvImprovementEntry* pkEntry = GC.getImprovementInfo(eMoroccoImprovement);

	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getImprovementInfo@CvGlobals@@QAEPAVCvImprovementEntry@@W4ImprovementTypes@@@Z ; CvGlobals::getImprovementInfo
	mov	edi, eax

; 597  : 		if(pkEntry != NULL && pkEntry->IsSpecificCivRequired())

	test	edi, edi
	je	SHORT $LN218@PlotFoundV
	mov	ecx, edi
	call	?IsSpecificCivRequired@CvImprovementEntry@@QBE_NXZ ; CvImprovementEntry::IsSpecificCivRequired
	test	al, al
	je	SHORT $LN218@PlotFoundV

; 598  : 		{
; 599  : 			CivilizationTypes eCiv = pkEntry->GetRequiredCivilization();

	mov	ecx, edi
	call	?GetRequiredCivilization@CvImprovementEntry@@QBE?AW4CivilizationTypes@@XZ ; CvImprovementEntry::GetRequiredCivilization

; 600  : 			if(eCiv == pPlayer->getCivilizationType())

	mov	ecx, ebp
	mov	edi, eax
	call	?getCivilizationType@CvPlayer@@QBE?AW4CivilizationTypes@@XZ ; CvPlayer::getCivilizationType
	cmp	edi, eax
	jne	SHORT $LN218@PlotFoundV

; 601  : 			{
; 602  : 				rtnValue += iDesertCount * m_iMorrocoMultiplier;

	mov	edx, DWORD PTR [ebx+92]
	imul	edx, DWORD PTR _iDesertCount$[esp+104]
	add	esi, edx
$LN218@PlotFoundV:

; 603  : 			}
; 604  : 		}
; 605  : 	}
; 606  : 
; 607  : 	//Custom code for Netherlands
; 608  : 	ImprovementTypes ePolderImprovement = (ImprovementTypes)GC.getInfoTypeForString("IMPROVEMENT_POLDER", true);  

	push	1
	push	OFFSET $SG223661
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString

; 609  : 	if(ePolderImprovement != NO_IMPROVEMENT)

	cmp	eax, -1
	je	SHORT $LN219@PlotFoundV

; 610  : 	{
; 611  : 		CvImprovementEntry* pkEntry = GC.getImprovementInfo(ePolderImprovement);

	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getImprovementInfo@CvGlobals@@QAEPAVCvImprovementEntry@@W4ImprovementTypes@@@Z ; CvGlobals::getImprovementInfo
	mov	edi, eax

; 612  : 		if(pkEntry != NULL && pkEntry->IsSpecificCivRequired())

	test	edi, edi
	je	SHORT $LN219@PlotFoundV
	mov	ecx, edi
	call	?IsSpecificCivRequired@CvImprovementEntry@@QBE_NXZ ; CvImprovementEntry::IsSpecificCivRequired
	test	al, al
	je	SHORT $LN219@PlotFoundV

; 613  : 		{
; 614  : 			CivilizationTypes eCiv = pkEntry->GetRequiredCivilization();

	mov	ecx, edi
	call	?GetRequiredCivilization@CvImprovementEntry@@QBE?AW4CivilizationTypes@@XZ ; CvImprovementEntry::GetRequiredCivilization

; 615  : 			if(eCiv == pPlayer->getCivilizationType())

	mov	ecx, ebp
	mov	edi, eax
	call	?getCivilizationType@CvPlayer@@QBE?AW4CivilizationTypes@@XZ ; CvPlayer::getCivilizationType
	cmp	edi, eax
	jne	SHORT $LN219@PlotFoundV

; 616  : 			{
; 617  : 				rtnValue += iWetlandsCount * m_iNetherlandsMultiplier;

	mov	eax, DWORD PTR [ebx+96]
	imul	eax, DWORD PTR _iWetlandsCount$[esp+104]
	add	esi, eax
$LN219@PlotFoundV:

; 618  : 			}
; 619  : 		}
; 620  : 	}
; 621  : 
; 622  : 	if (rtnValue < 0) rtnValue = 0;

	test	esi, esi
	jge	SHORT $LN25@PlotFoundV
	xor	esi, esi
$LN25@PlotFoundV:

; 623  : 
; 624  : 	// Finally, look at the city plot itself and use it as an overall multiplier
; 625  : 	if (pPlot->getResourceType(pPlayer->getTeam()) != NO_RESOURCE)

	mov	eax, DWORD PTR [ebp+44]
	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN179@PlotFoundV
	mov	ecx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax*4]
	jmp	SHORT $LN180@PlotFoundV
$LN179@PlotFoundV:
	or	eax, -1
$LN180@PlotFoundV:
	mov	edi, DWORD PTR _pPlot$[esp+100]
	push	eax
	mov	ecx, edi
	call	?getResourceType@CvPlot@@QBE?AW4ResourceTypes@@W4TeamTypes@@@Z ; CvPlot::getResourceType
	cmp	eax, -1
	je	SHORT $LN24@PlotFoundV

; 626  : 	{
; 627  : 		rtnValue += (int)rtnValue * /*-50*/ GC.getBUILD_ON_RESOURCE_PERCENT() / 100;

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7260
	imul	ecx, esi
	mov	eax, 1374389535				; 51eb851fH
	imul	ecx
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	add	esi, eax
$LN24@PlotFoundV:

; 628  : 	}
; 629  : 
; 630  : 	if (pPlot->isRiver())

	cmp	BYTE PTR [edi+457], 0
	jle	SHORT $LN23@PlotFoundV

; 631  : 	{
; 632  : 		rtnValue += (int)rtnValue * /*15*/ GC.getBUILD_ON_RIVER_PERCENT() / 100;

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7264
	imul	ecx, esi
	mov	eax, 1374389535				; 51eb851fH
	imul	ecx
	sar	edx, 5
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	add	esi, ecx
$LN23@PlotFoundV:

; 633  : 	}
; 634  : 
; 635  : 	if (pPlot->isCoastalLand(GC.getMIN_WATER_SIZE_FOR_OCEAN()))

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+6876
	push	edx
	mov	ecx, edi
	call	?isCoastalLand@CvPlot@@QBE_NH@Z		; CvPlot::isCoastalLand
	test	al, al
	je	SHORT $LN20@PlotFoundV

; 636  : 	{
; 637  : 		// okay, coast used to have lots of gold so players settled there "naturally", it doesn't any more, so I am going to give it a nudge in that direction
; 638  : 		// slewis - removed Brian(?)'s rtnValue adjustment and raised the BUILD_ON_COAST_PERCENT to 40 from 25
; 639  : 		//rtnValue += rtnValue > 0 ? 10 : 0;
; 640  : 		rtnValue += (int)rtnValue * /*40*/ GC.getSETTLER_BUILD_ON_COAST_PERCENT() / 100;

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7228
	imul	ecx, esi
	mov	eax, 1374389535				; 51eb851fH
	imul	ecx

; 641  : 		int iNavalFlavor = pPlayer->GetGrandStrategyAI()->GetPersonalityAndGrandStrategy((FlavorTypes)m_iNavalIndex);

	mov	ecx, DWORD PTR [ebx+80]
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	push	ecx
	mov	ecx, ebp
	add	esi, eax
	call	?GetGrandStrategyAI@CvPlayer@@QBEPAVCvGrandStrategyAI@@XZ ; CvPlayer::GetGrandStrategyAI
	mov	ecx, eax
	call	?GetPersonalityAndGrandStrategy@CvGrandStrategyAI@@QAEHW4FlavorTypes@@@Z ; CvGrandStrategyAI::GetPersonalityAndGrandStrategy

; 642  : 		if (iNavalFlavor > 7)

	cmp	eax, 7
	jle	SHORT $LN21@PlotFoundV

; 643  : 		{
; 644  : 			rtnValue += (int)rtnValue * /*40*/ GC.getSETTLER_BUILD_ON_COAST_PERCENT() / 100;

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7228
	imul	ecx, esi
	mov	eax, 1374389535				; 51eb851fH
	imul	ecx
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	add	esi, eax
$LN21@PlotFoundV:

; 645  : 		}
; 646  : 		if (pPlayer->getCivilizationInfo().isCoastalCiv()) // we really like the coast (England, Norway, Polynesia, Carthage, etc.)

	mov	ecx, ebp
	call	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ ; CvPlayer::getCivilizationInfo
	mov	ecx, eax
	call	?isCoastalCiv@CvCivilizationInfo@@QBE_NXZ ; CvCivilizationInfo::isCoastalCiv
	test	al, al
	je	SHORT $LN20@PlotFoundV

; 647  : 		{
; 648  : 			rtnValue += rtnValue > 0 ? 25 : 0;

	xor	ecx, ecx
	test	esi, esi
	setle	cl
	dec	ecx
	and	ecx, 25					; 00000019H

; 649  : 			rtnValue *= 2;

	add	ecx, esi
	add	ecx, ecx
	mov	esi, ecx
$LN20@PlotFoundV:

; 650  : 		}
; 651  : 	}
; 652  : 
; 653  : 	// Nearby Cities?
; 654  : 
; 655  : 	// Human
; 656  : #ifdef AUI_WARNING_FIXES
; 657  : 	if (pPlayer->isHuman())
; 658  : #else
; 659  : 	if (pPlayer != NULL && pPlayer->isHuman())

	mov	ecx, ebp
	call	?isHuman@CvPlayer@@QBE_NXZ		; CvPlayer::isHuman
	test	al, al
	je	SHORT $LN19@PlotFoundV

; 660  : #endif
; 661  : 	{
; 662  : 		if (iClosestCityOfMine == 3)

	cmp	DWORD PTR _iClosestCityOfMine$[esp+104], 3
	jne	$LN1@PlotFoundV

; 663  : 		{
; 664  : 			rtnValue /= 2;

	mov	eax, esi

; 665  : 		}
; 666  : 	}
; 667  : 	// AI
; 668  : 	else

	jmp	$LN225@PlotFoundV
$LN19@PlotFoundV:

; 669  : 	{
; 670  : 		int iGrowthFlavor = pPlayer->GetGrandStrategyAI()->GetPersonalityAndGrandStrategy((FlavorTypes)m_iGrowthIndex);

	mov	edx, DWORD PTR [ebx+76]
	push	edx
	mov	ecx, ebp
	call	?GetGrandStrategyAI@CvPlayer@@QBEPAVCvGrandStrategyAI@@XZ ; CvPlayer::GetGrandStrategyAI
	mov	ecx, eax
	call	?GetPersonalityAndGrandStrategy@CvGrandStrategyAI@@QAEHW4FlavorTypes@@@Z ; CvGrandStrategyAI::GetPersonalityAndGrandStrategy
	mov	edi, eax

; 671  : 		int iExpansionFlavor = pPlayer->GetGrandStrategyAI()->GetPersonalityAndGrandStrategy((FlavorTypes)m_iExpansionIndex);

	mov	eax, DWORD PTR [ebx+72]
	push	eax
	mov	ecx, ebp
	call	?GetGrandStrategyAI@CvPlayer@@QBEPAVCvGrandStrategyAI@@XZ ; CvPlayer::GetGrandStrategyAI
	mov	ecx, eax
	call	?GetPersonalityAndGrandStrategy@CvGrandStrategyAI@@QAEHW4FlavorTypes@@@Z ; CvGrandStrategyAI::GetPersonalityAndGrandStrategy

; 672  : 
; 673  : 		int iSweetSpot = 5;
; 674  : 		iSweetSpot += (iGrowthFlavor > 7) ?  1 : 0;
; 675  : 		iSweetSpot += (iExpansionFlavor > 7) ?  -1 : 0;

	xor	ecx, ecx
	cmp	eax, 7
	setle	cl

; 676  : 		iSweetSpot += (iGrowthFlavor < 4) ?  -1 : 0;
; 677  : 		iSweetSpot += (iExpansionFlavor < 4) ?  1 : 0;

	xor	edx, edx

; 678  : 		iSweetSpot = max(4,iSweetSpot);

	mov	DWORD PTR $T225045[esp+100], 4
	dec	ecx
	cmp	eax, 4
	setl	dl
	xor	eax, eax
	add	ecx, edx
	cmp	edi, 7
	setg	al
	xor	edx, edx
	add	ecx, eax
	cmp	edi, 4
	setge	dl
	dec	edx
	lea	eax, DWORD PTR [ecx+edx+5]
	mov	DWORD PTR _iSweetSpot$223686[esp+100], eax
	cmp	eax, 4
	lea	eax, DWORD PTR _iSweetSpot$223686[esp+100]
	jg	SHORT $LN199@PlotFoundV
	lea	eax, DWORD PTR $T225045[esp+100]
$LN199@PlotFoundV:
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _iSweetSpot$223686[esp+100], eax

; 679  : 		iSweetSpot = min(6,iSweetSpot);

	cmp	eax, 6
	mov	DWORD PTR $T225046[esp+100], 6
	lea	eax, DWORD PTR _iSweetSpot$223686[esp+100]
	jl	SHORT $LN203@PlotFoundV
	lea	eax, DWORD PTR $T225046[esp+100]
$LN203@PlotFoundV:
	mov	eax, DWORD PTR [eax]

; 680  : 
; 681  : 		if (iClosestCityOfMine == iSweetSpot) 

	mov	edi, DWORD PTR _iClosestCityOfMine$[esp+104]
	cmp	edi, eax
	jne	SHORT $LN226@PlotFoundV

; 682  : 		{
; 683  : 			// 1.5 was not enough 2.0 was too much, so lets split the difference
; 684  : 			rtnValue *= 175;

	imul	esi, 175				; 000000afH

; 685  : 			rtnValue /= 100;

	mov	eax, 1374389535				; 51eb851fH
	imul	esi
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	esi, eax
	jmp	SHORT $LN12@PlotFoundV
$LN226@PlotFoundV:

; 686  : 		}
; 687  : 		else if (iClosestCityOfMine < iSweetSpot)

	jge	SHORT $LN14@PlotFoundV

; 688  : 		{
; 689  : 			rtnValue /= 2;

	mov	eax, esi
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	esi, eax
	jmp	SHORT $LN12@PlotFoundV
$LN14@PlotFoundV:

; 690  : 		}
; 691  : 		else if (iClosestCityOfMine > 7)

	cmp	edi, 7
	jle	SHORT $LN12@PlotFoundV

; 692  : 		{
; 693  : 			rtnValue *= 2;

	lea	ecx, DWORD PTR [esi+esi]

; 694  : 			rtnValue /= 3;

	mov	eax, 1431655766				; 55555556H
	imul	ecx
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	mov	esi, ecx
$LN12@PlotFoundV:

; 695  : 		}
; 696  : 
; 697  : 		// use boldness to decide if we want to push close to enemies
; 698  : 		int iBoldness = pPlayer->GetDiplomacyAI()->GetBoldness();

	mov	ecx, ebp
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?GetBoldness@CvDiplomacyAI@@QBEHXZ	; CvDiplomacyAI::GetBoldness

; 699  : 		if (iBoldness < 4)

	cmp	eax, 4
	jge	SHORT $LN11@PlotFoundV

; 700  : 		{
; 701  : 			if (iClosestEnemyCity <= 4)

	mov	eax, DWORD PTR _iClosestEnemyCity$[esp+104]
	cmp	eax, 4
	jg	SHORT $LN10@PlotFoundV

; 702  : 			{
; 703  : 				rtnValue /= 4;

	mov	eax, esi
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	jmp	SHORT $LN227@PlotFoundV
$LN10@PlotFoundV:

; 704  : 			}
; 705  : 			else if (iClosestEnemyCity == 5)

	cmp	eax, 5
	jne	SHORT $LN223@PlotFoundV

; 706  : 			{
; 707  : 				rtnValue /= 2;

	mov	eax, esi
	cdq
	sub	eax, edx
	sar	eax, 1

; 708  : 			}
; 709  : 		}

	jmp	SHORT $LN227@PlotFoundV
$LN11@PlotFoundV:

; 710  : 		else if (iBoldness > 7)

	cmp	eax, 7
	jle	SHORT $LN6@PlotFoundV

; 711  : 		{
; 712  : 			if (iClosestEnemyCity <= 5 && iClosestCityOfMine < 8)

	cmp	DWORD PTR _iClosestEnemyCity$[esp+104], 5
	jg	SHORT $LN223@PlotFoundV
	cmp	edi, 8
	jge	SHORT $LN223@PlotFoundV

; 713  : 			{
; 714  : 				rtnValue *= 3;

	lea	eax, DWORD PTR [esi+esi*2]

; 715  : 				rtnValue /= 2;

	cdq
	sub	eax, edx
	sar	eax, 1

; 716  : 			}
; 717  : 		}
; 718  : 		else

	jmp	SHORT $LN227@PlotFoundV
$LN6@PlotFoundV:

; 719  : 		{
; 720  : 			if (iClosestEnemyCity < 5)

	cmp	DWORD PTR _iClosestEnemyCity$[esp+104], 5
	jge	SHORT $LN223@PlotFoundV

; 721  : 			{
; 722  : 				rtnValue *= 2;

	lea	ecx, DWORD PTR [esi+esi]

; 723  : 				rtnValue /= 3;

	mov	eax, 1431655766				; 55555556H
	imul	ecx
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
$LN227@PlotFoundV:
	mov	esi, eax
$LN223@PlotFoundV:

; 724  : 			}
; 725  : 		}
; 726  : 
; 727  : 		// if we are offshore, pull cities in tighter
; 728  : 		if (iCapitalArea != pPlot->getArea())

	mov	ecx, DWORD PTR _iCapitalArea$[esp+104]
	mov	edx, DWORD PTR _pPlot$[esp+100]
	cmp	ecx, DWORD PTR [edx+356]
	je	SHORT $LN1@PlotFoundV

; 729  : 		{
; 730  : 			if (iClosestCityOfMine < 7)

	cmp	edi, 7
	jge	SHORT $LN1@PlotFoundV

; 731  : 			{
; 732  : 				rtnValue *= 3;

	lea	eax, DWORD PTR [esi+esi*2]
$LN225@PlotFoundV:

; 733  : 				rtnValue /= 2;

	cdq
	sub	eax, edx
	sar	eax, 1
	mov	esi, eax
$LN1@PlotFoundV:

; 734  : 			}
; 735  : 		}
; 736  : 	}
; 737  : 
; 738  : 	rtnValue = (rtnValue > 0) ? rtnValue : 0;

	xor	eax, eax
	test	esi, esi
	setle	al
	pop	ebp
	pop	edi
	dec	eax
	and	eax, esi
	pop	esi
	pop	ebx

; 739  : 
; 740  : 	return rtnValue;
; 741  : }

	add	esp, 88					; 00000058H
	ret	16					; 00000010H
?PlotFoundValue@CvCitySiteEvaluator@@UAEHPAVCvPlot@@PAVCvPlayer@@W4YieldTypes@@_N@Z ENDP ; CvCitySiteEvaluator::PlotFoundValue
_TEXT	ENDS
EXTRN	?GetImprovementResourceYield@CvImprovementEntry@@QBEHHH@Z:PROC ; CvImprovementEntry::GetImprovementResourceYield
EXTRN	?GetImprovementForResource@CvImprovementXMLEntries@@QAEPAVCvImprovementEntry@@H@Z:PROC ; CvImprovementXMLEntries::GetImprovementForResource
EXTRN	?GetGameImprovements@CvGlobals@@QBEPAVCvImprovementXMLEntries@@XZ:PROC ; CvGlobals::GetGameImprovements
EXTRN	?getYieldChange@CvResourceInfo@@QBEHH@Z:PROC	; CvResourceInfo::getYieldChange
EXTRN	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z:PROC ; CvGlobals::getResourceInfo
EXTRN	?calculateNatureYield@CvPlot@@QBEHW4YieldTypes@@W4TeamTypes@@_N@Z:PROC ; CvPlot::calculateNatureYield
; Function compile flags: /Ogtpy
;	COMDAT ?ComputeFoodValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z
_TEXT	SEGMENT
_pPlot$ = 8						; size = 4
_pPlayer$ = 12						; size = 4
?ComputeFoodValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z PROC ; CvCitySiteEvaluator::ComputeFoodValue, COMDAT
; _this$ = ecx

; 774  : {

	push	ebx
	push	ebp
	push	esi

; 775  : 	int rtnValue = 0;
; 776  : 
; 777  : 	// From tile yield
; 778  : 	if(pPlayer == NULL)

	mov	esi, DWORD PTR _pPlayer$[esp+8]
	push	edi
	mov	ebp, ecx
	test	esi, esi
	jne	SHORT $LN5@ComputeFoo

; 779  : 	{
; 780  : 		rtnValue += pPlot->calculateNatureYield(YIELD_FOOD, NO_TEAM);

	push	esi
	push	-1

; 781  : 	}
; 782  : 	else

	jmp	SHORT $LN26@ComputeFoo
$LN5@ComputeFoo:

; 783  : 	{
; 784  : 		rtnValue += pPlot->calculateNatureYield(YIELD_FOOD, pPlayer->getTeam());

	mov	eax, DWORD PTR [esi+44]
	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN12@ComputeFoo
	mov	ecx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax*4]
	jmp	SHORT $LN13@ComputeFoo
$LN12@ComputeFoo:
	or	eax, -1
$LN13@ComputeFoo:
	push	0
	push	eax
$LN26@ComputeFoo:
	mov	ebx, DWORD PTR _pPlot$[esp+20]
	push	0
	mov	ecx, ebx
	call	?calculateNatureYield@CvPlot@@QBEHW4YieldTypes@@W4TeamTypes@@_N@Z ; CvPlot::calculateNatureYield
	mov	edi, eax

; 785  : 	}
; 786  : 
; 787  : 	// From resource
; 788  : 	TeamTypes eTeam = NO_TEAM;

	or	eax, -1

; 789  : 	if(pPlayer != NULL)

	test	esi, esi
	je	SHORT $LN22@ComputeFoo

; 790  : 	{
; 791  : 		eTeam = pPlayer->getTeam();

	mov	esi, DWORD PTR [esi+44]
	cmp	esi, 63					; 0000003fH
	ja	SHORT $LN21@ComputeFoo
	mov	eax, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [ecx+esi*4]
	jmp	SHORT $LN22@ComputeFoo
$LN21@ComputeFoo:
	or	eax, -1
$LN22@ComputeFoo:

; 792  : 	}
; 793  : 
; 794  : 	ResourceTypes eResource;
; 795  : 	eResource = pPlot->getResourceType(eTeam);

	push	eax
	mov	ecx, ebx
	call	?getResourceType@CvPlot@@QBE?AW4ResourceTypes@@W4TeamTypes@@@Z ; CvPlot::getResourceType
	mov	esi, eax

; 796  : 	if(eResource != NO_RESOURCE)

	cmp	esi, -1
	je	SHORT $LN1@ComputeFoo

; 797  : 	{
; 798  : 		rtnValue += GC.getResourceInfo(eResource)->getYieldChange(YIELD_FOOD);

	push	0
	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z ; CvGlobals::getResourceInfo
	mov	ecx, eax
	call	?getYieldChange@CvResourceInfo@@QBEHH@Z	; CvResourceInfo::getYieldChange

; 799  : 
; 800  : 		CvImprovementEntry* pImprovement = GC.GetGameImprovements()->GetImprovementForResource(eResource);

	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	add	edi, eax
	call	?GetGameImprovements@CvGlobals@@QBEPAVCvImprovementXMLEntries@@XZ ; CvGlobals::GetGameImprovements
	mov	ecx, eax
	call	?GetImprovementForResource@CvImprovementXMLEntries@@QAEPAVCvImprovementEntry@@H@Z ; CvImprovementXMLEntries::GetImprovementForResource

; 801  : 		if(pImprovement)

	test	eax, eax
	je	SHORT $LN1@ComputeFoo

; 802  : 		{
; 803  : 			rtnValue += pImprovement->GetImprovementResourceYield(eResource, YIELD_FOOD);

	push	0
	push	esi
	mov	ecx, eax
	call	?GetImprovementResourceYield@CvImprovementEntry@@QBEHHH@Z ; CvImprovementEntry::GetImprovementResourceYield
	add	edi, eax
$LN1@ComputeFoo:

; 804  : 		}
; 805  : 	}
; 806  : 
; 807  : 	return rtnValue * m_iFlavorMultiplier[YIELD_FOOD];

	mov	eax, DWORD PTR [ebp+4]
	imul	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 808  : }

	ret	8
?ComputeFoodValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z ENDP ; CvCitySiteEvaluator::ComputeFoodValue
_TEXT	ENDS
EXTRN	?getNumResourceTotal@CvPlayer@@QBEHW4ResourceTypes@@_N@Z:PROC ; CvPlayer::getNumResourceTotal
EXTRN	?getHappiness@CvResourceInfo@@QBEHXZ:PROC	; CvResourceInfo::getHappiness
; Function compile flags: /Ogtpy
;	COMDAT ?ComputeHappinessValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pPlot$ = 8						; size = 4
_pPlayer$ = 12						; size = 4
?ComputeHappinessValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z PROC ; CvCitySiteEvaluator::ComputeHappinessValue, COMDAT
; _this$ = ecx

; 812  : {

	push	ecx
	push	ebx
	push	ebp
	push	esi
	push	edi

; 813  : 	int rtnValue = 0;
; 814  : 
; 815  : 	// From resource
; 816  : 	TeamTypes eTeam = NO_TEAM;
; 817  : 	if(pPlayer != NULL)

	mov	edi, DWORD PTR _pPlayer$[esp+16]
	xor	ebp, ebp
	or	eax, -1
	mov	DWORD PTR _this$[esp+20], ecx
	test	edi, edi
	je	SHORT $LN13@ComputeHap

; 818  : 	{
; 819  : 		eTeam = pPlayer->getTeam();

	mov	eax, DWORD PTR [edi+44]
	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN12@ComputeHap
	mov	ecx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax*4]
	jmp	SHORT $LN13@ComputeHap
$LN12@ComputeHap:
	or	eax, -1
$LN13@ComputeHap:

; 820  : 	}
; 821  : 
; 822  : 	ResourceTypes eResource;
; 823  : 	eResource = pPlot->getResourceType(eTeam);

	mov	ebx, DWORD PTR _pPlot$[esp+16]
	push	eax
	mov	ecx, ebx
	call	?getResourceType@CvPlot@@QBE?AW4ResourceTypes@@W4TeamTypes@@@Z ; CvPlot::getResourceType
	mov	esi, eax

; 824  : 	if(eResource != NO_RESOURCE)

	cmp	esi, -1
	je	SHORT $LN1@ComputeHap

; 825  : 	{
; 826  : 		// Add a bonus if adds Happiness
; 827  : 		if(!pPlot->isOwned())

	mov	ecx, ebx
	call	?isOwned@CvPlot@@QBE_NXZ		; CvPlot::isOwned
	test	al, al
	jne	SHORT $LN3@ComputeHap

; 828  : 		{
; 829  : 			rtnValue += GC.getResourceInfo(eResource)->getHappiness();

	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z ; CvGlobals::getResourceInfo
	mov	ecx, eax
	call	?getHappiness@CvResourceInfo@@QBEHXZ	; CvResourceInfo::getHappiness
	mov	ebp, eax
$LN3@ComputeHap:

; 830  : 		}
; 831  : 
; 832  : 		// If we don't have this resource yet, increase it's value
; 833  : 		if(pPlayer)

	test	edi, edi
	je	SHORT $LN1@ComputeHap

; 834  : 		{
; 835  : 			if(pPlayer->getNumResourceTotal(eResource) == 0)

	push	1
	push	esi
	mov	ecx, edi
	call	?getNumResourceTotal@CvPlayer@@QBEHW4ResourceTypes@@_N@Z ; CvPlayer::getNumResourceTotal
	test	eax, eax
	jne	SHORT $LN1@ComputeHap

; 836  : 				rtnValue *= 5;

	lea	ebp, DWORD PTR [ebp+ebp*4]
$LN1@ComputeHap:

; 837  : 		}
; 838  : 	}
; 839  : 
; 840  : 	return rtnValue * m_iFlavorMultiplier[SITE_EVALUATION_HAPPINESS];

	mov	eax, DWORD PTR _this$[esp+20]
	mov	eax, DWORD PTR [eax+28]
	pop	edi
	imul	eax, ebp
	pop	esi
	pop	ebp
	pop	ebx

; 841  : }

	pop	ecx
	ret	8
?ComputeHappinessValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z ENDP ; CvCitySiteEvaluator::ComputeHappinessValue
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?ComputeProductionValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z
_TEXT	SEGMENT
_pPlot$ = 8						; size = 4
_pPlayer$ = 12						; size = 4
?ComputeProductionValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z PROC ; CvCitySiteEvaluator::ComputeProductionValue, COMDAT
; _this$ = ecx

; 845  : {

	push	ebx
	push	ebp
	push	esi

; 846  : 	int rtnValue = 0;
; 847  : 
; 848  : 	// From tile yield
; 849  : 	if(pPlayer == NULL)

	mov	esi, DWORD PTR _pPlayer$[esp+8]
	push	edi
	mov	ebp, ecx
	test	esi, esi
	jne	SHORT $LN5@ComputePro

; 850  : 	{
; 851  : 		rtnValue += pPlot->calculateNatureYield(YIELD_PRODUCTION, NO_TEAM);

	push	esi
	push	-1

; 852  : 	}
; 853  : 	else

	jmp	SHORT $LN26@ComputePro
$LN5@ComputePro:

; 854  : 	{
; 855  : 		rtnValue += pPlot->calculateNatureYield(YIELD_PRODUCTION, pPlayer->getTeam());

	mov	eax, DWORD PTR [esi+44]
	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN12@ComputePro
	mov	ecx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax*4]
	jmp	SHORT $LN13@ComputePro
$LN12@ComputePro:
	or	eax, -1
$LN13@ComputePro:
	push	0
	push	eax
$LN26@ComputePro:
	mov	ebx, DWORD PTR _pPlot$[esp+20]
	push	1
	mov	ecx, ebx
	call	?calculateNatureYield@CvPlot@@QBEHW4YieldTypes@@W4TeamTypes@@_N@Z ; CvPlot::calculateNatureYield
	mov	edi, eax

; 856  : 	}
; 857  : 
; 858  : 	// From resource
; 859  : 	TeamTypes eTeam = NO_TEAM;

	or	eax, -1

; 860  : 	if(pPlayer != NULL)

	test	esi, esi
	je	SHORT $LN22@ComputePro

; 861  : 	{
; 862  : 		eTeam = pPlayer->getTeam();

	mov	eax, DWORD PTR [esi+44]
	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN21@ComputePro
	mov	ecx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax*4]
	jmp	SHORT $LN22@ComputePro
$LN21@ComputePro:
	or	eax, -1
$LN22@ComputePro:

; 863  : 	}
; 864  : 
; 865  : 	ResourceTypes eResource;
; 866  : 	eResource = pPlot->getResourceType(eTeam);

	push	eax
	mov	ecx, ebx
	call	?getResourceType@CvPlot@@QBE?AW4ResourceTypes@@W4TeamTypes@@@Z ; CvPlot::getResourceType
	mov	esi, eax

; 867  : 	if(eResource != NO_RESOURCE)

	cmp	esi, -1
	je	SHORT $LN1@ComputePro

; 868  : 	{
; 869  : 		rtnValue += GC.getResourceInfo(eResource)->getYieldChange(YIELD_PRODUCTION);

	push	1
	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z ; CvGlobals::getResourceInfo
	mov	ecx, eax
	call	?getYieldChange@CvResourceInfo@@QBEHH@Z	; CvResourceInfo::getYieldChange

; 870  : 
; 871  : 		CvImprovementEntry* pImprovement = GC.GetGameImprovements()->GetImprovementForResource(eResource);

	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	add	edi, eax
	call	?GetGameImprovements@CvGlobals@@QBEPAVCvImprovementXMLEntries@@XZ ; CvGlobals::GetGameImprovements
	mov	ecx, eax
	call	?GetImprovementForResource@CvImprovementXMLEntries@@QAEPAVCvImprovementEntry@@H@Z ; CvImprovementXMLEntries::GetImprovementForResource

; 872  : 		if(pImprovement)

	test	eax, eax
	je	SHORT $LN1@ComputePro

; 873  : 		{
; 874  : 			rtnValue += pImprovement->GetImprovementResourceYield(eResource, YIELD_PRODUCTION);

	push	1
	push	esi
	mov	ecx, eax
	call	?GetImprovementResourceYield@CvImprovementEntry@@QBEHHH@Z ; CvImprovementEntry::GetImprovementResourceYield
	add	edi, eax
$LN1@ComputePro:

; 875  : 		}
; 876  : 	}
; 877  : 
; 878  : 	return rtnValue * m_iFlavorMultiplier[YIELD_PRODUCTION];

	mov	eax, DWORD PTR [ebp+8]
	imul	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 879  : }

	ret	8
?ComputeProductionValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z ENDP ; CvCitySiteEvaluator::ComputeProductionValue
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?ComputeGoldValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z
_TEXT	SEGMENT
_pPlot$ = 8						; size = 4
_pPlayer$ = 12						; size = 4
?ComputeGoldValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z PROC ; CvCitySiteEvaluator::ComputeGoldValue, COMDAT
; _this$ = ecx

; 883  : {

	push	ebx
	push	ebp
	push	esi

; 884  : 	int rtnValue = 0;
; 885  : 
; 886  : 	// From tile yield
; 887  : 	if(pPlayer == NULL)

	mov	esi, DWORD PTR _pPlayer$[esp+8]
	push	edi
	mov	ebp, ecx
	test	esi, esi
	jne	SHORT $LN5@ComputeGol

; 888  : 	{
; 889  : 		rtnValue += pPlot->calculateNatureYield(YIELD_GOLD, NO_TEAM);

	push	esi
	push	-1

; 890  : 	}
; 891  : 	else

	jmp	SHORT $LN26@ComputeGol
$LN5@ComputeGol:

; 892  : 	{
; 893  : 		rtnValue += pPlot->calculateNatureYield(YIELD_GOLD, pPlayer->getTeam());

	mov	eax, DWORD PTR [esi+44]
	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN12@ComputeGol
	mov	ecx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax*4]
	jmp	SHORT $LN13@ComputeGol
$LN12@ComputeGol:
	or	eax, -1
$LN13@ComputeGol:
	push	0
	push	eax
$LN26@ComputeGol:
	mov	ebx, DWORD PTR _pPlot$[esp+20]
	push	2
	mov	ecx, ebx
	call	?calculateNatureYield@CvPlot@@QBEHW4YieldTypes@@W4TeamTypes@@_N@Z ; CvPlot::calculateNatureYield
	mov	edi, eax

; 894  : 	}
; 895  : 
; 896  : 	// From resource
; 897  : 	TeamTypes eTeam = NO_TEAM;

	or	eax, -1

; 898  : 	if(pPlayer != NULL)

	test	esi, esi
	je	SHORT $LN22@ComputeGol

; 899  : 	{
; 900  : 		eTeam = pPlayer->getTeam();

	mov	eax, DWORD PTR [esi+44]
	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN21@ComputeGol
	mov	ecx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax*4]
	jmp	SHORT $LN22@ComputeGol
$LN21@ComputeGol:
	or	eax, -1
$LN22@ComputeGol:

; 901  : 	}
; 902  : 
; 903  : 	ResourceTypes eResource;
; 904  : 	eResource = pPlot->getResourceType(eTeam);

	push	eax
	mov	ecx, ebx
	call	?getResourceType@CvPlot@@QBE?AW4ResourceTypes@@W4TeamTypes@@@Z ; CvPlot::getResourceType
	mov	esi, eax

; 905  : 	if(eResource != NO_RESOURCE)

	cmp	esi, -1
	je	SHORT $LN1@ComputeGol

; 906  : 	{
; 907  : 		rtnValue += GC.getResourceInfo(eResource)->getYieldChange(YIELD_GOLD);

	push	2
	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z ; CvGlobals::getResourceInfo
	mov	ecx, eax
	call	?getYieldChange@CvResourceInfo@@QBEHH@Z	; CvResourceInfo::getYieldChange

; 908  : 
; 909  : 		CvImprovementEntry* pImprovement = GC.GetGameImprovements()->GetImprovementForResource(eResource);

	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	add	edi, eax
	call	?GetGameImprovements@CvGlobals@@QBEPAVCvImprovementXMLEntries@@XZ ; CvGlobals::GetGameImprovements
	mov	ecx, eax
	call	?GetImprovementForResource@CvImprovementXMLEntries@@QAEPAVCvImprovementEntry@@H@Z ; CvImprovementXMLEntries::GetImprovementForResource

; 910  : 		if(pImprovement)

	test	eax, eax
	je	SHORT $LN1@ComputeGol

; 911  : 		{
; 912  : 			rtnValue += pImprovement->GetImprovementResourceYield(eResource, YIELD_GOLD);

	push	2
	push	esi
	mov	ecx, eax
	call	?GetImprovementResourceYield@CvImprovementEntry@@QBEHHH@Z ; CvImprovementEntry::GetImprovementResourceYield
	add	edi, eax
$LN1@ComputeGol:

; 913  : 		}
; 914  : 	}
; 915  : 
; 916  : 	return rtnValue * m_iFlavorMultiplier[YIELD_GOLD];

	mov	eax, DWORD PTR [ebp+12]
	imul	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 917  : }

	ret	8
?ComputeGoldValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z ENDP ; CvCitySiteEvaluator::ComputeGoldValue
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?ComputeScienceValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z
_TEXT	SEGMENT
_pPlot$ = 8						; size = 4
_pPlayer$ = 12						; size = 4
?ComputeScienceValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z PROC ; CvCitySiteEvaluator::ComputeScienceValue, COMDAT
; _this$ = ecx

; 921  : {

	push	ebx

; 922  : 	int rtnValue = 0;
; 923  : 
; 924  : 	CvAssert(pPlot);
; 925  : 	if(!pPlot) return rtnValue;

	mov	ebx, DWORD PTR _pPlot$[esp]
	push	ebp
	mov	ebp, ecx
	test	ebx, ebx
	jne	SHORT $LN6@ComputeSci
	pop	ebp
	xor	eax, eax
	pop	ebx

; 958  : }

	ret	8
$LN6@ComputeSci:
	push	esi

; 926  : 
; 927  : 	// From tile yield
; 928  : 	if(pPlayer == NULL)

	mov	esi, DWORD PTR _pPlayer$[esp+8]
	push	edi
	test	esi, esi
	jne	SHORT $LN5@ComputeSci

; 929  : 	{
; 930  : 		rtnValue += pPlot->calculateNatureYield(YIELD_SCIENCE, NO_TEAM);

	push	esi
	push	-1

; 931  : 	}
; 932  : 	else

	jmp	SHORT $LN27@ComputeSci
$LN5@ComputeSci:

; 933  : 	{
; 934  : 		rtnValue += pPlot->calculateNatureYield(YIELD_SCIENCE, pPlayer->getTeam());

	mov	eax, DWORD PTR [esi+44]
	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN13@ComputeSci
	mov	ecx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax*4]
	jmp	SHORT $LN14@ComputeSci
$LN13@ComputeSci:
	or	eax, -1
$LN14@ComputeSci:
	push	0
	push	eax
$LN27@ComputeSci:
	push	3
	mov	ecx, ebx
	call	?calculateNatureYield@CvPlot@@QBEHW4YieldTypes@@W4TeamTypes@@_N@Z ; CvPlot::calculateNatureYield
	mov	edi, eax

; 935  : 	}
; 936  : 
; 937  : 	// From resource
; 938  : 	TeamTypes eTeam = NO_TEAM;

	or	eax, -1

; 939  : 	if(pPlayer != NULL)

	test	esi, esi
	je	SHORT $LN23@ComputeSci

; 940  : 	{
; 941  : 		eTeam = pPlayer->getTeam();

	mov	eax, DWORD PTR [esi+44]
	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN22@ComputeSci
	mov	ecx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax*4]
	jmp	SHORT $LN23@ComputeSci
$LN22@ComputeSci:
	or	eax, -1
$LN23@ComputeSci:

; 942  : 	}
; 943  : 
; 944  : 	ResourceTypes eResource;
; 945  : 	eResource = pPlot->getResourceType(eTeam);

	push	eax
	mov	ecx, ebx
	call	?getResourceType@CvPlot@@QBE?AW4ResourceTypes@@W4TeamTypes@@@Z ; CvPlot::getResourceType
	mov	esi, eax

; 946  : 	if(eResource != NO_RESOURCE)

	cmp	esi, -1
	je	SHORT $LN1@ComputeSci

; 947  : 	{
; 948  : 		rtnValue += GC.getResourceInfo(eResource)->getYieldChange(YIELD_SCIENCE);

	push	3
	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z ; CvGlobals::getResourceInfo
	mov	ecx, eax
	call	?getYieldChange@CvResourceInfo@@QBEHH@Z	; CvResourceInfo::getYieldChange

; 949  : 
; 950  : 		CvImprovementEntry* pImprovement = GC.GetGameImprovements()->GetImprovementForResource(eResource);

	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	add	edi, eax
	call	?GetGameImprovements@CvGlobals@@QBEPAVCvImprovementXMLEntries@@XZ ; CvGlobals::GetGameImprovements
	mov	ecx, eax
	call	?GetImprovementForResource@CvImprovementXMLEntries@@QAEPAVCvImprovementEntry@@H@Z ; CvImprovementXMLEntries::GetImprovementForResource

; 951  : 		if(pImprovement)

	test	eax, eax
	je	SHORT $LN1@ComputeSci

; 952  : 		{
; 953  : 			rtnValue += pImprovement->GetImprovementResourceYield(eResource, YIELD_SCIENCE);

	push	3
	push	esi
	mov	ecx, eax
	call	?GetImprovementResourceYield@CvImprovementEntry@@QBEHHH@Z ; CvImprovementEntry::GetImprovementResourceYield
	add	edi, eax
$LN1@ComputeSci:

; 954  : 		}
; 955  : 	}
; 956  : 
; 957  : 	return rtnValue * m_iFlavorMultiplier[YIELD_SCIENCE];

	mov	eax, DWORD PTR [ebp+16]
	imul	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 958  : }

	ret	8
?ComputeScienceValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z ENDP ; CvCitySiteEvaluator::ComputeScienceValue
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?ComputeFaithValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z
_TEXT	SEGMENT
_pPlot$ = 8						; size = 4
_pPlayer$ = 12						; size = 4
?ComputeFaithValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z PROC ; CvCitySiteEvaluator::ComputeFaithValue, COMDAT
; _this$ = ecx

; 962  : {

	push	ebx

; 963  : 	int rtnValue = 0;
; 964  : 
; 965  : 	CvAssert(pPlot);
; 966  : 	if(!pPlot) return rtnValue;

	mov	ebx, DWORD PTR _pPlot$[esp]
	push	ebp
	mov	ebp, ecx
	test	ebx, ebx
	jne	SHORT $LN6@ComputeFai
	pop	ebp
	xor	eax, eax
	pop	ebx

; 999  : }

	ret	8
$LN6@ComputeFai:
	push	esi

; 967  : 
; 968  : 	// From tile yield
; 969  : 	if(pPlayer == NULL)

	mov	esi, DWORD PTR _pPlayer$[esp+8]
	push	edi
	test	esi, esi
	jne	SHORT $LN5@ComputeFai

; 970  : 	{
; 971  : 		rtnValue += pPlot->calculateNatureYield(YIELD_FAITH, NO_TEAM);

	push	esi
	push	-1

; 972  : 	}
; 973  : 	else

	jmp	SHORT $LN27@ComputeFai
$LN5@ComputeFai:

; 974  : 	{
; 975  : 		rtnValue += pPlot->calculateNatureYield(YIELD_FAITH, pPlayer->getTeam());

	mov	eax, DWORD PTR [esi+44]
	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN13@ComputeFai
	mov	ecx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax*4]
	jmp	SHORT $LN14@ComputeFai
$LN13@ComputeFai:
	or	eax, -1
$LN14@ComputeFai:
	push	0
	push	eax
$LN27@ComputeFai:
	push	5
	mov	ecx, ebx
	call	?calculateNatureYield@CvPlot@@QBEHW4YieldTypes@@W4TeamTypes@@_N@Z ; CvPlot::calculateNatureYield
	mov	edi, eax

; 976  : 	}
; 977  : 
; 978  : 	// From resource
; 979  : 	TeamTypes eTeam = NO_TEAM;

	or	eax, -1

; 980  : 	if(pPlayer != NULL)

	test	esi, esi
	je	SHORT $LN23@ComputeFai

; 981  : 	{
; 982  : 		eTeam = pPlayer->getTeam();

	mov	eax, DWORD PTR [esi+44]
	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN22@ComputeFai
	mov	ecx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax*4]
	jmp	SHORT $LN23@ComputeFai
$LN22@ComputeFai:
	or	eax, -1
$LN23@ComputeFai:

; 983  : 	}
; 984  : 
; 985  : 	ResourceTypes eResource;
; 986  : 	eResource = pPlot->getResourceType(eTeam);

	push	eax
	mov	ecx, ebx
	call	?getResourceType@CvPlot@@QBE?AW4ResourceTypes@@W4TeamTypes@@@Z ; CvPlot::getResourceType
	mov	esi, eax

; 987  : 	if(eResource != NO_RESOURCE)

	cmp	esi, -1
	je	SHORT $LN1@ComputeFai

; 988  : 	{
; 989  : 		rtnValue += GC.getResourceInfo(eResource)->getYieldChange(YIELD_FAITH);

	push	5
	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z ; CvGlobals::getResourceInfo
	mov	ecx, eax
	call	?getYieldChange@CvResourceInfo@@QBEHH@Z	; CvResourceInfo::getYieldChange

; 990  : 
; 991  : 		CvImprovementEntry* pImprovement = GC.GetGameImprovements()->GetImprovementForResource(eResource);

	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	add	edi, eax
	call	?GetGameImprovements@CvGlobals@@QBEPAVCvImprovementXMLEntries@@XZ ; CvGlobals::GetGameImprovements
	mov	ecx, eax
	call	?GetImprovementForResource@CvImprovementXMLEntries@@QAEPAVCvImprovementEntry@@H@Z ; CvImprovementXMLEntries::GetImprovementForResource

; 992  : 		if(pImprovement)

	test	eax, eax
	je	SHORT $LN1@ComputeFai

; 993  : 		{
; 994  : 			rtnValue += pImprovement->GetImprovementResourceYield(eResource, YIELD_FAITH);

	push	5
	push	esi
	mov	ecx, eax
	call	?GetImprovementResourceYield@CvImprovementEntry@@QBEHHH@Z ; CvImprovementEntry::GetImprovementResourceYield
	add	edi, eax
$LN1@ComputeFai:

; 995  : 		}
; 996  : 	}
; 997  : 
; 998  : 	return rtnValue * m_iFlavorMultiplier[YIELD_FAITH];

	mov	eax, DWORD PTR [ebp+24]
	imul	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 999  : }

	ret	8
?ComputeFaithValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z ENDP ; CvCitySiteEvaluator::ComputeFaithValue
_TEXT	ENDS
EXTRN	?getNumResource@CvPlot@@QBEHXZ:PROC		; CvPlot::getNumResource
EXTRN	?getResourceUsage@CvResourceInfo@@QBE?AW4ResourceUsageTypes@@XZ:PROC ; CvResourceInfo::getResourceUsage
; Function compile flags: /Ogtpy
;	COMDAT ?ComputeTradeableResourceValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pPlot$ = 8						; size = 4
_pPlayer$ = 12						; size = 4
?ComputeTradeableResourceValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z PROC ; CvCitySiteEvaluator::ComputeTradeableResourceValue, COMDAT
; _this$ = ecx

; 1004 : {

	push	ecx
	push	ebp

; 1005 : 	int rtnValue = 0;
; 1006 : 
; 1007 : 	CvAssert(pPlot);
; 1008 : 	if(!pPlot) return rtnValue;

	mov	ebp, DWORD PTR _pPlot$[esp+4]
	push	esi
	xor	esi, esi
	mov	DWORD PTR _this$[esp+12], ecx
	test	ebp, ebp
	jne	SHORT $LN8@ComputeTra
$LN20@ComputeTra:
	pop	esi
	xor	eax, eax
	pop	ebp

; 1044 : }

	pop	ecx
	ret	8
$LN8@ComputeTra:

; 1009 : 
; 1010 : 	// If we already own this Tile then we already have access to the Strategic Resource
; 1011 : 	if(pPlot->isOwned())

	mov	ecx, ebp
	call	?isOwned@CvPlot@@QBE_NXZ		; CvPlot::isOwned
	test	al, al

; 1012 : 	{
; 1013 : 		return rtnValue;

	jne	SHORT $LN20@ComputeTra
	push	ebx

; 1014 : 	}
; 1015 : 
; 1016 : 	TeamTypes eTeam = NO_TEAM;
; 1017 : 	if(pPlayer != NULL)

	mov	ebx, DWORD PTR _pPlayer$[esp+12]
	or	eax, -1
	push	edi
	test	ebx, ebx
	je	SHORT $LN16@ComputeTra

; 1018 : 	{
; 1019 : 		eTeam = pPlayer->getTeam();

	mov	eax, DWORD PTR [ebx+44]
	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN15@ComputeTra
	mov	ecx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax*4]
	jmp	SHORT $LN16@ComputeTra
$LN15@ComputeTra:
	or	eax, -1
$LN16@ComputeTra:

; 1020 : 	}
; 1021 : 
; 1022 : 	ResourceTypes eResource;
; 1023 : 	eResource = pPlot->getResourceType(eTeam);

	push	eax
	mov	ecx, ebp
	call	?getResourceType@CvPlot@@QBE?AW4ResourceTypes@@W4TeamTypes@@@Z ; CvPlot::getResourceType
	mov	edi, eax

; 1024 : 
; 1025 : 	if(eResource != NO_RESOURCE)

	cmp	edi, -1
	je	SHORT $LN1@ComputeTra

; 1026 : 	{
; 1027 : 		ResourceUsageTypes eResourceUsage = GC.getResourceInfo(eResource)->getResourceUsage();

	push	edi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z ; CvGlobals::getResourceInfo
	mov	ecx, eax
	call	?getResourceUsage@CvResourceInfo@@QBE?AW4ResourceUsageTypes@@XZ ; CvResourceInfo::getResourceUsage

; 1028 : 
; 1029 : 		// Multiply number of tradeable resources by flavor value
; 1030 : 		if(eResourceUsage == RESOURCEUSAGE_LUXURY || eResourceUsage == RESOURCEUSAGE_STRATEGIC)

	cmp	eax, 2
	je	SHORT $LN3@ComputeTra
	cmp	eax, 1
	jne	SHORT $LN1@ComputeTra
$LN3@ComputeTra:

; 1031 : 		{
; 1032 : 			rtnValue += pPlot->getNumResource() * m_iFlavorMultiplier[SITE_EVALUATION_RESOURCES];

	mov	ecx, ebp
	call	?getNumResource@CvPlot@@QBEHXZ		; CvPlot::getNumResource
	mov	esi, eax
	mov	eax, DWORD PTR _this$[esp+20]
	imul	esi, DWORD PTR [eax+32]

; 1033 : 
; 1034 : 			if(pPlayer)

	test	ebx, ebx
	je	SHORT $LN1@ComputeTra

; 1035 : 			{
; 1036 : 				// If we don't have this resource yet, increase it's value
; 1037 : 				if(pPlayer->getNumResourceTotal(eResource) == 0)

	push	1
	push	edi
	mov	ecx, ebx
	call	?getNumResourceTotal@CvPlayer@@QBEHW4ResourceTypes@@_N@Z ; CvPlayer::getNumResourceTotal
	test	eax, eax
	jne	SHORT $LN1@ComputeTra

; 1038 : 					rtnValue *= 3;

	lea	esi, DWORD PTR [esi+esi*2]
$LN1@ComputeTra:
	pop	edi
	pop	ebx

; 1039 : 			}
; 1040 : 		}
; 1041 : 	}
; 1042 : 
; 1043 : 	return rtnValue;

	mov	eax, esi
	pop	esi
	pop	ebp

; 1044 : }

	pop	ecx
	ret	8
?ComputeTradeableResourceValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@@Z ENDP ; CvCitySiteEvaluator::ComputeTradeableResourceValue
_TEXT	ENDS
EXTRN	?getStartingLocationWeight@CvFeatureInfo@@QBEHXZ:PROC ; CvFeatureInfo::getStartingLocationWeight
; Function compile flags: /Ogtpy
;	COMDAT ?ComputeStrategicValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@H@Z
_TEXT	SEGMENT
_pPlot$ = 8						; size = 4
_pPlayer$ = 12						; size = 4
_iPlotsFromCity$ = 16					; size = 4
?ComputeStrategicValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@H@Z PROC ; CvCitySiteEvaluator::ComputeStrategicValue, COMDAT
; _this$ = ecx

; 1048 : {

	push	ebx
	push	ebp
	push	esi

; 1049 : 	int rtnValue = 0;
; 1050 : 
; 1051 : 	CvAssert(pPlot);
; 1052 : 	if(!pPlot) return rtnValue;

	mov	esi, DWORD PTR _pPlot$[esp+8]
	xor	ebx, ebx
	mov	ebp, ecx
	test	esi, esi
	jne	SHORT $LN7@ComputeStr
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx

; 1088 : 
; 1089 : 	return rtnValue;
; 1090 : }

	ret	12					; 0000000cH
$LN7@ComputeStr:
	push	edi

; 1053 : 
; 1054 : 	// Possible chokepoint if impassable terrain and exactly 2 plots from city
; 1055 : 	if(iPlotsFromCity == 2 && (pPlot->isImpassable() || pPlot->isMountain()))

	mov	edi, DWORD PTR _iPlotsFromCity$[esp+12]
	cmp	edi, 2
	jne	SHORT $LN6@ComputeStr
	test	BYTE PTR [esi+462], 128			; 00000080H
	jne	SHORT $LN5@ComputeStr
	cmp	BYTE PTR [esi+5], bl
	jne	SHORT $LN35@ComputeStr
$LN5@ComputeStr:

; 1056 : 	{
; 1057 : 		rtnValue += /*5*/ GC.getCHOKEPOINT_STRATEGIC_VALUE();

	mov	ebx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7268

; 1058 : 	}
; 1059 : 
; 1060 : 	// Hills in first ring are useful for defense and production
; 1061 : 	if(iPlotsFromCity == 1 && pPlot->isHills())

	jmp	SHORT $LN35@ComputeStr
$LN6@ComputeStr:
	cmp	edi, 1
	jne	SHORT $LN35@ComputeStr
	cmp	BYTE PTR [esi+5], 1
	jne	SHORT $LN35@ComputeStr

; 1062 : 	{
; 1063 : 		rtnValue += /*3*/ GC.getHILL_STRATEGIC_VALUE();

	mov	ebx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7272
$LN35@ComputeStr:

; 1064 : 	}
; 1065 : 
; 1066 : 	// Some Features are less attractive to settle in, (e.g. Jungles, since it takes a while before you can clear them and they slow down movement)
; 1067 : 	if(pPlot->getFeatureType() != NO_FEATURE)

	mov	al, BYTE PTR [esi+432]
	cmp	al, -1
	je	SHORT $LN36@ComputeStr

; 1068 : 	{
; 1069 : 		int iWeight = GC.getFeatureInfo(pPlot->getFeatureType())->getStartingLocationWeight();

	movsx	eax, al
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getFeatureInfo@CvGlobals@@QAEPAVCvFeatureInfo@@W4FeatureTypes@@@Z ; CvGlobals::getFeatureInfo
	mov	ecx, eax
	call	?getStartingLocationWeight@CvFeatureInfo@@QBEHXZ ; CvFeatureInfo::getStartingLocationWeight

; 1070 : 		if(iWeight != 0 && iPlotsFromCity == 1)

	test	eax, eax
	je	SHORT $LN36@ComputeStr
	cmp	edi, 1
	jne	SHORT $LN36@ComputeStr

; 1071 : 		{
; 1072 : 			rtnValue += iWeight;

	add	ebx, eax
$LN36@ComputeStr:

; 1073 : 		}
; 1074 : 	}
; 1075 : 
; 1076 : 	// Nearby City
; 1077 : 	if(pPlayer != NULL && pPlot->isCity())

	cmp	DWORD PTR _pPlayer$[esp+12], 0
	pop	edi
	je	SHORT $LN1@ComputeStr
	mov	eax, DWORD PTR [esi+104]
	test	eax, eax
	jl	SHORT $LN1@ComputeStr
	cmp	eax, 64					; 00000040H
	jge	SHORT $LN1@ComputeStr
	mov	ecx, DWORD PTR [esi+108]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	ecx
	mov	ecx, eax
	call	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z	; CvPlayer::getCity
	test	eax, eax
	setne	al
	test	al, al
	je	SHORT $LN1@ComputeStr

; 1078 : 	{
; 1079 : //		if (pPlot->getOwner() == pPlayer->getID())
; 1080 : 		{
; 1081 : 			rtnValue += /*-1000*/ GC.getALREADY_OWNED_STRATEGIC_VALUE();

	add	ebx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7276
$LN1@ComputeStr:

; 1082 : 		}
; 1083 : 	}
; 1084 : 
; 1085 : 	// POSSIBLE FUTURE: Is there any way for us to know to grab land between us and another major civ?
; 1086 : 
; 1087 : 	rtnValue *= m_iFlavorMultiplier[SITE_EVALUATION_STRATEGIC];

	mov	eax, DWORD PTR [ebp+36]
	pop	esi
	imul	eax, ebx
	pop	ebp
	pop	ebx

; 1088 : 
; 1089 : 	return rtnValue;
; 1090 : }

	ret	12					; 0000000cH
?ComputeStrategicValue@CvCitySiteEvaluator@@MAEHPAVCvPlot@@PAVCvPlayer@@H@Z ENDP ; CvCitySiteEvaluator::ComputeStrategicValue
_TEXT	ENDS
EXTRN	?WillGetUniqueLuxury@CvPlayerTraits@@QBE_NPAVCvArea@@@Z:PROC ; CvPlayerTraits::WillGetUniqueLuxury
EXTRN	?getCitiesPerPlayer@CvArea@@QBEHW4PlayerTypes@@@Z:PROC ; CvArea::getCitiesPerPlayer
EXTRN	?area@CvPlot@@QBEPAVCvArea@@XZ:PROC		; CvPlot::area
; Function compile flags: /Ogtpy
;	COMDAT ?PlotFoundValue@CvSiteEvaluatorForSettler@@UAEHPAVCvPlot@@PAVCvPlayer@@W4YieldTypes@@_N@Z
_TEXT	SEGMENT
_bIsCoastal$ = 8					; size = 1
_pPlot$ = 8						; size = 4
_pPlayer$ = 12						; size = 4
_eYield$ = 16						; size = 4
_bCoastOnly$ = 20					; size = 1
?PlotFoundValue@CvSiteEvaluatorForSettler@@UAEHPAVCvPlot@@PAVCvPlayer@@W4YieldTypes@@_N@Z PROC ; CvSiteEvaluatorForSettler::PlotFoundValue, COMDAT
; _this$ = ecx

; 1107 : {

	push	ebx
	push	esi

; 1108 : 	CvAssert(pPlot);
; 1109 : 	if(!pPlot) return 0;

	mov	esi, DWORD PTR _pPlot$[esp+4]
	mov	ebx, ecx
	test	esi, esi
	jne	SHORT $LN7@PlotFoundV@2
	pop	esi
	xor	eax, eax
	pop	ebx

; 1144 : 		}
; 1145 : 	}
; 1146 : }

	ret	16					; 00000010H
$LN7@PlotFoundV@2:

; 1110 : 
; 1111 : 	if(!CanFound(pPlot, pPlayer, true))

	mov	eax, DWORD PTR [ebx]
	mov	edx, DWORD PTR [eax+8]
	push	edi
	mov	edi, DWORD PTR _pPlayer$[esp+8]
	push	1
	push	edi
	push	esi
	call	edx
	test	al, al
	jne	SHORT $LN6@PlotFoundV@2
	pop	edi
	pop	esi

; 1112 : 	{
; 1113 : 		return 0;

	xor	eax, eax
	pop	ebx

; 1144 : 		}
; 1145 : 	}
; 1146 : }

	ret	16					; 00000010H
$LN6@PlotFoundV@2:

; 1114 : 	}
; 1115 : 
; 1116 : 	// Is there any reason this site doesn't work for a settler?
; 1117 : 	//
; 1118 : 	// First must be on coast if settling a new continent
; 1119 : 	bool bIsCoastal = pPlot->isCoastalLand(GC.getMIN_WATER_SIZE_FOR_OCEAN());

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+6876
	push	ebp
	push	eax
	mov	ecx, esi
	call	?isCoastalLand@CvPlot@@QBE_NH@Z		; CvPlot::isCoastalLand

; 1120 : 	CvArea* pArea = pPlot->area();

	mov	ecx, esi
	mov	BYTE PTR _bIsCoastal$[esp+12], al
	call	?area@CvPlot@@QBEPAVCvArea@@XZ		; CvPlot::area
	mov	ebp, eax

; 1121 : 	CvAssert(pArea);
; 1122 : 	if(!pArea) return 0;

	test	ebp, ebp
	je	SHORT $LN18@PlotFoundV@2

; 1123 : 	int iNumAreaCities = pArea->getCitiesPerPlayer(pPlayer->GetID());

	mov	eax, DWORD PTR [edi+44]
	push	eax
	mov	ecx, ebp
	call	?getCitiesPerPlayer@CvArea@@QBEHW4PlayerTypes@@@Z ; CvArea::getCitiesPerPlayer

; 1124 : 	if(bCoastOnly && !bIsCoastal && iNumAreaCities == 0)

	cmp	BYTE PTR _bCoastOnly$[esp+12], 0
	je	SHORT $LN4@PlotFoundV@2
	cmp	BYTE PTR _bIsCoastal$[esp+12], 0
	jne	SHORT $LN4@PlotFoundV@2
	test	eax, eax
	jne	SHORT $LN4@PlotFoundV@2
$LN18@PlotFoundV@2:
	pop	ebp
	pop	edi
	pop	esi

; 1125 : 	{
; 1126 : 		return 0;

	xor	eax, eax
	pop	ebx

; 1144 : 		}
; 1145 : 	}
; 1146 : }

	ret	16					; 00000010H
$LN4@PlotFoundV@2:

; 1127 : 	}
; 1128 : 
; 1129 : 	// Seems okay for a settler, use base class to determine exact value
; 1130 : 	else
; 1131 : 	{
; 1132 : 		// if the civ gets a benefit from settling on a new continent (ie: Indonesia)
; 1133 : 		// double the fertility of that plot
; 1134 : 		int iLuxuryModifier = 0;
; 1135 : 		//if (pPlayer->GetPlayerTraits()->WillGetUniqueLuxury(pArea))
; 1136 : 		if (pPlayer->GetPlayerTraits()->WillGetUniqueLuxury(pArea) && bIsCoastal) // NQMP GJS - Spice Islanders requires coast

	push	ebp
	mov	ecx, edi
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	ecx, eax
	call	?WillGetUniqueLuxury@CvPlayerTraits@@QBE_NPAVCvArea@@@Z ; CvPlayerTraits::WillGetUniqueLuxury
	test	al, al
	je	SHORT $LN2@PlotFoundV@2
	cmp	BYTE PTR _bIsCoastal$[esp+12], 0
	je	SHORT $LN2@PlotFoundV@2

; 1137 : 		{
; 1138 : 			iLuxuryModifier = CvCitySiteEvaluator::PlotFoundValue(pPlot, pPlayer, eYield) * 2;

	mov	ecx, DWORD PTR _eYield$[esp+12]
	push	1
	push	ecx
	push	edi
	push	esi
	mov	ecx, ebx
	call	?PlotFoundValue@CvCitySiteEvaluator@@UAEHPAVCvPlot@@PAVCvPlayer@@W4YieldTypes@@_N@Z ; CvCitySiteEvaluator::PlotFoundValue
	pop	ebp
	pop	edi
	pop	esi
	add	eax, eax
	pop	ebx

; 1144 : 		}
; 1145 : 	}
; 1146 : }

	ret	16					; 00000010H
$LN2@PlotFoundV@2:

; 1139 : 			return iLuxuryModifier;
; 1140 : 		}
; 1141 : 		else
; 1142 : 		{
; 1143 : 			return CvCitySiteEvaluator::PlotFoundValue(pPlot, pPlayer, eYield);

	mov	edx, DWORD PTR _eYield$[esp+12]
	push	1
	push	edx
	push	edi
	push	esi
	mov	ecx, ebx
	call	?PlotFoundValue@CvCitySiteEvaluator@@UAEHPAVCvPlot@@PAVCvPlayer@@W4YieldTypes@@_N@Z ; CvCitySiteEvaluator::PlotFoundValue
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx

; 1144 : 		}
; 1145 : 	}
; 1146 : }

	ret	16					; 00000010H
?PlotFoundValue@CvSiteEvaluatorForSettler@@UAEHPAVCvPlot@@PAVCvPlayer@@W4YieldTypes@@_N@Z ENDP ; CvSiteEvaluatorForSettler::PlotFoundValue
_TEXT	ENDS
EXTRN	?plotCity@@YAPAVCvPlot@@HHH@Z:PROC		; plotCity
EXTRN	?isGoody@CvPlot@@QBE_NW4TeamTypes@@@Z:PROC	; CvPlot::isGoody
; Function compile flags: /Ogtpy
;	COMDAT ?PlotFoundValue@CvSiteEvaluatorForStart@@UAEHPAVCvPlot@@PAVCvPlayer@@W4YieldTypes@@_N@Z
_TEXT	SEGMENT
_iI$ = -16						; size = 4
_iCelticForestCount$ = -12				; size = 4
_iDistance$223901 = -8					; size = 4
$T225721 = -4						; size = 4
$T225717 = -4						; size = 4
$T225713 = -4						; size = 4
$T225709 = -4						; size = 4
$T225705 = -4						; size = 4
$T225701 = -4						; size = 4
$T225697 = -4						; size = 4
$T225693 = -4						; size = 4
_pPlot$ = 8						; size = 4
_pPlayer$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 1
?PlotFoundValue@CvSiteEvaluatorForStart@@UAEHPAVCvPlot@@PAVCvPlayer@@W4YieldTypes@@_N@Z PROC ; CvSiteEvaluatorForStart::PlotFoundValue, COMDAT
; _this$ = ecx

; 1173 : {

	sub	esp, 16					; 00000010H
	push	ebx
	push	ebp

; 1174 : 	int rtnValue = 0;
; 1175 : 	int iI;
; 1176 : 	CvPlot* pLoopPlot(NULL);
; 1177 : 	int iCelticForestCount = 0;
; 1178 : 
; 1179 : 	CvAssert(pPlot);
; 1180 : 	if(!pPlot) return rtnValue;

	mov	ebp, DWORD PTR _pPlot$[esp+20]
	xor	ebx, ebx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR _iCelticForestCount$[esp+28], ebx
	cmp	ebp, ebx
	jne	SHORT $LN20@PlotFoundV@3
$LN74@PlotFoundV@3:
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx

; 1266 : }

	add	esp, 16					; 00000010H
	ret	16					; 00000010H
$LN20@PlotFoundV@3:

; 1181 : 
; 1182 : 	if(!CanFound(pPlot, pPlayer, false))

	mov	ecx, DWORD PTR _pPlayer$[esp+24]
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+8]
	push	ebx
	push	ecx
	push	ebp
	mov	ecx, esi
	call	edx
	test	al, al

; 1183 : 	{
; 1184 : 		return rtnValue;

	je	SHORT $LN74@PlotFoundV@3

; 1185 : 	}
; 1186 : 
; 1187 : 	// Is there any reason this site doesn't work for a start location?
; 1188 : 	//
; 1189 : 	// Not on top of a goody hut
; 1190 : 	if(pPlot->isGoody())

	push	-1
	mov	ecx, ebp
	call	?isGoody@CvPlot@@QBE_NW4TeamTypes@@@Z	; CvPlot::isGoody
	test	al, al

; 1191 : 	{
; 1192 : 		return 0;

	jne	SHORT $LN74@PlotFoundV@3

; 1193 : 	}
; 1194 : 
; 1195 : 	// We have our own special method of scoring, so don't call the base class for that (like settler version does)
; 1196 : 	for(iI = 0; iI < NUM_CITY_PLOTS; iI++)

	mov	DWORD PTR _iI$[esp+28], ebx
	push	edi
	npad	9
$LL71@PlotFoundV@3:

; 1197 : 	{
; 1198 : 		pLoopPlot = plotCity(pPlot->getX(), pPlot->getY(), iI);

	movsx	eax, WORD PTR [ebp+2]
	mov	edx, DWORD PTR _iI$[esp+32]
	movsx	ecx, WORD PTR [ebp]
	push	edx
	push	eax
	push	ecx
	call	?plotCity@@YAPAVCvPlot@@HHH@Z		; plotCity
	mov	edi, eax
	add	esp, 12					; 0000000cH

; 1199 : 
; 1200 : 		// Too close to map edge?
; 1201 : 		if(pLoopPlot == NULL)

	test	edi, edi
	je	$LN66@PlotFoundV@3

; 1204 : 		}
; 1205 : 		else
; 1206 : 		{
; 1207 : 			int iDistance = plotDistance(pPlot->getX(), pPlot->getY(), pLoopPlot->getX(), pLoopPlot->getY());

	movsx	eax, WORD PTR [edi+2]
	movsx	ecx, WORD PTR [edi]
	movsx	edx, WORD PTR [ebp+2]
	push	eax
	movsx	eax, WORD PTR [ebp]
	push	ecx
	push	edx
	push	eax
	call	?plotDistance@@YAHHHHH@Z		; plotDistance
	add	esp, 16					; 00000010H

; 1208 : 			CvAssert(iDistance <= NUM_CITY_RINGS);
; 1209 : 			if(iDistance > NUM_CITY_RINGS) continue;

	cmp	eax, 3
	mov	DWORD PTR _iDistance$223901[esp+32], eax
	jg	$LN16@PlotFoundV@3

; 1210 : 			int iRingModifier = m_iRingModifier[iDistance];

	mov	ebp, DWORD PTR [esi+eax*4+40]

; 1211 : 
; 1212 : 			// Skip the city plot itself for now
; 1213 : 			if(iDistance != 0)

	test	eax, eax
	je	$LN11@PlotFoundV@3

; 1214 : 			{
; 1215 : 				rtnValue += iRingModifier * ComputeFoodValue(pLoopPlot, pPlayer) * /*6*/ GC.getSTART_AREA_FOOD_MULTIPLIER();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7160
	mov	eax, DWORD PTR _pPlayer$[esp+28]
	mov	edx, DWORD PTR [esi]
	mov	edx, DWORD PTR [edx+24]
	push	eax
	mov	DWORD PTR $T225693[esp+36], ecx
	push	edi
	mov	ecx, esi
	call	edx
	imul	eax, DWORD PTR $T225693[esp+32]

; 1216 : 				rtnValue += iRingModifier * ComputeHappinessValue(pLoopPlot, pPlayer) * /*12*/ GC.getSTART_AREA_HAPPINESS_MULTIPLIER();

	mov	edx, DWORD PTR [esi]
	imul	eax, ebp
	mov	edx, DWORD PTR [edx+28]
	add	ebx, eax
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7164
	mov	DWORD PTR $T225697[esp+32], eax
	mov	eax, DWORD PTR _pPlayer$[esp+28]
	push	eax
	push	edi
	mov	ecx, esi
	call	edx
	imul	eax, DWORD PTR $T225697[esp+32]

; 1217 : 				rtnValue += iRingModifier * ComputeProductionValue(pLoopPlot, pPlayer) * /*8*/ GC.getSTART_AREA_PRODUCTION_MULTIPLIER();

	mov	edx, DWORD PTR [esi]
	imul	eax, ebp
	mov	edx, DWORD PTR [edx+32]
	add	ebx, eax
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7168
	mov	DWORD PTR $T225701[esp+32], eax
	mov	eax, DWORD PTR _pPlayer$[esp+28]
	push	eax
	push	edi
	mov	ecx, esi
	call	edx
	imul	eax, DWORD PTR $T225701[esp+32]

; 1218 : 				rtnValue += iRingModifier * ComputeGoldValue(pLoopPlot, pPlayer) * /*2*/ GC.getSTART_AREA_GOLD_MULTIPLIER();

	mov	edx, DWORD PTR [esi]
	imul	eax, ebp
	mov	edx, DWORD PTR [edx+36]
	add	ebx, eax
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7172
	mov	DWORD PTR $T225705[esp+32], eax
	mov	eax, DWORD PTR _pPlayer$[esp+28]
	push	eax
	push	edi
	mov	ecx, esi
	call	edx
	imul	eax, DWORD PTR $T225705[esp+32]

; 1219 : 				rtnValue += iRingModifier * ComputeScienceValue(pLoopPlot, pPlayer) * /*1*/ GC.getSTART_AREA_SCIENCE_MULTIPLIER();

	mov	edx, DWORD PTR [esi]
	imul	eax, ebp
	mov	edx, DWORD PTR [edx+40]
	add	ebx, eax
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7176
	mov	DWORD PTR $T225709[esp+32], eax
	mov	eax, DWORD PTR _pPlayer$[esp+28]
	push	eax
	push	edi
	mov	ecx, esi
	call	edx
	imul	eax, DWORD PTR $T225709[esp+32]

; 1220 : 				rtnValue += iRingModifier * ComputeFaithValue(pLoopPlot, pPlayer) * /*1*/ GC.getSTART_AREA_FAITH_MULTIPLIER();

	mov	edx, DWORD PTR [esi]
	imul	eax, ebp
	mov	edx, DWORD PTR [edx+44]
	add	ebx, eax
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7180
	mov	DWORD PTR $T225713[esp+32], eax
	mov	eax, DWORD PTR _pPlayer$[esp+28]
	push	eax
	push	edi
	mov	ecx, esi
	call	edx
	imul	eax, DWORD PTR $T225713[esp+32]

; 1221 : 				rtnValue += iRingModifier * ComputeTradeableResourceValue(pLoopPlot, pPlayer) * /*1*/ GC.getSTART_AREA_RESOURCE_MULTIPLIER();

	mov	edx, DWORD PTR [esi]
	imul	eax, ebp
	mov	edx, DWORD PTR [edx+48]
	add	ebx, eax
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7184
	mov	DWORD PTR $T225717[esp+32], eax
	mov	eax, DWORD PTR _pPlayer$[esp+28]
	push	eax
	push	edi
	mov	ecx, esi
	call	edx
	imul	eax, DWORD PTR $T225717[esp+32]

; 1222 : 				rtnValue += iRingModifier * ComputeStrategicValue(pLoopPlot, pPlayer, iDistance) * /*1*/ GC.getSTART_AREA_STRATEGIC_MULTIPLIER();

	mov	ecx, DWORD PTR _pPlayer$[esp+28]
	imul	eax, ebp
	mov	edx, DWORD PTR [esi]
	mov	edx, DWORD PTR [edx+52]
	add	ebx, eax
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7188
	mov	DWORD PTR $T225721[esp+32], eax
	mov	eax, DWORD PTR _iDistance$223901[esp+32]
	push	eax
	push	ecx
	push	edi
	mov	ecx, esi
	call	edx
	imul	eax, DWORD PTR $T225721[esp+32]
	imul	eax, ebp
	add	ebx, eax
	mov	eax, DWORD PTR _iDistance$223901[esp+32]
$LN11@PlotFoundV@3:

; 1223 : 			}
; 1224 : 
; 1225 : 			if (pPlayer)

	cmp	DWORD PTR _pPlayer$[esp+28], 0
	je	SHORT $LN70@PlotFoundV@3

; 1226 : 			{
; 1227 : 				if (iDistance == 1 && pLoopPlot->getFeatureType() == FEATURE_FOREST)

	cmp	eax, 1
	jne	SHORT $LN70@PlotFoundV@3
	cmp	BYTE PTR [edi+432], 5
	jne	SHORT $LN70@PlotFoundV@3

; 1228 : 				{
; 1229 : 					if (pLoopPlot->getImprovementType() == NO_IMPROVEMENT && pPlayer->GetPlayerTraits()->IsFaithFromUnimprovedForest())

	mov	ecx, edi
	call	?getImprovementType@CvPlot@@QBE?AW4ImprovementTypes@@XZ ; CvPlot::getImprovementType
	cmp	eax, -1
	jne	SHORT $LN70@PlotFoundV@3
	mov	ecx, DWORD PTR _pPlayer$[esp+28]
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	cmp	BYTE PTR [eax+341], 0
	je	SHORT $LN70@PlotFoundV@3

; 1230 : 					{
; 1231 : 						iCelticForestCount += 1;

	inc	DWORD PTR _iCelticForestCount$[esp+32]
$LN70@PlotFoundV@3:
	mov	ebp, DWORD PTR _pPlot$[esp+28]
$LN16@PlotFoundV@3:

; 1193 : 	}
; 1194 : 
; 1195 : 	// We have our own special method of scoring, so don't call the base class for that (like settler version does)
; 1196 : 	for(iI = 0; iI < NUM_CITY_PLOTS; iI++)

	mov	eax, DWORD PTR _iI$[esp+32]
	inc	eax
	cmp	eax, 37					; 00000025H
	mov	DWORD PTR _iI$[esp+32], eax
	jl	$LL71@PlotFoundV@3

; 1232 : 					}
; 1233 : 				}
; 1234 : 			}
; 1235 : 		}
; 1236 : 	}
; 1237 : 
; 1238 : 	if (iCelticForestCount >= 3)

	mov	eax, DWORD PTR _iCelticForestCount$[esp+32]
	cmp	eax, 3
	jl	SHORT $LN7@PlotFoundV@3

; 1239 : 	{
; 1240 : 		rtnValue += 2 * 1000 * m_iFlavorMultiplier[YIELD_FAITH];

	mov	eax, DWORD PTR [esi+24]
	imul	eax, 2000				; 000007d0H
	add	ebx, eax
	jmp	SHORT $LN5@PlotFoundV@3
$LN66@PlotFoundV@3:
	pop	edi
	pop	esi
	pop	ebp

; 1202 : 		{
; 1203 : 			return 0;

	xor	eax, eax
	pop	ebx

; 1266 : }

	add	esp, 16					; 00000010H
	ret	16					; 00000010H
$LN7@PlotFoundV@3:

; 1241 : 	}
; 1242 : 	else if (iCelticForestCount >= 1)

	cmp	eax, 1
	jl	SHORT $LN5@PlotFoundV@3

; 1243 : 	{
; 1244 : 		rtnValue += 1 * 1000 * m_iFlavorMultiplier[YIELD_FAITH];

	mov	ecx, DWORD PTR [esi+24]
	imul	ecx, 1000				; 000003e8H
	add	ebx, ecx
$LN5@PlotFoundV@3:

; 1245 : 	}
; 1246 : 
; 1247 : 	if(rtnValue < 0) rtnValue = 0;

	test	ebx, ebx
	jge	SHORT $LN4@PlotFoundV@3
	xor	ebx, ebx
$LN4@PlotFoundV@3:

; 1248 : 
; 1249 : 	// Finally, look at the city plot itself and use it as an overall multiplier
; 1250 : 	if(pPlot->getResourceType() != NO_RESOURCE)

	push	-1
	mov	ecx, ebp
	call	?getResourceType@CvPlot@@QBE?AW4ResourceTypes@@W4TeamTypes@@@Z ; CvPlot::getResourceType
	cmp	eax, -1
	je	SHORT $LN3@PlotFoundV@3

; 1251 : 	{
; 1252 : 		rtnValue += rtnValue * GC.getBUILD_ON_RESOURCE_PERCENT() / 100;

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7260
	imul	ecx, ebx
	mov	eax, 1374389535				; 51eb851fH
	imul	ecx
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	add	ebx, eax
$LN3@PlotFoundV@3:

; 1253 : 	}
; 1254 : 
; 1255 : 	if(pPlot->isRiver())

	cmp	BYTE PTR [ebp+457], 0
	jle	SHORT $LN2@PlotFoundV@3

; 1256 : 	{
; 1257 : 		rtnValue += rtnValue * GC.getBUILD_ON_RIVER_PERCENT() / 100;

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7264
	imul	ecx, ebx
	mov	eax, 1374389535				; 51eb851fH
	imul	ecx
	sar	edx, 5
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	add	ebx, ecx
$LN2@PlotFoundV@3:

; 1258 : 	}
; 1259 : 
; 1260 : 	if(pPlot->isCoastalLand())

	push	-1
	mov	ecx, ebp
	call	?isCoastalLand@CvPlot@@QBE_NH@Z		; CvPlot::isCoastalLand
	test	al, al
	je	SHORT $LN1@PlotFoundV@3

; 1261 : 	{
; 1262 : 		rtnValue += rtnValue * GC.getSTART_AREA_BUILD_ON_COAST_PERCENT() / 100;

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7192
	imul	ecx, ebx
	mov	eax, 1374389535				; 51eb851fH
	imul	ecx
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	add	ebx, eax
$LN1@PlotFoundV@3:
	pop	edi
	pop	esi
	pop	ebp

; 1263 : 	}
; 1264 : 
; 1265 : 	return rtnValue;

	mov	eax, ebx
	pop	ebx

; 1266 : }

	add	esp, 16					; 00000010H
	ret	16					; 00000010H
?PlotFoundValue@CvSiteEvaluatorForStart@@UAEHPAVCvPlot@@PAVCvPlayer@@W4YieldTypes@@_N@Z ENDP ; CvSiteEvaluatorForStart::PlotFoundValue
_TEXT	ENDS
END
