; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	c:\Users\EnormousApplePie\Documents\GitHub\Lekmod\LEKMOD_DLL\CvGameCoreDLL_Expansion2\CvCityAI.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?NO_QUEST_DATA@CvMinorCivQuest@@2HB		; CvMinorCivQuest::NO_QUEST_DATA
PUBLIC	?NO_TURN@CvMinorCivQuest@@2HB			; CvMinorCivQuest::NO_TURN
CONST	SEGMENT
$SG223287 DB	'FLAVOR_WONDER', 00H
	ORG $+2
$SG223290 DB	'FLAVOR_GREAT_PEOPLE', 00H
$SG223293 DB	'Random roll for whether to continue building wonders', 00H
	ORG $+3
$SG223303 DB	'%03d, ', 00H
	ORG $+1
$SG223305 DB	', ', 00H
	ORG $+1
$SG223308 DB	'%s, WONDER - Started %s, Turns: %d', 00H
CONST	ENDS
;	COMDAT ?NO_TURN@CvMinorCivQuest@@2HB
CONST	SEGMENT
?NO_TURN@CvMinorCivQuest@@2HB DD 0ffffffffH		; CvMinorCivQuest::NO_TURN
CONST	ENDS
;	COMDAT ?NO_QUEST_DATA@CvMinorCivQuest@@2HB
CONST	SEGMENT
?NO_QUEST_DATA@CvMinorCivQuest@@2HB DD 0ffffffffH	; CvMinorCivQuest::NO_QUEST_DATA
CONST	ENDS
PUBLIC	?GetNextWonderDesired@CvCitySpecializationAI@@QBE?AW4BuildingTypes@@XZ ; CvCitySpecializationAI::GetNextWonderDesired
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvcityspecializationai.h
;	COMDAT ?GetNextWonderDesired@CvCitySpecializationAI@@QBE?AW4BuildingTypes@@XZ
_TEXT	SEGMENT
?GetNextWonderDesired@CvCitySpecializationAI@@QBE?AW4BuildingTypes@@XZ PROC ; CvCitySpecializationAI::GetNextWonderDesired, COMDAT
; _this$ = ecx

; 146  : 		return m_eNextWonderDesired;

	mov	eax, DWORD PTR [ecx+196]

; 147  : 	};

	ret	0
?GetNextWonderDesired@CvCitySpecializationAI@@QBE?AW4BuildingTypes@@XZ ENDP ; CvCitySpecializationAI::GetNextWonderDesired
_TEXT	ENDS
PUBLIC	?AI_init@CvCityAI@@UAEXXZ			; CvCityAI::AI_init
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvcityai.cpp
;	COMDAT ?AI_init@CvCityAI@@UAEXXZ
_TEXT	SEGMENT
?AI_init@CvCityAI@@UAEXXZ PROC				; CvCityAI::AI_init, COMDAT
; _this$ = ecx

; 46   : 	VALIDATE_OBJECT
; 47   : 	AI_reset();

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+8]
	jmp	edx
?AI_init@CvCityAI@@UAEXXZ ENDP				; CvCityAI::AI_init
_TEXT	ENDS
PUBLIC	?AI_uninit@CvCityAI@@QAEXXZ			; CvCityAI::AI_uninit
; Function compile flags: /Ogtpy
;	COMDAT ?AI_uninit@CvCityAI@@QAEXXZ
_TEXT	SEGMENT
?AI_uninit@CvCityAI@@QAEXXZ PROC			; CvCityAI::AI_uninit, COMDAT
; _this$ = ecx

; 52   : 	VALIDATE_OBJECT
; 53   : }

	ret	0
?AI_uninit@CvCityAI@@QAEXXZ ENDP			; CvCityAI::AI_uninit
_TEXT	ENDS
PUBLIC	?AI_reset@CvCityAI@@UAEXXZ			; CvCityAI::AI_reset
; Function compile flags: /Ogtpy
;	COMDAT ?AI_reset@CvCityAI@@UAEXXZ
_TEXT	SEGMENT
?AI_reset@CvCityAI@@UAEXXZ PROC				; CvCityAI::AI_reset, COMDAT
; _this$ = ecx

; 59   : 	VALIDATE_OBJECT
; 60   : 	AI_uninit();
; 61   : 
; 62   : 	m_bChooseProductionDirty = false;

	mov	BYTE PTR [ecx+3108], 0
	lea	eax, DWORD PTR [ecx+3440]
	mov	edx, 80					; 00000050H
	npad	14
$LL3@AI_reset:

; 63   : 
; 64   : 	for(int iI = 0; iI < REALLY_MAX_PLAYERS; iI++)
; 65   : 	{
; 66   : 		m_aiPlayerCloseness[iI] = 0;

	mov	DWORD PTR [eax-320], 0

; 67   : 		m_aiNumPlotsAcquiredByOtherPlayers[iI] = 0;

	mov	DWORD PTR [eax], 0
	add	eax, 4
	sub	edx, 1
	jne	SHORT $LL3@AI_reset

; 68   : 	}
; 69   : 	m_iCachePlayerClosenessTurn = -1;

	or	eax, -1
	mov	DWORD PTR [ecx+3112], eax

; 70   : 	m_iCachePlayerClosenessDistance = -1;

	mov	DWORD PTR [ecx+3116], eax

; 71   : }

	ret	0
?AI_reset@CvCityAI@@UAEXXZ ENDP				; CvCityAI::AI_reset
_TEXT	ENDS
PUBLIC	?AI_isChooseProductionDirty@CvCityAI@@UAE_NXZ	; CvCityAI::AI_isChooseProductionDirty
; Function compile flags: /Ogtpy
;	COMDAT ?AI_isChooseProductionDirty@CvCityAI@@UAE_NXZ
_TEXT	SEGMENT
?AI_isChooseProductionDirty@CvCityAI@@UAE_NXZ PROC	; CvCityAI::AI_isChooseProductionDirty, COMDAT
; _this$ = ecx

; 168  : 	VALIDATE_OBJECT
; 169  : 	return m_bChooseProductionDirty;

	mov	al, BYTE PTR [ecx+3108]

; 170  : }

	ret	0
?AI_isChooseProductionDirty@CvCityAI@@UAE_NXZ ENDP	; CvCityAI::AI_isChooseProductionDirty
_TEXT	ENDS
PUBLIC	?AI_setChooseProductionDirty@CvCityAI@@UAEX_N@Z	; CvCityAI::AI_setChooseProductionDirty
; Function compile flags: /Ogtpy
;	COMDAT ?AI_setChooseProductionDirty@CvCityAI@@UAEX_N@Z
_TEXT	SEGMENT
_bNewValue$ = 8						; size = 1
?AI_setChooseProductionDirty@CvCityAI@@UAEX_N@Z PROC	; CvCityAI::AI_setChooseProductionDirty, COMDAT
; _this$ = ecx

; 174  : 	VALIDATE_OBJECT
; 175  : 	m_bChooseProductionDirty = bNewValue;

	mov	al, BYTE PTR _bNewValue$[esp-4]
	mov	BYTE PTR [ecx+3108], al

; 176  : }

	ret	4
?AI_setChooseProductionDirty@CvCityAI@@UAEX_N@Z ENDP	; CvCityAI::AI_setChooseProductionDirty
_TEXT	ENDS
PUBLIC	?AI_GetNumPlotsAcquiredByOtherPlayer@CvCityAI@@UBEHW4PlayerTypes@@@Z ; CvCityAI::AI_GetNumPlotsAcquiredByOtherPlayer
; Function compile flags: /Ogtpy
;	COMDAT ?AI_GetNumPlotsAcquiredByOtherPlayer@CvCityAI@@UBEHW4PlayerTypes@@@Z
_TEXT	SEGMENT
_ePlayer$ = 8						; size = 4
?AI_GetNumPlotsAcquiredByOtherPlayer@CvCityAI@@UBEHW4PlayerTypes@@@Z PROC ; CvCityAI::AI_GetNumPlotsAcquiredByOtherPlayer, COMDAT
; _this$ = ecx

; 204  : 	VALIDATE_OBJECT
; 205  : 	FAssert(ePlayer < MAX_PLAYERS);
; 206  : 	FAssert(ePlayer > -1);
; 207  : 
; 208  : 	return m_aiNumPlotsAcquiredByOtherPlayers[ePlayer];

	mov	eax, DWORD PTR _ePlayer$[esp-4]
	mov	eax, DWORD PTR [ecx+eax*4+3440]

; 209  : }

	ret	4
?AI_GetNumPlotsAcquiredByOtherPlayer@CvCityAI@@UBEHW4PlayerTypes@@@Z ENDP ; CvCityAI::AI_GetNumPlotsAcquiredByOtherPlayer
_TEXT	ENDS
PUBLIC	?AI_ChangeNumPlotsAcquiredByOtherPlayer@CvCityAI@@UAEXW4PlayerTypes@@H@Z ; CvCityAI::AI_ChangeNumPlotsAcquiredByOtherPlayer
; Function compile flags: /Ogtpy
;	COMDAT ?AI_ChangeNumPlotsAcquiredByOtherPlayer@CvCityAI@@UAEXW4PlayerTypes@@H@Z
_TEXT	SEGMENT
_ePlayer$ = 8						; size = 4
_iChange$ = 12						; size = 4
?AI_ChangeNumPlotsAcquiredByOtherPlayer@CvCityAI@@UAEXW4PlayerTypes@@H@Z PROC ; CvCityAI::AI_ChangeNumPlotsAcquiredByOtherPlayer, COMDAT
; _this$ = ecx

; 214  : 	VALIDATE_OBJECT
; 215  : 	FAssert(ePlayer < MAX_PLAYERS);
; 216  : 	FAssert(ePlayer > -1);
; 217  : 
; 218  : 	m_aiNumPlotsAcquiredByOtherPlayers[ePlayer] += iChange;

	mov	eax, DWORD PTR _ePlayer$[esp-4]
	mov	edx, DWORD PTR _iChange$[esp-4]
	add	DWORD PTR [ecx+eax*4+3440], edx

; 219  : }

	ret	8
?AI_ChangeNumPlotsAcquiredByOtherPlayer@CvCityAI@@UAEXW4PlayerTypes@@H@Z ENDP ; CvCityAI::AI_ChangeNumPlotsAcquiredByOtherPlayer
_TEXT	ENDS
PUBLIC	??0CvString@@QAE@XZ				; CvString::CvString
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
;	COMDAT ??0CvString@@QAE@XZ
_TEXT	SEGMENT
??0CvString@@QAE@XZ PROC				; CvString::CvString, COMDAT
; _this$ = ecx

; 23   : 	CvString() {}

	push	esi
	mov	esi, ecx
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, esi
	pop	esi
	ret	0
??0CvString@@QAE@XZ ENDP				; CvString::CvString
_TEXT	ENDS
PUBLIC	??1CvString@@QAE@XZ				; CvString::~CvString
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??1CvString@@QAE@XZ
_TEXT	SEGMENT
??1CvString@@QAE@XZ PROC				; CvString::~CvString, COMDAT
; _this$ = ecx

; 28   : 	~CvString() {}

	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
??1CvString@@QAE@XZ ENDP				; CvString::~CvString
_TEXT	ENDS
PUBLIC	??BCvString@@QBEPBDXZ				; CvString::operator char const *
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??BCvString@@QBEPBDXZ
_TEXT	SEGMENT
??BCvString@@QBEPBDXZ PROC				; CvString::operator char const *, COMDAT
; _this$ = ecx

; 31   : 	operator const char*() const 	{ return c_str(); }												

	jmp	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
??BCvString@@QBEPBDXZ ENDP				; CvString::operator char const *
_TEXT	ENDS
PUBLIC	??4CvString@@QAEAAV0@PBD@Z			; CvString::operator=
EXTRN	__imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ:PROC
EXTRN	__imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??4CvString@@QAEAAV0@PBD@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
??4CvString@@QAEAAV0@PBD@Z PROC				; CvString::operator=, COMDAT
; _this$ = ecx

; 37   : 	CvString& operator=( const char* s) { if (s) assign(s); else clear();	return *this; }	

	mov	eax, DWORD PTR _s$[esp-4]
	push	esi
	mov	esi, ecx
	test	eax, eax
	je	SHORT $LN2@operator
	push	eax
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	mov	eax, esi
	pop	esi
	ret	4
$LN2@operator:
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	mov	eax, esi
	pop	esi
	ret	4
??4CvString@@QAEAAV0@PBD@Z ENDP				; CvString::operator=
_TEXT	ENDS
PUBLIC	??4CvString@@QAEAAV0@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CvString::operator=
; Function compile flags: /Ogtpy
;	COMDAT ??4CvString@@QAEAAV0@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
??4CvString@@QAEAAV0@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; CvString::operator=, COMDAT
; _this$ = ecx

; 38   : 	CvString& operator=( const std::string& s) { assign(s.c_str());	return *this; }	

	push	esi
	mov	esi, ecx
	mov	ecx, DWORD PTR _s$[esp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	ecx, esi
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	mov	eax, esi
	pop	esi
	ret	4
??4CvString@@QAEAAV0@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CvString::operator=
_TEXT	ENDS
PUBLIC	?GetCString@CvString@@QBEPBDXZ			; CvString::GetCString
; Function compile flags: /Ogtpy
;	COMDAT ?GetCString@CvString@@QBEPBDXZ
_TEXT	SEGMENT
?GetCString@CvString@@QBEPBDXZ PROC			; CvString::GetCString, COMDAT
; _this$ = ecx

; 42   : 	const char* GetCString() const 	{ return c_str(); }

	jmp	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
?GetCString@CvString@@QBEPBDXZ ENDP			; CvString::GetCString
_TEXT	ENDS
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	?formatv@CvString@@SA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBDPAD@Z ; CvString::formatv
EXTRN	__imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z:PROC
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	__imp___vsnprintf:PROC
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ?formatv@CvString@@SA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBDPAD@Z
_TEXT	SEGMENT
_buf$ = -2048						; size = 2048
_out$ = 8						; size = 4
_fmt$ = 12						; size = 4
_args$ = 16						; size = 4
?formatv@CvString@@SA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBDPAD@Z PROC ; CvString::formatv, COMDAT

; 191  : {

	sub	esp, 2048				; 00000800H
	push	ebx
	push	ebp

; 192  : 	char buf[2048];
; 193  : 	char * pbuf = buf;

	mov	ebp, DWORD PTR _args$[esp+2052]
	push	esi
	push	edi
	lea	edi, DWORD PTR _buf$[esp+2064]
	mov	esi, 2047				; 000007ffH
	npad	6
$LL10@formatv:

; 194  : 	int len = 0;
; 195  : 	int attempts = 0;
; 196  : 	bool success = false;
; 197  : 	const int kMaxAttempts = 40;
; 198  : 
; 199  : 	do
; 200  : 	{
; 201  : 		int maxlen = 2047+2048*attempts;
; 202  : 		len = _vsnprintf(pbuf,maxlen,fmt,args);

	mov	eax, DWORD PTR _fmt$[esp+2060]
	push	ebp
	push	eax
	push	esi
	push	edi
	mov	ebx, esi
	call	DWORD PTR __imp___vsnprintf
	add	esp, 16					; 00000010H

; 203  : 		attempts++;

	add	esi, 2048				; 00000800H

; 204  : 		success = (len>=0 && len<=maxlen);

	test	eax, eax
	jl	SHORT $LN13@formatv
	cmp	eax, ebx
	jle	SHORT $LN18@formatv
$LN13@formatv:

; 205  : 		if (!success)
; 206  : 		{
; 207  : 			if (pbuf!=buf)

	lea	ecx, DWORD PTR _buf$[esp+2064]
	xor	bl, bl
	cmp	edi, ecx
	je	SHORT $LN6@formatv

; 208  : 				delete [] pbuf;

	push	edi
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN6@formatv:

; 209  : 			pbuf = new char[2048+2048*attempts];

	lea	edx, DWORD PTR [esi+1]
	push	edx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4

; 210  : 		}
; 211  : 	}
; 212  : 	while (!success && attempts<kMaxAttempts);

	cmp	esi, 83967				; 000147ffH
	mov	edi, eax
	jl	SHORT $LL10@formatv

; 222  : 		out = "";

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN21@formatv:
	mov	ecx, DWORD PTR _out$[esp+2064]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 223  : 
; 224  : 	if (pbuf!=buf)

	lea	eax, DWORD PTR _buf$[esp+2064]
	cmp	edi, eax
	je	SHORT $LN20@formatv

; 225  : 		delete [] pbuf;

	push	edi
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN20@formatv:
	pop	edi
	pop	esi
	pop	ebp

; 226  : 
; 227  : 	return success;

	mov	al, bl
	pop	ebx

; 228  : }

	add	esp, 2048				; 00000800H
	ret	0
$LN18@formatv:

; 204  : 		success = (len>=0 && len<=maxlen);

	mov	bl, 1

; 213  : 
; 214  : 	if ( attempts==kMaxAttempts )
; 215  : 	{
; 216  : 		// dxPrintNL( "CvString::formatv - Max reallocs occurred while formatting string. Result is likely truncated!", 0 );
; 217  : 	}
; 218  : 
; 219  : 	if (success)
; 220  : 		out = pbuf;

	push	edi

; 221  : 	else

	jmp	SHORT $LN21@formatv
?formatv@CvString@@SA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBDPAD@Z ENDP ; CvString::formatv
_TEXT	ENDS
PUBLIC	?Format@CvString@@QAAXPBDZZ			; CvString::Format
EXTRN	___CxxFrameHandler3:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Format@CvString@@QAAXPBDZZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Format@CvString@@QAAXPBDZZ$0
__ehfuncinfo$?Format@CvString@@QAAXPBDZZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Format@CvString@@QAAXPBDZZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?Format@CvString@@QAAXPBDZZ
_TEXT	SEGMENT
_result$ = -40						; size = 28
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_lpszFormat$ = 12					; size = 4
?Format@CvString@@QAAXPBDZZ PROC			; CvString::Format, COMDAT

; 269  : {

	push	-1
	push	__ehhandler$?Format@CvString@@QAAXPBDZZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 28					; 0000001cH

; 270  : 	std::string result;

	lea	ecx, DWORD PTR _result$[esp+40]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 271  : 	va_list args;
; 272  : 	va_start(args,lpszFormat);
; 273  : 	formatv(result,lpszFormat,args);

	mov	ecx, DWORD PTR _lpszFormat$[esp+36]
	lea	eax, DWORD PTR _lpszFormat$[esp+40]
	push	eax
	push	ecx
	lea	edx, DWORD PTR _result$[esp+48]
	push	edx
	mov	DWORD PTR __$EHRec$[esp+60], 0
	call	?formatv@CvString@@SA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBDPAD@Z ; CvString::formatv
	add	esp, 12					; 0000000cH

; 274  : 	va_end(args);
; 275  : 	*this = result;

	lea	ecx, DWORD PTR _result$[esp+40]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	ecx, DWORD PTR _this$[esp+36]
	push	eax
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z

; 276  : }

	lea	ecx, DWORD PTR _result$[esp+40]
	mov	DWORD PTR __$EHRec$[esp+48], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[esp+40]
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Format@CvString@@QAAXPBDZZ$0:
	lea	ecx, DWORD PTR _result$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?Format@CvString@@QAAXPBDZZ:
	mov	eax, OFFSET __ehfuncinfo$?Format@CvString@@QAAXPBDZZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Format@CvString@@QAAXPBDZZ ENDP			; CvString::Format
PUBLIC	?GetDescription@CvBaseInfo@@QBEPBDXZ		; CvBaseInfo::GetDescription
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvinfos.h
;	COMDAT ?GetDescription@CvBaseInfo@@QBEPBDXZ
_TEXT	SEGMENT
?GetDescription@CvBaseInfo@@QBEPBDXZ PROC		; CvBaseInfo::GetDescription, COMDAT
; _this$ = ecx

; 64   : 		return m_strDescription.c_str();

	add	ecx, 36					; 00000024H
	jmp	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
?GetDescription@CvBaseInfo@@QBEPBDXZ ENDP		; CvBaseInfo::GetDescription
_TEXT	ENDS
PUBLIC	?getGame@CvGlobals@@QAEAAVCvGame@@XZ		; CvGlobals::getGame
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
;	COMDAT ?getGame@CvGlobals@@QAEAAVCvGame@@XZ
_TEXT	SEGMENT
?getGame@CvGlobals@@QAEAAVCvGame@@XZ PROC		; CvGlobals::getGame, COMDAT
; _this$ = ecx

; 183  : 		return *m_game;    // inlined for perf reasons, do not use outside of dll

	mov	eax, DWORD PTR [ecx+48]

; 184  : 	}

	ret	0
?getGame@CvGlobals@@QAEAAVCvGame@@XZ ENDP		; CvGlobals::getGame
_TEXT	ENDS
PUBLIC	?getPlayer@CvPlayerAI@@SAAAV1@W4PlayerTypes@@@Z	; CvPlayerAI::getPlayer
EXTRN	?m_aPlayers@CvPlayerAI@@1PAV1@A:DWORD		; CvPlayerAI::m_aPlayers
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvplayerai.h
;	COMDAT ?getPlayer@CvPlayerAI@@SAAAV1@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_ePlayer$ = 8						; size = 4
?getPlayer@CvPlayerAI@@SAAAV1@W4PlayerTypes@@@Z PROC	; CvPlayerAI::getPlayer, COMDAT

; 28   : 		CvAssertMsg(ePlayer != NO_PLAYER, "Player is not assigned a valid value");
; 29   : 		CvAssertMsg(ePlayer < MAX_PLAYERS, "Player is not assigned a valid value");
; 30   : 		return m_aPlayers[ePlayer];

	mov	eax, DWORD PTR _ePlayer$[esp-4]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers

; 31   : 	}

	ret	0
?getPlayer@CvPlayerAI@@SAAAV1@W4PlayerTypes@@@Z ENDP	; CvPlayerAI::getPlayer
_TEXT	ENDS
PUBLIC	?getOwner@CvPlot@@QBE?AW4PlayerTypes@@XZ	; CvPlot::getOwner
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvplot.h
;	COMDAT ?getOwner@CvPlot@@QBE?AW4PlayerTypes@@XZ
_TEXT	SEGMENT
?getOwner@CvPlot@@QBE?AW4PlayerTypes@@XZ PROC		; CvPlot::getOwner, COMDAT
; _this$ = ecx

; 387  : 		return (PlayerTypes)m_eOwner;

	movsx	eax, BYTE PTR [ecx+4]

; 388  : 	}

	ret	0
?getOwner@CvPlot@@QBE?AW4PlayerTypes@@XZ ENDP		; CvPlot::getOwner
_TEXT	ENDS
PUBLIC	??0CvCityBuildable@@QAE@XZ			; CvCityBuildable::CvCityBuildable
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvcitystrategyai.h
;	COMDAT ??0CvCityBuildable@@QAE@XZ
_TEXT	SEGMENT
??0CvCityBuildable@@QAE@XZ PROC				; CvCityBuildable::CvCityBuildable, COMDAT
; _this$ = ecx

; 119  : 	{

	mov	eax, ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx

; 120  : 	}

	ret	0
??0CvCityBuildable@@QAE@XZ ENDP				; CvCityBuildable::CvCityBuildable
_TEXT	ENDS
PUBLIC	??$?6H@FDataStream@@QAEAAV0@ABH@Z		; FDataStream::operator<<<int>
EXTRN	?Write@FDataStream@@IAEXABH@Z:PROC		; FDataStream::Write
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fdatastream.h
;	COMDAT ??$?6H@FDataStream@@QAEAAV0@ABH@Z
_TEXT	SEGMENT
_kData$ = 8						; size = 4
??$?6H@FDataStream@@QAEAAV0@ABH@Z PROC			; FDataStream::operator<<<int>, COMDAT
; _this$ = ecx

; 246  : 	// If the compiler produces an error here complaining about 
; 247  : 	// YouMustImplementASerializeOperatorForThisTypeError then
; 248  : 	// it could not find a specialization for the type supplied
; 249  : 	// in scope. If a specialization exists, be sure to include
; 250  : 	// the header (FStlContainerSerialization.h, for example), 
; 251  : 	// if not, implement :
; 252  : 	// FDataStream & operator<<(FDataStream &, YourCustomType &)
; 253  : 	Write( kData );

	mov	eax, DWORD PTR _kData$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 254  : 	return ( *this );

	mov	eax, esi
	pop	esi

; 255  : }

	ret	4
??$?6H@FDataStream@@QAEAAV0@ABH@Z ENDP			; FDataStream::operator<<<int>
_TEXT	ENDS
PUBLIC	??$?5H@FDataStream@@QAEAAV0@AAH@Z		; FDataStream::operator>><int>
EXTRN	?Read@FDataStream@@IAEXAAH@Z:PROC		; FDataStream::Read
; Function compile flags: /Ogtpy
;	COMDAT ??$?5H@FDataStream@@QAEAAV0@AAH@Z
_TEXT	SEGMENT
_kData$ = 8						; size = 4
??$?5H@FDataStream@@QAEAAV0@AAH@Z PROC			; FDataStream::operator>><int>, COMDAT
; _this$ = ecx

; 260  : 	// If the compiler produces an error here complaining about 
; 261  : 	// YouMustImplementASerializeOperatorForThisTypeError then
; 262  : 	// it could not find a specialization for the type supplied
; 263  : 	// in scope. If a specialization exists, be sure to include
; 264  : 	// the header (FStlContainerSerialization.h, for example), 
; 265  : 	// if not, implement :
; 266  : 	// FDataStream & operator>>(FDataStream &, YourCustomType &)
; 267  : 	Read( kData );

	mov	eax, DWORD PTR _kData$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 268  : 	return ( *this );

	mov	eax, esi
	pop	esi

; 269  : }

	ret	4
??$?5H@FDataStream@@QAEAAV0@AAH@Z ENDP			; FDataStream::operator>><int>
_TEXT	ENDS
PUBLIC	??B?$FAutoVariable@W4PlayerTypes@@VCvCity@@@@QBEABW4PlayerTypes@@XZ ; FAutoVariable<enum PlayerTypes,CvCity>::operator enum PlayerTypes const &
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fautovariable.h
;	COMDAT ??B?$FAutoVariable@W4PlayerTypes@@VCvCity@@@@QBEABW4PlayerTypes@@XZ
_TEXT	SEGMENT
??B?$FAutoVariable@W4PlayerTypes@@VCvCity@@@@QBEABW4PlayerTypes@@XZ PROC ; FAutoVariable<enum PlayerTypes,CvCity>::operator enum PlayerTypes const &, COMDAT
; _this$ = ecx

; 194  : 	return m_value;

	lea	eax, DWORD PTR [ecx+4]

; 195  : }

	ret	0
??B?$FAutoVariable@W4PlayerTypes@@VCvCity@@@@QBEABW4PlayerTypes@@XZ ENDP ; FAutoVariable<enum PlayerTypes,CvCity>::operator enum PlayerTypes const &
_TEXT	ENDS
PUBLIC	??B?$FAutoVariable@HVCvCity@@@@QBEABHXZ		; FAutoVariable<int,CvCity>::operator int const &
; Function compile flags: /Ogtpy
;	COMDAT ??B?$FAutoVariable@HVCvCity@@@@QBEABHXZ
_TEXT	SEGMENT
??B?$FAutoVariable@HVCvCity@@@@QBEABHXZ PROC		; FAutoVariable<int,CvCity>::operator int const &, COMDAT
; _this$ = ecx

; 194  : 	return m_value;

	lea	eax, DWORD PTR [ecx+4]

; 195  : }

	ret	0
??B?$FAutoVariable@HVCvCity@@@@QBEABHXZ ENDP		; FAutoVariable<int,CvCity>::operator int const &
_TEXT	ENDS
PUBLIC	??$?5_N@FDataStream@@QAEAAV0@AA_N@Z		; FDataStream::operator>><bool>
EXTRN	?Read@FDataStream@@IAEXAA_N@Z:PROC		; FDataStream::Read
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fdatastream.h
;	COMDAT ??$?5_N@FDataStream@@QAEAAV0@AA_N@Z
_TEXT	SEGMENT
_kData$ = 8						; size = 4
??$?5_N@FDataStream@@QAEAAV0@AA_N@Z PROC		; FDataStream::operator>><bool>, COMDAT
; _this$ = ecx

; 260  : 	// If the compiler produces an error here complaining about 
; 261  : 	// YouMustImplementASerializeOperatorForThisTypeError then
; 262  : 	// it could not find a specialization for the type supplied
; 263  : 	// in scope. If a specialization exists, be sure to include
; 264  : 	// the header (FStlContainerSerialization.h, for example), 
; 265  : 	// if not, implement :
; 266  : 	// FDataStream & operator>>(FDataStream &, YourCustomType &)
; 267  : 	Read( kData );

	mov	eax, DWORD PTR _kData$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 268  : 	return ( *this );

	mov	eax, esi
	pop	esi

; 269  : }

	ret	4
??$?5_N@FDataStream@@QAEAAV0@AA_N@Z ENDP		; FDataStream::operator>><bool>
_TEXT	ENDS
PUBLIC	??$?6_N@FDataStream@@QAEAAV0@AB_N@Z		; FDataStream::operator<<<bool>
EXTRN	?Write@FDataStream@@IAEXAB_N@Z:PROC		; FDataStream::Write
; Function compile flags: /Ogtpy
;	COMDAT ??$?6_N@FDataStream@@QAEAAV0@AB_N@Z
_TEXT	SEGMENT
_kData$ = 8						; size = 4
??$?6_N@FDataStream@@QAEAAV0@AB_N@Z PROC		; FDataStream::operator<<<bool>, COMDAT
; _this$ = ecx

; 246  : 	// If the compiler produces an error here complaining about 
; 247  : 	// YouMustImplementASerializeOperatorForThisTypeError then
; 248  : 	// it could not find a specialization for the type supplied
; 249  : 	// in scope. If a specialization exists, be sure to include
; 250  : 	// the header (FStlContainerSerialization.h, for example), 
; 251  : 	// if not, implement :
; 252  : 	// FDataStream & operator<<(FDataStream &, YourCustomType &)
; 253  : 	Write( kData );

	mov	eax, DWORD PTR _kData$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 254  : 	return ( *this );

	mov	eax, esi
	pop	esi

; 255  : }

	ret	4
??$?6_N@FDataStream@@QAEAAV0@AB_N@Z ENDP		; FDataStream::operator<<<bool>
_TEXT	ENDS
PUBLIC	??$?5I@FDataStream@@QAEAAV0@AAI@Z		; FDataStream::operator>><unsigned int>
EXTRN	?Read@FDataStream@@IAEXAAI@Z:PROC		; FDataStream::Read
; Function compile flags: /Ogtpy
;	COMDAT ??$?5I@FDataStream@@QAEAAV0@AAI@Z
_TEXT	SEGMENT
_kData$ = 8						; size = 4
??$?5I@FDataStream@@QAEAAV0@AAI@Z PROC			; FDataStream::operator>><unsigned int>, COMDAT
; _this$ = ecx

; 260  : 	// If the compiler produces an error here complaining about 
; 261  : 	// YouMustImplementASerializeOperatorForThisTypeError then
; 262  : 	// it could not find a specialization for the type supplied
; 263  : 	// in scope. If a specialization exists, be sure to include
; 264  : 	// the header (FStlContainerSerialization.h, for example), 
; 265  : 	// if not, implement :
; 266  : 	// FDataStream & operator>>(FDataStream &, YourCustomType &)
; 267  : 	Read( kData );

	mov	eax, DWORD PTR _kData$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	?Read@FDataStream@@IAEXAAI@Z		; FDataStream::Read

; 268  : 	return ( *this );

	mov	eax, esi
	pop	esi

; 269  : }

	ret	4
??$?5I@FDataStream@@QAEAAV0@AAI@Z ENDP			; FDataStream::operator>><unsigned int>
_TEXT	ENDS
PUBLIC	??$?6I@FDataStream@@QAEAAV0@ABI@Z		; FDataStream::operator<<<unsigned int>
EXTRN	?Write@FDataStream@@IAEXABI@Z:PROC		; FDataStream::Write
; Function compile flags: /Ogtpy
;	COMDAT ??$?6I@FDataStream@@QAEAAV0@ABI@Z
_TEXT	SEGMENT
_kData$ = 8						; size = 4
??$?6I@FDataStream@@QAEAAV0@ABI@Z PROC			; FDataStream::operator<<<unsigned int>, COMDAT
; _this$ = ecx

; 246  : 	// If the compiler produces an error here complaining about 
; 247  : 	// YouMustImplementASerializeOperatorForThisTypeError then
; 248  : 	// it could not find a specialization for the type supplied
; 249  : 	// in scope. If a specialization exists, be sure to include
; 250  : 	// the header (FStlContainerSerialization.h, for example), 
; 251  : 	// if not, implement :
; 252  : 	// FDataStream & operator<<(FDataStream &, YourCustomType &)
; 253  : 	Write( kData );

	mov	eax, DWORD PTR _kData$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write

; 254  : 	return ( *this );

	mov	eax, esi
	pop	esi

; 255  : }

	ret	4
??$?6I@FDataStream@@QAEAAV0@ABI@Z ENDP			; FDataStream::operator<<<unsigned int>
_TEXT	ENDS
PUBLIC	??_7CvCityAI@@6B@				; CvCityAI::`vftable'
PUBLIC	??0CvCityAI@@QAE@XZ				; CvCityAI::CvCityAI
PUBLIC	??_R4CvCityAI@@6B@				; CvCityAI::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCvCityAI@@@8				; CvCityAI `RTTI Type Descriptor'
PUBLIC	??_R3CvCityAI@@8				; CvCityAI::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CvCityAI@@8				; CvCityAI::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CvCityAI@@8			; CvCityAI::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CvCity@@8				; CvCity::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCvCity@@@8				; CvCity `RTTI Type Descriptor'
PUBLIC	??_R3CvCity@@8					; CvCity::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CvCity@@8					; CvCity::`RTTI Base Class Array'
PUBLIC	?AI_doTurn@CvCityAI@@UAEXXZ			; CvCityAI::AI_doTurn
PUBLIC	?AI_chooseProduction@CvCityAI@@UAEX_N@Z		; CvCityAI::AI_chooseProduction
PUBLIC	?IsBuildingUnitForOperation@CvCity@@UBE_NXZ	; CvCity::IsBuildingUnitForOperation
EXTRN	??0CvCity@@QAE@XZ:PROC				; CvCity::CvCity
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECvCityAI@@UAEPAXI@Z:PROC			; CvCityAI::`vector deleting destructor'
;	COMDAT ??_R2CvCity@@8
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvcityai.cpp
rdata$r	SEGMENT
??_R2CvCity@@8 DD FLAT:??_R1A@?0A@EA@CvCity@@8		; CvCity::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CvCity@@8
rdata$r	SEGMENT
??_R3CvCity@@8 DD 00H					; CvCity::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CvCity@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCvCity@@@8
_DATA	SEGMENT
??_R0?AVCvCity@@@8 DD FLAT:??_7type_info@@6B@		; CvCity `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCvCity@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CvCity@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CvCity@@8 DD FLAT:??_R0?AVCvCity@@@8	; CvCity::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CvCity@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CvCityAI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CvCityAI@@8 DD FLAT:??_R0?AVCvCityAI@@@8	; CvCityAI::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CvCityAI@@8
rdata$r	ENDS
;	COMDAT ??_R2CvCityAI@@8
rdata$r	SEGMENT
??_R2CvCityAI@@8 DD FLAT:??_R1A@?0A@EA@CvCityAI@@8	; CvCityAI::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CvCity@@8
rdata$r	ENDS
;	COMDAT ??_R3CvCityAI@@8
rdata$r	SEGMENT
??_R3CvCityAI@@8 DD 00H					; CvCityAI::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CvCityAI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCvCityAI@@@8
_DATA	SEGMENT
??_R0?AVCvCityAI@@@8 DD FLAT:??_7type_info@@6B@		; CvCityAI `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCvCityAI@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CvCityAI@@6B@
rdata$r	SEGMENT
??_R4CvCityAI@@6B@ DD 00H				; CvCityAI::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCvCityAI@@@8
	DD	FLAT:??_R3CvCityAI@@8
rdata$r	ENDS
;	COMDAT ??_7CvCityAI@@6B@
CONST	SEGMENT
??_7CvCityAI@@6B@ DD FLAT:??_R4CvCityAI@@6B@		; CvCityAI::`vftable'
	DD	FLAT:??_ECvCityAI@@UAEPAXI@Z
	DD	FLAT:?AI_init@CvCityAI@@UAEXXZ
	DD	FLAT:?AI_reset@CvCityAI@@UAEXXZ
	DD	FLAT:?AI_doTurn@CvCityAI@@UAEXXZ
	DD	FLAT:?AI_chooseProduction@CvCityAI@@UAEX_N@Z
	DD	FLAT:?AI_isChooseProductionDirty@CvCityAI@@UAE_NXZ
	DD	FLAT:?AI_setChooseProductionDirty@CvCityAI@@UAEX_N@Z
	DD	FLAT:?AI_GetNumPlotsAcquiredByOtherPlayer@CvCityAI@@UBEHW4PlayerTypes@@@Z
	DD	FLAT:?AI_ChangeNumPlotsAcquiredByOtherPlayer@CvCityAI@@UAEXW4PlayerTypes@@H@Z
	DD	FLAT:?IsBuildingUnitForOperation@CvCity@@UBE_NXZ
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??0CvCityAI@@QAE@XZ
_TEXT	SEGMENT
??0CvCityAI@@QAE@XZ PROC				; CvCityAI::CvCityAI, COMDAT
; _this$ = ecx

; 33   : {

	push	esi
	mov	esi, ecx
	call	??0CvCity@@QAE@XZ			; CvCity::CvCity

; 34   : 	OBJECT_ALLOCATED
; 35   : 	AI_reset();

	mov	ecx, esi
	mov	DWORD PTR [esi], OFFSET ??_7CvCityAI@@6B@
	call	?AI_reset@CvCityAI@@UAEXXZ		; CvCityAI::AI_reset

; 36   : }

	mov	eax, esi
	pop	esi
	ret	0
??0CvCityAI@@QAE@XZ ENDP				; CvCityAI::CvCityAI
_TEXT	ENDS
PUBLIC	?IsValid@OperationSlot@@QBE_NXZ			; OperationSlot::IsValid
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvaioperation.h
;	COMDAT ?IsValid@OperationSlot@@QBE_NXZ
_TEXT	SEGMENT
?IsValid@OperationSlot@@QBE_NXZ PROC			; OperationSlot::IsValid, COMDAT
; _this$ = ecx

; 108  : 		return (m_iArmyID != FFreeList::INVALID_INDEX && m_iSlotID != -1 && m_iOperationID != -1);

	or	eax, -1
	cmp	DWORD PTR [ecx+4], eax
	je	SHORT $LN3@IsValid
	cmp	DWORD PTR [ecx+8], eax
	je	SHORT $LN3@IsValid
	cmp	DWORD PTR [ecx], eax
	je	SHORT $LN3@IsValid
	mov	eax, 1

; 109  : 	}

	ret	0
$LN3@IsValid:

; 108  : 		return (m_iArmyID != FFreeList::INVALID_INDEX && m_iSlotID != -1 && m_iOperationID != -1);

	xor	eax, eax

; 109  : 	}

	ret	0
?IsValid@OperationSlot@@QBE_NXZ ENDP			; OperationSlot::IsValid
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvcity.h
_TEXT	ENDS
;	COMDAT ?IsBuildingUnitForOperation@CvCity@@UBE_NXZ
_TEXT	SEGMENT
?IsBuildingUnitForOperation@CvCity@@UBE_NXZ PROC	; CvCity::IsBuildingUnitForOperation, COMDAT
; _this$ = ecx

; 916  : 		return m_unitBeingBuiltForOperation.IsValid();

	or	eax, -1
	cmp	DWORD PTR [ecx+812], eax
	je	SHORT $LN5@IsBuilding
	cmp	DWORD PTR [ecx+816], eax
	je	SHORT $LN5@IsBuilding
	cmp	DWORD PTR [ecx+808], eax
	je	SHORT $LN5@IsBuilding
	mov	eax, 1

; 917  : 	}

	ret	0

; 916  : 		return m_unitBeingBuiltForOperation.IsValid();

$LN5@IsBuilding:
	xor	eax, eax

; 917  : 	}

	ret	0
?IsBuildingUnitForOperation@CvCity@@UBE_NXZ ENDP	; CvCity::IsBuildingUnitForOperation
_TEXT	ENDS
PUBLIC	??1CvCityAI@@UAE@XZ				; CvCityAI::~CvCityAI
EXTRN	??1CvCity@@UAE@XZ:PROC				; CvCity::~CvCity
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvcityai.cpp
;	COMDAT ??1CvCityAI@@UAE@XZ
_TEXT	SEGMENT
??1CvCityAI@@UAE@XZ PROC				; CvCityAI::~CvCityAI, COMDAT
; _this$ = ecx

; 39   : {

	mov	DWORD PTR [ecx], OFFSET ??_7CvCityAI@@6B@

; 40   : 	AI_uninit();
; 41   : 	OBJECT_DESTROYED
; 42   : }

	jmp	??1CvCity@@UAE@XZ			; CvCity::~CvCity
??1CvCityAI@@UAE@XZ ENDP				; CvCityAI::~CvCityAI
_TEXT	ENDS
PUBLIC	??$?5H$0FA@@@YAAAVFDataStream@@AAV0@AAY0FA@H@Z	; operator>><int,80>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fdatastream.h
;	COMDAT ??$?5H$0FA@@@YAAAVFDataStream@@AAV0@AAY0FA@H@Z
_TEXT	SEGMENT
_loadFrom$ = 8						; size = 4
_writeTo$ = 12						; size = 4
??$?5H$0FA@@@YAAAVFDataStream@@AAV0@AAY0FA@H@Z PROC	; operator>><int,80>, COMDAT

; 234  : {

	push	ebx
	push	esi

; 235  : 	size_t i = 0;
; 236  : 	for(i = 0; i < count; ++i)

	mov	esi, DWORD PTR _writeTo$[esp+4]
	push	edi
	mov	edi, DWORD PTR _loadFrom$[esp+8]
	mov	ebx, 80					; 00000050H
$LL3@operator@2:

; 237  : 	{
; 238  : 		loadFrom >> writeTo[i];

	push	esi
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read
	add	esi, 4
	sub	ebx, 1
	jne	SHORT $LL3@operator@2

; 239  : 	}
; 240  : 	return loadFrom;

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx

; 241  : }

	ret	0
??$?5H$0FA@@@YAAAVFDataStream@@AAV0@AAY0FA@H@Z ENDP	; operator>><int,80>
_TEXT	ENDS
PUBLIC	??$?6H$0FA@@@YAAAVFDataStream@@AAV0@AAY0FA@$$CBH@Z ; operator<<<int,80>
; Function compile flags: /Ogtpy
;	COMDAT ??$?6H$0FA@@@YAAAVFDataStream@@AAV0@AAY0FA@$$CBH@Z
_TEXT	SEGMENT
_saveTo$ = 8						; size = 4
_readFrom$ = 12						; size = 4
??$?6H$0FA@@@YAAAVFDataStream@@AAV0@AAY0FA@$$CBH@Z PROC	; operator<<<int,80>, COMDAT

; 223  : {

	push	ebx
	push	esi

; 224  : 	size_t i = 0;
; 225  : 	for(i = 0; i < count; ++i)

	mov	esi, DWORD PTR _readFrom$[esp+4]
	push	edi
	mov	edi, DWORD PTR _saveTo$[esp+8]
	mov	ebx, 80					; 00000050H
$LL3@operator@3:

; 226  : 	{
; 227  : 		saveTo << readFrom[i];

	push	esi
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write
	add	esi, 4
	sub	ebx, 1
	jne	SHORT $LL3@operator@3

; 228  : 	}
; 229  : 	return saveTo;

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx

; 230  : }

	ret	0
??$?6H$0FA@@@YAAAVFDataStream@@AAV0@AAY0FA@$$CBH@Z ENDP	; operator<<<int,80>
_TEXT	ENDS
PUBLIC	?getX@CvCity@@QBEHXZ				; CvCity::getX
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvcity.h
;	COMDAT ?getX@CvCity@@QBEHXZ
_TEXT	SEGMENT
?getX@CvCity@@QBEHXZ PROC				; CvCity::getX, COMDAT
; _this$ = ecx

; 340  : 		return m_iX;

	mov	eax, DWORD PTR [ecx+96]

; 341  : 	}

	ret	0
?getX@CvCity@@QBEHXZ ENDP				; CvCity::getX
_TEXT	ENDS
PUBLIC	?getY@CvCity@@QBEHXZ				; CvCity::getY
; Function compile flags: /Ogtpy
;	COMDAT ?getY@CvCity@@QBEHXZ
_TEXT	SEGMENT
?getY@CvCity@@QBEHXZ PROC				; CvCity::getY, COMDAT
; _this$ = ecx

; 345  : 		return m_iY;

	mov	eax, DWORD PTR [ecx+108]

; 346  : 	}

	ret	0
?getY@CvCity@@QBEHXZ ENDP				; CvCity::getY
_TEXT	ENDS
PUBLIC	?getOwner@CvCity@@QBE?AW4PlayerTypes@@XZ	; CvCity::getOwner
; Function compile flags: /Ogtpy
;	COMDAT ?getOwner@CvCity@@QBE?AW4PlayerTypes@@XZ
_TEXT	SEGMENT
?getOwner@CvCity@@QBE?AW4PlayerTypes@@XZ PROC		; CvCity::getOwner, COMDAT
; _this$ = ecx

; 604  : 		return m_eOwner;

	mov	eax, DWORD PTR [ecx+84]

; 605  : 	}

	ret	0
?getOwner@CvCity@@QBE?AW4PlayerTypes@@XZ ENDP		; CvCity::getOwner
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogtpy
;	COMDAT ??_GCvCityAI@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCvCityAI@@UAEPAXI@Z PROC				; CvCityAI::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7CvCityAI@@6B@
	call	??1CvCity@@UAE@XZ			; CvCity::~CvCity
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN9@scalar
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN9@scalar:
	mov	eax, esi
	pop	esi
	ret	4
??_GCvCityAI@@UAEPAXI@Z ENDP				; CvCityAI::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	?getName@CvCity@@QBE?BVCvString@@XZ:PROC	; CvCity::getName
EXTRN	__imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z:PROC
EXTRN	__imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z:PROC
EXTRN	?getElapsedGameTurns@CvGame@@QBEHXZ:PROC	; CvGame::getElapsedGameTurns
EXTRN	?GetLogFileName@CvCitySpecializationAI@@QBE?AVCvString@@AAV2@@Z:PROC ; CvCitySpecializationAI::GetLogFileName
EXTRN	?GetInstance@FILogFileMgr@@SAAAV1@XZ:PROC	; FILogFileMgr::GetInstance
EXTRN	?getCivilizationShortDescription@CvPlayer@@QBEPBDXZ:PROC ; CvPlayer::getCivilizationShortDescription
EXTRN	?LogCityProduction@CvCityStrategyAI@@QAEXUCvCityBuildable@@_N@Z:PROC ; CvCityStrategyAI::LogCityProduction
EXTRN	?getAILogging@CvGlobals@@QAE_NXZ:PROC		; CvGlobals::getAILogging
EXTRN	?getLogging@CvGlobals@@QAE_NXZ:PROC		; CvGlobals::getLogging
EXTRN	?pushOrder@CvCity@@QAEXW4OrderTypes@@HH_N111@Z:PROC ; CvCity::pushOrder
EXTRN	?getProductionTurnsLeft@CvCity@@QBEHW4BuildingTypes@@H@Z:PROC ; CvCity::getProductionTurnsLeft
EXTRN	?getJonRandNum@CvGame@@QAEHHPBD@Z:PROC		; CvGame::getJonRandNum
EXTRN	?GetPersonalityAndGrandStrategy@CvGrandStrategyAI@@QAEHW4FlavorTypes@@@Z:PROC ; CvGrandStrategyAI::GetPersonalityAndGrandStrategy
EXTRN	?GetGrandStrategyAI@CvPlayer@@QBEPAVCvGrandStrategyAI@@XZ:PROC ; CvPlayer::GetGrandStrategyAI
EXTRN	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z:PROC ; CvGlobals::getInfoTypeForString
EXTRN	?ChooseProduction@CvCityStrategyAI@@QAEX_NW4BuildingTypes@@W4UnitTypes@@@Z:PROC ; CvCityStrategyAI::ChooseProduction
EXTRN	?SetSpecializationsDirty@CvCitySpecializationAI@@QAEXW4CitySpecializationUpdateType@@@Z:PROC ; CvCitySpecializationAI::SetSpecializationsDirty
EXTRN	?canConstruct@CvCity@@QBE_NW4BuildingTypes@@_N11PAVCvString@@@Z:PROC ; CvCity::canConstruct
EXTRN	?IsWonder@CvWonderProductionAI@@QBE_NABVCvBuildingEntry@@@Z:PROC ; CvWonderProductionAI::IsWonder
EXTRN	?GetWonderProductionAI@CvPlayer@@QBEPAVCvWonderProductionAI@@XZ:PROC ; CvPlayer::GetWonderProductionAI
EXTRN	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z:PROC ; CvGlobals::getBuildingInfo
EXTRN	?gGlobals@@3VCvGlobals@@A:BYTE			; gGlobals
EXTRN	?getProductionBuilding@CvCity@@QBE?AW4BuildingTypes@@XZ:PROC ; CvCity::getProductionBuilding
EXTRN	?GetWonderBuildCity@CvCitySpecializationAI@@QBEPAVCvCity@@XZ:PROC ; CvCitySpecializationAI::GetWonderBuildCity
EXTRN	?GetCitySpecializationAI@CvPlayer@@QBEPAVCvCitySpecializationAI@@XZ:PROC ; CvPlayer::GetCitySpecializationAI
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__ehfuncinfo$?AI_chooseProduction@CvCityAI@@UAEX_N@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?AI_chooseProduction@CvCityAI@@UAEX_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?AI_chooseProduction@CvCityAI@@UAEX_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AI_chooseProduction@CvCityAI@@UAEX_N@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?AI_chooseProduction@CvCityAI@@UAEX_N@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?AI_chooseProduction@CvCityAI@@UAEX_N@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?AI_chooseProduction@CvCityAI@@UAEX_N@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?AI_chooseProduction@CvCityAI@@UAEX_N@Z$4
	DD	02H
	DD	FLAT:__unwindfunclet$?AI_chooseProduction@CvCityAI@@UAEX_N@Z$5
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvcityai.cpp
xdata$x	ENDS
;	COMDAT ?AI_chooseProduction@CvCityAI@@UAEX_N@Z
_TEXT	SEGMENT
_buildable$223295 = -164				; size = 12
_playerName$223298 = -152				; size = 28
_strBaseString$223300 = -124				; size = 28
_strOutBuf$223301 = -96					; size = 28
$T223813 = -68						; size = 28
$T223812 = -68						; size = 28
$T223811 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_bInterruptWonders$ = 8					; size = 1
?AI_chooseProduction@CvCityAI@@UAEX_N@Z PROC		; CvCityAI::AI_chooseProduction, COMDAT
; _this$ = ecx

; 84   : {

	push	-1
	mov	eax, DWORD PTR fs:0
	push	__ehhandler$?AI_chooseProduction@CvCityAI@@UAEX_N@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 152				; 00000098H
	push	ebx
	push	ebp
	push	esi
	mov	esi, ecx

; 85   : 	VALIDATE_OBJECT
; 86   : 	CvPlayerAI& kOwner = GET_PLAYER(getOwner());

	mov	ebx, DWORD PTR [esi+84]
	imul	ebx, 63236				; 0000f704H
	add	ebx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	edi

; 87   : 	CvCitySpecializationAI* pSpecializationAI = kOwner.GetCitySpecializationAI();

	mov	ecx, ebx
	call	?GetCitySpecializationAI@CvPlayer@@QBEPAVCvCitySpecializationAI@@XZ ; CvPlayer::GetCitySpecializationAI
	mov	ebp, eax

; 88   : 	bool bBuildWonder = false;
; 89   : 
; 90   : 	// See if this is the one AI city that is supposed to be building wonders
; 91   : 	if(pSpecializationAI->GetWonderBuildCity() == this)

	mov	ecx, ebp
	call	?GetWonderBuildCity@CvCitySpecializationAI@@QBEPAVCvCity@@XZ ; CvCitySpecializationAI::GetWonderBuildCity
	cmp	eax, esi
	jne	SHORT $LN77@AI_chooseP

; 92   : 	{
; 93   : 		// Is it still working on that wonder and we don't want to interrupt it?
; 94   : 		if(!bInterruptWonders)

	cmp	BYTE PTR _bInterruptWonders$[esp+176], 0
	jne	SHORT $LN75@AI_chooseP

; 95   : 		{
; 96   : 			const BuildingTypes eBuilding = getProductionBuilding();

	mov	ecx, esi
	call	?getProductionBuilding@CvCity@@QBE?AW4BuildingTypes@@XZ ; CvCity::getProductionBuilding

; 97   : 			CvBuildingEntry* pkBuilding = (eBuilding != NO_BUILDING)? GC.getBuildingInfo(eBuilding) : NULL;

	cmp	eax, -1
	je	SHORT $LN75@AI_chooseP
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo

; 98   : 			if(pkBuilding && kOwner.GetWonderProductionAI()->IsWonder(*pkBuilding))

	test	eax, eax
	je	SHORT $LN75@AI_chooseP
	push	eax
	mov	ecx, ebx
	call	?GetWonderProductionAI@CvPlayer@@QBEPAVCvWonderProductionAI@@XZ ; CvPlayer::GetWonderProductionAI
	mov	ecx, eax
	call	?IsWonder@CvWonderProductionAI@@QBE_NABVCvBuildingEntry@@@Z ; CvWonderProductionAI::IsWonder
	test	al, al
	jne	SHORT $LN1@AI_chooseP
$LN75@AI_chooseP:

; 99   : 			{
; 100  : 				return;  // Stay the course
; 101  : 			}
; 102  : 		}
; 103  : 
; 104  : 		// So we're the wonder building city but it is not underway yet...
; 105  : 
; 106  : 		// Has the designated wonder been poached by another civ?
; 107  : 		BuildingTypes eNextWonder = pSpecializationAI->GetNextWonderDesired();

	mov	eax, DWORD PTR [ebp+196]

; 108  : 		if(!canConstruct(eNextWonder))

	push	0
	push	0
	push	0
	push	0
	push	eax
	mov	ecx, esi
	call	?canConstruct@CvCity@@QBE_NW4BuildingTypes@@_N11PAVCvString@@@Z ; CvCity::canConstruct
	test	al, al
	jne	SHORT $LN6@AI_chooseP

; 109  : 		{
; 110  : 			// Reset city specialization
; 111  : 			kOwner.GetCitySpecializationAI()->SetSpecializationsDirty(SPECIALIZATION_UPDATE_WONDER_BUILT_BY_RIVAL);

	push	8
	mov	ecx, ebx
	call	?GetCitySpecializationAI@CvPlayer@@QBEPAVCvCitySpecializationAI@@XZ ; CvPlayer::GetCitySpecializationAI
	mov	ecx, eax
	call	?SetSpecializationsDirty@CvCitySpecializationAI@@QAEXW4CitySpecializationUpdateType@@@Z ; CvCitySpecializationAI::SetSpecializationsDirty
$LN77@AI_chooseP:

; 158  : 	{
; 159  : 		m_pCityStrategyAI->ChooseProduction(false);

	mov	ecx, DWORD PTR [esi+2896]
	push	-1
	push	-1
	push	0
	call	?ChooseProduction@CvCityStrategyAI@@QAEX_NW4BuildingTypes@@W4UnitTypes@@@Z ; CvCityStrategyAI::ChooseProduction

; 160  : 		AI_setChooseProductionDirty(false);

	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+24]
	push	0
	mov	ecx, esi
	call	eax
$LN1@AI_chooseP:

; 161  : 	}
; 162  : 
; 163  : 	return;
; 164  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+180]
	pop	edi
	pop	esi
	pop	ebp
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	add	esp, 164				; 000000a4H
	ret	4
$LN6@AI_chooseP:

; 112  : 		}
; 113  : 		else
; 114  : 		{
; 115  : 			// to prevent us from continuously locking into building wonders in one city when there are other high priority items to build
; 116  : 			int iFlavorWonder = kOwner.GetGrandStrategyAI()->GetPersonalityAndGrandStrategy((FlavorTypes)GC.getInfoTypeForString("FLAVOR_WONDER"));

	push	0
	push	OFFSET $SG223287
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	push	eax
	mov	ecx, ebx
	call	?GetGrandStrategyAI@CvPlayer@@QBEPAVCvGrandStrategyAI@@XZ ; CvPlayer::GetGrandStrategyAI
	mov	ecx, eax
	call	?GetPersonalityAndGrandStrategy@CvGrandStrategyAI@@QAEHW4FlavorTypes@@@Z ; CvGrandStrategyAI::GetPersonalityAndGrandStrategy

; 117  : 			int iFlavorGP = kOwner.GetGrandStrategyAI()->GetPersonalityAndGrandStrategy((FlavorTypes)GC.getInfoTypeForString("FLAVOR_GREAT_PEOPLE"));

	push	0
	push	OFFSET $SG223290
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	edi, eax
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	push	eax
	mov	ecx, ebx
	call	?GetGrandStrategyAI@CvPlayer@@QBEPAVCvGrandStrategyAI@@XZ ; CvPlayer::GetGrandStrategyAI
	mov	ecx, eax
	call	?GetPersonalityAndGrandStrategy@CvGrandStrategyAI@@QAEHW4FlavorTypes@@@Z ; CvGrandStrategyAI::GetPersonalityAndGrandStrategy

; 118  : 			int iFlavor = (iFlavorWonder > iFlavorGP ) ? iFlavorWonder : iFlavorGP;

	cmp	edi, eax
	jg	SHORT $LN15@AI_chooseP
	mov	edi, eax
$LN15@AI_chooseP:

; 119  : 			if (GC.getGame().getJonRandNum(11, "Random roll for whether to continue building wonders") <= iFlavor)

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	OFFSET $SG223293
	push	11					; 0000000bH
	call	?getJonRandNum@CvGame@@QAEHHPBD@Z	; CvGame::getJonRandNum
	cmp	eax, edi
	jg	$LN77@AI_chooseP

; 120  : 				bBuildWonder = true;
; 121  : 		}
; 122  : 	}
; 123  : 
; 124  : 	if(bBuildWonder)
; 125  : 	{
; 126  : 		CvCityBuildable buildable;
; 127  : 		buildable.m_eBuildableType = CITY_BUILDABLE_BUILDING;
; 128  : 		buildable.m_iIndex = pSpecializationAI->GetNextWonderDesired();

	mov	ebp, DWORD PTR [ebp+196]

; 129  : 		buildable.m_iTurnsToConstruct = getProductionTurnsLeft((BuildingTypes)buildable.m_eBuildableType, 0);

	push	0
	mov	edi, 1
	push	edi
	mov	ecx, esi
	call	?getProductionTurnsLeft@CvCity@@QBEHW4BuildingTypes@@H@Z ; CvCity::getProductionTurnsLeft

; 130  : 		pushOrder(ORDER_CONSTRUCT, buildable.m_iIndex, -1, false, false, false, false);

	push	0
	push	0
	push	0
	push	0
	push	-1
	push	ebp
	push	edi
	mov	ecx, esi
	mov	DWORD PTR _buildable$223295[esp+216], eax
	call	?pushOrder@CvCity@@QAEXW4OrderTypes@@HH_N111@Z ; CvCity::pushOrder

; 131  : 
; 132  : 		if(GC.getLogging() && GC.getAILogging())

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging
	test	al, al
	je	$LN1@AI_chooseP
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getAILogging@CvGlobals@@QAE_NXZ	; CvGlobals::getAILogging
	test	al, al
	je	$LN1@AI_chooseP

; 133  : 		{
; 134  : 			CvString playerName;

	lea	ecx, DWORD PTR _playerName$223298[esp+180]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 135  : 			FILogFile* pLog;
; 136  : 			CvString strBaseString;

	lea	ecx, DWORD PTR _strBaseString$223300[esp+180]
	mov	DWORD PTR __$EHRec$[esp+188], 0
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 137  : 			CvString strOutBuf;

	lea	ecx, DWORD PTR _strOutBuf$223301[esp+180]
	mov	BYTE PTR __$EHRec$[esp+188], 1
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 138  : 
; 139  : 			m_pCityStrategyAI->LogCityProduction(buildable, false);

	mov	ecx, DWORD PTR _buildable$223295[esp+188]
	push	0
	sub	esp, 12					; 0000000cH
	mov	eax, esp
	mov	DWORD PTR [eax], edi
	mov	DWORD PTR [eax+4], ebp
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR [esi+2896]
	mov	BYTE PTR __$EHRec$[esp+204], 2
	call	?LogCityProduction@CvCityStrategyAI@@QAEXUCvCityBuildable@@_N@Z ; CvCityStrategyAI::LogCityProduction

; 140  : 
; 141  : 			playerName = kOwner.getCivilizationShortDescription();

	mov	ecx, ebx
	call	?getCivilizationShortDescription@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescription
	lea	ecx, DWORD PTR _playerName$223298[esp+180]
	test	eax, eax
	je	SHORT $LN46@AI_chooseP
	push	eax
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN45@AI_chooseP
$LN46@AI_chooseP:
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN45@AI_chooseP:

; 142  : 			pLog = LOGFILEMGR.GetLog(kOwner.GetCitySpecializationAI()->GetLogFileName(playerName), FILogFile::kDontTimeStamp);

	call	?GetInstance@FILogFileMgr@@SAAAV1@XZ	; FILogFileMgr::GetInstance
	lea	edx, DWORD PTR _playerName$223298[esp+180]
	mov	edi, eax
	push	edx
	lea	eax, DWORD PTR $T223811[esp+184]
	push	eax
	mov	ecx, ebx
	call	?GetCitySpecializationAI@CvPlayer@@QBEPAVCvCitySpecializationAI@@XZ ; CvPlayer::GetCitySpecializationAI
	mov	ecx, eax
	call	?GetLogFileName@CvCitySpecializationAI@@QBE?AVCvString@@AAV2@@Z ; CvCitySpecializationAI::GetLogFileName
	mov	ecx, eax
	mov	BYTE PTR __$EHRec$[esp+188], 3
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	edx, DWORD PTR [edi]
	push	0
	push	1
	push	eax
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, edi
	call	eax
	lea	ecx, DWORD PTR $T223811[esp+180]
	mov	edi, eax
	mov	BYTE PTR __$EHRec$[esp+188], 2
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 143  : 			strBaseString.Format("%03d, ", GC.getGame().getElapsedGameTurns());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getElapsedGameTurns@CvGame@@QBEHXZ	; CvGame::getElapsedGameTurns
	push	eax
	lea	ecx, DWORD PTR _strBaseString$223300[esp+184]
	push	OFFSET $SG223303
	push	ecx
	call	?Format@CvString@@QAAXPBDZZ		; CvString::Format

; 144  : 			strBaseString += playerName + ", ";

	push	OFFSET $SG223305
	lea	edx, DWORD PTR _playerName$223298[esp+196]
	push	edx
	lea	eax, DWORD PTR $T223812[esp+200]
	push	eax
	call	DWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
	add	esp, 24					; 00000018H
	push	eax
	lea	ecx, DWORD PTR _strBaseString$223300[esp+184]
	mov	BYTE PTR __$EHRec$[esp+192], 4
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T223812[esp+180]
	mov	BYTE PTR __$EHRec$[esp+188], 2
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 145  : #ifdef AUI_WARNING_FIXES
; 146  : 			CvBuildingEntry* pWonderInfo = GC.getBuildingInfo((BuildingTypes)buildable.m_iIndex);
; 147  : 			if (pWonderInfo)
; 148  : 				strOutBuf.Format("%s, WONDER - Started %s, Turns: %d", getName().GetCString(), pWonderInfo->GetDescription(), buildable.m_iTurnsToConstruct);
; 149  : #else
; 150  : 			strOutBuf.Format("%s, WONDER - Started %s, Turns: %d", getName().GetCString(), GC.getBuildingInfo((BuildingTypes)buildable.m_iIndex)->GetDescription(), buildable.m_iTurnsToConstruct);

	lea	ecx, DWORD PTR $T223813[esp+180]
	push	ecx
	mov	ecx, esi
	call	?getName@CvCity@@QBE?BVCvString@@XZ	; CvCity::getName
	mov	esi, eax
	push	ebp
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	BYTE PTR __$EHRec$[esp+192], 5
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	lea	ecx, DWORD PTR [eax+36]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	ecx, esi
	mov	ebx, eax
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	edx, DWORD PTR _buildable$223295[esp+188]
	push	edx
	push	ebx
	push	eax
	lea	eax, DWORD PTR _strOutBuf$223301[esp+192]
	push	OFFSET $SG223308
	push	eax
	call	?Format@CvString@@QAAXPBDZZ		; CvString::Format
	add	esp, 20					; 00000014H
	lea	ecx, DWORD PTR $T223813[esp+180]
	mov	BYTE PTR __$EHRec$[esp+188], 2
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 151  : #endif
; 152  : 			strBaseString += strOutBuf;

	lea	ecx, DWORD PTR _strOutBuf$223301[esp+180]
	push	ecx
	lea	ecx, DWORD PTR _strBaseString$223300[esp+184]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z

; 153  : 			pLog->Msg(strBaseString);

	lea	ecx, DWORD PTR _strBaseString$223300[esp+180]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	edx, DWORD PTR [edi]
	push	eax
	mov	eax, DWORD PTR [edx]
	push	edi
	call	eax
	add	esp, 8

; 154  : 		}

	lea	ecx, DWORD PTR _strOutBuf$223301[esp+180]
	mov	BYTE PTR __$EHRec$[esp+188], 1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR _strBaseString$223300[esp+180]
	mov	BYTE PTR __$EHRec$[esp+188], 0
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR _playerName$223298[esp+180]
	mov	DWORD PTR __$EHRec$[esp+188], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 155  : 	}
; 156  : 
; 157  : 	else

	jmp	$LN1@AI_chooseP
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AI_chooseProduction@CvCityAI@@UAEX_N@Z$0:
	lea	ecx, DWORD PTR _playerName$223298[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?AI_chooseProduction@CvCityAI@@UAEX_N@Z$1:
	lea	ecx, DWORD PTR _strBaseString$223300[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?AI_chooseProduction@CvCityAI@@UAEX_N@Z$2:
	lea	ecx, DWORD PTR _strOutBuf$223301[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?AI_chooseProduction@CvCityAI@@UAEX_N@Z$3:
	lea	ecx, DWORD PTR $T223811[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?AI_chooseProduction@CvCityAI@@UAEX_N@Z$4:
	lea	ecx, DWORD PTR $T223812[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?AI_chooseProduction@CvCityAI@@UAEX_N@Z$5:
	lea	ecx, DWORD PTR $T223813[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?AI_chooseProduction@CvCityAI@@UAEX_N@Z:
	mov	eax, OFFSET __ehfuncinfo$?AI_chooseProduction@CvCityAI@@UAEX_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AI_chooseProduction@CvCityAI@@UAEX_N@Z ENDP		; CvCityAI::AI_chooseProduction
PUBLIC	?AI_stealPlots@CvCityAI@@IAEXXZ			; CvCityAI::AI_stealPlots
EXTRN	?setWorkingCityOverride@CvPlot@@QAEXPBVCvCity@@@Z:PROC ; CvPlot::setWorkingCityOverride
EXTRN	?getWorkingCityOverride@CvPlot@@QBEPAVCvCity@@XZ:PROC ; CvPlot::getWorkingCityOverride
EXTRN	?plotCity@@YAPAVCvPlot@@HHH@Z:PROC		; plotCity
; Function compile flags: /Ogtpy
;	COMDAT ?AI_stealPlots@CvCityAI@@IAEXXZ
_TEXT	SEGMENT
?AI_stealPlots@CvCityAI@@IAEXXZ PROC			; CvCityAI::AI_stealPlots, COMDAT
; _this$ = ecx

; 179  : {

	push	ebx
	push	esi
	push	edi
	mov	edi, ecx

; 180  : 	VALIDATE_OBJECT
; 181  : 	CvPlot* pLoopPlot = 0;
; 182  : 	int iI = 0;
; 183  : 
; 184  : 	for(iI = 0; iI < NUM_CITY_PLOTS; iI++)

	xor	ebx, ebx
$LL6@AI_stealPl:

; 185  : 	{
; 186  : 		pLoopPlot = plotCity(getX(),getY(),iI);

	mov	eax, DWORD PTR [edi+108]
	mov	ecx, DWORD PTR [edi+96]
	push	ebx
	push	eax
	push	ecx
	call	?plotCity@@YAPAVCvPlot@@HHH@Z		; plotCity
	mov	esi, eax
	add	esp, 12					; 0000000cH

; 187  : 
; 188  : 		if(pLoopPlot != NULL)

	test	esi, esi
	je	SHORT $LN5@AI_stealPl

; 189  : 		{
; 190  : 			if(pLoopPlot->getWorkingCityOverride() == this)

	mov	ecx, esi
	call	?getWorkingCityOverride@CvPlot@@QBEPAVCvCity@@XZ ; CvPlot::getWorkingCityOverride
	cmp	eax, edi
	jne	SHORT $LN5@AI_stealPl

; 191  : 			{
; 192  : 				if(pLoopPlot->getOwner() != getOwner())

	movsx	eax, BYTE PTR [esi+4]
	cmp	eax, DWORD PTR [edi+84]
	je	SHORT $LN5@AI_stealPl

; 193  : 				{
; 194  : 					pLoopPlot->setWorkingCityOverride(NULL);

	push	0
	mov	ecx, esi
	call	?setWorkingCityOverride@CvPlot@@QAEXPBVCvCity@@@Z ; CvPlot::setWorkingCityOverride
$LN5@AI_stealPl:
	inc	ebx
	cmp	ebx, 37					; 00000025H
	jl	SHORT $LL6@AI_stealPl
	pop	edi
	pop	esi
	pop	ebx

; 195  : 				}
; 196  : 			}
; 197  : 		}
; 198  : 	}
; 199  : }

	ret	0
?AI_stealPlots@CvCityAI@@IAEXXZ ENDP			; CvCityAI::AI_stealPlots
_TEXT	ENDS
PUBLIC	?read@CvCityAI@@QAEXAAVFDataStream@@@Z		; CvCityAI::read
EXTRN	?read@CvCity@@QAEXAAVFDataStream@@@Z:PROC	; CvCity::read
; Function compile flags: /Ogtpy
;	COMDAT ?read@CvCityAI@@QAEXAAVFDataStream@@@Z
_TEXT	SEGMENT
_uiVersion$ = 8						; size = 4
_kStream$ = 8						; size = 4
?read@CvCityAI@@QAEXAAVFDataStream@@@Z PROC		; CvCityAI::read, COMDAT
; _this$ = ecx

; 226  : {

	push	ebx
	push	ebp
	push	esi

; 227  : 	VALIDATE_OBJECT
; 228  : 	CvCity::read(kStream);

	mov	esi, DWORD PTR _kStream$[esp+8]
	push	edi
	push	esi
	mov	edi, ecx
	call	?read@CvCity@@QAEXAAVFDataStream@@@Z	; CvCity::read

; 229  : 
; 230  : 	// Version number to maintain backwards compatibility
; 231  : 	uint uiVersion;
; 232  : 	kStream >> uiVersion;

	lea	eax, DWORD PTR _uiVersion$[esp+12]
	push	eax
	mov	ecx, esi
	call	?Read@FDataStream@@IAEXAAI@Z		; FDataStream::Read

; 233  : 
; 234  : 	kStream >> m_bChooseProductionDirty;

	lea	ecx, DWORD PTR [edi+3108]
	push	ecx
	mov	ecx, esi
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 235  : 	kStream >> m_iCachePlayerClosenessTurn;

	lea	edx, DWORD PTR [edi+3112]
	push	edx
	mov	ecx, esi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 236  : 	kStream >> m_iCachePlayerClosenessDistance;

	lea	eax, DWORD PTR [edi+3116]
	push	eax
	mov	ecx, esi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read
	lea	ebx, DWORD PTR [edi+3120]
	mov	ebp, 80					; 00000050H

; 237  : 	kStream >> m_aiPlayerCloseness;

$LL13@read:
	push	ebx
	mov	ecx, esi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read
	add	ebx, 4
	sub	ebp, 1
	jne	SHORT $LL13@read

; 238  : 	kStream >> m_aiNumPlotsAcquiredByOtherPlayers;

	add	edi, 3440				; 00000d70H
	lea	ebx, DWORD PTR [ebp+80]
	npad	6
$LL20@read:
	push	edi
	mov	ecx, esi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read
	add	edi, 4
	sub	ebx, 1
	jne	SHORT $LL20@read
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 239  : }

	ret	4
?read@CvCityAI@@QAEXAAVFDataStream@@@Z ENDP		; CvCityAI::read
_TEXT	ENDS
PUBLIC	?write@CvCityAI@@QBEXAAVFDataStream@@@Z		; CvCityAI::write
EXTRN	?write@CvCity@@QBEXAAVFDataStream@@@Z:PROC	; CvCity::write
; Function compile flags: /Ogtpy
;	COMDAT ?write@CvCityAI@@QBEXAAVFDataStream@@@Z
_TEXT	SEGMENT
_uiVersion$ = 8						; size = 4
_kStream$ = 8						; size = 4
?write@CvCityAI@@QBEXAAVFDataStream@@@Z PROC		; CvCityAI::write, COMDAT
; _this$ = ecx

; 245  : {

	push	ebx
	push	ebp
	push	esi

; 246  : 	VALIDATE_OBJECT
; 247  : 	CvCity::write(kStream);

	mov	esi, DWORD PTR _kStream$[esp+8]
	push	edi
	push	esi
	mov	edi, ecx
	call	?write@CvCity@@QBEXAAVFDataStream@@@Z	; CvCity::write

; 248  : 
; 249  : 	// Current version number
; 250  : 	uint uiVersion = 1;
; 251  : 	kStream << uiVersion;

	lea	eax, DWORD PTR _uiVersion$[esp+12]
	push	eax
	mov	ecx, esi
	mov	DWORD PTR _uiVersion$[esp+16], 1
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write

; 252  : 
; 253  : 	kStream << m_bChooseProductionDirty;

	lea	ecx, DWORD PTR [edi+3108]
	push	ecx
	mov	ecx, esi
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 254  : 	kStream << m_iCachePlayerClosenessTurn;

	lea	edx, DWORD PTR [edi+3112]
	push	edx
	mov	ecx, esi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 255  : 	kStream << m_iCachePlayerClosenessDistance;

	lea	eax, DWORD PTR [edi+3116]
	push	eax
	mov	ecx, esi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write
	lea	ebx, DWORD PTR [edi+3120]
	mov	ebp, 80					; 00000050H
	npad	7

; 256  : 	kStream << m_aiPlayerCloseness;

$LL13@write:
	push	ebx
	mov	ecx, esi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write
	add	ebx, 4
	sub	ebp, 1
	jne	SHORT $LL13@write

; 257  : 	kStream << m_aiNumPlotsAcquiredByOtherPlayers;

	add	edi, 3440				; 00000d70H
	lea	ebx, DWORD PTR [ebp+80]
	npad	7
$LL20@write:
	push	edi
	mov	ecx, esi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write
	add	edi, 4
	sub	ebx, 1
	jne	SHORT $LL20@write
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 258  : }

	ret	4
?write@CvCityAI@@QBEXAAVFDataStream@@@Z ENDP		; CvCityAI::write
_TEXT	ENDS
PUBLIC	??6@YAAAVFDataStream@@AAV0@ABVCvCityAI@@@Z	; operator<<
; Function compile flags: /Ogtpy
;	COMDAT ??6@YAAAVFDataStream@@AAV0@ABVCvCityAI@@@Z
_TEXT	SEGMENT
_saveTo$ = 8						; size = 4
_readFrom$ = 12						; size = 4
??6@YAAAVFDataStream@@AAV0@ABVCvCityAI@@@Z PROC		; operator<<, COMDAT

; 262  : 	readFrom.write(saveTo);

	mov	ecx, DWORD PTR _readFrom$[esp-4]
	push	esi
	mov	esi, DWORD PTR _saveTo$[esp]
	push	esi
	call	?write@CvCityAI@@QBEXAAVFDataStream@@@Z	; CvCityAI::write

; 263  : 	return saveTo;

	mov	eax, esi
	pop	esi

; 264  : }

	ret	0
??6@YAAAVFDataStream@@AAV0@ABVCvCityAI@@@Z ENDP		; operator<<
_TEXT	ENDS
PUBLIC	??5@YAAAVFDataStream@@AAV0@AAVCvCityAI@@@Z	; operator>>
; Function compile flags: /Ogtpy
;	COMDAT ??5@YAAAVFDataStream@@AAV0@AAVCvCityAI@@@Z
_TEXT	SEGMENT
_loadFrom$ = 8						; size = 4
_writeTo$ = 12						; size = 4
??5@YAAAVFDataStream@@AAV0@AAVCvCityAI@@@Z PROC		; operator>>, COMDAT

; 267  : 	writeTo.read(loadFrom);

	mov	ecx, DWORD PTR _writeTo$[esp-4]
	push	esi
	mov	esi, DWORD PTR _loadFrom$[esp]
	push	esi
	call	?read@CvCityAI@@QAEXAAVFDataStream@@@Z	; CvCityAI::read

; 268  : 	return loadFrom;

	mov	eax, esi
	pop	esi

; 269  : }

	ret	0
??5@YAAAVFDataStream@@AAV0@AAVCvCityAI@@@Z ENDP		; operator>>
_TEXT	ENDS
EXTRN	?isHuman@CvCity@@QBE_NXZ:PROC			; CvCity::isHuman
; Function compile flags: /Ogtpy
;	COMDAT ?AI_doTurn@CvCityAI@@UAEXXZ
_TEXT	SEGMENT
?AI_doTurn@CvCityAI@@UAEXXZ PROC			; CvCityAI::AI_doTurn, COMDAT
; _this$ = ecx

; 74   : {

	push	esi
	mov	esi, ecx

; 75   : 	AI_PERF_FORMAT("City-AI-perf.csv", ("CvCityAI::AI_doTurn, Turn %03d, %s, %s", GC.getGame().getElapsedGameTurns(), GetPlayer()->getCivilizationShortDescription(), getName().c_str()) );
; 76   : 	VALIDATE_OBJECT
; 77   : 	if(!isHuman())

	call	?isHuman@CvCity@@QBE_NXZ		; CvCity::isHuman
	test	al, al
	jne	SHORT $LN1@AI_doTurn

; 78   : 	{
; 79   : 		AI_stealPlots();

	mov	ecx, esi
	pop	esi
	jmp	?AI_stealPlots@CvCityAI@@IAEXXZ		; CvCityAI::AI_stealPlots
$LN1@AI_doTurn:
	pop	esi

; 80   : 	}
; 81   : }

	ret	0
?AI_doTurn@CvCityAI@@UAEXXZ ENDP			; CvCityAI::AI_doTurn
_TEXT	ENDS
END
